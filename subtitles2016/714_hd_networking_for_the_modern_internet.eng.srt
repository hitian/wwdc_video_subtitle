1
00:00:06,516 --> 00:00:18,500
[ Music ]

2
00:00:22,516 --> 00:00:28,496
[ Applause ]

3
00:00:28,996 --> 00:00:30,296
&gt;&gt; Good afternoon,

4
00:00:30,826 --> 00:00:32,326
It's great to see

5
00:00:33,216 --> 00:00:35,946
How many of you are here

6
00:00:37,636 --> 00:00:39,056
Wow! That's incredible.

7
00:00:39,096 --> 00:00:40,156
Well, welcome.

8
00:00:40,156 --> 00:00:42,826
I hope WWDC is going

9
00:00:42,826 --> 00:00:46,606
Now we're going to talk

10
00:00:47,686 --> 00:00:49,326
I've got five things

11
00:00:49,896 --> 00:00:51,426
We're going to give

12
00:00:51,966 --> 00:00:54,646
on Explicit Congestion

13
00:00:54,646 --> 00:00:55,776
that we talked about last year.

14
00:00:56,626 --> 00:00:59,386
We're going to give you an

15
00:00:59,426 --> 00:01:04,166
We're going to talk a little

16
00:00:59,426 --> 00:01:04,166
We're going to talk a little

17
00:01:04,416 --> 00:01:06,106
which is becoming

18
00:01:07,606 --> 00:01:11,476
We're going to explore

19
00:01:11,476 --> 00:01:13,916
to network interfaces

20
00:01:13,916 --> 00:01:15,656
up big data bills

21
00:01:16,416 --> 00:01:19,276
And we're going to finish

22
00:01:19,276 --> 00:01:20,766
of network quality of service.

23
00:01:21,606 --> 00:01:24,796
You may have heard

24
00:01:25,016 --> 00:01:26,176
Fastlane announcement.

25
00:01:26,686 --> 00:01:28,646
We're going to talk a

26
00:01:28,646 --> 00:01:30,226
that might apply to

27
00:01:33,086 --> 00:01:34,266
So let's start with ECN.

28
00:01:36,486 --> 00:01:38,046
To recap from last year,

29
00:01:39,316 --> 00:01:41,456
we showed how Smart

30
00:01:42,066 --> 00:01:46,956
and marking packets instead of

31
00:01:48,056 --> 00:01:50,356
reduce delays due

32
00:01:50,996 --> 00:01:55,206
and improve the user

33
00:01:55,286 --> 00:01:57,176
and especially for things

34
00:02:00,326 --> 00:02:06,656
In iOS 9, we did not enable

35
00:02:06,826 --> 00:02:08,316
but in an unrelated change,

36
00:02:08,366 --> 00:02:11,836
the VPN software would pay

37
00:02:11,836 --> 00:02:16,086
We found one ISP in Germany

38
00:02:16,176 --> 00:02:19,826
"congestion experienced,"

39
00:02:20,426 --> 00:02:22,886
The good news is they

40
00:02:22,886 --> 00:02:23,916
within a couple of weeks.

41
00:02:24,186 --> 00:02:26,696
We had no reports of any

42
00:02:26,696 --> 00:02:30,936
in the world, and what that

43
00:02:30,936 --> 00:02:34,866
out iOS all around the world,

44
00:02:35,586 --> 00:02:37,646
the Internet is now

45
00:02:39,746 --> 00:02:46,286
And because of that, in iOS

46
00:02:47,116 --> 00:02:50,716
five percent of TCP connections

47
00:02:50,716 --> 00:02:55,456
and we're using this to gather

48
00:02:55,456 --> 00:02:57,956
that the Internet

49
00:02:58,576 --> 00:03:01,576
In the Developer Seed

50
00:02:58,576 --> 00:03:01,576
In the Developer Seed

51
00:03:02,216 --> 00:03:06,106
100 percent of Wi-Fi connections

52
00:03:06,106 --> 00:03:08,886
on these three carriers

53
00:03:10,636 --> 00:03:16,356
So last year, I reported

54
00:03:16,626 --> 00:03:20,776
of the Alexa top million

55
00:03:21,246 --> 00:03:24,326
which is a pretty

56
00:03:24,326 --> 00:03:26,026
for a technology

57
00:03:27,456 --> 00:03:33,886
I talked to my good friends

58
00:03:34,576 --> 00:03:37,076
Brian Trammell and

59
00:03:37,076 --> 00:03:39,786
and their colleagues reran

60
00:03:40,436 --> 00:03:43,066
This year the percentage

61
00:03:43,446 --> 00:03:46,996
And if you only look at IPv6

62
00:03:47,856 --> 00:03:55,766
So this is a call to

63
00:03:56,116 --> 00:03:58,006
and their vendors who

64
00:03:58,826 --> 00:04:00,406
The clients are now doing ECN.

65
00:03:58,826 --> 00:04:00,406
The clients are now doing ECN.

66
00:04:00,826 --> 00:04:02,326
The services are supporting ECN.

67
00:04:02,796 --> 00:04:04,416
It's time for the

68
00:04:04,756 --> 00:04:07,296
to start marking packets

69
00:04:07,796 --> 00:04:09,606
It gives you a better

70
00:04:10,526 --> 00:04:13,276
it reduces delays due

71
00:04:13,456 --> 00:04:15,356
and it makes more

72
00:04:15,486 --> 00:04:17,305
because you are avoiding

73
00:04:17,305 --> 00:04:20,005
retransmitting packets.

74
00:04:21,005 --> 00:04:23,616
Our next topic is IPv6.

75
00:04:26,486 --> 00:04:30,806
World IPv6 launch was

76
00:04:31,656 --> 00:04:34,856
and it continues to grow.

77
00:04:36,146 --> 00:04:39,496
I looked at a variety of

78
00:04:39,496 --> 00:04:42,066
to show you just a

79
00:04:42,656 --> 00:04:49,026
I looked at accesses to Apple's

80
00:04:49,686 --> 00:04:53,716
In Belgium, it's now

81
00:04:54,696 --> 00:04:57,386
On T-Mobile USA, we're

82
00:04:58,696 --> 00:05:01,846
On Verizon, we're

83
00:04:58,696 --> 00:05:01,846
On Verizon, we're

84
00:05:02,346 --> 00:05:05,906
So it's pretty clear

85
00:05:06,186 --> 00:05:08,686
that IPv6 traffic

86
00:05:10,586 --> 00:05:12,896
And the reason is clear.

87
00:05:13,586 --> 00:05:16,766
IPv6 is simpler,

88
00:05:16,766 --> 00:05:18,266
it's less expensive to operate.

89
00:05:18,356 --> 00:05:21,966
So it's very clear why the

90
00:05:22,036 --> 00:05:26,556
But at what cost to

91
00:05:27,096 --> 00:05:28,796
Is IPv6 less mature?

92
00:05:29,106 --> 00:05:30,136
Is it slower?

93
00:05:30,466 --> 00:05:33,596
Is there less capacity

94
00:05:33,936 --> 00:05:38,216
These are important

95
00:05:38,386 --> 00:05:41,296
and developers pay

96
00:05:42,136 --> 00:05:45,796
They use statistics

97
00:05:45,906 --> 00:05:49,186
to measure things like page

98
00:05:49,186 --> 00:05:52,496
of their users viewing the

99
00:05:52,666 --> 00:05:56,246
so they can tell how well

100
00:05:56,356 --> 00:05:59,396
in different countries around

101
00:05:59,576 --> 00:06:00,846
different carrier networks.

102
00:05:59,576 --> 00:06:00,846
different carrier networks.

103
00:06:02,856 --> 00:06:06,636
LinkedIn reports that now 10

104
00:06:06,636 --> 00:06:11,196
over IPv6, and they find the

105
00:06:11,356 --> 00:06:14,146
to 40 percent faster

106
00:06:15,396 --> 00:06:18,816
They theorize that that

107
00:06:19,596 --> 00:06:22,856
setting up connections through

108
00:06:23,846 --> 00:06:25,976
Facebook found similar results.

109
00:06:26,036 --> 00:06:28,926
45 percent of their

110
00:06:29,816 --> 00:06:32,026
and they reported recently

111
00:06:32,266 --> 00:06:37,636
that on average ATP GET requests

112
00:06:37,696 --> 00:06:42,756
If you only look at the iPhone

113
00:06:43,026 --> 00:06:45,586
it turns out to be

114
00:06:47,866 --> 00:06:53,766
So IPv6 is better for

115
00:06:54,386 --> 00:06:56,366
It's better for users

116
00:06:56,806 --> 00:07:01,596
And that's why Apple is 100

117
00:06:56,806 --> 00:07:01,596
And that's why Apple is 100

118
00:07:01,906 --> 00:07:02,656
to IPv6.

119
00:07:03,446 --> 00:07:07,196
And you will have all seen

120
00:07:08,056 --> 00:07:11,226
We announced last year we were

121
00:07:12,156 --> 00:07:14,766
to be compatible

122
00:07:15,106 --> 00:07:19,886
and we said we would be testing

123
00:07:19,886 --> 00:07:21,146
with the NAT64 Gateway.

124
00:07:22,386 --> 00:07:25,326
Starting this month we started

125
00:07:25,806 --> 00:07:29,056
and we looked very

126
00:07:29,496 --> 00:07:32,046
that this was causing

127
00:07:32,046 --> 00:07:35,566
of application rejection,

128
00:07:35,896 --> 00:07:38,306
we would have to look into

129
00:07:38,856 --> 00:07:41,896
But the good news is,

130
00:07:42,596 --> 00:07:46,046
we don't find any change

131
00:07:46,506 --> 00:07:51,626
so what that really tell us is

132
00:07:51,736 --> 00:07:53,866
that are working just

133
00:07:54,226 --> 00:07:57,106
which is what we expected,

134
00:07:57,106 --> 00:07:58,066
to have that confirmed.

135
00:07:59,396 --> 00:08:01,996
Now, if you've had

136
00:07:59,396 --> 00:08:01,996
Now, if you've had

137
00:08:02,156 --> 00:08:06,906
and you think it might be to

138
00:08:06,906 --> 00:08:08,586
to the labs today or tomorrow.

139
00:08:09,226 --> 00:08:12,596
You can test your app here

140
00:08:12,596 --> 00:08:17,406
and we can help you troubleshoot

141
00:08:18,636 --> 00:08:22,246
Our advice continues to

142
00:08:23,036 --> 00:08:27,996
use the high level APIs that

143
00:08:31,066 --> 00:08:34,405
If you have to use the

144
00:08:34,405 --> 00:08:38,756
then there is extra work that

145
00:08:39,275 --> 00:08:42,046
which is why we really advise

146
00:08:42,046 --> 00:08:42,846
that do that for you.

147
00:08:44,035 --> 00:08:47,776
Another key piece of

148
00:08:48,476 --> 00:08:50,206
not literal IPv4 addresses.

149
00:08:50,756 --> 00:08:54,496
Because IPv4 addresses are

150
00:08:54,976 --> 00:08:57,306
And let me give you a

151
00:08:58,816 --> 00:09:01,336
This is a typical situation

152
00:08:58,816 --> 00:09:01,336
This is a typical situation

153
00:09:01,336 --> 00:09:02,916
You have a client on IPv4.

154
00:09:02,976 --> 00:09:04,556
You have a server on IPv4.

155
00:09:04,626 --> 00:09:08,126
The packets make their little

156
00:09:08,566 --> 00:09:12,846
and that's how you

157
00:09:12,926 --> 00:09:16,466
Nowadays, many more carriers

158
00:09:16,986 --> 00:09:20,596
with a NAT64 Gateway, and the

159
00:09:20,596 --> 00:09:22,666
detour through the NAT

160
00:09:22,666 --> 00:09:25,906
to that old legacy IPv4

161
00:09:28,926 --> 00:09:34,486
Now, if your data center guys

162
00:09:35,046 --> 00:09:38,376
but you're still using

163
00:09:39,026 --> 00:09:41,676
then the packets are going

164
00:09:41,676 --> 00:09:44,596
through the NAT to get to the

165
00:09:45,486 --> 00:09:47,076
But if you look up by hostname

166
00:09:47,076 --> 00:09:50,916
and they put the IPv6

167
00:09:51,806 --> 00:09:57,006
that's how you get the straight

168
00:09:57,006 --> 00:09:57,896
through the NAT Gateway.

169
00:10:02,446 --> 00:10:03,996
I talked about literal

170
00:10:05,396 --> 00:10:09,166
We now support using

171
00:10:09,286 --> 00:10:10,496
in selected APIs.

172
00:10:11,616 --> 00:10:13,396
And if you use one

173
00:10:13,846 --> 00:10:18,416
we will actually do the DNS64

174
00:10:18,416 --> 00:10:22,896
on the device, create a

175
00:10:22,896 --> 00:10:25,336
corresponding with your v4

176
00:10:25,696 --> 00:10:27,806
and then connect through

177
00:10:29,026 --> 00:10:33,676
Now, remember, using literal v4

178
00:10:33,676 --> 00:10:35,576
from ever connecting

179
00:10:35,576 --> 00:10:39,296
But that said, if that's what

180
00:10:40,536 --> 00:10:42,976
here is an example

181
00:10:44,816 --> 00:10:47,966
If you're writing

182
00:10:48,526 --> 00:10:51,316
and the high layer

183
00:10:51,316 --> 00:10:52,276
for you automatically.

184
00:10:52,756 --> 00:10:55,546
But if you're writing

185
00:10:55,546 --> 00:10:58,376
and you're using BSD

186
00:10:58,376 --> 00:10:59,876
to use is getaddrinfo.

187
00:11:00,966 --> 00:11:03,346
You pass in the address

188
00:11:03,346 --> 00:11:04,866
to as a literal string.

189
00:11:06,156 --> 00:11:07,496
You pass in the port you want.

190
00:11:07,496 --> 00:11:10,886
Here https is a synonym

191
00:11:12,266 --> 00:11:14,466
You loop through all

192
00:11:14,746 --> 00:11:16,546
Remember, don't just

193
00:11:16,546 --> 00:11:18,996
You'll get back an array of

194
00:11:19,756 --> 00:11:21,436
of course, free the memory

195
00:11:23,956 --> 00:11:27,436
Another question we

196
00:11:27,756 --> 00:11:29,606
about the Internet of things.

197
00:11:30,416 --> 00:11:33,076
There are developers

198
00:11:33,076 --> 00:11:34,566
with the device that

199
00:11:35,446 --> 00:11:39,696
and some of those devices

200
00:11:40,636 --> 00:11:43,536
Now, we'd like those

201
00:11:44,706 --> 00:11:47,506
And if they don't support

202
00:11:47,506 --> 00:11:50,156
at least support IPv4

203
00:11:50,906 --> 00:11:52,876
So even on a v6 only network,

204
00:11:53,646 --> 00:11:56,716
devices can use v4 amongst

205
00:11:56,996 --> 00:11:58,046
with link-local addressing.

206
00:11:59,306 --> 00:12:00,956
Now, if the device

207
00:11:59,306 --> 00:12:00,956
Now, if the device

208
00:12:00,956 --> 00:12:02,876
of those things, that's okay.

209
00:12:03,566 --> 00:12:06,176
Inform app review, when

210
00:12:07,116 --> 00:12:09,706
that is not grounds for

211
00:12:10,086 --> 00:12:12,746
It probably is grounds

212
00:12:12,746 --> 00:12:13,996
of these stickers on the device.

213
00:12:14,316 --> 00:12:20,096
[Laughter] And remember, all off

214
00:12:20,096 --> 00:12:23,536
to be compatible

215
00:12:26,356 --> 00:12:32,256
So to summarize, we recommend

216
00:12:33,146 --> 00:12:35,466
at both ends, in the

217
00:12:36,386 --> 00:12:38,356
We recommend you use hostnames.

218
00:12:38,756 --> 00:12:41,206
That way you can get a v4

219
00:12:41,206 --> 00:12:43,986
and a v6 address

220
00:12:45,626 --> 00:12:47,546
If you do need to use

221
00:12:48,056 --> 00:12:50,206
those are now supported

222
00:12:50,616 --> 00:12:51,666
as long as you do it properly.

223
00:12:51,666 --> 00:12:55,496
But remember, imbedding

224
00:12:55,586 --> 00:12:57,856
communication to v6

225
00:13:00,156 --> 00:13:03,436
So that brings us to our next

226
00:13:06,476 --> 00:13:08,516
You may have started to

227
00:13:09,126 --> 00:13:10,986
and if you're a native

228
00:13:11,486 --> 00:13:14,076
this can look pretty

229
00:13:15,276 --> 00:13:17,286
And what I want to talk

230
00:13:17,286 --> 00:13:20,136
about today is how

231
00:13:20,916 --> 00:13:24,446
International support in

232
00:13:24,446 --> 00:13:25,366
to be a big task.

233
00:13:25,956 --> 00:13:28,766
In fact, it really is no

234
00:13:29,416 --> 00:13:33,196
So even though the title of this

235
00:13:33,196 --> 00:13:35,976
and Networking, really we

236
00:13:37,146 --> 00:13:38,346
For now I just want to talk

237
00:13:38,346 --> 00:13:41,326
about how you support

238
00:13:43,616 --> 00:13:45,546
I'm going to start

239
00:13:46,196 --> 00:13:49,846
Not because many of you will

240
00:13:49,846 --> 00:13:53,136
to day, but I want to

241
00:13:53,406 --> 00:13:58,126
and make it less scary,

242
00:13:58,126 --> 00:13:59,276
complicated than ASCII.

243
00:14:00,206 --> 00:14:02,076
So the first concept

244
00:14:03,526 --> 00:14:07,686
Unicode is a big list of

245
00:14:07,686 --> 00:14:11,206
to each number a human

246
00:14:11,966 --> 00:14:15,366
and it's like a big

247
00:14:15,366 --> 00:14:17,046
In fact, it is available

248
00:14:17,236 --> 00:14:19,176
It's a big, thick book

249
00:14:19,176 --> 00:14:20,126
of number and character.

250
00:14:21,226 --> 00:14:23,406
And that's an abstract concept.

251
00:14:23,626 --> 00:14:26,166
You have integers and you have

252
00:14:27,026 --> 00:14:31,046
Now, to use those integers in

253
00:14:31,046 --> 00:14:34,146
of representing those

254
00:14:34,356 --> 00:14:35,966
on disk, over the network.

255
00:14:37,016 --> 00:14:40,106
One way of representing

256
00:14:40,866 --> 00:14:43,196
which is just a 32-bit number.

257
00:14:43,696 --> 00:14:45,246
And like any 32-bit number,

258
00:14:45,696 --> 00:14:47,486
you have to be concerned

259
00:14:47,486 --> 00:14:48,276
or little endian.

260
00:14:49,066 --> 00:14:52,196
And it takes up four times

261
00:14:54,226 --> 00:14:55,946
UTF-16 is more compact.

262
00:14:55,946 --> 00:14:57,876
It uses 16-bit numbers.

263
00:14:58,206 --> 00:15:01,386
It still has the same problem of

264
00:14:58,206 --> 00:15:01,386
It still has the same problem of

265
00:15:02,486 --> 00:15:04,286
and because it's only 16-bits,

266
00:15:04,286 --> 00:15:06,796
it can only represent

267
00:15:07,366 --> 00:15:09,446
So you have to use

268
00:15:09,626 --> 00:15:11,696
to represent the values

269
00:15:11,696 --> 00:15:12,856
So that's a bit cumbersome.

270
00:15:14,446 --> 00:15:18,606
UTF-8 is an 8-bit

271
00:15:19,316 --> 00:15:21,726
Because of that, there

272
00:15:22,396 --> 00:15:28,536
and this is really what makes

273
00:15:28,686 --> 00:15:31,296
So let's dive in a

274
00:15:32,966 --> 00:15:38,386
It was invented late night in

275
00:15:38,416 --> 00:15:41,976
of those rare pieces of

276
00:15:42,296 --> 00:15:44,156
And when I first

277
00:15:44,316 --> 00:15:46,556
I immediately saw,

278
00:15:46,556 --> 00:15:48,426
This solves the problem

279
00:15:49,156 --> 00:15:52,276
So I want to tell you guys a

280
00:15:52,276 --> 00:15:54,786
so you can understand

281
00:15:57,386 --> 00:15:59,356
The Codepoints in Unicode from 0

282
00:15:59,356 --> 00:16:02,506
to 7F are exactly the

283
00:15:59,356 --> 00:16:02,506
to 7F are exactly the

284
00:16:02,836 --> 00:16:06,106
And UTF represents them using

285
00:16:06,776 --> 00:16:09,316
So what that means is if

286
00:16:09,316 --> 00:16:13,786
of plain ASCII files, I can wave

287
00:16:14,166 --> 00:16:15,676
I declare you to be UTF-8.

288
00:16:16,476 --> 00:16:18,426
Not a single byte

289
00:16:19,186 --> 00:16:21,266
The meaning of the

290
00:16:21,946 --> 00:16:24,716
You have automatic backwards

291
00:16:24,716 --> 00:16:28,036
that legacy of ASCII, so

292
00:16:28,096 --> 00:16:31,716
UTF-16, UTF-32, other encodings

293
00:16:32,096 --> 00:16:36,306
For the values that are

294
00:16:36,686 --> 00:16:39,506
they are represented as

295
00:16:39,696 --> 00:16:43,096
But all those multi-byte

296
00:16:43,436 --> 00:16:45,726
above 128.

297
00:16:46,386 --> 00:16:50,146
So there was no overlap

298
00:16:50,356 --> 00:16:51,936
and the multi-byte encodings

299
00:16:52,206 --> 00:16:54,756
of the higher value

300
00:16:55,466 --> 00:16:57,926
That property is not

301
00:16:58,176 --> 00:17:01,036
that re-use the high code

302
00:16:58,176 --> 00:17:01,036
that re-use the high code

303
00:17:02,736 --> 00:17:06,116
UTF-8 has three flavors

304
00:17:06,646 --> 00:17:09,796
It has the plain ASCII bytes.

305
00:17:11,306 --> 00:17:14,576
If a byte starts with the

306
00:17:14,656 --> 00:17:16,306
that tells you it's plain ASCII.

307
00:17:18,036 --> 00:17:20,915
If the top two, three,

308
00:17:20,915 --> 00:17:23,646
that tells you it's a two,

309
00:17:24,336 --> 00:17:25,965
And if the top bits are 1 0,

310
00:17:25,965 --> 00:17:27,705
that tells you it's

311
00:17:27,826 --> 00:17:29,086
of a multi-byte sequence.

312
00:17:29,586 --> 00:17:31,016
So I'll show that in context.

313
00:17:32,146 --> 00:17:34,016
The ASCII characters

314
00:17:35,706 --> 00:17:41,166
The bytes with two leading

315
00:17:41,606 --> 00:17:43,556
Three leading 1s is a

316
00:17:44,156 --> 00:17:46,196
Four leading 1s is a

317
00:17:48,656 --> 00:17:51,256
And this gives it a wonderful

318
00:17:51,256 --> 00:17:56,646
into the middle of a UTF-8 file

319
00:17:56,646 --> 00:17:58,666
at any old byte, you can

320
00:17:59,226 --> 00:18:00,736
Does this stand alone as ASCII?

321
00:17:59,226 --> 00:18:00,736
Does this stand alone as ASCII?

322
00:18:00,766 --> 00:18:02,726
Is this the start of

323
00:18:03,126 --> 00:18:05,336
Did I land in the middle of a

324
00:18:05,336 --> 00:18:07,776
to skip forward or back to

325
00:18:08,426 --> 00:18:12,416
So it's very, very robust to

326
00:18:12,966 --> 00:18:18,576
It's an encoding that is

327
00:18:18,646 --> 00:18:21,386
but has just enough

328
00:18:23,806 --> 00:18:28,256
Another useful property it

329
00:18:28,256 --> 00:18:30,106
of a string, there

330
00:18:30,416 --> 00:18:33,106
And C treats 0 as the

331
00:18:33,106 --> 00:18:34,856
so that's a very

332
00:18:34,856 --> 00:18:37,316
UTF-16 strings have

333
00:18:38,916 --> 00:18:41,536
And another nice property is

334
00:18:41,536 --> 00:18:45,296
if you do a naive simple

335
00:18:45,446 --> 00:18:48,476
on UTF strings, they

336
00:18:48,596 --> 00:18:51,666
as if you sorted the

337
00:18:52,356 --> 00:18:55,336
So a whole bunch of really

338
00:18:56,006 --> 00:18:59,576
and this is why just six years

339
00:19:00,196 --> 00:19:03,956
the IETF issued a document

340
00:19:04,446 --> 00:19:07,216
all new Internet

341
00:19:07,216 --> 00:19:08,776
to work with UTF-8.

342
00:19:10,146 --> 00:19:13,796
And that philosophy has

343
00:19:15,346 --> 00:19:19,056
Four years ago, Google did a

344
00:19:19,056 --> 00:19:22,736
of web pages were UTF-8, and

345
00:19:22,786 --> 00:19:24,786
that were old fashioned,

346
00:19:24,786 --> 00:19:27,266
which is of course a

347
00:19:30,216 --> 00:19:33,356
Last month that number

348
00:19:33,636 --> 00:19:38,886
And because of that, the

349
00:19:39,326 --> 00:19:43,156
also recommends that we only

350
00:19:43,786 --> 00:19:44,576
And this is wonderful.

351
00:19:46,326 --> 00:19:47,786
There is, however, one catch.

352
00:19:48,556 --> 00:19:50,896
For some reason,

353
00:19:51,296 --> 00:19:53,936
the DNS community

354
00:19:53,936 --> 00:19:55,736
and they invented a

355
00:19:56,076 --> 00:19:57,206
that they call Punycode.

356
00:19:58,726 --> 00:20:04,466
And Punycode re-uses

357
00:19:58,726 --> 00:20:04,466
And Punycode re-uses

358
00:20:04,466 --> 00:20:05,566
to mean different things.

359
00:20:06,396 --> 00:20:09,416
So those are the byte

360
00:20:09,416 --> 00:20:10,926
to letters, digits, and hyphens.

361
00:20:12,286 --> 00:20:17,466
A result of this is that if

362
00:20:18,346 --> 00:20:22,786
I can interpret those bytes as

363
00:20:22,786 --> 00:20:27,976
like that, or I can interpret

364
00:20:28,636 --> 00:20:29,836
and get what they're

365
00:20:30,806 --> 00:20:33,306
And that dual interpretation

366
00:20:33,306 --> 00:20:36,186
of the same bytes can

367
00:20:36,556 --> 00:20:40,926
because it becomes unclear what

368
00:20:40,926 --> 00:20:42,266
or what the user meant.

369
00:20:42,516 --> 00:20:44,326
If we contrast that with UTF-8,

370
00:20:44,906 --> 00:20:47,386
the first thing you notice is

371
00:20:47,386 --> 00:20:48,516
It takes fewer bytes,

372
00:20:48,906 --> 00:20:51,286
and there's also only

373
00:20:51,886 --> 00:20:54,576
So there was no ambiguity there.

374
00:20:55,946 --> 00:20:59,046
The good news for you guys

375
00:20:59,046 --> 00:21:01,316
about this, because

376
00:20:59,046 --> 00:21:01,316
about this, because

377
00:21:03,036 --> 00:21:07,646
In iOS 9 and OS X El

378
00:21:07,646 --> 00:21:11,906
to ping a UTF-8 hostname on the

379
00:21:12,716 --> 00:21:17,826
You type in UTF-8, those

380
00:21:18,246 --> 00:21:23,336
to the APIs on to the network,

381
00:21:23,336 --> 00:21:26,016
into the DNS as UTF-8

382
00:21:26,946 --> 00:21:32,336
Starting now in iOS 10 and macOS

383
00:21:32,336 --> 00:21:36,376
on the command line with

384
00:21:37,216 --> 00:21:41,496
we will now translate that

385
00:21:42,716 --> 00:21:45,316
do the query, and it

386
00:21:46,086 --> 00:21:50,376
Now, here the ping command

387
00:21:50,826 --> 00:21:54,586
and displaying it as if it were

388
00:21:54,586 --> 00:21:57,466
on the screen instead of the

389
00:21:58,036 --> 00:21:59,076
and that's part of the problem

390
00:21:59,076 --> 00:22:01,276
of having dual interpretations

391
00:21:59,076 --> 00:22:01,276
of having dual interpretations

392
00:22:01,866 --> 00:22:04,576
But the good news

393
00:22:04,576 --> 00:22:08,206
and DSA APIs will now accept

394
00:22:08,206 --> 00:22:10,676
in UTF-8 format, because --

395
00:22:11,516 --> 00:22:16,906
[ Applause ]

396
00:22:17,406 --> 00:22:17,706
Thank you.

397
00:22:18,976 --> 00:22:21,326
Because the Punycode

398
00:22:21,436 --> 00:22:25,046
it doesn't support even simple

399
00:22:25,136 --> 00:22:28,906
and we use DNS for Bonjour

400
00:22:28,906 --> 00:22:29,756
to be that restrictive.

401
00:22:30,276 --> 00:22:33,976
So the way the algorithm works,

402
00:22:33,976 --> 00:22:39,676
in RFC 6763, we will

403
00:22:40,156 --> 00:22:43,986
and if the DNS administrator

404
00:22:43,986 --> 00:22:46,266
which is very easy to do, and

405
00:22:46,266 --> 00:22:48,966
in the '90s, we do the

406
00:22:48,966 --> 00:22:50,576
we get the result,

407
00:22:51,056 --> 00:22:54,336
What's new now is that if we

408
00:22:54,336 --> 00:22:57,766
we will do one more try with

409
00:22:57,996 --> 00:23:01,856
So we support both

410
00:22:57,996 --> 00:23:01,856
So we support both

411
00:23:03,566 --> 00:23:05,406
Email addresses are

412
00:23:05,846 --> 00:23:07,066
internationalized today.

413
00:23:07,736 --> 00:23:13,596
And this is also not hard to

414
00:23:13,596 --> 00:23:14,956
for a silly, trivial reason.

415
00:23:15,746 --> 00:23:18,716
Many apps, when you sign

416
00:23:18,716 --> 00:23:22,226
onto the website to sign up for

417
00:23:22,226 --> 00:23:25,976
if the email address is valid

418
00:23:25,976 --> 00:23:29,226
in .com or things of that form.

419
00:23:30,126 --> 00:23:34,126
And users with perfectly valid

420
00:23:34,126 --> 00:23:37,986
to sign up for accounts because

421
00:23:38,426 --> 00:23:43,696
So we need to remove those

422
00:23:43,806 --> 00:23:45,326
Really the only thing

423
00:23:45,326 --> 00:23:47,966
for in an email address is

424
00:23:47,966 --> 00:23:51,336
And if it's got that, it could

425
00:23:51,386 --> 00:23:54,926
If you want to know if it's

426
00:23:55,016 --> 00:23:58,016
and have the user respond

427
00:23:59,696 --> 00:24:03,206
If you're writing an email

428
00:23:59,696 --> 00:24:03,206
If you're writing an email

429
00:24:03,206 --> 00:24:06,466
there are a bunch of RFCs you

430
00:24:06,936 --> 00:24:09,666
But for the rest of you, you

431
00:24:09,666 --> 00:24:13,416
Let the user enter their

432
00:24:14,036 --> 00:24:15,736
stick it in your

433
00:24:16,186 --> 00:24:19,846
and have the mail server send

434
00:24:19,846 --> 00:24:20,966
with the email standards.

435
00:24:24,356 --> 00:24:28,596
So to wrap up this section, we

436
00:24:29,326 --> 00:24:31,086
Makes everything

437
00:24:31,636 --> 00:24:32,866
Don't worry about Punycode.

438
00:24:32,866 --> 00:24:33,796
We handle it for you.

439
00:24:34,566 --> 00:24:38,746
And be liberal about

440
00:24:39,086 --> 00:24:41,496
in this new international

441
00:24:44,006 --> 00:24:46,826
That brings us to

442
00:24:48,376 --> 00:24:53,286
Now, Wi-Fi Assist is something

443
00:24:55,556 --> 00:24:56,876
Really, this is not new.

444
00:24:57,396 --> 00:24:59,846
This is the way things

445
00:24:59,846 --> 00:25:01,406
since the very first iPhone.

446
00:24:59,846 --> 00:25:01,406
since the very first iPhone.

447
00:25:02,556 --> 00:25:05,156
If I have Wi-Fi, I want

448
00:25:06,096 --> 00:25:09,866
If I don't have Wi-Fi, that's

449
00:25:10,046 --> 00:25:12,656
so I have network access

450
00:25:13,656 --> 00:25:15,816
And the first iPhone did this.

451
00:25:16,396 --> 00:25:19,556
What we changed last

452
00:25:20,476 --> 00:25:23,106
We were smarter about

453
00:25:24,156 --> 00:25:26,416
because there's always

454
00:25:26,416 --> 00:25:27,846
on the edge of a Wi-Fi network.

455
00:25:29,046 --> 00:25:31,916
And mobility factors

456
00:25:31,916 --> 00:25:34,296
We have a situation that we

457
00:25:34,296 --> 00:25:37,756
and it happens at the end of

458
00:25:38,146 --> 00:25:41,066
You leave the office, you get

459
00:25:41,186 --> 00:25:44,076
you're walking out to the car

460
00:25:44,076 --> 00:25:46,856
or weather forecasts or

461
00:25:47,576 --> 00:25:49,526
and your phone thought

462
00:25:49,526 --> 00:25:53,706
It had Wi-Fi a moment ago, but

463
00:25:54,316 --> 00:25:55,546
and it hasn't realized yet.

464
00:25:56,746 --> 00:25:58,726
With Wi-Fi Assist,

465
00:25:59,466 --> 00:26:00,756
We'll try to use Wi-Fi.

466
00:25:59,466 --> 00:26:00,756
We'll try to use Wi-Fi.

467
00:26:00,796 --> 00:26:02,996
If it doesn't work, we'll

468
00:26:04,856 --> 00:26:09,186
But like any new feature,

469
00:26:09,666 --> 00:26:12,486
for the new thing to be the

470
00:26:12,486 --> 00:26:13,446
for people's problems.

471
00:26:13,896 --> 00:26:17,626
Everybody hates it when

472
00:26:17,626 --> 00:26:19,416
and they get a big bill

473
00:26:20,176 --> 00:26:23,046
and it's human nature to

474
00:26:23,406 --> 00:26:25,916
But if you actually look

475
00:26:25,916 --> 00:26:27,956
you will probably find

476
00:26:28,616 --> 00:26:30,986
Wi-Fi Assist is normally

477
00:26:31,556 --> 00:26:33,806
Now, apps have the switch.

478
00:26:34,036 --> 00:26:35,736
If you don't want

479
00:26:35,736 --> 00:26:37,426
of data, you can turn it off.

480
00:26:38,286 --> 00:26:39,336
But that's very crude.

481
00:26:39,416 --> 00:26:40,986
That's kind of an all

482
00:26:41,856 --> 00:26:44,496
And a lot of apps want to do

483
00:26:45,426 --> 00:26:47,376
Say you have a video

484
00:26:48,836 --> 00:26:53,046
You may want the user to be

485
00:26:53,046 --> 00:26:54,546
see little thumbnail pictures,

486
00:26:54,546 --> 00:26:57,706
read the descriptions

487
00:26:58,056 --> 00:26:59,166
Doesn't cost very much.

488
00:26:59,926 --> 00:27:01,886
But you may want the

489
00:26:59,926 --> 00:27:01,886
But you may want the

490
00:27:02,256 --> 00:27:05,056
that says don't stream

491
00:27:06,186 --> 00:27:07,856
because users may

492
00:27:07,856 --> 00:27:09,306
that much money on mobile data.

493
00:27:10,076 --> 00:27:13,056
And if you have that, you're

494
00:27:13,056 --> 00:27:16,766
to differentiate between getting

495
00:27:16,766 --> 00:27:19,026
over cellular, and streaming

496
00:27:20,156 --> 00:27:24,256
A lot of developers have

497
00:27:24,636 --> 00:27:28,886
They use the reachability

498
00:27:29,096 --> 00:27:29,986
Yes or no?

499
00:27:30,216 --> 00:27:32,836
If I'm not on cell, go

500
00:27:33,226 --> 00:27:36,096
Well, things don't stay

501
00:27:36,096 --> 00:27:37,946
Things change from

502
00:27:38,386 --> 00:27:41,586
And between you checking

503
00:27:41,586 --> 00:27:43,016
and actually doing

504
00:27:43,406 --> 00:27:45,436
the user may be walking

505
00:27:46,216 --> 00:27:49,006
So this is not the

506
00:27:49,716 --> 00:27:52,706
The right way to do it

507
00:27:52,856 --> 00:27:56,766
to the networking layers, and

508
00:27:58,356 --> 00:28:02,406
The first step here is don't

509
00:27:58,356 --> 00:28:02,406
The first step here is don't

510
00:28:02,946 --> 00:28:05,356
If you want to do a network

511
00:28:06,306 --> 00:28:09,996
If that's a transaction that you

512
00:28:10,546 --> 00:28:12,976
then you can express that

513
00:28:13,536 --> 00:28:15,246
Using the CoreMedia APIs,

514
00:28:15,686 --> 00:28:21,106
you set the allow cellular

515
00:28:21,616 --> 00:28:24,376
If you set allows

516
00:28:24,756 --> 00:28:27,076
then we won't use

517
00:28:27,846 --> 00:28:28,496
Nice and simple.

518
00:28:29,516 --> 00:28:35,666
[ Applause ]

519
00:28:36,166 --> 00:28:38,996
If that connection fails,

520
00:28:38,996 --> 00:28:41,376
do you want to stream this

521
00:28:42,376 --> 00:28:46,796
or you can just wait, subscribe

522
00:28:47,146 --> 00:28:50,536
and when the phone comes back on

523
00:28:50,836 --> 00:28:53,776
and then you can retry your

524
00:28:53,776 --> 00:28:57,776
available again.

525
00:28:58,956 --> 00:29:02,426
So to summarize, don't

526
00:28:58,956 --> 00:29:02,426
So to summarize, don't

527
00:29:02,426 --> 00:29:06,696
on Wi-Fi now, you will still be

528
00:29:06,696 --> 00:29:08,006
or even half a second from now.

529
00:29:08,896 --> 00:29:09,816
Conditions change.

530
00:29:10,926 --> 00:29:13,266
Express what you want

531
00:29:13,266 --> 00:29:15,846
and we will respect that.

532
00:29:16,886 --> 00:29:20,666
Our last topic is

533
00:29:23,256 --> 00:29:26,556
Last summer, we announced

534
00:29:26,556 --> 00:29:30,066
and Apple, and I'm going to

535
00:29:30,066 --> 00:29:35,226
of the new APIs that you can

536
00:29:35,226 --> 00:29:36,406
to the networking layers.

537
00:29:38,646 --> 00:29:40,556
There are different kinds

538
00:29:41,926 --> 00:29:45,336
99 percent of what

539
00:29:45,596 --> 00:29:48,056
standard Internet

540
00:29:48,466 --> 00:29:50,316
We want the best

541
00:29:51,066 --> 00:29:53,556
and ideally we'd like low delay.

542
00:29:53,556 --> 00:29:57,136
But we definitely want as

543
00:29:57,436 --> 00:29:59,976
This supplies browsing

544
00:30:01,066 --> 00:30:04,846
Another thing that we

545
00:30:06,046 --> 00:30:07,546
uploading photos to iCloud.

546
00:30:08,396 --> 00:30:13,306
And that also wants to have

547
00:30:13,306 --> 00:30:14,636
as the priority stuff.

548
00:30:15,256 --> 00:30:19,066
We'd like to be able to upload

549
00:30:19,106 --> 00:30:24,686
in the background without

550
00:30:25,646 --> 00:30:28,706
The photo upload should take

551
00:30:28,706 --> 00:30:31,506
It is what we call

552
00:30:31,506 --> 00:30:34,606
It uses the otherwise idle

553
00:30:34,606 --> 00:30:38,276
that would otherwise have been

554
00:30:38,566 --> 00:30:40,596
to sending emails,

555
00:30:40,596 --> 00:30:42,776
anything that the human

556
00:30:42,826 --> 00:30:47,926
The third class of

557
00:30:48,846 --> 00:30:50,396
interactive voice and video.

558
00:30:50,396 --> 00:30:53,206
And I say interactive,

559
00:30:53,666 --> 00:30:56,216
When we're having a

560
00:30:56,586 --> 00:30:59,876
you hear me, you respond,

561
00:31:00,166 --> 00:31:03,176
If that round-trip is more than

562
00:31:03,566 --> 00:31:07,776
human communication breaks down.

563
00:31:08,396 --> 00:31:12,386
When people talk about voice and

564
00:31:12,466 --> 00:31:15,616
that watching a YouTube

565
00:31:16,116 --> 00:31:17,416
but it's not interactive.

566
00:31:17,466 --> 00:31:21,926
It doesn't need that sub 200

567
00:31:21,926 --> 00:31:23,776
Listening to a podcast

568
00:31:24,026 --> 00:31:26,046
that doesn't mean a

569
00:31:26,046 --> 00:31:26,996
It's not interactive.

570
00:31:27,936 --> 00:31:31,176
So that's why I labeled this

571
00:31:31,476 --> 00:31:33,476
because this is interactive

572
00:31:34,386 --> 00:31:37,206
For that traffic you want the

573
00:31:38,706 --> 00:31:40,006
and it's very small throughput.

574
00:31:40,096 --> 00:31:41,476
It's a few kilobits per second.

575
00:31:41,526 --> 00:31:43,326
You don't need 50

576
00:31:44,056 --> 00:31:45,946
So marking your traffic

577
00:31:45,946 --> 00:31:49,886
as telephony tells the

578
00:31:49,886 --> 00:31:52,136
but you also don't

579
00:31:52,536 --> 00:31:56,036
If you try to do any kind of

580
00:31:56,226 --> 00:31:59,076
you're going to lose

581
00:31:59,346 --> 00:32:01,026
because a very small amount

582
00:31:59,346 --> 00:32:01,026
because a very small amount

583
00:32:01,026 --> 00:32:03,416
of the network capacity is

584
00:32:03,986 --> 00:32:07,596
So one of our FAQ

585
00:32:07,596 --> 00:32:09,306
will Fastlane make

586
00:32:09,306 --> 00:32:11,596
And the answer is no, it

587
00:32:11,966 --> 00:32:13,866
It will lower the

588
00:32:16,496 --> 00:32:19,726
You may be wondering,

589
00:32:19,846 --> 00:32:21,216
to the Smart Queue Management

590
00:32:21,286 --> 00:32:23,166
and Explicit Congestion

591
00:32:23,546 --> 00:32:24,826
that we were talking

592
00:32:24,826 --> 00:32:30,056
And the answer is those

593
00:32:30,706 --> 00:32:33,766
for all traffic across

594
00:32:34,426 --> 00:32:38,166
but telephony will probably

595
00:32:38,456 --> 00:32:40,766
that wants the very,

596
00:32:40,766 --> 00:32:46,916
and doesn't mind sacrificing

597
00:32:47,716 --> 00:32:51,786
Starting in iOS 5 we had the

598
00:32:51,786 --> 00:32:55,376
and that lets you express some

599
00:32:56,116 --> 00:32:59,446
But many of the developers

600
00:32:59,446 --> 00:33:01,616
and Facetime that

601
00:32:59,446 --> 00:33:01,616
and Facetime that

602
00:33:01,616 --> 00:33:05,456
of voice telephony

603
00:33:05,456 --> 00:33:09,596
And to use UDP today on iOS, you

604
00:33:10,056 --> 00:33:12,786
So we now have a socket option

605
00:33:13,326 --> 00:33:15,636
that exposes the

606
00:33:15,946 --> 00:33:19,156
so your UDP clients

607
00:33:20,176 --> 00:33:24,176
We know some developers had been

608
00:33:24,176 --> 00:33:27,586
of service bits in an attempt

609
00:33:28,946 --> 00:33:30,166
The problem is those type

610
00:33:30,166 --> 00:33:32,766
of service bits are

611
00:33:32,826 --> 00:33:34,266
They are not specified anywhere.

612
00:33:34,726 --> 00:33:38,466
Some Wi-Fi chip vendors will

613
00:33:38,606 --> 00:33:42,936
and use that as a hint to

614
00:33:43,456 --> 00:33:45,756
to voice, video, background.

615
00:33:47,056 --> 00:33:49,936
But the problem is with no

616
00:33:50,216 --> 00:33:52,606
that interpretation

617
00:33:52,606 --> 00:33:56,486
So you may test it in your

618
00:33:56,876 --> 00:33:58,576
but for a customer, it

619
00:33:59,156 --> 00:34:00,866
And that's why we have

620
00:33:59,156 --> 00:34:00,866
And that's why we have

621
00:34:00,866 --> 00:34:01,856
that gives you reliable,

622
00:34:01,856 --> 00:34:04,066
consistent behavior

623
00:34:06,486 --> 00:34:07,956
If you're writing Swift code,

624
00:34:08,536 --> 00:34:10,726
you can set the network

625
00:34:10,726 --> 00:34:12,396
to voice, video, or background.

626
00:34:12,746 --> 00:34:13,985
Or if you don't set it at all,

627
00:34:13,985 --> 00:34:16,786
then that is traditional

628
00:34:17,716 --> 00:34:19,356
If you are using

629
00:34:19,775 --> 00:34:21,216
we have the same options.

630
00:34:21,735 --> 00:34:25,936
We have about another seven

631
00:34:25,936 --> 00:34:26,835
than most of you will need.

632
00:34:27,286 --> 00:34:30,326
These are the four

633
00:34:31,886 --> 00:34:35,126
When you set these options,

634
00:34:36,726 --> 00:34:39,676
On the device itself, there

635
00:34:40,466 --> 00:34:43,795
and the type of service you set

636
00:34:43,795 --> 00:34:46,045
for your traffic controls

637
00:34:47,775 --> 00:34:51,565
On Wi-Fi interfaces, it

638
00:34:51,565 --> 00:34:52,985
multi-media access category.

639
00:34:54,446 --> 00:34:57,686
This is supported on all

640
00:34:58,396 --> 00:35:00,566
and the outband queue

641
00:34:58,396 --> 00:35:00,566
and the outband queue

642
00:35:00,566 --> 00:35:01,936
for Ethernet as well as Wi-Fi.

643
00:35:03,696 --> 00:35:07,506
Now, if your device is on one

644
00:35:07,506 --> 00:35:12,056
of these new Cisco Fastlane

645
00:35:12,056 --> 00:35:16,296
and we will also set the IP

646
00:35:16,296 --> 00:35:20,626
Code Point so that you get

647
00:35:20,846 --> 00:35:23,566
not just on the first

648
00:35:23,906 --> 00:35:26,206
but in subsequent hops

649
00:35:27,136 --> 00:35:31,786
I want to stress this is not

650
00:35:31,816 --> 00:35:34,266
to feel obliged to go

651
00:35:34,876 --> 00:35:36,856
If you're writing an

652
00:35:37,476 --> 00:35:39,296
definitely set background

653
00:35:39,996 --> 00:35:44,686
If you're writing the next

654
00:35:45,156 --> 00:35:46,616
But for the rest of you,

655
00:35:47,476 --> 00:35:50,306
standard best effort is almost

656
00:35:51,736 --> 00:35:53,246
Some other things you

657
00:35:55,146 --> 00:35:58,776
The outband queue

658
00:35:58,776 --> 00:36:01,776
quality of service marking

659
00:35:58,776 --> 00:36:01,776
quality of service marking

660
00:36:02,016 --> 00:36:04,106
but remember it only

661
00:36:04,106 --> 00:36:06,456
The packets coming in have

662
00:36:06,456 --> 00:36:07,546
at the other end sending them.

663
00:36:08,526 --> 00:36:14,116
And the IP layer marking is

664
00:36:14,866 --> 00:36:18,966
It's today only supported

665
00:36:18,966 --> 00:36:20,106
with compatible hardware.

666
00:36:20,906 --> 00:36:22,006
It's only on iOS.

667
00:36:22,136 --> 00:36:25,406
It's not supported on Macs

668
00:36:26,196 --> 00:36:28,296
And for now it's only

669
00:36:28,296 --> 00:36:30,756
I know most people don't use

670
00:36:30,756 --> 00:36:32,796
but if you do plug in

671
00:36:33,436 --> 00:36:35,646
the quality of service is

672
00:36:36,476 --> 00:36:39,956
And finally if the

673
00:36:40,016 --> 00:36:42,706
to install a management

674
00:36:43,316 --> 00:36:47,126
then that management profile can

675
00:36:47,126 --> 00:36:50,936
to use this type of service

676
00:36:50,936 --> 00:36:52,766
that are listed in the

677
00:36:52,766 --> 00:36:53,896
to set type of service.

678
00:36:53,896 --> 00:36:57,296
It will be a no op

679
00:37:00,006 --> 00:37:01,486
So to summarize this section,

680
00:37:01,996 --> 00:37:05,996
most of your traffic should

681
00:37:07,276 --> 00:37:09,806
If you are doing

682
00:37:09,806 --> 00:37:12,646
that are not time critical,

683
00:37:12,646 --> 00:37:14,026
for you to be less disruptive

684
00:37:14,026 --> 00:37:15,696
and be a better citizen

685
00:37:16,666 --> 00:37:18,786
Remember, it's not

686
00:37:19,186 --> 00:37:20,906
There isn't a ranked

687
00:37:20,906 --> 00:37:22,556
of high priority

688
00:37:23,056 --> 00:37:25,946
It's a web expressing whether

689
00:37:25,946 --> 00:37:30,286
and low latency or high

690
00:37:34,716 --> 00:37:35,876
So that ends our session.

691
00:37:35,876 --> 00:37:37,106
Thank you for coming.

692
00:37:37,656 --> 00:37:42,456
We've talked about Smart Queue

693
00:37:42,456 --> 00:37:46,666
to action to all the ISPs and

694
00:37:47,506 --> 00:37:48,986
The clients are supporting ECN.

695
00:37:49,076 --> 00:37:50,636
The servers are supporting ECN.

696
00:37:51,106 --> 00:37:53,726
If you start marking the

697
00:37:53,726 --> 00:37:56,226
of dropping them, you will

698
00:37:57,166 --> 00:37:58,796
The message for developers

699
00:37:58,796 --> 00:38:03,096
in the room is IPv6 is now

700
00:37:58,796 --> 00:38:03,096
in the room is IPv6 is now

701
00:38:03,226 --> 00:38:05,296
for many carriers

702
00:38:06,006 --> 00:38:09,316
Support IPv6 in your

703
00:38:09,846 --> 00:38:13,656
Support IPv6 and

704
00:38:15,146 --> 00:38:18,016
For your text, UTF-8

705
00:38:18,456 --> 00:38:19,866
It's no harder than ASCII.

706
00:38:20,766 --> 00:38:22,366
It's really very

707
00:38:22,776 --> 00:38:26,096
All of our devices

708
00:38:26,316 --> 00:38:28,356
for all the Unicode

709
00:38:28,586 --> 00:38:29,856
so you should have no worries

710
00:38:29,856 --> 00:38:32,236
about supporting UTF-8

711
00:38:33,266 --> 00:38:36,926
And finally, we have new ways

712
00:38:36,926 --> 00:38:38,076
to the networking layers.

713
00:38:39,146 --> 00:38:41,936
You can control when you don't

714
00:38:42,796 --> 00:38:45,936
and you now also

715
00:38:46,306 --> 00:38:49,026
of the throughput latency

716
00:38:50,546 --> 00:38:53,016
So with that, there's a link

717
00:38:53,356 --> 00:38:54,846
where you can find

718
00:38:55,646 --> 00:38:58,676
We have other sessions

719
00:38:58,676 --> 00:39:00,446
that you may find interesting.

720
00:38:58,676 --> 00:39:00,446
that you may find interesting.

721
00:39:00,446 --> 00:39:02,336
We have sessions

722
00:39:02,336 --> 00:39:03,936
and security, which

723
00:39:04,426 --> 00:39:05,576
We have a couple

724
00:39:05,576 --> 00:39:07,106
about internationalization.

725
00:39:07,806 --> 00:39:08,716
We have some sessions

726
00:39:08,716 --> 00:39:12,216
about higher layer networking

727
00:39:12,586 --> 00:39:14,976
So with that, thank

728
00:39:15,516 --> 00:39:25,650
[ Applause ]
