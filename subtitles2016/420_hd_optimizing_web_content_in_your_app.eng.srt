1
00:00:06,516 --> 00:00:18,500
[ Music ]

2
00:00:22,466 --> 00:00:22,956
&gt;&gt; Hello.

3
00:00:23,516 --> 00:00:26,956
[ Applause ]

4
00:00:27,456 --> 00:00:29,636
Welcome to optimizing

5
00:00:29,846 --> 00:00:31,096
My name's Jonathan Davis.

6
00:00:31,476 --> 00:00:32,996
I'm the web technology's

7
00:00:32,996 --> 00:00:34,176
for Safari and WebKit.

8
00:00:34,896 --> 00:00:37,326
Now let me get something

9
00:00:37,326 --> 00:00:40,776
I've had people tell me I

10
00:00:40,776 --> 00:00:42,316
but I promise you I am not him,

11
00:00:43,216 --> 00:00:45,206
but with all the

12
00:00:45,586 --> 00:00:46,956
they may be all out to get us.

13
00:00:47,826 --> 00:00:50,826
That aside, I'm really excited

14
00:00:50,826 --> 00:00:52,236
that will help you

15
00:00:52,236 --> 00:00:53,596
out of web content in your app.

16
00:00:53,856 --> 00:00:57,716
And we've all known for a long

17
00:00:57,716 --> 00:00:59,396
to a great user experience.

18
00:00:59,396 --> 00:01:02,856
So if you're an app

19
00:00:59,396 --> 00:01:02,856
So if you're an app

20
00:01:02,856 --> 00:01:04,446
and JSContext in app today.

21
00:01:05,426 --> 00:01:07,896
And you care about performance,

22
00:01:08,576 --> 00:01:09,976
So we're talking

23
00:01:10,296 --> 00:01:11,946
And in this day and

24
00:01:11,946 --> 00:01:14,096
by performance is battery life.

25
00:01:14,146 --> 00:01:17,396
I mean battery life is the

26
00:01:17,696 --> 00:01:20,166
It can be the difference in

27
00:01:20,336 --> 00:01:23,706
or sending that last critical

28
00:01:24,046 --> 00:01:26,276
And performance really

29
00:01:26,756 --> 00:01:29,426
and they naturally choose

30
00:01:29,466 --> 00:01:30,726
and don't drain their battery.

31
00:01:31,316 --> 00:01:34,266
So what's we've all learned

32
00:01:34,266 --> 00:01:37,436
and from each other, is that

33
00:01:37,436 --> 00:01:38,956
because battery life matters.

34
00:01:39,386 --> 00:01:44,236
So this year we focused on

35
00:01:44,236 --> 00:01:46,646
and fix performance

36
00:01:47,206 --> 00:01:49,646
Now we have tools for

37
00:01:49,646 --> 00:01:51,776
and Objective-C code,

38
00:01:52,306 --> 00:01:54,616
And we have Web Inspector

39
00:01:54,616 --> 00:01:56,056
creating web pages and sites.

40
00:01:56,786 --> 00:01:59,356
But don't think that

41
00:01:59,356 --> 00:02:00,976
to use web technologies

42
00:01:59,356 --> 00:02:00,976
to use web technologies

43
00:02:01,016 --> 00:02:02,166
that you don't have any tools.

44
00:02:02,476 --> 00:02:05,326
In fact, I'm going to show you

45
00:02:05,326 --> 00:02:07,826
that are developed to help

46
00:02:07,826 --> 00:02:11,015
as well for web technologies

47
00:02:11,276 --> 00:02:12,796
So I want to start

48
00:02:12,796 --> 00:02:15,716
to connect Web Inspector to

49
00:02:15,716 --> 00:02:18,506
so you have the right tool

50
00:02:18,616 --> 00:02:21,436
Then you're going to learn

51
00:02:21,436 --> 00:02:24,086
that will help you understand

52
00:02:24,086 --> 00:02:27,016
in your JavaScript code and how

53
00:02:27,016 --> 00:02:29,666
find performance

54
00:02:30,176 --> 00:02:33,556
And if you've ever wished you

55
00:02:33,556 --> 00:02:36,966
by your web content, we've added

56
00:02:36,966 --> 00:02:38,396
that I can't wait to show you.

57
00:02:38,606 --> 00:02:39,186
They're going to save you

58
00:02:39,186 --> 00:02:41,576
so much time finding

59
00:02:41,986 --> 00:02:42,316
All right?

60
00:02:42,786 --> 00:02:43,806
So let's get started.

61
00:02:45,046 --> 00:02:45,986
And the first thing

62
00:02:45,986 --> 00:02:48,766
to do is connect Web

63
00:02:49,486 --> 00:02:51,036
Now there are all

64
00:02:51,036 --> 00:02:52,846
to use web technologies

65
00:02:53,586 --> 00:02:56,346
It could be some modular

66
00:02:56,346 --> 00:02:58,156
so it's easy to swap

67
00:02:58,156 --> 00:02:59,976
or add new modules

68
00:03:00,756 --> 00:03:02,626
And some of you may

69
00:03:02,626 --> 00:03:05,816
with TVML in a tvOS app.

70
00:03:05,986 --> 00:03:08,106
And another reason to

71
00:03:08,106 --> 00:03:09,676
when you want to

72
00:03:10,156 --> 00:03:12,116
Like a web page from

73
00:03:12,116 --> 00:03:13,716
A site you don't control.

74
00:03:13,976 --> 00:03:16,566
And for that, you're probably

75
00:03:16,566 --> 00:03:18,456
and if you're not, you

76
00:03:18,456 --> 00:03:20,756
at last year's session

77
00:03:20,756 --> 00:03:21,426
View Controller.

78
00:03:22,426 --> 00:03:26,016
But if you're showing content

79
00:03:26,176 --> 00:03:29,956
or can customize content that

80
00:03:29,956 --> 00:03:34,276
CSS or JavaScript, content that

81
00:03:34,616 --> 00:03:36,346
WKWebView is the best choice.

82
00:03:36,706 --> 00:03:37,946
And it's essentially a rectangle

83
00:03:37,946 --> 00:03:39,796
where web content is

84
00:03:40,296 --> 00:03:43,686
It was introduced in iOS

85
00:03:44,476 --> 00:03:47,556
And if you're still using

86
00:03:47,616 --> 00:03:49,266
you're really going

87
00:03:49,266 --> 00:03:51,176
at upgrading to WKWebView.

88
00:03:51,566 --> 00:03:54,806
In fact, upgrading to WKWebView

89
00:03:54,806 --> 00:03:56,626
of the Nitro JavaScript

90
00:03:56,806 --> 00:04:00,016
and the four-tier JIT compiler

91
00:03:56,806 --> 00:04:00,016
and the four-tier JIT compiler

92
00:04:00,726 --> 00:04:02,666
So if you want to learn

93
00:04:02,796 --> 00:04:05,086
I recommend taking a

94
00:04:05,086 --> 00:04:06,806
that introduced the

95
00:04:08,016 --> 00:04:11,496
So last year we added some

96
00:04:11,496 --> 00:04:14,386
like load file URL,

97
00:04:14,666 --> 00:04:16,596
and the WK website

98
00:04:17,476 --> 00:04:20,495
And today, with iOS

99
00:04:20,826 --> 00:04:22,286
we've improved 3D-touch support.

100
00:04:23,066 --> 00:04:25,656
And now we allow your app to

101
00:04:25,656 --> 00:04:27,666
and Pop events in WKWebView.

102
00:04:29,326 --> 00:04:31,496
Now like I said earlier,

103
00:04:31,496 --> 00:04:32,916
to use web technologies

104
00:04:33,816 --> 00:04:35,206
doesn't mean you

105
00:04:35,206 --> 00:04:37,866
In all of these cases, you can

106
00:04:37,866 --> 00:04:40,206
into what your web content

107
00:04:41,066 --> 00:04:42,806
But before you can

108
00:04:42,936 --> 00:04:44,976
you'll need to enable

109
00:04:45,216 --> 00:04:47,606
So just load up Safari

110
00:04:47,606 --> 00:04:50,056
over to the Advanced

111
00:04:50,166 --> 00:04:51,336
you'll see this check box.

112
00:04:51,626 --> 00:04:53,976
And it says Show

113
00:04:54,776 --> 00:04:56,716
Just give that a

114
00:04:56,956 --> 00:04:59,776
and the Develop Menu will appear

115
00:05:00,406 --> 00:05:04,436
Now to allow Web Inspector

116
00:05:04,436 --> 00:05:05,836
there's a setting

117
00:05:06,546 --> 00:05:10,216
So in the Settings app,

118
00:05:10,496 --> 00:05:13,226
Then down at the

119
00:05:14,026 --> 00:05:16,026
and toggle the Web

120
00:05:16,876 --> 00:05:19,086
Now you can connect your

121
00:05:19,086 --> 00:05:20,646
out the Develop menu in Safari.

122
00:05:21,656 --> 00:05:24,616
Now something that's really

123
00:05:24,616 --> 00:05:26,686
something you may not

124
00:05:26,686 --> 00:05:29,026
is you can see a list

125
00:05:29,026 --> 00:05:31,546
There's an iPhone

126
00:05:31,746 --> 00:05:32,866
and the simulators there.

127
00:05:33,486 --> 00:05:35,516
And all you have to do

128
00:05:35,516 --> 00:05:36,916
and start using the tools

129
00:05:36,916 --> 00:05:39,206
for debugging is just

130
00:05:39,476 --> 00:05:42,166
And you get a list of all

131
00:05:42,166 --> 00:05:43,376
that are running on the device.

132
00:05:43,816 --> 00:05:46,636
And this Mac app here

133
00:05:46,636 --> 00:05:48,016
It's using JavaScript.

134
00:05:48,136 --> 00:05:50,656
And I can connect right

135
00:05:51,576 --> 00:05:54,976
Now for iOS, apps will

136
00:05:54,976 --> 00:05:56,206
and run them from Xcode.

137
00:05:56,926 --> 00:05:58,426
But when we're talking

138
00:05:58,796 --> 00:06:00,186
there's just one more

139
00:05:58,796 --> 00:06:00,186
there's just one more

140
00:06:01,276 --> 00:06:02,766
To protect the integrity

141
00:06:02,766 --> 00:06:05,366
we don't let just

142
00:06:05,366 --> 00:06:08,156
and use Web Inspector

143
00:06:08,676 --> 00:06:10,186
So you'll need to

144
00:06:10,186 --> 00:06:12,286
to your app's Entitlements

145
00:06:13,306 --> 00:06:15,606
You probably already

146
00:06:15,606 --> 00:06:17,546
but if you don't, it's

147
00:06:17,546 --> 00:06:20,306
You just create a new plist

148
00:06:20,906 --> 00:06:23,496
set the code signing

149
00:06:23,996 --> 00:06:25,416
in Xcode's build settings.

150
00:06:26,506 --> 00:06:28,246
So you add this while

151
00:06:28,356 --> 00:06:31,476
and then you take it back

152
00:06:31,786 --> 00:06:33,916
Then once you have this

153
00:06:33,916 --> 00:06:35,446
and app will show up

154
00:06:35,446 --> 00:06:36,486
and you can attach to it.

155
00:06:36,816 --> 00:06:40,706
And it's easy -- just that

156
00:06:40,706 --> 00:06:42,666
to your JSContext and WebViews.

157
00:06:44,806 --> 00:06:47,666
Okay. So we're up and running

158
00:06:48,676 --> 00:06:51,186
Time to move onto some new

159
00:06:51,186 --> 00:06:53,836
And I want to start with

160
00:06:54,796 --> 00:06:57,586
So we've had a profiler in

161
00:06:57,646 --> 00:06:59,796
and this year we have a

162
00:06:59,796 --> 00:07:02,656
to be way more effective at

163
00:06:59,796 --> 00:07:02,656
to be way more effective at

164
00:07:02,656 --> 00:07:05,466
out where your most expensive

165
00:07:05,466 --> 00:07:06,496
And the reason is simple.

166
00:07:07,276 --> 00:07:09,826
The new profiler uses

167
00:07:09,886 --> 00:07:12,636
that doesn't affect your

168
00:07:12,636 --> 00:07:13,476
as much as before.

169
00:07:14,146 --> 00:07:17,136
So we had a profiler in an

170
00:07:17,136 --> 00:07:17,586
a compiler.

171
00:07:17,586 --> 00:07:18,506
It was an interpreter.

172
00:07:19,226 --> 00:07:23,136
But now we have this very

173
00:07:23,436 --> 00:07:26,936
and the right profiler for that

174
00:07:27,626 --> 00:07:29,536
And the sampling

175
00:07:29,536 --> 00:07:31,526
where time is being

176
00:07:31,746 --> 00:07:32,986
It helps you answer questions

177
00:07:32,986 --> 00:07:36,406
like what code is

178
00:07:36,576 --> 00:07:38,896
It samples the running

179
00:07:39,116 --> 00:07:41,776
and it pauses execution

180
00:07:41,776 --> 00:07:43,126
of all the code that's running.

181
00:07:43,646 --> 00:07:46,916
And it can also take samples

182
00:07:46,916 --> 00:07:48,996
with all four tiers

183
00:07:48,996 --> 00:07:50,026
So that means it's sampling

184
00:07:50,026 --> 00:07:52,046
at near the true

185
00:07:52,616 --> 00:07:56,246
And since handling breakpoints

186
00:07:56,496 --> 00:07:57,986
we temporarily ignore them.

187
00:07:58,526 --> 00:07:59,776
So while you're profiling,

188
00:08:00,016 --> 00:08:02,596
you get the truest

189
00:08:03,046 --> 00:08:05,156
There isn't nearly the

190
00:08:05,416 --> 00:08:06,856
to using the sampling profiler.

191
00:08:07,116 --> 00:08:10,166
And that literally means

192
00:08:10,666 --> 00:08:13,226
it can run at up

193
00:08:14,366 --> 00:08:17,256
It makes the whole process of

194
00:08:17,256 --> 00:08:20,276
and easier, and you get much

195
00:08:21,576 --> 00:08:24,706
This was such an exciting

196
00:08:24,706 --> 00:08:27,786
our Web Inspector team, was

197
00:08:27,786 --> 00:08:29,676
to find places where we

198
00:08:29,676 --> 00:08:30,876
in Web Inspector itself.

199
00:08:32,426 --> 00:08:32,666
All right.

200
00:08:32,666 --> 00:08:34,506
So we have a sampling profiler.

201
00:08:34,506 --> 00:08:37,626
Let's see how Web Inspector uses

202
00:08:38,506 --> 00:08:40,046
So there's a lot going on here,

203
00:08:40,046 --> 00:08:41,676
but it's actually pretty

204
00:08:41,785 --> 00:08:42,765
And it's even more helpful

205
00:08:42,765 --> 00:08:44,006
with code you're

206
00:08:44,946 --> 00:08:47,226
When we're talking about

207
00:08:47,226 --> 00:08:49,366
what we really mean is

208
00:08:49,366 --> 00:08:50,606
for JavaScript in Events.

209
00:08:50,676 --> 00:08:53,546
And this is the Events

210
00:08:53,546 --> 00:08:56,266
of separate discrete

211
00:08:56,556 --> 00:09:00,136
In particular, this is for some

212
00:08:56,556 --> 00:09:00,136
In particular, this is for some

213
00:09:00,136 --> 00:09:02,986
so it's even helpful

214
00:09:02,986 --> 00:09:05,606
and profiling code that's in

215
00:09:06,036 --> 00:09:09,446
And each entry here is an

216
00:09:09,726 --> 00:09:10,896
It's where a code enters

217
00:09:11,146 --> 00:09:13,186
and exists the JavaScript

218
00:09:13,566 --> 00:09:15,936
And that includes event

219
00:09:15,936 --> 00:09:17,536
like these animation

220
00:09:17,536 --> 00:09:19,206
for request animation

221
00:09:20,156 --> 00:09:21,506
Or script evaluated entries

222
00:09:21,506 --> 00:09:24,336
where we see JavaScript files

223
00:09:24,696 --> 00:09:27,236
And we also have some

224
00:09:27,686 --> 00:09:30,966
showing you the time cost

225
00:09:32,036 --> 00:09:34,796
So if anything is more

226
00:09:34,796 --> 00:09:36,406
you're getting really

227
00:09:36,406 --> 00:09:38,826
that smooth 60-frames-per-second

228
00:09:40,356 --> 00:09:43,296
Now the Events view is helpful

229
00:09:43,296 --> 00:09:46,116
that we've added for you and

230
00:09:46,576 --> 00:09:48,226
If you've used other

231
00:09:48,226 --> 00:09:49,796
this ought to be

232
00:09:51,236 --> 00:09:54,156
Just click this Menu and

233
00:09:55,366 --> 00:09:57,316
And now it shows you

234
00:09:57,316 --> 00:09:58,976
for functions in the call stack.

235
00:09:59,636 --> 00:10:02,416
And this is what we call the Top

236
00:09:59,636 --> 00:10:02,416
And this is what we call the Top

237
00:10:02,416 --> 00:10:04,206
to dig down through

238
00:10:04,206 --> 00:10:06,706
to uncover hot functions

239
00:10:07,776 --> 00:10:10,186
But my favorite view

240
00:10:12,266 --> 00:10:15,116
It takes me right to the

241
00:10:15,116 --> 00:10:16,646
that are sampled most often.

242
00:10:17,546 --> 00:10:19,396
And this is the list of

243
00:10:19,396 --> 00:10:21,686
and it's sorted by the

244
00:10:21,686 --> 00:10:23,226
So it inverts the Call Tree

245
00:10:23,416 --> 00:10:26,596
so you can quickly compare

246
00:10:27,316 --> 00:10:29,536
And you can see exactly

247
00:10:29,536 --> 00:10:30,746
of your time is being spent.

248
00:10:31,256 --> 00:10:35,236
You can expand the entries and

249
00:10:35,236 --> 00:10:36,846
to the functions

250
00:10:37,456 --> 00:10:38,536
And this tells you when

251
00:10:38,636 --> 00:10:41,106
and where your most expensive

252
00:10:41,826 --> 00:10:45,366
And to see this in action, I'd

253
00:10:45,366 --> 00:10:46,976
Brian Burg, to the

254
00:10:47,516 --> 00:10:54,656
[ Applause ]

255
00:10:55,156 --> 00:10:55,726
&gt;&gt; Thanks Jon.

256
00:10:55,906 --> 00:10:58,006
So the sampling profiler

257
00:10:58,006 --> 00:11:00,556
because it can take

258
00:10:58,006 --> 00:11:00,556
because it can take

259
00:11:00,556 --> 00:11:03,636
and still profile it and get

260
00:11:03,636 --> 00:11:05,116
And you can make it even faster.

261
00:11:05,846 --> 00:11:09,476
So to show this off, I've

262
00:11:09,756 --> 00:11:11,296
It's called Satellite Tracker.

263
00:11:11,296 --> 00:11:11,956
Let me get the display here.

264
00:11:15,666 --> 00:11:19,686
So Satellite Tracker will show

265
00:11:20,086 --> 00:11:21,416
where the satellites

266
00:11:21,866 --> 00:11:24,616
So you can choose

267
00:11:25,116 --> 00:11:26,796
You can choose different

268
00:11:27,536 --> 00:11:28,916
Different times.

269
00:11:30,016 --> 00:11:30,576
So that's great.

270
00:11:31,716 --> 00:11:33,806
If you're worried about

271
00:11:33,806 --> 00:11:36,346
to put on a tinfoil hat when

272
00:11:37,066 --> 00:11:41,686
But there's a small problem

273
00:11:41,686 --> 00:11:44,126
of satellites overhead,

274
00:11:44,126 --> 00:11:47,216
that blew up, in this case, the

275
00:11:47,676 --> 00:11:49,676
This is definitely not

276
00:11:49,756 --> 00:11:50,876
It's jittering all over.

277
00:11:51,396 --> 00:11:53,846
So we can use the

278
00:11:53,846 --> 00:11:55,846
out what's going on

279
00:11:57,736 --> 00:11:59,776
So what we've got to

280
00:11:59,776 --> 00:12:03,266
and we go to that Develop menu.

281
00:11:59,776 --> 00:12:03,266
and we go to that Develop menu.

282
00:12:03,966 --> 00:12:06,026
Find the iPad here

283
00:12:07,596 --> 00:12:09,886
And the first thing

284
00:12:09,886 --> 00:12:12,596
over to the Frames view here and

285
00:12:12,926 --> 00:12:13,866
in terms of frame rate.

286
00:12:14,066 --> 00:12:16,056
So let's just start recording.

287
00:12:17,136 --> 00:12:18,576
I'll switch back to my iPad.

288
00:12:19,366 --> 00:12:20,776
And start doing stuff.

289
00:12:21,596 --> 00:12:24,246
It'll sort of spin around here.

290
00:12:25,736 --> 00:12:27,506
Maybe a change the satellites.

291
00:12:29,406 --> 00:12:30,096
Change the time.

292
00:12:30,886 --> 00:12:31,976
Okay. Let's go back and see.

293
00:12:35,506 --> 00:12:36,456
Okay. Let's zoom way out.

294
00:12:37,436 --> 00:12:38,006
Okay. Wow.

295
00:12:38,006 --> 00:12:40,186
Yeah. Our performance is

296
00:12:40,186 --> 00:12:44,046
So sometimes we're getting

297
00:12:44,046 --> 00:12:44,426
on the left.

298
00:12:45,286 --> 00:12:47,506
In the middle, it's just sort

299
00:12:47,506 --> 00:12:48,586
as we're changing the views.

300
00:12:49,126 --> 00:12:52,036
And here we're sort

301
00:12:52,036 --> 00:12:54,716
So if we want to figure

302
00:12:55,736 --> 00:13:00,776
we want to switch over

303
00:12:55,736 --> 00:13:00,776
we want to switch over

304
00:13:01,046 --> 00:13:03,336
and then we can click on the

305
00:13:03,336 --> 00:13:06,026
to focus in on that

306
00:13:07,946 --> 00:13:10,926
So as Jon showed before, the

307
00:13:10,926 --> 00:13:12,586
to show everything that

308
00:13:13,036 --> 00:13:16,206
And in this case, it's an

309
00:13:16,206 --> 00:13:18,466
so we're just rendering

310
00:13:18,466 --> 00:13:21,506
So it's not really helpful,

311
00:13:21,506 --> 00:13:22,776
out what's taking the most time.

312
00:13:23,536 --> 00:13:28,126
So let's switch over to the

313
00:13:28,126 --> 00:13:30,846
that Top Down Call Tree.

314
00:13:31,226 --> 00:13:35,316
And this shows aggregated over

315
00:13:35,946 --> 00:13:37,476
where we spent the most time.

316
00:13:38,366 --> 00:13:42,476
And here we can expand this to

317
00:13:42,476 --> 00:13:45,886
and that calls some of our

318
00:13:46,946 --> 00:13:50,006
And you know we draw some things

319
00:13:50,006 --> 00:13:52,106
and the time and these things.

320
00:13:52,166 --> 00:13:54,676
So this is great, if we want

321
00:13:54,676 --> 00:13:56,056
to understand what

322
00:13:56,656 --> 00:13:57,396
But if we want to figure

323
00:13:57,396 --> 00:13:59,366
out which functions

324
00:14:00,066 --> 00:14:03,656
it's better to go over

325
00:14:04,056 --> 00:14:08,486
So here we've listed all

326
00:14:08,486 --> 00:14:09,326
of who called them.

327
00:14:09,926 --> 00:14:12,766
And we can see that fillText

328
00:14:12,766 --> 00:14:15,326
and our tangent [phonetic]

329
00:14:15,436 --> 00:14:18,556
so why are we calling

330
00:14:18,786 --> 00:14:21,866
We can expand out this row here

331
00:14:22,216 --> 00:14:23,646
and see who's calling

332
00:14:23,816 --> 00:14:28,206
So right here, we're

333
00:14:28,436 --> 00:14:32,086
It looks like we're

334
00:14:32,086 --> 00:14:33,266
so we can draw this globe.

335
00:14:34,046 --> 00:14:35,876
Okay. These things

336
00:14:36,456 --> 00:14:38,096
Maybe I can pull

337
00:14:38,096 --> 00:14:39,156
and make it a little faster.

338
00:14:39,156 --> 00:14:41,746
Let's go up to fillText.

339
00:14:41,746 --> 00:14:45,666
So and to refresh you, if

340
00:14:46,326 --> 00:14:50,246
we're drawing text on

341
00:14:50,246 --> 00:14:51,466
and also for every data point.

342
00:14:51,946 --> 00:14:53,326
So that makes sense.

343
00:14:53,516 --> 00:14:56,076
But if we look really

344
00:14:56,606 --> 00:14:57,906
we're actually drawing

345
00:14:58,396 --> 00:14:59,806
and that seems kind of strange.

346
00:15:00,846 --> 00:15:06,026
So if we expand this out, we

347
00:15:06,456 --> 00:15:09,256
and it seems that we're seem

348
00:15:09,256 --> 00:15:11,256
to be drawing two different

349
00:15:11,786 --> 00:15:14,116
This is probably

350
00:15:15,406 --> 00:15:17,726
So let's figure out

351
00:15:17,726 --> 00:15:20,126
If it was the case that we were

352
00:15:20,216 --> 00:15:24,556
then we're doing twice as

353
00:15:24,856 --> 00:15:27,506
So over here, just to

354
00:15:27,506 --> 00:15:28,716
we have this sort of flat map.

355
00:15:28,716 --> 00:15:31,776
And then we have the

356
00:15:32,846 --> 00:15:33,456
So

357
00:15:34,586 --> 00:15:37,906
let's go back into the code,

358
00:15:37,906 --> 00:15:41,456
and figure out what controls

359
00:15:41,506 --> 00:15:42,026
two maps.

360
00:15:42,026 --> 00:15:42,976
Maybe we messed up somewhere.

361
00:15:46,516 --> 00:15:48,146
So we switch between

362
00:15:48,496 --> 00:15:49,776
when we change the location.

363
00:15:51,036 --> 00:15:52,106
So here's updateLocation.

364
00:15:52,816 --> 00:15:57,196
Okay. So when we have one map

365
00:15:57,306 --> 00:16:00,516
So that makes sense because here

366
00:15:57,306 --> 00:16:00,516
So that makes sense because here

367
00:16:00,546 --> 00:16:02,856
and that's just going

368
00:16:04,286 --> 00:16:07,776
And here for the globeMap,

369
00:16:07,776 --> 00:16:09,046
when the whole thing is running.

370
00:16:09,606 --> 00:16:11,786
And also in the place we're

371
00:16:11,786 --> 00:16:13,466
projection, so that makes sense.

372
00:16:13,466 --> 00:16:15,966
When we're showing the flat

373
00:16:16,016 --> 00:16:16,776
when it's not running.

374
00:16:18,166 --> 00:16:21,136
Up here for the flat map, it

375
00:16:21,136 --> 00:16:22,366
if the UI is running at all.

376
00:16:22,526 --> 00:16:26,116
So that's kind of strange.

377
00:16:26,156 --> 00:16:27,926
Well let's go back to the

378
00:16:32,296 --> 00:16:34,406
So we'll go up to our

379
00:16:34,986 --> 00:16:39,906
And if we go to Earth, it seems

380
00:16:40,156 --> 00:16:43,026
than if we just did

381
00:16:43,296 --> 00:16:44,586
And well, that makes sense.

382
00:16:44,586 --> 00:16:47,556
I think we're drawing two maps

383
00:16:47,556 --> 00:16:49,496
but only one map when

384
00:16:49,496 --> 00:16:52,716
So if we go in here and

385
00:16:59,276 --> 00:17:00,976
We want it to be the opposite.

386
00:16:59,276 --> 00:17:00,976
We want it to be the opposite.

387
00:17:04,576 --> 00:17:07,976
Okay. So let's stop, and

388
00:17:12,236 --> 00:17:13,806
So go back to our iPad here.

389
00:17:15,546 --> 00:17:16,806
Okay. This looks pretty smooth.

390
00:17:16,806 --> 00:17:17,685
Let's go here.

391
00:17:18,996 --> 00:17:19,566
Oh that's great.

392
00:17:22,026 --> 00:17:22,876
Yeah, it looks really nice.

393
00:17:22,876 --> 00:17:26,366
So let's go and check that

394
00:17:27,185 --> 00:17:29,236
if it's 60-frames per second.

395
00:17:30,196 --> 00:17:32,126
So I'll switch back

396
00:17:32,996 --> 00:17:36,336
and start recording and yeah.

397
00:17:36,336 --> 00:17:37,096
That's pretty nice.

398
00:17:37,096 --> 00:17:40,216
I'm spinning the globe, and

399
00:17:40,216 --> 00:17:42,556
But the steady state

400
00:17:42,556 --> 00:17:45,296
okay, we're definitely

401
00:17:45,846 --> 00:17:47,816
And over here we have

402
00:17:47,816 --> 00:17:48,976
under it, then we're in luck.

403
00:17:52,956 --> 00:17:57,956
Okay. So now Satellite Tracker's

404
00:17:57,956 --> 00:17:58,746
when to put on our hat.

405
00:17:58,956 --> 00:17:59,546
This is great.

406
00:18:00,246 --> 00:18:02,216
So this is a small example

407
00:18:02,216 --> 00:18:04,916
of how we can use a

408
00:18:04,916 --> 00:18:07,366
into really busy content

409
00:18:08,696 --> 00:18:09,436
Okay. Next.

410
00:18:09,436 --> 00:18:12,896
Jon's going to tell us about

411
00:18:13,516 --> 00:18:21,316
[ Applause ]

412
00:18:21,816 --> 00:18:22,446
&gt;&gt; Thank you Brian.

413
00:18:24,356 --> 00:18:26,646
So you can see that

414
00:18:27,276 --> 00:18:29,376
It allows you to see the

415
00:18:29,506 --> 00:18:31,116
so you can get really

416
00:18:31,686 --> 00:18:34,286
So give the JavaScript and

417
00:18:34,526 --> 00:18:37,996
and use it to find slow

418
00:18:37,996 --> 00:18:40,336
or slow script initialization

419
00:18:41,336 --> 00:18:45,036
And use the new Call Trees view

420
00:18:45,036 --> 00:18:46,956
up across the time

421
00:18:48,216 --> 00:18:50,586
Remember that Bottom Up

422
00:18:50,586 --> 00:18:54,216
It really helps you find the

423
00:18:54,796 --> 00:18:58,126
Okay. So we've looked at

424
00:18:58,126 --> 00:19:00,296
and new JavaScript

425
00:18:58,126 --> 00:19:00,296
and new JavaScript

426
00:19:00,886 --> 00:19:03,096
I'm really excited that

427
00:19:03,096 --> 00:19:04,666
for optimizing CPU time.

428
00:19:04,666 --> 00:19:07,356
And we can give our users a fast

429
00:19:07,356 --> 00:19:08,276
of their battery life.

430
00:19:08,726 --> 00:19:10,176
And this is great and

431
00:19:10,176 --> 00:19:12,226
on to the other side of

432
00:19:12,666 --> 00:19:14,256
figuring out where

433
00:19:14,746 --> 00:19:17,916
So you want to be efficient

434
00:19:17,916 --> 00:19:19,526
because it's a limited resource.

435
00:19:19,976 --> 00:19:23,376
Being memory efficient helps

436
00:19:23,376 --> 00:19:26,776
to scale really well to

437
00:19:28,056 --> 00:19:31,466
Plus, using lots of

438
00:19:31,466 --> 00:19:32,486
and we don't want to do that.

439
00:19:33,276 --> 00:19:35,166
and it can also bring

440
00:19:35,256 --> 00:19:36,776
and we really don't

441
00:19:37,326 --> 00:19:39,696
Now the good news is if

442
00:19:40,086 --> 00:19:41,686
it runs in a separate process,

443
00:19:41,976 --> 00:19:43,476
so it won't bring

444
00:19:43,516 --> 00:19:45,736
But still, it's not a

445
00:19:46,286 --> 00:19:48,806
So to help you with all of this,

446
00:19:48,806 --> 00:19:50,556
to Web Inspector and Safari 10.

447
00:19:51,106 --> 00:19:53,296
When you fire up the

448
00:19:53,296 --> 00:19:55,356
the new timelines will

449
00:19:55,356 --> 00:19:55,976
so you need to turn them on.

450
00:19:56,796 --> 00:19:59,496
You just click the Edit button

451
00:20:00,076 --> 00:20:03,606
you can now configure the

452
00:20:03,776 --> 00:20:06,736
So you can just work with the

453
00:20:06,736 --> 00:20:08,646
Just like in the

454
00:20:09,236 --> 00:20:11,826
So just toggle the new

455
00:20:11,826 --> 00:20:12,946
to record a new timelines.

456
00:20:13,296 --> 00:20:14,236
But you probably don't want

457
00:20:14,236 --> 00:20:15,996
to keep them all

458
00:20:16,566 --> 00:20:18,346
The sampling profiler

459
00:20:18,346 --> 00:20:21,176
and Events Timeline has less

460
00:20:21,706 --> 00:20:24,126
And the JavaScript Allocation's

461
00:20:24,126 --> 00:20:25,666
process during garbage

462
00:20:25,966 --> 00:20:27,446
that can have a performance

463
00:20:28,416 --> 00:20:31,676
Okay. So we're going to leave

464
00:20:32,016 --> 00:20:34,826
And when you record a timeline,

465
00:20:35,726 --> 00:20:37,756
You get this new

466
00:20:37,756 --> 00:20:39,936
and it shows you how

467
00:20:39,936 --> 00:20:41,986
across different

468
00:20:41,986 --> 00:20:44,956
And there are a series

469
00:20:44,956 --> 00:20:47,216
to help you understand

470
00:20:47,216 --> 00:20:48,336
and how it's being divided up.

471
00:20:49,746 --> 00:20:52,376
The Breakdown chart here shows

472
00:20:52,376 --> 00:20:55,446
for JavaScript, for images,

473
00:20:55,446 --> 00:20:57,056
up your page, and for the rest

474
00:20:57,056 --> 00:20:58,556
of the engine-related

475
00:20:59,636 --> 00:21:02,606
And the Max Comparison

476
00:20:59,636 --> 00:21:02,606
And the Max Comparison

477
00:21:02,606 --> 00:21:03,526
memory spikes.

478
00:21:03,526 --> 00:21:04,926
So we have a high watermark here

479
00:21:04,926 --> 00:21:07,326
and that helps you see

480
00:21:07,456 --> 00:21:10,556
And you can even isolate spikes,

481
00:21:10,556 --> 00:21:14,026
or a specific range of time

482
00:21:14,536 --> 00:21:17,816
And then, you can use the

483
00:21:18,026 --> 00:21:19,886
to see what's contributing

484
00:21:20,546 --> 00:21:23,836
And each of these graphs here

485
00:21:23,836 --> 00:21:26,516
So you can easily see

486
00:21:26,726 --> 00:21:30,496
So if there's a spike in

487
00:21:30,646 --> 00:21:33,276
where lots of new objects are

488
00:21:33,596 --> 00:21:36,776
And that includes Objects like

489
00:21:37,166 --> 00:21:39,116
and all the engine

490
00:21:39,116 --> 00:21:41,206
like structure data

491
00:21:41,916 --> 00:21:44,736
So when you see usage

492
00:21:44,736 --> 00:21:46,986
you're seeing garbage

493
00:21:48,106 --> 00:21:50,866
And images shows you the

494
00:21:50,866 --> 00:21:52,406
that have been decoded

495
00:21:52,986 --> 00:21:56,296
so that's the larger image

496
00:21:56,296 --> 00:21:57,556
that are visible

497
00:21:58,076 --> 00:22:01,506
And layers is showing you

498
00:21:58,076 --> 00:22:01,506
And layers is showing you

499
00:22:01,776 --> 00:22:04,696
memory used for WebKit's

500
00:22:04,916 --> 00:22:06,096
and other engine layers.

501
00:22:07,226 --> 00:22:08,956
Pages is everything else,

502
00:22:08,956 --> 00:22:11,006
all the other things the

503
00:22:11,006 --> 00:22:14,296
like the DOM and page

504
00:22:14,296 --> 00:22:16,486
memory caches and

505
00:22:17,276 --> 00:22:19,376
So this breakdown gives

506
00:22:19,376 --> 00:22:22,246
that memory use lines up

507
00:22:22,556 --> 00:22:24,566
If you have JavaScript-heavy

508
00:22:24,566 --> 00:22:26,516
you'd expect the

509
00:22:26,516 --> 00:22:29,896
that JavaScript is the largest

510
00:22:30,216 --> 00:22:32,036
And you'll likely see

511
00:22:32,036 --> 00:22:33,096
in the Timeline graph.

512
00:22:33,946 --> 00:22:37,826
But for an image-heavy page

513
00:22:38,196 --> 00:22:40,966
then the layers and images

514
00:22:40,966 --> 00:22:42,656
largest, with more

515
00:22:43,836 --> 00:22:47,486
So that's the Memory

516
00:22:48,066 --> 00:22:52,356
And to complement the Memory

517
00:22:52,356 --> 00:22:53,556
Allocations Timeline.

518
00:22:54,076 --> 00:22:56,196
It's one thing to see

519
00:22:56,426 --> 00:22:57,826
but it's another

520
00:22:57,826 --> 00:23:00,426
down to see what actual

521
00:22:57,826 --> 00:23:00,426
down to see what actual

522
00:23:00,426 --> 00:23:02,166
And a very powerful tool

523
00:23:02,166 --> 00:23:06,446
for this is JavaScript

524
00:23:07,326 --> 00:23:10,306
What's powerful about Snapshots

525
00:23:10,306 --> 00:23:12,296
of a moment in time,

526
00:23:12,496 --> 00:23:15,456
And you can dig in to see

527
00:23:15,756 --> 00:23:18,766
But it's even more powerful

528
00:23:19,416 --> 00:23:22,376
and this allows you to go back

529
00:23:22,376 --> 00:23:25,696
And comparing Snapshots is

530
00:23:25,696 --> 00:23:29,126
for answering the question, am

531
00:23:29,886 --> 00:23:32,646
So to really make use of this,

532
00:23:32,646 --> 00:23:36,526
So that's why, by default,

533
00:23:37,206 --> 00:23:39,766
and also at the beginning

534
00:23:40,156 --> 00:23:42,056
So the Snapshots are

535
00:23:42,056 --> 00:23:43,006
so you can correlate them

536
00:23:43,006 --> 00:23:44,546
to things happening

537
00:23:44,916 --> 00:23:46,616
I just have the others

538
00:23:47,406 --> 00:23:50,386
And the Snapshots are listed

539
00:23:50,386 --> 00:23:51,906
like timing and size

540
00:23:52,776 --> 00:23:54,566
Now, to dig into a

541
00:23:54,566 --> 00:23:57,006
you'll often need a Snapshot,

542
00:23:57,006 --> 00:23:58,736
where you think a memory

543
00:23:59,176 --> 00:24:00,536
And there are three techniques.

544
00:23:59,176 --> 00:24:00,536
And there are three techniques.

545
00:24:01,086 --> 00:24:03,726
You can rely on the automatic

546
00:24:04,486 --> 00:24:05,566
Or you can take one yourself

547
00:24:05,566 --> 00:24:07,236
by pushing the Take

548
00:24:07,856 --> 00:24:09,506
Or you can do it from your code.

549
00:24:10,566 --> 00:24:12,656
And really the easiest way

550
00:24:12,656 --> 00:24:13,956
to modify your code a little.

551
00:24:14,546 --> 00:24:16,336
You call the takeHeapSnapshot

552
00:24:16,516 --> 00:24:19,596
and pass it a custom label

553
00:24:19,596 --> 00:24:21,016
that can help you

554
00:24:21,666 --> 00:24:24,266
And again, you want a pair

555
00:24:24,266 --> 00:24:27,116
and after the code you think

556
00:24:27,616 --> 00:24:30,596
Now you could also use

557
00:24:30,596 --> 00:24:33,366
between doing some

558
00:24:34,056 --> 00:24:36,496
So just some quick

559
00:24:36,836 --> 00:24:38,356
about the takeHeapSnapshot API.

560
00:24:39,186 --> 00:24:41,916
Remember that Snapshots do

561
00:24:41,916 --> 00:24:44,456
garbage collection and that

562
00:24:44,456 --> 00:24:45,626
which you'll definitely notice

563
00:24:45,626 --> 00:24:48,086
if your code is firing off

564
00:24:49,176 --> 00:24:51,636
You'll also want to capture

565
00:24:51,636 --> 00:24:54,406
and after code that's doing

566
00:24:54,406 --> 00:24:55,476
between work in a loop.

567
00:24:55,996 --> 00:24:57,676
And don't leave this in.

568
00:24:57,676 --> 00:24:58,956
I mean, if you leave this in,

569
00:24:59,036 --> 00:25:00,526
for most customers

570
00:24:59,036 --> 00:25:00,526
for most customers

571
00:25:00,526 --> 00:25:02,556
But if anybody's running

572
00:25:02,556 --> 00:25:04,276
to be taking all

573
00:25:04,276 --> 00:25:05,586
and you probably

574
00:25:05,586 --> 00:25:08,886
So just remember to be sure and

575
00:25:09,436 --> 00:25:11,416
So what are these

576
00:25:12,046 --> 00:25:13,816
Let's take a look.

577
00:25:14,846 --> 00:25:18,626
You just click on the

578
00:25:18,626 --> 00:25:21,566
or on the Arrow button of any

579
00:25:22,126 --> 00:25:23,766
And you'll get this

580
00:25:23,766 --> 00:25:25,026
that were allocated in the heap.

581
00:25:25,296 --> 00:25:27,306
And we have two views

582
00:25:27,686 --> 00:25:30,586
This is the Instances view, and

583
00:25:30,586 --> 00:25:32,456
in the heap, grouped

584
00:25:33,356 --> 00:25:35,536
And the other is the

585
00:25:35,536 --> 00:25:37,936
And this is really an

586
00:25:37,936 --> 00:25:40,066
and everything that's

587
00:25:40,496 --> 00:25:42,166
So if you're readily

588
00:25:42,166 --> 00:25:45,106
this can be a useful

589
00:25:45,106 --> 00:25:45,896
or where they should be.

590
00:25:46,396 --> 00:25:50,416
But actually the far more useful

591
00:25:50,416 --> 00:25:51,556
in the Instances view.

592
00:25:51,866 --> 00:25:54,596
And it's powerful because you

593
00:25:54,696 --> 00:25:57,056
matter how deep-down the

594
00:25:57,516 --> 00:26:00,576
And the Count here can help

595
00:25:57,516 --> 00:26:00,576
And the Count here can help

596
00:26:00,576 --> 00:26:02,236
when they don't meet

597
00:26:02,236 --> 00:26:05,196
Like was I really expecting

598
00:26:06,436 --> 00:26:08,666
So you can expand the

599
00:26:08,666 --> 00:26:10,476
of the allocated

600
00:26:11,246 --> 00:26:14,096
Then to figure out what

601
00:26:14,096 --> 00:26:14,876
different clues.

602
00:26:15,006 --> 00:26:16,066
The Class is a clue.

603
00:26:16,946 --> 00:26:19,376
Another is the actual

604
00:26:19,706 --> 00:26:21,656
It's a really quick

605
00:26:22,506 --> 00:26:25,426
But the easiest way to know

606
00:26:25,426 --> 00:26:30,636
over this Object Identifier

607
00:26:30,916 --> 00:26:31,426
Look at this.

608
00:26:31,656 --> 00:26:34,786
It literally shows you the

609
00:26:35,346 --> 00:26:38,096
This is telling you exactly what

610
00:26:38,736 --> 00:26:40,856
It almost always gives

611
00:26:41,756 --> 00:26:45,626
especially in a world of

612
00:26:45,626 --> 00:26:47,286
This is the kind of

613
00:26:47,286 --> 00:26:48,516
through the confusion.

614
00:26:49,656 --> 00:26:52,826
But the most important feature

615
00:26:52,826 --> 00:26:55,036
of this is to be able to

616
00:26:55,346 --> 00:26:55,966
Now watch this.

617
00:26:55,966 --> 00:26:57,546
Once you've collected

618
00:26:57,996 --> 00:27:00,206
you just click the Compare

619
00:26:57,996 --> 00:27:00,206
you just click the Compare

620
00:27:01,266 --> 00:27:03,096
and you select a

621
00:27:03,376 --> 00:27:04,986
and a second to compare against.

622
00:27:05,796 --> 00:27:09,276
And boom. You get a new

623
00:27:09,796 --> 00:27:11,136
Now this is a really big deal

624
00:27:11,486 --> 00:27:13,526
because now we're only seeing

625
00:27:13,526 --> 00:27:16,646
between two points,

626
00:27:17,866 --> 00:27:20,226
Expanding the Object

627
00:27:20,226 --> 00:27:21,556
of these Object Allocations.

628
00:27:21,556 --> 00:27:23,806
And their previews are showing

629
00:27:23,806 --> 00:27:24,946
like some telemetry data.

630
00:27:25,396 --> 00:27:27,716
And that's a clue that

631
00:27:28,166 --> 00:27:29,806
And the pop over here

632
00:27:29,806 --> 00:27:31,166
in the Satellites

633
00:27:32,326 --> 00:27:34,126
Since this is a Snapshot

634
00:27:34,126 --> 00:27:36,646
these Satellite Objects

635
00:27:36,926 --> 00:27:39,356
And that's a big clue as

636
00:27:39,886 --> 00:27:42,316
So to show you all of these

637
00:27:42,366 --> 00:27:44,806
I'd like to invite Brian back up

638
00:27:45,516 --> 00:27:50,656
[ Applause ]

639
00:27:51,156 --> 00:27:51,736
&gt;&gt; Thanks Jon.

640
00:27:52,616 --> 00:27:56,706
So I gave Satellite Tracker

641
00:27:57,156 --> 00:27:58,556
up all night playing with it.

642
00:28:00,116 --> 00:28:02,396
And he had a lot of fun,

643
00:28:02,396 --> 00:28:04,236
and he never got tracked

644
00:28:04,356 --> 00:28:05,646
But there's a problem.

645
00:28:05,646 --> 00:28:07,406
Eventually it just

646
00:28:07,406 --> 00:28:09,126
and slower the longer it was up.

647
00:28:09,776 --> 00:28:12,826
And to me that sounded like

648
00:28:13,006 --> 00:28:15,096
The longer the thing is

649
00:28:15,916 --> 00:28:18,716
So I want to look

650
00:28:18,716 --> 00:28:20,446
with these new memory

651
00:28:20,446 --> 00:28:22,416
out if we're leaking

652
00:28:23,646 --> 00:28:26,106
So the first thing

653
00:28:26,246 --> 00:28:28,576
Okay I've got iPad here.

654
00:28:29,306 --> 00:28:30,976
I'm going to go back

655
00:28:34,336 --> 00:28:36,936
And inspect the app.

656
00:28:37,006 --> 00:28:39,166
And the first thing

657
00:28:39,286 --> 00:28:42,636
when I don't really know what

658
00:28:42,736 --> 00:28:43,866
to use the Memory Timeline.

659
00:28:43,916 --> 00:28:47,686
And that's going to show

660
00:28:47,686 --> 00:28:48,666
of what's going on on the page.

661
00:28:48,666 --> 00:28:50,016
So let's start recording.

662
00:28:51,146 --> 00:28:54,826
I'll switch back, and I'm just

663
00:28:54,946 --> 00:28:57,596
between two satellites.

664
00:28:58,136 --> 00:29:00,446
Maybe I'll add some

665
00:28:58,136 --> 00:29:00,446
Maybe I'll add some

666
00:29:02,126 --> 00:29:04,216
Okay, I'm switching

667
00:29:06,616 --> 00:29:07,976
Okay. Let's see what's

668
00:29:11,506 --> 00:29:15,486
So in the Timeline overview you

669
00:29:15,486 --> 00:29:17,716
showing all the different

670
00:29:17,856 --> 00:29:21,116
but if you click here, you'll

671
00:29:22,566 --> 00:29:24,586
And so there's no

672
00:29:24,886 --> 00:29:25,776
This is all canvas.

673
00:29:26,386 --> 00:29:27,786
The layers is pretty flat.

674
00:29:28,266 --> 00:29:29,606
The page sort of

675
00:29:29,606 --> 00:29:30,886
stuff's getting garbage

676
00:29:30,886 --> 00:29:31,436
That's fine.

677
00:29:32,306 --> 00:29:33,896
If you look more

678
00:29:34,126 --> 00:29:37,466
you see that like you know some

679
00:29:37,546 --> 00:29:40,276
but overall, it's really

680
00:29:40,606 --> 00:29:42,116
And if we had this

681
00:29:42,166 --> 00:29:44,316
it would probably

682
00:29:44,936 --> 00:29:49,196
So the next step here is to

683
00:29:49,416 --> 00:29:52,146
or allocation Snapshots

684
00:29:52,146 --> 00:29:54,206
out what's being

685
00:29:56,626 --> 00:30:02,236
So to do that, we're going

686
00:29:56,626 --> 00:30:02,236
So to do that, we're going

687
00:30:03,116 --> 00:30:05,306
And one cool quick trick here

688
00:30:05,446 --> 00:30:07,416
or Shift Space, and they'll

689
00:30:07,536 --> 00:30:08,696
and not append to the old one.

690
00:30:09,526 --> 00:30:11,836
Oh wait. I forgot to

691
00:30:11,836 --> 00:30:13,036
So let's put away Memory.

692
00:30:14,156 --> 00:30:15,906
And let's put in

693
00:30:18,256 --> 00:30:19,506
Okay. So let's start recording.

694
00:30:20,386 --> 00:30:21,306
Go back to the iPad.

695
00:30:23,186 --> 00:30:25,706
Here I added this little

696
00:30:25,826 --> 00:30:27,696
so I already added some

697
00:30:27,696 --> 00:30:29,886
about takeHeapSnapshot

698
00:30:29,886 --> 00:30:32,636
between the two satellite

699
00:30:33,796 --> 00:30:38,416
So for this recording, I'm going

700
00:30:38,416 --> 00:30:40,936
to switch between two

701
00:30:46,266 --> 00:30:47,846
We should look at

702
00:30:47,846 --> 00:30:49,426
That seems kind of relevant.

703
00:30:52,416 --> 00:30:54,326
Okay. And you'll notice

704
00:30:54,326 --> 00:30:56,726
because we're taking

705
00:30:56,726 --> 00:30:57,656
in the JavaScript heap.

706
00:30:57,656 --> 00:31:00,126
So this you know we're

707
00:30:57,656 --> 00:31:00,126
So this you know we're

708
00:31:00,126 --> 00:31:01,786
so this is going to slow

709
00:31:01,876 --> 00:31:05,336
So it's important to not

710
00:31:05,336 --> 00:31:08,446
You want to take them

711
00:31:08,796 --> 00:31:12,046
So here, you can see

712
00:31:12,046 --> 00:31:15,736
and those are the

713
00:31:16,046 --> 00:31:17,426
So if we zoom in over here,

714
00:31:17,426 --> 00:31:20,896
we can see that there's pretty

715
00:31:20,896 --> 00:31:22,956
as we start switching

716
00:31:26,746 --> 00:31:29,106
So if we want to investigate

717
00:31:29,106 --> 00:31:31,156
we need to start

718
00:31:31,156 --> 00:31:35,766
to see what's being

719
00:31:35,906 --> 00:31:40,166
So let's go between

720
00:31:41,616 --> 00:31:45,196
And right away, we can

721
00:31:45,196 --> 00:31:48,136
that was allocated

722
00:31:48,136 --> 00:31:49,446
and is still alive right now.

723
00:31:49,956 --> 00:31:52,486
So that's a pretty good sign

724
00:31:52,486 --> 00:31:54,366
and you know we probably

725
00:31:55,636 --> 00:31:57,546
So we can start looking

726
00:31:58,736 --> 00:31:59,606
There're some Arrays.

727
00:32:00,306 --> 00:32:03,436
It looks like we have

728
00:32:04,636 --> 00:32:07,266
And you know we use coordinates

729
00:32:07,266 --> 00:32:09,126
in this app, but

730
00:32:09,126 --> 00:32:11,156
we can see the path

731
00:32:11,256 --> 00:32:14,756
So these seem to be saved

732
00:32:14,756 --> 00:32:17,736
which is what we use to

733
00:32:17,736 --> 00:32:18,436
the satellites.

734
00:32:19,976 --> 00:32:21,436
So okay. That's fine,

735
00:32:21,436 --> 00:32:25,306
but I don't think we

736
00:32:25,306 --> 00:32:27,706
trajectoryHistory for satellites

737
00:32:27,776 --> 00:32:31,986
That seems kind of like a bug.

738
00:32:31,986 --> 00:32:33,646
We allocate some Objects too.

739
00:32:33,696 --> 00:32:37,056
And this is sort of

740
00:32:38,096 --> 00:32:39,596
between Snapshot 9 and 11,

741
00:32:39,596 --> 00:32:41,496
we've already seen

742
00:32:41,856 --> 00:32:44,316
So I wouldn't expect that

743
00:32:44,316 --> 00:32:45,086
for each satellite.

744
00:32:45,136 --> 00:32:45,946
We should just use them

745
00:32:45,946 --> 00:32:48,726
if we already fetched

746
00:32:48,786 --> 00:32:53,216
So and then here's a bunch of

747
00:32:53,216 --> 00:32:55,096
so it seems like we might be

748
00:32:55,096 --> 00:32:56,466
like re-parsing them

749
00:32:57,926 --> 00:33:00,936
But I'm not sure, so

750
00:32:57,926 --> 00:33:00,936
But I'm not sure, so

751
00:33:00,936 --> 00:33:03,906
in this view is you know

752
00:33:03,906 --> 00:33:04,856
You can't read all of them,

753
00:33:05,136 --> 00:33:08,026
but what I like to do is find

754
00:33:08,856 --> 00:33:12,066
And in this Snapshot here,

755
00:33:12,066 --> 00:33:13,926
lots of Arrays, lots of Objects.

756
00:33:13,926 --> 00:33:16,656
But there's only one

757
00:33:16,656 --> 00:33:17,816
between these two Snapshots.

758
00:33:17,896 --> 00:33:21,566
So I think if I want to debug

759
00:33:21,566 --> 00:33:25,036
in our code to see where we're

760
00:33:25,036 --> 00:33:27,266
that that's being leaked

761
00:33:27,446 --> 00:33:29,276
So we search for Promise.

762
00:33:30,076 --> 00:33:34,876
Okay. There's D3 library, and

763
00:33:35,616 --> 00:33:39,046
Okay. Let's go to this one.

764
00:33:39,876 --> 00:33:42,826
Okay. So in the [inaudible]

765
00:33:42,826 --> 00:33:44,946
we switched between

766
00:33:44,946 --> 00:33:46,606
and then the code that's

767
00:33:46,806 --> 00:33:50,126
So someone left comments.

768
00:33:50,126 --> 00:33:50,496
That's nice.

769
00:33:50,686 --> 00:33:55,276
So here it looks like

770
00:33:55,276 --> 00:33:55,896
the satellites.

771
00:33:57,346 --> 00:34:01,246
So here we asynchronously

772
00:33:57,346 --> 00:34:01,246
So here we asynchronously

773
00:34:01,336 --> 00:34:03,456
for the satellites from the TRL.

774
00:34:03,766 --> 00:34:06,036
When it comes back,

775
00:34:07,146 --> 00:34:08,525
and then we're going

776
00:34:08,525 --> 00:34:10,916
with the satellite

777
00:34:11,485 --> 00:34:13,446
And then we're going to save

778
00:34:15,376 --> 00:34:18,576
That's all well and fine,

779
00:34:18,576 --> 00:34:20,456
it seems that we're leaking

780
00:34:20,606 --> 00:34:23,485
So if you look more

781
00:34:23,485 --> 00:34:25,366
to a data set that we

782
00:34:26,136 --> 00:34:29,045
It seems like we're not

783
00:34:30,226 --> 00:34:34,856
So if you look more carefully

784
00:34:34,856 --> 00:34:36,255
between the two satellites,

785
00:34:37,286 --> 00:34:38,536
we're doing a new

786
00:34:38,886 --> 00:34:40,176
So if we go to this Timeline,

787
00:34:41,016 --> 00:34:43,786
it seems like we're requesting

788
00:34:43,786 --> 00:34:44,466
over and over.

789
00:34:45,016 --> 00:34:47,696
And that makes sense

790
00:34:47,775 --> 00:34:49,585
to the code, we request that.

791
00:34:49,585 --> 00:34:51,456
Then we make a bunch of

792
00:34:51,456 --> 00:34:54,286
And then we push it onto

793
00:34:54,346 --> 00:34:56,696
and that thing never really gets

794
00:34:56,815 --> 00:35:00,296
So it seems like

795
00:34:56,815 --> 00:35:00,296
So it seems like

796
00:35:00,296 --> 00:35:02,256
of unnecessary work

797
00:35:02,256 --> 00:35:05,286
So I think what we can

798
00:35:05,286 --> 00:35:08,236
if we already have this

799
00:35:08,726 --> 00:35:11,646
Because this is a Promise,

800
00:35:11,646 --> 00:35:14,076
we can still call .then on it.

801
00:35:14,836 --> 00:35:15,896
Since it's already solved,

802
00:35:16,396 --> 00:35:18,956
next time we evaluate

803
00:35:18,956 --> 00:35:22,266
it's going to go through and

804
00:35:23,646 --> 00:35:25,976
So let's add a [inaudible] here.

805
00:35:30,666 --> 00:35:32,976
And if this doesn't exist,

806
00:35:42,246 --> 00:35:47,316
Okay. Let's stop and rerun

807
00:35:49,646 --> 00:35:51,926
So we need to go

808
00:35:55,936 --> 00:35:58,976
And okay, here's our app, and

809
00:36:02,266 --> 00:36:03,216
And when we go back to the app,

810
00:36:03,216 --> 00:36:04,816
I'm going to turn

811
00:36:05,646 --> 00:36:06,496
Turn on some effects.

812
00:36:06,816 --> 00:36:10,246
And we'll go down south.

813
00:36:10,796 --> 00:36:13,256
Okay. So Spy Satellites.

814
00:36:14,276 --> 00:36:16,246
Science Experiments

815
00:36:17,796 --> 00:36:18,656
Science Experiments.

816
00:36:19,856 --> 00:36:19,946
Okay.

817
00:36:24,946 --> 00:36:28,456
So if we go back here, we're

818
00:36:28,536 --> 00:36:32,026
Maybe 1 megabyte,

819
00:36:32,026 --> 00:36:34,216
so there might be some

820
00:36:34,216 --> 00:36:38,896
But at the end of the Snapshot,

821
00:36:38,896 --> 00:36:41,246
as when we started rendering

822
00:36:41,246 --> 00:36:43,116
So I think we've fixed

823
00:36:44,816 --> 00:36:49,636
So this shows how we can use the

824
00:36:49,766 --> 00:36:51,866
to figure out where

825
00:36:52,306 --> 00:36:54,536
in apps like this.

826
00:36:54,536 --> 00:36:58,586
And it's great because like this

827
00:36:58,646 --> 00:37:01,026
But still, with the dipping

828
00:36:58,646 --> 00:37:01,026
But still, with the dipping

829
00:37:01,026 --> 00:37:02,896
we can really drill

830
00:37:02,896 --> 00:37:05,666
in some Timeline we care about.

831
00:37:06,646 --> 00:37:09,056
Okay. So that's the end

832
00:37:10,186 --> 00:37:10,786
Back to you, Jon.

833
00:37:11,516 --> 00:37:16,186
[ Applause ]

834
00:37:16,686 --> 00:37:17,356
&gt;&gt; Thank you Brian.

835
00:37:17,746 --> 00:37:20,236
You can see how it

836
00:37:20,366 --> 00:37:23,136
and simple these new

837
00:37:23,136 --> 00:37:24,846
to zero in on memory issues.

838
00:37:25,496 --> 00:37:27,696
So remember you want to use

839
00:37:27,696 --> 00:37:30,396
out how memory is being used and

840
00:37:30,396 --> 00:37:31,866
so you have an idea

841
00:37:32,606 --> 00:37:35,456
And then, take multiple

842
00:37:35,456 --> 00:37:37,816
in the JavaScript

843
00:37:37,816 --> 00:37:39,616
into code that's driving

844
00:37:40,766 --> 00:37:43,406
Also, don't forget to get

845
00:37:43,406 --> 00:37:44,676
from your code before shipping.

846
00:37:46,056 --> 00:37:47,886
And remember the

847
00:37:48,176 --> 00:37:50,606
that the JavaScript

848
00:37:50,676 --> 00:37:51,416
while recording.

849
00:37:53,316 --> 00:37:56,586
So that's a look at the new

850
00:37:56,586 --> 00:37:58,306
in Web Inspector with Safari 10.

851
00:37:58,516 --> 00:38:00,526
I think you're really

852
00:37:58,516 --> 00:38:00,526
I think you're really

853
00:38:01,846 --> 00:38:03,466
And as I wrap this up,

854
00:38:03,466 --> 00:38:04,836
with some next steps to take.

855
00:38:05,396 --> 00:38:08,376
I want to encourage you

856
00:38:08,376 --> 00:38:09,616
if you've not made

857
00:38:10,116 --> 00:38:13,576
And turn on the Develop

858
00:38:13,576 --> 00:38:16,526
connect Web Inspector to your

859
00:38:16,526 --> 00:38:17,626
of these new features.

860
00:38:18,046 --> 00:38:20,806
Save a ton of time using

861
00:38:20,806 --> 00:38:23,316
and Call Trees for the best

862
00:38:23,586 --> 00:38:26,146
The Memory Timeline to

863
00:38:26,146 --> 00:38:26,676
are happening.

864
00:38:27,126 --> 00:38:29,226
And Heap Snapshots

865
00:38:29,226 --> 00:38:31,126
and compare Object allocations.

866
00:38:31,646 --> 00:38:33,946
And stay updated on features.

867
00:38:33,946 --> 00:38:36,606
There's more this year in

868
00:38:36,606 --> 00:38:39,366
that you can take advantage

869
00:38:39,566 --> 00:38:41,706
to deliver great

870
00:38:42,796 --> 00:38:45,016
Along with the features

871
00:38:45,276 --> 00:38:46,626
our team added some

872
00:38:46,626 --> 00:38:48,276
to Web Inspector

873
00:38:49,396 --> 00:38:50,996
Quick Open will jump you right

874
00:38:50,996 --> 00:38:53,296
into the resources

875
00:38:53,856 --> 00:38:57,296
And Tail Call Stacks will now

876
00:38:57,296 --> 00:38:58,416
functions in the debugger.

877
00:38:59,336 --> 00:39:02,646
And earlier this spring, we

878
00:38:59,336 --> 00:39:02,646
And earlier this spring, we

879
00:39:03,236 --> 00:39:05,296
and with an updated

880
00:39:05,296 --> 00:39:07,386
And that shows the

881
00:39:07,386 --> 00:39:09,056
in the DOM Tree of

882
00:39:09,056 --> 00:39:12,096
And there's also the new

883
00:39:12,686 --> 00:39:15,186
And if you aren't already aware,

884
00:39:15,756 --> 00:39:18,446
Web Inspector is a developer

885
00:39:18,446 --> 00:39:20,206
of the WebKit Open

886
00:39:21,656 --> 00:39:25,256
WebKit is the web browser engine

887
00:39:25,256 --> 00:39:27,656
and drive WebViews

888
00:39:28,056 --> 00:39:30,126
And of course, it's also

889
00:39:30,926 --> 00:39:33,666
In this past year, our teams

890
00:39:33,666 --> 00:39:34,286
to WebKit.

891
00:39:34,516 --> 00:39:36,906
We hit 100% support for ES6.

892
00:39:37,606 --> 00:39:40,526
We improved support for the

893
00:39:41,216 --> 00:39:45,296
We also added Shadow DOM support

894
00:39:45,296 --> 00:39:46,466
and the Picture Element.

895
00:39:47,686 --> 00:39:50,276
So there's a lot going on and

896
00:39:50,276 --> 00:39:52,546
you can follow development

897
00:39:53,046 --> 00:39:55,006
Most of you here will want

898
00:39:55,436 --> 00:39:57,936
And if there are some of you

899
00:39:57,936 --> 00:39:59,496
of these, you have

900
00:39:59,496 --> 00:40:01,706
because of the way WebKit

901
00:39:59,496 --> 00:40:01,706
because of the way WebKit

902
00:40:02,396 --> 00:40:03,666
So you can find out more

903
00:40:03,666 --> 00:40:05,756
about the WebKit

904
00:40:05,756 --> 00:40:08,236
And the WebKit team, the

905
00:40:08,496 --> 00:40:09,766
blog about development work.

906
00:40:09,766 --> 00:40:11,636
In fact, we have two

907
00:40:11,856 --> 00:40:14,726
that cover the Memory Timelines

908
00:40:14,726 --> 00:40:15,766
that we talked about today.

909
00:40:15,766 --> 00:40:17,106
So if you want to

910
00:40:17,106 --> 00:40:17,956
you can dig in there.

911
00:40:18,556 --> 00:40:19,996
We also have a feature

912
00:40:19,996 --> 00:40:21,436
that gives you at-a-glance

913
00:40:21,436 --> 00:40:22,866
for our web standards progress.

914
00:40:22,866 --> 00:40:24,836
And there's also

915
00:40:24,836 --> 00:40:27,836
for WebKit nightly builds

916
00:40:28,116 --> 00:40:29,776
the Safari Technology Preview.

917
00:40:30,526 --> 00:40:32,466
It's updated every

918
00:40:32,566 --> 00:40:35,836
with an updated WebKit

919
00:40:35,836 --> 00:40:37,106
and experimental features

920
00:40:37,106 --> 00:40:39,386
in WebKit every two

921
00:40:40,496 --> 00:40:42,136
Our teams pore a lot of work

922
00:40:42,136 --> 00:40:44,296
into Safari WebKit

923
00:40:44,486 --> 00:40:45,896
And the Web Inspector

924
00:40:45,896 --> 00:40:48,526
to use these new performance

925
00:40:48,766 --> 00:40:50,996
to find issues and

926
00:40:50,996 --> 00:40:52,116
in Web Inspector itself.

927
00:40:52,116 --> 00:40:54,226
I can't wait to see what

928
00:40:54,626 --> 00:40:56,696
So for more information,

929
00:40:56,696 --> 00:40:58,956
and download the slides

930
00:40:59,716 --> 00:41:03,296
There are lots of other relevant

931
00:40:59,716 --> 00:41:03,296
There are lots of other relevant

932
00:41:03,296 --> 00:41:04,826
as well as in past years.

933
00:41:05,106 --> 00:41:07,496
You can find those on

934
00:41:08,686 --> 00:41:12,406
So on behalf of Brian, myself,

935
00:41:12,686 --> 00:41:13,556
thank you for being here.

936
00:41:13,686 --> 00:41:14,976
enjoy the rest of WWDC.

937
00:41:15,508 --> 00:41:17,508
[ Applause ]
