1
00:00:07,516 --> 00:00:18,500
[ Music ]

2
00:00:24,516 --> 00:00:29,006
[ Applause ]

3
00:00:29,506 --> 00:00:30,866
&gt;&gt; Thank you so much,

4
00:00:30,866 --> 00:00:33,976
And my name is David Hayward and

5
00:00:34,266 --> 00:00:35,726
about editing Live Photos

6
00:00:35,726 --> 00:00:37,786
and processing RAW

7
00:00:37,786 --> 00:00:39,886
We got a bunch of great

8
00:00:40,786 --> 00:00:42,956
First I'll give a brief

9
00:00:42,956 --> 00:00:44,536
for those of you who

10
00:00:45,086 --> 00:00:47,056
Then we'll be talking about

11
00:00:47,056 --> 00:00:47,746
for this morning.

12
00:00:48,166 --> 00:00:50,746
First we'll be adjusting

13
00:00:51,476 --> 00:00:53,796
Second, we'll be

14
00:00:53,796 --> 00:00:56,706
And third, we'll be talking

15
00:00:56,706 --> 00:00:59,276
in a new way using

16
00:00:59,846 --> 00:01:03,396
So first, so a very brief

17
00:00:59,846 --> 00:01:03,396
So first, so a very brief

18
00:01:04,275 --> 00:01:07,696
The reason for Core Image is

19
00:01:07,696 --> 00:01:10,716
high-performance API to

20
00:01:11,396 --> 00:01:14,126
The basic idea is you start with

21
00:01:14,126 --> 00:01:16,936
from a JPEG or a file or

22
00:01:16,936 --> 00:01:19,556
to apply a filter to it and

23
00:01:20,006 --> 00:01:22,356
and it's very, very easy

24
00:01:22,766 --> 00:01:26,396
All you do is you take your

25
00:01:26,516 --> 00:01:29,466
and specify the name of the

26
00:01:29,466 --> 00:01:30,946
that are appropriate

27
00:01:31,496 --> 00:01:32,206
It's super easy.

28
00:01:32,626 --> 00:01:34,586
And, of course, you can do

29
00:01:34,836 --> 00:01:38,496
You can chain together multiple

30
00:01:38,496 --> 00:01:41,056
or graphs and get

31
00:01:42,356 --> 00:01:43,616
One of the great features

32
00:01:43,616 --> 00:01:45,936
of Core Image is it provides

33
00:01:46,396 --> 00:01:48,236
and this is very

34
00:01:48,606 --> 00:01:52,136
We now have a variety of devices

35
00:01:52,286 --> 00:01:53,566
and wide gamut output.

36
00:01:54,156 --> 00:01:56,856
And what Core Image will do is

37
00:01:56,856 --> 00:01:58,616
appropriate nodes

38
00:01:59,016 --> 00:02:01,326
so that it will match

39
00:01:59,016 --> 00:02:01,326
so that it will match

40
00:02:01,476 --> 00:02:04,026
to the Core Image working

41
00:02:04,026 --> 00:02:05,396
to display, it will match

42
00:02:05,396 --> 00:02:07,446
from the working space

43
00:02:08,626 --> 00:02:10,696
And this is something you

44
00:02:10,696 --> 00:02:12,246
of because wide color images

45
00:02:12,246 --> 00:02:14,606
and wide color displays

46
00:02:15,706 --> 00:02:17,416
and many open source libraries

47
00:02:17,416 --> 00:02:20,406
for doing image processing

48
00:02:20,506 --> 00:02:22,766
So this is a great feature of

49
00:02:22,766 --> 00:02:24,616
of all that for you in

50
00:02:27,146 --> 00:02:28,336
Another thing to be aware of is

51
00:02:28,336 --> 00:02:32,016
that each filter actually has

52
00:02:32,016 --> 00:02:33,916
with it, a small

53
00:02:34,656 --> 00:02:38,576
And all of our built-in filters

54
00:02:38,576 --> 00:02:40,916
of the great features is if

55
00:02:40,916 --> 00:02:44,336
of filters, Core Image will

56
00:02:44,416 --> 00:02:46,186
subroutines into

57
00:02:46,776 --> 00:02:49,186
The idea behind this is

58
00:02:49,286 --> 00:02:52,436
by reducing the -- and

59
00:02:52,436 --> 00:02:55,496
of intermediate buffers.

60
00:02:56,656 --> 00:02:59,086
Core Image has over

61
00:02:59,126 --> 00:03:00,666
They are the exact

62
00:02:59,126 --> 00:03:00,666
They are the exact

63
00:03:00,666 --> 00:03:05,086
of our platforms;

64
00:03:05,586 --> 00:03:07,676
We have a few new ones this year

65
00:03:08,616 --> 00:03:09,466
One is a new filter

66
00:03:09,466 --> 00:03:12,236
for generating hue

67
00:03:12,876 --> 00:03:15,336
It creates a gradient

68
00:03:15,546 --> 00:03:18,606
and then you can specify, as

69
00:03:18,606 --> 00:03:20,906
of the image and also

70
00:03:20,906 --> 00:03:21,696
that the wheel is in.

71
00:03:21,766 --> 00:03:26,136
And as you might guess, this

72
00:03:26,386 --> 00:03:30,486
as the basis of the color

73
00:03:30,486 --> 00:03:36,206
of the different types

74
00:03:36,206 --> 00:03:39,526
Another new filter we have

75
00:03:39,526 --> 00:03:40,556
and NinePartTiled.

76
00:03:40,916 --> 00:03:43,546
The idea behind this is you

77
00:03:43,546 --> 00:03:45,956
like this picture frame here,

78
00:03:45,956 --> 00:03:48,216
up to fit an arbitrary size.

79
00:03:48,476 --> 00:03:49,976
This filter is very easy to use.

80
00:03:49,976 --> 00:03:54,736
You provide an input image and

81
00:03:54,826 --> 00:03:56,536
two horizontal and two vertical.

82
00:03:56,736 --> 00:03:58,206
Once you've specified

83
00:03:58,206 --> 00:04:00,606
you can specify the size

84
00:03:58,206 --> 00:04:00,606
you can specify the size

85
00:04:01,416 --> 00:04:02,336
It's very easy to use.

86
00:04:02,896 --> 00:04:07,206
The third new filter is

87
00:04:07,206 --> 00:04:08,076
quite interesting.

88
00:04:08,076 --> 00:04:11,516
The idea is to start

89
00:04:11,806 --> 00:04:13,856
In this case it's an image

90
00:04:13,856 --> 00:04:16,036
but it can also contain

91
00:04:16,356 --> 00:04:19,356
So imagine you have a small

92
00:04:19,875 --> 00:04:23,366
and maybe it's only 6 by 7

93
00:04:23,366 --> 00:04:25,076
that to the full

94
00:04:26,446 --> 00:04:28,836
The idea is to upsample

95
00:04:29,166 --> 00:04:30,106
the small color image,

96
00:04:31,006 --> 00:04:33,966
but respect the edges

97
00:04:34,476 --> 00:04:36,166
Now, if you weren't to

98
00:04:36,166 --> 00:04:39,356
if you were just to stretch the

99
00:04:39,356 --> 00:04:43,006
as the full image, you'd

100
00:04:43,476 --> 00:04:45,046
but with this filter

101
00:04:45,296 --> 00:04:46,506
You can actually get something

102
00:04:46,506 --> 00:04:49,376
that preserves the edges while

103
00:04:49,376 --> 00:04:51,616
And this is actually a

104
00:04:51,616 --> 00:04:52,866
of other types of algorithms.

105
00:04:53,126 --> 00:04:56,396
In fact, in the new version

106
00:04:56,396 --> 00:05:00,116
to improve the behavior of

107
00:04:56,396 --> 00:05:00,116
to improve the behavior of

108
00:05:00,116 --> 00:05:03,016
I look forward to

109
00:05:03,016 --> 00:05:03,926
that in your application.

110
00:05:04,646 --> 00:05:06,696
We also have some new

111
00:05:07,256 --> 00:05:09,106
and do things that

112
00:05:09,136 --> 00:05:10,036
in Core Image this year.

113
00:05:10,776 --> 00:05:13,176
One is we have Metal

114
00:05:13,556 --> 00:05:16,926
So if you use any of

115
00:05:16,926 --> 00:05:18,276
or your own custom kernels,

116
00:05:18,686 --> 00:05:21,736
all of those kernels

117
00:05:21,736 --> 00:05:23,016
to Metal on the fly for you.

118
00:05:23,336 --> 00:05:25,386
It's a great way of

119
00:05:25,886 --> 00:05:29,186
with very little

120
00:05:29,506 --> 00:05:32,356
We've also made some great

121
00:05:32,356 --> 00:05:35,076
which is creating a

122
00:05:35,536 --> 00:05:37,686
and this now produces

123
00:05:37,686 --> 00:05:38,516
than it has in the past.

124
00:05:38,516 --> 00:05:40,636
So you can actually use

125
00:05:40,926 --> 00:05:45,216
to animate an image

126
00:05:45,866 --> 00:05:47,386
Also another new feature is

127
00:05:47,386 --> 00:05:49,666
that Core Image now

128
00:05:49,666 --> 00:05:50,866
to Core Graphics, which is

129
00:05:50,966 --> 00:05:53,366
that Core Graphics

130
00:05:53,526 --> 00:05:55,446
Let me just talk for a

131
00:05:55,446 --> 00:05:56,846
because this brings up

132
00:05:58,256 --> 00:06:01,196
We're all familiar with the

133
00:05:58,256 --> 00:06:01,196
We're all familiar with the

134
00:06:01,756 --> 00:06:06,516
of RGBA8 and it takes just

135
00:06:06,516 --> 00:06:10,246
and has 8 bits of depth,

136
00:06:10,246 --> 00:06:11,426
in the range of 0 to 1.

137
00:06:12,376 --> 00:06:14,006
However, this format

138
00:06:14,006 --> 00:06:18,686
for representing wide-colored

139
00:06:18,716 --> 00:06:20,796
and it's limited to the

140
00:06:21,236 --> 00:06:25,156
So in the past the alternative

141
00:06:25,666 --> 00:06:28,636
which takes 16 bytes per pixel,

142
00:06:28,986 --> 00:06:31,866
but gives you all the depth and

143
00:06:32,916 --> 00:06:35,456
Another feature of the fact

144
00:06:35,456 --> 00:06:37,056
that what quantization there is,

145
00:06:37,056 --> 00:06:38,436
it's distributed

146
00:06:38,466 --> 00:06:41,326
which is a good fit for the way

147
00:06:41,326 --> 00:06:45,486
Well, there's a new format

148
00:06:45,486 --> 00:06:48,286
and now Core Graphics does

149
00:06:48,286 --> 00:06:51,536
to as the Goldilocks pixel

150
00:06:51,536 --> 00:06:55,256
and this allows you to,

151
00:06:55,726 --> 00:06:59,816
store data that is 10 bits

152
00:06:59,816 --> 00:07:03,216
in the range of minus

153
00:06:59,816 --> 00:07:03,216
in the range of minus

154
00:07:03,556 --> 00:07:05,806
And again, those values are

155
00:07:05,806 --> 00:07:08,066
so it's great to store

156
00:07:08,066 --> 00:07:09,646
that won't be perceived

157
00:07:10,296 --> 00:07:12,826
So I highly recommend

158
00:07:13,466 --> 00:07:15,306
There's another new format

159
00:07:15,306 --> 00:07:18,176
which is that Core Video

160
00:07:18,446 --> 00:07:19,346
with the long name

161
00:07:19,346 --> 00:07:23,626
of 30RGBLittle [inaudible]

162
00:07:23,726 --> 00:07:27,646
and this also supports 10

163
00:07:27,646 --> 00:07:31,676
in an only 4 bytes per pixel by

164
00:07:32,026 --> 00:07:34,266
So there's many cases where

165
00:07:34,636 --> 00:07:37,816
and Core Image supports

166
00:07:37,816 --> 00:07:39,966
or to CV pixel buffers

167
00:07:40,316 --> 00:07:45,756
So now I'd like to actually talk

168
00:07:45,756 --> 00:07:49,006
of our discussion today,

169
00:07:49,006 --> 00:07:50,686
with Core Image, and

170
00:07:50,686 --> 00:07:51,666
to talk about this today.

171
00:07:51,666 --> 00:07:53,196
We've been working on

172
00:07:53,196 --> 00:07:55,676
It's been a lot of hard

173
00:07:55,676 --> 00:07:58,456
about the fact that we've

174
00:07:58,986 --> 00:08:01,536
In talking about this, I'd like

175
00:07:58,986 --> 00:08:01,536
In talking about this, I'd like

176
00:08:02,106 --> 00:08:03,796
how to use the CIRAWFilter API,

177
00:08:03,796 --> 00:08:06,716
some notes on supporting

178
00:08:07,126 --> 00:08:09,166
and also tips for

179
00:08:10,516 --> 00:08:12,776
So first, what is a RAW file?

180
00:08:13,376 --> 00:08:17,546
Well, the way most cameras work

181
00:08:18,106 --> 00:08:20,286
a color filter array

182
00:08:20,836 --> 00:08:24,016
And the idea is light from the

183
00:08:24,126 --> 00:08:25,406
through the color filter array

184
00:08:25,646 --> 00:08:27,546
and it's counted by

185
00:08:28,596 --> 00:08:31,016
And this data is actually

186
00:08:31,016 --> 00:08:34,716
of course, but in order to turn

187
00:08:34,716 --> 00:08:38,015
a lot of image processing

188
00:08:38,015 --> 00:08:40,385
to produce a pleasing

189
00:08:41,726 --> 00:08:43,066
So I want to talk a

190
00:08:43,405 --> 00:08:46,996
But the main idea here is

191
00:08:46,996 --> 00:08:49,416
that was captured by the

192
00:08:49,626 --> 00:08:51,056
If you take the data

193
00:08:51,436 --> 00:08:54,346
after the image processing,

194
00:08:55,766 --> 00:08:58,476
RAW files store the

195
00:08:58,726 --> 00:09:02,266
and JPEG files store the

196
00:08:58,726 --> 00:09:02,266
and JPEG files store the

197
00:09:03,546 --> 00:09:04,846
Another way to think of it is

198
00:09:04,846 --> 00:09:06,646
that the RAW file

199
00:09:06,646 --> 00:09:08,976
from which you can

200
00:09:08,976 --> 00:09:12,316
a JPEG stores the

201
00:09:12,316 --> 00:09:14,466
after they've been baked

202
00:09:15,456 --> 00:09:19,176
In order to go from

203
00:09:19,176 --> 00:09:21,146
to a final baked product,

204
00:09:21,146 --> 00:09:23,696
of stages, so let me just

205
00:09:24,766 --> 00:09:26,846
First of all, we have to

206
00:09:26,976 --> 00:09:28,966
that tells us how

207
00:09:28,966 --> 00:09:30,006
to extend the metaphor.

208
00:09:31,116 --> 00:09:33,416
Also, we need to decode the

209
00:09:34,546 --> 00:09:39,406
We need to demosaic the image to

210
00:09:39,406 --> 00:09:41,256
from the data that was captured

211
00:09:41,256 --> 00:09:43,936
with only one RGB value

212
00:09:44,356 --> 00:09:48,506
We need to apply geometric

213
00:09:49,866 --> 00:09:53,426
Noise reduction, which is a

214
00:09:54,476 --> 00:09:57,226
We need to do color matching

215
00:09:57,226 --> 00:09:58,256
that the sensor captured

216
00:09:58,506 --> 00:09:59,936
into the output-referred

217
00:10:00,046 --> 00:10:04,296
And then we need to do

218
00:10:04,296 --> 00:10:05,206
and temperature and tint.

219
00:10:05,746 --> 00:10:08,616
And lastly, but very

220
00:10:08,616 --> 00:10:11,576
contrast and saturation to

221
00:10:12,006 --> 00:10:13,086
That's a lot of stages.

222
00:10:13,786 --> 00:10:16,766
What are some of the

223
00:10:16,936 --> 00:10:18,476
Well, one of the great things is

224
00:10:18,476 --> 00:10:21,306
that the RAW file contains

225
00:10:21,726 --> 00:10:23,986
which is what enables

226
00:10:25,906 --> 00:10:28,336
Another feature is that RAW

227
00:10:28,846 --> 00:10:29,316
every year.

228
00:10:29,706 --> 00:10:32,056
So with the RAW you

229
00:10:32,056 --> 00:10:34,916
that an image you took yesterday

230
00:10:34,916 --> 00:10:38,746
when you process it next year.

231
00:10:39,456 --> 00:10:41,986
Also, RAW files are

232
00:10:42,046 --> 00:10:44,316
They can actually be rendered

233
00:10:44,746 --> 00:10:46,846
which is also a good

234
00:10:46,846 --> 00:10:47,896
of displays we have today.

235
00:10:49,656 --> 00:10:52,176
Also, a user can choose

236
00:10:52,176 --> 00:10:53,316
to interpret the RAW file.

237
00:10:53,676 --> 00:10:55,046
Just like giving

238
00:10:55,096 --> 00:10:57,266
to two different chefs, you

239
00:10:57,686 --> 00:11:00,116
and some users might prefer

240
00:10:57,686 --> 00:11:00,116
and some users might prefer

241
00:11:00,726 --> 00:11:05,216
That said, there are some great

242
00:11:06,226 --> 00:11:08,366
First of all, because the

243
00:11:08,366 --> 00:11:09,936
they are fast to

244
00:11:11,096 --> 00:11:13,706
They contain colors

245
00:11:13,706 --> 00:11:16,026
that target a specific

246
00:11:16,896 --> 00:11:19,146
And that also gives

247
00:11:20,436 --> 00:11:23,986
Also, it's worth mentioning that

248
00:11:23,986 --> 00:11:25,556
of producing JPEG images,

249
00:11:25,866 --> 00:11:30,806
and our iOS cameras are an

250
00:11:31,946 --> 00:11:34,456
So on the subject of RAW,

251
00:11:34,456 --> 00:11:36,346
about how our platforms

252
00:11:37,286 --> 00:11:41,526
So the great news is that now

253
00:11:41,756 --> 00:11:44,286
and upcoming seed

254
00:11:45,836 --> 00:11:48,426
This means we support over

255
00:11:48,426 --> 00:11:49,966
from 16 different vendors.

256
00:11:50,486 --> 00:11:53,496
And also, we support DNG

257
00:11:53,496 --> 00:11:54,996
by our own iOS devices.

258
00:11:55,886 --> 00:12:01,736
The iOS devices include

259
00:11:55,886 --> 00:12:01,736
The iOS devices include

260
00:12:01,846 --> 00:12:03,816
and also the iPad Pro 9.7.

261
00:12:05,376 --> 00:12:06,426
That is really exciting.

262
00:12:06,956 --> 00:12:09,096
I recommend you all go back,

263
00:12:09,096 --> 00:12:11,306
and watch the Advances

264
00:12:11,306 --> 00:12:13,636
which talks about the new

265
00:12:13,636 --> 00:12:15,526
to capture RAW on these devices.

266
00:12:15,526 --> 00:12:20,076
Another great thing is that

267
00:12:20,076 --> 00:12:24,396
performance RAW pipeline

268
00:12:24,846 --> 00:12:27,016
and this is actually

269
00:12:27,176 --> 00:12:29,726
I counted the other day

270
00:12:29,726 --> 00:12:34,026
and it involves over 4,500

271
00:12:34,676 --> 00:12:36,406
and this all works

272
00:12:36,406 --> 00:12:39,516
and it's a great testament to

273
00:12:39,516 --> 00:12:40,646
of Core Image to be able

274
00:12:40,646 --> 00:12:42,956
to handle complex

275
00:12:43,496 --> 00:12:49,346
Our pipeline on iOS

276
00:12:49,656 --> 00:12:52,516
and you can test for this in

277
00:12:52,516 --> 00:12:56,366
for the iOS GPU Family 2.

278
00:12:57,746 --> 00:12:59,486
Another note on platform

279
00:12:59,486 --> 00:13:01,636
We continuously add

280
00:12:59,486 --> 00:13:01,636
We continuously add

281
00:13:01,636 --> 00:13:04,576
as new ones become available,

282
00:13:04,576 --> 00:13:06,316
of existing cameras

283
00:13:07,236 --> 00:13:09,866
New cameras are added in

284
00:13:10,476 --> 00:13:13,186
And also, we improve our

285
00:13:13,566 --> 00:13:15,166
And our pipelines are versions,

286
00:13:15,166 --> 00:13:17,466
so you can either use our

287
00:13:17,466 --> 00:13:19,056
and use previous

288
00:13:20,286 --> 00:13:23,966
So without further ado, I

289
00:13:23,966 --> 00:13:24,976
of how this looks in action.

290
00:13:32,106 --> 00:13:34,296
So what I have here

291
00:13:34,296 --> 00:13:36,556
There's an early version of that

292
00:13:36,556 --> 00:13:39,806
and it's called RAWExposed,

293
00:13:39,806 --> 00:13:42,946
and this latest version is

294
00:13:43,496 --> 00:13:45,416
So what we can do is

295
00:13:45,416 --> 00:13:46,816
and actually use

296
00:13:47,436 --> 00:13:50,346
We have three RAW images here

297
00:13:50,346 --> 00:13:52,716
that were taken with

298
00:13:53,166 --> 00:13:55,556
And you can see here that

299
00:13:55,556 --> 00:13:58,046
overexposed, but one of the

300
00:13:58,046 --> 00:13:59,926
that you can actually

301
00:14:00,356 --> 00:14:01,896
So we can go here and edit it

302
00:14:02,226 --> 00:14:04,816
and use our photo

303
00:14:05,376 --> 00:14:07,136
to edit this as a RAW file.

304
00:14:07,956 --> 00:14:10,706
So now, since we're

305
00:14:10,706 --> 00:14:12,016
we can actually make

306
00:14:12,996 --> 00:14:17,226
We can adjust the

307
00:14:18,596 --> 00:14:21,486
You can see we can pan

308
00:14:22,146 --> 00:14:23,466
and we get great results.

309
00:14:24,576 --> 00:14:27,246
Once I'm happy with the

310
00:14:27,246 --> 00:14:29,046
than it did before,

311
00:14:29,046 --> 00:14:32,516
and it will generate a new

312
00:14:32,516 --> 00:14:34,316
and now it is actually

313
00:14:34,316 --> 00:14:34,976
in the Photos application.

314
00:14:35,516 --> 00:14:42,876
[ Applause ]

315
00:14:43,376 --> 00:14:45,586
One of the other things

316
00:14:45,586 --> 00:14:46,816
that you can make

317
00:14:46,816 --> 00:14:48,046
on white balance in an image.

318
00:14:48,046 --> 00:14:49,986
Again, on this image

319
00:14:49,986 --> 00:14:51,316
but it may be a little crooked,

320
00:14:51,316 --> 00:14:52,706
but also the white

321
00:14:53,346 --> 00:14:54,466
So I'm going to go in here

322
00:14:54,846 --> 00:14:58,396
and adjust the white

323
00:14:58,396 --> 00:14:59,916
and I can make a much

324
00:14:59,916 --> 00:15:01,666
And again, we can zoom

325
00:14:59,916 --> 00:15:01,666
And again, we can zoom

326
00:15:02,246 --> 00:15:04,556
And we can adjust

327
00:15:05,406 --> 00:15:08,226
So we hit Done and save that.

328
00:15:10,266 --> 00:15:12,096
Another image I want to

329
00:15:12,096 --> 00:15:13,656
which is actually

330
00:15:13,656 --> 00:15:15,366
I want to show you a little bit

331
00:15:15,366 --> 00:15:16,676
about our noise reduction

332
00:15:17,146 --> 00:15:19,566
Over half of our 4,500 lines

333
00:15:19,566 --> 00:15:21,486
of kernel code relate

334
00:15:22,046 --> 00:15:23,906
So if I go in here

335
00:15:24,906 --> 00:15:26,176
you can see that there's some --

336
00:15:26,236 --> 00:15:27,526
hopefully at least

337
00:15:27,526 --> 00:15:29,046
you can see the grain

338
00:15:30,056 --> 00:15:32,326
One of the features we expose

339
00:15:32,326 --> 00:15:34,306
to turn off our noise

340
00:15:34,796 --> 00:15:36,746
and then you can actually

341
00:15:36,746 --> 00:15:39,036
of the noise that's actually

342
00:15:39,106 --> 00:15:41,736
And it's this very

343
00:15:41,736 --> 00:15:44,596
of doing the noise

344
00:15:44,596 --> 00:15:46,576
that doesn't have

345
00:15:46,576 --> 00:15:49,276
but still preserves

346
00:15:49,526 --> 00:15:50,766
that are intended in the image.

347
00:15:52,376 --> 00:15:55,256
So I'll save that as well.

348
00:15:55,466 --> 00:15:59,546
Lastly, I want to demonstrate an

349
00:16:00,136 --> 00:16:02,446
out in the lobby, which

350
00:16:02,446 --> 00:16:03,966
Yes, I was one of those people

351
00:16:04,316 --> 00:16:06,316
[ Laughter ]

352
00:16:06,616 --> 00:16:09,586
And here I want to

353
00:16:09,586 --> 00:16:11,256
this is an image that's

354
00:16:11,256 --> 00:16:12,706
because it's got some

355
00:16:12,706 --> 00:16:14,386
and some areas that

356
00:16:15,586 --> 00:16:18,986
One thing I could do here is I

357
00:16:18,986 --> 00:16:20,796
well, I have a highlight

358
00:16:20,796 --> 00:16:25,446
to bring the highlights

359
00:16:25,666 --> 00:16:27,326
I can also bring

360
00:16:27,786 --> 00:16:30,166
And now I can really see what's

361
00:16:30,786 --> 00:16:32,236
But now the shadows

362
00:16:32,236 --> 00:16:33,316
so I can then increase those.

363
00:16:33,316 --> 00:16:36,786
So this gives you an idea of the

364
00:16:36,786 --> 00:16:38,656
on RAW files, and

365
00:16:38,656 --> 00:16:41,696
of having deeper

366
00:16:41,786 --> 00:16:42,826
that you get in a RAW file.

367
00:16:43,936 --> 00:16:47,706
So I'll hit Done on that.

368
00:16:48,046 --> 00:16:49,976
So that's our demo

369
00:16:50,516 --> 00:16:55,546
[ Applause ]

370
00:16:56,046 --> 00:16:57,956
And a huge thanks to the team

371
00:16:58,356 --> 00:17:01,836
So let me talk about the API,

372
00:16:58,356 --> 00:17:01,836
So let me talk about the API,

373
00:17:01,836 --> 00:17:03,706
to provide a demo application.

374
00:17:03,706 --> 00:17:05,675
We want to enable your

375
00:17:05,675 --> 00:17:07,006
to do this in your apps as well.

376
00:17:07,586 --> 00:17:09,435
So we have an API

377
00:17:09,435 --> 00:17:11,096
to as the CIRAWFilter API,

378
00:17:11,096 --> 00:17:14,046
and it gives your application

379
00:17:14,526 --> 00:17:17,736
It gives your application

380
00:17:17,736 --> 00:17:20,675
extended range, half-float

381
00:17:21,766 --> 00:17:24,596
It also gives you control

382
00:17:24,596 --> 00:17:26,185
in the RAW processing pipeline,

383
00:17:26,185 --> 00:17:27,465
such as those that

384
00:17:28,806 --> 00:17:31,276
It also provides fast

385
00:17:31,276 --> 00:17:32,966
the GPU on all our devices.

386
00:17:34,486 --> 00:17:35,786
So how does this

387
00:17:35,786 --> 00:17:37,086
The API is actually very simple.

388
00:17:37,376 --> 00:17:41,116
You start with an input, which

389
00:17:41,416 --> 00:17:43,376
or even in our next

390
00:17:43,376 --> 00:17:45,356
that works using CVPixelBuffer.

391
00:17:46,316 --> 00:17:47,456
That is our input.

392
00:17:47,456 --> 00:17:48,876
We're then going to

393
00:17:48,916 --> 00:17:50,886
of a CIRAWFilter

394
00:17:51,426 --> 00:17:55,316
At the time that filter is

395
00:17:55,316 --> 00:17:58,596
default values for all the

396
00:17:58,856 --> 00:18:01,086
that you might want to

397
00:17:58,856 --> 00:18:01,086
that you might want to

398
00:18:02,836 --> 00:18:05,716
Once you have the

399
00:18:05,716 --> 00:18:07,966
for a CIImage, and you can

400
00:18:07,966 --> 00:18:09,156
Let me just show you the code

401
00:18:09,156 --> 00:18:10,776
and how simple it

402
00:18:12,146 --> 00:18:14,026
All we need to do

403
00:18:14,026 --> 00:18:16,076
We're going to create

404
00:18:16,076 --> 00:18:17,696
of the CIFilter given that URL.

405
00:18:18,666 --> 00:18:21,186
Then, for example, if

406
00:18:21,186 --> 00:18:22,616
of the current noise

407
00:18:22,736 --> 00:18:24,546
we can just access the value

408
00:18:24,546 --> 00:18:27,546
for key kCIInput

409
00:18:28,736 --> 00:18:30,596
If we want to alter

410
00:18:30,596 --> 00:18:32,156
We just set a new

411
00:18:32,906 --> 00:18:34,246
When we're done making changes,

412
00:18:34,536 --> 00:18:36,606
we ask for the outputImage

413
00:18:36,606 --> 00:18:37,656
That's all we need to do.

414
00:18:38,136 --> 00:18:40,276
Of course, you might want

415
00:18:40,656 --> 00:18:43,516
so typically you'll take that

416
00:18:43,516 --> 00:18:47,066
in a UIImage view or

417
00:18:47,066 --> 00:18:48,876
or other type of view system.

418
00:18:49,516 --> 00:18:51,616
In this case the user might

419
00:18:51,616 --> 00:18:53,486
maybe this image is a

420
00:18:53,736 --> 00:18:57,466
so in your UI you can have

421
00:18:57,966 --> 00:18:59,936
and then the user can

422
00:19:00,256 --> 00:19:03,216
You can then pass that in as a

423
00:19:03,726 --> 00:19:06,066
Then you can ask for

424
00:19:06,856 --> 00:19:09,676
and then you can then

425
00:19:09,676 --> 00:19:11,016
with the exposure

426
00:19:12,316 --> 00:19:13,686
And this is very easy as well.

427
00:19:15,956 --> 00:19:19,606
You also might want to take your

428
00:19:19,606 --> 00:19:21,406
you want to export your

429
00:19:21,406 --> 00:19:22,716
to produce a full-size image,

430
00:19:23,096 --> 00:19:25,356
or you may be exporting several

431
00:19:25,926 --> 00:19:29,246
So you might want to, in those

432
00:19:29,246 --> 00:19:34,286
for passing to other APIs, or

433
00:19:34,286 --> 00:19:36,926
and we have some easy to

434
00:19:38,286 --> 00:19:40,376
If you're going to be

435
00:19:40,376 --> 00:19:41,776
of large files like RAWs,

436
00:19:42,106 --> 00:19:45,556
we recommend you create

437
00:19:45,556 --> 00:19:46,396
for that purpose.

438
00:19:46,566 --> 00:19:50,946
Specifically, you want to

439
00:19:50,946 --> 00:19:52,686
in a singleton variable,

440
00:19:52,686 --> 00:19:54,586
to create a new context

441
00:19:55,126 --> 00:19:57,516
This allows CI to

442
00:19:57,656 --> 00:19:59,606
of all the kernels

443
00:20:01,166 --> 00:20:03,566
However, because we're going to

444
00:20:03,566 --> 00:20:06,336
we don't need Core Image to be

445
00:20:06,336 --> 00:20:07,816
so you can specify false there,

446
00:20:07,816 --> 00:20:10,066
and that will help reduce

447
00:20:10,226 --> 00:20:11,086
in this situation.

448
00:20:12,306 --> 00:20:14,126
Also, there's a setting

449
00:20:14,126 --> 00:20:16,296
to use a low priority

450
00:20:16,926 --> 00:20:19,106
The idea behind this, if

451
00:20:19,106 --> 00:20:21,236
you don't want the

452
00:20:21,236 --> 00:20:24,216
for that background operation

453
00:20:24,216 --> 00:20:26,636
of your foreground UI,

454
00:20:26,636 --> 00:20:28,036
in Core Image or Core Animation.

455
00:20:29,306 --> 00:20:30,966
So this is great for

456
00:20:30,966 --> 00:20:32,916
And a great new thing we're

457
00:20:32,916 --> 00:20:38,736
that this option is also

458
00:20:39,456 --> 00:20:42,026
Once you have your context,

459
00:20:42,346 --> 00:20:44,666
You get to decide what color

460
00:20:44,816 --> 00:20:46,936
For example, the

461
00:20:47,626 --> 00:20:49,216
And then we have a

462
00:20:49,216 --> 00:20:52,016
for taking a CIImage and

463
00:20:52,166 --> 00:20:52,826
Super easy.

464
00:20:52,826 --> 00:20:54,786
You specify the CIImage,

465
00:20:55,226 --> 00:20:57,586
the destination URL,

466
00:20:58,786 --> 00:20:59,826
This is also a good time

467
00:20:59,826 --> 00:21:03,556
to specify what compression

468
00:20:59,826 --> 00:21:03,556
to specify what compression

469
00:21:04,876 --> 00:21:07,296
Now, in this case this will

470
00:21:07,296 --> 00:21:10,406
that has been tagged with a

471
00:21:10,406 --> 00:21:14,046
of producing a wide-gamut image

472
00:21:14,046 --> 00:21:18,766
on any platform that supports

473
00:21:19,566 --> 00:21:22,036
However, if you think your

474
00:21:22,036 --> 00:21:23,606
that doesn't support

475
00:21:23,606 --> 00:21:25,266
we have a new option

476
00:21:25,986 --> 00:21:27,756
This is an option

477
00:21:27,756 --> 00:21:29,416
of the CGImageDestination API,

478
00:21:30,356 --> 00:21:33,776
and it's CGImageDestination

479
00:21:34,686 --> 00:21:37,556
The idea behind this is it

480
00:21:37,556 --> 00:21:40,906
in the P3 colorSpace, but

481
00:21:40,906 --> 00:21:42,036
and with a custom profile,

482
00:21:42,036 --> 00:21:44,196
such that that image will

483
00:21:44,196 --> 00:21:47,746
if your recipient of that

484
00:21:47,746 --> 00:21:48,446
color management.

485
00:21:48,826 --> 00:21:50,016
So this is a great

486
00:21:51,566 --> 00:21:55,616
Another thing is if you want

487
00:21:55,616 --> 00:21:58,296
from a CIImage, we have a

488
00:21:58,296 --> 00:21:59,296
with some new options.

489
00:22:00,176 --> 00:22:02,116
We have this convenience

490
00:22:02,116 --> 00:22:04,836
to specify what the

491
00:22:04,836 --> 00:22:06,106
that you want to render to is.

492
00:22:07,546 --> 00:22:10,236
You may choose, however,

493
00:22:10,526 --> 00:22:12,486
that has the format of RGBAh,

494
00:22:12,486 --> 00:22:14,926
the Goldilocks pixel format

495
00:22:14,926 --> 00:22:17,366
And in that case you

496
00:22:17,366 --> 00:22:18,606
to use a special color space,

497
00:22:18,606 --> 00:22:21,126
which is the extendedLinearSRGB

498
00:22:21,326 --> 00:22:23,566
Because the pixel format

499
00:22:23,566 --> 00:22:27,776
of the range 0 to 1, you want

500
00:22:28,636 --> 00:22:30,536
Another option that we have

501
00:22:30,536 --> 00:22:31,816
to specify whether the act

502
00:22:31,816 --> 00:22:34,136
of creating the CGImage

503
00:22:34,136 --> 00:22:35,746
in a deferred or

504
00:22:36,376 --> 00:22:39,746
If you specify deferred,

505
00:22:39,746 --> 00:22:43,506
in rendering the CIImage

506
00:22:43,506 --> 00:22:44,776
when the CGImage is drawn.

507
00:22:45,266 --> 00:22:46,996
This is a great way

508
00:22:47,196 --> 00:22:49,116
especially if you're only

509
00:22:49,116 --> 00:22:51,366
of that CGImage later,

510
00:22:51,366 --> 00:22:52,856
to be drawing that CGImage once.

511
00:22:53,586 --> 00:22:54,946
However, if you're

512
00:22:54,946 --> 00:22:58,886
that image multiple times, you

513
00:22:59,186 --> 00:23:02,346
and in that case Core Image

514
00:22:59,186 --> 00:23:02,346
and in that case Core Image

515
00:23:02,346 --> 00:23:04,576
into the CGImage at the time

516
00:23:04,576 --> 00:23:07,796
So this is a great new,

517
00:23:07,796 --> 00:23:08,806
for your applications.

518
00:23:10,776 --> 00:23:14,926
Another advanced feature of this

519
00:23:14,926 --> 00:23:17,256
like to talk about

520
00:23:17,386 --> 00:23:20,706
As I mentioned before, there's

521
00:23:20,746 --> 00:23:24,126
in processing RAW files, and

522
00:23:24,126 --> 00:23:27,416
how can I add my own

523
00:23:27,816 --> 00:23:31,076
Well, one common place

524
00:23:31,076 --> 00:23:33,946
to add processing to the

525
00:23:33,946 --> 00:23:36,156
in the middle; after the

526
00:23:36,256 --> 00:23:39,366
but before all the nonlinear

527
00:23:39,776 --> 00:23:42,426
and contrast and color

528
00:23:42,726 --> 00:23:44,656
So we have an API just for this.

529
00:23:44,656 --> 00:23:47,456
It's a property on the

530
00:23:47,456 --> 00:23:49,746
to specify a filter

531
00:23:49,746 --> 00:23:51,386
into the middle of our graph.

532
00:23:51,476 --> 00:23:54,586
So I look forward to seeing what

533
00:23:54,586 --> 00:23:56,496
of and what can go

534
00:23:58,926 --> 00:24:01,996
Some notes on wide-gamut

535
00:23:58,926 --> 00:24:01,996
Some notes on wide-gamut

536
00:24:02,496 --> 00:24:06,156
The CIKernel language supports

537
00:24:06,696 --> 00:24:09,936
However, whenever a

538
00:24:09,936 --> 00:24:13,796
to an intermediate buffer, we

539
00:24:13,796 --> 00:24:15,336
of the current CIContext.

540
00:24:16,646 --> 00:24:20,196
On macOS the default

541
00:24:20,196 --> 00:24:21,356
our Goldilocks format.

542
00:24:22,366 --> 00:24:26,386
On iOS and tvOS our default

543
00:24:26,386 --> 00:24:28,636
which is good for performance,

544
00:24:28,796 --> 00:24:30,656
but if you're rendering

545
00:24:30,996 --> 00:24:33,276
that may not be what you want.

546
00:24:34,266 --> 00:24:38,186
Our RAW pipeline, with this

547
00:24:38,186 --> 00:24:43,066
in our pipeline force the usage

548
00:24:43,586 --> 00:24:44,946
which is critical for RAW files.

549
00:24:46,126 --> 00:24:48,566
But as you might guess,

550
00:24:48,566 --> 00:24:51,216
about wide-gamut input

551
00:24:51,216 --> 00:24:53,126
that data throughout

552
00:24:53,766 --> 00:24:57,586
you should modify your CIContext

553
00:24:57,586 --> 00:25:00,496
that you want a working

554
00:24:57,586 --> 00:25:00,496
that you want a working

555
00:25:01,216 --> 00:25:04,626
I should also mention again

556
00:25:04,626 --> 00:25:06,666
that Core Image supports

557
00:25:06,666 --> 00:25:08,216
of wide-gamut output spaces.

558
00:25:08,216 --> 00:25:12,556
For example, you can render to

559
00:25:12,556 --> 00:25:16,066
or DisplayP3, whatever

560
00:25:17,546 --> 00:25:18,646
Now, as I mentioned before,

561
00:25:18,646 --> 00:25:20,886
I was demonstrating

562
00:25:20,936 --> 00:25:23,026
RAW files can be a lot

563
00:25:23,796 --> 00:25:26,286
RAW files can be large and

564
00:25:26,286 --> 00:25:28,676
intermediate buffers to render

565
00:25:29,896 --> 00:25:31,756
And so it's important

566
00:25:31,756 --> 00:25:34,436
to reduce the high water

567
00:25:34,436 --> 00:25:37,066
that you use some of these APIs

568
00:25:37,356 --> 00:25:39,866
such as turning off caching

569
00:25:39,866 --> 00:25:41,206
where you don't need it,

570
00:25:41,206 --> 00:25:44,106
or using the new write JPEG

571
00:25:44,106 --> 00:25:44,976
which is very efficient,

572
00:25:45,636 --> 00:25:47,436
or specifying the

573
00:25:47,436 --> 00:25:48,546
when creating a CGImage.

574
00:25:50,006 --> 00:25:53,576
Some notes on limits

575
00:25:54,786 --> 00:25:58,226
On iOS devices with 2

576
00:25:58,416 --> 00:26:00,896
we support RAW files

577
00:25:58,416 --> 00:26:00,896
we support RAW files

578
00:26:00,896 --> 00:26:01,976
So we're really proud to

579
00:26:02,516 --> 00:26:07,946
[ Applause ]

580
00:26:08,446 --> 00:26:12,976
On apps running on devices with

581
00:26:13,346 --> 00:26:16,856
up to 60 megapixels, which is

582
00:26:16,856 --> 00:26:19,496
And this also holds true for

583
00:26:19,496 --> 00:26:24,216
which run in a lesser

584
00:26:24,816 --> 00:26:26,546
So that's our discussion of RAW.

585
00:26:26,546 --> 00:26:28,566
Again, I'm super proud to be

586
00:26:28,856 --> 00:26:30,646
I would like to hand the

587
00:26:30,646 --> 00:26:33,056
who will be talking about

588
00:26:33,266 --> 00:26:35,796
and how you can edit those in

589
00:26:35,796 --> 00:26:35,976
Thank you.

590
00:26:36,516 --> 00:26:42,826
[ Applause ]

591
00:26:43,326 --> 00:26:43,956
&gt;&gt; Thank you, David.

592
00:26:44,326 --> 00:26:44,886
Hello everyone.

593
00:26:45,576 --> 00:26:48,066
I'm really excited to be

594
00:26:48,066 --> 00:26:50,226
about how you can edit Live

595
00:26:50,536 --> 00:26:54,856
So first, we're going to go

596
00:26:55,126 --> 00:26:57,736
of what are Live Photos, then

597
00:26:58,646 --> 00:27:02,996
and then we'll go

598
00:26:58,646 --> 00:27:02,996
and then we'll go

599
00:27:02,996 --> 00:27:06,236
and see how you can get

600
00:27:06,896 --> 00:27:10,476
how you can then set up a

601
00:27:11,556 --> 00:27:14,066
how you can apply Core Image

602
00:27:15,216 --> 00:27:19,196
and how you can preview your

603
00:27:19,686 --> 00:27:22,926
and finally, how you can save

604
00:27:22,926 --> 00:27:25,696
into the Photo Library, and

605
00:27:25,696 --> 00:27:27,036
All right.

606
00:27:27,036 --> 00:27:27,786
So let's get started.

607
00:27:28,546 --> 00:27:32,046
So Live Photos, as you may know,

608
00:27:32,046 --> 00:27:35,396
are photos that also include

609
00:27:35,556 --> 00:27:37,406
and after the time

610
00:27:39,066 --> 00:27:42,426
And Live Photos can be

611
00:27:42,916 --> 00:27:47,726
such as iPhone 6S, 6S Plus,

612
00:27:47,816 --> 00:27:52,206
In fact, Live Photo is

613
00:27:52,276 --> 00:27:55,036
on those devices, so you

614
00:27:55,266 --> 00:27:57,606
to already have plenty of Live

615
00:27:58,976 --> 00:28:01,466
So what's new this

616
00:27:58,976 --> 00:28:01,466
So what's new this

617
00:28:02,336 --> 00:28:06,366
So first, users can now

618
00:28:06,366 --> 00:28:07,206
in Photos.

619
00:28:07,206 --> 00:28:09,676
They can apply -- all the

620
00:28:09,676 --> 00:28:11,966
to a regular photo they

621
00:28:13,346 --> 00:28:16,716
Next we have a new API

622
00:28:16,716 --> 00:28:20,136
in your application and for

623
00:28:20,136 --> 00:28:23,496
about that, I strongly recommend

624
00:28:23,496 --> 00:28:26,526
in iOS Photography session that

625
00:28:26,926 --> 00:28:30,026
It also includes a lot of

626
00:28:30,026 --> 00:28:31,126
from the capturer point of view.

627
00:28:32,196 --> 00:28:34,596
And finally, we have a new

628
00:28:34,596 --> 00:28:36,266
and that's why I'm here

629
00:28:37,466 --> 00:28:38,036
All right.

630
00:28:38,726 --> 00:28:40,516
So what can be edited exactly?

631
00:28:40,766 --> 00:28:44,186
Right. So first, of course,

632
00:28:44,186 --> 00:28:47,096
of the photo, but

633
00:28:47,096 --> 00:28:48,516
of the video frames as well.

634
00:28:49,886 --> 00:28:51,636
You can also address

635
00:28:53,376 --> 00:28:56,326
and you can change the

636
00:28:57,226 --> 00:28:58,736
Things you can't do though is

637
00:28:58,736 --> 00:29:00,476
that you can't change

638
00:28:58,736 --> 00:29:00,476
that you can't change

639
00:29:00,536 --> 00:29:05,196
or the timing of the Live Photo.

640
00:29:05,196 --> 00:29:09,386
So in order to get a Live Photo

641
00:29:09,386 --> 00:29:12,076
to do is to actually get a Live

642
00:29:12,076 --> 00:29:13,196
So there's two ways to do that,

643
00:29:13,196 --> 00:29:15,696
depending on whether you're

644
00:29:15,696 --> 00:29:18,266
extension or a PhotoKit

645
00:29:18,736 --> 00:29:22,156
In the case of a photo

646
00:29:22,156 --> 00:29:25,026
to start first by opting

647
00:29:25,026 --> 00:29:28,216
by adding the LivePhoto

648
00:29:28,216 --> 00:29:30,786
of supported media types

649
00:29:31,836 --> 00:29:36,146
And next, in your implementation

650
00:29:36,146 --> 00:29:39,596
that's called automatically,

651
00:29:39,986 --> 00:29:43,646
you can expect the content

652
00:29:44,136 --> 00:29:47,046
and you can check the media

653
00:29:47,106 --> 00:29:48,776
to make sure that

654
00:29:50,006 --> 00:29:52,096
Okay. On the other hand,

655
00:29:52,286 --> 00:29:54,096
if you're building a

656
00:29:54,696 --> 00:29:58,336
you have to request the

657
00:29:58,336 --> 00:30:01,836
from a PHAsset, and then

658
00:29:58,336 --> 00:30:01,836
from a PHAsset, and then

659
00:30:01,836 --> 00:30:04,586
and media subtypes

660
00:30:04,756 --> 00:30:05,126
All right.

661
00:30:05,176 --> 00:30:08,446
So the next step would be to set

662
00:30:09,076 --> 00:30:12,116
A LivePhotoEditingContext

663
00:30:12,116 --> 00:30:13,806
that are needed to

664
00:30:14,296 --> 00:30:16,066
It includes information

665
00:30:16,066 --> 00:30:19,096
such as its duration,

666
00:30:19,376 --> 00:30:23,686
the size of the Live Photo,

667
00:30:24,616 --> 00:30:28,026
It also has a frame processor

668
00:30:28,026 --> 00:30:29,936
to actually edit the

669
00:30:30,096 --> 00:30:33,506
and I'll tell you more

670
00:30:33,606 --> 00:30:35,966
You can adjust the

671
00:30:36,776 --> 00:30:38,686
You can ask the

672
00:30:38,736 --> 00:30:41,066
to prepare a Live

673
00:30:42,516 --> 00:30:46,166
and you can ask the

674
00:30:46,416 --> 00:30:47,546
and process a Live Photo

675
00:30:47,546 --> 00:30:48,946
for saving back to

676
00:30:50,596 --> 00:30:52,906
Creating a

677
00:30:52,906 --> 00:30:53,416
really easy.

678
00:30:53,536 --> 00:30:55,456
All you need to do is

679
00:30:55,686 --> 00:30:58,236
from a LivePhotoEditingInput

680
00:31:00,586 --> 00:31:00,876
All right.

681
00:31:01,326 --> 00:31:02,916
So now let's take a look at how

682
00:31:02,916 --> 00:31:05,016
to use the frame processor

683
00:31:06,076 --> 00:31:07,886
So the frame of a Live

684
00:31:07,886 --> 00:31:11,836
by a PHLivePhotoFrame object

685
00:31:12,096 --> 00:31:13,856
which is a CIImage

686
00:31:14,966 --> 00:31:18,446
Type, which is whether it's a

687
00:31:19,486 --> 00:31:22,186
And the time of the

688
00:31:22,186 --> 00:31:24,756
as well as the resolution

689
00:31:24,756 --> 00:31:25,906
that frame is being rendered.

690
00:31:25,996 --> 00:31:32,376
In order to implement a frame

691
00:31:32,376 --> 00:31:35,436
frame processor property on

692
00:31:35,816 --> 00:31:40,606
to be a block that takes

693
00:31:40,836 --> 00:31:43,956
and returns an image

694
00:31:43,956 --> 00:31:47,436
And here we just simply return

695
00:31:47,436 --> 00:31:50,626
so that's just necessarily

696
00:31:51,236 --> 00:31:53,416
So now let's take a

697
00:31:53,986 --> 00:31:57,766
This is a Live Photo, as

698
00:31:58,336 --> 00:32:01,026
and I can play it right there.

699
00:31:58,336 --> 00:32:01,026
and I can play it right there.

700
00:32:02,406 --> 00:32:04,156
And so let's say we want

701
00:32:04,156 --> 00:32:07,026
to apply a simple basic

702
00:32:07,216 --> 00:32:09,466
That's start with a

703
00:32:10,466 --> 00:32:11,246
Here's how to do that.

704
00:32:12,346 --> 00:32:15,376
In the implementation of

705
00:32:15,376 --> 00:32:17,616
to start with the input

706
00:32:17,956 --> 00:32:19,396
Then you compute your crop rect.

707
00:32:20,966 --> 00:32:24,316
Then you crop the image

708
00:32:24,316 --> 00:32:27,046
which is called the

709
00:32:27,496 --> 00:32:28,996
and just return that

710
00:32:28,996 --> 00:32:32,326
That's all it takes to actually

711
00:32:32,966 --> 00:32:33,686
Here's the result.

712
00:32:34,896 --> 00:32:37,096
I can place side photo, you

713
00:32:37,096 --> 00:32:40,126
but the video is also

714
00:32:41,116 --> 00:32:41,466
All right.

715
00:32:42,006 --> 00:32:45,556
So that's an example of a

716
00:32:45,926 --> 00:32:49,706
Now, what if we want to apply

717
00:32:49,906 --> 00:32:52,636
and that is one that will

718
00:32:53,146 --> 00:32:55,276
and will change while the

719
00:32:55,436 --> 00:32:56,826
So you can do that, too.

720
00:32:57,166 --> 00:32:59,646
So here let's build up

721
00:32:59,646 --> 00:33:01,106
and implement the dynamic crop.

722
00:32:59,646 --> 00:33:01,106
and implement the dynamic crop.

723
00:33:02,446 --> 00:33:04,386
So here's how to do it.

724
00:33:04,676 --> 00:33:08,666
So first we need to capture

725
00:33:08,666 --> 00:33:12,236
about the timing of the Live

726
00:33:12,236 --> 00:33:14,716
of the photo because we want

727
00:33:15,086 --> 00:33:18,266
and have your crop rect really

728
00:33:19,026 --> 00:33:23,196
Next we take it so we capture

729
00:33:24,466 --> 00:33:27,046
And you can notice

730
00:33:27,046 --> 00:33:28,706
of the frame processor

731
00:33:28,706 --> 00:33:32,306
to avoid cycling dependency.

732
00:33:33,146 --> 00:33:37,636
Here in the block we can ask for

733
00:33:37,966 --> 00:33:40,676
and then we can build a

734
00:33:40,676 --> 00:33:42,946
that information to

735
00:33:44,526 --> 00:33:46,456
And here's what the result.

736
00:33:46,456 --> 00:33:48,746
So you can see the Live Photo

737
00:33:48,746 --> 00:33:50,806
the photo is the same,

738
00:33:51,316 --> 00:33:56,446
you can see that the crop rect

739
00:33:56,636 --> 00:33:56,926
All right.

740
00:33:56,926 --> 00:33:59,506
So that's an example of

741
00:34:00,606 --> 00:34:02,186
Now let's take a look

742
00:34:03,046 --> 00:34:05,036
This effect is interesting

743
00:34:05,236 --> 00:34:07,936
because it's a

744
00:34:08,335 --> 00:34:13,835
What I mean by that is that the

745
00:34:13,835 --> 00:34:17,005
specified, they're

746
00:34:17,005 --> 00:34:19,545
which mean that you

747
00:34:19,545 --> 00:34:21,536
when you apply these kind

748
00:34:21,536 --> 00:34:24,726
that the effect is visually

749
00:34:24,726 --> 00:34:27,356
of the resolution at which the

750
00:34:27,766 --> 00:34:30,616
So here if I play it, you

751
00:34:30,616 --> 00:34:32,106
the effect is applied

752
00:34:32,106 --> 00:34:33,795
to the video the same way

753
00:34:33,795 --> 00:34:34,286
So that's great.

754
00:34:34,585 --> 00:34:36,996
So let's see how to

755
00:34:38,096 --> 00:34:41,126
So in your frame processor

756
00:34:41,126 --> 00:34:43,565
to this renderScale

757
00:34:43,916 --> 00:34:46,326
This will give you

758
00:34:46,326 --> 00:34:48,436
of the current frame compared

759
00:34:48,436 --> 00:34:52,755
to the one-to-one full-size

760
00:34:53,545 --> 00:34:57,406
So keep in mind that

761
00:34:57,406 --> 00:34:59,606
and the photo are

762
00:34:59,606 --> 00:35:02,176
Right. Usually the video is

763
00:34:59,606 --> 00:35:02,176
Right. Usually the video is

764
00:35:02,176 --> 00:35:04,806
So you want to make sure

765
00:35:05,106 --> 00:35:09,606
In order to do that, you can

766
00:35:09,606 --> 00:35:12,866
down that width parameter

767
00:35:12,866 --> 00:35:15,166
on the full-size photo

768
00:35:15,166 --> 00:35:17,706
but it will be smaller on

769
00:35:18,696 --> 00:35:24,046
Another way to apply your

770
00:35:24,046 --> 00:35:30,246
is to use the extent of

771
00:35:30,846 --> 00:35:32,286
for the inputCenter parameter.

772
00:35:32,506 --> 00:35:35,986
I actually use the midpoint of

773
00:35:35,986 --> 00:35:37,346
to also scale [inaudible].

774
00:35:38,216 --> 00:35:39,686
All right.

775
00:35:40,266 --> 00:35:42,716
One more edit on that image.

776
00:35:43,776 --> 00:35:48,696
You can notice that I did a logo

777
00:35:49,036 --> 00:35:52,006
and when I play it, you see

778
00:35:52,006 --> 00:35:54,126
that the logo actually

779
00:35:54,126 --> 00:35:59,056
So this is how you would apply

780
00:35:59,056 --> 00:36:01,676
and not to the video,

781
00:35:59,056 --> 00:36:01,676
and not to the video,

782
00:36:02,156 --> 00:36:06,736
In your implementation of your

783
00:36:06,736 --> 00:36:10,516
at the frame type, and here

784
00:36:10,786 --> 00:36:12,006
then we composite the still logo

785
00:36:12,006 --> 00:36:15,506
into the image, but

786
00:36:15,736 --> 00:36:16,926
So that's as easy as that.

787
00:36:17,386 --> 00:36:19,986
And you may have, you

788
00:36:19,986 --> 00:36:22,716
that are local advertisement or

789
00:36:22,716 --> 00:36:24,556
to apply or you can't

790
00:36:24,806 --> 00:36:28,206
and so that's a good

791
00:36:28,466 --> 00:36:28,756
All right.

792
00:36:29,246 --> 00:36:31,086
Now that we have an

793
00:36:32,166 --> 00:36:35,946
let's see how we can

794
00:36:36,186 --> 00:36:39,766
So in order to preview a

795
00:36:39,766 --> 00:36:40,946
with the PHLivePhotoView.

796
00:36:41,426 --> 00:36:44,316
So this view is readily

797
00:36:44,316 --> 00:36:46,696
and is new this year on macOS.

798
00:36:48,446 --> 00:36:50,826
So in order to preview

799
00:36:50,826 --> 00:36:53,406
to ask the

800
00:36:53,406 --> 00:36:56,666
to prepare a Live Photo

801
00:36:56,666 --> 00:37:01,966
in the target size, which is

802
00:36:56,666 --> 00:37:01,966
in the target size, which is

803
00:37:01,966 --> 00:37:06,076
in pixels, and then you get

804
00:37:06,076 --> 00:37:09,056
on the main thread with

805
00:37:10,456 --> 00:37:13,066
And then all you need to do

806
00:37:13,066 --> 00:37:17,136
of the LivePhotoView so that

807
00:37:17,136 --> 00:37:19,816
with their Live Photo

808
00:37:19,816 --> 00:37:24,436
of what the edited Live

809
00:37:24,436 --> 00:37:27,576
Now, the final set will be to

810
00:37:27,766 --> 00:37:32,476
And that, again, depends whether

811
00:37:32,476 --> 00:37:34,786
extension or a PhotoKit

812
00:37:36,066 --> 00:37:39,026
In the case of a photo

813
00:37:39,026 --> 00:37:40,456
implement finishContentEditing.

814
00:37:41,086 --> 00:37:45,346
And the first step is to create

815
00:37:45,806 --> 00:37:48,526
from that contentEditingInput

816
00:37:49,876 --> 00:37:53,266
And next you will ask your

817
00:37:53,266 --> 00:37:55,206
to save the Live

818
00:37:55,726 --> 00:37:59,156
And again, that will process

819
00:37:59,556 --> 00:38:02,226
asynchronously and call

820
00:37:59,556 --> 00:38:02,226
asynchronously and call

821
00:38:02,346 --> 00:38:05,176
with success or error.

822
00:38:05,456 --> 00:38:07,626
And in the case everything

823
00:38:08,206 --> 00:38:11,186
make sure you save also

824
00:38:11,276 --> 00:38:15,116
with your edits and that will

825
00:38:15,286 --> 00:38:20,536
to your app or extension later

826
00:38:20,736 --> 00:38:22,756
And then last step is

827
00:38:22,756 --> 00:38:24,266
to actually call the

828
00:38:24,266 --> 00:38:25,886
for that extension

829
00:38:27,306 --> 00:38:29,086
If you're building a

830
00:38:29,566 --> 00:38:31,756
the steps are really similar.

831
00:38:32,356 --> 00:38:35,926
The only difference really

832
00:38:35,926 --> 00:38:38,966
they are from the changes

833
00:38:38,966 --> 00:38:40,306
a PHAssetChangeRequest.

834
00:38:40,306 --> 00:38:40,806
All right.

835
00:38:41,516 --> 00:38:42,976
So now I'd like to

836
00:38:52,456 --> 00:38:53,036
All right.

837
00:38:54,156 --> 00:38:58,326
So I've built a simple demo

838
00:38:58,326 --> 00:38:59,146
like to show you today.

839
00:39:00,046 --> 00:39:03,656
So here I am in Photos and I can

840
00:39:04,136 --> 00:39:06,286
can pick to see the contents.

841
00:39:07,216 --> 00:39:09,506
I can swipe and see

842
00:39:10,296 --> 00:39:10,586
All right.

843
00:39:10,586 --> 00:39:11,936
That's the one I

844
00:39:12,746 --> 00:39:13,806
So I can go to edit.

845
00:39:13,806 --> 00:39:14,966
And as I mentioned earlier,

846
00:39:15,296 --> 00:39:18,216
I can actually edit the Live

847
00:39:18,586 --> 00:39:19,296
Let me do that.

848
00:39:19,596 --> 00:39:22,096
I'd like to apply

849
00:39:22,206 --> 00:39:23,766
that David mentioned earlier.

850
00:39:24,946 --> 00:39:25,366
All right.

851
00:39:26,456 --> 00:39:29,786
So here in Photos I

852
00:39:31,696 --> 00:39:35,766
Right. Of course, I could

853
00:39:35,766 --> 00:39:38,116
to apply my sample

854
00:39:38,116 --> 00:39:40,966
So I'm going to pick

855
00:39:46,056 --> 00:39:50,806
And, yes, we actually apply the

856
00:39:50,806 --> 00:39:51,646
through for the slides.

857
00:39:52,406 --> 00:39:55,956
And you can see this is

858
00:39:56,176 --> 00:39:59,156
but it shows a LivePhotoView,

859
00:39:59,156 --> 00:40:01,736
and I can actually press

860
00:39:59,156 --> 00:40:01,736
and I can actually press

861
00:40:02,106 --> 00:40:03,136
right in my extension.

862
00:40:03,956 --> 00:40:05,146
So that's real easy.

863
00:40:05,146 --> 00:40:08,556
And the next step is to actually

864
00:40:09,556 --> 00:40:13,146
And this is going to process

865
00:40:13,986 --> 00:40:15,296
and send it back to

866
00:40:16,416 --> 00:40:18,176
And there it is,

867
00:40:19,756 --> 00:40:20,366
All right.

868
00:40:21,556 --> 00:40:22,996
So that was for the quick demo.

869
00:40:22,996 --> 00:40:23,966
Now back to slides.

870
00:40:24,516 --> 00:40:29,886
[ Applause ]

871
00:40:30,386 --> 00:40:30,756
Thank you.

872
00:40:31,386 --> 00:40:32,326
All right.

873
00:40:32,326 --> 00:40:35,646
So here's a quick summary of

874
00:40:36,546 --> 00:40:39,326
So we've learned how

875
00:40:39,466 --> 00:40:44,326
out of the Photo Library

876
00:40:44,326 --> 00:40:47,686
up a LivePhotoEditingContext,

877
00:40:47,916 --> 00:40:50,256
to edit the contents

878
00:40:51,036 --> 00:40:53,226
We've seen how to

879
00:40:53,226 --> 00:40:56,146
in your app using

880
00:40:57,236 --> 00:41:00,396
And we've seen how to

881
00:40:57,236 --> 00:41:00,396
And we've seen how to

882
00:41:00,396 --> 00:41:03,156
into the Photo Library.

883
00:41:03,296 --> 00:41:05,966
Now I can't wait to see what

884
00:41:07,116 --> 00:41:08,226
A few things to remember.

885
00:41:08,226 --> 00:41:12,406
First, if you're building

886
00:41:12,406 --> 00:41:15,486
do not forget to opt

887
00:41:15,486 --> 00:41:17,306
in your info.plist

888
00:41:17,446 --> 00:41:19,856
Otherwise, you'll get a still

889
00:41:20,966 --> 00:41:24,516
And as I said, make sure you

890
00:41:24,956 --> 00:41:28,526
as well so that your users

891
00:41:28,526 --> 00:41:30,396
and continue the edit

892
00:41:31,686 --> 00:41:36,376
Finally, I think if you

893
00:41:36,376 --> 00:41:40,956
application, adopting Live

894
00:41:40,956 --> 00:41:44,496
for LivePhotoEditing should be

895
00:41:45,096 --> 00:41:47,986
especially if your app is

896
00:41:48,486 --> 00:41:52,066
And if not, there's actually

897
00:41:52,066 --> 00:41:54,926
to let you integrate your

898
00:41:54,926 --> 00:41:55,766
into Core Image.

899
00:41:56,156 --> 00:41:57,886
And to tell you all about it,

900
00:41:57,886 --> 00:41:59,796
I'd like to invite

901
00:41:59,796 --> 00:41:59,976
Thank you.

902
00:42:00,516 --> 00:42:06,546
[ Applause ]

903
00:42:07,046 --> 00:42:07,566
&gt;&gt; Thank you, Etienne.

904
00:42:08,146 --> 00:42:10,156
So my name is Alexandre Naaman,

905
00:42:10,156 --> 00:42:11,926
to you about some new

906
00:42:11,926 --> 00:42:14,026
of Core Image to do

907
00:42:14,026 --> 00:42:15,646
that weren't possible

908
00:42:15,646 --> 00:42:18,486
to be using a new API

909
00:42:19,826 --> 00:42:22,596
As David mentioned earlier,

910
00:42:22,596 --> 00:42:26,486
of Core Image using our

911
00:42:26,706 --> 00:42:28,656
and you can extend

912
00:42:28,656 --> 00:42:30,136
by writing your own

913
00:42:30,896 --> 00:42:33,826
Now with CIImageProcessor

914
00:42:34,486 --> 00:42:38,316
and we can insert a new node

915
00:42:39,026 --> 00:42:42,186
that can do basically

916
00:42:42,186 --> 00:42:43,556
in perfectly with

917
00:42:43,556 --> 00:42:47,436
So we can write our own custom

918
00:42:48,696 --> 00:42:52,386
So there are some analogies

919
00:42:53,136 --> 00:42:54,786
with writing general kernels.

920
00:42:54,936 --> 00:42:57,466
So in the past you would

921
00:42:57,466 --> 00:43:02,026
specify some string, and then

922
00:42:57,466 --> 00:43:02,026
specify some string, and then

923
00:43:02,406 --> 00:43:07,136
on your CIFilter and

924
00:43:07,136 --> 00:43:09,046
which is the output image

925
00:43:09,046 --> 00:43:12,076
to be creating, and

926
00:43:13,676 --> 00:43:16,686
and then finally whatever

927
00:43:16,686 --> 00:43:18,406
to pass to your kernel.

928
00:43:19,566 --> 00:43:22,136
Now, there are a

929
00:43:22,356 --> 00:43:24,836
with creating CIImageProcessors,

930
00:43:24,836 --> 00:43:27,166
into detail with them

931
00:43:27,486 --> 00:43:30,656
Instead we refer

932
00:43:30,656 --> 00:43:32,886
from our WWDC talk from 2014.

933
00:43:33,206 --> 00:43:35,426
So if you want to

934
00:43:35,426 --> 00:43:38,036
we strongly suggest you go

935
00:43:38,036 --> 00:43:40,346
because we talked about

936
00:43:40,396 --> 00:43:43,286
and ROI parameters

937
00:43:45,536 --> 00:43:46,876
So now let's look

938
00:43:47,066 --> 00:43:49,036
for creating a CIImage

939
00:43:50,266 --> 00:43:52,026
and this may change a

940
00:43:52,026 --> 00:43:53,956
but this is what it

941
00:43:55,066 --> 00:43:56,666
So the similarities are there.

942
00:43:56,666 --> 00:43:57,846
We need to provide the extent,

943
00:43:57,846 --> 00:43:59,666
which is the output image size

944
00:44:00,016 --> 00:44:02,946
give it an input

945
00:44:04,036 --> 00:44:06,386
There are a bunch of additional

946
00:44:06,386 --> 00:44:09,586
however, such as, for example,

947
00:44:09,586 --> 00:44:10,206
that we'll be creating.

948
00:44:11,476 --> 00:44:14,606
We then need to provide a

949
00:44:14,606 --> 00:44:15,906
of all our input parameters.

950
00:44:16,206 --> 00:44:18,066
And this is really

951
00:44:18,066 --> 00:44:20,226
because this is how Core

952
00:44:20,226 --> 00:44:22,636
or not we can cache the

953
00:44:22,636 --> 00:44:23,746
or not we need to rerender.

954
00:44:24,316 --> 00:44:25,316
So you need to make sure

955
00:44:25,316 --> 00:44:27,146
that every time your

956
00:44:27,726 --> 00:44:28,956
that you update the hash.

957
00:44:30,306 --> 00:44:34,656
The next thing we can

958
00:44:34,966 --> 00:44:37,196
In this case here

959
00:44:38,826 --> 00:44:40,356
but you can also specify zero,

960
00:44:40,356 --> 00:44:43,256
which means you'll get the

961
00:44:43,256 --> 00:44:46,286
as an input image format.

962
00:44:46,696 --> 00:44:48,716
You can specify the

963
00:44:49,146 --> 00:44:51,356
In this case we're using

964
00:44:51,356 --> 00:44:53,696
that we're going to be going

965
00:44:53,696 --> 00:44:55,276
of precision, so we'll

966
00:44:56,306 --> 00:44:58,466
And then finally we get

967
00:44:58,466 --> 00:45:00,426
which is where we have

968
00:44:58,466 --> 00:45:00,426
which is where we have

969
00:45:00,966 --> 00:45:05,596
our CIImageProcessorInput

970
00:45:06,786 --> 00:45:08,956
and it's inside of here that

971
00:45:08,956 --> 00:45:09,246
to do.

972
00:45:10,416 --> 00:45:12,396
So let's take a look

973
00:45:13,056 --> 00:45:14,106
and why you would

974
00:45:16,236 --> 00:45:19,616
So CIImageProcessor

975
00:45:19,616 --> 00:45:22,876
for when you have some algorithm

976
00:45:23,216 --> 00:45:26,216
that implements something

977
00:45:26,416 --> 00:45:27,556
and something that

978
00:45:27,556 --> 00:45:28,636
for the CIKernel language.

979
00:45:28,886 --> 00:45:31,936
A really good example of this is

980
00:45:32,746 --> 00:45:35,296
An integral image is an image

981
00:45:35,606 --> 00:45:37,896
contains the sum of

982
00:45:37,896 --> 00:45:39,446
and to the left,

983
00:45:39,806 --> 00:45:42,716
And this is a very good

984
00:45:42,716 --> 00:45:45,716
that can't be done in a

985
00:45:46,056 --> 00:45:47,296
which is the kind of

986
00:45:47,296 --> 00:45:48,626
when you're writing CIKernels.

987
00:45:50,976 --> 00:45:54,286
So let's take a look at

988
00:45:54,286 --> 00:45:55,136
in a little bit more detail.

989
00:45:55,136 --> 00:45:57,946
If we start off with the input

990
00:45:57,946 --> 00:46:01,386
let's say, corresponds to some

991
00:45:57,946 --> 00:46:01,386
let's say, corresponds to some

992
00:46:02,716 --> 00:46:04,596
our integral image would

993
00:46:04,826 --> 00:46:07,366
So if we take a look

994
00:46:07,896 --> 00:46:11,146
it actually corresponds to

995
00:46:11,146 --> 00:46:14,216
on the left, which would

996
00:46:15,016 --> 00:46:19,026
The same goes for this other

997
00:46:19,026 --> 00:46:22,196
of all those other pixels above

998
00:46:25,266 --> 00:46:29,146
So now let's take a look

999
00:46:29,146 --> 00:46:33,346
of the image processor block

1000
00:46:33,966 --> 00:46:36,716
and you could also use V Image

1001
00:46:36,716 --> 00:46:37,516
that we have on the system.

1002
00:46:38,996 --> 00:46:39,866
So first things first.

1003
00:46:40,506 --> 00:46:42,516
We're going to get some

1004
00:46:42,996 --> 00:46:45,596
So from the

1005
00:46:45,596 --> 00:46:47,956
the base address,

1006
00:46:47,956 --> 00:46:50,586
that we use 8-bit

1007
00:46:50,586 --> 00:46:52,816
And then we'll get

1008
00:46:52,816 --> 00:46:54,426
which is where we're going

1009
00:46:54,826 --> 00:46:56,246
as float, because we specified

1010
00:46:56,246 --> 00:46:58,036
that we wanted to

1011
00:47:00,366 --> 00:47:04,526
The next thing we do

1012
00:47:04,526 --> 00:47:06,996
with the relative offsets of

1013
00:47:07,796 --> 00:47:10,426
It's highly likely that

1014
00:47:10,426 --> 00:47:13,386
with an input image that

1015
00:47:13,386 --> 00:47:16,026
or at least not equivalent

1016
00:47:16,026 --> 00:47:19,016
so you have to take care of

1017
00:47:19,626 --> 00:47:22,126
when you're creating your output

1018
00:47:22,716 --> 00:47:25,046
And in this case,

1019
00:47:25,046 --> 00:47:27,276
out whatever offsets

1020
00:47:27,276 --> 00:47:30,226
and execute our four-loop to

1021
00:47:30,226 --> 00:47:33,996
at location i, j by using

1022
00:47:34,086 --> 00:47:35,266
plus whatever offset we had.

1023
00:47:38,706 --> 00:47:41,426
Now that we've seen how to do

1024
00:47:41,426 --> 00:47:44,246
let's take a look at how

1025
00:47:44,396 --> 00:47:47,836
In this case we're going to be

1026
00:47:49,176 --> 00:47:50,266
And there's a great

1027
00:47:50,266 --> 00:47:51,096
of Metal Performance Shaders

1028
00:47:51,126 --> 00:47:53,926
to compute integral images

1029
00:47:55,266 --> 00:47:59,176
From our CIImageProcessorOutput

1030
00:47:59,686 --> 00:48:02,266
the Metal command buffer, so we

1031
00:47:59,686 --> 00:48:02,266
the Metal command buffer, so we

1032
00:48:02,686 --> 00:48:03,786
with that commandBuffer.

1033
00:48:05,286 --> 00:48:07,856
Once again we take care of

1034
00:48:07,856 --> 00:48:11,766
to deal with, and then we

1035
00:48:11,976 --> 00:48:14,226
to the commandBuffer,

1036
00:48:14,226 --> 00:48:16,186
as input the input

1037
00:48:16,186 --> 00:48:17,466
from the CIImageProcessorInput,

1038
00:48:17,956 --> 00:48:20,756
and as a destination

1039
00:48:21,356 --> 00:48:24,486
And this is how we can use

1040
00:48:24,486 --> 00:48:26,096
of an existing CIFilter graph.

1041
00:48:27,376 --> 00:48:29,336
So now let's take a look

1042
00:48:29,336 --> 00:48:30,616
with this integral image

1043
00:48:31,796 --> 00:48:33,526
So let's say we start

1044
00:48:33,686 --> 00:48:36,396
Our goal is going to be

1045
00:48:37,636 --> 00:48:40,706
where we have a per

1046
00:48:41,256 --> 00:48:44,106
So each pixel in that image

1047
00:48:44,106 --> 00:48:44,966
of blur applied to it,

1048
00:48:45,176 --> 00:48:48,576
and we can do this really

1049
00:48:51,006 --> 00:48:53,626
So, as I was saying, box

1050
00:48:54,666 --> 00:48:56,656
for doing very fast box sums.

1051
00:48:57,036 --> 00:48:58,896
So if we start right off with

1052
00:48:58,896 --> 00:49:02,336
to get the sum of those nine

1053
00:48:58,896 --> 00:49:02,336
to get the sum of those nine

1054
00:49:02,896 --> 00:49:04,116
this would require nine reads,

1055
00:49:04,606 --> 00:49:06,146
which means it's an

1056
00:49:06,906 --> 00:49:10,056
That's obviously not

1057
00:49:11,856 --> 00:49:12,706
That's not completely true.

1058
00:49:12,706 --> 00:49:14,046
If you were a little

1059
00:49:14,106 --> 00:49:16,516
you could probably do this as

1060
00:49:16,516 --> 00:49:18,706
in two n reads, but that

1061
00:49:18,706 --> 00:49:21,946
at six reads, and obviously

1062
00:49:23,646 --> 00:49:25,776
With an integral image,

1063
00:49:26,136 --> 00:49:29,596
if we want to get the sum of

1064
00:49:29,596 --> 00:49:30,776
to read at a few locations.

1065
00:49:30,776 --> 00:49:35,316
We will read at the lower right

1066
00:49:35,716 --> 00:49:39,216
from just one pixel off to the

1067
00:49:39,936 --> 00:49:42,816
and subtract that from the

1068
00:49:43,856 --> 00:49:47,006
And then we read at a pixel

1069
00:49:47,006 --> 00:49:49,036
and subtract the row which

1070
00:49:49,036 --> 00:49:50,276
of all the pixels

1071
00:49:50,606 --> 00:49:52,556
But now you can see we've

1072
00:49:52,556 --> 00:49:54,996
corner with a 1 because we've

1073
00:49:54,996 --> 00:49:56,106
so we need to add it back in.

1074
00:49:57,556 --> 00:50:03,226
So what this means is we can

1075
00:49:57,556 --> 00:50:03,226
So what this means is we can

1076
00:50:03,276 --> 00:50:05,476
blur with just four reads.

1077
00:50:05,566 --> 00:50:08,126
And if we were to --

1078
00:50:09,016 --> 00:50:10,476
[ Applause ]

1079
00:50:10,476 --> 00:50:10,766
Thank you.

1080
00:50:11,146 --> 00:50:13,146
[ Applause ]

1081
00:50:13,276 --> 00:50:15,216
If we were to actually do the

1082
00:50:15,216 --> 00:50:16,396
that these numbers do add up.

1083
00:50:16,396 --> 00:50:19,796
So 2 plus 4 plus 6, et cetera,

1084
00:50:19,796 --> 00:50:22,926
as 66 minus 10 minus 13 plus 1.

1085
00:50:26,896 --> 00:50:30,216
Now let's jump back into

1086
00:50:30,416 --> 00:50:31,996
and see how we can

1087
00:50:31,996 --> 00:50:34,316
that we've computed

1088
00:50:34,866 --> 00:50:37,076
or using the Metal

1089
00:50:38,406 --> 00:50:39,336
and continue doing the work

1090
00:50:39,336 --> 00:50:40,836
of actually creating

1091
00:50:41,376 --> 00:50:42,956
So the first thing we're

1092
00:50:42,956 --> 00:50:44,486
to compute our lower left corner

1093
00:50:44,486 --> 00:50:47,036
and upper right corner

1094
00:50:47,036 --> 00:50:50,546
Those will tell us where we

1095
00:50:51,696 --> 00:50:54,596
We're then going to compute

1096
00:50:54,596 --> 00:50:57,816
and they're going to help us

1097
00:50:57,966 --> 00:50:59,446
should be, so how

1098
00:50:59,446 --> 00:51:00,856
that we're currently

1099
00:50:59,446 --> 00:51:00,856
that we're currently

1100
00:51:01,956 --> 00:51:05,596
We take our four

1101
00:51:07,306 --> 00:51:10,786
and then finally we do our

1102
00:51:10,786 --> 00:51:13,226
and multiply by what we've

1103
00:51:13,226 --> 00:51:15,576
amount of transparency

1104
00:51:16,846 --> 00:51:22,056
Now, this particular kernel

1105
00:51:22,056 --> 00:51:24,906
as an input radius, which

1106
00:51:24,906 --> 00:51:25,906
to call this on an

1107
00:51:25,906 --> 00:51:28,386
that same radius applied

1108
00:51:29,036 --> 00:51:33,836
but we can very simply go and

1109
00:51:34,036 --> 00:51:37,396
by passing in a mask image,

1110
00:51:37,446 --> 00:51:41,716
to determine how large

1111
00:51:41,716 --> 00:51:42,906
on a per pixel basis.

1112
00:51:44,636 --> 00:51:46,836
So we just pass in an additional

1113
00:51:46,896 --> 00:51:49,186
We read from it.

1114
00:51:49,416 --> 00:51:51,806
We take a look at what's in the

1115
00:51:51,806 --> 00:51:55,386
from any channel, and we then

1116
00:51:55,446 --> 00:51:57,236
So if we had a radius

1117
00:51:57,266 --> 00:51:59,406
that current pixel

1118
00:51:59,406 --> 00:52:01,506
it would give us

1119
00:51:59,406 --> 00:52:01,506
it would give us

1120
00:52:02,556 --> 00:52:04,856
We can then take those

1121
00:52:04,856 --> 00:52:06,566
into the box blur kernel

1122
00:52:07,006 --> 00:52:09,666
And this is how we can very

1123
00:52:09,666 --> 00:52:13,236
blur using Metal

1124
00:52:13,536 --> 00:52:14,796
and the CIImageProcessor nodes.

1125
00:52:18,316 --> 00:52:21,056
One additional thing we haven't

1126
00:52:21,056 --> 00:52:23,736
that we now have some

1127
00:52:24,646 --> 00:52:28,426
on your CIKernels when you

1128
00:52:28,426 --> 00:52:31,316
we have this just one right

1129
00:52:31,836 --> 00:52:34,706
In this case we're

1130
00:52:34,916 --> 00:52:37,306
which is not really

1131
00:52:37,746 --> 00:52:40,946
but the key thing here is

1132
00:52:41,046 --> 00:52:43,326
like to write only

1133
00:52:43,636 --> 00:52:44,416
or two-channel data.

1134
00:52:44,416 --> 00:52:44,966
So if you wanted to do --

1135
00:52:45,516 --> 00:52:48,546
[ Applause ]

1136
00:52:49,046 --> 00:52:50,596
As some people have

1137
00:52:50,596 --> 00:52:56,456
to reduce your memory usage,

1138
00:52:56,596 --> 00:53:00,156
that you want a certain

1139
00:52:56,596 --> 00:53:00,156
that you want a certain

1140
00:53:00,156 --> 00:53:02,256
in your graph that may

1141
00:53:02,736 --> 00:53:04,196
of the graph, which

1142
00:53:04,196 --> 00:53:05,856
when we're processing

1143
00:53:06,336 --> 00:53:10,646
All of our kernels

1144
00:53:10,926 --> 00:53:16,206
So one or more thing we need

1145
00:53:16,206 --> 00:53:17,546
to provide some sort

1146
00:53:17,546 --> 00:53:20,956
We can do this very simply

1147
00:53:21,386 --> 00:53:23,106
and then ask for

1148
00:53:23,136 --> 00:53:24,796
with a few parameters,

1149
00:53:24,796 --> 00:53:28,126
to determine how

1150
00:53:28,776 --> 00:53:30,226
and where it will be located.

1151
00:53:30,226 --> 00:53:33,066
And then we're going to be

1152
00:53:33,066 --> 00:53:34,106
which is going to

1153
00:53:34,106 --> 00:53:37,446
And then we ask for the

1154
00:53:38,046 --> 00:53:39,916
and we have a perfectly

1155
00:53:42,496 --> 00:53:44,916
So now let's take a look

1156
00:53:44,916 --> 00:53:46,296
like when running on device,

1157
00:53:46,886 --> 00:53:50,076
and this is recorded

1158
00:53:50,216 --> 00:53:52,716
If we start with our input

1159
00:53:53,016 --> 00:53:54,076
we can move it around.

1160
00:53:54,466 --> 00:53:55,416
It's all very interactive.

1161
00:53:56,506 --> 00:53:59,516
Change the radius, even

1162
00:54:01,456 --> 00:54:05,136
And then if we apply this

1163
00:54:05,136 --> 00:54:08,516
of our variable box

1164
00:54:08,706 --> 00:54:10,696
we then get this type of result.

1165
00:54:11,026 --> 00:54:12,366
And it's very interactive

1166
00:54:13,066 --> 00:54:15,516
because the integral image

1167
00:54:15,576 --> 00:54:17,536
and Core Image caches

1168
00:54:17,666 --> 00:54:20,096
So it literally, everything

1169
00:54:20,096 --> 00:54:21,536
is just involving four reads.

1170
00:54:21,536 --> 00:54:21,926
So it's superfast.

1171
00:54:22,516 --> 00:54:32,086
[ Applause ]

1172
00:54:32,586 --> 00:54:33,646
Some things to keep in mind.

1173
00:54:34,206 --> 00:54:35,606
When you're using

1174
00:54:37,136 --> 00:54:39,706
if the data that you

1175
00:54:39,706 --> 00:54:41,376
of your image processor

1176
00:54:41,376 --> 00:54:45,456
of the context current

1177
00:54:45,456 --> 00:54:47,546
to want to call

1178
00:54:47,636 --> 00:54:49,916
WorkingSpace(to, and then

1179
00:54:52,116 --> 00:54:55,646
Similarly, on the way out,

1180
00:54:55,646 --> 00:54:56,726
in a different color space,

1181
00:54:56,726 --> 00:54:59,306
you can call

1182
00:54:59,306 --> 00:55:02,126
ColorSpace(toWorking, and

1183
00:54:59,306 --> 00:55:02,126
ColorSpace(toWorking, and

1184
00:55:05,756 --> 00:55:09,676
Now that we've seen how to

1185
00:55:09,976 --> 00:55:13,416
and how to use it, let's

1186
00:55:13,416 --> 00:55:15,206
when we use the environment

1187
00:55:15,536 --> 00:55:18,996
which we use to get an idea

1188
00:55:18,996 --> 00:55:20,416
that we're trying to

1189
00:55:23,206 --> 00:55:24,026
So this is what it looks

1190
00:55:24,026 --> 00:55:26,686
like when you use the

1191
00:55:26,686 --> 00:55:27,816
TREE with the value

1192
00:55:27,936 --> 00:55:30,376
And this is read

1193
00:55:30,476 --> 00:55:31,716
And it can be quite verbose.

1194
00:55:32,476 --> 00:55:36,136
It starts off with our input

1195
00:55:37,036 --> 00:55:38,106
We then have our input image

1196
00:55:38,396 --> 00:55:41,326
which gets matched

1197
00:55:42,866 --> 00:55:45,846
And then here's our processor

1198
00:55:46,036 --> 00:55:49,466
and that hex value is the

1199
00:55:50,016 --> 00:55:53,526
And then both the processor

1200
00:55:53,526 --> 00:55:56,586
from the radialGradient get

1201
00:55:57,786 --> 00:56:02,266
And finally we do the color

1202
00:55:57,786 --> 00:56:02,266
And finally we do the color

1203
00:56:03,766 --> 00:56:06,696
So this is the original

1204
00:56:06,726 --> 00:56:11,286
to specify this effect, but it's

1205
00:56:12,546 --> 00:56:14,876
If we were to set the

1206
00:56:14,876 --> 00:56:18,566
TREE to 8, we can now see that

1207
00:56:19,266 --> 00:56:22,446
and the processing looks

1208
00:56:23,766 --> 00:56:26,096
We still, once again,

1209
00:56:26,476 --> 00:56:28,066
which lives on a

1210
00:56:28,066 --> 00:56:30,846
which means that it

1211
00:56:30,846 --> 00:56:32,386
of an intermediate buffer,

1212
00:56:32,386 --> 00:56:35,546
which is why the

1213
00:56:35,656 --> 00:56:38,056
but you should only use them

1214
00:56:38,056 --> 00:56:39,826
the effect that you're trying

1215
00:56:39,826 --> 00:56:42,226
that you have cannot

1216
00:56:42,226 --> 00:56:43,316
of the CIKernel language.

1217
00:56:44,566 --> 00:56:45,776
As you can see, the rest

1218
00:56:45,776 --> 00:56:48,036
of the processing all

1219
00:56:48,036 --> 00:56:50,276
So we have our variableBoxBlur

1220
00:56:50,276 --> 00:56:53,076
of the color matching, and

1221
00:56:53,076 --> 00:56:53,946
in a single pass.

1222
00:56:54,616 --> 00:56:57,576
So this is why there are always

1223
00:56:57,856 --> 00:57:00,066
And if you can write something

1224
00:56:57,856 --> 00:57:00,066
And if you can write something

1225
00:57:00,066 --> 00:57:00,436
you should.

1226
00:57:03,106 --> 00:57:06,476
That may be a little

1227
00:57:07,406 --> 00:57:09,966
So we have an additional

1228
00:57:09,966 --> 00:57:11,896
when you're using CI PRINT

1229
00:57:12,946 --> 00:57:16,306
In this case we're

1230
00:57:17,196 --> 00:57:18,406
along with the graphviz option,

1231
00:57:19,446 --> 00:57:21,606
and we can see our

1232
00:57:21,606 --> 00:57:22,956
in perfectly with the

1233
00:57:23,996 --> 00:57:26,966
And we can also see that

1234
00:57:30,816 --> 00:57:33,686
So let's do a little recap

1235
00:57:34,356 --> 00:57:37,276
We saw, David showed us how

1236
00:57:38,196 --> 00:57:39,166
Then Etienne spoke to us

1237
00:57:39,166 --> 00:57:42,196
about how you can edit Live

1238
00:57:42,486 --> 00:57:45,336
And then finally, we got to

1239
00:57:45,336 --> 00:57:49,256
on CIImage called

1240
00:57:49,256 --> 00:57:51,066
to specify an output

1241
00:57:51,066 --> 00:57:53,006
to help reduce the memory usage.

1242
00:57:53,706 --> 00:57:56,746
For additional information

1243
00:57:56,746 --> 00:57:58,546
visit developer.apple.com.

1244
00:58:01,016 --> 00:58:03,046
There are a few related sessions

1245
00:58:03,266 --> 00:58:06,416
especially if you're planning

1246
00:58:06,496 --> 00:58:07,916
There's Advances

1247
00:58:07,916 --> 00:58:09,186
that Etienne mentioned as well.

1248
00:58:09,936 --> 00:58:13,496
There's also a talk later on

1249
00:58:14,216 --> 00:58:15,116
that's taking place right here.

1250
00:58:16,916 --> 00:58:18,746
And on that note, I would like

1251
00:58:18,746 --> 00:58:19,936
I hope you enjoy

1252
00:58:20,516 --> 00:58:30,760
[ Applause ]
