1
00:00:07,516 --> 00:00:19,500
[ Music ]

2
00:00:23,206 --> 00:00:23,896
&gt;&gt; All right.

3
00:00:25,141 --> 00:00:27,141
[ Applause ]

4
00:00:27,266 --> 00:00:28,946
Good afternoon everyone

5
00:00:28,946 --> 00:00:32,076
to app development

6
00:00:33,306 --> 00:00:35,246
There are many amazing

7
00:00:35,346 --> 00:00:37,926
on the App Store

8
00:00:38,826 --> 00:00:41,256
And some have even been

9
00:00:41,336 --> 00:00:44,656
to give a unique experience

10
00:00:46,046 --> 00:00:50,556
So today I'm extremely

11
00:00:50,766 --> 00:00:54,816
to tell how you could bring your

12
00:00:56,026 --> 00:01:00,526
And this is done by extending

13
00:00:56,026 --> 00:01:00,526
And this is done by extending

14
00:01:01,106 --> 00:01:03,866
and also the functionality

15
00:01:05,226 --> 00:01:08,306
This will basically let

16
00:01:08,806 --> 00:01:10,536
with all your own

17
00:01:13,386 --> 00:01:19,346
TVMLKit is a thoughtful

18
00:01:19,346 --> 00:01:23,276
to make sure that there is some

19
00:01:23,916 --> 00:01:25,946
as such that only

20
00:01:26,206 --> 00:01:27,186
that you have to worry about.

21
00:01:28,136 --> 00:01:30,276
In the first half of

22
00:01:30,276 --> 00:01:33,176
to tell you guys how you can

23
00:01:33,556 --> 00:01:35,566
in TVMLKit by extending

24
00:01:37,146 --> 00:01:40,866
In the second half, my colleague

25
00:01:40,866 --> 00:01:44,526
how you can enhance your apps by

26
00:01:45,186 --> 00:01:49,896
to the JavaScript engine

27
00:01:49,896 --> 00:01:52,556
So, let's talk about

28
00:01:54,756 --> 00:01:57,066
The very first thing

29
00:01:57,066 --> 00:01:59,836
when they use TVMLKit is

30
00:02:00,266 --> 00:02:03,436
these are defined in the

31
00:02:04,956 --> 00:02:08,795
They use XML as a way to

32
00:02:09,526 --> 00:02:12,346
and when people encounter

33
00:02:12,866 --> 00:02:15,056
I know this this

34
00:02:15,056 --> 00:02:19,086
I can assure you we are

35
00:02:20,126 --> 00:02:23,536
What TVMLKit is however, is

36
00:02:24,486 --> 00:02:27,326
but that doesn't mean you are

37
00:02:28,796 --> 00:02:33,436
In fact, Apple's own apps

38
00:02:33,436 --> 00:02:36,956
in really subtle ways that allow

39
00:02:36,956 --> 00:02:40,176
of the framework and

40
00:02:40,176 --> 00:02:45,336
Let's look at, take

41
00:02:45,916 --> 00:02:47,006
this is the App Store app.

42
00:02:48,386 --> 00:02:51,916
The App Store theme had a

43
00:02:51,916 --> 00:02:56,716
within a shelf, as you can see

44
00:02:56,716 --> 00:02:58,786
provides, an image

45
00:02:59,506 --> 00:03:01,496
But over here they

46
00:02:59,506 --> 00:03:01,496
But over here they

47
00:03:01,616 --> 00:03:03,176
with custom focused behaviors.

48
00:03:05,826 --> 00:03:07,856
Another example that we

49
00:03:07,856 --> 00:03:09,846
with is the concept

50
00:03:10,566 --> 00:03:12,516
Once again the App Store

51
00:03:12,516 --> 00:03:15,926
that this button had to reflect

52
00:03:16,316 --> 00:03:16,786
of an app.

53
00:03:17,726 --> 00:03:19,066
Whether you're buying the app,

54
00:03:19,456 --> 00:03:21,916
whether the app is being

55
00:03:22,576 --> 00:03:25,366
they did all these by

56
00:03:26,276 --> 00:03:28,376
And that's the common theme we

57
00:03:29,466 --> 00:03:33,056
Reuse TVMLKit as much

58
00:03:33,346 --> 00:03:36,746
for the parts that

59
00:03:36,876 --> 00:03:38,626
So templates.

60
00:03:40,066 --> 00:03:46,006
If you've used TVMLKit it

61
00:03:46,626 --> 00:03:48,536
when you inject it into

62
00:03:48,536 --> 00:03:49,196
up on the screen.

63
00:03:50,156 --> 00:03:53,016
TV mark-up language is

64
00:03:53,326 --> 00:03:54,486
all with unique names.

65
00:03:55,386 --> 00:03:58,256
And when it enters the framework

66
00:03:58,956 --> 00:04:02,706
This is the central registry

67
00:03:58,956 --> 00:04:02,706
This is the central registry

68
00:04:02,746 --> 00:04:05,006
and is able to translate

69
00:04:05,126 --> 00:04:06,926
that the rest of the

70
00:04:08,396 --> 00:04:11,416
The TVInterfaceFactory

71
00:04:11,446 --> 00:04:12,816
to generate user interfaces

72
00:04:13,726 --> 00:04:15,146
and place them currently

73
00:04:16,276 --> 00:04:19,565
And this is how TVML

74
00:04:20,646 --> 00:04:26,466
So let's look at what happens

75
00:04:27,386 --> 00:04:30,146
When it comes to extension

76
00:04:30,146 --> 00:04:33,786
as adding your own mark-up in

77
00:04:34,476 --> 00:04:35,856
It goes through the

78
00:04:35,856 --> 00:04:38,636
it enters the element

79
00:04:39,426 --> 00:04:41,686
but when it hits the

80
00:04:42,016 --> 00:04:43,056
because we do not know

81
00:04:43,056 --> 00:04:45,696
about your user interfaces,

82
00:04:46,926 --> 00:04:50,226
When you've given us the user

83
00:04:50,226 --> 00:04:53,726
will put it on the screen

84
00:04:55,036 --> 00:04:57,636
So now that you have an idea

85
00:04:58,196 --> 00:04:59,576
let's look at things in detail.

86
00:04:59,676 --> 00:05:01,626
There are three steps

87
00:04:59,676 --> 00:05:01,626
There are three steps

88
00:05:01,626 --> 00:05:03,596
about when you want

89
00:05:03,806 --> 00:05:06,746
and the very first thing

90
00:05:07,536 --> 00:05:10,086
Mark-up in TVML is

91
00:05:11,256 --> 00:05:14,276
And you have an idea of what

92
00:05:14,276 --> 00:05:15,086
like on the screen.

93
00:05:16,306 --> 00:05:19,236
You have to translate that

94
00:05:19,236 --> 00:05:20,836
of resembles what

95
00:05:20,836 --> 00:05:22,766
on the screen in mark-up itself.

96
00:05:23,876 --> 00:05:27,286
In our example, we wanted a

97
00:05:28,896 --> 00:05:31,876
This banner had an animated

98
00:05:31,876 --> 00:05:34,386
to be able to control the

99
00:05:34,566 --> 00:05:35,456
within TVML.

100
00:05:36,446 --> 00:05:38,496
Therefore, this element,

101
00:05:38,496 --> 00:05:40,926
myBanner has a property

102
00:05:42,306 --> 00:05:44,606
Additionally, we

103
00:05:45,346 --> 00:05:46,896
but because there

104
00:05:46,896 --> 00:05:48,066
for additional functionality,

105
00:05:48,586 --> 00:05:50,296
we could just use

106
00:05:50,956 --> 00:05:52,746
and this is a form of a button.

107
00:05:52,746 --> 00:05:56,186
So now that you have an idea

108
00:05:56,186 --> 00:06:00,576
of what your user interface is

109
00:05:56,186 --> 00:06:00,576
of what your user interface is

110
00:06:00,576 --> 00:06:02,306
to tell the framework about it.

111
00:06:02,926 --> 00:06:03,876
And this is as simple

112
00:06:03,876 --> 00:06:06,816
as registering your unique

113
00:06:08,186 --> 00:06:11,176
Registration has to be done once

114
00:06:11,176 --> 00:06:13,746
startup so that we're fully

115
00:06:13,746 --> 00:06:14,806
that we have to take care of.

116
00:06:15,496 --> 00:06:19,526
It's as simple as telling the

117
00:06:19,526 --> 00:06:22,126
to associate a TVViewElement

118
00:06:22,996 --> 00:06:25,306
and your custom, element name.

119
00:06:26,606 --> 00:06:30,296
The TVViewElement is the base

120
00:06:30,296 --> 00:06:33,196
to translate your mark-up

121
00:06:33,196 --> 00:06:34,256
of the framework understands.

122
00:06:35,286 --> 00:06:36,666
Along with TVViewElement,

123
00:06:37,036 --> 00:06:39,136
there are two other

124
00:06:39,836 --> 00:06:42,326
TVImageElement deals

125
00:06:42,326 --> 00:06:45,226
and TVTextElement has special

126
00:06:45,286 --> 00:06:52,546
Now that we have registered the

127
00:06:52,546 --> 00:06:54,806
the third step that involves

128
00:06:55,456 --> 00:06:57,146
but still we try to

129
00:06:57,146 --> 00:06:58,596
with only just two steps.

130
00:06:59,546 --> 00:07:01,526
The very first thing

131
00:06:59,546 --> 00:07:01,526
The very first thing

132
00:07:01,526 --> 00:07:04,146
to setup an interface

133
00:07:04,146 --> 00:07:06,086
to the TVInterfaceCreating

134
00:07:06,906 --> 00:07:08,386
This particular object

135
00:07:08,386 --> 00:07:10,866
that vends your user

136
00:07:11,496 --> 00:07:13,426
and there are some call

137
00:07:13,466 --> 00:07:16,636
to implement from the

138
00:07:16,636 --> 00:07:18,916
declaration that

139
00:07:18,916 --> 00:07:20,046
of UI you want to return.

140
00:07:21,066 --> 00:07:24,136
The next step is when we call

141
00:07:24,136 --> 00:07:26,306
into your interface

142
00:07:26,816 --> 00:07:29,756
configure your user

143
00:07:30,426 --> 00:07:34,966
As I stressed before, reuse

144
00:07:34,966 --> 00:07:36,886
because we have done a

145
00:07:36,886 --> 00:07:39,736
that our elements are

146
00:07:39,736 --> 00:07:41,016
and feel good onto tvOS.

147
00:07:41,736 --> 00:07:43,316
So let's take a look

148
00:07:43,316 --> 00:07:45,306
of what this interface

149
00:07:45,786 --> 00:07:49,126
Over here I have a

150
00:07:49,126 --> 00:07:51,196
that conforms to

151
00:07:51,426 --> 00:07:54,396
Because we are only

152
00:07:54,396 --> 00:07:57,916
for the better we are going to

153
00:07:57,916 --> 00:08:00,126
existingView call back method.

154
00:07:57,916 --> 00:08:00,126
existingView call back method.

155
00:08:01,336 --> 00:08:04,376
Once this class has been set

156
00:08:04,376 --> 00:08:07,486
to register an instance of it

157
00:08:07,896 --> 00:08:12,286
Looking at makeView in detail,

158
00:08:13,096 --> 00:08:17,026
we can see that TVMLKit

159
00:08:17,026 --> 00:08:18,726
and a optional existingView.

160
00:08:19,406 --> 00:08:21,866
So in the case of the

161
00:08:21,866 --> 00:08:23,466
to inspect the element

162
00:08:24,006 --> 00:08:27,646
We're particularly interested

163
00:08:27,746 --> 00:08:29,336
and when we find

164
00:08:30,136 --> 00:08:31,566
we create an instance

165
00:08:33,126 --> 00:08:36,676
Because the myBanner has an

166
00:08:36,676 --> 00:08:38,086
inspect this using the element

167
00:08:38,086 --> 00:08:39,846
that the call back

168
00:08:40,756 --> 00:08:42,706
and then assign it

169
00:08:44,035 --> 00:08:46,226
We also know that we have

170
00:08:46,716 --> 00:08:50,386
and because this is a

171
00:08:50,386 --> 00:08:53,406
as asking the TVInterfaceFactory

172
00:08:53,406 --> 00:08:56,566
and returning the view

173
00:08:57,646 --> 00:08:59,646
Finally of course,

174
00:09:00,396 --> 00:09:03,376
In the case of default

175
00:09:03,796 --> 00:09:05,356
you have to return nil.

176
00:09:07,126 --> 00:09:08,986
Now we've talked

177
00:09:08,986 --> 00:09:10,476
what about view controllers?

178
00:09:11,706 --> 00:09:15,076
TVMLKit has view controllers

179
00:09:15,076 --> 00:09:19,706
of a shelf lockups that

180
00:09:19,706 --> 00:09:20,666
that expands vertically.

181
00:09:21,986 --> 00:09:24,356
So by using the TVMLKit

182
00:09:24,356 --> 00:09:27,436
to return view controllers

183
00:09:27,436 --> 00:09:29,076
for your own view controllers.

184
00:09:30,316 --> 00:09:34,626
The usage is similar to

185
00:09:34,706 --> 00:09:36,746
we still furnish

186
00:09:37,076 --> 00:09:38,396
but an existingViewController

187
00:09:38,396 --> 00:09:41,176
and we expect an

188
00:09:42,026 --> 00:09:43,546
to be returned.

189
00:09:43,546 --> 00:09:44,846
Now you're thinking, Aha!

190
00:09:46,536 --> 00:09:47,646
Collection of views.

191
00:09:48,326 --> 00:09:51,176
Collection of views has

192
00:09:51,926 --> 00:09:54,776
so this is how I can

193
00:09:55,086 --> 00:09:57,716
Remember this example?

194
00:09:59,336 --> 00:10:02,376
The App Store theme specifically

195
00:09:59,336 --> 00:10:02,376
The App Store theme specifically

196
00:10:03,126 --> 00:10:04,586
to have a unique cell.

197
00:10:04,736 --> 00:10:07,796
Of unique custom layouts

198
00:10:08,576 --> 00:10:11,616
everything else, as you can see,

199
00:10:12,156 --> 00:10:13,646
The titles go up

200
00:10:13,646 --> 00:10:16,276
on whether the focus is

201
00:10:17,606 --> 00:10:21,186
So, new in tvOS 10,

202
00:10:21,186 --> 00:10:23,836
to specify your own custom

203
00:10:24,886 --> 00:10:27,116
This allows you to have

204
00:10:27,116 --> 00:10:30,006
and most importantly

205
00:10:30,006 --> 00:10:31,416
when the cell comes into focus.

206
00:10:32,286 --> 00:10:34,436
To do this there are two

207
00:10:34,906 --> 00:10:37,796
The very first thing is to use

208
00:10:37,796 --> 00:10:40,976
that allows you to give us

209
00:10:40,976 --> 00:10:42,856
when we ask for it for

210
00:10:44,106 --> 00:10:46,406
And when we build the user

211
00:10:46,936 --> 00:10:49,606
we would use makeView to

212
00:10:49,876 --> 00:10:52,826
configure the cell

213
00:10:53,606 --> 00:10:58,416
We would provide you the custom

214
00:10:58,416 --> 00:11:00,896
queued from the collection

215
00:10:58,416 --> 00:11:00,896
queued from the collection

216
00:11:01,486 --> 00:11:03,476
parameter itself.

217
00:11:05,096 --> 00:11:08,696
So I'd like to invite Parry on

218
00:11:08,696 --> 00:11:10,336
of how this works, Parry.

219
00:11:11,516 --> 00:11:15,546
[ Applause ]

220
00:11:16,046 --> 00:11:16,636
&gt;&gt; Thank you, Jeremy.

221
00:11:16,636 --> 00:11:21,306
Hi, my name is Parry and

222
00:11:21,306 --> 00:11:23,146
to use custom cells in TVMLKit.

223
00:11:24,436 --> 00:11:26,096
Now custom cells

224
00:11:26,166 --> 00:11:29,756
if you want to use TVMLKit

225
00:11:29,756 --> 00:11:32,506
and grids, but you want

226
00:11:32,916 --> 00:11:36,116
to showcase your content

227
00:11:36,356 --> 00:11:37,466
and focus mechanism.

228
00:11:37,466 --> 00:11:40,066
So I'm going to show

229
00:11:40,066 --> 00:11:42,346
that I am working

230
00:11:43,216 --> 00:11:47,136
And then later on, I'm going

231
00:11:48,406 --> 00:11:50,176
to make appear better.

232
00:11:50,426 --> 00:11:53,276
So let's get to it.

233
00:11:53,916 --> 00:11:58,156
So I'm going to switch

234
00:12:00,256 --> 00:12:05,816
and I have here Xcode project

235
00:12:06,376 --> 00:12:08,226
that I'm working on

236
00:12:08,686 --> 00:12:10,546
Now let me talk about

237
00:12:11,266 --> 00:12:15,506
It's an app that lets users

238
00:12:16,936 --> 00:12:20,916
So the application

239
00:12:21,306 --> 00:12:25,376
and the associated XML files are

240
00:12:25,976 --> 00:12:28,356
and let me go over them

241
00:12:29,646 --> 00:12:34,236
So here's one of the pages

242
00:12:34,236 --> 00:12:36,156
to showcase user's photo albums.

243
00:12:37,296 --> 00:12:43,446
Now you can see it's a stacked

244
00:12:43,446 --> 00:12:47,106
with a background

245
00:12:48,296 --> 00:12:53,876
to showcase the albums and each

246
00:12:53,876 --> 00:12:54,666
by a lockup.

247
00:12:55,786 --> 00:12:59,876
Now each one of these

248
00:13:00,246 --> 00:13:05,556
from the album that

249
00:13:05,556 --> 00:13:07,396
Other than some custom styling

250
00:13:07,396 --> 00:13:09,086
to make this lockup

251
00:13:09,356 --> 00:13:11,486
I have not customized

252
00:13:12,206 --> 00:13:17,086
So it's kind of out

253
00:13:17,996 --> 00:13:20,426
So let's run this real quick

254
00:13:20,616 --> 00:13:22,126
and see what it looks

255
00:13:22,716 --> 00:13:27,736
And for that I'm going to

256
00:13:31,416 --> 00:13:35,896
So there's the app, that's

257
00:13:35,896 --> 00:13:36,776
that I talked about.

258
00:13:37,056 --> 00:13:39,046
So you see the nice

259
00:13:39,856 --> 00:13:41,356
and the shelf at the bottom.

260
00:13:41,796 --> 00:13:44,446
And you know, I have to say just

261
00:13:44,446 --> 00:13:46,066
out of the box it

262
00:13:47,046 --> 00:13:50,316
It's functional and the

263
00:13:50,316 --> 00:13:50,776
of difference.

264
00:13:51,426 --> 00:13:56,496
But I think it can

265
00:13:56,686 --> 00:14:04,606
So, consider this, how about

266
00:13:56,686 --> 00:14:04,606
So, consider this, how about

267
00:14:04,606 --> 00:14:08,166
from the album, to

268
00:14:09,636 --> 00:14:13,536
What if we chose multiple

269
00:14:13,536 --> 00:14:18,786
from that album, and use that to

270
00:14:19,916 --> 00:14:23,326
Now I'm going to just

271
00:14:23,476 --> 00:14:26,916
How about we create a

272
00:14:27,626 --> 00:14:31,496
when the album is not

273
00:14:31,496 --> 00:14:34,776
out into a nice grid when

274
00:14:35,916 --> 00:14:36,796
That will be cool.

275
00:14:37,916 --> 00:14:42,086
But more than that, it'll give

276
00:14:42,456 --> 00:14:43,846
of what the album is about.

277
00:14:44,896 --> 00:14:51,036
Because the user gets to see

278
00:14:51,256 --> 00:14:53,086
Now this is a really

279
00:14:53,086 --> 00:14:56,206
for having custom

280
00:14:57,486 --> 00:14:58,586
So let me show you how to do it.

281
00:15:00,006 --> 00:15:04,536
So I'm going to switch

282
00:15:05,646 --> 00:15:07,316
and the first thing I want

283
00:15:07,316 --> 00:15:11,016
to do is create a mark-up

284
00:15:12,276 --> 00:15:16,106
It's kind of a translation of

285
00:15:16,106 --> 00:15:19,616
of your user interface

286
00:15:19,616 --> 00:15:21,046
that TVMLKit can understand.

287
00:15:22,326 --> 00:15:26,496
So I have that here right

288
00:15:26,496 --> 00:15:29,126
it's again a stacked

289
00:15:30,476 --> 00:15:36,216
but instead of lockups,

290
00:15:36,216 --> 00:15:37,916
that I have created

291
00:15:38,556 --> 00:15:40,096
That's the cell that

292
00:15:40,776 --> 00:15:44,326
I'm calling it flyout because

293
00:15:45,216 --> 00:15:48,226
And as mentioned

294
00:15:48,556 --> 00:15:53,246
I want multiple photos

295
00:15:53,806 --> 00:15:57,676
I have multiple image

296
00:15:58,306 --> 00:16:02,016
Now there's one important

297
00:15:58,306 --> 00:16:02,016
Now there's one important

298
00:16:02,596 --> 00:16:07,056
is that for all custom cells,

299
00:16:07,616 --> 00:16:15,266
with three styles, and

300
00:16:16,556 --> 00:16:20,986
and a new style we've added into

301
00:16:22,576 --> 00:16:27,106
Now TVMLKit uses

302
00:16:27,886 --> 00:16:31,396
to give your cells a nice

303
00:16:32,846 --> 00:16:35,126
And it uses TV focus

304
00:16:36,126 --> 00:16:37,796
to know how much

305
00:16:37,796 --> 00:16:39,246
to grow when it gets focused.

306
00:16:40,616 --> 00:16:44,156
It uses this information

307
00:16:44,156 --> 00:16:48,386
between shelves, and also

308
00:16:48,946 --> 00:16:51,906
when the cell underneath

309
00:16:52,486 --> 00:16:58,326
So now that we have the

310
00:17:00,116 --> 00:17:05,026
We know we have to add this

311
00:17:05,195 --> 00:17:06,406
so let's do that real quick.

312
00:17:07,256 --> 00:17:09,435
So for that I'm going to

313
00:17:09,435 --> 00:17:14,336
and in the method application

314
00:17:15,076 --> 00:17:19,185
I'm going to quickly

315
00:17:19,185 --> 00:17:25,866
that I wrote earlier,

316
00:17:26,016 --> 00:17:29,656
So using this I've just

317
00:17:31,386 --> 00:17:34,696
using TVElementFactory

318
00:17:36,356 --> 00:17:41,336
Now TVMLKit also wants me to

319
00:17:42,056 --> 00:17:48,096
by extending it, so that I can

320
00:17:48,396 --> 00:17:55,476
So let's do that

321
00:17:55,716 --> 00:18:00,376
So, that's all the configuration

322
00:17:55,716 --> 00:18:00,376
So, that's all the configuration

323
00:18:00,456 --> 00:18:03,516
now let's have a look at the

324
00:18:04,076 --> 00:18:07,546
starting off with the

325
00:18:08,166 --> 00:18:14,906
Now for custom cells you

326
00:18:15,046 --> 00:18:19,296
First, the

327
00:18:20,756 --> 00:18:23,676
this is required to map

328
00:18:24,136 --> 00:18:28,186
to the collectionViewCellClass

329
00:18:29,656 --> 00:18:34,956
And second, makeView,

330
00:18:34,956 --> 00:18:37,886
to configure your cell

331
00:18:39,696 --> 00:18:45,236
So let's quickly fill in these

332
00:18:45,236 --> 00:18:46,296
that I've written before.

333
00:18:46,876 --> 00:18:50,216
So there goes the

334
00:18:51,826 --> 00:18:57,526
with the collectionViewCellClass

335
00:18:58,616 --> 00:19:06,226
And similarly, the

336
00:18:58,616 --> 00:19:06,226
And similarly, the

337
00:19:06,226 --> 00:19:09,356
that collectionViewCell

338
00:19:10,256 --> 00:19:11,956
Now an important

339
00:19:11,956 --> 00:19:15,886
that the existing view

340
00:19:16,406 --> 00:19:18,706
because TVMLKit just dequeued it

341
00:19:18,756 --> 00:19:21,576
from the collection view

342
00:19:22,016 --> 00:19:26,766
So it's always going to be

343
00:19:27,376 --> 00:19:31,196
Now before I jump into the

344
00:19:31,766 --> 00:19:34,856
let's have a look at the

345
00:19:35,476 --> 00:19:41,076
So that's the

346
00:19:41,106 --> 00:19:44,126
that I'm using to

347
00:19:44,546 --> 00:19:47,036
And as you can see, it

348
00:19:47,036 --> 00:19:52,136
UICollectionViewCell, in

349
00:19:52,136 --> 00:19:55,506
with TVMLKit, it's

350
00:19:55,506 --> 00:19:58,866
I can use it in a native

351
00:19:59,856 --> 00:20:04,756
The important point to note

352
00:19:59,856 --> 00:20:04,756
The important point to note

353
00:20:05,866 --> 00:20:10,416
of image views that it uses

354
00:20:11,056 --> 00:20:15,856
And these image views are the

355
00:20:15,856 --> 00:20:17,356
in our extended interface

356
00:20:18,196 --> 00:20:20,336
from the TV view element.

357
00:20:23,276 --> 00:20:25,996
So let's head back to

358
00:20:26,536 --> 00:20:28,000
and add that code.

359
00:20:36,626 --> 00:20:39,106
So that's the configuration,

360
00:20:41,006 --> 00:20:45,796
but the important

361
00:20:46,006 --> 00:20:51,846
I am trading over all the

362
00:20:51,846 --> 00:20:54,246
and extracting the

363
00:20:55,526 --> 00:21:00,306
and simply reusing TVMLKit to

364
00:20:55,526 --> 00:21:00,306
and simply reusing TVMLKit to

365
00:21:00,806 --> 00:21:02,696
Now out of the box,

366
00:21:02,696 --> 00:21:06,756
really good because what

367
00:21:06,756 --> 00:21:11,756
of remote images, it gives

368
00:21:11,866 --> 00:21:14,886
to fit the bounds so that the

369
00:21:14,886 --> 00:21:17,846
And it also gives

370
00:21:18,066 --> 00:21:20,066
in case I reuse those

371
00:21:21,476 --> 00:21:23,626
So reusing these TVMLKit views,

372
00:21:24,576 --> 00:21:26,956
and other infrastructure

373
00:21:27,896 --> 00:21:28,856
I highly encourage it.

374
00:21:30,656 --> 00:21:34,516
So, with that we've configured

375
00:21:34,516 --> 00:21:36,256
in TVMLKit knows

376
00:21:36,826 --> 00:21:40,616
There's only one thing remaining

377
00:21:40,616 --> 00:21:42,696
to the stacked document

378
00:21:43,486 --> 00:21:46,306
and replace all the

379
00:21:46,306 --> 00:21:47,356
that I have just added.

380
00:21:47,726 --> 00:21:53,206
So I'm going to head back there,

381
00:21:58,816 --> 00:22:02,000
and add my FlyoutCell.

382
00:21:58,816 --> 00:22:02,000
and add my FlyoutCell.

383
00:22:07,046 --> 00:22:08,406
Now there were three albums,

384
00:22:08,656 --> 00:22:10,276
there are three FlyoutCells

385
00:22:10,706 --> 00:22:17,086
each FlyoutCell has,

386
00:22:17,736 --> 00:22:20,486
And when you add these cells,

387
00:22:20,486 --> 00:22:24,526
as well, that's required,

388
00:22:29,636 --> 00:22:34,206
So now that we've added

389
00:22:34,736 --> 00:22:36,036
and see what it looks like now.

390
00:22:36,116 --> 00:22:40,246
So I'm going to switch

391
00:22:46,296 --> 00:22:47,986
and there's the flyout cell.

392
00:22:49,516 --> 00:22:55,546
[ Applause ]

393
00:22:56,046 --> 00:22:59,196
And you can immediately tell

394
00:22:59,556 --> 00:23:03,066
then just having one

395
00:22:59,556 --> 00:23:03,066
then just having one

396
00:23:03,216 --> 00:23:04,346
so much more immersive.

397
00:23:05,766 --> 00:23:09,846
And notice that the cell

398
00:23:10,116 --> 00:23:13,596
all the spacing is right,

399
00:23:14,196 --> 00:23:19,146
it moves up and down as the

400
00:23:19,766 --> 00:23:25,476
It just feels like it

401
00:23:25,666 --> 00:23:27,226
although you added it.

402
00:23:28,456 --> 00:23:32,616
So there you have it,

403
00:23:32,616 --> 00:23:38,006
to implement, and it lets

404
00:23:38,006 --> 00:23:41,696
to your application, by

405
00:23:42,676 --> 00:23:46,946
but by also showcasing your

406
00:23:48,346 --> 00:23:48,686
Thank you.

407
00:23:49,516 --> 00:23:54,546
[ Applause ]

408
00:23:55,046 --> 00:23:55,826
&gt;&gt; Thank you, Parry.

409
00:23:56,836 --> 00:23:59,446
I think Parry spend more

410
00:23:59,446 --> 00:24:02,306
than actually configuring

411
00:23:59,446 --> 00:24:02,306
than actually configuring

412
00:24:03,266 --> 00:24:06,036
So before we continue, I'd

413
00:24:06,036 --> 00:24:07,026
of what we've seen today.

414
00:24:07,026 --> 00:24:10,466
The very first thing when it

415
00:24:10,466 --> 00:24:13,816
to define a custom mark-up that

416
00:24:15,176 --> 00:24:18,146
Register it with a

417
00:24:18,146 --> 00:24:20,296
about it and are

418
00:24:20,296 --> 00:24:21,606
into TV view elements.

419
00:24:23,186 --> 00:24:25,206
Provide an extended

420
00:24:25,486 --> 00:24:28,346
so that you can vend this user

421
00:24:28,346 --> 00:24:29,886
building the UI on the screen.

422
00:24:30,546 --> 00:24:36,126
And most importantly, use the

423
00:24:36,126 --> 00:24:40,576
and attributes to configure your

424
00:24:40,576 --> 00:24:41,176
it on the screen.

425
00:24:42,626 --> 00:24:44,466
So that's all there is

426
00:24:44,466 --> 00:24:47,006
to extending templates,

427
00:24:48,356 --> 00:24:49,566
And we are all really excited

428
00:24:49,566 --> 00:24:51,966
to see what you can

429
00:24:53,486 --> 00:24:57,236
But before we continue, there

430
00:24:57,236 --> 00:24:58,766
that we want you to know.

431
00:25:02,566 --> 00:25:05,256
Your user interface is

432
00:25:05,256 --> 00:25:07,046
within the document in TVML.

433
00:25:08,016 --> 00:25:10,266
And this document can

434
00:25:11,156 --> 00:25:14,336
Take for example a

435
00:25:14,336 --> 00:25:16,216
as results, in a

436
00:25:16,936 --> 00:25:21,516
As you search this shelf will

437
00:25:21,516 --> 00:25:23,366
and the contents will change,

438
00:25:24,236 --> 00:25:25,736
that's what a document

439
00:25:27,466 --> 00:25:31,446
Now, when we build the user,

440
00:25:31,446 --> 00:25:35,036
when document updates happen,

441
00:25:35,036 --> 00:25:40,116
extended interface creator,

442
00:25:40,116 --> 00:25:41,726
at the update type

443
00:25:42,296 --> 00:25:43,606
and figure out what's changed.

444
00:25:44,246 --> 00:25:49,336
For example, the children might

445
00:25:49,336 --> 00:25:50,946
you don't really want

446
00:25:50,946 --> 00:25:53,276
because that's not a nice

447
00:25:54,096 --> 00:25:58,026
Instead, reuse cells, reuse

448
00:25:58,796 --> 00:26:04,396
In our initial example

449
00:25:58,796 --> 00:26:04,396
In our initial example

450
00:26:04,956 --> 00:26:06,636
we weren't really

451
00:26:06,636 --> 00:26:09,576
in the TVMLKit ecosystem, we

452
00:26:10,626 --> 00:26:12,016
Let's see if we can change this.

453
00:26:12,636 --> 00:26:15,756
It's as simple as

454
00:26:16,476 --> 00:26:20,896
in this case we look at the

455
00:26:20,896 --> 00:26:23,456
of the call back

456
00:26:23,456 --> 00:26:26,356
out if this view is a

457
00:26:26,406 --> 00:26:28,156
in this case a MyBanner view.

458
00:26:29,446 --> 00:26:34,106
If it's not, we instantiate

459
00:26:34,386 --> 00:26:38,856
Now because we have a TVMLKit

460
00:26:39,476 --> 00:26:43,676
we have to do the right thing as

461
00:26:43,836 --> 00:26:48,176
to the extended, by passing it

462
00:26:48,176 --> 00:26:49,976
the existing view parameter.

463
00:26:51,256 --> 00:26:52,496
Now in this particular example,

464
00:26:52,936 --> 00:26:55,136
because MyBanner is

465
00:26:55,136 --> 00:26:57,586
that is totally fine to

466
00:26:58,256 --> 00:26:59,726
we don't really look

467
00:27:00,806 --> 00:27:03,456
But if your view hierarchy

468
00:27:04,206 --> 00:27:06,996
For performance reasons, we

469
00:27:06,996 --> 00:27:09,376
at the update type and

470
00:27:13,186 --> 00:27:17,756
That's the first line that you

471
00:27:19,826 --> 00:27:23,476
Now, new in tvOS

472
00:27:23,816 --> 00:27:25,266
of light and dark appearance.

473
00:27:26,116 --> 00:27:28,816
If you have a custom view that

474
00:27:29,596 --> 00:27:31,986
you can listen to trait

475
00:27:31,986 --> 00:27:34,046
out if you're in light or dark.

476
00:27:34,736 --> 00:27:38,186
We have a session,

477
00:27:38,256 --> 00:27:40,656
that absolutely explains

478
00:27:41,126 --> 00:27:42,686
and I highly encourage

479
00:27:45,376 --> 00:27:48,666
In the case that you are

480
00:27:49,066 --> 00:27:52,046
and you reuse our components,

481
00:27:53,236 --> 00:27:56,336
We highly encourage you to

482
00:27:56,866 --> 00:27:58,076
from the element update type.

483
00:27:59,146 --> 00:28:01,926
This gives you an idea

484
00:27:59,146 --> 00:28:01,926
This gives you an idea

485
00:28:01,926 --> 00:28:03,356
in the light or dark appearance,

486
00:28:04,376 --> 00:28:06,476
and this reuses the

487
00:28:06,476 --> 00:28:09,156
and it's the only

488
00:28:09,156 --> 00:28:12,306
to update your views for

489
00:28:12,306 --> 00:28:15,666
Because they are TVMLKit

490
00:28:15,776 --> 00:28:16,526
to reuse them.

491
00:28:16,526 --> 00:28:19,426
And more importantly,

492
00:28:19,786 --> 00:28:24,066
into the TVInterfaceFactory

493
00:28:24,886 --> 00:28:27,586
If you have a native app

494
00:28:28,756 --> 00:28:31,266
or rather you have your

495
00:28:32,276 --> 00:28:35,906
and you have a TVMLKit based

496
00:28:35,996 --> 00:28:37,056
with the framework itself.

497
00:28:38,156 --> 00:28:41,606
This is as simple as defining

498
00:28:42,716 --> 00:28:45,796
once again registering

499
00:28:47,366 --> 00:28:49,256
And where we built

500
00:28:49,256 --> 00:28:51,456
for a particular

501
00:28:52,246 --> 00:28:57,266
return your view controller

502
00:28:58,686 --> 00:29:02,666
Another way to use TVMLKit with

503
00:28:58,686 --> 00:29:02,666
Another way to use TVMLKit with

504
00:29:03,416 --> 00:29:05,166
is by hosting the

505
00:29:05,166 --> 00:29:07,656
that we provide, as

506
00:29:08,246 --> 00:29:10,836
You've already learned how

507
00:29:10,836 --> 00:29:13,126
to create a TV application

508
00:29:13,126 --> 00:29:16,136
and I'd like to highlight that

509
00:29:16,136 --> 00:29:19,176
to specify a window,

510
00:29:20,156 --> 00:29:21,906
Choose the view controller

511
00:29:22,446 --> 00:29:23,566
in navigation controller with.

512
00:29:25,046 --> 00:29:27,396
Once you have a TV

513
00:29:27,846 --> 00:29:32,066
take its navigation

514
00:29:32,726 --> 00:29:36,956
An alternative to this is to

515
00:29:38,006 --> 00:29:40,426
and in this particular

516
00:29:40,546 --> 00:29:42,666
to specify the window parameter.

517
00:29:43,936 --> 00:29:47,226
Once JavaScript starts up and

518
00:29:47,596 --> 00:29:49,116
TVMLKit will do the right thing

519
00:29:49,646 --> 00:29:51,716
and bring your window

520
00:29:54,176 --> 00:29:56,846
And with that, I'd like to hand

521
00:29:56,846 --> 00:30:00,056
to talk to you about how you can

522
00:29:56,846 --> 00:30:00,056
to talk to you about how you can

523
00:30:00,196 --> 00:30:02,776
through extending

524
00:30:04,516 --> 00:30:07,706
[ Applause ]

525
00:30:08,206 --> 00:30:08,816
&gt;&gt; Thanks Jeremy.

526
00:30:09,226 --> 00:30:13,086
Hi, I'm Christopher,

527
00:30:14,186 --> 00:30:17,806
So we just saw how you can

528
00:30:17,806 --> 00:30:20,976
in TVMLKit to use

529
00:30:21,406 --> 00:30:25,176
implement your own

530
00:30:25,666 --> 00:30:27,196
and collection view cells.

531
00:30:28,126 --> 00:30:31,686
You can also extend the

532
00:30:31,986 --> 00:30:33,896
which is powered

533
00:30:34,456 --> 00:30:38,096
to implement your own app

534
00:30:38,536 --> 00:30:41,076
in JavaScript or

535
00:30:42,206 --> 00:30:45,066
There are three main

536
00:30:45,066 --> 00:30:46,446
into the JavaScript context

537
00:30:46,676 --> 00:30:49,316
of your TVML application,

538
00:30:51,056 --> 00:30:55,196
First, you can simply load

539
00:30:55,306 --> 00:30:58,356
at run time.

540
00:30:58,596 --> 00:31:02,996
Second, you can use native

541
00:30:58,596 --> 00:31:02,996
Second, you can use native

542
00:31:03,286 --> 00:31:06,766
with the JavaScript context in

543
00:31:06,766 --> 00:31:10,676
like invoke functions into

544
00:31:10,676 --> 00:31:12,206
and forth between environments.

545
00:31:13,376 --> 00:31:16,736
Third, you can take

546
00:31:17,456 --> 00:31:19,986
and you can actually

547
00:31:20,736 --> 00:31:24,156
to make them accessible to your

548
00:31:24,156 --> 00:31:25,636
conventions in JavaScriptCore.

549
00:31:26,146 --> 00:31:28,856
Let's go into detail

550
00:31:28,856 --> 00:31:31,036
of these methods starting

551
00:31:33,536 --> 00:31:35,876
When your TVML application

552
00:31:36,476 --> 00:31:38,946
the first thing that's going

553
00:31:38,946 --> 00:31:40,266
to fetch a JavaScript file

554
00:31:40,616 --> 00:31:43,126
that contains the

555
00:31:43,656 --> 00:31:46,086
where control will be

556
00:31:46,086 --> 00:31:47,436
for your TVML application.

557
00:31:48,366 --> 00:31:52,656
Startup has to wait until this

558
00:31:53,046 --> 00:31:56,166
and evaluated before

559
00:31:56,876 --> 00:32:00,236
If you have a large application,

560
00:31:56,876 --> 00:32:00,236
If you have a large application,

561
00:32:00,236 --> 00:32:05,446
up the code into separate

562
00:32:05,656 --> 00:32:09,306
This is a common pattern

563
00:32:09,336 --> 00:32:11,586
by allowing you to load

564
00:32:12,526 --> 00:32:14,476
at any point in the

565
00:32:15,096 --> 00:32:20,256
Your JavaScript libraries are

566
00:32:20,536 --> 00:32:24,116
and functions that get shared

567
00:32:24,626 --> 00:32:30,856
Let's take a look at the

568
00:32:30,856 --> 00:32:32,796
that TVMLKit JS provides.

569
00:32:33,946 --> 00:32:38,106
Generally you'd want to call

570
00:32:38,196 --> 00:32:39,696
but you can actually

571
00:32:40,866 --> 00:32:44,126
The function takes an

572
00:32:44,606 --> 00:32:46,786
and a completion call

573
00:32:48,066 --> 00:32:51,716
When your completion call back

574
00:32:51,716 --> 00:32:53,846
to use the variables

575
00:32:53,846 --> 00:32:55,596
that were defined

576
00:32:56,396 --> 00:32:58,016
But there are a few

577
00:33:01,076 --> 00:33:05,926
When you call evaluate

578
00:33:05,926 --> 00:33:08,756
to execute the code,

579
00:33:08,756 --> 00:33:10,066
in your JavaScript files.

580
00:33:11,366 --> 00:33:15,446
So don't call evaluate scripts

581
00:33:16,346 --> 00:33:19,206
Also, be careful if you

582
00:33:19,206 --> 00:33:22,046
on other scripts, that you

583
00:33:24,596 --> 00:33:28,196
Evaluate scripts fetches

584
00:33:28,306 --> 00:33:32,856
in parallel, and then

585
00:33:33,386 --> 00:33:35,736
If any of the scripts

586
00:33:36,076 --> 00:33:37,626
none of the scripts

587
00:33:38,066 --> 00:33:40,586
so always check the

588
00:33:40,836 --> 00:33:42,936
to your completion

589
00:33:42,936 --> 00:33:45,516
that your library

590
00:33:46,036 --> 00:33:50,476
And finally, I'd just

591
00:33:50,476 --> 00:33:55,536
that even though TVMLKit

592
00:33:55,536 --> 00:33:57,936
your TVML application

593
00:33:58,416 --> 00:34:01,216
So you may find some

594
00:33:58,416 --> 00:34:01,216
So you may find some

595
00:34:01,376 --> 00:34:04,716
that will be helpful to you

596
00:34:04,916 --> 00:34:07,396
especially if they rely

597
00:34:07,396 --> 00:34:11,306
like a global window object

598
00:34:12,226 --> 00:34:13,295
Just keep that in mind.

599
00:34:13,755 --> 00:34:18,656
But you don't have to limit

600
00:34:18,656 --> 00:34:22,216
in your TVML applications,

601
00:34:22,216 --> 00:34:25,485
into the JavaScript

602
00:34:26,426 --> 00:34:30,076
From here you can do things

603
00:34:30,076 --> 00:34:33,196
down into JavaScript

604
00:34:33,196 --> 00:34:34,476
between JavaScript and native.

605
00:34:34,996 --> 00:34:43,306
In TVML, your JavaScript context

606
00:34:43,956 --> 00:34:47,206
in a class called the

607
00:34:48,386 --> 00:34:51,806
JavaScript executes on a

608
00:34:51,806 --> 00:34:54,476
to schedule your

609
00:34:54,786 --> 00:34:57,506
In the simplest form, all you

610
00:34:57,506 --> 00:34:59,466
on this TVApplicationController,

611
00:34:59,726 --> 00:35:01,716
and pass in a block

612
00:34:59,726 --> 00:35:01,716
and pass in a block

613
00:35:04,366 --> 00:35:07,366
When your block executes,

614
00:35:07,366 --> 00:35:11,576
to the JS context, from

615
00:35:11,576 --> 00:35:16,216
as JavaScript code, you can

616
00:35:16,786 --> 00:35:19,006
and you can get and

617
00:35:19,006 --> 00:35:21,626
into JavaScript using

618
00:35:23,196 --> 00:35:26,516
Just make sure that you

619
00:35:26,896 --> 00:35:28,616
or use it anywhere

620
00:35:31,326 --> 00:35:34,576
Since your JavaScript is all

621
00:35:34,866 --> 00:35:36,266
you also want to be careful

622
00:35:36,326 --> 00:35:39,486
that you don't perform any

623
00:35:39,486 --> 00:35:40,596
evaluating this block,

624
00:35:41,046 --> 00:35:42,756
as you may deadlock

625
00:35:44,086 --> 00:35:48,386
For more information on

626
00:35:48,786 --> 00:35:53,236
please see the 2013 WWDC

627
00:35:53,746 --> 00:35:58,326
Let's take a look at an

628
00:35:58,326 --> 00:36:01,546
into JavaScript code from

629
00:35:58,326 --> 00:36:01,546
into JavaScript code from

630
00:36:02,686 --> 00:36:04,426
Here we're looking

631
00:36:04,626 --> 00:36:07,106
for our TVML app's app delegate.

632
00:36:07,906 --> 00:36:09,306
We've implemented a stub here

633
00:36:09,446 --> 00:36:11,486
for the UIApplication

634
00:36:11,486 --> 00:36:14,066
to handle custom URL schemes.

635
00:36:14,786 --> 00:36:20,306
If we wanted to pass this

636
00:36:20,806 --> 00:36:23,576
all we have to do is

637
00:36:23,676 --> 00:36:26,836
to evaluate a block in

638
00:36:27,276 --> 00:36:33,516
When this block executes,

639
00:36:33,516 --> 00:36:38,286
to the JSContext, from here we

640
00:36:38,286 --> 00:36:40,936
on the JavaScript

641
00:36:41,376 --> 00:36:47,166
We can take native values

642
00:36:47,216 --> 00:36:49,726
as JavaScript properties

643
00:36:49,996 --> 00:36:51,006
as a function argument.

644
00:36:52,156 --> 00:36:56,326
Here, we're invoking the

645
00:36:56,376 --> 00:37:00,546
that was defined in JavaScript

646
00:36:56,376 --> 00:37:00,546
that was defined in JavaScript

647
00:37:00,676 --> 00:37:03,966
of the URL from the

648
00:37:03,966 --> 00:37:06,396
call back.

649
00:37:06,606 --> 00:37:09,886
Just like that we've

650
00:37:09,966 --> 00:37:11,826
into our TVMLKit application

651
00:37:12,116 --> 00:37:14,466
and exposed application

652
00:37:17,716 --> 00:37:19,676
Next, let's talk about bridging.

653
00:37:20,706 --> 00:37:24,806
So we just saw how super easy

654
00:37:25,376 --> 00:37:30,396
and use them in JavaScript,

655
00:37:30,506 --> 00:37:33,596
numbers, and arrays

656
00:37:33,596 --> 00:37:35,096
for you by JavaScriptCore.

657
00:37:36,596 --> 00:37:40,776
If you want to use your

658
00:37:40,776 --> 00:37:43,736
to do is follow a few

659
00:37:43,806 --> 00:37:47,006
and JavaScriptCore can actually

660
00:37:47,696 --> 00:37:48,326
Let's take a look.

661
00:37:48,676 --> 00:37:51,836
So there are three

662
00:37:53,176 --> 00:37:56,076
First, you have to

663
00:37:56,186 --> 00:37:59,586
that extends JSExport,

664
00:37:59,646 --> 00:38:01,196
which comes from JavaScriptCore.

665
00:37:59,646 --> 00:38:01,196
which comes from JavaScriptCore.

666
00:38:03,056 --> 00:38:08,276
Second, we're going to define

667
00:38:08,706 --> 00:38:11,116
and extending this

668
00:38:11,866 --> 00:38:13,116
to expose our native classes.

669
00:38:13,816 --> 00:38:18,816
And third, we're going to take

670
00:38:18,816 --> 00:38:23,016
or the class itself that we want

671
00:38:23,216 --> 00:38:25,996
on the TV application

672
00:38:26,386 --> 00:38:29,666
to prepare the JSContext

673
00:38:29,666 --> 00:38:31,646
over to JavaScript

674
00:38:32,116 --> 00:38:38,096
Let's take a look at an

675
00:38:38,096 --> 00:38:41,726
about creating a wrapper

676
00:38:41,726 --> 00:38:45,106
to expose something like in

677
00:38:46,016 --> 00:38:46,786
to JavaScript.

678
00:38:49,176 --> 00:38:52,286
We start off by defining

679
00:38:53,346 --> 00:38:56,826
here's where we'd specify

680
00:38:56,826 --> 00:39:00,446
that we wanted JavaScriptCore

681
00:38:56,826 --> 00:39:00,446
that we wanted JavaScriptCore

682
00:39:01,976 --> 00:39:04,416
Here we'll just leave it

683
00:39:04,416 --> 00:39:06,176
that we've extended JSExport

684
00:39:06,266 --> 00:39:09,776
and defined a protocol called

685
00:39:11,676 --> 00:39:16,456
Next, we will create a class

686
00:39:16,666 --> 00:39:20,316
that extends NSObject and

687
00:39:21,526 --> 00:39:24,896
Once again I've left the details

688
00:39:24,896 --> 00:39:27,136
where you'd define your

689
00:39:27,176 --> 00:39:28,966
that you wanted JavaScript

690
00:39:29,486 --> 00:39:36,596
And finally, we implement the

691
00:39:36,596 --> 00:39:40,396
method to evaluate app

692
00:39:41,176 --> 00:39:44,646
This gets called before

693
00:39:44,806 --> 00:39:49,256
and allows us to expose our

694
00:39:49,256 --> 00:39:51,266
control gets handed

695
00:39:52,696 --> 00:39:54,426
That's really all

696
00:39:55,066 --> 00:39:57,116
We've now defined

697
00:39:57,456 --> 00:39:59,326
we've gone through the

698
00:39:59,486 --> 00:40:04,976
to our TVML application's

699
00:39:59,486 --> 00:40:04,976
to our TVML application's

700
00:40:05,046 --> 00:40:08,406
So in this session we've seen

701
00:40:08,406 --> 00:40:12,086
functionality to enhance

702
00:40:12,616 --> 00:40:16,936
You can extend templates

703
00:40:17,336 --> 00:40:19,936
for your own views and

704
00:40:20,726 --> 00:40:24,936
You can actually host TVMLKit

705
00:40:25,516 --> 00:40:29,376
or use your own native view

706
00:40:29,916 --> 00:40:34,586
You can even extend the

707
00:40:35,046 --> 00:40:38,636
to bridge native classes, type

708
00:40:39,266 --> 00:40:40,866
and load additional libraries.

709
00:40:41,716 --> 00:40:43,856
I hope we've shown

710
00:40:44,346 --> 00:40:46,616
to build app specific

711
00:40:46,926 --> 00:40:49,886
in your TVMLKit apps

712
00:40:50,946 --> 00:40:54,726
TVMLKit is a really simple

713
00:40:55,066 --> 00:40:57,656
with high quality results

714
00:40:59,476 --> 00:41:02,746
I encourage you to

715
00:40:59,476 --> 00:41:02,746
I encourage you to

716
00:41:02,746 --> 00:41:06,746
and TVML catalog sample

717
00:41:06,746 --> 00:41:09,116
on how to extend

718
00:41:10,116 --> 00:41:12,336
Please also check out the

719
00:41:12,336 --> 00:41:15,596
for programming guides, sample

720
00:41:19,176 --> 00:41:22,516
Also, check out these other

721
00:41:22,516 --> 00:41:26,546
at WWDC 2016, especially

722
00:41:26,546 --> 00:41:30,296
for TVMLKit Part 1,

723
00:41:30,296 --> 00:41:32,086
of building an app

724
00:41:33,126 --> 00:41:37,796
Thank you, and enjoy
