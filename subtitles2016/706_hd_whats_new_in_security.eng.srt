1
00:00:07,516 --> 00:00:18,500
[ Music ]

2
00:00:22,341 --> 00:00:24,341
[ Applause ]

3
00:00:24,666 --> 00:00:25,266
&gt;&gt; Good afternoon!

4
00:00:25,786 --> 00:00:28,786
[laughs] Welcome everyone.

5
00:00:28,786 --> 00:00:32,036
Thanks for coming out to hear

6
00:00:32,485 --> 00:00:33,756
My name's Lucia Ballard

7
00:00:33,756 --> 00:00:36,486
and I manage the Secure

8
00:00:37,056 --> 00:00:39,586
And together with my colleague

9
00:00:39,586 --> 00:00:42,536
through a bunch of new stuff

10
00:00:42,536 --> 00:00:45,716
on to help you improve the

11
00:00:46,306 --> 00:00:48,536
So, I hope a lot of you caught

12
00:00:48,536 --> 00:00:49,336
before this.

13
00:00:49,696 --> 00:00:53,146
It's a great overview of why

14
00:00:53,146 --> 00:00:56,096
of the fundamental underpinnings

15
00:00:56,626 --> 00:00:58,596
Here we're going to dive a

16
00:00:58,596 --> 00:01:00,976
So, here's what's on deck.

17
00:00:58,596 --> 00:01:00,976
So, here's what's on deck.

18
00:01:05,046 --> 00:01:06,546
First up we'll be talking

19
00:01:06,546 --> 00:01:09,776
about some network

20
00:01:10,706 --> 00:01:12,896
Then we'll discuss

21
00:01:12,896 --> 00:01:14,276
to our cryptography APIs.

22
00:01:14,886 --> 00:01:17,196
And then Simon's going to talk

23
00:01:17,196 --> 00:01:21,476
about platform security

24
00:01:21,956 --> 00:01:25,436
So, diving into network

25
00:01:25,436 --> 00:01:27,096
as much as I do, you know

26
00:01:27,096 --> 00:01:29,686
that it's accumulated an

27
00:01:29,686 --> 00:01:30,846
about your personal life,

28
00:01:31,066 --> 00:01:33,256
and a lot of that comes

29
00:01:33,256 --> 00:01:34,986
Whether it's articles

30
00:01:34,986 --> 00:01:36,926
or messages you're

31
00:01:37,986 --> 00:01:39,376
all these little bits of detail,

32
00:01:39,376 --> 00:01:41,726
even if they seem

33
00:01:41,946 --> 00:01:45,316
can add up to a really

34
00:01:45,726 --> 00:01:48,136
So, that's why we

35
00:01:48,136 --> 00:01:51,196
of this detail should

36
00:01:52,636 --> 00:01:55,426
We think HTTPS is the new HTTP.

37
00:01:55,796 --> 00:01:58,326
So, for every resource you're

38
00:01:58,736 --> 00:02:00,326
you should provide

39
00:01:58,736 --> 00:02:00,326
you should provide

40
00:02:00,326 --> 00:02:02,176
and data integrity

41
00:02:02,696 --> 00:02:09,036
The other key point here is that

42
00:02:10,286 --> 00:02:14,956
HTTPS is built on SSL, or now

43
00:02:16,016 --> 00:02:19,886
and not all versions of this

44
00:02:19,946 --> 00:02:24,536
security that your users be

45
00:02:24,716 --> 00:02:26,146
So, building on these

46
00:02:26,816 --> 00:02:29,616
last year we introduced

47
00:02:30,516 --> 00:02:35,106
App Transport Security

48
00:02:35,106 --> 00:02:37,826
that you're doing,

49
00:02:37,996 --> 00:02:41,116
or even the older

50
00:02:41,606 --> 00:02:46,536
you have to be using top of

51
00:02:47,646 --> 00:02:51,436
First off that means TLS

52
00:02:51,436 --> 00:02:55,706
out for a while, but it's the

53
00:02:55,706 --> 00:02:59,416
to all the vulnerabilities that

54
00:02:59,666 --> 00:03:02,756
or the POODLE attack, or other

55
00:02:59,666 --> 00:03:02,756
or the POODLE attack, or other

56
00:03:04,556 --> 00:03:07,126
It also means you have to

57
00:03:07,606 --> 00:03:11,046
so that's ciphers like

58
00:03:11,526 --> 00:03:13,966
and certificates

59
00:03:14,256 --> 00:03:19,116
Certificates signed with SHA-1,

60
00:03:19,346 --> 00:03:21,306
Finally, it also

61
00:03:21,826 --> 00:03:23,916
So, this is a way

62
00:03:23,916 --> 00:03:25,336
between server and the client.

63
00:03:25,586 --> 00:03:28,566
It gives an amazing

64
00:03:28,566 --> 00:03:30,726
if in the future

65
00:03:31,186 --> 00:03:33,046
the server's certificate

66
00:03:33,556 --> 00:03:36,786
you can't reveal the

67
00:03:36,786 --> 00:03:39,176
that have happened in the past.

68
00:03:39,396 --> 00:03:42,546
So, you add all these together

69
00:03:42,806 --> 00:03:44,026
is a secure connection

70
00:03:44,026 --> 00:03:47,276
that protects the

71
00:03:47,326 --> 00:03:50,696
Now, we know that it takes

72
00:03:50,696 --> 00:03:54,086
with App Transport Security, so

73
00:03:54,536 --> 00:03:57,536
You can turn it off globally,

74
00:03:57,536 --> 00:03:58,956
up for particular domains

75
00:03:59,176 --> 00:04:02,826
that you knew couldn't

76
00:03:59,176 --> 00:04:02,826
that you knew couldn't

77
00:04:03,036 --> 00:04:04,436
Now I'm wondering

78
00:04:04,436 --> 00:04:06,346
in this audience are

79
00:04:06,616 --> 00:04:09,206
I set that Exception last

80
00:04:09,206 --> 00:04:10,066
about it for a while."

81
00:04:10,776 --> 00:04:13,126
Well, now is the

82
00:04:14,266 --> 00:04:16,305
because this year we're starting

83
00:04:16,305 --> 00:04:19,266
to enforce App Transport

84
00:04:20,916 --> 00:04:25,446
This is going to kick in at

85
00:04:25,486 --> 00:04:27,676
that for most Exceptions

86
00:04:27,676 --> 00:04:29,516
to provide a reasonable

87
00:04:29,906 --> 00:04:31,676
So, for all of these Exceptions

88
00:04:31,726 --> 00:04:34,386
that actually turn off

89
00:04:34,526 --> 00:04:38,096
or its key properties

90
00:04:38,416 --> 00:04:40,856
you'll need to explain

91
00:04:40,856 --> 00:04:42,626
to use this Exception

92
00:04:43,646 --> 00:04:46,946
For other Exceptions like

93
00:04:47,166 --> 00:04:49,426
that support for those

94
00:04:49,706 --> 00:04:52,766
so for now those Exceptions

95
00:04:52,766 --> 00:04:54,366
without any justification.

96
00:04:56,186 --> 00:04:59,936
So for example, if you have a

97
00:04:59,936 --> 00:05:02,156
with and you don't have control

98
00:04:59,936 --> 00:05:02,156
with and you don't have control

99
00:05:02,156 --> 00:05:05,496
over what cipher suites they're

100
00:05:05,496 --> 00:05:06,976
to enable you to keep

101
00:05:13,046 --> 00:05:15,136
We're also adding

102
00:05:15,546 --> 00:05:16,936
to make it easier to adopt.

103
00:05:17,346 --> 00:05:20,766
So for example, if you're

104
00:05:20,766 --> 00:05:24,766
and that media's already

105
00:05:24,766 --> 00:05:27,946
to offer an Exception through

106
00:05:27,946 --> 00:05:29,686
that media without

107
00:05:30,376 --> 00:05:33,086
I want to be clear, we still

108
00:05:33,196 --> 00:05:34,986
that you use TLS for everything,

109
00:05:35,486 --> 00:05:38,816
but in some cases we will be

110
00:05:39,006 --> 00:05:40,726
to help you transition

111
00:05:42,736 --> 00:05:45,226
We're also offering a

112
00:05:45,796 --> 00:05:49,016
So, here sometimes your app

113
00:05:49,016 --> 00:05:49,826
from around the web

114
00:05:49,826 --> 00:05:53,136
and of course you can't

115
00:05:54,056 --> 00:05:58,626
So, if you're WKWebView, then

116
00:05:58,706 --> 00:06:01,836
in your app's Info.plist.

117
00:05:58,706 --> 00:06:01,836
in your app's Info.plist.

118
00:06:01,836 --> 00:06:07,246
NSAllowsAarbitraryLoads

119
00:06:07,246 --> 00:06:08,626
of those loads will be exempted

120
00:06:08,626 --> 00:06:10,886
from the App Transport

121
00:06:11,116 --> 00:06:13,606
but everything else your

122
00:06:13,606 --> 00:06:14,976
to your own server, will

123
00:06:20,076 --> 00:06:21,676
So, that's App Transport

124
00:06:22,926 --> 00:06:25,846
but we're also making changes

125
00:06:26,746 --> 00:06:31,766
because cipher suites keep

126
00:06:31,766 --> 00:06:34,116
and more effective attacks

127
00:06:34,796 --> 00:06:37,506
So, no matter what

128
00:06:38,066 --> 00:06:40,136
we've now disabled

129
00:06:40,136 --> 00:06:44,846
for anyone using

130
00:06:45,046 --> 00:06:48,216
We've also disabled SSLv3

131
00:06:48,406 --> 00:06:49,356
So, even if you're dialing

132
00:06:49,356 --> 00:06:51,906
down into our lower level

133
00:06:51,906 --> 00:06:53,276
to access SSLv3.

134
00:06:54,276 --> 00:06:56,186
Research has simply

135
00:06:56,186 --> 00:06:57,996
of these technologies

136
00:06:57,996 --> 00:07:00,586
that they provide effective

137
00:06:57,996 --> 00:07:00,586
that they provide effective

138
00:07:00,996 --> 00:07:04,596
So, these are disabled.

139
00:07:05,386 --> 00:07:07,356
Other algorithms are

140
00:07:07,796 --> 00:07:12,356
specifically SHA-1 is showing

141
00:07:12,356 --> 00:07:14,446
to attacks, as is 3DES.

142
00:07:15,356 --> 00:07:17,706
So, if you know that you

143
00:07:17,706 --> 00:07:21,486
of these algorithms now

144
00:07:22,236 --> 00:07:25,316
And I recognize many people in

145
00:07:25,316 --> 00:07:28,336
and aren't in charge of their

146
00:07:28,336 --> 00:07:31,026
to reach out to the

147
00:07:31,026 --> 00:07:33,136
or whoever's hosting your

148
00:07:33,616 --> 00:07:35,876
that they've dropped

149
00:07:35,876 --> 00:07:38,326
on these older algorithms

150
00:07:39,246 --> 00:07:42,166
It would be a great time to

151
00:07:42,166 --> 00:07:44,666
of loading things using

152
00:07:44,666 --> 00:07:47,216
that you are cleared for

153
00:07:47,736 --> 00:07:48,976
then you'll be able to

154
00:07:53,306 --> 00:07:54,916
So, that's App Transport

155
00:07:55,916 --> 00:07:58,426
It's making sure everything

156
00:07:58,976 --> 00:08:01,246
but strong TLS is not enough.

157
00:07:58,976 --> 00:08:01,246
but strong TLS is not enough.

158
00:08:02,616 --> 00:08:05,456
You also need to have

159
00:08:05,456 --> 00:08:07,016
that you're using to validate

160
00:08:07,016 --> 00:08:10,686
that TLS connection

161
00:08:11,076 --> 00:08:13,976
So, I want to talk about a

162
00:08:14,016 --> 00:08:17,556
that we're using today to help

163
00:08:17,556 --> 00:08:20,546
in fact reaching out to the

164
00:08:20,866 --> 00:08:23,186
when you're establishing

165
00:08:23,846 --> 00:08:27,766
So, first let's back up

166
00:08:27,766 --> 00:08:28,976
about how certificates

167
00:08:33,046 --> 00:08:34,676
So, if you're connecting

168
00:08:34,676 --> 00:08:37,285
that server has had

169
00:08:37,285 --> 00:08:38,606
from a certificate authority.

170
00:08:38,856 --> 00:08:40,686
That authority validates

171
00:08:40,686 --> 00:08:42,515
and says, "Yep, sounds good.

172
00:08:42,515 --> 00:08:44,096
You are in fact example.com.

173
00:08:44,096 --> 00:08:45,556
Here's your cryptographic

174
00:08:46,056 --> 00:08:48,976
And when you connect the server

175
00:08:53,056 --> 00:08:56,116
But this is not always

176
00:08:57,386 --> 00:09:00,336
If there's an attacker who

177
00:08:57,386 --> 00:09:00,336
If there's an attacker who

178
00:09:00,446 --> 00:09:03,386
for your host name, then

179
00:09:03,386 --> 00:09:06,166
that certificate, and you as

180
00:09:06,166 --> 00:09:08,746
to distinguish the attacker's

181
00:09:09,516 --> 00:09:10,336
This could happen

182
00:09:10,336 --> 00:09:13,026
if the certificate

183
00:09:13,026 --> 00:09:14,076
worse case scenario,

184
00:09:14,076 --> 00:09:16,246
if the certificate

185
00:09:16,426 --> 00:09:18,736
someone else uses their private

186
00:09:21,446 --> 00:09:24,536
So, today I'm proud to announce

187
00:09:24,536 --> 00:09:26,196
for certificate transparency.

188
00:09:27,276 --> 00:09:31,076
Certificate transparency is a

189
00:09:31,076 --> 00:09:33,556
verifiable logs of

190
00:09:34,496 --> 00:09:37,496
These logs collect certificates

191
00:09:37,496 --> 00:09:39,856
so there are many participating

192
00:09:40,046 --> 00:09:41,936
but in fact anyone

193
00:09:43,416 --> 00:09:46,876
Then the logs issue

194
00:09:47,066 --> 00:09:48,576
that the certificate

195
00:09:48,766 --> 00:09:50,406
and a client can

196
00:09:50,406 --> 00:09:52,756
There are a bunch of

197
00:09:52,756 --> 00:09:54,826
Proof can be embedded in

198
00:09:54,826 --> 00:09:57,666
or it can get handed over

199
00:09:58,466 --> 00:10:00,676
or it can be delivered

200
00:09:58,466 --> 00:10:00,676
or it can be delivered

201
00:10:00,676 --> 00:10:04,536
which I'll talk more

202
00:10:04,716 --> 00:10:06,876
So, here's a quick

203
00:10:07,456 --> 00:10:14,416
First, the certificate authority

204
00:10:14,416 --> 00:10:17,086
to the server, but it also

205
00:10:17,566 --> 00:10:19,246
it gets added into

206
00:10:20,456 --> 00:10:22,906
The log then sends

207
00:10:22,956 --> 00:10:24,406
that the certificate

208
00:10:25,066 --> 00:10:28,776
and the server hands both that

209
00:10:29,146 --> 00:10:30,266
over to you, the client.

210
00:10:30,866 --> 00:10:33,046
That means you can

211
00:10:35,796 --> 00:10:38,676
So, certificate transparency

212
00:10:38,786 --> 00:10:40,396
to launch attacks.

213
00:10:41,356 --> 00:10:43,366
Basically it puts the

214
00:10:43,366 --> 00:10:45,646
If the attacker can

215
00:10:45,776 --> 00:10:49,776
from an authority that's not

216
00:10:49,946 --> 00:10:51,796
to get that cryptographic proof

217
00:10:52,166 --> 00:10:54,436
that the certificate has

218
00:10:55,096 --> 00:10:56,986
So, they hand over

219
00:10:56,986 --> 00:10:59,836
and the client can reject it.

220
00:10:59,986 --> 00:11:03,946
Alternatively, if they are using

221
00:10:59,986 --> 00:11:03,946
Alternatively, if they are using

222
00:11:03,946 --> 00:11:07,926
participating, then that

223
00:11:07,926 --> 00:11:10,796
and is publically visible, and

224
00:11:10,796 --> 00:11:13,536
to revoke the certificate at

225
00:11:13,976 --> 00:11:19,136
So, we think this is a critical

226
00:11:19,136 --> 00:11:21,806
to have confidence that the

227
00:11:21,806 --> 00:11:27,476
to is in fact the certificate

228
00:11:27,726 --> 00:11:29,216
So, here's how you

229
00:11:30,586 --> 00:11:33,526
You can actually use the same

230
00:11:33,526 --> 00:11:35,696
up your app for security

231
00:11:36,006 --> 00:11:39,966
It's a new keyword, so for each

232
00:11:39,966 --> 00:11:42,306
that's participating, you

233
00:11:42,306 --> 00:11:45,616
and then your client will reject

234
00:11:45,666 --> 00:11:46,906
that it's been publically

235
00:11:47,336 --> 00:11:53,246
Our current policy roughly

236
00:11:53,246 --> 00:11:54,606
from at least two logs.

237
00:11:55,816 --> 00:11:59,576
These logs -- we're adding

238
00:11:59,736 --> 00:12:01,406
but basically if your

239
00:11:59,736 --> 00:12:01,406
but basically if your

240
00:12:01,406 --> 00:12:03,236
in Chromium it'll

241
00:12:03,866 --> 00:12:05,626
And there's a lot

242
00:12:05,726 --> 00:12:09,546
about the general technology

243
00:12:09,826 --> 00:12:10,976
So, I encourage you

244
00:12:15,286 --> 00:12:18,966
Now certificate transparency is

245
00:12:19,156 --> 00:12:21,206
but it doesn't totally

246
00:12:21,366 --> 00:12:23,816
There's still that last

247
00:12:23,816 --> 00:12:26,606
out the certificate is flawed

248
00:12:26,606 --> 00:12:27,996
to actually stop trusting it.

249
00:12:29,416 --> 00:12:31,466
So, I want to take a

250
00:12:31,466 --> 00:12:33,406
about our recommended

251
00:12:33,716 --> 00:12:35,166
It's called the OCSP stapling.

252
00:12:35,996 --> 00:12:38,696
Now this is a standard that's

253
00:12:39,106 --> 00:12:40,386
but we think that it --

254
00:12:40,386 --> 00:12:42,756
now's the time for folks

255
00:12:42,756 --> 00:12:44,756
and start adopting

256
00:12:44,756 --> 00:12:46,456
for it is now quite widespread.

257
00:12:46,976 --> 00:12:49,816
OCSP stapling is an enhancement

258
00:12:49,816 --> 00:12:51,926
to the online certificate

259
00:12:52,066 --> 00:12:53,986
and solves a bunch

260
00:12:55,546 --> 00:12:58,656
So, as a refresher,

261
00:12:58,656 --> 00:13:00,336
We have the same set up, right?

262
00:12:58,656 --> 00:13:00,336
We have the same set up, right?

263
00:13:00,336 --> 00:13:03,196
Where your certificate authority

264
00:13:03,196 --> 00:13:06,776
to a server, every

265
00:13:06,776 --> 00:13:09,726
to that server it sees the

266
00:13:09,726 --> 00:13:11,026
to know whether it's

267
00:13:12,106 --> 00:13:15,076
So, it asks the certificate

268
00:13:15,076 --> 00:13:16,606
in the middle of

269
00:13:17,336 --> 00:13:19,256
and the certificate

270
00:13:19,446 --> 00:13:22,216
the certs still valid," or

271
00:13:22,316 --> 00:13:23,536
Don't trust it."

272
00:13:24,536 --> 00:13:25,786
This has some issues.

273
00:13:26,726 --> 00:13:28,576
One of them is that it's slow.

274
00:13:28,616 --> 00:13:30,796
You're right in the middle of

275
00:13:30,796 --> 00:13:32,636
to get your resources,

276
00:13:32,636 --> 00:13:34,876
to make your network

277
00:13:35,676 --> 00:13:37,336
especially if that

278
00:13:37,336 --> 00:13:38,596
you might be hanging

279
00:13:39,816 --> 00:13:43,086
The other major issue is

280
00:13:43,086 --> 00:13:45,416
about whatever activity

281
00:13:45,676 --> 00:13:47,536
Your certificate

282
00:13:47,536 --> 00:13:48,616
which host names

283
00:13:48,616 --> 00:13:51,176
to because you're

284
00:13:51,176 --> 00:13:52,636
up each time you connect.

285
00:13:55,636 --> 00:13:58,506
OCSP stapling resolves

286
00:13:58,906 --> 00:14:00,566
So, here's basically

287
00:13:58,906 --> 00:14:00,566
So, here's basically

288
00:14:01,506 --> 00:14:03,006
Instead of the client asking,

289
00:14:03,716 --> 00:14:05,926
the server asks the

290
00:14:06,456 --> 00:14:10,346
and the certificate authority

291
00:14:10,346 --> 00:14:10,956
to the server.

292
00:14:11,126 --> 00:14:12,986
Now it's signed by the

293
00:14:13,326 --> 00:14:15,206
so you know you can trust it.

294
00:14:15,816 --> 00:14:19,466
Then the server gives both

295
00:14:19,496 --> 00:14:22,266
that it's valid over to

296
00:14:22,266 --> 00:14:22,976
all in the same handshake.

297
00:14:27,256 --> 00:14:30,356
So, this means that your

298
00:14:30,356 --> 00:14:32,216
delivered reliably and quickly.

299
00:14:32,216 --> 00:14:33,456
There's no extra waiting.

300
00:14:33,656 --> 00:14:34,856
There's no concern there.

301
00:14:35,986 --> 00:14:37,856
And it protects your

302
00:14:37,856 --> 00:14:39,956
because the only connection

303
00:14:39,956 --> 00:14:40,796
to your server.

304
00:14:42,716 --> 00:14:44,646
You may have noticed

305
00:14:44,646 --> 00:14:46,856
like the certificate

306
00:14:46,856 --> 00:14:48,716
because you can use

307
00:14:48,716 --> 00:14:50,736
to deliver certificate

308
00:14:50,816 --> 00:14:54,606
As long as your certificate

309
00:14:54,606 --> 00:14:57,596
can hand all of that information

310
00:14:59,506 --> 00:15:03,896
And, like I said, OCSP

311
00:14:59,506 --> 00:15:03,896
And, like I said, OCSP

312
00:15:03,896 --> 00:15:06,966
across many operating systems

313
00:15:06,966 --> 00:15:10,246
so you can go turn it on

314
00:15:10,286 --> 00:15:12,866
whatever your backend

315
00:15:13,176 --> 00:15:15,976
And it's now fully supported

316
00:15:20,196 --> 00:15:22,836
So, if you could take a step

317
00:15:22,836 --> 00:15:26,736
with network security, now's

318
00:15:27,026 --> 00:15:29,346
to App Transport

319
00:15:29,346 --> 00:15:34,066
So, that's strong algorithms

320
00:15:34,286 --> 00:15:36,706
forward secrecy, and

321
00:15:38,536 --> 00:15:41,806
Also, it'd be a great time

322
00:15:41,806 --> 00:15:43,296
with certificate transparency.

323
00:15:43,646 --> 00:15:45,926
Find certificate authorities

324
00:15:45,926 --> 00:15:49,466
and get integrated

325
00:15:49,976 --> 00:15:54,096
And please, go enable

326
00:15:54,096 --> 00:15:56,636
so we connect the

327
00:15:56,636 --> 00:15:57,906
that you can have confidence

328
00:15:58,126 --> 00:16:00,416
in making secured connections

329
00:15:58,126 --> 00:16:00,416
in making secured connections

330
00:16:01,016 --> 00:16:03,116
So, that's network security.

331
00:16:03,116 --> 00:16:08,276
Now I'd like to take a

332
00:16:08,276 --> 00:16:09,806
about some cryptographic

333
00:16:10,436 --> 00:16:13,626
So, first up is SecKey.

334
00:16:14,056 --> 00:16:17,066
SecKey is our algorithm,

335
00:16:17,066 --> 00:16:20,876
is our API for asymmetric

336
00:16:21,346 --> 00:16:23,096
And in this release

337
00:16:23,146 --> 00:16:25,116
across macOS and iOS APIs.

338
00:16:26,416 --> 00:16:29,356
SecKey now has support for all

339
00:16:29,356 --> 00:16:33,566
want to do with asymmetric

340
00:16:33,566 --> 00:16:36,876
So, that's signing and

341
00:16:38,386 --> 00:16:40,876
This means that SecKey

342
00:16:41,096 --> 00:16:44,276
for the deprecated

343
00:16:44,816 --> 00:16:48,596
And it also replaces any use of

344
00:16:48,906 --> 00:16:52,006
to do cryptography

345
00:16:52,576 --> 00:16:54,946
So, we strongly recommend

346
00:16:56,836 --> 00:17:00,866
We've also tied this into a

347
00:16:56,836 --> 00:17:00,866
We've also tied this into a

348
00:17:01,796 --> 00:17:05,425
CryptoTokenKit is system support

349
00:17:05,425 --> 00:17:08,796
so that smart cards you might

350
00:17:08,796 --> 00:17:11,806
and various enterprises

351
00:17:12,486 --> 00:17:15,986
we now have out of the

352
00:17:16,526 --> 00:17:18,646
and they can integrate

353
00:17:18,646 --> 00:17:23,195
So, that means the Token content

354
00:17:23,195 --> 00:17:27,236
as you would expect, and the

355
00:17:27,425 --> 00:17:28,706
using the SecKey API.

356
00:17:29,996 --> 00:17:31,676
Now this is a complex topic

357
00:17:31,676 --> 00:17:33,326
and there's a lot of

358
00:17:33,866 --> 00:17:36,606
So, please come see us in the

359
00:17:36,666 --> 00:17:37,776
through your use case.

360
00:17:38,476 --> 00:17:43,036
So, thanks for your attention

361
00:17:43,036 --> 00:17:44,946
to Simon to talk about what's

362
00:17:45,516 --> 00:17:50,256
[ Applause ]

363
00:17:50,756 --> 00:17:51,596
&gt;&gt; Thank you very much Lucia.

364
00:17:53,246 --> 00:17:54,556
Hello. I'm Simon Cooper.

365
00:17:54,706 --> 00:17:56,556
I'm the manager of the

366
00:17:57,206 --> 00:17:59,846
So, I'm going to talk about

367
00:18:00,516 --> 00:18:02,526
but first of all I

368
00:18:02,526 --> 00:18:06,626
a little bit about how software

369
00:18:07,216 --> 00:18:10,956
a little bit about Developer

370
00:18:10,956 --> 00:18:13,526
about Gatekeeper and

371
00:18:13,526 --> 00:18:14,416
surrounding Gatekeeper.

372
00:18:15,296 --> 00:18:16,566
So, let's start off about --

373
00:18:16,566 --> 00:18:18,966
talking about how

374
00:18:18,966 --> 00:18:22,816
for a couple of our platforms.

375
00:18:22,816 --> 00:18:25,586
So, for iOS you can get

376
00:18:27,246 --> 00:18:30,576
You can build and

377
00:18:30,726 --> 00:18:33,026
and install them on

378
00:18:34,246 --> 00:18:37,036
And there's some enterprise

379
00:18:37,036 --> 00:18:40,176
to deliver and manage

380
00:18:41,526 --> 00:18:44,226
You'll notice that all of these

381
00:18:44,226 --> 00:18:46,106
silently handled by

382
00:18:47,466 --> 00:18:49,426
So, now I'd like to talk

383
00:18:49,856 --> 00:18:55,106
So, you can also get apps

384
00:18:55,106 --> 00:18:57,766
and that's a very good

385
00:18:58,366 --> 00:19:03,366
You can also get apps that are

386
00:18:58,366 --> 00:19:03,366
You can also get apps that are

387
00:19:05,996 --> 00:19:09,606
You can also use Xcode

388
00:19:09,656 --> 00:19:12,156
and use the traditional

389
00:19:12,156 --> 00:19:13,976
to build things in

390
00:19:18,046 --> 00:19:20,976
So, let's go back and talk a

391
00:19:25,256 --> 00:19:25,976
So, what is Developer ID?

392
00:19:30,126 --> 00:19:31,576
Developer ID allows you

393
00:19:31,576 --> 00:19:33,476
to deliver apps outside

394
00:19:35,616 --> 00:19:38,726
These apps are usually

395
00:19:41,656 --> 00:19:43,956
The Developer ID

396
00:19:44,246 --> 00:19:46,676
with a Developer ID signing ID.

397
00:19:48,486 --> 00:19:50,086
And when you sign apps using

398
00:19:50,086 --> 00:19:52,726
that identity they are treated

399
00:19:54,596 --> 00:19:58,566
There are actually some improved

400
00:19:58,566 --> 00:20:00,446
to properly export

401
00:19:58,566 --> 00:20:00,446
to properly export

402
00:20:00,446 --> 00:20:00,976
signed applications.

403
00:20:08,196 --> 00:20:09,986
So, there's something

404
00:20:09,986 --> 00:20:12,216
and that's a change to

405
00:20:12,616 --> 00:20:13,806
and this was announced

406
00:20:13,946 --> 00:20:15,796
We're actually allowing

407
00:20:15,796 --> 00:20:17,146
to be used with iCloud.

408
00:20:19,536 --> 00:20:22,476
So, Developer ID can

409
00:20:22,836 --> 00:20:26,106
That includes iCloud

410
00:20:26,656 --> 00:20:27,886
Push Notifications, and VPN.

411
00:20:32,306 --> 00:20:33,066
So, what does this mean?

412
00:20:34,256 --> 00:20:38,266
This means that you can deliver

413
00:20:38,266 --> 00:20:42,756
of the App Store and you can now

414
00:20:43,076 --> 00:20:45,416
with your iCloud

415
00:20:46,686 --> 00:20:50,176
You will be able to deploy

416
00:20:50,346 --> 00:20:51,906
to macOS 10.9.

417
00:20:52,606 --> 00:20:54,226
So, I'm sure you want to know

418
00:20:54,226 --> 00:20:56,956
when you'll be able

419
00:20:57,176 --> 00:21:00,066
So, you can start iCloud

420
00:20:57,176 --> 00:21:00,066
So, you can start iCloud

421
00:21:00,626 --> 00:21:01,976
That's using the Xcode 8 tools.

422
00:21:06,106 --> 00:21:08,956
And I'm sure you're aware

423
00:21:09,296 --> 00:21:12,156
of iCloud there is a development

424
00:21:13,126 --> 00:21:16,976
When you're going to deploy

425
00:21:16,976 --> 00:21:18,776
to be deploying against

426
00:21:19,136 --> 00:21:21,256
and you'll have to wait for

427
00:21:21,256 --> 00:21:24,146
to start testing that.

428
00:21:24,736 --> 00:21:27,566
When you are going to do

429
00:21:27,566 --> 00:21:31,306
in Xcode 8 because they make

430
00:21:31,306 --> 00:21:32,736
against the production servers.

431
00:21:33,866 --> 00:21:36,746
The Xcode team also

432
00:21:37,206 --> 00:21:40,296
that please don't distribute

433
00:21:40,296 --> 00:21:40,976
GM tools.

434
00:21:45,396 --> 00:21:49,546
So, the other side of

435
00:21:50,486 --> 00:21:52,966
Gatekeeper allows us to

436
00:21:52,966 --> 00:21:54,216
to run on your machine.

437
00:21:55,626 --> 00:21:59,206
And there is a Preference Panel.

438
00:21:59,566 --> 00:22:01,586
And on that Preference

439
00:21:59,566 --> 00:22:01,586
And on that Preference

440
00:22:02,026 --> 00:22:05,106
there are these options; you can

441
00:22:06,156 --> 00:22:09,586
you can run from the Mac App

442
00:22:09,956 --> 00:22:11,396
or you can run apps

443
00:22:12,706 --> 00:22:16,526
When you first run an app

444
00:22:16,726 --> 00:22:17,716
before its first run.

445
00:22:19,256 --> 00:22:22,096
We're actually making

446
00:22:22,446 --> 00:22:26,816
and we're making changes to

447
00:22:28,296 --> 00:22:30,126
We are changing the

448
00:22:30,126 --> 00:22:32,256
and those default

449
00:22:32,516 --> 00:22:33,976
you can run from

450
00:22:34,736 --> 00:22:37,206
you can run from the Mac App

451
00:22:38,356 --> 00:22:41,706
Now if Gatekeeper rejects

452
00:22:42,186 --> 00:22:45,206
there's usually a button that

453
00:22:45,356 --> 00:22:48,786
that allows you to open

454
00:22:50,216 --> 00:22:51,516
Unfortunately I have to say,

455
00:22:51,516 --> 00:22:54,046
in the seed build this function

456
00:22:54,146 --> 00:22:56,186
but it will be fixed

457
00:22:57,266 --> 00:23:01,076
I also want to say that we

458
00:22:57,266 --> 00:23:01,076
I also want to say that we

459
00:23:01,076 --> 00:23:02,846
that this underlying

460
00:23:02,846 --> 00:23:03,786
that the policy works.

461
00:23:04,386 --> 00:23:06,666
So, this means that if you

462
00:23:06,666 --> 00:23:09,696
or you use command line tools

463
00:23:09,966 --> 00:23:11,976
you can re-enable

464
00:23:19,046 --> 00:23:20,946
So, I want to talk a little bit

465
00:23:20,946 --> 00:23:23,296
to Gatekeeper, but

466
00:23:23,296 --> 00:23:27,436
about a repackaging problem

467
00:23:27,436 --> 00:23:29,096
that we've developed

468
00:23:29,836 --> 00:23:32,646
Now the repackaging

469
00:23:32,946 --> 00:23:34,746
because of the way

470
00:23:34,746 --> 00:23:37,436
There are a certain type of apps

471
00:23:37,886 --> 00:23:42,316
that when they are written they

472
00:23:42,486 --> 00:23:44,116
and use external resources.

473
00:23:46,536 --> 00:23:54,216
These apps may be delivered

474
00:23:54,216 --> 00:23:55,786
in fact be correctly signed.

475
00:23:56,806 --> 00:23:58,896
But the external

476
00:23:58,896 --> 00:24:01,236
out to may not be signed

477
00:23:58,896 --> 00:24:01,236
out to may not be signed

478
00:24:02,026 --> 00:24:04,246
and they can be code

479
00:24:04,566 --> 00:24:06,826
They could be libraries,

480
00:24:07,276 --> 00:24:08,826
they could even be HTML content.

481
00:24:09,266 --> 00:24:11,976
And you may not be aware

482
00:24:11,976 --> 00:24:14,976
that if it contains JavaScript

483
00:24:19,226 --> 00:24:22,916
These resources could also be

484
00:24:23,336 --> 00:24:24,396
or even Apple Scripts.

485
00:24:26,666 --> 00:24:28,156
So, what's the problem?

486
00:24:29,616 --> 00:24:32,066
Well, if you put these two

487
00:24:32,066 --> 00:24:35,666
container and deliver the app

488
00:24:36,106 --> 00:24:40,616
or a disk image or using an

489
00:24:41,306 --> 00:24:47,306
into the container, and then you

490
00:24:48,256 --> 00:24:50,726
when the app runs and it talks

491
00:24:50,726 --> 00:24:55,246
to the external resources

492
00:24:55,696 --> 00:24:56,456
dangerous things.

493
00:24:57,296 --> 00:25:00,296
And you'll notice that the

494
00:24:57,296 --> 00:25:00,296
And you'll notice that the

495
00:25:00,296 --> 00:25:03,716
meaning that it's signed, is

496
00:25:03,716 --> 00:25:04,876
outside of the signature,

497
00:25:05,276 --> 00:25:08,156
and trying to touch these

498
00:25:08,246 --> 00:25:12,696
So, if I take that app

499
00:25:13,106 --> 00:25:17,396
but instead of packaging it with

500
00:25:17,456 --> 00:25:18,936
the developer, would

501
00:25:19,056 --> 00:25:22,036
and I put malicious

502
00:25:22,816 --> 00:25:25,226
then when the user runs

503
00:25:25,226 --> 00:25:27,116
to be getting your

504
00:25:27,116 --> 00:25:30,626
to be getting the experience

505
00:25:31,506 --> 00:25:34,266
Now if that malicious code

506
00:25:34,406 --> 00:25:37,036
that you may have put into a

507
00:25:37,626 --> 00:25:39,966
then your app is almost

508
00:25:39,966 --> 00:25:41,866
to be doing what you

509
00:25:48,296 --> 00:25:50,646
So, we're calling this

510
00:25:51,186 --> 00:25:52,906
and there are some things

511
00:25:52,906 --> 00:25:55,176
that are actually

512
00:25:55,176 --> 00:25:58,446
by the packaging problem,

513
00:25:58,446 --> 00:25:59,966
that are delivered

514
00:26:00,716 --> 00:26:04,136
And that is the best

515
00:26:04,366 --> 00:26:10,616
Other things that are

516
00:26:10,616 --> 00:26:13,776
if you install your apps using a

517
00:26:14,936 --> 00:26:15,966
That doesn't mean to say

518
00:26:16,316 --> 00:26:18,906
that the app once it's been

519
00:26:19,236 --> 00:26:20,716
and delivered in

520
00:26:20,976 --> 00:26:24,476
but the actual Apple Installer

521
00:26:24,476 --> 00:26:25,916
of reaching outside

522
00:26:31,046 --> 00:26:32,286
So, there are things

523
00:26:32,676 --> 00:26:35,076
and that is if you are

524
00:26:35,536 --> 00:26:39,556
or a disk image, or if you've

525
00:26:39,786 --> 00:26:42,976
in an ISO image, and any

526
00:26:46,216 --> 00:26:49,506
It's also possible that if

527
00:26:49,506 --> 00:26:51,806
in such a way that

528
00:26:51,806 --> 00:26:56,606
to assemble an app using a

529
00:26:56,606 --> 00:27:00,966
from here and there, you can

530
00:26:56,606 --> 00:27:00,966
from here and there, you can

531
00:27:07,386 --> 00:27:08,976
So, I -- we need your

532
00:27:13,046 --> 00:27:14,196
And we also need to

533
00:27:14,196 --> 00:27:14,936
because of this problem.

534
00:27:18,536 --> 00:27:19,386
So, what do we need to do?

535
00:27:20,256 --> 00:27:23,156
So, if you're delivering

536
00:27:23,156 --> 00:27:25,306
with some external resources,

537
00:27:25,336 --> 00:27:29,286
through using a zip, or a

538
00:27:29,486 --> 00:27:33,556
And we need to ask you to

539
00:27:34,076 --> 00:27:37,846
And the reason we're

540
00:27:37,886 --> 00:27:39,976
because we can now

541
00:27:43,136 --> 00:27:48,436
You can sign a disk image

542
00:27:48,856 --> 00:27:51,776
and that is the current

543
00:27:52,436 --> 00:27:54,916
or any of the later

544
00:27:58,066 --> 00:28:01,636
You can use the cosigning

545
00:27:58,066 --> 00:28:01,636
You can use the cosigning

546
00:28:01,636 --> 00:28:03,176
to sign the disk

547
00:28:03,926 --> 00:28:07,726
and that will basically

548
00:28:07,826 --> 00:28:10,236
and the app together.

549
00:28:10,316 --> 00:28:12,756
These signatures are actually

550
00:28:12,956 --> 00:28:14,126
and are carried along with it,

551
00:28:14,126 --> 00:28:17,896
and this signed disk

552
00:28:17,896 --> 00:28:18,976
with older OS releases.

553
00:28:23,046 --> 00:28:24,926
So, I'd now like to give

554
00:28:25,886 --> 00:28:28,366
So, one way to avoid

555
00:28:28,366 --> 00:28:30,576
repackaging problem is

556
00:28:31,066 --> 00:28:33,396
and put your resources

557
00:28:33,716 --> 00:28:34,966
and then sign the whole thing.

558
00:28:41,046 --> 00:28:43,556
If you're distributing just a

559
00:28:43,556 --> 00:28:45,976
consider delivering it

560
00:28:47,296 --> 00:28:49,446
You should certainly

561
00:28:50,486 --> 00:28:52,386
Perhaps package it

562
00:28:52,796 --> 00:28:57,306
but please verify the

563
00:28:57,426 --> 00:28:59,056
Alternatively if you

564
00:28:59,056 --> 00:29:02,086
up you can use a signed

565
00:28:59,056 --> 00:29:02,086
up you can use a signed

566
00:29:02,876 --> 00:29:07,366
For a container with apps and

567
00:29:07,806 --> 00:29:10,266
please use, and switch to

568
00:29:11,266 --> 00:29:13,816
Sign any content that you

569
00:29:14,176 --> 00:29:17,016
so that app that's inside

570
00:29:18,356 --> 00:29:19,746
and you should sign

571
00:29:20,466 --> 00:29:22,726
And please verify all

572
00:29:22,726 --> 00:29:22,976
release it.

573
00:29:27,096 --> 00:29:28,956
So, some final words

574
00:29:30,716 --> 00:29:32,726
so if you're adding

575
00:29:32,826 --> 00:29:34,726
or licensing information

576
00:29:34,726 --> 00:29:38,236
when it's being downloaded

577
00:29:38,236 --> 00:29:39,656
on the bundle route of the app.

578
00:29:39,656 --> 00:29:42,756
And there's a tech note that

579
00:29:43,076 --> 00:29:45,316
and that's Tech Note 2206.

580
00:29:45,586 --> 00:29:46,716
And you could also do this

581
00:29:46,716 --> 00:29:48,596
by signing the personalized

582
00:29:51,116 --> 00:29:53,776
Here are some things that

583
00:29:55,076 --> 00:29:57,156
You should not modify

584
00:29:57,406 --> 00:29:58,776
because this will break

585
00:29:58,776 --> 00:30:00,856
and when Gatekeeper comes

586
00:29:58,776 --> 00:30:00,856
and when Gatekeeper comes

587
00:30:00,856 --> 00:30:02,936
to verify your app

588
00:30:03,836 --> 00:30:05,946
You should never deliver your

589
00:30:06,626 --> 00:30:09,986
and please stop shipping

590
00:30:10,886 --> 00:30:14,276
So, now I'd like to talk

591
00:30:14,506 --> 00:30:17,386
that we have developed that

592
00:30:18,006 --> 00:30:20,586
And this is all about

593
00:30:22,236 --> 00:30:25,856
This mechanism, we're calling

594
00:30:27,636 --> 00:30:30,666
it supplements existing

595
00:30:30,706 --> 00:30:32,816
all the existing

596
00:30:33,396 --> 00:30:36,976
and there's no change

597
00:30:41,496 --> 00:30:43,946
And there's no change when

598
00:30:44,416 --> 00:30:47,606
for any apps that were

599
00:30:49,996 --> 00:30:53,006
This mechanism will

600
00:30:53,336 --> 00:30:59,286
for any newly downloaded apps

601
00:30:59,286 --> 00:31:00,826
on unsigned disk images.

602
00:30:59,286 --> 00:31:00,826
on unsigned disk images.

603
00:31:00,826 --> 00:31:05,976
So, let me describe exactly how

604
00:31:10,046 --> 00:31:13,146
So, this is a complex

605
00:31:13,146 --> 00:31:15,446
in your Downloads folder and

606
00:31:16,206 --> 00:31:18,206
or this could actually

607
00:31:18,646 --> 00:31:20,976
that contains your app

608
00:31:27,046 --> 00:31:31,316
So, when you double

609
00:31:32,116 --> 00:31:38,926
when your app runs it will be

610
00:31:39,576 --> 00:31:43,666
into a randomized place on the

611
00:31:43,716 --> 00:31:44,976
to access the resources.

612
00:31:50,046 --> 00:31:51,826
So, this stops the

613
00:31:52,396 --> 00:31:56,116
So there are some situations

614
00:31:56,286 --> 00:31:58,556
where this relocation

615
00:31:59,206 --> 00:32:02,596
If the user explicitly

616
00:31:59,206 --> 00:32:02,596
If the user explicitly

617
00:32:02,906 --> 00:32:05,556
and it's just the app

618
00:32:05,556 --> 00:32:09,536
with something else, then

619
00:32:09,566 --> 00:32:10,016
turned off.

620
00:32:10,856 --> 00:32:12,966
If the user moves the

621
00:32:13,096 --> 00:32:14,576
maybe to Slash Applications,

622
00:32:15,446 --> 00:32:17,186
then this mechanism

623
00:32:19,296 --> 00:32:23,226
This does not happen if

624
00:32:24,006 --> 00:32:25,196
So, any apps that are run

625
00:32:25,196 --> 00:32:27,676
from a signed disk image will

626
00:32:27,766 --> 00:32:30,866
to them.

627
00:32:31,386 --> 00:32:33,256
This mechanism also

628
00:32:33,606 --> 00:32:36,966
if you install software using a

629
00:32:37,536 --> 00:32:42,976
It also doesn't apply to any

630
00:32:49,486 --> 00:32:51,976
So, in summary if there

631
00:32:51,976 --> 00:32:55,436
from this talk; sign the things

632
00:32:55,526 --> 00:32:59,896
that things that are valid.

633
00:32:59,896 --> 00:33:01,946
So, more information about

634
00:32:59,896 --> 00:33:01,946
So, more information about

635
00:33:02,516 --> 00:33:05,500
[ Applause ]
