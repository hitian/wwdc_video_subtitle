1
00:00:07,516 --> 00:00:19,500
[ Music ]

2
00:00:22,516 --> 00:00:26,616
[ Applause ]

3
00:00:27,116 --> 00:00:28,796
&gt;&gt; Good afternoon.

4
00:00:28,796 --> 00:00:30,006
My name is Kris Markel.

5
00:00:30,036 --> 00:00:32,266
I'm a member of Apple's

6
00:00:32,316 --> 00:00:33,226
And today we're going to talk

7
00:00:33,226 --> 00:00:35,896
about using Time

8
00:00:36,806 --> 00:00:37,886
So here's our agenda.

9
00:00:37,886 --> 00:00:40,356
We're going to start with an

10
00:00:40,626 --> 00:00:41,946
What it is, and how

11
00:00:41,946 --> 00:00:43,236
And then we're going

12
00:00:43,236 --> 00:00:46,716
of making an application

13
00:00:46,716 --> 00:00:50,606
And then finally, ensuring we

14
00:00:51,076 --> 00:00:51,906
in our application.

15
00:00:52,536 --> 00:00:53,596
But before we do that,

16
00:00:53,596 --> 00:00:55,806
let's talk about why

17
00:00:56,096 --> 00:00:58,136
And the reason we're doing

18
00:00:58,136 --> 00:01:01,276
to provide a great

19
00:00:58,136 --> 00:01:01,276
to provide a great

20
00:01:01,616 --> 00:01:04,586
We want our users to love

21
00:01:05,006 --> 00:01:07,116
We want them to love

22
00:01:07,156 --> 00:01:08,436
because they're fast.

23
00:01:08,796 --> 00:01:09,796
Cheetah fast.

24
00:01:10,356 --> 00:01:12,596
So it saves them time and

25
00:01:13,256 --> 00:01:16,136
We want to make sure our users

26
00:01:16,826 --> 00:01:17,566
So that they're able

27
00:01:17,566 --> 00:01:19,246
to use their devices

28
00:01:19,626 --> 00:01:22,346
And you don't want to be that

29
00:01:22,346 --> 00:01:23,746
of the battery usage chart.

30
00:01:24,606 --> 00:01:27,716
And finally, we want to make

31
00:01:28,076 --> 00:01:30,796
and a really responsive

32
00:01:31,246 --> 00:01:33,036
so users love using it.

33
00:01:33,516 --> 00:01:34,846
And how are we going to do this?

34
00:01:35,286 --> 00:01:37,136
We're going to use a

35
00:01:37,716 --> 00:01:39,546
Profiling is answering

36
00:01:39,546 --> 00:01:40,556
about your application.

37
00:01:40,896 --> 00:01:42,226
How much work is it doing?

38
00:01:42,646 --> 00:01:44,316
And what kind of

39
00:01:44,896 --> 00:01:46,676
And, if you hadn't

40
00:01:47,046 --> 00:01:50,306
we're going to use a tool

41
00:01:50,676 --> 00:01:53,106
Time Profiler answers

42
00:01:53,426 --> 00:01:55,416
of when is my app

43
00:01:56,616 --> 00:01:59,586
Time Profiler is part of an

44
00:01:59,846 --> 00:02:02,536
that is a collection of

45
00:01:59,846 --> 00:02:02,536
that is a collection of

46
00:02:02,826 --> 00:02:05,746
that measure all kinds of

47
00:02:06,666 --> 00:02:07,756
And how do we get started?

48
00:02:08,015 --> 00:02:08,946
Well, it's really easy.

49
00:02:09,196 --> 00:02:10,686
From Xcode's Product menu,

50
00:02:11,146 --> 00:02:12,536
you just go ahead

51
00:02:13,436 --> 00:02:14,906
So let's go ahead

52
00:02:16,326 --> 00:02:19,096
Okay. So first I'm going

53
00:02:19,526 --> 00:02:20,796
Give you an idea

54
00:02:21,676 --> 00:02:25,136
My application uses the

55
00:02:25,136 --> 00:02:28,026
at the user's photo library

56
00:02:28,516 --> 00:02:30,046
So I'm going to go

57
00:02:30,116 --> 00:02:31,676
And it takes a little while

58
00:02:31,676 --> 00:02:34,336
when my test data has

59
00:02:34,396 --> 00:02:36,266
So it comes up with

60
00:02:36,566 --> 00:02:37,316
Okay, that's done.

61
00:02:37,316 --> 00:02:40,016
Now I'm going to go ahead

62
00:02:40,556 --> 00:02:43,776
And then let's find a good one.

63
00:02:43,776 --> 00:02:44,336
Here is one.

64
00:02:44,616 --> 00:02:47,226
And then it uses the core

65
00:02:47,226 --> 00:02:49,456
So I can add some

66
00:02:49,526 --> 00:02:52,866
And then it uses UI

67
00:02:53,406 --> 00:02:54,816
to make the googly eyes jump

68
00:02:54,816 --> 00:02:56,576
around when you shake

69
00:02:57,626 --> 00:03:00,126
Okay. So that's the application.

70
00:02:57,626 --> 00:03:00,126
Okay. So that's the application.

71
00:03:01,046 --> 00:03:03,286
Let's go ahead and profile

72
00:03:04,036 --> 00:03:07,836
So from Xcode's Product

73
00:03:07,836 --> 00:03:09,686
and just like I said,

74
00:03:10,596 --> 00:03:13,086
This is going to do a release

75
00:03:13,496 --> 00:03:17,296
and then launch Instruments

76
00:03:17,486 --> 00:03:20,356
It's important to do

77
00:03:20,356 --> 00:03:22,096
because you want all

78
00:03:22,096 --> 00:03:23,316
that you'll get from

79
00:03:23,986 --> 00:03:26,306
So this will take just a moment.

80
00:03:26,656 --> 00:03:28,976
And it's copying the

81
00:03:34,046 --> 00:03:34,456
Here we go.

82
00:03:35,496 --> 00:03:37,336
So now Instruments comes up.

83
00:03:37,546 --> 00:03:40,126
And it's going to show

84
00:03:40,826 --> 00:03:43,696
And this you get an idea

85
00:03:43,696 --> 00:03:45,476
of tools Instruments

86
00:03:45,916 --> 00:03:47,706
Today, of course, we

87
00:03:48,146 --> 00:03:51,876
So I'm going to go

88
00:03:52,096 --> 00:03:54,536
Now if you've never

89
00:03:54,646 --> 00:03:56,806
this user interface can

90
00:03:57,226 --> 00:03:59,116
But getting started

91
00:04:00,386 --> 00:04:02,636
All I have to do is go

92
00:04:02,636 --> 00:04:04,446
up in the corner, and click it.

93
00:04:04,966 --> 00:04:06,846
That's going to start

94
00:04:06,846 --> 00:04:07,936
and start measuring it.

95
00:04:08,266 --> 00:04:09,756
So let's go ahead

96
00:04:10,936 --> 00:04:15,656
Okay, so now my application

97
00:04:15,656 --> 00:04:16,466
It is starting.

98
00:04:16,656 --> 00:04:17,116
There we go.

99
00:04:17,946 --> 00:04:19,976
Right? I'm going to do

100
00:04:20,736 --> 00:04:22,346
Just one moment.

101
00:04:22,996 --> 00:04:27,236
Okay. And then I'm

102
00:04:27,236 --> 00:04:28,716
and do my duplicate checking.

103
00:04:29,876 --> 00:04:31,446
And let's see if we

104
00:04:32,216 --> 00:04:35,076
There we go.

105
00:04:35,326 --> 00:04:36,296
Okay, now that's done.

106
00:04:36,296 --> 00:04:38,586
Now I'm going to

107
00:04:39,096 --> 00:04:42,746
And then I'm going

108
00:04:43,486 --> 00:04:44,926
Add some googly eyes.

109
00:04:45,966 --> 00:04:47,006
Shake it around.

110
00:04:48,066 --> 00:04:49,916
Now let's go ahead and

111
00:04:50,726 --> 00:04:55,436
And then I'm going to go

112
00:04:55,946 --> 00:04:59,506
I'm clicking the Stop button.

113
00:04:59,506 --> 00:05:03,306
And now we can see here, I have

114
00:04:59,506 --> 00:05:03,306
And now we can see here, I have

115
00:05:03,446 --> 00:05:06,416
of what my app was doing.

116
00:05:06,856 --> 00:05:08,566
Time Profiler gives

117
00:05:08,626 --> 00:05:11,186
This top part of Instruments

118
00:05:11,756 --> 00:05:14,676
The first graph is my CPU usage.

119
00:05:14,846 --> 00:05:16,466
How much CPU my app is using.

120
00:05:17,046 --> 00:05:19,876
And I can actually hover over

121
00:05:20,526 --> 00:05:25,536
The second graph is what

122
00:05:25,536 --> 00:05:29,516
is in, and how long

123
00:05:29,716 --> 00:05:33,016
So that gives me

124
00:05:33,216 --> 00:05:35,736
of how much work my

125
00:05:36,076 --> 00:05:37,136
and when it's doing it.

126
00:05:37,786 --> 00:05:40,346
But how do I know what

127
00:05:40,886 --> 00:05:42,146
And to figure that out,

128
00:05:42,236 --> 00:05:44,086
we go down to Instrument's

129
00:05:44,316 --> 00:05:45,996
Which is this part here

130
00:05:46,456 --> 00:05:50,176
And the Call Tree View

131
00:05:50,176 --> 00:05:52,556
stack samples aggregated

132
00:05:53,116 --> 00:05:55,886
and shown in the Detail view.

133
00:05:56,576 --> 00:05:58,626
Now what exactly does this mean?

134
00:05:59,126 --> 00:06:00,506
Well, this is a lot

135
00:05:59,126 --> 00:06:00,506
Well, this is a lot

136
00:06:00,506 --> 00:06:02,606
in pictures, rather than words.

137
00:06:02,666 --> 00:06:05,356
So let's go ahead and

138
00:06:06,566 --> 00:06:08,986
So here we have time,

139
00:06:09,336 --> 00:06:11,266
And here is our very

140
00:06:11,856 --> 00:06:14,296
We have a main method

141
00:06:14,706 --> 00:06:15,956
That's calling into method2.

142
00:06:16,656 --> 00:06:18,896
At this point in time,

143
00:06:18,896 --> 00:06:20,926
to get a call stack

144
00:06:21,426 --> 00:06:22,446
and it looks like this.

145
00:06:23,096 --> 00:06:25,456
This is just like the call

146
00:06:25,456 --> 00:06:26,696
in the debugger in Xcode.

147
00:06:27,256 --> 00:06:30,926
But Instruments or Time Profiler

148
00:06:30,926 --> 00:06:32,986
And it does that so it can

149
00:06:33,116 --> 00:06:33,996
which we'll see in a moment.

150
00:06:34,976 --> 00:06:36,326
So time continues on.

151
00:06:36,466 --> 00:06:38,476
Oh, and then it records

152
00:06:38,576 --> 00:06:41,516
And it records the number of

153
00:06:41,516 --> 00:06:43,446
or function within

154
00:06:44,746 --> 00:06:47,376
So time continues, and

155
00:06:47,456 --> 00:06:50,546
method1 calls method3 which

156
00:06:51,206 --> 00:06:53,496
Then we go ahead, one

157
00:06:54,006 --> 00:06:55,866
And Time Profiler's going

158
00:06:56,126 --> 00:06:58,836
And in this case, it looks

159
00:06:58,886 --> 00:07:00,336
So we'll go ahead

160
00:06:58,886 --> 00:07:00,336
So we'll go ahead

161
00:07:00,876 --> 00:07:03,066
And we just increment

162
00:07:04,136 --> 00:07:06,346
And time's going to

163
00:07:06,346 --> 00:07:08,736
And now we see our application

164
00:07:09,436 --> 00:07:10,916
We have main calling directly

165
00:07:10,916 --> 00:07:12,736
into method2; calling

166
00:07:13,426 --> 00:07:15,706
Time Profiler's going to take

167
00:07:16,136 --> 00:07:18,026
And now we can see our

168
00:07:18,686 --> 00:07:20,856
It only has two methods

169
00:07:21,306 --> 00:07:24,456
And then so when we update our

170
00:07:24,876 --> 00:07:28,466
So now we know that

171
00:07:28,466 --> 00:07:30,096
and sometimes it calls method2.

172
00:07:30,406 --> 00:07:32,526
And we know exactly how

173
00:07:32,526 --> 00:07:33,286
of those things.

174
00:07:34,706 --> 00:07:38,046
So time continues on, and we

175
00:07:38,046 --> 00:07:40,136
These happen to be identical

176
00:07:40,616 --> 00:07:42,746
And so we're going to update

177
00:07:43,426 --> 00:07:46,476
So now let's take a look at

178
00:07:46,476 --> 00:07:48,496
telling us.

179
00:07:48,716 --> 00:07:51,816
One thing to note is that

180
00:07:51,816 --> 00:07:53,016
measuring duration.

181
00:07:53,326 --> 00:07:55,326
It's not recording

182
00:07:55,596 --> 00:07:58,316
and then when it exits and

183
00:07:58,626 --> 00:08:02,046
It's aggregating the samples

184
00:07:58,626 --> 00:08:02,046
It's aggregating the samples

185
00:08:02,446 --> 00:08:04,866
So when you see time

186
00:08:05,196 --> 00:08:07,196
it's not an actual

187
00:08:07,536 --> 00:08:10,156
That's the number of

188
00:08:10,156 --> 00:08:12,166
by the time between samples.

189
00:08:12,246 --> 00:08:14,166
Which is 1 millisecond,

190
00:08:14,316 --> 00:08:17,206
This does have some

191
00:08:17,556 --> 00:08:20,156
And one of them is that Time

192
00:08:20,206 --> 00:08:24,046
between long running methods,

193
00:08:24,046 --> 00:08:25,216
that are called repetitively.

194
00:08:25,726 --> 00:08:29,866
And we can actually see that in

195
00:08:29,866 --> 00:08:32,176
and method2 show up in the

196
00:08:32,176 --> 00:08:33,895
From Time Profiler's

197
00:08:34,226 --> 00:08:37,616
they incurred the

198
00:08:38,196 --> 00:08:40,775
But we know that method1

199
00:08:40,775 --> 00:08:44,285
and ran for longer, method2

200
00:08:44,285 --> 00:08:45,136
and was much shorter.

201
00:08:46,306 --> 00:08:49,696
Time Profiler's also really

202
00:08:49,696 --> 00:08:51,206
It's answering the question;

203
00:08:51,676 --> 00:08:53,576
what work is my application

204
00:08:53,856 --> 00:08:56,216
And another result of this

205
00:08:56,216 --> 00:08:57,476
capture everything.

206
00:08:57,886 --> 00:09:00,236
In fact, what's missing

207
00:08:57,886 --> 00:09:00,236
In fact, what's missing

208
00:09:01,696 --> 00:09:03,676
There's no method3, right?

209
00:09:03,986 --> 00:09:05,886
If you have really

210
00:09:05,886 --> 00:09:08,426
or really fast methods that

211
00:09:08,856 --> 00:09:10,376
they won't appear

212
00:09:10,376 --> 00:09:11,856
And this is actually okay.

213
00:09:11,856 --> 00:09:12,676
This is what we want.

214
00:09:12,756 --> 00:09:15,696
Because they're not having an

215
00:09:15,776 --> 00:09:16,856
to be doing over time.

216
00:09:18,196 --> 00:09:20,326
So now that we have a better

217
00:09:20,436 --> 00:09:23,446
let's see how we can use it to

218
00:09:32,116 --> 00:09:37,526
Okay. So looking back at my

219
00:09:37,856 --> 00:09:40,726
at this big, first

220
00:09:40,726 --> 00:09:43,246
I can see that I'm

221
00:09:43,246 --> 00:09:46,706
for a significant

222
00:09:46,836 --> 00:09:49,326
So I want to see exactly

223
00:09:49,626 --> 00:09:52,166
I happen to know, that's when I

224
00:09:52,466 --> 00:09:54,536
I know I expect that

225
00:09:54,536 --> 00:09:55,956
of work, so I'm not surprised.

226
00:09:55,956 --> 00:09:57,966
But wherever you're

227
00:09:57,966 --> 00:10:00,576
there's usually an

228
00:09:57,966 --> 00:10:00,576
there's usually an

229
00:10:01,726 --> 00:10:04,016
So in order to get a better

230
00:10:04,016 --> 00:10:06,396
I'm going to use the

231
00:10:07,056 --> 00:10:10,516
to pinch to zoom in; un-pinch.

232
00:10:10,926 --> 00:10:14,686
So I can get a much better

233
00:10:14,686 --> 00:10:15,906
on in this time period.

234
00:10:16,546 --> 00:10:19,426
And then I'm going to go

235
00:10:19,426 --> 00:10:21,016
across the Timeline view.

236
00:10:21,916 --> 00:10:23,586
And this is going

237
00:10:24,096 --> 00:10:28,196
So now my call tree is only

238
00:10:28,196 --> 00:10:30,136
that were collected

239
00:10:30,316 --> 00:10:32,186
If you notice, now you can see

240
00:10:32,186 --> 00:10:34,676
that the call tree is actually

241
00:10:34,926 --> 00:10:37,486
It's only really focused

242
00:10:38,256 --> 00:10:40,856
So now let's take a look at

243
00:10:41,386 --> 00:10:43,726
You'll see a few columns here.

244
00:10:43,726 --> 00:10:46,596
There's Weight and Self

245
00:10:47,406 --> 00:10:50,796
The weight represents

246
00:10:51,136 --> 00:10:53,866
that that particular portion

247
00:10:54,236 --> 00:10:56,356
And you'll see next to the

248
00:10:56,456 --> 00:10:58,796
And like I said before,

249
00:10:59,136 --> 00:11:00,906
That's the number of

250
00:10:59,136 --> 00:11:00,906
That's the number of

251
00:11:00,906 --> 00:11:03,506
by the time between each sample.

252
00:11:04,186 --> 00:11:05,866
And then there's

253
00:11:06,356 --> 00:11:09,476
which is actually the amount

254
00:11:09,476 --> 00:11:10,976
within that method itself,

255
00:11:10,976 --> 00:11:12,896
and not some other

256
00:11:13,276 --> 00:11:15,546
And you can see actually

257
00:11:15,546 --> 00:11:18,666
If I go ahead and just

258
00:11:18,776 --> 00:11:19,786
It's still 0.

259
00:11:20,186 --> 00:11:21,926
What this is telling

260
00:11:22,286 --> 00:11:24,716
99% of my samples were in main.

261
00:11:24,716 --> 00:11:27,466
But actually, all of

262
00:11:27,466 --> 00:11:29,276
within UIApplication main.

263
00:11:29,656 --> 00:11:30,756
And all of those were

264
00:11:30,756 --> 00:11:33,236
within whatever UIApplication

265
00:11:33,496 --> 00:11:35,396
And instead of disclosing

266
00:11:35,396 --> 00:11:37,956
I'm going to use a new

267
00:11:38,686 --> 00:11:40,036
Where I hold down

268
00:11:40,036 --> 00:11:41,486
and click the Disclosure

269
00:11:42,036 --> 00:11:44,106
And this gives me

270
00:11:44,226 --> 00:11:45,996
So it's going to just

271
00:11:46,276 --> 00:11:48,126
until there's actually

272
00:11:49,346 --> 00:11:51,716
And if we go ahead

273
00:11:51,716 --> 00:11:54,006
we can see now we

274
00:11:54,336 --> 00:11:55,766
that have some self

275
00:11:56,286 --> 00:11:58,736
In fact, if I look at this

276
00:11:58,736 --> 00:12:02,276
I can see, you know, its

277
00:11:58,736 --> 00:12:02,276
I can see, you know, its

278
00:12:02,276 --> 00:12:03,756
and its self weight is the same.

279
00:12:04,076 --> 00:12:05,846
So it's spent all

280
00:12:05,886 --> 00:12:09,156
Didn't call any subsequent

281
00:12:09,926 --> 00:12:11,416
And actually, you know,

282
00:12:11,416 --> 00:12:14,596
I see a lot of these

283
00:12:14,926 --> 00:12:18,356
And they're actually all have

284
00:12:18,756 --> 00:12:22,426
These runtime methods are

285
00:12:22,426 --> 00:12:23,836
and run really quickly.

286
00:12:24,276 --> 00:12:25,666
And they're usually

287
00:12:25,666 --> 00:12:27,376
that Time Profiler

288
00:12:27,706 --> 00:12:29,016
because they run so quickly.

289
00:12:29,436 --> 00:12:31,276
But since they're showing up,

290
00:12:31,276 --> 00:12:34,606
I know that generally

291
00:12:35,056 --> 00:12:36,536
So they're showing

292
00:12:36,886 --> 00:12:39,516
This is usually the case if

293
00:12:39,516 --> 00:12:42,726
of Objective-C objects, you'll

294
00:12:43,036 --> 00:12:45,806
So the other thing the

295
00:12:45,806 --> 00:12:46,766
over here on the right.

296
00:12:47,146 --> 00:12:50,436
We can see which

297
00:12:50,816 --> 00:12:52,276
of the call tree came from.

298
00:12:52,276 --> 00:12:53,346
That particular method call.

299
00:12:53,346 --> 00:12:54,476
And here we can see

300
00:12:54,476 --> 00:12:55,566
with the photo's framework.

301
00:12:56,106 --> 00:12:57,456
And we actually work our way up.

302
00:12:58,086 --> 00:12:59,146
Scroll to the right here.

303
00:12:59,736 --> 00:13:02,406
We can see, here's

304
00:12:59,736 --> 00:13:02,406
We can see, here's

305
00:13:02,406 --> 00:13:07,386
from my app that's causing

306
00:13:08,076 --> 00:13:11,486
You know, this particular

307
00:13:11,706 --> 00:13:13,276
It's not doing any

308
00:13:13,586 --> 00:13:15,686
But it's the thing that's

309
00:13:16,196 --> 00:13:17,266
You know, I'm not

310
00:13:17,266 --> 00:13:20,326
to make Objective-C release

311
00:13:20,326 --> 00:13:23,936
if there's something here I

312
00:13:24,016 --> 00:13:25,936
So I'm going to double

313
00:13:25,936 --> 00:13:27,816
And it's going to

314
00:13:28,756 --> 00:13:31,856
And Instruments annotates

315
00:13:31,856 --> 00:13:33,136
of samples that appeared in.

316
00:13:33,316 --> 00:13:35,936
So looking at this

317
00:13:35,936 --> 00:13:38,146
of my time is spent on

318
00:13:38,606 --> 00:13:40,236
But if I take a closer look,

319
00:13:40,236 --> 00:13:41,546
I actually see something

320
00:13:42,056 --> 00:13:43,816
I have nested four loops.

321
00:13:44,206 --> 00:13:49,086
And in fact, each of

322
00:13:49,086 --> 00:13:50,906
over my entire photos

323
00:13:50,906 --> 00:13:54,166
And this is pretty much a

324
00:13:54,166 --> 00:13:55,496
as N squared behavior.

325
00:13:56,006 --> 00:13:59,856
As I throw more data at this

326
00:13:59,856 --> 00:14:01,066
and slower, and slower.

327
00:13:59,856 --> 00:14:01,066
and slower, and slower.

328
00:14:01,066 --> 00:14:02,956
And since I know

329
00:14:02,956 --> 00:14:05,696
over a lot of data, this is bad.

330
00:14:06,426 --> 00:14:08,206
So I want to go ahead

331
00:14:08,646 --> 00:14:09,896
So I'm going to go into Xcode.

332
00:14:10,546 --> 00:14:11,576
And here's my code here.

333
00:14:12,616 --> 00:14:16,296
A typical way of avoiding

334
00:14:16,296 --> 00:14:17,896
set-based implementation.

335
00:14:18,356 --> 00:14:21,196
I'm not going to go into

336
00:14:22,376 --> 00:14:26,076
and created a new algorithm

337
00:14:26,076 --> 00:14:28,696
for doing my duplicate

338
00:14:33,196 --> 00:14:41,056
That uses a counted set and

339
00:14:41,056 --> 00:14:43,946
Now let's go ahead and verify

340
00:14:43,946 --> 00:14:45,316
that I actually made

341
00:14:45,466 --> 00:14:47,356
So again I'm going to

342
00:14:47,356 --> 00:14:49,256
And I'm going to choose Profile.

343
00:14:50,206 --> 00:14:52,016
It's going to rebuild

344
00:14:52,596 --> 00:14:55,836
and install it to the device.

345
00:14:55,836 --> 00:14:57,746
And then since Instruments

346
00:14:57,906 --> 00:15:00,136
it's going to go ahead and

347
00:14:57,906 --> 00:15:00,136
it's going to go ahead and

348
00:15:01,326 --> 00:15:03,806
So as it's copying it

349
00:15:03,806 --> 00:15:04,916
starting the profiling.

350
00:15:07,696 --> 00:15:09,016
Here's Instruments.

351
00:15:09,536 --> 00:15:12,096
And my application has started.

352
00:15:12,756 --> 00:15:16,096
Okay, and it's starting

353
00:15:16,096 --> 00:15:16,976
I'm going to zoom out.

354
00:15:18,986 --> 00:15:21,336
Okay, I'll zoom out so

355
00:15:21,896 --> 00:15:25,166
And I'm going to go ahead

356
00:15:26,776 --> 00:15:28,416
Duplicates.

357
00:15:28,656 --> 00:15:29,526
All Photos.

358
00:15:30,006 --> 00:15:32,236
And I can see the data come in.

359
00:15:32,636 --> 00:15:33,826
Oh, I'm actually at minutes.

360
00:15:33,826 --> 00:15:35,706
I thought this was seconds.

361
00:15:35,706 --> 00:15:39,516
Okay. So my duplicate checking

362
00:15:39,516 --> 00:15:42,946
In fact, we no longer

363
00:15:43,066 --> 00:15:44,596
across the timeline anymore.

364
00:15:44,596 --> 00:15:45,706
So that's a good change.

365
00:15:45,896 --> 00:15:49,166
I want to go ahead and

366
00:15:49,166 --> 00:15:50,556
I'm going to select some photos.

367
00:15:51,236 --> 00:15:52,436
I'm going to add some eyes.

368
00:15:52,436 --> 00:15:54,386
I'm going to shake it.

369
00:15:55,046 --> 00:15:56,916
And then I'm going to

370
00:15:56,916 --> 00:15:59,396
So now my application is static.

371
00:15:59,396 --> 00:16:00,596
It shouldn't be doing any work.

372
00:15:59,396 --> 00:16:00,596
It shouldn't be doing any work.

373
00:16:01,356 --> 00:16:03,276
But let's go ahead

374
00:16:03,276 --> 00:16:05,116
at what the Time

375
00:16:05,206 --> 00:16:06,316
Let's stop the recording.

376
00:16:06,896 --> 00:16:11,266
It's taking a minute to

377
00:16:11,366 --> 00:16:16,966
Whoa. Okay, so I can see

378
00:16:16,966 --> 00:16:21,416
at the end of the call,

379
00:16:21,976 --> 00:16:24,676
It's not much, but I'm

380
00:16:24,726 --> 00:16:26,736
So I want go ahead and

381
00:16:27,446 --> 00:16:30,596
I'm going to zoom in

382
00:16:31,166 --> 00:16:34,006
And then I'm going

383
00:16:34,966 --> 00:16:36,146
to see what's going on here.

384
00:16:36,966 --> 00:16:41,586
And then I'm going to go ahead

385
00:16:41,916 --> 00:16:42,996
to see what's going on.

386
00:16:43,476 --> 00:16:44,996
And now if you look

387
00:16:45,886 --> 00:16:47,256
this time I can see

388
00:16:47,256 --> 00:16:48,916
of calls in CoreMotion, right?

389
00:16:48,916 --> 00:16:51,526
And I know what my app is doing

390
00:16:51,586 --> 00:16:54,376
to detect and make

391
00:16:54,996 --> 00:16:58,466
But moving back up the call

392
00:16:58,466 --> 00:17:01,436
of my code in this call tree.

393
00:16:58,466 --> 00:17:01,436
of my code in this call tree.

394
00:17:02,056 --> 00:17:04,826
So there's nothing I'm doing

395
00:17:05,146 --> 00:17:07,486
But something in my app is

396
00:17:07,486 --> 00:17:08,236
when it shouldn't be.

397
00:17:08,786 --> 00:17:10,695
And what I know about

398
00:17:10,695 --> 00:17:14,116
that I'm not turning off

399
00:17:14,165 --> 00:17:15,986
when there are no

400
00:17:16,306 --> 00:17:18,256
So let's go ahead

401
00:17:19,396 --> 00:17:20,556
We go back to Xcode.

402
00:17:22,006 --> 00:17:26,836
And then I actually have

403
00:17:27,056 --> 00:17:28,465
It's just a matter

404
00:17:28,465 --> 00:17:32,466
So let me go ahead

405
00:17:32,466 --> 00:17:39,476
And then we stop observing here.

406
00:17:39,696 --> 00:17:41,236
Okay. Now let's measure this

407
00:17:41,276 --> 00:17:44,476
and make sure it changed

408
00:17:45,406 --> 00:17:46,636
And again, Instruments is going

409
00:17:46,636 --> 00:17:50,096
to rebuild the application;

410
00:17:51,036 --> 00:17:53,656
And also, since Instruments

411
00:17:53,656 --> 00:17:54,886
it'll start recording again.

412
00:17:55,486 --> 00:17:58,136
This time I'm going to

413
00:17:58,136 --> 00:18:02,826
And I also click outside of the

414
00:17:58,136 --> 00:18:02,826
And I also click outside of the

415
00:18:04,326 --> 00:18:07,126
Okay. And once the

416
00:18:07,886 --> 00:18:10,056
Instruments will start

417
00:18:18,126 --> 00:18:19,636
Okay, there we go.

418
00:18:24,256 --> 00:18:26,116
Okay, so this time

419
00:18:26,116 --> 00:18:29,106
and just go ahead

420
00:18:29,606 --> 00:18:34,886
And then I'm going

421
00:18:35,956 --> 00:18:36,476
Select it.

422
00:18:37,166 --> 00:18:38,096
Add the eyes.

423
00:18:38,736 --> 00:18:42,456
Do the shaking let's actually

424
00:18:43,056 --> 00:18:48,166
I'm going to choose a new photo

425
00:18:49,236 --> 00:18:51,236
And then let's go ahead

426
00:18:51,646 --> 00:18:53,396
and see if it changes

427
00:18:54,086 --> 00:18:58,556
And now if I zoom in on the end

428
00:18:58,556 --> 00:18:59,376
processing the data.

429
00:18:59,376 --> 00:19:03,176
I can see that my CPU usage

430
00:18:59,376 --> 00:19:03,176
I can see that my CPU usage

431
00:19:03,676 --> 00:19:08,236
So I'm no longer doing that

432
00:19:08,406 --> 00:19:10,856
So let's take a look and

433
00:19:11,396 --> 00:19:14,536
So the first thing we did, is

434
00:19:14,536 --> 00:19:18,016
out how much work our app was

435
00:19:18,016 --> 00:19:21,376
And it was a good way to find

436
00:19:21,786 --> 00:19:24,996
And the trackpad or the timeline

437
00:19:24,996 --> 00:19:27,076
But it also works

438
00:19:27,186 --> 00:19:31,506
You can option-drag, and

439
00:19:31,776 --> 00:19:34,466
So we found an area

440
00:19:34,466 --> 00:19:35,786
that was using a lot of CPU.

441
00:19:35,786 --> 00:19:37,186
And we wanted to

442
00:19:37,426 --> 00:19:42,136
So we went ahead, we zoomed in,

443
00:19:43,326 --> 00:19:45,416
We examined the call

444
00:19:45,416 --> 00:19:48,266
out where the work was happening

445
00:19:49,316 --> 00:19:51,706
And then we walked

446
00:19:51,706 --> 00:19:53,566
until we actually

447
00:19:53,926 --> 00:19:57,086
What part of our app is

448
00:19:57,386 --> 00:19:59,446
even though it's not

449
00:20:00,166 --> 00:20:02,226
We took a look at our code.

450
00:20:02,556 --> 00:20:03,516
We thought about it.

451
00:20:03,676 --> 00:20:04,526
Scratched our heads.

452
00:20:04,526 --> 00:20:06,176
We ate a sandwich,

453
00:20:06,176 --> 00:20:07,216
out a way to make it faster.

454
00:20:08,006 --> 00:20:12,396
So we went ahead and implemented

455
00:20:12,456 --> 00:20:13,986
that they actually

456
00:20:13,986 --> 00:20:16,136
It was a significant

457
00:20:16,136 --> 00:20:19,256
And as a result, we saved

458
00:20:19,426 --> 00:20:21,496
Now when they're using my

459
00:20:21,496 --> 00:20:23,516
they won't be looking

460
00:20:23,876 --> 00:20:25,626
It'll finish much more quickly.

461
00:20:26,186 --> 00:20:29,256
Now in terms of doing

462
00:20:29,776 --> 00:20:32,576
Again, we focused on an

463
00:20:32,576 --> 00:20:36,006
where this time it

464
00:20:36,006 --> 00:20:38,636
but it was using an

465
00:20:39,216 --> 00:20:40,226
We zoomed in.

466
00:20:40,226 --> 00:20:41,316
We applied a filter.

467
00:20:41,976 --> 00:20:44,706
We took a look at the call

468
00:20:44,706 --> 00:20:47,776
at the frameworks involved

469
00:20:47,776 --> 00:20:49,916
but none of our code

470
00:20:50,626 --> 00:20:51,636
So this time we had to think

471
00:20:51,636 --> 00:20:52,986
about our app in

472
00:20:53,146 --> 00:20:56,136
What portion of our app is

473
00:20:56,906 --> 00:21:00,386
We went ahead and again,

474
00:20:56,906 --> 00:21:00,386
We went ahead and again,

475
00:21:00,536 --> 00:21:01,676
Ate another sandwich.

476
00:21:01,906 --> 00:21:04,626
And figured out how to make

477
00:21:05,196 --> 00:21:06,716
so it's no longer happening.

478
00:21:07,396 --> 00:21:09,306
We went ahead and

479
00:21:09,566 --> 00:21:12,896
Verified that our changes did

480
00:21:13,326 --> 00:21:15,516
And actually, as

481
00:21:15,576 --> 00:21:20,526
we significantly improved the

482
00:21:20,526 --> 00:21:21,086
is running.

483
00:21:21,256 --> 00:21:24,296
Any time the CPU can go

484
00:21:24,646 --> 00:21:26,536
that represents significant

485
00:21:26,806 --> 00:21:28,946
So even though our

486
00:21:28,946 --> 00:21:31,076
it still has a battery cost.

487
00:21:31,076 --> 00:21:35,916
So now that we've gone

488
00:21:36,346 --> 00:21:38,746
let's talk about making

489
00:21:40,696 --> 00:21:44,566
So the way your application

490
00:21:44,566 --> 00:21:46,436
that does all the

491
00:21:46,476 --> 00:21:49,496
It's responsible for

492
00:21:49,496 --> 00:21:51,166
and then updating your views.

493
00:21:51,616 --> 00:21:53,876
And the way it handles

494
00:21:54,366 --> 00:21:56,266
is that it's got a main thread.

495
00:21:56,266 --> 00:21:59,626
And the main thread has a run

496
00:21:59,626 --> 00:22:02,536
queue called an Event

497
00:21:59,626 --> 00:22:02,536
queue called an Event

498
00:22:02,536 --> 00:22:04,576
for events to appear on it.

499
00:22:04,826 --> 00:22:08,986
When an event appears, it

500
00:22:08,986 --> 00:22:10,776
or NS application instance.

501
00:22:11,176 --> 00:22:12,786
Which then passes the event

502
00:22:12,786 --> 00:22:15,176
down through the responder

503
00:22:15,706 --> 00:22:18,746
And if you application wants

504
00:22:19,116 --> 00:22:21,206
then it goes ahead

505
00:22:21,766 --> 00:22:25,026
And you can actually see

506
00:22:25,426 --> 00:22:27,296
Here's the call stack

507
00:22:27,776 --> 00:22:30,036
And we can see there,

508
00:22:30,886 --> 00:22:33,506
It calls the main function

509
00:22:33,646 --> 00:22:35,386
where all our applications

510
00:22:35,936 --> 00:22:38,826
Now in here, I don't know

511
00:22:38,826 --> 00:22:41,156
but they're clearly

512
00:22:41,966 --> 00:22:44,766
And I can see here, here's

513
00:22:44,766 --> 00:22:47,146
So it's clearly got an

514
00:22:47,146 --> 00:22:47,886
and it's handling it.

515
00:22:48,476 --> 00:22:52,466
I can see it gets passed into my

516
00:22:52,466 --> 00:22:55,076
through the responder chain

517
00:22:55,076 --> 00:22:58,526
And in this case, this is

518
00:22:59,476 --> 00:23:01,216
And then my code does its work.

519
00:22:59,476 --> 00:23:01,216
And then my code does its work.

520
00:23:02,306 --> 00:23:05,176
So what does this mean in terms

521
00:23:05,786 --> 00:23:10,216
Well, when busy, the main

522
00:23:10,696 --> 00:23:13,636
So it starts to back up

523
00:23:14,146 --> 00:23:17,666
And then as a result, you

524
00:23:18,016 --> 00:23:21,296
And in the worst case, your app

525
00:23:21,636 --> 00:23:24,576
The user closes it, and maybe

526
00:23:25,596 --> 00:23:29,106
So it's really important to

527
00:23:29,626 --> 00:23:32,856
so it's able to respond

528
00:23:33,176 --> 00:23:35,726
in a very quick manner.

529
00:23:37,036 --> 00:23:39,536
So now with that in our

530
00:23:39,536 --> 00:23:41,906
with our app in order to

531
00:23:41,906 --> 00:23:45,836
All right, I'm going to

532
00:23:45,836 --> 00:23:46,946
on the track view this time.

533
00:23:47,476 --> 00:23:48,876
And now the area I want to focus

534
00:23:48,876 --> 00:23:50,906
on is this big CPU

535
00:23:51,256 --> 00:23:53,946
And here I'm seeing

536
00:23:54,236 --> 00:23:55,656
So there's probably

537
00:23:55,656 --> 00:23:56,886
for optimization here.

538
00:23:57,396 --> 00:23:58,906
And I happen to know,

539
00:23:58,906 --> 00:24:00,906
when I'm adding my

540
00:23:58,906 --> 00:24:00,906
when I'm adding my

541
00:24:01,506 --> 00:24:04,596
So again, I'm going to just

542
00:24:05,426 --> 00:24:08,326
I'm going to go ahead and click

543
00:24:09,536 --> 00:24:12,546
Now if we look at the call

544
00:24:12,606 --> 00:24:15,986
to specifically focus on what

545
00:24:16,446 --> 00:24:20,056
I can see here that actually,

546
00:24:20,056 --> 00:24:22,666
about 63%, 64% of my samples.

547
00:24:23,516 --> 00:24:25,526
And so I know that

548
00:24:25,526 --> 00:24:27,756
it's clearly doing some work.

549
00:24:28,236 --> 00:24:30,756
But I want to know exactly

550
00:24:31,576 --> 00:24:34,426
And to do that, I'm going

551
00:24:34,426 --> 00:24:35,716
in the upper right-hand corner,

552
00:24:36,026 --> 00:24:37,866
we have what we call

553
00:24:37,866 --> 00:24:38,776
and Instruments.

554
00:24:38,876 --> 00:24:42,306
So you can view your data,

555
00:24:42,736 --> 00:24:44,496
This time I want to look

556
00:24:44,496 --> 00:24:47,186
And I can actually see, if I

557
00:24:48,166 --> 00:24:50,056
that over here on the left,

558
00:24:50,366 --> 00:24:52,116
you can see all the

559
00:24:52,646 --> 00:24:54,106
And the main thread

560
00:24:54,666 --> 00:24:56,686
And so I can actually

561
00:24:56,736 --> 00:24:58,396
on just the main thread.

562
00:24:58,936 --> 00:25:01,916
And here, clearly, it's

563
00:24:58,936 --> 00:25:01,916
And here, clearly, it's

564
00:25:02,286 --> 00:25:03,886
And when it's in that state,

565
00:25:03,886 --> 00:25:06,046
it absolutely can't

566
00:25:06,046 --> 00:25:08,156
There's no way it's going

567
00:25:08,156 --> 00:25:11,046
on the queue if it's busy

568
00:25:12,046 --> 00:25:14,386
So what work is it doing

569
00:25:14,966 --> 00:25:16,606
This time, I'm going

570
00:25:16,606 --> 00:25:19,266
on our extended detail view

571
00:25:19,756 --> 00:25:22,636
And this is going to show me my

572
00:25:22,636 --> 00:25:24,266
work on my main thread.

573
00:25:24,476 --> 00:25:27,376
Because my main thread is what's

574
00:25:27,376 --> 00:25:28,596
So I scroll through here,

575
00:25:28,596 --> 00:25:31,046
I can see again here's

576
00:25:31,046 --> 00:25:32,736
And then here we

577
00:25:33,146 --> 00:25:35,356
And this is the code where

578
00:25:35,836 --> 00:25:38,356
And then doing some

579
00:25:38,356 --> 00:25:40,016
And then here it's

580
00:25:40,016 --> 00:25:42,356
So that's the face detection

581
00:25:42,356 --> 00:25:44,916
And then we can actually see the

582
00:25:44,916 --> 00:25:45,726
into Core Image.

583
00:25:45,786 --> 00:25:48,326
If I go ahead and click on

584
00:25:48,326 --> 00:25:53,216
it'll expand the call

585
00:25:53,266 --> 00:25:55,546
Now again, reasoning

586
00:25:55,546 --> 00:25:56,696
There's no reason for me

587
00:25:56,696 --> 00:26:00,306
to do face detection

588
00:25:56,696 --> 00:26:00,306
to do face detection

589
00:26:00,456 --> 00:26:02,986
It's not a responding

590
00:26:02,986 --> 00:26:04,746
And it's not an updating

591
00:26:05,146 --> 00:26:07,166
So this can easily be moved

592
00:26:07,706 --> 00:26:11,686
So here's my code that

593
00:26:11,686 --> 00:26:14,826
And I can see once the face

594
00:26:14,826 --> 00:26:16,516
and calls the displayEyes

595
00:26:16,516 --> 00:26:18,336
Now an important

596
00:26:18,336 --> 00:26:20,956
that displayEyes is

597
00:26:20,956 --> 00:26:24,026
So that's work that has to

598
00:26:24,806 --> 00:26:27,776
So what I need to do

599
00:26:27,776 --> 00:26:28,656
on a background thread.

600
00:26:29,036 --> 00:26:30,686
Switch back to the main thread.

601
00:26:32,236 --> 00:26:33,456
In order to update my UI.

602
00:26:35,106 --> 00:26:36,476
Oh, there we go.

603
00:26:36,746 --> 00:26:38,836
Okay [applause] thank

604
00:26:41,176 --> 00:26:43,616
That's not supposed to be

605
00:26:43,956 --> 00:26:44,916
but I'll take it.

606
00:26:45,566 --> 00:26:46,586
So here we go.

607
00:26:46,586 --> 00:26:48,456
Here's my code that does

608
00:26:48,456 --> 00:26:51,176
I'm going to very

609
00:26:51,596 --> 00:26:54,226
So we go ahead and we get

610
00:26:54,226 --> 00:26:57,126
And we dispatch our

611
00:26:57,506 --> 00:26:59,496
Then just like I said,

612
00:26:59,496 --> 00:27:01,736
to the main queue,

613
00:26:59,496 --> 00:27:01,736
to the main queue,

614
00:27:02,626 --> 00:27:05,916
This time to do my

615
00:27:05,916 --> 00:27:08,386
on the Run menu,

616
00:27:09,126 --> 00:27:10,226
This will do the same thing.

617
00:27:10,766 --> 00:27:13,146
Hopefully rather quickly.

618
00:27:13,246 --> 00:27:15,096
Oh, I deleted my code.

619
00:27:16,126 --> 00:27:17,316
Let's do that again.

620
00:27:17,616 --> 00:27:19,916
So now since I've already done

621
00:27:20,806 --> 00:27:23,686
is it going to be happy --

622
00:27:24,006 --> 00:27:24,516
There we go.

623
00:27:25,046 --> 00:27:26,956
It's going to build

624
00:27:28,096 --> 00:27:29,536
Install it to the device.

625
00:27:30,406 --> 00:27:33,226
Okay. Now Instruments

626
00:27:33,706 --> 00:27:38,986
and start recording

627
00:27:39,606 --> 00:27:43,066
Oh, so I'm going to go

628
00:27:43,066 --> 00:27:44,036
to the Instruments view.

629
00:27:48,186 --> 00:27:53,776
And then let's zoom out so we

630
00:27:53,986 --> 00:27:58,666
Okay. Very quickly, let's

631
00:28:00,656 --> 00:28:03,846
And then let's do

632
00:28:04,586 --> 00:28:05,286
So there we go.

633
00:28:05,286 --> 00:28:07,196
So there I can see

634
00:28:08,066 --> 00:28:09,606
Let's go ahead and

635
00:28:10,666 --> 00:28:13,036
And now let's see if this

636
00:28:13,366 --> 00:28:17,646
So again, I'm going to

637
00:28:17,646 --> 00:28:19,046
of the graph using a trackpad.

638
00:28:19,966 --> 00:28:21,546
I'm going to click and drag

639
00:28:22,056 --> 00:28:24,416
across the Timeline

640
00:28:25,286 --> 00:28:27,386
Now, if we go ahead and look

641
00:28:27,806 --> 00:28:30,996
actually what I see here

642
00:28:30,996 --> 00:28:32,746
in 4.8% of my samples.

643
00:28:32,796 --> 00:28:33,926
So that's a really good sign.

644
00:28:33,926 --> 00:28:35,976
I already know my main

645
00:28:36,116 --> 00:28:38,426
And those two worker threads

646
00:28:38,956 --> 00:28:41,676
So let's go ahead and switch

647
00:28:42,296 --> 00:28:45,396
And now I can see here, my main

648
00:28:45,396 --> 00:28:51,386
free for the vast majority

649
00:28:52,516 --> 00:28:55,546
[ Applause ]

650
00:28:56,046 --> 00:28:57,496
So let's go ahead and

651
00:28:58,776 --> 00:29:00,166
and talk about what

652
00:28:58,776 --> 00:29:00,166
and talk about what

653
00:29:01,306 --> 00:29:03,866
So in order to make my

654
00:29:04,746 --> 00:29:08,716
I've found an area where the

655
00:29:08,716 --> 00:29:10,116
And I went ahead and zoomed in

656
00:29:10,116 --> 00:29:12,426
and applied a filter

657
00:29:13,636 --> 00:29:17,116
I focused on the main

658
00:29:17,116 --> 00:29:21,236
to make sure my app

659
00:29:21,756 --> 00:29:23,686
I identified some work

660
00:29:23,686 --> 00:29:25,636
on the main thread

661
00:29:26,236 --> 00:29:28,796
So I went ahead and moved

662
00:29:29,586 --> 00:29:31,636
Once again you can probably

663
00:29:32,026 --> 00:29:33,526
I verified my changes.

664
00:29:33,946 --> 00:29:38,016
Made sure the app was behaving

665
00:29:38,016 --> 00:29:41,846
And as a result, I got a

666
00:29:41,846 --> 00:29:44,976
My user interface will remain

667
00:29:44,976 --> 00:29:45,796
face detection.

668
00:29:46,336 --> 00:29:47,156
Which is really great.

669
00:29:47,706 --> 00:29:50,556
A couple notes regarding

670
00:29:50,906 --> 00:29:53,136
The fixes we made today

671
00:29:53,246 --> 00:29:55,146
but they did add

672
00:29:55,616 --> 00:29:57,586
And in general, the practice

673
00:29:57,586 --> 00:30:01,266
of optimization is trading

674
00:29:57,586 --> 00:30:01,266
of optimization is trading

675
00:30:02,346 --> 00:30:06,206
But fortunately, because

676
00:30:06,206 --> 00:30:09,266
in my development cycle I

677
00:30:09,356 --> 00:30:12,696
I now have time to verify

678
00:30:12,696 --> 00:30:14,796
that my app continues

679
00:30:15,266 --> 00:30:16,756
I can add additional unit tests

680
00:30:16,756 --> 00:30:18,856
if I think that's

681
00:30:19,196 --> 00:30:21,036
And focus on where

682
00:30:21,036 --> 00:30:22,246
and make sure it still works.

683
00:30:22,916 --> 00:30:27,196
Just before you're about to ship

684
00:30:27,196 --> 00:30:29,506
you want to be adding

685
00:30:29,786 --> 00:30:32,036
So the real takeaway

686
00:30:32,406 --> 00:30:34,636
to profile your app

687
00:30:34,636 --> 00:30:36,726
Especially after you

688
00:30:37,126 --> 00:30:38,726
And profile early.

689
00:30:38,906 --> 00:30:41,596
And then profile it

690
00:30:42,236 --> 00:30:44,096
And sometimes, just

691
00:30:44,096 --> 00:30:45,256
and seeing what you can find,

692
00:30:45,256 --> 00:30:47,246
you can find a really

693
00:30:47,916 --> 00:30:50,036
So it pays just to

694
00:30:50,036 --> 00:30:52,696
if there's anything

695
00:30:52,696 --> 00:30:55,426
Some best practices about

696
00:30:55,736 --> 00:30:59,216
The general overview here is

697
00:30:59,456 --> 00:31:02,166
as close as you can to what

698
00:30:59,456 --> 00:31:02,166
as close as you can to what

699
00:31:02,316 --> 00:31:05,206
So you always want to

700
00:31:05,736 --> 00:31:09,106
Not only do you want the

701
00:31:09,106 --> 00:31:11,366
but release builds are what your

702
00:31:11,826 --> 00:31:14,606
You always want to

703
00:31:14,686 --> 00:31:15,966
The simulator is not going

704
00:31:15,966 --> 00:31:18,036
to give you useful

705
00:31:19,296 --> 00:31:25,336
Profile on the oldest, slowest

706
00:31:25,336 --> 00:31:27,666
A pretty good rule is, if

707
00:31:27,666 --> 00:31:29,996
on slower devices; you

708
00:31:29,996 --> 00:31:31,506
on faster devices for free.

709
00:31:31,896 --> 00:31:33,416
And you want all of your users

710
00:31:33,416 --> 00:31:35,256
to have a great experience

711
00:31:35,716 --> 00:31:37,286
Even the ones on slower devices.

712
00:31:38,206 --> 00:31:40,786
And use large data sets

713
00:31:40,986 --> 00:31:43,976
In my case, you know, sometimes

714
00:31:43,976 --> 00:31:46,936
or hundreds of thousands or

715
00:31:46,936 --> 00:31:48,046
in their photos collection.

716
00:31:48,436 --> 00:31:50,816
It's important that I

717
00:31:50,816 --> 00:31:52,316
under those circumstances.

718
00:31:52,756 --> 00:31:54,456
So I can make sure it runs well

719
00:31:54,456 --> 00:31:56,706
as my customers will

720
00:31:57,336 --> 00:32:02,486
So, to wrap everything up,

721
00:31:57,336 --> 00:32:02,486
So, to wrap everything up,

722
00:32:02,486 --> 00:32:06,416
to love using your app because

723
00:32:07,306 --> 00:32:09,876
It helps them achieve

724
00:32:10,266 --> 00:32:14,296
And your UI is really

725
00:32:14,296 --> 00:32:18,406
to do is profile early

726
00:32:19,076 --> 00:32:23,126
If you want more information,

727
00:32:24,156 --> 00:32:27,236
Here are some related -- oh,

728
00:32:27,586 --> 00:32:29,896
Last year we did a session

729
00:32:30,096 --> 00:32:32,216
Which goes into more detail

730
00:32:32,216 --> 00:32:33,016
if you want to know more.

731
00:32:33,476 --> 00:32:35,166
And then this year we

732
00:32:35,166 --> 00:32:36,386
System Trace in Depth.

733
00:32:36,386 --> 00:32:38,366
Which is how you can use

734
00:32:38,366 --> 00:32:41,186
in situations where Time

735
00:32:41,626 --> 00:32:43,676
Thank you, and have

736
00:32:44,516 --> 00:32:47,500
[ Applause ]
