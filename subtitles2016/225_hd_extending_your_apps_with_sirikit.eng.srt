1
00:00:06,516 --> 00:00:18,500
[ Music ]

2
00:00:22,516 --> 00:00:28,106
[ Applause ]

3
00:00:28,606 --> 00:00:29,376
&gt;&gt; Hello everyone.

4
00:00:29,566 --> 00:00:31,086
My name is Vineet Khosla.

5
00:00:31,206 --> 00:00:34,866
And today, I'll be joined by

6
00:00:35,416 --> 00:00:37,106
as we walk through the process

7
00:00:37,106 --> 00:00:39,656
of extending your

8
00:00:40,346 --> 00:00:44,076
In the introduction session,

9
00:00:44,076 --> 00:00:46,156
we learned there are

10
00:00:46,156 --> 00:00:47,406
to a SiriKit-enabled app.

11
00:00:48,516 --> 00:00:51,926
You have the Intents extension.

12
00:00:52,586 --> 00:00:54,716
You have the Intents

13
00:00:54,976 --> 00:00:56,896
And you have, of

14
00:00:57,466 --> 00:01:02,016
With the Intents extension,

15
00:00:57,466 --> 00:01:02,016
With the Intents extension,

16
00:01:02,016 --> 00:01:04,656
You have the Resolve,

17
00:01:06,086 --> 00:01:10,456
In this session, we are going

18
00:01:11,246 --> 00:01:12,846
We're going to talk about how

19
00:01:12,846 --> 00:01:15,826
to prepare your application

20
00:01:16,426 --> 00:01:18,696
And then we will talk about how

21
00:01:18,696 --> 00:01:21,946
to add your first

22
00:01:22,486 --> 00:01:26,516
and finally we will talk about

23
00:01:26,516 --> 00:01:30,206
user interface and style

24
00:01:30,496 --> 00:01:33,646
by writing your Intents

25
00:01:34,386 --> 00:01:37,146
For this session, we are going

26
00:01:37,146 --> 00:01:41,806
to use our favorite chat

27
00:01:42,616 --> 00:01:44,556
Some of you guys

28
00:01:44,676 --> 00:01:48,166
It's a favorite app that is

29
00:01:48,166 --> 00:01:49,666
to chat with our unicorns.

30
00:01:50,236 --> 00:01:53,506
It's a standard messaging app

31
00:01:53,506 --> 00:01:56,586
of messages, but it

32
00:01:56,586 --> 00:02:00,256
of unique corniness, which

33
00:01:56,586 --> 00:02:00,256
of unique corniness, which

34
00:02:00,556 --> 00:02:02,946
And we will add SiriKit

35
00:02:05,836 --> 00:02:08,856
So, SiriKit is built

36
00:02:09,756 --> 00:02:12,906
But before your application

37
00:02:12,906 --> 00:02:14,586
there are number of

38
00:02:14,976 --> 00:02:16,926
to help it adopt SiriKit.

39
00:02:17,746 --> 00:02:20,136
I'm going to cover a few

40
00:02:21,306 --> 00:02:25,186
We will talk about preparing

41
00:02:25,186 --> 00:02:27,756
of your code to embedded

42
00:02:28,296 --> 00:02:31,016
Embedded frameworks are

43
00:02:31,016 --> 00:02:33,416
between your application

44
00:02:34,406 --> 00:02:36,326
Having moved some of the code

45
00:02:36,326 --> 00:02:38,316
to embedded frameworks

46
00:02:38,316 --> 00:02:41,856
with a great opportunity to

47
00:02:42,576 --> 00:02:45,146
And finally we will

48
00:02:45,146 --> 00:02:47,786
about what is an

49
00:02:48,306 --> 00:02:51,096
for architecting

50
00:02:51,096 --> 00:02:54,356
on the intents your

51
00:02:55,116 --> 00:02:59,446
So let's dig a little bit

52
00:03:01,356 --> 00:03:03,036
Your extensions will need

53
00:03:03,036 --> 00:03:04,746
to do everything your

54
00:03:05,116 --> 00:03:07,966
It will need to handle the

55
00:03:07,966 --> 00:03:10,706
to render UI when

56
00:03:11,206 --> 00:03:14,726
And using embedded frameworks

57
00:03:14,726 --> 00:03:17,616
between your application,

58
00:03:17,956 --> 00:03:19,446
because you want to ensure

59
00:03:19,446 --> 00:03:22,896
that your users get a uniform

60
00:03:22,896 --> 00:03:24,206
in from your application

61
00:03:24,206 --> 00:03:27,536
or whether they are

62
00:03:27,536 --> 00:03:33,056
In the case of UnicornChat, we

63
00:03:33,056 --> 00:03:36,346
that made a lot of sense to

64
00:03:36,936 --> 00:03:41,066
We took a look at our

65
00:03:41,476 --> 00:03:44,136
This is everything that

66
00:03:44,136 --> 00:03:45,706
and receiving of messages.

67
00:03:46,136 --> 00:03:50,546
And we realized that this is

68
00:03:50,546 --> 00:03:53,886
to move entirely to embedded

69
00:03:53,886 --> 00:03:56,306
by my application as

70
00:03:57,746 --> 00:04:00,536
Having done that, we took

71
00:03:57,746 --> 00:04:00,536
Having done that, we took

72
00:04:01,226 --> 00:04:05,436
Your application as well as your

73
00:04:05,436 --> 00:04:06,466
the same data model.

74
00:04:06,666 --> 00:04:10,146
In the case of our chat app

75
00:04:10,496 --> 00:04:13,306
as well as the data accessor

76
00:04:13,526 --> 00:04:15,636
that could be moved to

77
00:04:15,976 --> 00:04:18,836
so it could be reused by

78
00:04:19,505 --> 00:04:22,856
After moving that,

79
00:04:23,166 --> 00:04:26,326
at our decision-making logic.

80
00:04:27,356 --> 00:04:29,126
This is the business

81
00:04:29,836 --> 00:04:31,576
In the earlier sessions

82
00:04:31,576 --> 00:04:33,986
that we have the Resolved,

83
00:04:34,826 --> 00:04:36,996
These three methods

84
00:04:36,996 --> 00:04:39,356
to the real business

85
00:04:39,626 --> 00:04:43,116
And you would always want to

86
00:04:43,586 --> 00:04:46,046
as well as your Intents

87
00:04:46,396 --> 00:04:49,686
gives your users the same

88
00:04:49,686 --> 00:04:52,286
to complete that one

89
00:04:52,286 --> 00:04:53,406
of where they come from.

90
00:04:53,756 --> 00:04:56,776
So we moved our decision-making

91
00:04:56,776 --> 00:04:57,986
to an embedded framework.

92
00:04:58,596 --> 00:05:03,236
And finally, if your application

93
00:04:58,596 --> 00:05:03,236
And finally, if your application

94
00:05:03,236 --> 00:05:06,556
that requires it to rend

95
00:05:06,556 --> 00:05:10,316
into the SiriKit, that

96
00:05:10,316 --> 00:05:12,006
into an embedded framework.

97
00:05:12,006 --> 00:05:13,866
So you can reuse,

98
00:05:14,266 --> 00:05:18,516
provide consistent experience

99
00:05:18,516 --> 00:05:20,356
Whether they come in

100
00:05:20,616 --> 00:05:22,976
or whether they are coming

101
00:05:26,496 --> 00:05:30,466
I also recommend everyone

102
00:05:30,466 --> 00:05:32,016
App Extension Best Practices.

103
00:05:32,016 --> 00:05:32,706
I watched it.

104
00:05:32,706 --> 00:05:34,006
I found it really useful.

105
00:05:34,756 --> 00:05:39,986
So after having moved all of our

106
00:05:39,986 --> 00:05:44,236
or some of it, it provided

107
00:05:44,236 --> 00:05:46,016
to write some quality

108
00:05:46,916 --> 00:05:49,706
Now I know I'm preaching

109
00:05:49,706 --> 00:05:51,736
And all the engineers

110
00:05:51,946 --> 00:05:53,926
we write our unit

111
00:05:54,196 --> 00:05:56,086
We all follow test-driven

112
00:05:56,086 --> 00:05:57,816
It happens every

113
00:05:58,416 --> 00:06:01,046
But having moved

114
00:05:58,416 --> 00:06:01,046
But having moved

115
00:06:01,166 --> 00:06:02,946
to an embedded framework

116
00:06:02,946 --> 00:06:05,626
with a new opportunity to

117
00:06:06,576 --> 00:06:09,586
More specifically when we

118
00:06:09,816 --> 00:06:12,816
What you can do is

119
00:06:13,146 --> 00:06:16,356
and then write tests to

120
00:06:16,356 --> 00:06:19,926
as well as your extension,

121
00:06:20,406 --> 00:06:22,526
You don't need a real

122
00:06:22,586 --> 00:06:24,876
You can just mock

123
00:06:24,876 --> 00:06:26,706
that you expect to

124
00:06:26,986 --> 00:06:29,746
And you can write

125
00:06:31,496 --> 00:06:35,596
Finally, let's think a little

126
00:06:36,186 --> 00:06:37,996
for the appropriate

127
00:06:38,996 --> 00:06:42,016
Typically an app will sign

128
00:06:42,366 --> 00:06:44,186
It will want to do

129
00:06:44,526 --> 00:06:48,016
In our case, our UnicornChat

130
00:06:48,016 --> 00:06:51,656
with SendMessageIntent, but

131
00:06:51,726 --> 00:06:54,186
to its capability, and

132
00:06:54,186 --> 00:06:55,336
and video calls with it.

133
00:06:55,836 --> 00:06:58,376
At this point the question

134
00:06:58,376 --> 00:06:59,306
our extensions?

135
00:06:59,626 --> 00:07:01,206
Should we put intent handling

136
00:06:59,626 --> 00:07:01,206
Should we put intent handling

137
00:07:01,206 --> 00:07:03,606
of all these intents

138
00:07:03,896 --> 00:07:07,286
But that might make our code

139
00:07:07,836 --> 00:07:10,936
We could do an alternate

140
00:07:10,936 --> 00:07:12,436
where you can say

141
00:07:12,436 --> 00:07:14,646
to start putting all

142
00:07:14,646 --> 00:07:16,716
in a separate extension

143
00:07:17,736 --> 00:07:21,626
That is great, but you

144
00:07:21,626 --> 00:07:24,506
of boilerplate code and also

145
00:07:24,506 --> 00:07:27,316
than is necessary and creating

146
00:07:27,316 --> 00:07:27,986
not needed.

147
00:07:29,276 --> 00:07:31,446
So, in the case of UnicornChat

148
00:07:31,446 --> 00:07:33,786
and I'm sure this is what

149
00:07:34,056 --> 00:07:38,416
is think about which intents

150
00:07:39,176 --> 00:07:43,126
In our case, we found

151
00:07:43,126 --> 00:07:47,316
and the video call intent could

152
00:07:47,706 --> 00:07:54,166
because doing so let us maximize

153
00:07:54,166 --> 00:07:58,216
of messages intent could live in

154
00:07:58,936 --> 00:08:03,416
In other words, there is

155
00:07:58,936 --> 00:08:03,416
In other words, there is

156
00:08:03,846 --> 00:08:05,546
You know your application best.

157
00:08:05,676 --> 00:08:09,126
You will know which intents your

158
00:08:09,356 --> 00:08:12,726
And you will need to choose

159
00:08:12,726 --> 00:08:15,856
that you have a manageable

160
00:08:15,856 --> 00:08:18,416
you don't create too many

161
00:08:18,416 --> 00:08:19,106
memory pressure.

162
00:08:19,526 --> 00:08:24,236
And having taken care

163
00:08:24,346 --> 00:08:28,036
your application is now

164
00:08:28,266 --> 00:08:31,276
And to help us write our

165
00:08:31,606 --> 00:08:32,926
I invite Diana onstage.

166
00:08:33,515 --> 00:08:42,515
[ Applause ]

167
00:08:43,015 --> 00:08:43,806
&gt;&gt; Thank you, Vineet.

168
00:08:48,156 --> 00:08:49,346
Hello, everyone.

169
00:08:49,556 --> 00:08:53,436
My name is Diana Huang, and I'm

170
00:08:53,436 --> 00:08:56,976
about how to create your first

171
00:08:56,976 --> 00:09:01,276
with Siri, now that your app is

172
00:08:56,976 --> 00:09:01,276
with Siri, now that your app is

173
00:09:02,416 --> 00:09:03,936
I will also show it to you

174
00:09:03,936 --> 00:09:07,916
in Xcode using the

175
00:09:08,466 --> 00:09:13,916
So to get started,

176
00:09:14,146 --> 00:09:15,176
that you want to follow.

177
00:09:16,496 --> 00:09:19,796
First, you want to add an

178
00:09:19,796 --> 00:09:21,556
to your app.

179
00:09:21,556 --> 00:09:23,316
And next up, you want

180
00:09:23,316 --> 00:09:25,756
to configure the

181
00:09:25,756 --> 00:09:29,216
And lastly you need to look

182
00:09:29,216 --> 00:09:31,606
at the principal class

183
00:09:33,106 --> 00:09:35,936
Let's talk a little bit more

184
00:09:36,556 --> 00:09:39,866
To add an Intents

185
00:09:40,326 --> 00:09:44,646
you will go to Xcode,

186
00:09:44,926 --> 00:09:48,746
And then pick Intents

187
00:09:49,796 --> 00:09:52,476
For those of you who have

188
00:09:52,806 --> 00:09:55,736
it's just like how you create

189
00:09:56,256 --> 00:09:59,316
And then, let's take a look

190
00:09:59,316 --> 00:10:02,006
at the Info.plist

191
00:09:59,316 --> 00:10:02,006
at the Info.plist

192
00:10:03,726 --> 00:10:08,646
So we have the existing key of

193
00:10:08,686 --> 00:10:11,086
we have NSExtensionAttributes.

194
00:10:11,996 --> 00:10:13,326
And in side that dictionary,

195
00:10:13,586 --> 00:10:16,866
we're introducing two

196
00:10:17,506 --> 00:10:22,196
The IntentsSupported and

197
00:10:23,706 --> 00:10:27,866
So IntentsSupported is

198
00:10:27,866 --> 00:10:30,346
to specify your extension's

199
00:10:31,296 --> 00:10:35,176
In other words, you want to put

200
00:10:35,346 --> 00:10:37,786
that you want to

201
00:10:38,036 --> 00:10:40,596
into this array, for

202
00:10:42,376 --> 00:10:46,336
IntentsRestricted WhileLocked

203
00:10:46,336 --> 00:10:48,426
to specify your locked

204
00:10:50,246 --> 00:10:54,856
So by default, Siri already

205
00:10:54,926 --> 00:10:57,716
to not be easily invoked

206
00:10:58,256 --> 00:11:02,386
For example, the payments domain

207
00:10:58,256 --> 00:11:02,386
For example, the payments domain

208
00:11:03,336 --> 00:11:07,326
But if your app has a tighter

209
00:11:07,716 --> 00:11:10,546
then you can put the intent

210
00:11:10,736 --> 00:11:14,186
into this array, for

211
00:11:15,136 --> 00:11:18,126
And this is to tell

212
00:11:18,126 --> 00:11:21,696
to unlock the device before

213
00:11:21,726 --> 00:11:25,266
to handle the intent.

214
00:11:25,266 --> 00:11:28,996
So now our Info.plist for the

215
00:11:30,296 --> 00:11:32,416
Let's now talk about

216
00:11:33,766 --> 00:11:37,916
So the principal class of your

217
00:11:37,916 --> 00:11:41,966
subclass of INExtension,

218
00:11:41,966 --> 00:11:44,986
to the INIntentHandlerProviding

219
00:11:45,506 --> 00:11:50,246
This protocol has one and only

220
00:11:50,896 --> 00:11:54,896
So the method name is

221
00:11:55,816 --> 00:11:58,246
You're given an Intent

222
00:11:58,246 --> 00:12:00,066
to return a Handler Object.

223
00:11:58,246 --> 00:12:00,066
to return a Handler Object.

224
00:12:00,836 --> 00:12:04,616
And do note the Handler Object

225
00:12:04,616 --> 00:12:06,986
to the specific intent

226
00:12:08,216 --> 00:12:12,966
So for UnicornChat, we're going

227
00:12:13,936 --> 00:12:18,506
So whenever we're passing an

228
00:12:18,926 --> 00:12:21,316
we will return a

229
00:12:21,356 --> 00:12:24,176
to INSendMessageIntent

230
00:12:25,476 --> 00:12:29,026
So now we have covered

231
00:12:29,456 --> 00:12:33,106
Now let's actually go follow

232
00:12:35,216 --> 00:12:40,106
So here we have the

233
00:12:40,746 --> 00:12:42,006
and in the interest of time,

234
00:12:42,296 --> 00:12:45,196
I have already created

235
00:12:45,806 --> 00:12:48,216
So let's go take a look

236
00:12:48,476 --> 00:12:53,336
which is to configure

237
00:12:53,456 --> 00:12:56,486
So first thing, let's

238
00:12:56,486 --> 00:12:57,906
in a little bit to see better.

239
00:13:01,876 --> 00:13:02,576
All right.

240
00:13:03,046 --> 00:13:05,796
So here we have the

241
00:13:06,836 --> 00:13:11,016
If we expand it, you can see

242
00:13:11,016 --> 00:13:11,536
dictionary.

243
00:13:12,726 --> 00:13:15,596
And if we further

244
00:13:15,796 --> 00:13:18,266
you will see the two new

245
00:13:19,186 --> 00:13:22,976
IntentsSupported and

246
00:13:24,276 --> 00:13:28,046
First, in order to support

247
00:13:28,456 --> 00:13:31,896
let's add an item inside

248
00:13:32,976 --> 00:13:35,136
And we will put in

249
00:13:35,496 --> 00:13:38,116
which is INSendMessageIntent

250
00:13:38,636 --> 00:13:42,946
And next, let's take a look

251
00:13:44,026 --> 00:13:49,626
So because UnicornChat is

252
00:13:49,626 --> 00:13:52,716
for private communications

253
00:13:52,716 --> 00:13:56,816
like to enjoy some privacy,

254
00:13:56,816 --> 00:14:00,266
that users will have to unlock

255
00:13:56,816 --> 00:14:00,266
that users will have to unlock

256
00:14:00,266 --> 00:14:02,896
can send a UnicornChat

257
00:14:03,416 --> 00:14:09,526
So to do that, we will add an

258
00:14:09,526 --> 00:14:11,146
WhileLocked array.

259
00:14:11,836 --> 00:14:14,746
And again, put in the

260
00:14:15,386 --> 00:14:16,876
INSendMessageIntent here.

261
00:14:17,406 --> 00:14:21,826
And now we're done configuring

262
00:14:22,396 --> 00:14:26,936
So the third step is

263
00:14:27,216 --> 00:14:29,896
at the extensions

264
00:14:31,336 --> 00:14:33,716
So when you create the

265
00:14:34,056 --> 00:14:37,016
a principal class will be

266
00:14:37,456 --> 00:14:40,406
Here, I have renamed

267
00:14:40,406 --> 00:14:42,246
to UCIntentHandler.

268
00:14:42,636 --> 00:14:45,396
It is a subclass of INExtension.

269
00:14:45,916 --> 00:14:50,296
And we also have the handler

270
00:14:51,866 --> 00:14:55,406
So you can see that the default

271
00:14:56,386 --> 00:15:00,756
which is returning an instance

272
00:14:56,386 --> 00:15:00,756
which is returning an instance

273
00:15:02,186 --> 00:15:04,726
But just to make our

274
00:15:05,276 --> 00:15:07,156
and make it more extensible.

275
00:15:07,156 --> 00:15:11,866
If we're going to support more

276
00:15:12,376 --> 00:15:16,306
then we're going to create a

277
00:15:17,716 --> 00:15:25,206
So we're going to do that by

278
00:15:25,666 --> 00:15:27,846
UCSentMessage IntentHandler.

279
00:15:28,286 --> 00:15:34,076
And we will also import a few

280
00:15:34,076 --> 00:15:35,556
in the class declaration.

281
00:15:37,566 --> 00:15:40,436
So here we are importing

282
00:15:40,976 --> 00:15:43,336
which hosts a lot

283
00:15:45,336 --> 00:15:48,076
We're also importing the

284
00:15:48,576 --> 00:15:51,236
which is the embedded

285
00:15:51,236 --> 00:15:54,606
through to share code

286
00:15:54,956 --> 00:15:56,076
and the extensions.

287
00:15:57,746 --> 00:16:00,606
And here we have the

288
00:15:57,746 --> 00:16:00,606
And here we have the

289
00:16:00,606 --> 00:16:02,246
class that conforms

290
00:16:02,246 --> 00:16:05,056
to INSentMessage

291
00:16:06,456 --> 00:16:06,836
All right.

292
00:16:07,176 --> 00:16:09,256
Now let's go back to

293
00:16:09,626 --> 00:16:14,226
and replace the implementation

294
00:16:14,466 --> 00:16:18,896
of UCSentMessage IntentHandler

295
00:16:19,066 --> 00:16:21,896
that is, of type

296
00:16:23,006 --> 00:16:26,116
And for all the other intents,

297
00:16:26,656 --> 00:16:29,156
And that's it.

298
00:16:29,526 --> 00:16:32,156
The three steps that

299
00:16:32,156 --> 00:16:34,686
and configure your

300
00:16:35,676 --> 00:16:37,846
Now let's talk about

301
00:16:41,336 --> 00:16:45,326
So hopefully from the

302
00:16:45,596 --> 00:16:47,756
as well as Vineet

303
00:16:48,236 --> 00:16:50,446
your Intents extension's

304
00:16:50,446 --> 00:16:53,166
with Siri can be divided

305
00:16:53,956 --> 00:16:56,996
Resolve, Confirm and Handle.

306
00:16:57,506 --> 00:17:00,786
Let's talk about Resolve first.

307
00:16:57,506 --> 00:17:00,786
Let's talk about Resolve first.

308
00:17:01,876 --> 00:17:06,356
So Resolve is the stage

309
00:17:06,435 --> 00:17:12,346
and clarify the intent

310
00:17:12,546 --> 00:17:16,435
So we have provided for

311
00:17:16,656 --> 00:17:18,965
we have provided

312
00:17:19,156 --> 00:17:20,816
in the intent handling protocol.

313
00:17:21,746 --> 00:17:25,006
So you may ask which ones of

314
00:17:25,906 --> 00:17:27,406
Well, think about this.

315
00:17:27,965 --> 00:17:32,026
Would you need Siri's help in

316
00:17:32,266 --> 00:17:34,866
on the final value of

317
00:17:35,616 --> 00:17:39,426
If the answer is yes,

318
00:17:39,426 --> 00:17:42,506
to implement the Resolve

319
00:17:44,316 --> 00:17:48,086
Let's take a look at this in

320
00:17:48,596 --> 00:17:53,166
So to send a message,

321
00:17:54,286 --> 00:17:57,856
And in order to decide on the

322
00:17:58,196 --> 00:18:03,156
we need to perform a contact

323
00:17:58,196 --> 00:18:03,156
we need to perform a contact

324
00:18:03,276 --> 00:18:04,276
address book records.

325
00:18:05,596 --> 00:18:09,026
There could be a few potential

326
00:18:09,856 --> 00:18:12,226
In the most simple and

327
00:18:12,506 --> 00:18:14,976
we will find exactly

328
00:18:16,466 --> 00:18:17,436
Then we're good to go.

329
00:18:18,566 --> 00:18:21,766
However, it's also

330
00:18:21,766 --> 00:18:23,366
or more matching contacts.

331
00:18:23,856 --> 00:18:26,356
In that case, it

332
00:18:26,476 --> 00:18:29,826
if Siri can help ask

333
00:18:30,226 --> 00:18:31,306
from the candidate list.

334
00:18:33,126 --> 00:18:36,806
It's also possible that we find

335
00:18:37,856 --> 00:18:42,186
And in that case, we would also

336
00:18:42,356 --> 00:18:47,906
so that the user may pick a

337
00:18:48,056 --> 00:18:53,036
So after having a recipient,

338
00:18:53,876 --> 00:18:58,276
So in this case, we simply need

339
00:18:59,246 --> 00:19:03,326
If the user simply hasn't

340
00:18:59,246 --> 00:19:03,326
If the user simply hasn't

341
00:19:03,326 --> 00:19:07,556
really like Siri to help us

342
00:19:09,196 --> 00:19:11,946
So considering all these

343
00:19:11,946 --> 00:19:15,516
like we should implement Resolve

344
00:19:15,696 --> 00:19:18,796
and content, as we

345
00:19:19,006 --> 00:19:22,076
to take further user

346
00:19:22,076 --> 00:19:25,586
up with the final values

347
00:19:27,576 --> 00:19:30,776
So now the parameters have

348
00:19:31,886 --> 00:19:33,776
we get to the Confirm stage.

349
00:19:34,856 --> 00:19:37,886
So this is the stage where

350
00:19:38,916 --> 00:19:42,736
Think of it as if you were to

351
00:19:43,116 --> 00:19:44,496
Do you have everything

352
00:19:45,326 --> 00:19:49,076
Or are you able to

353
00:19:49,076 --> 00:19:50,536
So you want to tell that answer,

354
00:19:50,866 --> 00:19:52,626
along with some extra

355
00:19:52,626 --> 00:19:56,116
that you can gather while

356
00:19:56,526 --> 00:19:58,826
So that then Siri,

357
00:19:58,986 --> 00:20:01,746
can communicate all this

358
00:19:58,986 --> 00:20:01,746
can communicate all this

359
00:20:02,536 --> 00:20:06,306
And finally user can make the

360
00:20:06,306 --> 00:20:09,326
to proceed with the

361
00:20:10,076 --> 00:20:13,836
So in UnicornChat, because

362
00:20:13,836 --> 00:20:16,196
that we have, we need users

363
00:20:16,196 --> 00:20:19,026
to reauthenticate themself

364
00:20:19,846 --> 00:20:22,236
So Confirm is the

365
00:20:22,276 --> 00:20:26,696
to check the authentication

366
00:20:26,696 --> 00:20:30,326
And either way, we want to tell

367
00:20:30,596 --> 00:20:33,876
to Siri so that either

368
00:20:33,876 --> 00:20:38,366
to proceed inside Siri

369
00:20:38,366 --> 00:20:41,706
to the application in order

370
00:20:41,706 --> 00:20:42,386
All right.

371
00:20:43,276 --> 00:20:48,076
So now the intent is also

372
00:20:48,076 --> 00:20:50,206
to the stage of handling it.

373
00:20:51,086 --> 00:20:53,646
Hopefully this is the

374
00:20:53,646 --> 00:20:54,696
for you to understand.

375
00:20:55,376 --> 00:20:57,466
You simply need to

376
00:20:57,806 --> 00:20:59,246
and tell Siri how it went.

377
00:20:59,246 --> 00:21:04,786
So in the case of UnicornChat,

378
00:20:59,246 --> 00:21:04,786
So in the case of UnicornChat,

379
00:21:04,936 --> 00:21:06,426
and then report back

380
00:21:06,586 --> 00:21:10,516
if the message has

381
00:21:11,066 --> 00:21:14,976
So now we have covered

382
00:21:15,196 --> 00:21:17,696
and Handle methods and concepts.

383
00:21:18,056 --> 00:21:19,976
Let's actually go

384
00:21:31,506 --> 00:21:34,166
So this time we're

385
00:21:34,166 --> 00:21:36,356
into the IntentHandler class.

386
00:21:37,746 --> 00:21:40,366
So before I start,

387
00:21:40,846 --> 00:21:45,416
All these simple code will be

388
00:21:45,416 --> 00:21:48,536
through some of the details,

389
00:21:48,536 --> 00:21:50,286
as important for you to read

390
00:21:50,286 --> 00:21:52,276
through every single

391
00:21:52,816 --> 00:21:55,616
But if you're interested,

392
00:21:55,846 --> 00:21:58,636
and check out the simple

393
00:21:59,486 --> 00:21:59,896
All right.

394
00:22:00,676 --> 00:22:04,476
So as we have mentioned, we're

395
00:22:04,946 --> 00:22:06,726
Confirm and Handle methods.

396
00:22:07,536 --> 00:22:11,036
For Resolve, we are going to

397
00:22:11,296 --> 00:22:13,186
for recipients and content.

398
00:22:14,386 --> 00:22:15,976
So let's start with

399
00:22:19,576 --> 00:22:22,566
So in this method

400
00:22:22,626 --> 00:22:25,886
on the recipients

401
00:22:25,996 --> 00:22:28,016
by an array of INPerson.

402
00:22:28,786 --> 00:22:32,486
You can also tell from the

403
00:22:32,536 --> 00:22:37,716
to callback with the array

404
00:22:38,996 --> 00:22:41,916
So there is a one-to-one

405
00:22:42,386 --> 00:22:46,566
between the recipients array and

406
00:22:47,206 --> 00:22:49,706
meaning that for each

407
00:22:49,706 --> 00:22:52,376
to create a

408
00:22:53,486 --> 00:22:56,026
The only exceptions

409
00:22:56,026 --> 00:22:58,696
to create

410
00:22:58,906 --> 00:23:00,736
or ResolutionResultNotRequired.

411
00:22:58,906 --> 00:23:00,736
or ResolutionResultNotRequired.

412
00:23:01,376 --> 00:23:05,756
Where these two types of

413
00:23:05,756 --> 00:23:08,146
for a parameter level resolution

414
00:23:09,096 --> 00:23:12,736
versus the other

415
00:23:12,836 --> 00:23:16,386
targeting towards the

416
00:23:17,996 --> 00:23:21,056
So the first thing we want

417
00:23:21,676 --> 00:23:25,666
is to try unwrapping

418
00:23:26,776 --> 00:23:30,126
And then we're going to loop

419
00:23:30,126 --> 00:23:34,346
and then call our API

420
00:23:34,686 --> 00:23:37,436
to find the matching

421
00:23:37,826 --> 00:23:42,656
And next, we're going

422
00:23:43,136 --> 00:23:44,706
on the matching contacts count.

423
00:23:45,976 --> 00:23:47,926
And as earlier, we're going

424
00:23:47,926 --> 00:23:50,996
to cover the different

425
00:23:51,796 --> 00:23:54,506
The case where we have two

426
00:23:54,786 --> 00:23:57,466
The case where we have

427
00:23:57,726 --> 00:24:00,306
And the case where we

428
00:23:57,726 --> 00:24:00,306
And the case where we

429
00:24:00,746 --> 00:24:06,536
So in the case where we find

430
00:24:07,006 --> 00:24:09,406
we're going to create

431
00:24:09,406 --> 00:24:13,946
Result.disambiguation with the

432
00:24:14,476 --> 00:24:19,586
In the case where we find

433
00:24:19,996 --> 00:24:20,936
we're good to go.

434
00:24:21,166 --> 00:24:22,966
So we're going to

435
00:24:23,286 --> 00:24:26,226
by creating a

436
00:24:26,606 --> 00:24:28,736
with that one person

437
00:24:29,266 --> 00:24:34,366
And in the case where we

438
00:24:35,036 --> 00:24:36,926
we're going to create

439
00:24:36,926 --> 00:24:38,286
Result.unsupported.

440
00:24:38,466 --> 00:24:43,896
So that is the end of

441
00:24:44,516 --> 00:24:48,246
You might have noticed

442
00:24:48,246 --> 00:24:51,506
through the code pretty fast, so

443
00:24:51,506 --> 00:24:52,876
through every single

444
00:24:53,426 --> 00:24:58,286
That's perfectly fine because

445
00:24:58,326 --> 00:25:01,476
to know that we do have

446
00:24:58,326 --> 00:25:01,476
to know that we do have

447
00:25:01,706 --> 00:25:04,516
that are appropriate to

448
00:25:05,296 --> 00:25:08,566
So when it's time for you

449
00:25:08,916 --> 00:25:12,146
for your result methods,

450
00:25:12,146 --> 00:25:14,796
out the documentation

451
00:25:14,796 --> 00:25:16,096
of resolutionResults.

452
00:25:16,916 --> 00:25:19,146
And then and also

453
00:25:20,586 --> 00:25:20,956
All right.

454
00:25:21,906 --> 00:25:25,506
So now we have all

455
00:25:25,506 --> 00:25:28,436
that we have created

456
00:25:29,316 --> 00:25:33,836
Let's call the completion with

457
00:25:34,336 --> 00:25:39,866
And that marks the last line

458
00:25:39,866 --> 00:25:42,286
to get some recipients

459
00:25:43,386 --> 00:25:47,376
But in the case where the

460
00:25:47,376 --> 00:25:50,426
recipient, then we're going

461
00:25:50,426 --> 00:25:53,586
to create a PersonResolution

462
00:25:53,936 --> 00:25:55,426
and call completion with that

463
00:25:55,786 --> 00:25:59,736
to tell Siri please prompt

464
00:26:00,336 --> 00:26:05,426
And that's it for our

465
00:26:06,476 --> 00:26:09,906
So next, we're going to cover

466
00:26:10,256 --> 00:26:13,766
where we are simply going

467
00:26:14,246 --> 00:26:17,406
And if there isn't,

468
00:26:17,406 --> 00:26:18,976
to kindly help us

469
00:26:25,516 --> 00:26:28,076
So the first thing we

470
00:26:28,236 --> 00:26:33,716
is again try unwrapping the

471
00:26:33,716 --> 00:26:35,536
if it's truly not empty.

472
00:26:36,586 --> 00:26:39,066
If a content is indeed given,

473
00:26:39,536 --> 00:26:42,116
we're going to create

474
00:26:42,566 --> 00:26:43,866
with the given content.

475
00:26:45,436 --> 00:26:50,216
Otherwise, we're going to create

476
00:26:50,456 --> 00:26:52,976
just like we did in the

477
00:26:54,476 --> 00:26:55,946
And then call completion

478
00:26:59,056 --> 00:27:02,336
So now we have gone through

479
00:26:59,056 --> 00:27:02,336
So now we have gone through

480
00:27:03,076 --> 00:27:06,626
Next up is the Confirm

481
00:27:06,626 --> 00:27:09,726
to check the authentication

482
00:27:16,676 --> 00:27:21,486
So in the Confirm method, we're

483
00:27:21,836 --> 00:27:24,436
in the UnicornCore

484
00:27:24,686 --> 00:27:27,976
if the user still has a

485
00:27:29,096 --> 00:27:31,526
If he or she does,

486
00:27:31,526 --> 00:27:34,636
to create an

487
00:27:35,146 --> 00:27:38,766
with the code success

488
00:27:39,946 --> 00:27:43,376
I will talk about the

489
00:27:43,996 --> 00:27:46,876
But now let's move onto the case

490
00:27:47,096 --> 00:27:49,536
where the user is no

491
00:27:50,506 --> 00:27:54,306
Well, in this case, we're going

492
00:27:54,556 --> 00:27:57,666
with a code

493
00:27:58,596 --> 00:28:02,846
So this is to tell Siri,

494
00:27:58,596 --> 00:28:02,846
So this is to tell Siri,

495
00:28:03,046 --> 00:28:07,146
for users to maybe proceed to

496
00:28:07,146 --> 00:28:09,976
to log in and finish

497
00:28:15,116 --> 00:28:16,456
All right.

498
00:28:16,456 --> 00:28:19,116
So that's it for

499
00:28:19,916 --> 00:28:23,836
Lastly we're going to implement

500
00:28:29,426 --> 00:28:31,866
So in Handle, we're simply going

501
00:28:31,866 --> 00:28:36,666
to call the shared API

502
00:28:37,026 --> 00:28:41,416
to send the message with the

503
00:28:42,676 --> 00:28:45,996
We're also going to get the

504
00:28:46,516 --> 00:28:50,216
So if the message is

505
00:28:50,616 --> 00:28:52,826
we're going to create

506
00:28:53,166 --> 00:28:54,816
with the code success.

507
00:28:55,606 --> 00:28:58,186
Otherwise, we're going

508
00:28:58,406 --> 00:28:59,746
with the code failure.

509
00:28:59,746 --> 00:29:02,246
And then we're going

510
00:28:59,746 --> 00:29:02,246
And then we're going

511
00:29:02,536 --> 00:29:03,916
with the IntentResponse.

512
00:29:06,416 --> 00:29:10,366
So we have just gone

513
00:29:10,486 --> 00:29:12,166
and Handle methods together.

514
00:29:13,526 --> 00:29:15,996
Now, as promised

515
00:29:15,996 --> 00:29:17,946
about the NSUserActivity

516
00:29:18,276 --> 00:29:22,066
that those IntentResponse

517
00:29:24,296 --> 00:29:26,976
So let's step out of

518
00:29:37,046 --> 00:29:38,966
So NSUserActivity.

519
00:29:40,326 --> 00:29:44,926
In the context of SiriKit,

520
00:29:45,116 --> 00:29:47,506
to help your application

521
00:29:47,946 --> 00:29:51,556
when it gets launched by

522
00:29:52,846 --> 00:29:57,076
By default, Siri creates

523
00:29:57,516 --> 00:29:59,466
if you decide to pass in nil

524
00:29:59,836 --> 00:30:01,976
into the IntentResponse

525
00:29:59,836 --> 00:30:01,976
into the IntentResponse

526
00:30:02,806 --> 00:30:08,186
And Siri will create it with the

527
00:30:08,186 --> 00:30:08,806
class name.

528
00:30:10,366 --> 00:30:13,286
You can also choose to

529
00:30:13,656 --> 00:30:15,846
if you want to pass

530
00:30:17,276 --> 00:30:21,776
But either way, Siri will help

531
00:30:21,776 --> 00:30:24,736
property on the NSUserActivity

532
00:30:25,246 --> 00:30:29,766
This property is newly

533
00:30:29,766 --> 00:30:35,246
And this object has all of

534
00:30:35,556 --> 00:30:37,856
as well as the intent

535
00:30:38,386 --> 00:30:42,096
And Scott will talk a little bit

536
00:30:43,076 --> 00:30:45,786
So now let's take

537
00:30:46,186 --> 00:30:49,156
of NSUserActivity

538
00:30:50,496 --> 00:30:53,326
So if you have paid close

539
00:30:53,676 --> 00:30:55,696
you might have noticed

540
00:30:55,696 --> 00:30:58,946
and Handle methods we

541
00:30:59,436 --> 00:31:04,046
for the userActivity into our

542
00:30:59,436 --> 00:31:04,046
for the userActivity into our

543
00:31:04,386 --> 00:31:05,926
This is perfectly fine,

544
00:31:06,296 --> 00:31:09,976
if our main application will

545
00:31:10,156 --> 00:31:13,356
that Siri creates for

546
00:31:13,436 --> 00:31:15,336
of the INInteraction object.

547
00:31:16,636 --> 00:31:19,676
But in some cases,

548
00:31:19,796 --> 00:31:22,856
to give our application

549
00:31:23,276 --> 00:31:25,526
from the extension process.

550
00:31:26,536 --> 00:31:32,326
So, for example, in the

551
00:31:32,326 --> 00:31:36,606
out the user is no longer

552
00:31:37,406 --> 00:31:39,936
Then we do want to

553
00:31:40,346 --> 00:31:41,926
to our main application.

554
00:31:42,386 --> 00:31:45,556
We're going to do that by

555
00:31:46,996 --> 00:31:49,336
and populate the

556
00:31:50,646 --> 00:31:53,596
with the custom error

557
00:31:53,816 --> 00:31:54,986
to our main application.

558
00:31:55,706 --> 00:31:59,036
And then we're going to replace

559
00:31:59,246 --> 00:32:00,546
that we have just created.

560
00:31:59,246 --> 00:32:00,546
that we have just created.

561
00:32:01,076 --> 00:32:03,166
All right.

562
00:32:03,396 --> 00:32:08,026
Great. So now my UnicornChat

563
00:32:08,026 --> 00:32:13,016
these custom error strings and

564
00:32:13,596 --> 00:32:19,806
if the user or Siri chooses to

565
00:32:19,806 --> 00:32:22,896
So now we have finished all the

566
00:32:23,336 --> 00:32:24,976
Let's actually go see

567
00:32:28,616 --> 00:32:34,006
Send a message to Scott using

568
00:32:34,006 --> 00:32:34,976
for your presentation?

569
00:32:41,516 --> 00:32:41,936
Yes.

570
00:32:42,516 --> 00:32:47,546
[ Applause ]

571
00:32:48,046 --> 00:32:48,786
All right.

572
00:32:48,786 --> 00:32:49,256
Thank you.

573
00:32:49,746 --> 00:32:51,206
Yeah. It's very exciting.

574
00:32:51,286 --> 00:32:54,296
We've just sent our

575
00:32:54,496 --> 00:32:55,196
through Siri.

576
00:32:55,456 --> 00:32:56,956
That's absolutely awesome.

577
00:32:57,516 --> 00:32:59,786
[ Applause ]

578
00:33:00,286 --> 00:33:00,666
Thank you.

579
00:33:01,516 --> 00:33:04,896
[ Applause ]

580
00:33:05,396 --> 00:33:08,636
However, inside the

581
00:33:08,896 --> 00:33:11,196
when I sent messages

582
00:33:11,536 --> 00:33:14,696
I actually often refer to

583
00:33:15,396 --> 00:33:18,366
So really I want to say

584
00:33:18,366 --> 00:33:21,146
to Sparkle Sparkly saying

585
00:33:21,766 --> 00:33:24,966
Where Sparkle Sparkly is

586
00:33:26,006 --> 00:33:29,776
So in order to do that, let's

587
00:33:29,996 --> 00:33:32,216
which is user-specific

588
00:33:32,756 --> 00:33:34,986
All right.

589
00:33:35,386 --> 00:33:36,896
User-specific vocabulary.

590
00:33:38,286 --> 00:33:44,366
So these are custom words or

591
00:33:44,366 --> 00:33:48,286
to your application and that

592
00:33:49,186 --> 00:33:52,656
In the example that I just

593
00:33:52,656 --> 00:33:56,456
as other unicorn names can

594
00:33:56,456 --> 00:33:58,446
vocabulary here.

595
00:33:58,956 --> 00:34:03,426
So in order to help Siri to

596
00:33:58,956 --> 00:34:03,426
So in order to help Siri to

597
00:34:03,536 --> 00:34:06,166
when they speak about

598
00:34:06,486 --> 00:34:08,206
you need to provide

599
00:34:09,065 --> 00:34:13,186
And you will do so by

600
00:34:13,826 --> 00:34:15,696
from your main app.

601
00:34:15,856 --> 00:34:16,755
Let me repeat this.

602
00:34:17,266 --> 00:34:19,856
You need to call

603
00:34:20,246 --> 00:34:23,386
from your main application,

604
00:34:23,916 --> 00:34:25,206
All right.

605
00:34:25,416 --> 00:34:27,966
Let's take a look at how

606
00:34:31,416 --> 00:34:35,146
So in UnicornChat, we have

607
00:34:35,606 --> 00:34:38,536
which manages UnicornChat's

608
00:34:39,476 --> 00:34:41,206
And we have created this method

609
00:34:41,815 --> 00:34:45,356
to update Siri's knowledge

610
00:34:45,846 --> 00:34:49,406
And it will be called whenever

611
00:34:49,485 --> 00:34:50,766
deleted or updated.

612
00:34:52,216 --> 00:34:54,985
The first thing we want

613
00:34:54,985 --> 00:34:57,846
to get a sorted list

614
00:34:59,026 --> 00:35:02,986
And we put the more important

615
00:34:59,026 --> 00:35:02,986
And we put the more important

616
00:35:03,556 --> 00:35:06,626
and leave the less

617
00:35:07,396 --> 00:35:08,396
of the array.

618
00:35:08,396 --> 00:35:12,376
So we prioritize like

619
00:35:12,376 --> 00:35:15,246
to better prioritize

620
00:35:15,356 --> 00:35:16,816
for these Unicorn names.

621
00:35:18,056 --> 00:35:21,846
After gathering this sorted

622
00:35:22,216 --> 00:35:23,656
we're going to provide them

623
00:35:24,366 --> 00:35:26,756
by calling the INVocabulary

624
00:35:27,776 --> 00:35:30,286
We will also give it

625
00:35:30,606 --> 00:35:31,516
of these strings.

626
00:35:32,026 --> 00:35:35,966
In this case, the Unicorn

627
00:35:38,086 --> 00:35:40,396
One last thing that I

628
00:35:40,396 --> 00:35:45,106
to about this block of code

629
00:35:45,106 --> 00:35:48,026
to send all these operations

630
00:35:49,296 --> 00:35:53,566
This is because operations

631
00:35:53,566 --> 00:35:57,376
of contacts can be quite

632
00:35:57,376 --> 00:35:58,916
to block your main

633
00:35:59,806 --> 00:36:03,106
So please do take

634
00:35:59,806 --> 00:36:03,106
So please do take

635
00:36:03,476 --> 00:36:06,166
and dispatch those

636
00:36:06,556 --> 00:36:08,366
into a different view.

637
00:36:09,036 --> 00:36:09,786
All right.

638
00:36:10,346 --> 00:36:15,016
So now after adopting the user

639
00:36:15,016 --> 00:36:18,766
I can now send messages to

640
00:36:19,456 --> 00:36:22,296
Buttercup and all

641
00:36:22,756 --> 00:36:23,976
That's absolutely great.

642
00:36:27,786 --> 00:36:31,386
So now I have yet

643
00:36:32,286 --> 00:36:36,686
Inside UnicornChat application,

644
00:36:36,686 --> 00:36:40,776
of the application is actually

645
00:36:40,936 --> 00:36:42,806
than what you see here in Siri.

646
00:36:43,966 --> 00:36:47,736
So can I make my UnicornChat

647
00:36:47,736 --> 00:36:52,616
as colorful as that in the main

648
00:36:53,496 --> 00:36:57,026
To tell you all about it, I'm

649
00:36:57,146 --> 00:36:59,976
Scott a.k.a. Sparkle

650
00:37:00,516 --> 00:37:02,976
[ Applause ]

651
00:37:03,476 --> 00:37:04,416
&gt;&gt; Good afternoon.

652
00:37:04,716 --> 00:37:07,526
I'm Scott Andrus and I'm

653
00:37:08,136 --> 00:37:11,346
And now we're going to talk

654
00:37:11,346 --> 00:37:13,306
like an interaction

655
00:37:13,306 --> 00:37:15,496
And to do that we're going

656
00:37:15,496 --> 00:37:18,176
to build a UI extension

657
00:37:18,736 --> 00:37:23,186
In iOS 10, we've introduced

658
00:37:23,186 --> 00:37:26,376
which can allow you to create

659
00:37:26,376 --> 00:37:28,456
that provide custom

660
00:37:28,736 --> 00:37:30,116
within the Siri experience.

661
00:37:30,706 --> 00:37:32,246
And so, let's get started.

662
00:37:33,296 --> 00:37:35,816
The reason why you

663
00:37:35,816 --> 00:37:38,746
because UI extensions increase

664
00:37:38,936 --> 00:37:39,606
on the user.

665
00:37:40,716 --> 00:37:42,976
By importing a UI extension,

666
00:37:43,656 --> 00:37:46,986
you're showing your view

667
00:37:47,026 --> 00:37:50,836
And then you can show custom

668
00:37:50,866 --> 00:37:54,166
to your application alongside

669
00:37:54,986 --> 00:37:57,796
This gives you a lot of great

670
00:37:57,796 --> 00:38:00,616
with your app that are

671
00:37:57,796 --> 00:38:00,616
with your app that are

672
00:38:00,616 --> 00:38:03,906
out from the rest of the pack.

673
00:38:04,046 --> 00:38:06,686
You can also offer

674
00:38:06,766 --> 00:38:10,216
So you can engage with

675
00:38:10,766 --> 00:38:13,756
And finally you can

676
00:38:13,966 --> 00:38:15,506
that Siri might not

677
00:38:16,066 --> 00:38:18,246
which is a really great tool

678
00:38:18,716 --> 00:38:22,106
And this is what it looks like.

679
00:38:22,666 --> 00:38:26,606
So to get started all you need

680
00:38:26,606 --> 00:38:29,116
to do is add an Intents

681
00:38:30,216 --> 00:38:31,896
Add that to your project.

682
00:38:32,686 --> 00:38:36,696
And embed it inside of

683
00:38:36,696 --> 00:38:40,586
And you'll see the

684
00:38:40,626 --> 00:38:42,086
that Xcode generates for you.

685
00:38:42,496 --> 00:38:44,446
And inside, you're

686
00:38:44,446 --> 00:38:47,526
for the new IntentsSupported

687
00:38:47,526 --> 00:38:49,476
to the one you've seen

688
00:38:50,156 --> 00:38:52,876
And inside, you'll register

689
00:38:52,876 --> 00:38:54,576
like to show custom

690
00:38:54,576 --> 00:38:56,366
for in the Siri experience.

691
00:38:56,856 --> 00:39:01,186
The anatomy of the UI extension

692
00:38:56,856 --> 00:39:01,186
The anatomy of the UI extension

693
00:39:01,186 --> 00:39:03,466
in SiriKit is actually

694
00:39:05,036 --> 00:39:09,056
SiriKit calls into your UI

695
00:39:09,056 --> 00:39:11,866
with interaction method,

696
00:39:12,276 --> 00:39:13,976
in SiriKit UI extensions.

697
00:39:14,316 --> 00:39:17,286
Your UI extension has

698
00:39:17,906 --> 00:39:19,906
which is the UIViewController

699
00:39:19,906 --> 00:39:22,736
to the INUIHostedViewControlling

700
00:39:22,736 --> 00:39:26,886
And it will be passing

701
00:39:27,326 --> 00:39:29,946
to your UI extension for

702
00:39:29,946 --> 00:39:33,256
Now, as Diana mentioned,

703
00:39:33,676 --> 00:39:37,196
the INInteraction

704
00:39:37,486 --> 00:39:39,426
that encapsulates three

705
00:39:40,406 --> 00:39:43,736
The first is the Intent

706
00:39:43,736 --> 00:39:46,136
or handled by your

707
00:39:46,606 --> 00:39:50,366
Next, the Intent response

708
00:39:50,366 --> 00:39:53,836
from your Intents extension

709
00:39:53,976 --> 00:39:55,606
of the Confirm and

710
00:39:56,426 --> 00:39:59,456
And finally, there's an intent

711
00:39:59,456 --> 00:40:02,476
value that describes the

712
00:39:59,456 --> 00:40:02,476
value that describes the

713
00:40:02,576 --> 00:40:04,526
between your application

714
00:40:04,856 --> 00:40:08,376
As these are all really

715
00:40:08,806 --> 00:40:10,976
as you build your user

716
00:40:15,156 --> 00:40:18,156
Your view controller is the

717
00:40:18,826 --> 00:40:20,996
as the principal class

718
00:40:20,996 --> 00:40:22,796
to start building your

719
00:40:23,196 --> 00:40:26,116
Because it's a subclass

720
00:40:26,586 --> 00:40:29,386
you've got access to all the

721
00:40:29,386 --> 00:40:32,206
may be used to when

722
00:40:32,436 --> 00:40:34,056
for Cocoa Touch applications.

723
00:40:34,216 --> 00:40:38,096
And you'll configure it

724
00:40:38,096 --> 00:40:39,686
that Siri sends you

725
00:40:39,686 --> 00:40:40,676
with interaction method.

726
00:40:40,676 --> 00:40:44,516
There are a couple of other

727
00:40:44,516 --> 00:40:45,996
to take note of in this method.

728
00:40:46,516 --> 00:40:49,716
One of which is provided

729
00:40:49,716 --> 00:40:53,036
And in an iOS 10, this

730
00:40:53,076 --> 00:40:54,316
which is one of two values.

731
00:40:55,036 --> 00:40:57,636
Siri snippet or maps card.

732
00:40:57,636 --> 00:41:00,796
And so you can configure

733
00:40:57,636 --> 00:41:00,796
And so you can configure

734
00:41:00,896 --> 00:41:02,146
for these different kinds

735
00:41:02,146 --> 00:41:03,826
of modal interactions

736
00:41:03,936 --> 00:41:06,026
And this can be really

737
00:41:06,026 --> 00:41:06,976
if you're making a

738
00:41:10,326 --> 00:41:14,016
Finally. You'll have a

739
00:41:14,016 --> 00:41:16,586
to let Siri know that you've

740
00:41:16,586 --> 00:41:20,276
of your user interface and

741
00:41:20,636 --> 00:41:23,506
which tells Siri how to size

742
00:41:24,956 --> 00:41:26,836
So now I think we know

743
00:41:27,416 --> 00:41:28,876
to get started with a demo

744
00:41:28,876 --> 00:41:31,816
of building a SiriKit UI

745
00:41:32,756 --> 00:41:37,616
Okay. So we're back in the great

746
00:41:37,616 --> 00:41:40,026
up for us, with our Siri

747
00:41:40,026 --> 00:41:42,546
to plug our app into

748
00:41:42,716 --> 00:41:44,426
And we're going to

749
00:41:44,426 --> 00:41:45,886
within Intents UI extension.

750
00:41:46,726 --> 00:41:50,546
Now when Diana created her Siri

751
00:41:50,546 --> 00:41:53,576
to create an Intents UI

752
00:41:54,196 --> 00:41:56,326
An Xcode created this

753
00:41:56,326 --> 00:41:58,766
in our project navigator

754
00:41:59,506 --> 00:42:00,806
So we open that up.

755
00:41:59,506 --> 00:42:00,806
So we open that up.

756
00:42:00,996 --> 00:42:03,746
We can see a few great files

757
00:42:03,746 --> 00:42:05,016
with our Intents UI extension.

758
00:42:06,416 --> 00:42:08,336
The first is the

759
00:42:08,656 --> 00:42:10,686
which is the principal

760
00:42:11,526 --> 00:42:13,956
And then we also have a

761
00:42:14,626 --> 00:42:17,586
and then an Info.plist, and

762
00:42:17,876 --> 00:42:20,146
to register for our

763
00:42:20,816 --> 00:42:27,546
So inside we've got a great

764
00:42:27,546 --> 00:42:28,826
the NSExtension dictionary.

765
00:42:28,826 --> 00:42:32,006
I'm going to go ahead

766
00:42:32,226 --> 00:42:33,796
Now what we'd like to do

767
00:42:33,936 --> 00:42:37,696
with our Intents UI extension is

768
00:42:37,696 --> 00:42:39,566
of Siri during Siri results

769
00:42:40,156 --> 00:42:42,566
for sending a message

770
00:42:42,966 --> 00:42:45,086
And when we show this

771
00:42:45,086 --> 00:42:46,846
to be a chat transcript

772
00:42:46,936 --> 00:42:51,416
that really displays the

773
00:42:52,686 --> 00:42:57,026
So inside I'm going

774
00:42:57,026 --> 00:43:01,046
for the INSendMessageIntent,

775
00:42:57,026 --> 00:43:01,046
for the INSendMessageIntent,

776
00:43:01,046 --> 00:43:02,566
in fact show a user interface

777
00:43:02,736 --> 00:43:05,036
when Siri handles this

778
00:43:05,536 --> 00:43:08,726
Great. And we're all

779
00:43:08,726 --> 00:43:11,006
so we can start implementing

780
00:43:11,526 --> 00:43:13,646
So I'll zoom back out here.

781
00:43:14,296 --> 00:43:16,416
And here we've got our

782
00:43:17,216 --> 00:43:18,856
Now you notice this is

783
00:43:18,856 --> 00:43:20,366
of UIViewController conforming

784
00:43:20,366 --> 00:43:23,166
to the INUIHostedViewControlling

785
00:43:23,386 --> 00:43:26,466
As part of that conformance,

786
00:43:26,466 --> 00:43:29,456
with interaction method which

787
00:43:30,666 --> 00:43:33,586
Now the very first thing

788
00:43:33,586 --> 00:43:36,666
to import the UnicornCore

789
00:43:36,666 --> 00:43:38,236
as a module into my Swift file.

790
00:43:39,166 --> 00:43:41,806
Now again, this UnicornCore

791
00:43:41,806 --> 00:43:44,446
that we implemented for our

792
00:43:44,446 --> 00:43:47,136
of our Unicorn apps, like

793
00:43:47,566 --> 00:43:50,426
It's a great way to share

794
00:43:50,426 --> 00:43:52,536
and for all of our extensions.

795
00:43:53,126 --> 00:43:56,836
We made great use of it in

796
00:43:56,836 --> 00:43:59,236
to share our business

797
00:43:59,236 --> 00:44:00,816
and Handle in our extension.

798
00:43:59,236 --> 00:44:00,816
and Handle in our extension.

799
00:44:00,816 --> 00:44:03,646
And now we're going to use

800
00:44:03,756 --> 00:44:05,876
for our UI extension

801
00:44:06,006 --> 00:44:08,406
so we can have the

802
00:44:08,406 --> 00:44:10,976
of sending a UnicornChat

803
00:44:16,126 --> 00:44:17,386
So let's start implementing

804
00:44:17,386 --> 00:44:17,976
with interaction method.

805
00:44:21,236 --> 00:44:24,836
So inside I'm going to go ahead

806
00:44:25,226 --> 00:44:26,126
which I'm going to send back

807
00:44:26,126 --> 00:44:28,186
to Siri once I've

808
00:44:28,676 --> 00:44:30,816
And now I'm going to check

809
00:44:30,816 --> 00:44:33,206
if my interaction.representsSend

810
00:44:33,556 --> 00:44:37,036
This is a convenience that I've

811
00:44:37,036 --> 00:44:38,976
on INInteraction in my

812
00:44:43,876 --> 00:44:46,516
Then I'll instantiate a

813
00:44:46,746 --> 00:44:47,776
And this is what we use

814
00:44:47,776 --> 00:44:50,186
to represent a message

815
00:44:50,216 --> 00:44:51,876
and we're using both

816
00:44:51,876 --> 00:44:53,976
And we'll use it here in

817
00:44:57,416 --> 00:44:59,196
And we'll start configuring

818
00:44:59,196 --> 00:45:01,636
with .messageContent from

819
00:44:59,196 --> 00:45:01,636
with .messageContent from

820
00:45:01,986 --> 00:45:03,836
which I'm again using

821
00:45:03,836 --> 00:45:05,046
to get from the interaction.

822
00:45:05,596 --> 00:45:11,466
I'm creating a UC contact

823
00:45:11,466 --> 00:45:14,026
on the interaction's properties,

824
00:45:14,026 --> 00:45:15,966
that model object to

825
00:45:16,356 --> 00:45:17,976
to show the recipient

826
00:45:21,386 --> 00:45:23,226
And then finally

827
00:45:23,226 --> 00:45:25,226
on the intentHandlingStatus

828
00:45:25,336 --> 00:45:28,456
And we can use this to configure

829
00:45:28,776 --> 00:45:30,686
based on whether or not

830
00:45:30,686 --> 00:45:35,166
And so in this case, if the

831
00:45:35,166 --> 00:45:37,736
the intentHandlingStatus

832
00:45:38,116 --> 00:45:39,466
inProgress or ready.

833
00:45:39,576 --> 00:45:43,276
I can set the isSent property of

834
00:45:43,786 --> 00:45:46,606
indicating that I should

835
00:45:46,606 --> 00:45:47,666
and show that to the user.

836
00:45:48,576 --> 00:45:51,366
Otherwise, if it's done, I

837
00:45:51,366 --> 00:45:53,036
of my chatViewController

838
00:45:53,386 --> 00:45:54,776
indicating that I've

839
00:45:54,776 --> 00:45:55,976
and letting the user

840
00:45:59,846 --> 00:46:03,026
Finally I can present the

841
00:45:59,846 --> 00:46:03,026
Finally I can present the

842
00:46:03,026 --> 00:46:05,186
of this principal class

843
00:46:05,586 --> 00:46:06,816
which is a really useful way

844
00:46:07,216 --> 00:46:09,836
to implement different view

845
00:46:09,836 --> 00:46:10,976
of intents in my UI extension.

846
00:46:14,136 --> 00:46:17,756
Finally I can use the

847
00:46:17,756 --> 00:46:22,376
of my Intents UI extension in

848
00:46:22,376 --> 00:46:25,846
And I'll use this by default

849
00:46:26,416 --> 00:46:30,616
If for some reason I couldn't

850
00:46:30,706 --> 00:46:33,796
I'll make use of the desired

851
00:46:34,146 --> 00:46:34,976
which is good enough for me.

852
00:46:38,636 --> 00:46:40,036
Now that was the happy path.

853
00:46:40,546 --> 00:46:42,496
Let's say that something went

854
00:46:42,496 --> 00:46:43,316
that we didn't expect.

855
00:46:44,186 --> 00:46:46,966
We can set a size of

856
00:46:46,966 --> 00:46:50,126
to draw our UI extension's

857
00:46:50,626 --> 00:46:56,426
Okay. The last thing I'm going

858
00:46:56,546 --> 00:46:58,786
that I've completed implementing

859
00:46:58,816 --> 00:47:00,816
and configuring my

860
00:46:58,816 --> 00:47:00,816
and configuring my

861
00:47:00,886 --> 00:47:04,046
and that should go ahead and

862
00:47:05,606 --> 00:47:09,226
Okay. So I have a version of

863
00:47:09,316 --> 00:47:09,976
Let's go ahead and see it now.

864
00:47:16,476 --> 00:47:19,016
So as you can see here, I

865
00:47:19,016 --> 00:47:21,216
I'm going to send

866
00:47:21,666 --> 00:47:28,066
Send the message to Diana using

867
00:47:28,066 --> 00:47:28,976
on your presentation."

868
00:47:34,516 --> 00:47:40,356
[ Applause ]

869
00:47:40,856 --> 00:47:43,376
And so we've got a great

870
00:47:43,876 --> 00:47:46,176
but also you noticed that

871
00:47:46,336 --> 00:47:47,976
And so we'll take

872
00:47:56,456 --> 00:47:58,726
So we've just shown you how

873
00:47:58,726 --> 00:48:00,986
to boot strap your UI

874
00:47:58,726 --> 00:48:00,986
to boot strap your UI

875
00:48:01,336 --> 00:48:02,706
And that's really great.

876
00:48:03,256 --> 00:48:05,376
But you'll notice

877
00:48:05,376 --> 00:48:08,056
there's something not quite

878
00:48:08,056 --> 00:48:09,876
that we're showing

879
00:48:10,246 --> 00:48:13,106
And thus that we have a

880
00:48:13,106 --> 00:48:15,896
interface being shown

881
00:48:16,886 --> 00:48:20,706
By default, Siri shows the user

882
00:48:20,706 --> 00:48:23,516
of intents, and this

883
00:48:23,516 --> 00:48:26,786
that we've just used to send

884
00:48:26,786 --> 00:48:29,746
As such, what we'd like to do

885
00:48:29,746 --> 00:48:33,096
for our UnicornChat users is

886
00:48:33,096 --> 00:48:37,476
interface to let the users have

887
00:48:37,586 --> 00:48:40,066
when they send messages

888
00:48:41,316 --> 00:48:44,736
And so we can do this in iOS 10,

889
00:48:45,656 --> 00:48:49,466
By implementing the

890
00:48:49,466 --> 00:48:51,916
protocol, you can let Siri know

891
00:48:51,916 --> 00:48:54,846
that you're drawing

892
00:48:55,156 --> 00:48:56,646
within your UI extension's view.

893
00:48:56,836 --> 00:49:00,376
And thus, you can opt-in to

894
00:48:56,836 --> 00:49:00,376
And thus, you can opt-in to

895
00:49:00,376 --> 00:49:03,446
of particular content

896
00:49:03,496 --> 00:49:06,676
and then taking over that

897
00:49:07,526 --> 00:49:08,916
Ultimately when you do this,

898
00:49:09,496 --> 00:49:11,346
Siri will accommodate

899
00:49:11,686 --> 00:49:13,126
and so you should make sure

900
00:49:13,276 --> 00:49:15,706
that you do accurately

901
00:49:16,126 --> 00:49:17,326
on behalf of the user.

902
00:49:17,826 --> 00:49:21,596
So let's take the

903
00:49:21,596 --> 00:49:23,966
that we were just working

904
00:49:23,966 --> 00:49:27,726
Here you can see that

905
00:49:28,066 --> 00:49:30,916
INUIHostedViewSiriProviding

906
00:49:31,646 --> 00:49:35,646
we can implement displaysMessage

907
00:49:35,716 --> 00:49:37,726
indicating to Siri that we are

908
00:49:37,726 --> 00:49:39,976
in fact displaying message

909
00:49:43,516 --> 00:49:45,866
And this is all it

910
00:49:45,866 --> 00:49:49,356
to implement your own user

911
00:49:50,716 --> 00:49:53,316
So let's see a demo

912
00:49:53,646 --> 00:49:55,316
where I have a version

913
00:49:55,316 --> 00:49:55,976
that does exactly this.

914
00:49:59,046 --> 00:50:00,576
So we're back on my device.

915
00:49:59,046 --> 00:50:00,576
So we're back on my device.

916
00:50:01,276 --> 00:50:03,066
Now let's send another

917
00:50:03,636 --> 00:50:09,376
Send the message to Diana

918
00:50:09,936 --> 00:50:12,976
"It's pretty tough to type

919
00:50:19,316 --> 00:50:22,196
And now we see exactly the

920
00:50:22,356 --> 00:50:23,956
and what we want

921
00:50:24,516 --> 00:50:29,500
[ Applause ]

922
00:50:34,296 --> 00:50:38,416
Our interface is unimpeded by

923
00:50:38,526 --> 00:50:42,266
And this gives us a great outlet

924
00:50:42,326 --> 00:50:43,626
that really reflects

925
00:50:43,866 --> 00:50:45,976
on the unicorny style

926
00:50:49,706 --> 00:50:51,766
Now some final thoughts

927
00:50:51,766 --> 00:50:54,406
on implementing UI extensions

928
00:50:55,196 --> 00:50:57,746
And the first thing I'd

929
00:50:58,246 --> 00:51:00,936
that you should consider

930
00:50:58,246 --> 00:51:00,936
that you should consider

931
00:51:00,936 --> 00:51:01,976
UI extensions.

932
00:51:02,976 --> 00:51:06,036
Because extensions, by default,

933
00:51:06,036 --> 00:51:08,136
to the user for short

934
00:51:08,606 --> 00:51:11,146
the system enforces

935
00:51:11,146 --> 00:51:13,506
than you might be used to

936
00:51:14,326 --> 00:51:17,596
And so usage of views,

937
00:51:17,926 --> 00:51:19,546
can be especially

938
00:51:19,546 --> 00:51:21,286
and you should use

939
00:51:21,616 --> 00:51:23,046
when building your UI extension.

940
00:51:25,716 --> 00:51:29,636
As we saw, we have access to

941
00:51:30,006 --> 00:51:33,036
within our UI extension

942
00:51:33,346 --> 00:51:35,626
And this is also

943
00:51:35,626 --> 00:51:37,286
if you're designing

944
00:51:37,286 --> 00:51:39,166
and your UI extension

945
00:51:39,166 --> 00:51:41,136
in various different

946
00:51:41,846 --> 00:51:45,656
But desired size that you then

947
00:51:45,656 --> 00:51:46,596
A desired size.

948
00:51:46,706 --> 00:51:49,946
And so, if you're making use

949
00:51:50,476 --> 00:51:52,456
you want to make sure that

950
00:51:52,456 --> 00:51:54,856
so that it can look good

951
00:51:54,966 --> 00:51:57,956
or the maximum size, no

952
00:52:01,756 --> 00:52:05,346
So we've seen a few

953
00:52:05,606 --> 00:52:08,146
to extending our

954
00:52:08,566 --> 00:52:12,446
And the first is preparing

955
00:52:12,446 --> 00:52:16,086
and that's by making use of

956
00:52:16,086 --> 00:52:19,986
like embedded frameworks,

957
00:52:20,746 --> 00:52:23,476
to be able to properly test

958
00:52:23,476 --> 00:52:24,626
that Siri might send us.

959
00:52:25,406 --> 00:52:27,566
And then architecting

960
00:52:27,566 --> 00:52:29,286
to use the right

961
00:52:29,916 --> 00:52:34,166
We solved how to add our

962
00:52:34,226 --> 00:52:36,856
and implementing

963
00:52:36,856 --> 00:52:38,356
and Handle business logic

964
00:52:38,426 --> 00:52:41,326
that lets our applications

965
00:52:43,936 --> 00:52:47,336
And finally, we showed how to

966
00:52:47,786 --> 00:52:50,966
to bring the custom, unique

967
00:52:50,966 --> 00:52:51,976
into the Siri experience.

968
00:52:55,556 --> 00:52:58,476
The sample code from this

969
00:52:58,476 --> 00:53:00,476
and some great documentation

970
00:52:58,476 --> 00:53:00,476
and some great documentation

971
00:53:00,916 --> 00:53:02,336
are available on our website.

972
00:53:02,886 --> 00:53:07,226
And then we had an excellent

973
00:53:07,226 --> 00:53:09,286
Introducing SiriKit,

974
00:53:09,286 --> 00:53:12,776
about what we want SiriKit to be

975
00:53:12,776 --> 00:53:16,866
And we had a great session about

976
00:53:16,956 --> 00:53:20,466
from WWDC 2015 that I'd

977
00:53:20,466 --> 00:53:22,736
if you intend to implement

978
00:53:23,096 --> 00:53:26,126
And I hope that you find

979
00:53:26,126 --> 00:53:29,316
extensions and your

980
00:53:29,316 --> 00:53:30,926
as we did with UnicornChat.

981
00:53:30,926 --> 00:53:31,706
Thank you.

982
00:53:32,516 --> 00:53:36,500
[ Applause ]
