1
00:00:07,516 --> 00:00:17,516
[ Music ]

2
00:00:18,516 --> 00:00:22,546
[ Applause ]

3
00:00:23,046 --> 00:00:25,226
&gt;&gt; Wow. Good afternoon,

4
00:00:25,226 --> 00:00:26,706
Good afternoon and welcome.

5
00:00:28,476 --> 00:00:30,546
You want to create great apps.

6
00:00:31,026 --> 00:00:34,496
And having a great layout is

7
00:00:34,956 --> 00:00:38,046
Auto Layout makes it easier

8
00:00:38,426 --> 00:00:40,826
targeting different

9
00:00:41,116 --> 00:00:44,016
adaptations as well as layout

10
00:00:44,656 --> 00:00:47,296
Today we are going to talk

11
00:00:47,936 --> 00:00:50,236
and this session is broken

12
00:00:50,666 --> 00:00:51,826
First is going to be with me.

13
00:00:52,436 --> 00:00:53,746
My name is Jason Yao.

14
00:00:53,746 --> 00:00:55,236
I'm an Interface

15
00:00:55,496 --> 00:00:57,596
I'm going to tell you

16
00:00:58,476 --> 00:01:01,586
Second, Jesse Donaldson from

17
00:00:58,476 --> 00:01:01,586
Second, Jesse Donaldson from

18
00:01:01,586 --> 00:01:04,605
in Cocoa, and then

19
00:01:04,605 --> 00:01:07,916
from UIKit will tell you

20
00:01:08,266 --> 00:01:10,336
With these tools and techniques,

21
00:01:10,546 --> 00:01:12,706
you will save yourself

22
00:01:13,336 --> 00:01:14,756
when you apply them

23
00:01:14,756 --> 00:01:15,966
So, let's get started shall we?

24
00:01:17,576 --> 00:01:20,916
The first topic I want to

25
00:01:20,916 --> 00:01:23,516
that I'm calling incrementally

26
00:01:24,316 --> 00:01:25,766
incrementally adopting

27
00:01:26,146 --> 00:01:27,236
What do I mean by this?

28
00:01:28,276 --> 00:01:30,286
Well, when you are laying

29
00:01:30,286 --> 00:01:32,296
of Interface Builder,

30
00:01:32,296 --> 00:01:33,576
to constrain everything at once.

31
00:01:33,736 --> 00:01:37,176
You can do it incrementally

32
00:01:37,536 --> 00:01:41,106
simplify your setups, as well as

33
00:01:41,686 --> 00:01:44,976
But before I show you how to do

34
00:01:44,976 --> 00:01:46,296
at an example to

35
00:01:47,626 --> 00:01:50,696
So it all starts by taking

36
00:01:50,696 --> 00:01:52,066
onto Interface Builder Canvas.

37
00:01:52,576 --> 00:01:54,866
You give it a size and position.

38
00:01:55,466 --> 00:01:56,996
You compile it and run.

39
00:01:57,786 --> 00:02:01,976
And you're going to get that

40
00:01:57,786 --> 00:02:01,976
And you're going to get that

41
00:02:02,716 --> 00:02:06,176
Then you go head and rotate

42
00:02:07,586 --> 00:02:10,756
that it's fitting the same

43
00:02:10,756 --> 00:02:11,516
that needs to be done.

44
00:02:12,046 --> 00:02:14,496
So what's going on here?

45
00:02:14,756 --> 00:02:18,616
What's going on is we're

46
00:02:18,616 --> 00:02:20,236
and to the left with

47
00:02:20,576 --> 00:02:24,156
In fact, what we're doing is

48
00:02:24,156 --> 00:02:28,286
constraints during compile time

49
00:02:28,526 --> 00:02:30,076
in -- with the Auto

50
00:02:31,276 --> 00:02:33,946
If you needed more

51
00:02:34,546 --> 00:02:37,306
what you would need to do is

52
00:02:37,666 --> 00:02:39,046
and add your own constraints.

53
00:02:39,886 --> 00:02:42,666
And the question is could there

54
00:02:42,826 --> 00:02:44,426
perhaps a way without

55
00:02:44,826 --> 00:02:46,456
to get simple resize behavior?

56
00:02:47,486 --> 00:02:48,026
There can be.

57
00:02:48,716 --> 00:02:54,816
New to Xcode 8 is the ability in

58
00:02:54,816 --> 00:02:57,366
to specify autoresizing

59
00:02:57,366 --> 00:02:58,696
that do not have constraints.

60
00:02:59,206 --> 00:03:03,346
What that means is that you

61
00:02:59,206 --> 00:03:03,346
What that means is that you

62
00:03:04,246 --> 00:03:07,236
by specifying autoresizing

63
00:03:07,416 --> 00:03:10,096
For those of you who remember

64
00:03:10,096 --> 00:03:10,976
might recognize this UI.

65
00:03:11,516 --> 00:03:15,806
[ Applause ]

66
00:03:16,306 --> 00:03:17,976
This is the Springs &amp; Struts UI.

67
00:03:18,496 --> 00:03:20,296
You can pin things

68
00:03:20,296 --> 00:03:23,036
as decide whether it's going to

69
00:03:23,916 --> 00:03:26,576
And these views are

70
00:03:26,576 --> 00:03:27,526
to your constraint views.

71
00:03:28,466 --> 00:03:30,066
In fact, what we are

72
00:03:30,066 --> 00:03:32,126
to take those autoresizing

73
00:03:32,126 --> 00:03:33,816
to translate them

74
00:03:34,356 --> 00:03:35,846
But we are going

75
00:03:35,846 --> 00:03:37,446
into constraints at runtime.

76
00:03:37,446 --> 00:03:39,516
And there is a key

77
00:03:40,026 --> 00:03:42,896
We're generating them at

78
00:03:43,856 --> 00:03:47,276
because it's going to be more

79
00:03:47,356 --> 00:03:50,006
to you, giving you

80
00:03:50,006 --> 00:03:54,876
to do anything programmatic to

81
00:03:54,876 --> 00:03:56,296
who are pro-Auto

82
00:03:56,296 --> 00:03:57,666
you might recognize this flag.

83
00:03:58,276 --> 00:03:59,976
On the view, we are

84
00:03:59,976 --> 00:04:04,646
translatesAutoresizingMask

85
00:03:59,976 --> 00:04:04,646
translatesAutoresizingMask

86
00:04:04,846 --> 00:04:07,386
What about for the views

87
00:04:07,386 --> 00:04:08,616
to inside of Interface Builder?

88
00:04:09,656 --> 00:04:11,056
They're going to be

89
00:04:11,546 --> 00:04:12,256
You click on the view.

90
00:04:12,256 --> 00:04:13,766
You are going to see

91
00:04:13,766 --> 00:04:14,756
that are affecting that view.

92
00:04:15,646 --> 00:04:19,826
Autoresizing masks are

93
00:04:19,896 --> 00:04:24,636
and translatesAutoresizingMask

94
00:04:25,186 --> 00:04:29,506
So, putting all of this together

95
00:04:29,936 --> 00:04:34,056
we can incrementally adopt

96
00:04:34,056 --> 00:04:36,836
with autoresizing masks to so

97
00:04:36,996 --> 00:04:39,906
and then add constraints for

98
00:04:41,236 --> 00:04:43,566
And that gives you

99
00:04:44,066 --> 00:04:47,736
When you are ready to add

100
00:04:47,866 --> 00:04:49,126
that you want to

101
00:04:49,626 --> 00:04:52,476
start from the parent,

102
00:04:53,976 --> 00:04:58,036
This allows you to adopt

103
00:04:58,376 --> 00:05:00,166
and is great for new

104
00:04:58,376 --> 00:05:00,166
and is great for new

105
00:05:00,166 --> 00:05:03,846
to be building to get that --

106
00:05:03,846 --> 00:05:06,186
but it's also great

107
00:05:06,186 --> 00:05:08,026
where you've been

108
00:05:08,556 --> 00:05:10,386
Well, now you can

109
00:05:10,386 --> 00:05:11,206
existing behavior.

110
00:05:11,776 --> 00:05:15,296
I'd like to show you a

111
00:05:16,046 --> 00:05:17,976
So, let's take a

112
00:05:29,426 --> 00:05:32,186
So, I've got Xcode 8 open

113
00:05:32,186 --> 00:05:33,516
I am going to build

114
00:05:33,796 --> 00:05:37,256
I've got my views

115
00:05:37,256 --> 00:05:38,276
into the View Controller,

116
00:05:38,276 --> 00:05:40,856
and they are fitting

117
00:05:41,616 --> 00:05:43,546
And so, let's take a look

118
00:05:43,546 --> 00:05:47,406
like in landscape by going to

119
00:05:47,706 --> 00:05:48,646
and switching it to landscape.

120
00:05:49,916 --> 00:05:51,696
Clicking over here, you

121
00:05:52,316 --> 00:05:56,726
So, let's go ahead and

122
00:05:56,726 --> 00:05:59,476
And we want this to be

123
00:06:00,716 --> 00:06:04,066
Instead of adding constraints,

124
00:06:04,066 --> 00:06:05,986
to this yet, I can go

125
00:06:05,986 --> 00:06:11,256
And of course we've got the

126
00:06:11,256 --> 00:06:14,086
over here, and all I need to

127
00:06:14,086 --> 00:06:15,626
and pin to the other edge.

128
00:06:16,126 --> 00:06:19,176
Now, I want to work

129
00:06:19,576 --> 00:06:23,646
I'm going to go to the moon,

130
00:06:23,646 --> 00:06:25,816
to the top and to the

131
00:06:25,816 --> 00:06:29,656
As for the cloud, I'm going to

132
00:06:29,656 --> 00:06:31,316
of the pin for -- to the left.

133
00:06:31,416 --> 00:06:35,006
And then for the label, I want

134
00:06:35,056 --> 00:06:36,676
and proportionally precision.

135
00:06:36,976 --> 00:06:38,426
So, I'll get rid of

136
00:06:38,876 --> 00:06:41,146
make it width resizable, and

137
00:06:41,146 --> 00:06:43,236
animation showing me the

138
00:06:43,766 --> 00:06:45,796
And then we'll just pin

139
00:06:45,796 --> 00:06:46,976
and make it height

140
00:06:48,046 --> 00:06:51,296
Now when we take a look at

141
00:06:51,296 --> 00:06:53,176
to landscape, and it's

142
00:06:53,686 --> 00:06:58,096
Let's try two-thirds

143
00:06:58,276 --> 00:07:00,266
It's almost there, but

144
00:06:58,276 --> 00:07:00,266
It's almost there, but

145
00:07:00,546 --> 00:07:01,306
What's going on there?

146
00:07:02,226 --> 00:07:04,056
What's going on is

147
00:07:04,056 --> 00:07:05,546
at the label it's

148
00:07:05,546 --> 00:07:06,926
It's using autoresizing mask,

149
00:07:06,926 --> 00:07:09,766
and it's proportionally

150
00:07:10,836 --> 00:07:12,806
Autoresizing masks do not take

151
00:07:12,806 --> 00:07:16,246
into account the content

152
00:07:17,256 --> 00:07:19,356
I can fix this up by

153
00:07:20,056 --> 00:07:24,176
but for this particular case UI

154
00:07:24,356 --> 00:07:26,616
I'm just going to go into

155
00:07:27,076 --> 00:07:29,376
and then switch it

156
00:07:29,376 --> 00:07:30,566
over to a minimum font size.

157
00:07:30,836 --> 00:07:33,646
That way it's fitting into

158
00:07:33,646 --> 00:07:37,226
So, now when we go back

159
00:07:37,226 --> 00:07:39,716
it's looking pretty good,

160
00:07:40,736 --> 00:07:41,686
Next, we are going to deal

161
00:07:41,686 --> 00:07:43,606
with the temperature

162
00:07:44,646 --> 00:07:46,986
I want a more sophisticated

163
00:07:47,036 --> 00:07:48,266
So, I'm going to

164
00:07:49,156 --> 00:07:51,046
What I could do is I'm

165
00:07:51,046 --> 00:07:53,486
I want to constrain the

166
00:07:53,486 --> 00:07:55,086
So, I'm going to hold down

167
00:07:55,506 --> 00:07:57,856
drag out a connection

168
00:07:58,186 --> 00:08:02,656
It brings up the constraint

169
00:07:58,186 --> 00:08:02,656
It brings up the constraint

170
00:08:02,656 --> 00:08:04,036
and add multiple

171
00:08:04,096 --> 00:08:05,986
So, I want to center it

172
00:08:05,986 --> 00:08:06,886
and hit add constraints.

173
00:08:07,936 --> 00:08:09,866
Similarly, I want

174
00:08:10,776 --> 00:08:13,066
Control drag to the

175
00:08:13,226 --> 00:08:15,916
and we want to horizontally

176
00:08:15,916 --> 00:08:17,126
as add a baseline constraint.

177
00:08:18,476 --> 00:08:19,636
And then do the same to the sun.

178
00:08:19,876 --> 00:08:23,686
Control drag, hold down

179
00:08:23,926 --> 00:08:26,746
and this time center vertically.

180
00:08:27,276 --> 00:08:29,466
Now, my views have the

181
00:08:29,466 --> 00:08:30,966
And we just need to

182
00:08:31,376 --> 00:08:32,395
so that they are in position.

183
00:08:32,696 --> 00:08:35,986
And so we are going to go to the

184
00:08:36,616 --> 00:08:40,736
for the selected views

185
00:08:40,916 --> 00:08:43,265
Next, I want to make the

186
00:08:43,756 --> 00:08:45,016
So, I'm going to click on that

187
00:08:45,616 --> 00:08:47,326
and just increase

188
00:08:47,326 --> 00:08:50,226
And you might notice that

189
00:08:51,036 --> 00:08:53,426
because everything is already

190
00:08:53,426 --> 00:08:54,996
to automatically

191
00:08:55,896 --> 00:08:59,686
We do more automatic update

192
00:09:00,856 --> 00:09:04,996
So, next, we want to

193
00:09:05,906 --> 00:09:07,756
and this is a sunny day.

194
00:09:07,916 --> 00:09:10,326
So, we're going to go ahead

195
00:09:10,836 --> 00:09:14,326
From the object library, I'm

196
00:09:14,326 --> 00:09:16,836
out that image view,

197
00:09:24,276 --> 00:09:30,626
and then set as image, as

198
00:09:30,626 --> 00:09:32,756
In this case, we probably want

199
00:09:34,016 --> 00:09:35,036
Now, we want to make sure

200
00:09:35,036 --> 00:09:36,576
that this thing is

201
00:09:36,746 --> 00:09:38,436
And we could add

202
00:09:38,636 --> 00:09:40,156
and pin them to each side.

203
00:09:40,606 --> 00:09:42,886
But for this simple resize

204
00:09:42,886 --> 00:09:47,376
to add constraints because we

205
00:09:47,376 --> 00:09:50,566
and just use autoresizing

206
00:09:50,566 --> 00:09:52,056
making it width and

207
00:09:54,086 --> 00:09:57,006
Last but not least, let's go

208
00:09:57,006 --> 00:09:57,846
of my document outline.

209
00:09:57,846 --> 00:09:58,486
So, it's in the back.

210
00:09:58,486 --> 00:10:02,386
And then we're going to clear

211
00:09:58,486 --> 00:10:02,386
And then we're going to clear

212
00:10:02,516 --> 00:10:03,916
because this is a

213
00:10:03,916 --> 00:10:05,926
and we now can see

214
00:10:06,656 --> 00:10:07,536
And then we'll test it out.

215
00:10:08,046 --> 00:10:10,826
So, it's looking good --

216
00:10:12,076 --> 00:10:15,606
It's looking good in landscape,

217
00:10:16,796 --> 00:10:18,326
two-thirds split

218
00:10:19,636 --> 00:10:21,376
as well as iPhone 6s Plus.

219
00:10:22,516 --> 00:10:25,976
And so that is how you can

220
00:10:26,516 --> 00:10:32,856
[ Applause ]

221
00:10:33,356 --> 00:10:34,466
The next topic I want to talk

222
00:10:34,466 --> 00:10:36,016
about is a little

223
00:10:36,576 --> 00:10:39,506
And it is about mixing design

224
00:10:40,286 --> 00:10:43,216
There are situations where

225
00:10:43,216 --> 00:10:44,886
of thing where you are

226
00:10:44,886 --> 00:10:47,866
of Interface Builder and

227
00:10:47,936 --> 00:10:50,316
but you do not know all the

228
00:10:50,576 --> 00:10:52,956
to views until runtime,

229
00:10:52,956 --> 00:10:56,396
on information like time of day

230
00:10:56,396 --> 00:10:57,976
that only the run

231
00:10:58,936 --> 00:11:01,926
There are three tools and three

232
00:10:58,936 --> 00:11:01,926
There are three tools and three

233
00:11:01,926 --> 00:11:04,036
through for dealing with

234
00:11:05,436 --> 00:11:08,636
The first is the use of

235
00:11:09,746 --> 00:11:12,766
In this situation, I've got an

236
00:11:12,766 --> 00:11:17,896
and center it in my device both

237
00:11:17,896 --> 00:11:20,896
also a little bit inside

238
00:11:21,246 --> 00:11:23,566
I also want the image to

239
00:11:24,296 --> 00:11:26,316
However, I don't know what

240
00:11:26,316 --> 00:11:28,596
to be, not until runtime.

241
00:11:29,126 --> 00:11:33,246
And so, in order to assimilate

242
00:11:33,296 --> 00:11:35,766
so I can see the Interface

243
00:11:35,766 --> 00:11:37,526
and add a 4 by 3 aspect ratio,

244
00:11:37,526 --> 00:11:41,486
approximately what I think

245
00:11:41,486 --> 00:11:42,556
as a place order constraint.

246
00:11:43,076 --> 00:11:45,276
Therefore, it would be

247
00:11:46,756 --> 00:11:49,416
When I actually get the image

248
00:11:49,416 --> 00:11:51,076
in runtime, I'll go ahead

249
00:11:51,626 --> 00:11:56,076
and create the real aspect ratio

250
00:11:56,256 --> 00:11:59,746
For the second example,

251
00:11:59,746 --> 00:12:00,416
custom control.

252
00:11:59,746 --> 00:12:00,416
custom control.

253
00:12:00,976 --> 00:12:04,156
Your custom control is going

254
00:12:04,156 --> 00:12:06,116
like US -- UIView or NSview.

255
00:12:06,226 --> 00:12:08,706
It's going to provide its own

256
00:12:08,706 --> 00:12:09,996
to manage its own content.

257
00:12:10,266 --> 00:12:11,866
It may want to even

258
00:12:12,606 --> 00:12:15,516
It could provide that size

259
00:12:15,866 --> 00:12:20,656
by specifying its

260
00:12:20,866 --> 00:12:22,846
Interface Builder is

261
00:12:23,006 --> 00:12:26,056
and so it doesn't know what your

262
00:12:26,056 --> 00:12:28,906
to be, but you can simulate

263
00:12:28,946 --> 00:12:31,276
by giving it reasonable

264
00:12:31,276 --> 00:12:32,106
size placeholder.

265
00:12:32,736 --> 00:12:34,336
Therefore, you could

266
00:12:34,336 --> 00:12:35,486
to look like in your layout.

267
00:12:36,656 --> 00:12:39,026
Just remember for your custom

268
00:12:39,026 --> 00:12:40,166
to do this, that you do need

269
00:12:40,616 --> 00:12:42,926
to provide its real

270
00:12:42,926 --> 00:12:43,676
and you can do this

271
00:12:43,976 --> 00:12:46,706
by overriding the intrinsic

272
00:12:46,706 --> 00:12:47,566
on your custom control.

273
00:12:49,376 --> 00:12:52,306
The final example is the

274
00:12:53,206 --> 00:12:54,106
and I'm leaving it for last

275
00:12:54,146 --> 00:12:57,316
because it should also be the

276
00:12:57,636 --> 00:12:59,216
when you have exhausted

277
00:12:59,216 --> 00:13:02,866
for both placeholder

278
00:12:59,216 --> 00:13:02,866
for both placeholder

279
00:13:02,866 --> 00:13:04,926
and intrinsic content

280
00:13:05,266 --> 00:13:07,876
And so, we're giving

281
00:13:08,146 --> 00:13:12,436
to tune the ambiguity warning

282
00:13:13,226 --> 00:13:16,536
What that means is that for

283
00:13:16,536 --> 00:13:18,556
and center it on

284
00:13:18,896 --> 00:13:19,736
but that's all I know.

285
00:13:19,896 --> 00:13:22,776
I don't know what horizontal

286
00:13:22,776 --> 00:13:23,896
or what size it's going to be.

287
00:13:24,056 --> 00:13:27,336
In fact Interface Builder

288
00:13:27,336 --> 00:13:31,106
because it's warning me that it

289
00:13:31,486 --> 00:13:32,866
to be able to position it.

290
00:13:33,416 --> 00:13:34,286
It's ambiguous.

291
00:13:35,306 --> 00:13:37,786
I know that I'm going to be

292
00:13:37,786 --> 00:13:40,616
on at runtime when I have all

293
00:13:40,976 --> 00:13:45,086
so I can go ahead and remove

294
00:13:45,086 --> 00:13:48,236
from my work space by going

295
00:13:48,776 --> 00:13:52,756
and switching it from verifying

296
00:13:52,756 --> 00:13:56,486
for position or never verifying

297
00:13:56,486 --> 00:13:59,216
to myself I will add those

298
00:13:59,216 --> 00:14:04,166
that the view holds its size

299
00:13:59,216 --> 00:14:04,166
that the view holds its size

300
00:14:04,706 --> 00:14:06,446
These are the tools

301
00:14:06,446 --> 00:14:07,726
with designer runtime

302
00:14:07,726 --> 00:14:09,386
when you've exhausted

303
00:14:09,776 --> 00:14:12,326
of constraining everything you

304
00:14:12,386 --> 00:14:16,516
Well, what we've seen is how to

305
00:14:17,116 --> 00:14:19,086
and how to play well with

306
00:14:19,086 --> 00:14:21,096
and we're ready for the

307
00:14:21,396 --> 00:14:24,216
I'd like to invite up my

308
00:14:24,486 --> 00:14:26,166
to talk about what's

309
00:14:26,166 --> 00:14:26,976
Over to you, Jesse.

310
00:14:27,516 --> 00:14:32,500
[ Applause ]

311
00:14:38,696 --> 00:14:39,296
&gt;&gt; Hi, everyone.

312
00:14:39,496 --> 00:14:41,546
Today I'm going to tell

313
00:14:41,546 --> 00:14:45,076
a new layout container that

314
00:14:48,176 --> 00:14:51,766
So maintenance on constraints

315
00:14:51,766 --> 00:14:54,186
when you have something

316
00:14:54,186 --> 00:14:57,026
of checkboxes, and we've

317
00:14:57,026 --> 00:14:58,606
to make it easier to

318
00:14:58,606 --> 00:14:59,946
And it's great anytime you need

319
00:14:59,946 --> 00:15:02,636
to spread some items

320
00:14:59,946 --> 00:15:02,636
to spread some items

321
00:15:03,286 --> 00:15:06,976
But there's some kinds of layout

322
00:15:06,976 --> 00:15:08,886
to achieve like this,

323
00:15:08,886 --> 00:15:12,276
You can build this with stacks,

324
00:15:12,276 --> 00:15:13,626
to help you align the content

325
00:15:13,626 --> 00:15:15,756
across both the rows

326
00:15:16,356 --> 00:15:18,116
So that's why we've

327
00:15:18,206 --> 00:15:20,066
It makes it easy

328
00:15:20,066 --> 00:15:22,916
into an explicitly defined

329
00:15:22,916 --> 00:15:25,006
of alignment for you

330
00:15:25,916 --> 00:15:27,086
So let's have a closer look.

331
00:15:28,546 --> 00:15:30,806
I took this UI from our

332
00:15:30,806 --> 00:15:32,466
and I've added these

333
00:15:32,466 --> 00:15:34,826
to help you see how it

334
00:15:35,726 --> 00:15:39,416
NSGridView uses a couple of

335
00:15:39,416 --> 00:15:42,036
and NSGridColumn, to

336
00:15:42,506 --> 00:15:45,686
and by default they're sized

337
00:15:46,436 --> 00:15:50,346
You can also specify an explicit

338
00:15:51,486 --> 00:15:53,896
These also let you add

339
00:15:53,896 --> 00:15:56,196
if you need some extra space

340
00:15:56,366 --> 00:15:57,566
and if you have some UI

341
00:15:57,566 --> 00:16:00,396
that doesn't apply the

342
00:15:57,566 --> 00:16:00,396
that doesn't apply the

343
00:16:00,886 --> 00:16:03,156
then they can be

344
00:16:04,956 --> 00:16:08,776
NSGridView uses a

345
00:16:09,126 --> 00:16:10,816
to represent the

346
00:16:10,816 --> 00:16:14,386
and the job of a cell is

347
00:16:14,486 --> 00:16:16,196
for a particular content view.

348
00:16:17,586 --> 00:16:20,636
Cells also let you control

349
00:16:20,636 --> 00:16:23,756
if the cell has a bunch

350
00:16:24,056 --> 00:16:25,766
And if you have some

351
00:16:25,826 --> 00:16:29,116
to span the boundaries between

352
00:16:29,166 --> 00:16:31,446
as you might be familiar with

353
00:16:32,386 --> 00:16:35,746
So, I've built a smaller

354
00:16:35,746 --> 00:16:37,806
that still has all the

355
00:16:37,806 --> 00:16:39,536
and I want to go through

356
00:16:39,536 --> 00:16:41,186
and show you how it's built.

357
00:16:42,976 --> 00:16:46,476
So we intend to provide

358
00:16:46,476 --> 00:16:48,716
for NSGridView, but until

359
00:16:48,716 --> 00:16:49,636
to be working with the code.

360
00:16:50,016 --> 00:16:53,106
What I've done here is

361
00:16:53,106 --> 00:16:55,396
for all the controls that

362
00:16:56,076 --> 00:16:59,516
and then whenever you specify

363
00:17:00,146 --> 00:17:02,546
it will take care of

364
00:17:02,546 --> 00:17:03,666
of the grid if needed.

365
00:17:04,236 --> 00:17:06,616
This makes it really easy

366
00:17:06,616 --> 00:17:08,376
at run time and then

367
00:17:08,376 --> 00:17:09,846
into an existing view hierarchy.

368
00:17:11,455 --> 00:17:14,256
There's a few different ways

369
00:17:14,256 --> 00:17:15,896
I think this is the easiest one.

370
00:17:15,896 --> 00:17:18,126
All you need to do

371
00:17:18,126 --> 00:17:21,226
of the content views

372
00:17:21,986 --> 00:17:23,425
And let's get to a

373
00:17:23,536 --> 00:17:25,986
First, you don't have to

374
00:17:26,425 --> 00:17:29,166
It'll take care of however many

375
00:17:29,166 --> 00:17:30,516
for the content that

376
00:17:31,496 --> 00:17:34,156
Second, the code that you end

377
00:17:34,156 --> 00:17:37,046
up with is roughly

378
00:17:37,046 --> 00:17:40,226
at least highly correlated with

379
00:17:40,566 --> 00:17:43,036
This makes it much easier

380
00:17:43,036 --> 00:17:46,426
to come back later and find

381
00:17:46,506 --> 00:17:49,746
So, if we just run this,

382
00:17:50,176 --> 00:17:52,526
That's not too bad just for

383
00:17:52,626 --> 00:17:55,186
but it doesn't match the

384
00:17:55,666 --> 00:17:57,666
The most striking

385
00:17:57,666 --> 00:17:59,246
that the UI is very spread out.

386
00:17:59,246 --> 00:18:00,906
There are all these

387
00:17:59,246 --> 00:18:00,906
There are all these

388
00:18:01,656 --> 00:18:04,606
And this occurs because the

389
00:18:04,656 --> 00:18:05,936
to the edges of the window.

390
00:18:06,176 --> 00:18:08,326
Now when I did that,

391
00:18:08,326 --> 00:18:10,246
to make the window the

392
00:18:10,286 --> 00:18:11,906
but what actually happened was

393
00:18:11,906 --> 00:18:14,076
that the grid was

394
00:18:14,946 --> 00:18:17,366
If you've used Auto Layout

395
00:18:17,366 --> 00:18:19,256
you may have encountered

396
00:18:19,256 --> 00:18:21,436
with text fields

397
00:18:21,776 --> 00:18:23,706
And we're going to resolve

398
00:18:23,796 --> 00:18:26,536
by adjusting the content hugging

399
00:18:28,016 --> 00:18:30,536
So, the other controls in this

400
00:18:30,536 --> 00:18:32,676
content hugging from

401
00:18:33,696 --> 00:18:37,396
but until we raise the content

402
00:18:37,826 --> 00:18:39,536
then it's possible

403
00:18:39,536 --> 00:18:42,326
to actually pull the content

404
00:18:42,326 --> 00:18:43,406
from the rows and columns.

405
00:18:44,456 --> 00:18:47,356
Once we raise it, instead

406
00:18:47,356 --> 00:18:51,866
of the windows are pulled

407
00:18:52,196 --> 00:18:55,536
So, the next thing I'd like

408
00:18:55,766 --> 00:18:58,986
They're clearly laid

409
00:18:59,206 --> 00:19:01,906
but they really need to be

410
00:18:59,206 --> 00:19:01,906
but they really need to be

411
00:19:01,906 --> 00:19:03,846
up against the controls

412
00:19:05,216 --> 00:19:06,346
And this is easy to change

413
00:19:06,406 --> 00:19:09,596
by just adjusting the

414
00:19:10,136 --> 00:19:16,466
The x and y placement properties

415
00:19:16,466 --> 00:19:18,156
cells, and the grid view itself.

416
00:19:18,736 --> 00:19:22,286
The idea is that if the

417
00:19:22,286 --> 00:19:25,006
on the cell itself, then

418
00:19:25,006 --> 00:19:28,246
and column will be used or from

419
00:19:28,596 --> 00:19:31,416
This makes it very easy to

420
00:19:31,416 --> 00:19:34,216
and then have it affect

421
00:19:34,676 --> 00:19:37,546
So, in this case, we can

422
00:19:37,636 --> 00:19:40,636
from the grid view and just set

423
00:19:41,036 --> 00:19:44,326
and we'll see both of the labels

424
00:19:45,346 --> 00:19:46,516
The next thing I'd like to look

425
00:19:46,516 --> 00:19:49,406
at here is the baseline

426
00:19:49,786 --> 00:19:53,286
The text of the labels

427
00:19:53,286 --> 00:19:54,916
with the text in the controls.

428
00:19:54,916 --> 00:19:58,266
And it's subtle in the

429
00:19:58,266 --> 00:19:58,976
by adjusting the row alignment.

430
00:19:59,106 --> 00:20:03,386
Row alignment is inherited

431
00:19:59,106 --> 00:20:03,386
Row alignment is inherited

432
00:20:03,816 --> 00:20:05,366
and for this particular design,

433
00:20:05,366 --> 00:20:08,066
it's fine to just

434
00:20:08,066 --> 00:20:09,596
in the grid align by baseline.

435
00:20:09,706 --> 00:20:12,456
And so, we can set the value

436
00:20:12,456 --> 00:20:13,836
and it will affect everything.

437
00:20:14,526 --> 00:20:15,846
And if you look carefully,

438
00:20:15,846 --> 00:20:18,566
you'll see the text

439
00:20:19,836 --> 00:20:22,796
Now, one thing to keep in

440
00:20:22,796 --> 00:20:24,196
that you may have

441
00:20:24,196 --> 00:20:25,666
in your row that

442
00:20:26,246 --> 00:20:29,036
And then you may also specify

443
00:20:29,386 --> 00:20:31,986
So, in that kind of a case,

444
00:20:31,986 --> 00:20:33,816
to satisfy all the requests.

445
00:20:34,286 --> 00:20:37,146
And so, it's important

446
00:20:37,146 --> 00:20:39,186
that the row alignment

447
00:20:39,266 --> 00:20:40,086
over the placement.

448
00:20:40,086 --> 00:20:42,456
The way it works is that

449
00:20:42,456 --> 00:20:43,966
of aligned content views

450
00:20:43,966 --> 00:20:45,846
and then we'll place

451
00:20:45,926 --> 00:20:49,836
from the first cell.

452
00:20:50,046 --> 00:20:53,696
So, the next piece I'd like to

453
00:20:53,696 --> 00:20:56,536
The design has a little

454
00:20:56,536 --> 00:20:59,816
and below the pop-up button,

455
00:20:59,816 --> 00:21:02,456
in our layout by adding

456
00:20:59,816 --> 00:21:02,456
in our layout by adding

457
00:21:03,046 --> 00:21:07,496
So, the first thing we need

458
00:21:08,156 --> 00:21:09,686
We could actually

459
00:21:09,686 --> 00:21:12,996
that we got the column before

460
00:21:13,326 --> 00:21:14,976
but this way is a

461
00:21:15,726 --> 00:21:18,356
Instead, we ask the

462
00:21:18,356 --> 00:21:20,036
that contains this

463
00:21:20,036 --> 00:21:21,796
and then from the

464
00:21:22,606 --> 00:21:24,996
This is better because if

465
00:21:25,476 --> 00:21:28,626
and changes the configuration of

466
00:21:28,626 --> 00:21:31,076
or something like that, this

467
00:21:31,546 --> 00:21:34,336
If you fill your code with a

468
00:21:34,386 --> 00:21:36,846
then as soon as someone adds

469
00:21:36,846 --> 00:21:38,436
and review all of

470
00:21:38,436 --> 00:21:40,306
which of the indices

471
00:21:41,506 --> 00:21:46,516
And in any case, once we

472
00:21:46,566 --> 00:21:49,176
and set the padding

473
00:21:49,176 --> 00:21:50,866
that we get a little

474
00:21:50,956 --> 00:21:52,016
above and below the pop-up.

475
00:21:53,246 --> 00:21:55,936
We need a little space over

476
00:21:57,046 --> 00:22:01,966
and we can achieve

477
00:21:57,046 --> 00:22:01,966
and we can achieve

478
00:22:02,796 --> 00:22:05,346
So, I want to take a moment here

479
00:22:05,346 --> 00:22:06,936
between padding and spacing.

480
00:22:06,936 --> 00:22:08,736
We haven't really talked

481
00:22:09,326 --> 00:22:12,046
The padding values are

482
00:22:12,046 --> 00:22:14,916
and they are just for adding

483
00:22:14,916 --> 00:22:16,336
where you need it in your grid.

484
00:22:16,806 --> 00:22:19,826
The spacing values are available

485
00:22:19,826 --> 00:22:21,306
and they apply to the spaces

486
00:22:21,306 --> 00:22:23,476
between all the rows

487
00:22:24,126 --> 00:22:29,406
So, if we take a copy of the

488
00:22:29,406 --> 00:22:31,636
of the padding, then

489
00:22:31,636 --> 00:22:33,916
The UI is still properly

490
00:22:33,916 --> 00:22:35,496
but we lose the visual

491
00:22:35,496 --> 00:22:37,276
between the different

492
00:22:37,766 --> 00:22:40,386
If instead we keep the

493
00:22:40,386 --> 00:22:42,836
out all the spacing,

494
00:22:43,296 --> 00:22:45,186
We still have our

495
00:22:45,486 --> 00:22:47,656
but the UI is very

496
00:22:48,216 --> 00:22:51,136
And of course if you remove

497
00:22:51,136 --> 00:22:53,396
where the whole thing is

498
00:22:54,626 --> 00:22:56,476
So, an important thing

499
00:22:56,476 --> 00:22:58,626
that the padding properties

500
00:22:58,946 --> 00:23:02,976
You won't have any padding in

501
00:22:58,946 --> 00:23:02,976
You won't have any padding in

502
00:23:02,976 --> 00:23:05,896
But you almost always want some

503
00:23:05,896 --> 00:23:10,726
and so the spacing on the grid

504
00:23:10,846 --> 00:23:13,466
If your use case requires

505
00:23:13,466 --> 00:23:15,906
out immediately next to each

506
00:23:15,906 --> 00:23:18,746
to the grid view and set those

507
00:23:19,326 --> 00:23:24,026
The last piece that's really out

508
00:23:24,026 --> 00:23:25,746
and it's an interesting

509
00:23:25,746 --> 00:23:28,126
to span the boundary between

510
00:23:28,656 --> 00:23:30,436
But we can do that

511
00:23:30,646 --> 00:23:32,186
like I mentioned in

512
00:23:33,326 --> 00:23:35,946
There are a few methods

513
00:23:35,946 --> 00:23:38,406
we can just tell the row to

514
00:23:38,916 --> 00:23:43,336
And when you do this, it has the

515
00:23:43,406 --> 00:23:46,376
of the top leading cell to

516
00:23:46,376 --> 00:23:52,706
So with this code in effect

517
00:23:52,756 --> 00:23:55,566
and now this content view is

518
00:23:55,566 --> 00:23:56,856
as if they were the same one.

519
00:23:56,856 --> 00:23:59,436
And in fact, you can see it's

520
00:23:59,486 --> 00:24:00,916
placement from that

521
00:23:59,486 --> 00:24:00,916
placement from that

522
00:24:01,476 --> 00:24:05,336
We don't really want it to

523
00:24:05,786 --> 00:24:08,036
but we don't want to have

524
00:24:08,436 --> 00:24:10,836
This checkbox is actually

525
00:24:10,836 --> 00:24:12,916
on the boundary between

526
00:24:13,746 --> 00:24:17,306
So, because the columns

527
00:24:17,306 --> 00:24:19,076
this isn't something that

528
00:24:19,076 --> 00:24:20,266
for you out of the box.

529
00:24:20,566 --> 00:24:22,996
But it does leave you room

530
00:24:24,146 --> 00:24:27,706
And that starts by setting a

531
00:24:28,266 --> 00:24:30,656
When you set these

532
00:24:31,406 --> 00:24:34,766
it has the effect of causing the

533
00:24:34,956 --> 00:24:36,106
that aspect of the layout.

534
00:24:37,076 --> 00:24:38,236
And what that buys us is

535
00:24:38,236 --> 00:24:40,326
that the grid view won't

536
00:24:40,326 --> 00:24:42,066
that might conflict

537
00:24:42,566 --> 00:24:45,336
So, once that's done, we can

538
00:24:45,406 --> 00:24:49,176
from the checkbox's center x

539
00:24:49,316 --> 00:24:51,526
of the checkbox above it.

540
00:24:51,706 --> 00:24:53,146
And then once we

541
00:24:53,146 --> 00:24:54,626
we could actually

542
00:24:54,626 --> 00:24:56,306
like you normally would

543
00:24:56,866 --> 00:24:58,536
But in this case,

544
00:24:58,536 --> 00:25:00,456
in the custom placement

545
00:24:58,536 --> 00:25:00,456
in the custom placement

546
00:25:01,566 --> 00:25:04,366
If you do that, then

547
00:25:04,366 --> 00:25:07,246
to maintain any custom

548
00:25:07,246 --> 00:25:09,176
and it will do things

549
00:25:09,176 --> 00:25:11,356
and deactivate the

550
00:25:11,356 --> 00:25:12,486
or not the cell is visible.

551
00:25:13,916 --> 00:25:17,836
So, with this code into place,

552
00:25:17,836 --> 00:25:21,136
into position, and the

553
00:25:21,216 --> 00:25:21,696
the design.

554
00:25:22,126 --> 00:25:22,846
We're finished.

555
00:25:23,246 --> 00:25:26,356
Some pieces of the grid

556
00:25:26,356 --> 00:25:29,286
bit complicated, but the whole

557
00:25:29,286 --> 00:25:30,996
that if you needed

558
00:25:31,456 --> 00:25:33,876
from basic constraints

559
00:25:34,526 --> 00:25:37,866
In fact, there's not a lot

560
00:25:37,866 --> 00:25:41,056
to expand this to the

561
00:25:41,056 --> 00:25:42,646
from the voiceover preferences.

562
00:25:43,676 --> 00:25:46,446
So, to summarize,

563
00:25:46,506 --> 00:25:49,156
if your application has

564
00:25:49,156 --> 00:25:50,586
that you need to manage.

565
00:25:51,406 --> 00:25:53,986
And a great way to start

566
00:25:53,986 --> 00:25:55,176
of your content views

567
00:25:55,176 --> 00:25:56,736
into a grid and see

568
00:25:56,736 --> 00:26:00,026
At that point, you can

569
00:25:56,736 --> 00:26:00,026
At that point, you can

570
00:26:00,026 --> 00:26:02,486
of your grid until you've

571
00:26:02,596 --> 00:26:03,356
that you're looking for.

572
00:26:03,626 --> 00:26:04,766
I hope you find it useful.

573
00:26:04,766 --> 00:26:08,436
Next, I'd like to bring out

574
00:26:08,436 --> 00:26:09,636
who's going to talk to you

575
00:26:09,636 --> 00:26:11,596
about some new debugging

576
00:26:11,596 --> 00:26:11,776
Thank you.

577
00:26:12,516 --> 00:26:19,176
[ Applause ]

578
00:26:19,676 --> 00:26:22,436
&gt;&gt; It doesn't happen often,

579
00:26:22,766 --> 00:26:24,576
and then that turns

580
00:26:24,956 --> 00:26:26,516
and it can be hard to debug.

581
00:26:26,896 --> 00:26:28,566
And that's a layout

582
00:26:28,566 --> 00:26:31,326
When you encounter a

583
00:26:31,326 --> 00:26:33,966
you're usually beginning

584
00:26:34,166 --> 00:26:35,646
and it might be something

585
00:26:35,956 --> 00:26:38,916
You tap the button to

586
00:26:39,366 --> 00:26:43,336
and the button responds,

587
00:26:44,226 --> 00:26:46,416
So, you're running on

588
00:26:46,416 --> 00:26:51,316
in the debugging navigator, and

589
00:26:52,076 --> 00:26:56,646
memory's increasing, and

590
00:26:56,646 --> 00:26:59,046
and you just see a bunch

591
00:26:59,566 --> 00:27:03,146
And what's happening is that

592
00:26:59,566 --> 00:27:03,146
And what's happening is that

593
00:27:03,406 --> 00:27:05,956
of views that are running

594
00:27:05,956 --> 00:27:07,796
and again in a tight loop.

595
00:27:08,226 --> 00:27:09,596
The run loop's never turning.

596
00:27:10,056 --> 00:27:12,066
Any messages that are

597
00:27:12,066 --> 00:27:14,236
to autorelease objects,

598
00:27:14,306 --> 00:27:16,216
So that's why the

599
00:27:17,036 --> 00:27:21,236
And what's driving this is

600
00:27:21,606 --> 00:27:23,236
And what I mean by that is one

601
00:27:23,236 --> 00:27:25,956
of the [inaudible] views during

602
00:27:26,216 --> 00:27:28,766
that is causing a more

603
00:27:29,026 --> 00:27:32,906
to get a setNeedsLayout so

604
00:27:33,016 --> 00:27:35,246
it goes right back to

605
00:27:35,616 --> 00:27:39,676
and what you want to know

606
00:27:40,216 --> 00:27:42,946
because that's going to

607
00:27:42,946 --> 00:27:45,466
that setNeedsLayout

608
00:27:45,466 --> 00:27:47,086
and what you're going

609
00:27:47,566 --> 00:27:50,166
This information is actually

610
00:27:50,916 --> 00:27:55,766
So, that's why we're introducing

611
00:27:55,766 --> 00:27:57,666
to help with these

612
00:27:58,436 --> 00:28:01,856
This is a launch argument

613
00:27:58,436 --> 00:28:01,856
This is a launch argument

614
00:28:01,856 --> 00:28:03,036
It's the UIView

615
00:28:03,036 --> 00:28:07,116
or NSViewLayoutFeedbackLoop

616
00:28:07,836 --> 00:28:10,776
depending on whether

617
00:28:11,336 --> 00:28:12,746
And you give it a value.

618
00:28:12,746 --> 00:28:14,206
I've used 100 here.

619
00:28:14,496 --> 00:28:19,336
You can use any value, but we'll

620
00:28:20,586 --> 00:28:22,506
Now when you've got this

621
00:28:22,866 --> 00:28:26,156
the layout feedback loop

622
00:28:26,156 --> 00:28:28,326
subviews for every

623
00:28:28,616 --> 00:28:32,096
and if any of them run

624
00:28:32,096 --> 00:28:33,876
within the same turn

625
00:28:33,926 --> 00:28:35,956
it will then allow

626
00:28:35,956 --> 00:28:38,466
for a little bit while

627
00:28:38,466 --> 00:28:41,306
Then it will throw --

628
00:28:41,306 --> 00:28:42,976
that information into the logs.

629
00:28:43,576 --> 00:28:48,256
It dumps it to the

630
00:28:48,256 --> 00:28:50,446
or the com.apple.UIKit

631
00:28:50,446 --> 00:28:52,426
depending on whether

632
00:28:52,696 --> 00:28:54,846
in both cases the

633
00:28:55,346 --> 00:28:57,926
If you want to know more about

634
00:28:57,926 --> 00:29:00,856
and categories, come to the

635
00:28:57,926 --> 00:29:00,856
and categories, come to the

636
00:29:00,856 --> 00:29:03,676
at Knob Hill on the unified

637
00:29:04,726 --> 00:29:08,046
Alternatively, you can set a

638
00:29:08,046 --> 00:29:09,206
an exception break point.

639
00:29:09,526 --> 00:29:11,826
And you can print the

640
00:29:11,826 --> 00:29:14,086
or it's also nice to

641
00:29:14,086 --> 00:29:20,266
and maybe introspect what's

642
00:29:20,486 --> 00:29:23,846
So, I said info dump,

643
00:29:24,096 --> 00:29:26,416
So we're going to go

644
00:29:26,416 --> 00:29:29,566
of real live layout feedback

645
00:29:29,566 --> 00:29:31,206
with the layout feedback

646
00:29:31,526 --> 00:29:33,816
Now we're going to look at

647
00:29:34,186 --> 00:29:35,416
and hopefully a walkthrough

648
00:29:35,416 --> 00:29:37,226
of two different logs

649
00:29:37,496 --> 00:29:40,846
We're going to look at a layout

650
00:29:40,846 --> 00:29:42,356
by an upstream setNeedsLayout.

651
00:29:42,796 --> 00:29:46,726
This is actually independent

652
00:29:46,726 --> 00:29:50,366
that was caused by ambiguous

653
00:29:50,366 --> 00:29:52,156
which is very special

654
00:29:53,086 --> 00:29:57,136
So for the first example with

655
00:29:58,156 --> 00:30:01,166
here's a graph of the view tree

656
00:29:58,156 --> 00:30:01,166
here's a graph of the view tree

657
00:30:01,806 --> 00:30:03,926
where the feedback

658
00:30:04,486 --> 00:30:07,906
And a lot of view in that

659
00:30:08,826 --> 00:30:09,966
running layout.

660
00:30:10,196 --> 00:30:13,076
Often you're lucky and

661
00:30:13,076 --> 00:30:14,896
and ones like this your

662
00:30:15,296 --> 00:30:18,706
But it turned out that ten

663
00:30:18,926 --> 00:30:21,866
They were innocent victims

664
00:30:21,866 --> 00:30:23,886
that was happening higher

665
00:30:24,246 --> 00:30:26,786
So, what was going on was

666
00:30:26,976 --> 00:30:30,506
during its layout, was changing

667
00:30:31,176 --> 00:30:32,776
Now when a views bounds change,

668
00:30:32,776 --> 00:30:34,376
it gets an implicit

669
00:30:34,806 --> 00:30:35,796
because it will need

670
00:30:35,796 --> 00:30:37,586
to re position its views

671
00:30:37,926 --> 00:30:41,626
But also if that view that's

672
00:30:41,916 --> 00:30:44,986
if its superview is

673
00:30:45,186 --> 00:30:47,836
the superview will also

674
00:30:48,036 --> 00:30:50,266
so that layout subviews

675
00:30:50,266 --> 00:30:51,316
on what the layout is.

676
00:30:51,946 --> 00:30:54,986
So when the layout pass gets

677
00:30:54,986 --> 00:30:58,126
it goes back to the top,

678
00:30:58,126 --> 00:31:00,116
because that top view

679
00:30:58,126 --> 00:31:00,116
because that top view

680
00:31:00,446 --> 00:31:03,226
which resets the bounds

681
00:31:03,506 --> 00:31:08,096
And the feedback loop is powered

682
00:31:08,096 --> 00:31:09,726
over the bounds of the

683
00:31:11,126 --> 00:31:13,406
As you can imagine, there's

684
00:31:13,846 --> 00:31:15,816
So, there's a lot of

685
00:31:15,816 --> 00:31:16,796
So brace yourself.

686
00:31:17,466 --> 00:31:20,986
This is what the log looks like,

687
00:31:20,986 --> 00:31:22,266
which is where I

688
00:31:22,266 --> 00:31:23,416
when you look at

689
00:31:23,926 --> 00:31:27,396
The first thing that's called

690
00:31:27,616 --> 00:31:29,246
that -- of the layout

691
00:31:29,246 --> 00:31:31,986
So, in this loop there

692
00:31:31,986 --> 00:31:33,366
than this view that's

693
00:31:34,066 --> 00:31:38,226
Following that is a recursive

694
00:31:38,226 --> 00:31:39,656
under that top-level view.

695
00:31:40,006 --> 00:31:43,036
And next to some of the views

696
00:31:43,036 --> 00:31:45,006
in that description,

697
00:31:45,006 --> 00:31:46,896
For instance, the -- you

698
00:31:46,896 --> 00:31:47,756
to the top-level view.

699
00:31:47,756 --> 00:31:49,086
In this case it's 23.

700
00:31:49,616 --> 00:31:52,796
Those numbers, the ones with

701
00:31:52,796 --> 00:31:54,116
that are actually

702
00:31:54,116 --> 00:31:55,566
and the numbers are in ordering.

703
00:31:55,906 --> 00:31:58,376
Of course, it's a cycle,

704
00:31:58,376 --> 00:32:01,376
But we do it so that the last

705
00:31:58,376 --> 00:32:01,376
But we do it so that the last

706
00:32:01,376 --> 00:32:03,366
so it gives you an idea of

707
00:32:04,126 --> 00:32:07,696
So, that's a 23, but there

708
00:32:07,746 --> 00:32:11,046
and there is three up here,

709
00:32:11,046 --> 00:32:12,166
So, what happened?

710
00:32:12,686 --> 00:32:15,686
Well, let's go look at the

711
00:32:15,956 --> 00:32:18,536
which is the views

712
00:32:19,106 --> 00:32:23,586
And in this section,

713
00:32:23,586 --> 00:32:25,616
because there is one loop

714
00:32:25,616 --> 00:32:27,636
that lays out in

715
00:32:27,936 --> 00:32:30,616
We have ten views

716
00:32:31,036 --> 00:32:32,546
followed by another two views,

717
00:32:32,796 --> 00:32:34,976
followed by those

718
00:32:35,516 --> 00:32:37,546
And so, those where the

719
00:32:37,546 --> 00:32:39,686
And when you see this situation,

720
00:32:39,686 --> 00:32:46,326
that lay out more than once in

721
00:32:46,326 --> 00:32:48,896
of the other ones that

722
00:32:49,996 --> 00:32:53,306
So, as I said early on,

723
00:32:53,306 --> 00:32:58,076
in where is the top-level view

724
00:32:58,906 --> 00:33:03,976
So, following this

725
00:32:58,906 --> 00:33:03,976
So, following this

726
00:33:03,976 --> 00:33:04,776
about the actual --

727
00:33:04,866 --> 00:33:06,516
what's actually happening

728
00:33:06,966 --> 00:33:09,266
So, we're going to scroll

729
00:33:09,266 --> 00:33:13,806
of the log to a section

730
00:33:13,806 --> 00:33:15,506
to the top-level view.

731
00:33:15,506 --> 00:33:18,936
So, it's down there, and you

732
00:33:19,126 --> 00:33:22,566
Now, there can be more

733
00:33:22,846 --> 00:33:25,016
You know, usually

734
00:33:25,016 --> 00:33:28,966
This was a pretty refractory

735
00:33:29,246 --> 00:33:30,016
They're pretty similar.

736
00:33:30,016 --> 00:33:31,496
So, I'm only going to

737
00:33:31,836 --> 00:33:35,466
At the top of the backtrace

738
00:33:35,466 --> 00:33:39,146
for the feedback loop debugger,

739
00:33:39,146 --> 00:33:42,946
that in frame five, you see

740
00:33:42,946 --> 00:33:43,766
set bounds.

741
00:33:44,326 --> 00:33:47,616
And if you remember from

742
00:33:47,616 --> 00:33:51,096
the DropShadowView was the

743
00:33:51,406 --> 00:33:53,366
So, the only way that set bounds

744
00:33:53,366 --> 00:33:55,566
of the DropShadowView could

745
00:33:55,566 --> 00:33:56,956
on the TransitionView would be

746
00:33:56,956 --> 00:33:58,896
because the TransitionView

747
00:33:59,286 --> 00:34:04,306
So, that view in frame seven

748
00:33:59,286 --> 00:34:04,306
So, that view in frame seven

749
00:34:04,306 --> 00:34:05,016
the TransitionView.

750
00:34:05,016 --> 00:34:05,676
It's something else.

751
00:34:05,676 --> 00:34:08,846
But we don't have that

752
00:34:08,846 --> 00:34:11,295
I didn't have symbols

753
00:34:11,505 --> 00:34:14,076
So there, they are

754
00:34:14,076 --> 00:34:15,536
Furthermore, it could be a view.

755
00:34:15,666 --> 00:34:18,376
We're lucky here because it's

756
00:34:18,376 --> 00:34:20,356
receiving set bounds,

757
00:34:20,356 --> 00:34:22,386
but it could be a view

758
00:34:23,005 --> 00:34:26,565
But hopefully between the

759
00:34:26,565 --> 00:34:29,146
and the information from

760
00:34:29,146 --> 00:34:30,826
in the details you're

761
00:34:30,826 --> 00:34:33,646
And so, what we are interested

762
00:34:33,646 --> 00:34:35,356
for the DropShadowView.

763
00:34:35,985 --> 00:34:36,985
So, we scroll back up,

764
00:34:36,985 --> 00:34:39,166
and we find where that

765
00:34:39,166 --> 00:34:41,835
So, this is under some

766
00:34:42,456 --> 00:34:47,696
And we see that in fact

767
00:34:47,696 --> 00:34:49,646
to bounds changes and

768
00:34:49,835 --> 00:34:51,746
change are repeating

769
00:34:52,096 --> 00:34:54,916
And two of those changes

770
00:34:54,916 --> 00:34:57,566
on the TransitionView, which is

771
00:34:58,106 --> 00:35:02,256
But one of them is coming from

772
00:34:58,106 --> 00:35:02,256
But one of them is coming from

773
00:35:02,546 --> 00:35:06,926
of a particular view controller

774
00:35:06,926 --> 00:35:08,006
of the TransitionView.

775
00:35:08,466 --> 00:35:13,076
So, we've located our problem,

776
00:35:13,076 --> 00:35:17,326
for the programmer to

777
00:35:17,326 --> 00:35:21,376
to achieve their ends that don't

778
00:35:21,376 --> 00:35:23,886
of a superview during layout.

779
00:35:24,306 --> 00:35:30,266
All right, so now we're taking

780
00:35:30,266 --> 00:35:32,776
to example two, which

781
00:35:33,586 --> 00:35:35,006
of feedback loop entirely.

782
00:35:36,206 --> 00:35:39,166
For those of you who have

783
00:35:39,466 --> 00:35:41,816
to do anything very

784
00:35:41,816 --> 00:35:43,726
into the problem of

785
00:35:44,246 --> 00:35:47,436
And ambiguous layout is

786
00:35:47,756 --> 00:35:51,026
Usually you get maybe a

787
00:35:51,026 --> 00:35:54,296
And you're like where did my

788
00:35:54,296 --> 00:35:59,986
the layout is what you want

789
00:35:59,986 --> 00:36:02,826
the device or something and

790
00:35:59,986 --> 00:36:02,826
the device or something and

791
00:36:04,246 --> 00:36:06,766
But sometimes you're

792
00:36:06,766 --> 00:36:08,216
and during the update

793
00:36:08,216 --> 00:36:11,886
that precede layout, you

794
00:36:12,186 --> 00:36:14,436
And if that ambiguity

795
00:36:14,786 --> 00:36:18,326
then variable changes

796
00:36:18,326 --> 00:36:20,906
and each time it'll

797
00:36:20,906 --> 00:36:22,236
And so you get this cycle.

798
00:36:23,596 --> 00:36:27,686
Now an ambiguous layout as

799
00:36:27,686 --> 00:36:29,776
to something that's really

800
00:36:29,776 --> 00:36:33,596
that gets you scratching your

801
00:36:33,886 --> 00:36:36,726
So, that's why when

802
00:36:36,726 --> 00:36:38,586
we call it out at

803
00:36:38,786 --> 00:36:40,396
So they're already

804
00:36:41,086 --> 00:36:44,326
And so, it says ambiguous

805
00:36:44,326 --> 00:36:46,746
And then when you look at

806
00:36:47,036 --> 00:36:50,316
you see ambiguous layout all

807
00:36:50,316 --> 00:36:51,276
it's pretty suspicious.

808
00:36:52,136 --> 00:36:54,236
I'm going to digress

809
00:36:54,556 --> 00:36:59,026
because I have abbreviated

810
00:36:59,066 --> 00:37:01,116
to make them fit

811
00:36:59,066 --> 00:37:01,116
to make them fit

812
00:37:01,506 --> 00:37:03,086
And -- but there's an

813
00:37:03,086 --> 00:37:04,386
that you might not recognize

814
00:37:04,746 --> 00:37:07,196
that is actually

815
00:37:07,196 --> 00:37:08,156
And that's the tAMIC.

816
00:37:08,386 --> 00:37:10,816
You see that right there were

817
00:37:11,216 --> 00:37:13,976
So tAMIC stands for

818
00:37:13,976 --> 00:37:16,846
into Constraints, and now

819
00:37:17,346 --> 00:37:19,346
[ Laughter ]

820
00:37:19,676 --> 00:37:22,506
At any rate, so were pretty sure

821
00:37:22,506 --> 00:37:24,396
that ambiguous layout

822
00:37:24,996 --> 00:37:27,046
And we could go look

823
00:37:27,046 --> 00:37:28,836
for the setNeedsLayout is

824
00:37:28,836 --> 00:37:30,096
But I'm not going

825
00:37:30,096 --> 00:37:33,046
All that's in there is internal

826
00:37:33,556 --> 00:37:34,896
And it's not helpful to us.

827
00:37:35,136 --> 00:37:36,906
So, in this case, we need

828
00:37:36,906 --> 00:37:40,746
and the details here are

829
00:37:40,746 --> 00:37:44,206
with variable changes that

830
00:37:44,856 --> 00:37:49,016
And one thing you

831
00:37:49,016 --> 00:37:51,216
about ambiguous layout

832
00:37:51,546 --> 00:37:53,796
So, you might just be missing

833
00:37:54,286 --> 00:37:56,056
But a bunch of views

834
00:37:56,056 --> 00:37:58,116
because they're all kind

835
00:37:58,586 --> 00:38:02,766
So, you may have a lot of these,

836
00:37:58,586 --> 00:38:02,766
So, you may have a lot of these,

837
00:38:02,766 --> 00:38:03,976
and once that's fixed up,

838
00:38:04,426 --> 00:38:07,056
a whole lot of the rest will

839
00:38:07,656 --> 00:38:08,386
So you look at this.

840
00:38:08,386 --> 00:38:14,056
You see that the min x variable

841
00:38:14,056 --> 00:38:16,696
and minus 160, which is

842
00:38:17,196 --> 00:38:20,216
And because it's ambiguous

843
00:38:20,596 --> 00:38:22,556
that are affecting the layout,

844
00:38:22,826 --> 00:38:24,376
which you can then

845
00:38:24,376 --> 00:38:26,236
and get some idea

846
00:38:26,336 --> 00:38:29,586
I'm going to go over now

847
00:38:29,906 --> 00:38:33,216
because it can be intimidating

848
00:38:33,866 --> 00:38:36,976
And drawing pictures is the

849
00:38:37,346 --> 00:38:41,056
I like to start with a graph of

850
00:38:41,056 --> 00:38:43,466
that are in -- that are

851
00:38:43,746 --> 00:38:45,616
And fortunately for

852
00:38:45,616 --> 00:38:47,196
the views were all

853
00:38:47,196 --> 00:38:48,806
so I could label them for you.

854
00:38:48,806 --> 00:38:52,406
And the next thing I drew

855
00:38:52,676 --> 00:38:53,876
of what the constraints were.

856
00:38:54,186 --> 00:38:57,126
So the constraints

857
00:38:57,126 --> 00:39:00,016
and trailing padding for the

858
00:38:57,126 --> 00:39:00,016
and trailing padding for the

859
00:39:00,556 --> 00:39:03,136
And there was a centering

860
00:39:03,136 --> 00:39:05,026
between the container

861
00:39:05,116 --> 00:39:08,496
And then the action view had

862
00:39:08,526 --> 00:39:11,076
positioning it within

863
00:39:11,076 --> 00:39:12,696
kind of positioning

864
00:39:12,696 --> 00:39:14,746
Something's definitely funky

865
00:39:15,406 --> 00:39:18,246
And finally there's an alignment

866
00:39:18,486 --> 00:39:20,806
between the representation

867
00:39:21,356 --> 00:39:24,196
But there's nothing that

868
00:39:24,196 --> 00:39:27,216
this whole view hierarchy needs

869
00:39:27,626 --> 00:39:29,806
So, that's how we

870
00:39:30,116 --> 00:39:34,116
and the layout feedback loop.

871
00:39:34,746 --> 00:39:37,116
So that's layout

872
00:39:37,546 --> 00:39:39,786
It's a launch argument.

873
00:39:39,786 --> 00:39:41,136
You won't need to use often.

874
00:39:41,136 --> 00:39:43,356
But when you do, it should

875
00:39:43,946 --> 00:39:46,376
And to recap, we saw the --

876
00:39:46,376 --> 00:39:49,376
how you can incrementally

877
00:39:49,376 --> 00:39:50,436
and Interface Builder.

878
00:39:50,826 --> 00:39:53,946
In AppKit, there's NSGridView

879
00:39:53,946 --> 00:39:56,406
If you'd like to see that

880
00:39:56,406 --> 00:39:57,496
in Apple Bug Reporter.

881
00:39:57,816 --> 00:39:59,896
Finally, we have the

882
00:39:59,896 --> 00:40:00,936
debugging threshold.

883
00:39:59,896 --> 00:40:00,936
debugging threshold.

884
00:40:01,436 --> 00:40:05,616
More information on the Dub-Dub

885
00:40:05,616 --> 00:40:06,976
of the afternoon, and

886
00:40:07,516 --> 00:40:10,500
[ Applause ]
