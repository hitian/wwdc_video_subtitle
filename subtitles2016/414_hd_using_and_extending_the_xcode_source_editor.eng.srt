1
00:00:07,516 --> 00:00:21,516
[ Music ]

2
00:00:22,516 --> 00:00:27,856
[ Applause ]

3
00:00:28,356 --> 00:00:30,746
&gt;&gt; Hi everyone, welcome to using

4
00:00:30,746 --> 00:00:32,426
and extending the

5
00:00:33,026 --> 00:00:36,506
I'm Mike and I work on Xcode

6
00:00:36,506 --> 00:00:37,556
between you and the

7
00:00:39,206 --> 00:00:41,546
So what are we talking

8
00:00:42,136 --> 00:00:45,416
Well I'm going to start off and

9
00:00:45,416 --> 00:00:48,336
that we've added to Xcode

10
00:00:48,446 --> 00:00:50,406
I'd also like to show you

11
00:00:50,436 --> 00:00:53,266
that are already in the

12
00:00:53,266 --> 00:00:55,346
that I think you probably

13
00:00:55,346 --> 00:00:56,466
but I think they're really cool.

14
00:00:57,466 --> 00:00:59,396
And I use them every

15
00:00:59,396 --> 00:01:01,106
and navigate the

16
00:00:59,396 --> 00:01:01,106
and navigate the

17
00:01:01,966 --> 00:01:04,186
And just to be clear,

18
00:01:04,186 --> 00:01:07,546
to show you comes

19
00:01:08,226 --> 00:01:11,266
Then, my colleague Chris,

20
00:01:11,496 --> 00:01:14,156
and show you how to go

21
00:01:14,556 --> 00:01:17,016
and further extend the Xcode

22
00:01:18,206 --> 00:01:21,326
You can write the extensions

23
00:01:21,326 --> 00:01:22,956
of the things you've

24
00:01:22,956 --> 00:01:25,146
and then you can even

25
00:01:25,296 --> 00:01:26,876
with your friends,

26
00:01:27,016 --> 00:01:27,916
or even the whole world.

27
00:01:28,366 --> 00:01:30,326
The first thing you'll

28
00:01:30,726 --> 00:01:34,676
or if you just looked up and

29
00:01:34,676 --> 00:01:37,696
is our new source

30
00:01:37,856 --> 00:01:40,406
This is the mono

31
00:01:40,406 --> 00:01:41,906
to our system font

32
00:01:42,386 --> 00:01:46,136
Our font experts have

33
00:01:46,296 --> 00:01:47,766
for retina displays.

34
00:01:47,766 --> 00:01:50,716
And have carefully designed

35
00:01:50,716 --> 00:01:52,896
for code punctuation

36
00:01:52,896 --> 00:01:54,816
and legible, even

37
00:01:55,216 --> 00:01:58,486
The next thing you'll notice

38
00:01:58,486 --> 00:02:03,006
in the editor, is that we have

39
00:01:58,486 --> 00:02:03,006
in the editor, is that we have

40
00:02:03,006 --> 00:02:05,476
that shows you where

41
00:02:06,406 --> 00:02:10,545
Each of our built-in

42
00:02:10,846 --> 00:02:14,406
hand tuned highlight color,

43
00:02:14,496 --> 00:02:17,546
So you can change it to be

44
00:02:17,546 --> 00:02:19,946
to completely transparent

45
00:02:20,396 --> 00:02:24,196
So you're probably already

46
00:02:24,196 --> 00:02:26,786
and uncomment command,

47
00:02:27,876 --> 00:02:31,086
Well we've added a new command

48
00:02:31,086 --> 00:02:33,956
by dropping the option

49
00:02:34,776 --> 00:02:37,406
and that inserts a

50
00:02:38,516 --> 00:02:43,686
[ Applause ]

51
00:02:44,186 --> 00:02:49,606
So, this works directly on or

52
00:02:49,896 --> 00:02:53,086
anything that you know is

53
00:02:53,216 --> 00:02:58,076
And, you'll notice that these

54
00:02:58,076 --> 00:03:00,866
give you a chance to

55
00:02:58,076 --> 00:03:00,866
give you a chance to

56
00:03:00,916 --> 00:03:05,206
or discuss the parameters, the,

57
00:03:05,426 --> 00:03:07,576
or you know, say

58
00:03:07,576 --> 00:03:08,476
about the return value.

59
00:03:09,306 --> 00:03:13,256
And what's really valuable is

60
00:03:13,256 --> 00:03:16,226
that you add in the code

61
00:03:16,226 --> 00:03:19,116
and at the bottom of the

62
00:03:19,116 --> 00:03:24,616
And also notice that we've

63
00:03:24,906 --> 00:03:27,586
with more weights than

64
00:03:27,746 --> 00:03:32,206
The documentation comment uses

65
00:03:32,206 --> 00:03:34,996
use SF mono medium which

66
00:03:34,996 --> 00:03:37,696
and just a little heavier

67
00:03:37,696 --> 00:03:39,346
that the rest of the file is in.

68
00:03:40,146 --> 00:03:41,796
Unlike most other

69
00:03:42,016 --> 00:03:45,556
we've given SF mono a full

70
00:03:45,556 --> 00:03:47,216
through semi-bold,

71
00:03:47,546 --> 00:03:49,516
and we've included

72
00:03:50,086 --> 00:03:53,216
This keeps the spacing between

73
00:03:53,216 --> 00:03:55,666
letting you customize exactly

74
00:03:55,666 --> 00:03:59,726
So in the next feature I'm going

75
00:03:59,726 --> 00:04:02,326
to another file, I'm

76
00:03:59,726 --> 00:04:02,326
to another file, I'm

77
00:04:02,326 --> 00:04:06,176
by pressing Command, Shift O,

78
00:04:06,176 --> 00:04:08,556
to get to my

79
00:04:09,346 --> 00:04:12,646
And you may have

80
00:04:13,106 --> 00:04:17,065
this is the document items

81
00:04:17,096 --> 00:04:18,646
by pressing Control 6.

82
00:04:19,796 --> 00:04:22,696
It has all of the classes,

83
00:04:22,896 --> 00:04:24,636
everything that's

84
00:04:25,576 --> 00:04:27,176
But that's not really

85
00:04:27,676 --> 00:04:30,406
Did you know that if you just

86
00:04:30,406 --> 00:04:34,156
up, it filters the items?

87
00:04:34,406 --> 00:04:39,676
And you'll notice, here that,

88
00:04:39,676 --> 00:04:42,406
that I have, it actually

89
00:04:42,406 --> 00:04:45,426
bandage icon on it,

90
00:04:45,696 --> 00:04:46,666
of cute [laughter].

91
00:04:47,756 --> 00:04:55,416
So, jumping here to my load view

92
00:04:55,416 --> 00:04:57,406
that we have an image in a

93
00:04:57,406 --> 00:04:59,086
for a designer to deliver to us.

94
00:04:59,746 --> 00:05:03,796
But I actually got those P&amp;G's

95
00:04:59,746 --> 00:05:03,796
But I actually got those P&amp;G's

96
00:05:03,796 --> 00:05:07,246
into the jogger asset catalog,

97
00:05:07,246 --> 00:05:08,436
down here in the library.

98
00:05:09,576 --> 00:05:10,866
So this is for the Timer Button.

99
00:05:12,026 --> 00:05:14,676
So I'm going to go and I'm

100
00:05:14,676 --> 00:05:17,666
of the line here by

101
00:05:17,786 --> 00:05:19,186
while holding down Shift.

102
00:05:19,736 --> 00:05:21,656
And I'm going to

103
00:05:21,656 --> 00:05:23,436
by pressing Command Space.

104
00:05:24,736 --> 00:05:28,316
Now watch carefully, I'm going

105
00:05:28,316 --> 00:05:29,496
by using code completion.

106
00:05:30,296 --> 00:05:33,066
I'm just going to type t,

107
00:05:34,536 --> 00:05:36,376
And you'll also notice

108
00:05:36,436 --> 00:05:39,946
as in Xcode 7.3 now uses the

109
00:05:39,946 --> 00:05:42,966
that we use for open quickly,

110
00:05:42,966 --> 00:05:45,206
and even our new search in

111
00:05:45,706 --> 00:05:48,976
And you can see here on the left

112
00:05:48,976 --> 00:05:50,016
of the image so you know

113
00:05:50,016 --> 00:05:51,496
that you're picking

114
00:05:52,746 --> 00:05:56,416
So, boom right there,

115
00:05:56,936 --> 00:05:57,836
this is an image literal.

116
00:05:59,516 --> 00:06:04,556
[ Applause ]

117
00:05:59,516 --> 00:06:04,556
[ Applause ]

118
00:06:05,056 --> 00:06:08,056
So every image in the library,

119
00:06:08,056 --> 00:06:10,876
from an asset catalog or it's

120
00:06:11,216 --> 00:06:13,226
it's available from the

121
00:06:13,366 --> 00:06:14,126
in the source editor.

122
00:06:15,636 --> 00:06:19,086
So, the way this works is we

123
00:06:19,176 --> 00:06:21,546
into the source which is

124
00:06:21,996 --> 00:06:24,966
and it dereferences out to a

125
00:06:24,966 --> 00:06:27,256
So you can see all of

126
00:06:27,256 --> 00:06:28,456
instead of just the name string.

127
00:06:29,506 --> 00:06:31,026
And we have this for colors too.

128
00:06:31,066 --> 00:06:33,856
So I'm just going to select

129
00:06:34,726 --> 00:06:37,766
and invoke code completion

130
00:06:39,266 --> 00:06:43,246
And what this will,

131
00:06:43,526 --> 00:06:46,576
you notice that I get this

132
00:06:48,466 --> 00:06:51,566
From here I can just arrow

133
00:06:51,566 --> 00:06:54,196
like this, lovely green here.

134
00:06:55,856 --> 00:06:57,946
And what's really important to

135
00:06:57,946 --> 00:06:59,256
and color literals are the,

136
00:06:59,306 --> 00:07:01,046
they're fully keyboard

137
00:06:59,306 --> 00:07:01,046
they're fully keyboard

138
00:07:01,576 --> 00:07:04,136
If I just hold down Shift and

139
00:07:04,626 --> 00:07:08,046
and hit Return, I bring up

140
00:07:08,556 --> 00:07:10,966
And, you know to which I

141
00:07:11,526 --> 00:07:13,676
but if these colors that are

142
00:07:13,676 --> 00:07:15,616
in the pop-up aren't exactly

143
00:07:15,776 --> 00:07:17,936
and there, it's not exactly

144
00:07:18,166 --> 00:07:20,986
you can use the recent

145
00:07:20,986 --> 00:07:24,466
with interface builder, or you

146
00:07:24,466 --> 00:07:27,456
down here and it brings up the

147
00:07:28,466 --> 00:07:31,166
So in this case, I

148
00:07:31,166 --> 00:07:34,226
out this lovely navy blue,

149
00:07:34,226 --> 00:07:36,206
since this is going

150
00:07:36,256 --> 00:07:37,136
as I'm constructing it.

151
00:07:37,286 --> 00:07:41,046
But we still have a little

152
00:07:41,236 --> 00:07:46,176
the color literal is, is a

153
00:07:46,176 --> 00:07:48,616
that we're assigning

154
00:07:48,616 --> 00:07:49,916
and it's expecting a cgColor.

155
00:07:50,396 --> 00:07:53,116
So I can fix that

156
00:07:54,516 --> 00:07:58,796
[ Applause ]

157
00:07:59,296 --> 00:08:01,326
Hopefully this makes it

158
00:07:59,296 --> 00:08:01,326
Hopefully this makes it

159
00:08:01,326 --> 00:08:04,296
and color literals are really

160
00:08:05,006 --> 00:08:06,626
real type objects in Swift.

161
00:08:08,536 --> 00:08:12,466
So the next thing I'd like to

162
00:08:12,846 --> 00:08:15,256
and in fact, it's not

163
00:08:16,026 --> 00:08:18,956
It's actually been part of

164
00:08:18,956 --> 00:08:23,886
since before macOS 10.0, and

165
00:08:24,746 --> 00:08:26,426
Now you may not have

166
00:08:26,426 --> 00:08:30,486
that if you've done a find

167
00:08:30,486 --> 00:08:33,025
like say Pause here

168
00:08:33,025 --> 00:08:35,535
to the clipboard

169
00:08:35,876 --> 00:08:38,486
And then you bring down

170
00:08:38,566 --> 00:08:40,676
and then you paste it

171
00:08:41,416 --> 00:08:47,356
That that same search, shows

172
00:08:48,186 --> 00:08:50,716
That's kind of weird isn't it?

173
00:08:51,126 --> 00:08:57,586
Well, that's because the find

174
00:08:57,586 --> 00:09:02,546
across applications just like

175
00:08:57,586 --> 00:09:02,546
across applications just like

176
00:09:02,646 --> 00:09:04,356
It lives in parallel

177
00:09:04,396 --> 00:09:05,716
and the two exist side by side.

178
00:09:06,356 --> 00:09:09,356
So there's actually a really

179
00:09:09,356 --> 00:09:10,526
if you have something

180
00:09:10,526 --> 00:09:13,836
onto in the clipboard and you

181
00:09:13,836 --> 00:09:19,016
But if you still want to search,

182
00:09:19,666 --> 00:09:23,626
you can just press Command

183
00:09:23,626 --> 00:09:24,786
into the find pasteboard.

184
00:09:25,716 --> 00:09:31,146
And this allows you to then, hit

185
00:09:31,146 --> 00:09:34,096
of the remaining

186
00:09:35,246 --> 00:09:37,736
Now, if you just want to

187
00:09:37,806 --> 00:09:40,706
in the exact same file, we

188
00:09:40,706 --> 00:09:41,286
for that too.

189
00:09:42,246 --> 00:09:46,016
If you hold down

190
00:09:46,616 --> 00:09:48,866
you'll actually perform

191
00:09:49,226 --> 00:09:51,726
and this modifies every instance

192
00:09:52,296 --> 00:09:54,896
So here I can just

193
00:09:54,896 --> 00:09:56,976
because started sounds

194
00:09:57,886 --> 00:10:02,616
And, and this one's a

195
00:09:57,886 --> 00:10:02,616
And, and this one's a

196
00:10:02,716 --> 00:10:03,956
and I use this a lot.

197
00:10:05,116 --> 00:10:07,876
Now, if all you want to do is

198
00:10:08,366 --> 00:10:10,436
you don't even need to use

199
00:10:10,656 --> 00:10:13,706
We actually have a

200
00:10:13,926 --> 00:10:16,916
So if we just select

201
00:10:16,916 --> 00:10:21,356
down Command Option

202
00:10:21,356 --> 00:10:25,516
that I can actually move this

203
00:10:25,556 --> 00:10:27,546
of if functions and

204
00:10:28,976 --> 00:10:34,976
And they just flow

205
00:10:35,176 --> 00:10:37,296
So this is all great

206
00:10:37,296 --> 00:10:40,256
out in the same one file

207
00:10:40,256 --> 00:10:45,466
to do a find across other

208
00:10:45,466 --> 00:10:48,106
to find all instances of timer,

209
00:10:48,476 --> 00:10:53,806
you can do that by holding

210
00:10:54,066 --> 00:10:55,376
to do a full project find.

211
00:10:56,276 --> 00:10:59,836
And here, I'll just push timer

212
00:10:59,836 --> 00:11:03,006
into my find pasteboard

213
00:10:59,836 --> 00:11:03,006
into my find pasteboard

214
00:11:03,806 --> 00:11:07,906
And, this was actually

215
00:11:07,906 --> 00:11:12,736
out to me recently, I don't have

216
00:11:12,736 --> 00:11:15,136
to actually start to arrow

217
00:11:15,476 --> 00:11:17,676
Command G also works here too.

218
00:11:17,676 --> 00:11:19,076
The only difference

219
00:11:19,076 --> 00:11:22,296
down the Control key while

220
00:11:22,296 --> 00:11:26,256
and it actually cycles through

221
00:11:26,256 --> 00:11:30,686
of my different files, including

222
00:11:30,836 --> 00:11:33,216
and all of the instances

223
00:11:33,216 --> 00:11:37,216
And it works in reverse

224
00:11:37,256 --> 00:11:38,486
just like Command

225
00:11:39,796 --> 00:11:42,836
So, I don't know, I know

226
00:11:42,906 --> 00:11:45,116
of writing some of this down.

227
00:11:45,576 --> 00:11:47,526
But, you really don't have

228
00:11:47,566 --> 00:11:49,966
to because there's actually

229
00:11:49,966 --> 00:11:52,326
that has the full list

230
00:11:52,586 --> 00:11:53,816
and all their keystrokes.

231
00:11:54,276 --> 00:11:56,846
And that's inside of the

232
00:11:57,366 --> 00:12:00,816
So here, in the Key

233
00:11:57,366 --> 00:12:00,816
So here, in the Key

234
00:12:01,386 --> 00:12:05,116
you can actually do a search

235
00:12:05,746 --> 00:12:08,616
find, and you can

236
00:12:09,466 --> 00:12:13,556
Also, if you kind of vaguely

237
00:12:13,556 --> 00:12:20,146
sort of like reveal command that

238
00:12:20,966 --> 00:12:23,586
This actually searches across

239
00:12:23,586 --> 00:12:25,146
So this is really powerful.

240
00:12:25,516 --> 00:12:27,536
And if you don't like

241
00:12:27,596 --> 00:12:29,386
for all of Xcodes

242
00:12:29,836 --> 00:12:35,036
you can actually set

243
00:12:35,036 --> 00:12:37,346
And, if our built-in

244
00:12:37,346 --> 00:12:39,836
or they don't do that

245
00:12:39,906 --> 00:12:42,366
that you've always wanted

246
00:12:42,556 --> 00:12:44,036
I'd like to invite Chris up now

247
00:12:44,516 --> 00:12:47,566
to show you how you can add

248
00:12:48,516 --> 00:12:52,796
[ Applause ]

249
00:12:53,296 --> 00:12:55,346
&gt;&gt; Thank you, Mike.

250
00:12:56,316 --> 00:12:59,586
As Mike said, I'm Chris

251
00:12:59,586 --> 00:13:01,496
to show you how you

252
00:12:59,586 --> 00:13:01,496
to show you how you

253
00:13:01,496 --> 00:13:03,296
with source editor extensions.

254
00:13:04,506 --> 00:13:07,956
Now what we're offering you is

255
00:13:08,156 --> 00:13:11,036
to the source editor as

256
00:13:12,036 --> 00:13:14,696
Your commands can

257
00:13:15,206 --> 00:13:18,016
as well as selections

258
00:13:18,066 --> 00:13:19,356
say to perform navigation.

259
00:13:20,106 --> 00:13:22,666
And unlike some other types

260
00:13:23,096 --> 00:13:25,476
you can implement any

261
00:13:25,856 --> 00:13:28,826
as a single Xcode

262
00:13:29,526 --> 00:13:33,406
Now we chose to base

263
00:13:33,756 --> 00:13:37,436
on application extensions which

264
00:13:37,436 --> 00:13:39,236
across all our operating

265
00:13:40,566 --> 00:13:43,466
Since Xcode extensions are

266
00:13:43,896 --> 00:13:46,126
each one runs in its own process

267
00:13:46,126 --> 00:13:50,406
and can do pretty much whatever

268
00:13:50,626 --> 00:13:54,526
without interfering with Xcode

269
00:13:55,206 --> 00:13:58,056
Of course, as application

270
00:13:58,406 --> 00:14:02,146
Xcode extensions are also

271
00:13:58,406 --> 00:14:02,146
Xcode extensions are also

272
00:14:02,226 --> 00:14:05,186
for doing anything that

273
00:14:06,716 --> 00:14:12,766
And Xcode only gives access to

274
00:14:13,276 --> 00:14:16,106
and metadata that

275
00:14:17,236 --> 00:14:18,916
to perform their operations.

276
00:14:19,816 --> 00:14:22,206
They don't get access to

277
00:14:22,376 --> 00:14:26,506
they don't get access to

278
00:14:27,056 --> 00:14:28,956
And why are we doing

279
00:14:29,656 --> 00:14:31,866
Well, stability.

280
00:14:32,556 --> 00:14:34,966
We want to ensure

281
00:14:34,966 --> 00:14:37,036
as possible for all

282
00:14:38,366 --> 00:14:42,976
Also, security, application

283
00:14:43,306 --> 00:14:46,036
of allowing you to enhance

284
00:14:46,306 --> 00:14:50,166
and now our tools while

285
00:14:50,326 --> 00:14:51,476
of the entire system.

286
00:14:51,996 --> 00:14:55,896
And of course, we're also

287
00:14:56,306 --> 00:15:00,396
Application extensions are built

288
00:14:56,306 --> 00:15:00,396
Application extensions are built

289
00:15:00,396 --> 00:15:02,316
and are fully asynchronous.

290
00:15:02,316 --> 00:15:04,436
So they can work as

291
00:15:04,706 --> 00:15:06,746
and not slow down our users.

292
00:15:08,106 --> 00:15:10,536
And, there's another

293
00:15:10,536 --> 00:15:14,446
to use application extensions as

294
00:15:14,986 --> 00:15:19,286
and that's so you can distribute

295
00:15:20,516 --> 00:15:26,546
[ Applause ]

296
00:15:27,046 --> 00:15:29,746
And just like all other

297
00:15:29,996 --> 00:15:34,156
Xcode extensions are built

298
00:15:34,716 --> 00:15:37,526
And this application

299
00:15:37,816 --> 00:15:39,576
to put your extensions

300
00:15:39,576 --> 00:15:41,036
or configuration information.

301
00:15:41,076 --> 00:15:44,606
For example to control which

302
00:15:44,606 --> 00:15:46,596
to make available

303
00:15:46,786 --> 00:15:50,016
And it's also a great

304
00:15:50,016 --> 00:15:52,366
that you want your

305
00:15:52,776 --> 00:15:56,256
Since all Xcode is going to

306
00:15:56,556 --> 00:15:57,956
for each of your commands.

307
00:15:59,576 --> 00:16:04,046
And being part of an application

308
00:15:59,576 --> 00:16:04,046
And being part of an application

309
00:16:04,046 --> 00:16:06,166
extension, an Xcode extension

310
00:16:06,496 --> 00:16:09,376
to be distributed on

311
00:16:09,816 --> 00:16:12,536
Of course, you can also

312
00:16:12,796 --> 00:16:15,706
and your Xcode extension

313
00:16:16,116 --> 00:16:19,000
and distribute it

314
00:16:22,516 --> 00:16:25,816
[ Applause ]

315
00:16:26,316 --> 00:16:28,066
Now, let's talk a little bit

316
00:16:28,166 --> 00:16:30,826
about how Xcode brings

317
00:16:31,346 --> 00:16:35,696
To ensure the best possible

318
00:16:35,696 --> 00:16:39,726
to find and automatically start

319
00:16:39,726 --> 00:16:41,736
on in its own startup process.

320
00:16:43,166 --> 00:16:46,136
Before your users

321
00:16:46,136 --> 00:16:49,476
And source editor extensions

322
00:16:49,476 --> 00:16:50,736
of application extensions

323
00:16:51,016 --> 00:16:53,656
that are only used

324
00:16:54,356 --> 00:16:58,276
Xcode will actually try to keep

325
00:16:58,276 --> 00:17:01,076
as possible so that it

326
00:16:58,276 --> 00:17:01,076
as possible so that it

327
00:17:01,076 --> 00:17:02,566
as the user wants to invoke.

328
00:17:03,186 --> 00:17:06,896
Now when your extension

329
00:17:07,356 --> 00:17:10,566
if it needs to do any

330
00:17:10,566 --> 00:17:13,726
Xcode will send

331
00:17:13,726 --> 00:17:14,026
to it.

332
00:17:14,715 --> 00:17:16,776
And this is a good

333
00:17:17,026 --> 00:17:19,866
as long as it's quick.

334
00:17:20,626 --> 00:17:24,506
That's right you need to do your

335
00:17:24,955 --> 00:17:28,846
and that's so your users

336
00:17:29,606 --> 00:17:30,946
as soon as they want to.

337
00:17:31,576 --> 00:17:36,266
And to help you there,

338
00:17:36,266 --> 00:17:38,686
up your extension is

339
00:17:38,686 --> 00:17:41,736
up other extensions and

340
00:17:43,656 --> 00:17:47,556
Now once your extension is

341
00:17:47,556 --> 00:17:49,826
for its commands, and

342
00:17:49,826 --> 00:17:51,396
from one of two places.

343
00:17:52,966 --> 00:17:55,436
By default you'll have an entry

344
00:17:55,436 --> 00:18:00,546
in your NSExtensionAttributes

345
00:17:55,436 --> 00:18:00,546
in your NSExtensionAttributes

346
00:18:01,536 --> 00:18:04,516
that specifies all of the

347
00:18:05,556 --> 00:18:07,846
But you can also

348
00:18:08,546 --> 00:18:10,566
of the commandDefinitions

349
00:18:10,926 --> 00:18:14,876
from your extension class

350
00:18:14,876 --> 00:18:16,666
that are given back

351
00:18:17,096 --> 00:18:20,036
So if your extension has a

352
00:18:20,366 --> 00:18:22,496
say because it's downloaded

353
00:18:22,496 --> 00:18:24,486
that it actually uses

354
00:18:24,866 --> 00:18:27,726
it can provide a new collection.

355
00:18:28,326 --> 00:18:33,436
Now once Xcode has

356
00:18:34,666 --> 00:18:39,626
it'll give each extension its

357
00:18:39,936 --> 00:18:41,766
when the user is

358
00:18:42,776 --> 00:18:46,396
And the extensions are listed

359
00:18:46,396 --> 00:18:48,826
as they are in the

360
00:18:48,826 --> 00:18:51,876
in a stable place for the

361
00:18:52,546 --> 00:18:56,146
However, because order of

362
00:18:56,146 --> 00:18:58,726
and often, conveys a

363
00:18:59,846 --> 00:19:03,536
Xcode will preserve the order

364
00:18:59,846 --> 00:19:03,536
Xcode will preserve the order

365
00:19:03,566 --> 00:19:07,826
to it, and list them in

366
00:19:08,466 --> 00:19:10,976
Now to invoke a command,

367
00:19:11,476 --> 00:19:15,186
of course a user can choose the

368
00:19:16,206 --> 00:19:18,466
or they can press a

369
00:19:18,466 --> 00:19:19,746
that they have assigned.

370
00:19:21,326 --> 00:19:23,846
Your command object

371
00:19:23,846 --> 00:19:27,246
and sent an invocation

372
00:19:28,496 --> 00:19:32,216
Now the invocation packages up

373
00:19:32,786 --> 00:19:34,986
that your command

374
00:19:35,886 --> 00:19:40,736
And, the command then uses the

375
00:19:41,106 --> 00:19:43,046
to tell Xcode that it's done.

376
00:19:43,426 --> 00:19:47,706
And let's take a look

377
00:19:47,766 --> 00:19:50,136
Here we have the

378
00:19:50,136 --> 00:19:52,306
of your command classes

379
00:19:53,426 --> 00:19:55,876
Just as I said, it's

380
00:19:56,276 --> 00:20:00,646
and a completionHandler

381
00:19:56,276 --> 00:20:00,646
and a completionHandler

382
00:20:01,086 --> 00:20:04,586
And that invocation just carries

383
00:20:04,966 --> 00:20:09,926
It has a commandIdentifier which

384
00:20:09,926 --> 00:20:11,496
or in you command

385
00:20:13,036 --> 00:20:15,536
And that lets you

386
00:20:15,826 --> 00:20:18,056
that are handled by

387
00:20:18,836 --> 00:20:21,126
After all, there are a

388
00:20:21,126 --> 00:20:24,396
in source code editing that do

389
00:20:24,906 --> 00:20:26,886
So you'll probably

390
00:20:26,886 --> 00:20:29,536
of things using the

391
00:20:29,766 --> 00:20:32,246
and just handle a couple

392
00:20:32,246 --> 00:20:32,766
in each one.

393
00:20:33,096 --> 00:20:37,086
And this identifier lets you

394
00:20:37,256 --> 00:20:38,356
that the user has invoked.

395
00:20:40,096 --> 00:20:43,546
We also provide a

396
00:20:43,706 --> 00:20:46,436
a cancellationHandler block on.

397
00:20:46,956 --> 00:20:49,756
And this cancellationHandler

398
00:20:49,756 --> 00:20:52,266
if the user cancels

399
00:20:53,436 --> 00:20:56,586
And that can happen if your

400
00:20:56,726 --> 00:20:59,376
and we'll get a little bit

401
00:20:59,376 --> 00:21:00,346
on in the presentation.

402
00:20:59,376 --> 00:21:00,346
on in the presentation.

403
00:21:00,816 --> 00:21:03,406
And finally, of course,

404
00:21:03,646 --> 00:21:06,156
the invocation also

405
00:21:06,156 --> 00:21:07,586
of text the user

406
00:21:08,706 --> 00:21:12,126
And that SourceText is

407
00:21:12,126 --> 00:21:14,856
of another object,

408
00:21:15,766 --> 00:21:19,396
And it has a bunch of metadata

409
00:21:20,236 --> 00:21:22,436
We give you the uniform

410
00:21:22,926 --> 00:21:26,246
that Xcode thinks the file

411
00:21:26,666 --> 00:21:30,116
and that way you know if you're

412
00:21:31,226 --> 00:21:36,816
XML data, and ObjC++, header

413
00:21:37,996 --> 00:21:41,206
We also provide the

414
00:21:41,426 --> 00:21:42,926
that Xcode has for that file.

415
00:21:43,366 --> 00:21:46,446
So that as you're making

416
00:21:46,766 --> 00:21:50,056
you can also conform to what

417
00:21:50,056 --> 00:21:51,606
when it's indenting that file.

418
00:21:52,526 --> 00:21:55,086
Now because tabWidth,

419
00:21:55,086 --> 00:21:55,546
and whether

420
00:21:55,546 --> 00:21:58,816
to useTabsForIndentation have

421
00:21:59,376 --> 00:22:01,576
We've also provided

422
00:21:59,376 --> 00:22:01,576
We've also provided

423
00:22:01,576 --> 00:22:04,566
about how they work

424
00:22:06,056 --> 00:22:08,456
So I encourage you to check

425
00:22:08,796 --> 00:22:12,666
see exactly how those

426
00:22:14,376 --> 00:22:17,696
Now, we provide the text

427
00:22:17,696 --> 00:22:19,656
with in two different ways.

428
00:22:20,456 --> 00:22:24,126
If you need to process the

429
00:22:24,596 --> 00:22:28,466
say by piping it to a command

430
00:22:28,466 --> 00:22:30,236
to work with the completeBuffer,

431
00:22:30,526 --> 00:22:32,816
which represents the text

432
00:22:32,996 --> 00:22:35,186
the entire file as

433
00:22:37,086 --> 00:22:41,556
However, if you only need to

434
00:22:42,426 --> 00:22:44,486
this is a really

435
00:22:44,486 --> 00:22:46,396
since your extension

436
00:22:46,396 --> 00:22:49,886
that whole buffer back to Xcode.

437
00:22:49,976 --> 00:22:54,066
And that's we also provide

438
00:22:54,326 --> 00:22:58,046
containing the lines

439
00:22:58,166 --> 00:23:00,706
We found ourselves, that

440
00:22:58,166 --> 00:23:00,706
We found ourselves, that

441
00:23:00,706 --> 00:23:03,946
with source code, we

442
00:23:03,946 --> 00:23:08,556
and column abstraction works

443
00:23:08,556 --> 00:23:11,916
with a single huge

444
00:23:12,106 --> 00:23:14,396
And this, by being

445
00:23:14,846 --> 00:23:19,556
also lets Xcode actually

446
00:23:19,846 --> 00:23:23,676
so that we only need to send

447
00:23:23,676 --> 00:23:26,466
you've made, we don't need to

448
00:23:27,076 --> 00:23:30,056
And this can really

449
00:23:30,056 --> 00:23:31,576
for editing extensions.

450
00:23:32,786 --> 00:23:38,146
And in addition to providing

451
00:23:38,146 --> 00:23:43,196
we also provide a mutable array

452
00:23:43,426 --> 00:23:45,556
There will always be

453
00:23:45,676 --> 00:23:48,406
which is either the user's

454
00:23:48,876 --> 00:23:51,316
and because Xcode's

455
00:23:51,316 --> 00:23:52,676
of the Cocoa text system,

456
00:23:53,136 --> 00:23:55,346
we support multiple

457
00:23:55,796 --> 00:23:58,646
And if you want to change

458
00:23:58,686 --> 00:24:00,716
to do is change this

459
00:23:58,686 --> 00:24:00,716
to do is change this

460
00:24:01,386 --> 00:24:07,216
And what's in that array are

461
00:24:07,766 --> 00:24:11,586
Now we use SourceTextRange

462
00:24:11,586 --> 00:24:14,796
because we really do

463
00:24:14,796 --> 00:24:19,476
and column abstraction that

464
00:24:19,586 --> 00:24:21,076
to do most text editing.

465
00:24:22,116 --> 00:24:25,656
And that's why a source range

466
00:24:25,966 --> 00:24:29,916
and a length, is actually

467
00:24:30,516 --> 00:24:32,626
and those positions

468
00:24:32,876 --> 00:24:34,926
in terms of line and column.

469
00:24:35,606 --> 00:24:39,456
Now, I'm going to

470
00:24:39,456 --> 00:24:43,906
of how you can create

471
00:24:45,276 --> 00:24:46,666
Let's go to the demo machine.

472
00:24:46,666 --> 00:24:51,436
And, let me get my

473
00:24:52,566 --> 00:24:57,036
So I was really impressed

474
00:24:57,286 --> 00:25:01,276
about Swift literals, the

475
00:24:57,286 --> 00:25:01,276
about Swift literals, the

476
00:25:02,076 --> 00:25:04,706
And I'd really like to

477
00:25:05,096 --> 00:25:06,066
So I think what I'm going

478
00:25:06,066 --> 00:25:09,386
to do is create a new

479
00:25:09,726 --> 00:25:15,136
that can automatically convert

480
00:25:15,326 --> 00:25:17,166
to the corresponding

481
00:25:17,886 --> 00:25:22,256
I'm just going to create a new

482
00:25:22,256 --> 00:25:24,146
to create a new OS

483
00:25:24,646 --> 00:25:27,716
After all, my app

484
00:25:27,866 --> 00:25:30,156
has to be carried

485
00:25:30,906 --> 00:25:33,356
So I'll create this

486
00:25:33,356 --> 00:25:35,556
to call this Chris Literals.

487
00:25:36,076 --> 00:25:40,896
And I'm just going to give

488
00:25:40,896 --> 00:25:47,206
identifier of com.example, and

489
00:25:47,206 --> 00:25:48,906
to put this project

490
00:25:49,636 --> 00:25:51,646
And now that I've

491
00:25:52,626 --> 00:25:57,046
I'm going to add a new

492
00:25:57,046 --> 00:26:00,316
to add an OS X application

493
00:25:57,046 --> 00:26:00,316
to add an OS X application

494
00:26:00,546 --> 00:26:04,126
And you can see we have our new

495
00:26:04,126 --> 00:26:10,236
template right here at

496
00:26:10,236 --> 00:26:14,666
And I'm going to name

497
00:26:14,856 --> 00:26:17,966
to Literals and just finish.

498
00:26:18,836 --> 00:26:23,866
And when I clicked Finish, Xcode

499
00:26:23,866 --> 00:26:26,486
for me, just as with

500
00:26:26,676 --> 00:26:27,836
So I'm going to accept that.

501
00:26:29,166 --> 00:26:31,066
And now let's take

502
00:26:31,066 --> 00:26:32,576
that Xcode generated for me.

503
00:26:34,076 --> 00:26:39,696
In this convert to literals

504
00:26:39,866 --> 00:26:41,686
that represents my

505
00:26:42,056 --> 00:26:43,246
And this just conforms

506
00:26:43,246 --> 00:26:45,976
to the XCSourceEditor

507
00:26:46,336 --> 00:26:50,506
And it also added templates

508
00:26:50,746 --> 00:26:54,216
and a property that I can

509
00:26:54,216 --> 00:26:56,926
to override these and

510
00:26:57,576 --> 00:26:59,576
I don't want to right now,

511
00:26:59,576 --> 00:27:00,876
for this particular project,

512
00:26:59,576 --> 00:27:00,876
for this particular project,

513
00:27:02,286 --> 00:27:04,136
so let's just take a

514
00:27:05,116 --> 00:27:07,926
In the next file

515
00:27:08,206 --> 00:27:10,856
I have my first command class.

516
00:27:11,866 --> 00:27:14,266
And just as I showed

517
00:27:14,266 --> 00:27:18,896
to XCSourceEditor command,

518
00:27:18,896 --> 00:27:21,726
within vocation method.

519
00:27:22,686 --> 00:27:25,186
Now let's take a

520
00:27:25,186 --> 00:27:26,316
that Xcode created for me.

521
00:27:27,576 --> 00:27:33,616
And you can see, in my extension

522
00:27:33,616 --> 00:27:36,176
of

523
00:27:36,376 --> 00:27:38,266
which is an array

524
00:27:38,756 --> 00:27:42,676
And that dictionary specifies

525
00:27:42,676 --> 00:27:47,836
for a command, the identifier

526
00:27:48,196 --> 00:27:51,506
and the name that the menu item

527
00:27:52,736 --> 00:27:55,866
So I'm going to change

528
00:27:56,046 --> 00:28:00,096
to Swift Literals

529
00:27:56,046 --> 00:28:00,096
to Swift Literals

530
00:28:01,406 --> 00:28:05,926
Zoom out, and go back

531
00:28:10,046 --> 00:28:11,296
Now I'm going to cheat

532
00:28:11,916 --> 00:28:15,466
because I've already written

533
00:28:15,466 --> 00:28:16,686
to use a code snippet it

534
00:28:16,816 --> 00:28:18,026
to insert what I've

535
00:28:18,616 --> 00:28:23,676
I've named it Chris

536
00:28:24,006 --> 00:28:26,516
that it's actually not

537
00:28:27,966 --> 00:28:32,136
So what I'm doing is just

538
00:28:32,136 --> 00:28:38,456
in the file, and if the

539
00:28:38,646 --> 00:28:42,326
or a UIImage invocation in

540
00:28:42,326 --> 00:28:45,666
with its corresponding

541
00:28:46,936 --> 00:28:50,476
And then, if the line

542
00:28:51,306 --> 00:28:54,646
that's when I replace the

543
00:28:54,976 --> 00:28:57,616
that way I'm not replacing

544
00:28:58,006 --> 00:29:00,376
and I'm certainly not

545
00:28:58,006 --> 00:29:00,376
and I'm certainly not

546
00:29:00,636 --> 00:29:04,486
I'm only modifying the lines

547
00:29:05,426 --> 00:29:08,456
And I'm also keeping track

548
00:29:09,206 --> 00:29:14,516
so that later I can also

549
00:29:14,776 --> 00:29:16,216
to represent those lines.

550
00:29:16,766 --> 00:29:21,516
I set those selections,

551
00:29:21,516 --> 00:29:25,046
completionHandler to let Xcode

552
00:29:25,816 --> 00:29:29,116
I see Xcode in the

553
00:29:30,416 --> 00:29:34,586
And if I click Run here, what

554
00:29:35,136 --> 00:29:37,526
beyond of course

555
00:29:39,746 --> 00:29:43,686
Well you can see we launch

556
00:29:44,036 --> 00:29:47,526
for you to test your

557
00:29:48,086 --> 00:29:50,696
And we actually provide

558
00:29:50,696 --> 00:29:54,616
of visual distinction here too,

559
00:29:55,206 --> 00:29:58,516
and we darken the icon in

560
00:29:59,196 --> 00:30:04,426
so you know at a glance

561
00:29:59,196 --> 00:30:04,426
so you know at a glance

562
00:30:04,426 --> 00:30:05,946
in which you're testing

563
00:30:08,196 --> 00:30:10,776
Now I'm just going to open

564
00:30:11,066 --> 00:30:14,696
because I noticed he had some,

565
00:30:14,696 --> 00:30:15,956
that weren't converted yet.

566
00:30:17,516 --> 00:30:19,926
And you can see another case

567
00:30:20,976 --> 00:30:24,916
in the activity view up at the

568
00:30:25,206 --> 00:30:28,986
at a glance, that this Xcode is

569
00:30:29,496 --> 00:30:34,946
And Mike's left me actually

570
00:30:34,946 --> 00:30:37,996
and UIColor that I think

571
00:30:38,816 --> 00:30:41,266
So I'm just going to

572
00:30:41,976 --> 00:30:44,256
I see my Chris Convert

573
00:30:44,256 --> 00:30:47,386
and I see my convert to

574
00:30:48,876 --> 00:30:50,736
Now if I go back to

575
00:30:51,636 --> 00:30:54,506
and just set a breakpoint,

576
00:30:55,176 --> 00:30:59,226
If I actually run

577
00:31:02,396 --> 00:31:06,216
you'll see that nothing happened

578
00:31:06,216 --> 00:31:08,536
at that breakpoint in the

579
00:31:09,306 --> 00:31:12,546
So you can actually bring all

580
00:31:12,776 --> 00:31:16,336
and LLDB to bear in debugging

581
00:31:16,336 --> 00:31:19,856
I'm just going to

582
00:31:22,086 --> 00:31:27,266
And I've still got my breakpoint

583
00:31:27,266 --> 00:31:32,726
And if I go back, I can see

584
00:31:32,726 --> 00:31:35,316
of the lines that I've

585
00:31:35,726 --> 00:31:37,176
and it's converted everything

586
00:31:37,176 --> 00:31:38,956
to using the new

587
00:31:40,516 --> 00:31:47,106
[ Applause ]

588
00:31:47,606 --> 00:31:49,776
Now let's say I actually

589
00:31:49,776 --> 00:31:51,186
on a pretty regular basis.

590
00:31:52,266 --> 00:31:55,826
Well it's easy enough, I

591
00:31:56,216 --> 00:31:59,626
by just adding a key

592
00:32:00,616 --> 00:32:03,096
I do that in Xcode's

593
00:32:03,336 --> 00:32:05,596
and I'm going to search

594
00:32:05,626 --> 00:32:07,186
which I know starts with Chris.

595
00:32:07,996 --> 00:32:11,006
And we're right there

596
00:32:11,136 --> 00:32:14,806
I think I'm just going to name

597
00:32:15,356 --> 00:32:16,456
that's easy to remember

598
00:32:17,016 --> 00:32:22,956
Now let's go back to the slides,

599
00:32:24,966 --> 00:32:28,276
and talk about something

600
00:32:28,276 --> 00:32:29,266
to my heart when working

601
00:32:29,266 --> 00:32:32,796
with Xcode extensions,

602
00:32:33,766 --> 00:32:37,296
Text editing is a user

603
00:32:37,566 --> 00:32:40,096
Your users are really going

604
00:32:40,096 --> 00:32:43,376
on the keyboard and just

605
00:32:43,376 --> 00:32:46,056
even while they're

606
00:32:46,936 --> 00:32:50,726
And your extensions really

607
00:32:50,726 --> 00:32:55,676
from just continuing

608
00:32:56,516 --> 00:32:59,056
Now in order to prevent

609
00:32:59,056 --> 00:33:02,766
between your extension and

610
00:32:59,056 --> 00:33:02,766
between your extension and

611
00:33:02,766 --> 00:33:05,446
out changes to the document

612
00:33:05,446 --> 00:33:07,326
with when they invoke

613
00:33:10,656 --> 00:33:13,436
And fortunately, this means

614
00:33:13,436 --> 00:33:15,556
about reconciling the

615
00:33:16,166 --> 00:33:17,426
and the changes the user made.

616
00:33:18,056 --> 00:33:21,926
On the other hand, it means

617
00:33:22,816 --> 00:33:26,506
that if your extension takes

618
00:33:26,506 --> 00:33:28,676
as a couple of seconds,

619
00:33:28,676 --> 00:33:29,956
out from editing their document.

620
00:33:30,646 --> 00:33:33,316
So, what do we do there?

621
00:33:34,476 --> 00:33:37,666
Well we give the user the

622
00:33:38,726 --> 00:33:43,996
And we do that by bringing

623
00:33:44,106 --> 00:33:45,876
And I think the system's

624
00:33:45,876 --> 00:33:48,966
that this slide is taking

625
00:33:49,286 --> 00:33:52,846
let's cancel out

626
00:33:53,756 --> 00:33:57,146
Now Xcode helps keep

627
00:33:57,626 --> 00:34:01,706
by starting extensions early

628
00:33:57,626 --> 00:34:01,706
by starting extensions early

629
00:34:01,706 --> 00:34:04,456
as they're likely to be

630
00:34:04,456 --> 00:34:05,386
as soon as they're invoked.

631
00:34:07,516 --> 00:34:12,146
And as we talked about earlier,

632
00:34:12,146 --> 00:34:15,856
that your extensions data

633
00:34:15,856 --> 00:34:16,656
for performance.

634
00:34:17,696 --> 00:34:21,186
And when a user needs

635
00:34:21,676 --> 00:34:24,916
that cancellation is actually

636
00:34:25,206 --> 00:34:28,436
As soon as the user hits Cancel

637
00:34:29,545 --> 00:34:34,306
Now your extension will still

638
00:34:34,306 --> 00:34:35,706
and still needs to react to it,

639
00:34:36,396 --> 00:34:39,545
but the user doesn't

640
00:34:39,806 --> 00:34:42,786
Of course there are a few ways

641
00:34:42,786 --> 00:34:43,916
with performance as well.

642
00:34:44,585 --> 00:34:48,835
Your extension can startup

643
00:34:49,076 --> 00:34:51,496
so it's ready as

644
00:34:52,216 --> 00:34:56,556
In implementing your commands

645
00:34:56,556 --> 00:34:58,536
of our asynchronous

646
00:34:58,806 --> 00:35:01,176
to ensure you're making

647
00:34:58,806 --> 00:35:01,176
to ensure you're making

648
00:35:01,576 --> 00:35:04,716
of the user's system and

649
00:35:04,846 --> 00:35:05,966
as quickly as possible.

650
00:35:07,706 --> 00:35:11,956
And of course, you can avoid

651
00:35:11,956 --> 00:35:15,176
of text if you don't have to.

652
00:35:15,606 --> 00:35:19,476
And finally, as I said, you need

653
00:35:20,866 --> 00:35:24,066
Because until your command

654
00:35:24,066 --> 00:35:27,866
cancellation, it won't be

655
00:35:29,716 --> 00:35:33,816
Now today Mike showed you a

656
00:35:34,106 --> 00:35:36,396
in the Xcode source

657
00:35:36,396 --> 00:35:40,556
to add documentation comments

658
00:35:40,556 --> 00:35:42,826
and image literals

659
00:35:43,096 --> 00:35:44,866
And he also showed

660
00:35:45,116 --> 00:35:47,566
that were very recently added

661
00:35:47,566 --> 00:35:50,516
in Xcode 7.3, like

662
00:35:50,796 --> 00:35:54,766
And I showed you how Xcode

663
00:35:55,366 --> 00:35:58,796
and how you can make them

664
00:35:58,796 --> 00:36:00,506
to see what you do

665
00:35:58,796 --> 00:36:00,506
to see what you do

666
00:36:02,076 --> 00:36:03,986
There'll be some more

667
00:36:04,306 --> 00:36:08,026
at our page on the

668
00:36:08,966 --> 00:36:11,896
And there are a couple

669
00:36:11,896 --> 00:36:13,436
that you can check out on video,

670
00:36:14,016 --> 00:36:18,356
in particular Optimizing App

671
00:36:18,356 --> 00:36:21,226
to apps, it also

672
00:36:21,226 --> 00:36:23,366
because they use a lot

673
00:36:24,226 --> 00:36:27,276
Our Introduction to Xcode is

674
00:36:27,276 --> 00:36:29,126
up to speed on the

675
00:36:29,126 --> 00:36:32,566
and what your users will expect

676
00:36:33,226 --> 00:36:35,056
And finally, we have

677
00:36:35,056 --> 00:36:38,016
from previous years

678
00:36:38,016 --> 00:36:42,886
to be an app extension and best

679
00:36:43,196 --> 00:36:48,436
And we'll also be at the bash

680
00:36:48,436 --> 00:36:50,986
to WWDC and if you

681
00:36:50,986 --> 00:36:52,586
for us, you can see us there.

682
00:36:53,516 --> 00:36:58,500
[ Applause ]
