1
00:00:07,516 --> 00:00:16,500
[ Music ]

2
00:00:27,006 --> 00:00:28,026
&gt;&gt; All right.

3
00:00:28,136 --> 00:00:29,726
Welcome. My name is Eric Tamura.

4
00:00:29,726 --> 00:00:33,256
I'm accompanied by Dominic

5
00:00:33,256 --> 00:00:34,976
to tell you a little bit

6
00:00:35,516 --> 00:00:42,316
[ Applause ]

7
00:00:42,816 --> 00:00:45,856
All right so this is going to

8
00:00:45,856 --> 00:00:47,056
for our presentation today.

9
00:00:47,456 --> 00:00:50,416
I'll tell you a little bit about

10
00:00:50,686 --> 00:00:51,946
Why we decided to build this.

11
00:00:51,946 --> 00:00:54,116
Some of the new features

12
00:00:54,116 --> 00:00:55,386
as part of Apple File System.

13
00:00:55,806 --> 00:00:57,756
We'll do a short demo,

14
00:00:57,906 --> 00:01:00,166
And then we'll wrap it

15
00:00:57,906 --> 00:01:00,166
And then we'll wrap it

16
00:01:00,166 --> 00:01:02,146
that you can use in your apps.

17
00:01:03,246 --> 00:01:05,996
Okay, let's start it.

18
00:01:06,616 --> 00:01:09,806
So as Sebastian mentioned,

19
00:01:09,806 --> 00:01:12,296
in the WWDC build

20
00:01:12,296 --> 00:01:13,806
that you all got yesterday.

21
00:01:14,116 --> 00:01:17,076
And it will be available as a

22
00:01:17,376 --> 00:01:21,496
in macOS Sierra once it

23
00:01:22,656 --> 00:01:24,486
So what is Apple File System?

24
00:01:25,166 --> 00:01:26,616
It's our next generation

25
00:01:26,616 --> 00:01:28,936
that we've been building

26
00:01:29,456 --> 00:01:32,796
And you might care about

27
00:01:32,966 --> 00:01:35,766
on watchOS, iOS, tvOS and macOS.

28
00:01:36,666 --> 00:01:38,336
So as far as the

29
00:01:38,336 --> 00:01:41,746
we expect that some of you may

30
00:01:41,746 --> 00:01:45,476
or you're a long time developer,

31
00:01:45,546 --> 00:01:48,746
of the high level of the new

32
00:01:48,746 --> 00:01:49,756
so you can follow along.

33
00:01:51,086 --> 00:01:53,876
So, one of the hallmarks of

34
00:01:53,916 --> 00:01:57,006
to scale from an Apple Watch

35
00:01:58,446 --> 00:02:01,606
We also wanted to take advantage

36
00:01:58,446 --> 00:02:01,606
We also wanted to take advantage

37
00:02:01,686 --> 00:02:04,916
because nearly all of

38
00:02:06,236 --> 00:02:09,086
And finally it's been built with

39
00:02:09,256 --> 00:02:12,946
from the very beginning as we

40
00:02:14,026 --> 00:02:17,136
So you might be wondering

41
00:02:17,136 --> 00:02:21,486
Well, we are currently shipping

42
00:02:21,736 --> 00:02:25,186
But its original design

43
00:02:25,186 --> 00:02:25,686
at this point.

44
00:02:25,686 --> 00:02:26,686
So how many of you would like us

45
00:02:26,686 --> 00:02:29,176
to ship HFS+ for

46
00:02:30,406 --> 00:02:34,746
Great. So HFS+ which

47
00:02:34,746 --> 00:02:37,486
where floppies and hard

48
00:02:38,406 --> 00:02:39,686
and the world has

49
00:02:39,686 --> 00:02:42,916
We now use SSDs and other next

50
00:02:43,266 --> 00:02:44,466
evolving as well.

51
00:02:45,276 --> 00:02:49,006
The data structures in HFS+ were

52
00:02:49,006 --> 00:02:52,116
so our B-trees are relying

53
00:02:52,116 --> 00:02:53,626
to access or mutate them.

54
00:02:54,806 --> 00:02:58,766
And the data structures

55
00:02:59,146 --> 00:03:01,826
And by this we mean things

56
00:02:59,146 --> 00:03:01,826
And by this we mean things

57
00:03:01,826 --> 00:03:04,466
or catalog record in HFS+,

58
00:03:04,466 --> 00:03:07,716
to an inode in other filed

59
00:03:07,716 --> 00:03:10,096
to add new fields, to

60
00:03:10,096 --> 00:03:12,426
give it new features, we

61
00:03:12,426 --> 00:03:15,296
of a backwards, incompatible

62
00:03:15,296 --> 00:03:18,346
And by this we mean what happens

63
00:03:18,346 --> 00:03:21,566
and take it all the way back

64
00:03:21,566 --> 00:03:22,746
that same file system?

65
00:03:23,096 --> 00:03:24,056
What will happen?

66
00:03:24,726 --> 00:03:27,546
So if we're concerned about

67
00:03:27,546 --> 00:03:30,546
as forwards compatibility

68
00:03:30,546 --> 00:03:32,046
about well maybe it makes sense

69
00:03:32,076 --> 00:03:34,326
to build something

70
00:03:34,386 --> 00:03:37,406
And so we thought

71
00:03:38,196 --> 00:03:40,406
So we wanted something

72
00:03:40,406 --> 00:03:42,946
and tuned specifically

73
00:03:43,536 --> 00:03:45,956
And other file systems

74
00:03:45,956 --> 00:03:47,236
and they do it well.

75
00:03:47,406 --> 00:03:48,936
In particular filers

76
00:03:48,936 --> 00:03:53,556
or enterprise level storage

77
00:03:53,556 --> 00:03:55,706
that might not make

78
00:03:55,736 --> 00:03:58,246
We typically use a

79
00:03:58,246 --> 00:03:58,716
of our products.

80
00:03:59,156 --> 00:04:01,996
And we have a wide

81
00:03:59,156 --> 00:04:01,996
And we have a wide

82
00:04:02,086 --> 00:04:07,216
So on an Apple Watch, you have

83
00:04:07,436 --> 00:04:10,126
than does a Mac Pro, which

84
00:04:10,126 --> 00:04:12,766
of DRAM potentially, and

85
00:04:12,766 --> 00:04:15,086
So we wanted something

86
00:04:15,506 --> 00:04:18,305
and that's the platform

87
00:04:20,906 --> 00:04:23,256
So other things we wanted to

88
00:04:23,256 --> 00:04:24,976
and enhanced security

89
00:04:24,976 --> 00:04:29,146
So on iOS today we already

90
00:04:29,516 --> 00:04:31,556
that uses per file encryption.

91
00:04:31,676 --> 00:04:33,336
So every file is

92
00:04:33,516 --> 00:04:36,826
on storage form every other

93
00:04:37,546 --> 00:04:40,536
We want to take that a step

94
00:04:40,536 --> 00:04:42,796
of those features a little bit

95
00:04:43,556 --> 00:04:45,246
And finally, we just wanted

96
00:04:45,246 --> 00:04:47,836
to add some new general

97
00:04:47,926 --> 00:04:49,446
that have been requested

98
00:04:49,446 --> 00:04:52,016
and that we learned

99
00:04:52,016 --> 00:04:53,926
for the future of our platforms.

100
00:04:54,926 --> 00:04:57,436
So before we get into these

101
00:04:57,436 --> 00:05:00,096
to give you a brief

102
00:04:57,436 --> 00:05:00,096
to give you a brief

103
00:05:00,096 --> 00:05:02,566
of what storage software

104
00:05:03,166 --> 00:05:07,956
And so in terms of file systems

105
00:05:08,396 --> 00:05:12,206
but it's actually not just HFS+

106
00:05:12,206 --> 00:05:14,456
there's actually many

107
00:05:14,456 --> 00:05:16,576
that comprise our

108
00:05:17,546 --> 00:05:19,446
So in the beginning, we

109
00:05:19,556 --> 00:05:21,076
you know over 30 years

110
00:05:21,716 --> 00:05:25,256
We then added HFS+, some

111
00:05:25,676 --> 00:05:27,366
But we added crash

112
00:05:27,366 --> 00:05:30,486
So we gave it a journal of

113
00:05:32,106 --> 00:05:35,576
We also added core storage which

114
00:05:35,576 --> 00:05:39,176
as well as our fusion drive,

115
00:05:39,176 --> 00:05:41,236
of an SSD with the

116
00:05:42,096 --> 00:05:44,836
And let's not forget all of

117
00:05:44,836 --> 00:05:48,916
We have an iOS specific

118
00:05:48,916 --> 00:05:50,636
that supports the

119
00:05:50,736 --> 00:05:51,676
that we just discussed.

120
00:05:52,656 --> 00:05:54,006
So our intention is that all

121
00:05:54,006 --> 00:05:57,386
of these technologies will

122
00:05:57,876 --> 00:05:59,246
which is Apple File System.

123
00:05:59,246 --> 00:06:04,016
So, let me tell you a

124
00:05:59,246 --> 00:06:04,016
So, let me tell you a

125
00:06:04,016 --> 00:06:05,956
of the new features

126
00:06:09,186 --> 00:06:13,126
So, this is a brief view of

127
00:06:13,266 --> 00:06:15,446
so we've got some improved

128
00:06:16,226 --> 00:06:20,256
HFS compatibility, Space

129
00:06:20,256 --> 00:06:24,166
and directories, snapshots,

130
00:06:24,896 --> 00:06:27,136
A feature we're calling

131
00:06:27,736 --> 00:06:30,366
Atomic safe save

132
00:06:30,366 --> 00:06:31,886
So you don't have to

133
00:06:31,936 --> 00:06:34,106
we will go into greater

134
00:06:34,156 --> 00:06:35,196
in the upcoming slides.

135
00:06:36,886 --> 00:06:40,296
So, first let's talk about some

136
00:06:43,016 --> 00:06:45,666
So first it's been

137
00:06:46,546 --> 00:06:49,826
So on all of our devices, you

138
00:06:49,946 --> 00:06:53,486
but a lot of our Macs we ship

139
00:06:53,486 --> 00:06:55,786
as friendly to the solid

140
00:06:56,996 --> 00:06:59,196
It's also crash protected, APFS,

141
00:06:59,196 --> 00:07:01,906
or Apple File System

142
00:06:59,196 --> 00:07:01,906
or Apple File System

143
00:07:01,906 --> 00:07:05,166
and write metadata scheme so

144
00:07:05,166 --> 00:07:07,516
into a new location

145
00:07:07,866 --> 00:07:11,016
We combine this with a

146
00:07:11,016 --> 00:07:14,046
which ensures that if you lose

147
00:07:14,046 --> 00:07:16,796
or anything bad happens, you'll

148
00:07:16,796 --> 00:07:20,576
of what was on disk or you

149
00:07:22,266 --> 00:07:25,736
We have modern 64-bit

150
00:07:25,926 --> 00:07:28,786
so the inode number has

151
00:07:29,346 --> 00:07:32,556
We have timestamps

152
00:07:32,556 --> 00:07:35,036
We support nanosecond

153
00:07:35,356 --> 00:07:37,366
We also support Sparks

154
00:07:37,366 --> 00:07:38,356
on an Apple File System.

155
00:07:39,906 --> 00:07:43,486
And all of our file and

156
00:07:43,486 --> 00:07:44,906
at where the blocks

157
00:07:44,906 --> 00:07:46,706
on disks have been

158
00:07:47,706 --> 00:07:50,056
Our data structures

159
00:07:50,056 --> 00:07:51,066
and allowed for future growth.

160
00:07:51,756 --> 00:07:54,596
So one thing that we

161
00:07:54,596 --> 00:07:56,976
that its data structures

162
00:07:57,726 --> 00:08:01,836
And at APFS, or Apple File

163
00:07:57,726 --> 00:08:01,836
And at APFS, or Apple File

164
00:08:01,836 --> 00:08:04,586
that represent the core

165
00:08:05,046 --> 00:08:06,496
So fields are either optional,

166
00:08:06,496 --> 00:08:07,886
or we may not have

167
00:08:07,996 --> 00:08:10,756
So new fields that we may

168
00:08:11,126 --> 00:08:13,516
will be correctly

169
00:08:13,516 --> 00:08:16,826
or I don't understand if

170
00:08:16,826 --> 00:08:19,986
to today's version

171
00:08:20,706 --> 00:08:24,116
In this way we can add

172
00:08:24,116 --> 00:08:25,846
of harming backwards

173
00:08:26,606 --> 00:08:28,826
This also allow us to

174
00:08:28,826 --> 00:08:32,635
So on some systems,

175
00:08:32,635 --> 00:08:34,696
of a file is enough to

176
00:08:35,356 --> 00:08:38,976
And so if you have a 0-byte file

177
00:08:38,976 --> 00:08:41,126
the machinery that points at

178
00:08:41,216 --> 00:08:42,015
because they're needed.

179
00:08:42,015 --> 00:08:43,476
So those fields are optional.

180
00:08:45,626 --> 00:08:48,336
It's also been optimized for

181
00:08:48,336 --> 00:08:51,636
So we wanted to add features

182
00:08:51,636 --> 00:08:53,416
that are extremely compelling

183
00:08:53,626 --> 00:08:55,506
for our platforms

184
00:08:55,506 --> 00:09:00,606
And we also have a

185
00:08:55,506 --> 00:09:00,606
And we also have a

186
00:09:00,736 --> 00:09:03,326
And typically in file systems

187
00:09:03,326 --> 00:09:05,026
between latency and throughput.

188
00:09:05,026 --> 00:09:07,906
And we've chosen to lean

189
00:09:08,136 --> 00:09:12,016
And we do this because we want

190
00:09:12,016 --> 00:09:14,626
on them on the desktop,

191
00:09:14,626 --> 00:09:17,556
on your phone you want it to

192
00:09:17,556 --> 00:09:19,306
and have very crisp animation.

193
00:09:19,566 --> 00:09:22,006
And the reason for that is when

194
00:09:22,006 --> 00:09:24,346
we want to ensure that we

195
00:09:24,446 --> 00:09:25,766
as quickly as possible.

196
00:09:27,596 --> 00:09:29,886
And finally we have native

197
00:09:29,886 --> 00:09:30,696
into the file system.

198
00:09:31,216 --> 00:09:34,656
On HFS+ as we mentioned, it

199
00:09:34,706 --> 00:09:37,226
but those are stored on disk

200
00:09:37,656 --> 00:09:40,036
On Apple File System that's not

201
00:09:40,036 --> 00:09:43,986
class citizens, first class

202
00:09:45,316 --> 00:09:47,256
So that's a bit about

203
00:09:47,846 --> 00:09:50,436
So HFS compatibility, if all

204
00:09:50,436 --> 00:09:54,756
on HFS+ just fine, we intend

205
00:09:55,006 --> 00:09:57,706
without any changes

206
00:09:58,366 --> 00:09:59,806
So Apple File System

207
00:09:59,806 --> 00:10:02,126
and replace HFS+ functionality.

208
00:09:59,806 --> 00:10:02,126
and replace HFS+ functionality.

209
00:10:02,376 --> 00:10:04,936
And there's an asterisks there

210
00:10:04,936 --> 00:10:06,916
that we will not

211
00:10:07,286 --> 00:10:10,416
One of them is exchange

212
00:10:10,416 --> 00:10:14,596
and the third is directory

213
00:10:15,646 --> 00:10:19,606
But every other API and

214
00:10:19,606 --> 00:10:21,136
as it is on HFS+.

215
00:10:22,156 --> 00:10:25,036
So now I want to tell you a

216
00:10:25,036 --> 00:10:26,566
which is one of the

217
00:10:26,566 --> 00:10:28,096
into Apple File System.

218
00:10:29,286 --> 00:10:31,086
So let's take a quick

219
00:10:31,086 --> 00:10:33,636
in the audience have a

220
00:10:34,036 --> 00:10:35,506
with more than one partition?

221
00:10:36,846 --> 00:10:37,396
Okay, great.

222
00:10:37,706 --> 00:10:41,916
We do as well, one of the

223
00:10:41,916 --> 00:10:44,836
is we want a development

224
00:10:44,836 --> 00:10:48,456
and we want you know the stable

225
00:10:48,826 --> 00:10:50,726
Or you might choose to have

226
00:10:50,936 --> 00:10:53,956
and other different data that

227
00:10:54,656 --> 00:10:57,986
But one of the things that we've

228
00:10:57,986 --> 00:10:59,876
that come back when users

229
00:10:59,876 --> 00:11:02,836
and reporting their

230
00:10:59,876 --> 00:11:02,836
and reporting their

231
00:11:02,836 --> 00:11:05,076
that most end users

232
00:11:05,296 --> 00:11:06,896
They just have the

233
00:11:07,296 --> 00:11:09,846
And the reason they don't

234
00:11:10,396 --> 00:11:12,296
You have to know exactly

235
00:11:12,296 --> 00:11:14,096
out your disk at the

236
00:11:14,306 --> 00:11:16,566
and changing it is

237
00:11:17,216 --> 00:11:19,236
Moreover, free space

238
00:11:19,236 --> 00:11:20,876
as you know does not translate

239
00:11:20,876 --> 00:11:23,396
into available free space

240
00:11:23,906 --> 00:11:25,016
So we're solving this

241
00:11:25,016 --> 00:11:26,826
with a feature we're

242
00:11:27,676 --> 00:11:30,166
So let's take an example

243
00:11:30,166 --> 00:11:31,746
as we kind of explain

244
00:11:32,236 --> 00:11:34,036
Let's say you're

245
00:11:34,036 --> 00:11:36,356
and greatest cat video you

246
00:11:36,356 --> 00:11:38,316
from your friend

247
00:11:39,286 --> 00:11:42,466
And let's say that file

248
00:11:42,466 --> 00:11:45,856
in fact so big that you've

249
00:11:46,056 --> 00:11:47,606
on the partition on

250
00:11:48,526 --> 00:11:50,286
Well there's not a whole

251
00:11:50,286 --> 00:11:51,526
If you're out of space,

252
00:11:52,006 --> 00:11:55,976
One thing you could do though is

253
00:11:55,976 --> 00:11:58,706
immediately afterwards

254
00:11:58,706 --> 00:12:00,256
So let's look at that.

255
00:11:58,706 --> 00:12:00,256
So let's look at that.

256
00:12:00,256 --> 00:12:04,796
We can destroy partition

257
00:12:04,796 --> 00:12:08,396
and now you have enough space to

258
00:12:09,786 --> 00:12:12,126
But this is also inflexible

259
00:12:12,126 --> 00:12:15,446
of a problem if the file that

260
00:12:15,446 --> 00:12:18,916
on partition 1, but it was

261
00:12:19,726 --> 00:12:21,366
So in this case, you're going

262
00:12:21,366 --> 00:12:23,816
to grow the file,

263
00:12:23,816 --> 00:12:26,106
And then even if

264
00:12:26,106 --> 00:12:29,166
or content that you're willing

265
00:12:29,566 --> 00:12:33,576
we could destroy it, but then

266
00:12:33,576 --> 00:12:36,056
because it's not adjacent

267
00:12:36,056 --> 00:12:37,006
that we just made available.

268
00:12:37,626 --> 00:12:38,556
So we think this is something

269
00:12:38,556 --> 00:12:40,316
that we can solve

270
00:12:40,696 --> 00:12:42,446
So in Apple File

271
00:12:42,446 --> 00:12:45,356
up with this base concept

272
00:12:45,426 --> 00:12:48,186
applicably named because

273
00:12:48,186 --> 00:12:49,506
or individual file systems.

274
00:12:50,616 --> 00:12:54,156
So, in this instance, Apple File

275
00:12:54,156 --> 00:12:55,576
lowest level of functionality.

276
00:12:55,576 --> 00:12:58,676
And this is what encapsulates

277
00:12:58,676 --> 00:13:00,736
as well as our crash

278
00:12:58,676 --> 00:13:00,736
as well as our crash

279
00:13:01,786 --> 00:13:04,786
So let's say we have volume

280
00:13:04,786 --> 00:13:07,916
of free space in the partition,

281
00:13:08,776 --> 00:13:11,966
volume can grow,

282
00:13:12,896 --> 00:13:15,466
But in all these cases the free

283
00:13:15,496 --> 00:13:18,236
to what's currently available

284
00:13:18,956 --> 00:13:21,366
You can also create more than

285
00:13:21,366 --> 00:13:23,226
which will occupy

286
00:13:24,126 --> 00:13:26,826
And then if you wanted to

287
00:13:26,826 --> 00:13:27,986
at this point you could do so.

288
00:13:28,466 --> 00:13:30,966
And now if you ask for how

289
00:13:30,966 --> 00:13:32,846
on the system you will

290
00:13:32,846 --> 00:13:34,466
in the green rectangle

291
00:13:35,266 --> 00:13:37,516
So developers take note, this

292
00:13:37,516 --> 00:13:40,506
subtly different from how you

293
00:13:40,506 --> 00:13:41,076
in the past.

294
00:13:41,076 --> 00:13:42,356
If you're using some paradigm

295
00:13:42,356 --> 00:13:45,896
like taking a total storage

296
00:13:45,896 --> 00:13:48,086
to get the free space,

297
00:13:48,306 --> 00:13:49,986
because other volumes

298
00:13:50,116 --> 00:13:52,766
on the container are also

299
00:13:53,446 --> 00:13:56,616
Additionally, you can't

300
00:13:56,616 --> 00:13:58,286
of the used space either.

301
00:13:59,316 --> 00:14:02,836
So, next, I'm going to invite

302
00:13:59,316 --> 00:14:02,836
So, next, I'm going to invite

303
00:14:02,836 --> 00:14:04,886
about cloning files

304
00:14:05,516 --> 00:14:11,546
[ Applause ]

305
00:14:12,046 --> 00:14:13,426
&gt;&gt; Hi. Again my name is

306
00:14:13,426 --> 00:14:14,776
through a couple of the

307
00:14:14,776 --> 00:14:16,186
that we have in APFS.

308
00:14:16,666 --> 00:14:18,176
First, we're going

309
00:14:18,176 --> 00:14:19,496
of files and directories.

310
00:14:19,896 --> 00:14:24,026
So here we have a file, TOP

311
00:14:24,026 --> 00:14:24,876
in his home directory.

312
00:14:24,876 --> 00:14:27,046
And it has references

313
00:14:27,486 --> 00:14:30,326
Now if Eric wanted to make an

314
00:14:30,866 --> 00:14:33,446
as it existed at this point in

315
00:14:33,446 --> 00:14:35,996
by reading it all in,

316
00:14:36,436 --> 00:14:38,906
That has obvious

317
00:14:39,156 --> 00:14:41,406
power, and disk space usage.

318
00:14:41,696 --> 00:14:44,416
Instead with APFS you

319
00:14:44,786 --> 00:14:47,036
By cloning the file,

320
00:14:47,036 --> 00:14:49,326
to the data instead

321
00:14:49,466 --> 00:14:53,546
So it's obviously much faster

322
00:14:53,616 --> 00:14:55,686
you're not using twice

323
00:14:55,686 --> 00:14:57,246
you're using exactly

324
00:14:57,246 --> 00:14:59,556
of space plus a small

325
00:14:59,846 --> 00:15:01,866
for the additional

326
00:14:59,846 --> 00:15:01,866
for the additional

327
00:15:02,386 --> 00:15:05,076
What a clone guarantees

328
00:15:05,076 --> 00:15:07,716
that if a modification is

329
00:15:07,716 --> 00:15:09,846
or the clone, the

330
00:15:09,906 --> 00:15:11,566
that data to a new location.

331
00:15:11,616 --> 00:15:13,436
So the clone remains untouched.

332
00:15:14,476 --> 00:15:16,816
So this is an important

333
00:15:16,916 --> 00:15:20,946
When you have clones, you

334
00:15:20,946 --> 00:15:22,366
you're not using any

335
00:15:22,366 --> 00:15:24,966
As you continue to make

336
00:15:24,966 --> 00:15:26,496
to use more and more space.

337
00:15:27,316 --> 00:15:33,336
In addition, because APFS, or

338
00:15:33,336 --> 00:15:36,356
in application bundles,

339
00:15:36,426 --> 00:15:38,736
to clone an entire

340
00:15:38,736 --> 00:15:41,746
So a document bundle is a

341
00:15:41,746 --> 00:15:43,586
of files inside of it.

342
00:15:43,586 --> 00:15:45,876
APFS can clone that

343
00:15:47,156 --> 00:15:48,966
Next let's talk about snapshots.

344
00:15:49,726 --> 00:15:51,346
Here, we have another

345
00:15:51,346 --> 00:15:53,356
of a file system

346
00:15:53,686 --> 00:15:55,436
BikeRacing and CoffeeOrigins.

347
00:15:55,966 --> 00:15:57,506
BikeRacing has two

348
00:15:58,036 --> 00:15:59,526
And CoffeeOrigins has one.

349
00:15:59,886 --> 00:16:03,536
If we take snapshot of the file

350
00:15:59,886 --> 00:16:03,536
If we take snapshot of the file

351
00:16:03,666 --> 00:16:07,346
independently mountable, read

352
00:16:07,986 --> 00:16:11,196
that represents this data the

353
00:16:11,196 --> 00:16:12,496
that the snapshot was taken.

354
00:16:12,956 --> 00:16:15,376
Much like with clones,

355
00:16:15,376 --> 00:16:18,376
into the live file system, the

356
00:16:18,376 --> 00:16:21,836
in a new location preserving

357
00:16:22,916 --> 00:16:27,636
Likewise, if we were to delete

358
00:16:27,636 --> 00:16:31,016
up some space, the file system

359
00:16:31,086 --> 00:16:34,476
because as you can see

360
00:16:34,476 --> 00:16:35,676
to refer to those blocks.

361
00:16:36,046 --> 00:16:37,606
This is an important

362
00:16:37,606 --> 00:16:40,486
that developers need to be aware

363
00:16:40,646 --> 00:16:44,536
because when a file is deleted,

364
00:16:44,536 --> 00:16:46,626
of a snapshot, the

365
00:16:46,916 --> 00:16:49,786
So snapshots can cause you

366
00:16:49,786 --> 00:16:52,716
if you don't harvest

367
00:16:53,416 --> 00:16:56,366
We expect that developers

368
00:16:56,366 --> 00:16:59,926
for the purposes of having a

369
00:16:59,926 --> 00:17:02,906
to perform a backup, but we're

370
00:16:59,926 --> 00:17:02,906
to perform a backup, but we're

371
00:17:02,906 --> 00:17:04,396
from developers on other uses

372
00:17:04,396 --> 00:17:05,816
that they might have

373
00:17:05,816 --> 00:17:08,066
So please come see us

374
00:17:08,396 --> 00:17:10,596
Let us know what you would

375
00:17:12,876 --> 00:17:14,976
Now let's talk about

376
00:17:14,976 --> 00:17:17,256
And this is another

377
00:17:17,256 --> 00:17:20,175
So we have the same state of the

378
00:17:20,175 --> 00:17:23,906
that well, we don't like

379
00:17:23,906 --> 00:17:25,445
essentially a global undo.

380
00:17:25,445 --> 00:17:28,376
We want to go back to the point

381
00:17:28,376 --> 00:17:30,646
at the time the snapshot

382
00:17:31,036 --> 00:17:33,956
So you can flag a

383
00:17:33,956 --> 00:17:35,136
to the state of a snapshot.

384
00:17:35,136 --> 00:17:38,606
And the next time it's mounted,

385
00:17:38,796 --> 00:17:42,376
essentially to the point it was

386
00:17:42,656 --> 00:17:44,636
And then allow you to

387
00:17:44,636 --> 00:17:45,766
from that point forward.

388
00:17:45,886 --> 00:17:48,596
So, again, you can see that

389
00:17:48,956 --> 00:17:49,906
and the change that was made

390
00:17:49,906 --> 00:17:51,686
to the other file

391
00:17:52,116 --> 00:17:55,026
The snapshot continues to

392
00:17:55,026 --> 00:17:56,586
as many times as you would like.

393
00:17:59,286 --> 00:17:59,496
All right.

394
00:17:59,596 --> 00:18:01,596
Now let's talk about

395
00:17:59,596 --> 00:18:01,596
Now let's talk about

396
00:18:02,346 --> 00:18:03,176
This is an answer

397
00:18:03,176 --> 00:18:06,386
to the question how much space

398
00:18:06,706 --> 00:18:09,876
Now applications frequently

399
00:18:09,876 --> 00:18:13,126
for sizing an operation to

400
00:18:13,456 --> 00:18:14,976
And the obvious way

401
00:18:14,976 --> 00:18:17,766
to open the directory hierarchy

402
00:18:17,766 --> 00:18:19,946
recursively and look at the size

403
00:18:19,946 --> 00:18:22,126
of all the items

404
00:18:22,126 --> 00:18:24,596
Of course users would

405
00:18:24,596 --> 00:18:26,246
that answer a little

406
00:18:26,636 --> 00:18:29,596
On this next slide, if you focus

407
00:18:29,596 --> 00:18:32,096
of the screen, when the

408
00:18:32,166 --> 00:18:34,586
you'll see it says,

409
00:18:36,806 --> 00:18:39,436
And after a couple of seconds

410
00:18:39,716 --> 00:18:41,226
That's what we're

411
00:18:42,086 --> 00:18:44,466
So, the file system

412
00:18:44,466 --> 00:18:47,286
Obviously you could store the

413
00:18:47,316 --> 00:18:50,866
with the directory itself,

414
00:18:51,226 --> 00:18:53,456
how do you safely

415
00:18:53,456 --> 00:18:55,286
and its parents on up the chain.

416
00:18:55,816 --> 00:18:58,476
So we're just delving a little

417
00:18:58,536 --> 00:19:02,076
but when you have a lock on a

418
00:18:58,536 --> 00:19:02,076
but when you have a lock on a

419
00:19:02,366 --> 00:19:03,906
you can't also lock your parent,

420
00:19:04,056 --> 00:19:05,766
because that's a

421
00:19:05,766 --> 00:19:09,136
File system always lock

422
00:19:09,186 --> 00:19:11,006
never from the child

423
00:19:11,006 --> 00:19:13,746
And so if you start doing it

424
00:19:14,866 --> 00:19:17,606
So APFS instead sidesteps

425
00:19:18,006 --> 00:19:20,266
If the problem is storing

426
00:19:20,416 --> 00:19:22,146
well let's store the

427
00:19:22,546 --> 00:19:24,426
So by storing the

428
00:19:24,776 --> 00:19:27,576
we can use atomic

429
00:19:27,696 --> 00:19:30,516
in a separate record that's

430
00:19:30,926 --> 00:19:33,296
And we don't have any

431
00:19:34,126 --> 00:19:36,076
This comes at a small

432
00:19:36,076 --> 00:19:39,026
for the additional size records,

433
00:19:39,026 --> 00:19:40,666
in the noise with the IO.

434
00:19:41,426 --> 00:19:43,266
All right.

435
00:19:43,386 --> 00:19:46,036
Next, we're going to talk about

436
00:19:46,716 --> 00:19:48,906
The first example is

437
00:19:48,906 --> 00:19:52,496
This is how safe-save works

438
00:19:52,936 --> 00:19:55,136
So here I have

439
00:19:55,546 --> 00:19:57,276
And I come up with some

440
00:19:57,276 --> 00:19:58,556
for making money fast.

441
00:19:58,876 --> 00:20:01,356
And when the application

442
00:19:58,876 --> 00:20:01,356
And when the application

443
00:20:01,356 --> 00:20:03,906
to a temporary location

444
00:20:04,346 --> 00:20:06,936
When the application is happy

445
00:20:07,176 --> 00:20:10,016
and is safe out on disk,

446
00:20:10,016 --> 00:20:11,106
to perform a rename.

447
00:20:11,296 --> 00:20:13,826
Now renames of files

448
00:20:14,216 --> 00:20:16,676
The file system guarantees that

449
00:20:16,836 --> 00:20:19,196
and it's safe, or it

450
00:20:19,736 --> 00:20:22,246
In addition, the file system

451
00:20:22,246 --> 00:20:23,976
previous version

452
00:20:24,306 --> 00:20:26,886
So that's great for regular

453
00:20:26,886 --> 00:20:28,236
if you have a document bundle?

454
00:20:28,696 --> 00:20:32,516
So here we have a document

455
00:20:32,626 --> 00:20:35,756
which is a directory

456
00:20:35,756 --> 00:20:37,056
of the document inside of it.

457
00:20:37,566 --> 00:20:40,386
And what happens today is

458
00:20:40,386 --> 00:20:43,416
and they play a really great

459
00:20:43,946 --> 00:20:45,346
that change is written out,

460
00:20:45,716 --> 00:20:47,996
but now what commences

461
00:20:47,996 --> 00:20:51,136
to do an atomic rename

462
00:20:51,136 --> 00:20:54,206
of another directory, because

463
00:20:54,836 --> 00:20:57,046
that if the destination

464
00:20:57,436 --> 00:20:59,186
So, we begin playing

465
00:20:59,826 --> 00:21:02,886
First, the document is moved out

466
00:20:59,826 --> 00:21:02,886
First, the document is moved out

467
00:21:02,886 --> 00:21:05,396
So at this point, if

468
00:21:05,396 --> 00:21:06,616
and the application crashed,

469
00:21:06,616 --> 00:21:09,326
or the system lost

470
00:21:10,106 --> 00:21:13,996
Then, the application moves the

471
00:21:13,996 --> 00:21:15,906
to handle deleting

472
00:21:15,906 --> 00:21:18,386
of the directory,

473
00:21:18,706 --> 00:21:20,876
So this is not atomic

474
00:21:20,876 --> 00:21:22,796
And this is something

475
00:21:22,796 --> 00:21:24,986
for a very long time and

476
00:21:25,546 --> 00:21:29,116
With APFS we introduced a

477
00:21:29,496 --> 00:21:32,846
for non POSIX, which

478
00:21:32,846 --> 00:21:33,776
of the directory.

479
00:21:34,086 --> 00:21:36,686
So now, when the

480
00:21:36,686 --> 00:21:38,126
to its temporary location,

481
00:21:38,536 --> 00:21:41,206
and asks to perform the

482
00:21:41,486 --> 00:21:43,836
with atomically handle the swap

483
00:21:44,326 --> 00:21:46,676
and deleting the previous

484
00:21:46,676 --> 00:21:49,126
So this is now atomic and safe.

485
00:21:49,126 --> 00:21:51,426
Of course as a developer, you

486
00:21:51,426 --> 00:21:53,846
to this low-level of system call

487
00:21:54,086 --> 00:21:56,746
because it's already been

488
00:21:56,746 --> 00:22:00,766
So you just get the benefit of

489
00:21:56,746 --> 00:22:00,766
So you just get the benefit of

490
00:22:01,516 --> 00:22:07,816
[ Applause ]

491
00:22:08,316 --> 00:22:09,996
Next, I'm going to

492
00:22:11,126 --> 00:22:13,196
So as Eric mentioned, with HFS+,

493
00:22:13,666 --> 00:22:16,236
on the Mac we use a

494
00:22:16,276 --> 00:22:19,446
that sits beneath HFS,

495
00:22:20,016 --> 00:22:22,466
and provides full disk

496
00:22:22,556 --> 00:22:24,016
It's a rather sophisticated

497
00:22:24,016 --> 00:22:25,156
and it does a lot of things.

498
00:22:25,936 --> 00:22:28,076
On iOS, we have a

499
00:22:28,076 --> 00:22:31,806
that stores encryption keys and

500
00:22:31,806 --> 00:22:33,696
And those encryption

501
00:22:33,696 --> 00:22:37,186
with the accelerated AES

502
00:22:37,186 --> 00:22:39,046
to provide per file encryption.

503
00:22:39,436 --> 00:22:41,016
It's a kind of complicated story

504
00:22:41,016 --> 00:22:42,946
with two rather different

505
00:22:43,286 --> 00:22:45,176
And with APFS, we

506
00:22:45,176 --> 00:22:47,566
and provide a more

507
00:22:47,566 --> 00:22:49,026
across all of our products.

508
00:22:49,916 --> 00:22:53,386
So APFS supports multiple levels

509
00:22:54,026 --> 00:22:56,466
But first, the easiest level

510
00:22:56,466 --> 00:22:57,246
is no encryption.

511
00:22:57,736 --> 00:23:00,016
All data is written in

512
00:22:57,736 --> 00:23:00,016
All data is written in

513
00:23:00,016 --> 00:23:02,456
and metadata is written

514
00:23:03,056 --> 00:23:05,896
The next level is to

515
00:23:06,386 --> 00:23:08,296
So all sensitive metadata

516
00:23:08,566 --> 00:23:10,886
and data are encrypted

517
00:23:11,126 --> 00:23:12,646
This is essentially

518
00:23:12,646 --> 00:23:13,846
of full disk encryption.

519
00:23:14,536 --> 00:23:15,846
The most sophisticated level

520
00:23:15,846 --> 00:23:18,036
that we support is

521
00:23:18,436 --> 00:23:21,376
Here, sensitive Metadata

522
00:23:22,146 --> 00:23:26,286
with a single key that's

523
00:23:26,326 --> 00:23:30,256
that are used in

524
00:23:30,606 --> 00:23:33,376
In addition, because of how

525
00:23:33,736 --> 00:23:36,426
APFS supports per

526
00:23:36,456 --> 00:23:40,076
So each region of a file can

527
00:23:40,526 --> 00:23:42,426
This is unique and

528
00:23:42,426 --> 00:23:44,446
out there supports

529
00:23:44,896 --> 00:23:47,706
In addition, this allows us

530
00:23:47,706 --> 00:23:49,276
across all of our platforms.

531
00:23:49,916 --> 00:23:52,036
All right and with that I'll

532
00:23:53,516 --> 00:23:59,276
[ Applause ]

533
00:23:59,776 --> 00:24:02,166
&gt;&gt; Okay so now I'm going

534
00:23:59,776 --> 00:24:02,166
&gt;&gt; Okay so now I'm going

535
00:24:02,316 --> 00:24:06,766
of Apple File System on MacOS

536
00:24:09,956 --> 00:24:12,066
So probably the easiest

537
00:24:12,066 --> 00:24:13,296
to start experimenting

538
00:24:13,296 --> 00:24:15,606
with Apple File System

539
00:24:15,606 --> 00:24:16,806
So we're going to do that first.

540
00:24:17,886 --> 00:24:20,676
So, you can see on the command

541
00:24:20,676 --> 00:24:24,506
create-fs APFS which specifies

542
00:24:24,506 --> 00:24:27,216
of type APFS, we give it

543
00:24:27,216 --> 00:24:28,196
to do a sparse bundle.

544
00:24:28,836 --> 00:24:29,856
So it's going to warn you here,

545
00:24:29,856 --> 00:24:32,016
because this is an

546
00:24:32,266 --> 00:24:34,566
and we want you to be aware

547
00:24:34,566 --> 00:24:39,076
that you are using something

548
00:24:39,426 --> 00:24:42,626
So, at this point it will

549
00:24:44,556 --> 00:24:47,446
And you've created the disk

550
00:24:53,056 --> 00:24:55,216
You can examine that on

551
00:24:56,206 --> 00:24:59,446
You can see that in fact the

552
00:24:59,446 --> 00:25:01,196
So that's probably the

553
00:24:59,446 --> 00:25:01,196
So that's probably the

554
00:25:01,196 --> 00:25:03,866
to just get something

555
00:25:05,186 --> 00:25:09,226
So next I want to show

556
00:25:09,226 --> 00:25:12,186
more advanced features

557
00:25:13,356 --> 00:25:13,876
I'll close that.

558
00:25:14,436 --> 00:25:17,486
So here I have two thumb sticks.

559
00:25:17,486 --> 00:25:19,106
These are just ordinary

560
00:25:19,106 --> 00:25:23,036
You can get them at any

561
00:25:23,676 --> 00:25:24,666
So I will plug in one.

562
00:25:24,666 --> 00:25:27,626
One is formatted as HFS+

563
00:25:27,626 --> 00:25:29,036
as Apple File System.

564
00:25:39,056 --> 00:25:41,756
So we'll also do

565
00:25:41,756 --> 00:25:44,746
so you can watch the free

566
00:25:45,336 --> 00:25:51,836
So at this point I have some

567
00:25:51,836 --> 00:25:55,746
And there's a good

568
00:25:55,746 --> 00:25:56,886
of those directory hierarchies.

569
00:25:57,366 --> 00:26:00,586
But first we're going to start

570
00:25:57,366 --> 00:26:00,586
But first we're going to start

571
00:26:00,586 --> 00:26:02,566
of iTunes in the HFS volume

572
00:26:02,566 --> 00:26:04,846
and then we'll do the

573
00:26:04,846 --> 00:26:07,896
So start the copy, as that goes.

574
00:26:07,896 --> 00:26:09,966
You can see the progress

575
00:26:10,506 --> 00:26:11,716
but APFS already finished.

576
00:26:11,906 --> 00:26:13,626
Because it uses the

577
00:26:13,626 --> 00:26:17,076
So finder has already adopted

578
00:26:17,076 --> 00:26:19,716
So if you do a copy and finder

579
00:26:19,716 --> 00:26:21,046
for you behind the scenes.

580
00:26:21,046 --> 00:26:22,926
And HFS still hasn't

581
00:26:23,516 --> 00:26:26,956
[ Applause ]

582
00:26:27,456 --> 00:26:31,506
Okay, so I could do the same

583
00:26:31,506 --> 00:26:33,866
which you can look in here,

584
00:26:33,866 --> 00:26:36,166
they're all several

585
00:26:36,696 --> 00:26:43,056
Pay attention to the free space

586
00:26:43,146 --> 00:26:46,986
So if I do a copy, it's actually

587
00:26:47,196 --> 00:26:50,216
and you notice the free space

588
00:26:50,216 --> 00:26:50,486
at all.

589
00:26:52,476 --> 00:26:56,996
So next, I'm going to

590
00:26:58,396 --> 00:27:01,126
So this uses the tool

591
00:26:58,396 --> 00:27:01,126
So this uses the tool

592
00:27:01,126 --> 00:27:03,626
which will be available

593
00:27:03,626 --> 00:27:05,656
that releases to everybody.

594
00:27:06,656 --> 00:27:09,596
Oh, sorry this needs

595
00:27:12,046 --> 00:27:13,966
Okay so now I've

596
00:27:13,966 --> 00:27:17,586
I can examine it

597
00:27:24,046 --> 00:27:26,606
And you can see that it

598
00:27:27,136 --> 00:27:32,386
So I've created a map point,

599
00:27:33,016 --> 00:27:36,666
So I will mount this

600
00:27:37,256 --> 00:27:39,146
And you can see that

601
00:27:39,146 --> 00:27:42,336
up on the desktop and this

602
00:27:42,336 --> 00:27:44,966
of the file system as

603
00:27:45,076 --> 00:27:45,776
that I just took it, so.

604
00:27:46,516 --> 00:27:53,426
[ Applause ]

605
00:27:53,926 --> 00:27:54,986
So now in the APFS volume,

606
00:27:54,986 --> 00:27:57,706
I'm going to create

607
00:27:59,466 --> 00:28:01,906
hello I am a temporary file.

608
00:27:59,466 --> 00:28:01,906
hello I am a temporary file.

609
00:28:03,096 --> 00:28:04,596
Save that, close it.

610
00:28:04,596 --> 00:28:06,346
You can see that

611
00:28:06,686 --> 00:28:09,306
in that APFS volume this

612
00:28:09,366 --> 00:28:11,726
But it's not there

613
00:28:14,136 --> 00:28:18,006
Correspondingly, I

614
00:28:18,006 --> 00:28:19,446
of these demo photos.

615
00:28:19,676 --> 00:28:22,466
I'll move them to the

616
00:28:24,146 --> 00:28:26,526
The free space actually

617
00:28:26,556 --> 00:28:31,006
because now they're pinned by

618
00:28:31,116 --> 00:28:33,306
So if I wanted to delete

619
00:28:33,366 --> 00:28:35,936
to delete the snapshot.

620
00:28:38,476 --> 00:28:40,456
Okay, so that's just

621
00:28:40,646 --> 00:28:43,076
of Apple File System in action.

622
00:28:44,516 --> 00:28:50,546
[ Applause ]

623
00:28:51,046 --> 00:28:53,836
Okay, so let's talk about some

624
00:28:53,916 --> 00:28:55,356
to support Apple File System.

625
00:28:56,476 --> 00:28:59,196
So first, is one that

626
00:28:59,196 --> 00:28:59,976
that you're familiar with.

627
00:28:59,976 --> 00:29:01,446
If you're using the Foundation

628
00:28:59,976 --> 00:29:01,446
If you're using the Foundation

629
00:29:01,446 --> 00:29:04,576
or the FileManager these have

630
00:29:05,076 --> 00:29:09,116
So is use copy item or replace

631
00:29:09,176 --> 00:29:12,186
clone or the safe-save

632
00:29:12,186 --> 00:29:14,146
for you automatically, you

633
00:29:14,296 --> 00:29:15,246
so it just comes for free.

634
00:29:15,786 --> 00:29:16,736
It automatically figures

635
00:29:16,736 --> 00:29:19,466
out if the file system

636
00:29:19,466 --> 00:29:21,836
or Apple File System and

637
00:29:21,836 --> 00:29:22,996
when it is appropriate.

638
00:29:24,476 --> 00:29:27,236
If, however you decide

639
00:29:27,236 --> 00:29:29,476
or the FileManager doesn't

640
00:29:29,476 --> 00:29:31,056
you can go a little bit lower

641
00:29:31,056 --> 00:29:33,396
and we have a library

642
00:29:33,396 --> 00:29:36,426
And this supports the

643
00:29:36,426 --> 00:29:37,896
and this is what we

644
00:29:37,896 --> 00:29:39,296
of years before we had cloning.

645
00:29:40,066 --> 00:29:43,236
So copy files supports a new

646
00:29:43,346 --> 00:29:46,816
It's equivalent to the 5 or

647
00:29:47,236 --> 00:29:48,756
And we decided to

648
00:29:48,756 --> 00:29:50,776
because if you're using

649
00:29:50,776 --> 00:29:53,446
like this you may not

650
00:29:53,446 --> 00:29:55,396
[inaudible] and extended

651
00:29:55,396 --> 00:29:58,326
to be copied exactly

652
00:29:58,726 --> 00:30:01,286
Whereas cloning will implicitly

653
00:29:58,726 --> 00:30:01,286
Whereas cloning will implicitly

654
00:30:01,686 --> 00:30:05,616
Again, this library will also

655
00:30:05,616 --> 00:30:07,236
if the backend file

656
00:30:07,516 --> 00:30:09,766
And if not it will continue

657
00:30:11,416 --> 00:30:14,156
These are the new

658
00:30:14,156 --> 00:30:17,736
and renameatx np are

659
00:30:17,736 --> 00:30:20,116
to support the safe-save

660
00:30:20,796 --> 00:30:23,136
These are available in the

661
00:30:23,136 --> 00:30:25,266
of macOS Sierra that you have

662
00:30:25,266 --> 00:30:26,876
at the Man Page,

663
00:30:27,026 --> 00:30:29,706
And these are the

664
00:30:29,836 --> 00:30:33,036
So clone files and its

665
00:30:33,036 --> 00:30:34,216
of files and directories.

666
00:30:35,276 --> 00:30:38,996
So a word on compatibility,

667
00:30:38,996 --> 00:30:41,776
to get access to an

668
00:30:41,776 --> 00:30:44,036
to use hdiutil as I showed you.

669
00:30:44,406 --> 00:30:46,406
It's currently available

670
00:30:46,486 --> 00:30:50,026
for macOS Sierra so as a

671
00:30:50,026 --> 00:30:53,276
not been fully wired up into

672
00:30:53,596 --> 00:30:55,476
So the fastest way

673
00:30:55,476 --> 00:30:57,446
like this hdiutil create-fs APFS

674
00:30:57,446 --> 00:31:01,046
and you can get a disk

675
00:30:57,446 --> 00:31:01,046
and you can get a disk

676
00:31:01,516 --> 00:31:05,766
You can also use diskutil

677
00:31:05,766 --> 00:31:07,996
delete a container, add a

678
00:31:08,286 --> 00:31:11,576
Whatever lower-level

679
00:31:11,746 --> 00:31:12,916
to the container itself.

680
00:31:13,666 --> 00:31:15,196
And finally, we also

681
00:31:15,306 --> 00:31:16,936
that we've been working

682
00:31:17,276 --> 00:31:20,326
So this will be able to

683
00:31:20,326 --> 00:31:21,626
as well as perform repairs.

684
00:31:21,976 --> 00:31:24,246
So that's also continuing

685
00:31:25,266 --> 00:31:27,216
So, some current limitations

686
00:31:27,216 --> 00:31:30,086
of Apple File System file

687
00:31:31,136 --> 00:31:32,926
This will be supported

688
00:31:32,926 --> 00:31:35,566
We don't support booting from

689
00:31:37,006 --> 00:31:40,556
Time machine backups with Apple

690
00:31:40,556 --> 00:31:40,996
right now.

691
00:31:42,556 --> 00:31:45,466
File vault and fusion drive

692
00:31:46,646 --> 00:31:49,746
And currently the volume

693
00:31:49,746 --> 00:31:50,156
right now.

694
00:31:50,246 --> 00:31:53,406
So if you're not sure that your

695
00:31:53,796 --> 00:31:56,206
please give it a try, create

696
00:31:56,206 --> 00:32:00,246
up on a partition on your

697
00:31:56,206 --> 00:32:00,246
up on a partition on your

698
00:32:00,246 --> 00:32:03,286
and running your app

699
00:32:03,286 --> 00:32:05,166
and let us know how it's doing.

700
00:32:07,476 --> 00:32:09,036
Some other compatibility notes.

701
00:32:09,596 --> 00:32:12,186
Apple File System cannot

702
00:32:12,186 --> 00:32:15,876
So if you want to use

703
00:32:15,876 --> 00:32:17,656
that you use SNB instead

704
00:32:17,746 --> 00:32:21,576
as a preferred file sharing

705
00:32:21,796 --> 00:32:26,026
OS X Yosemite or earlier

706
00:32:26,026 --> 00:32:26,726
System volume.

707
00:32:26,726 --> 00:32:29,466
So please do not take an Apple

708
00:32:29,466 --> 00:32:32,046
back to OS X Yosemite

709
00:32:32,046 --> 00:32:34,286
You will inevitably

710
00:32:34,286 --> 00:32:36,476
that you don't want

711
00:32:37,896 --> 00:32:38,156
So, [laughter].

712
00:32:38,196 --> 00:32:43,446
macOS Sierra will have

713
00:32:43,446 --> 00:32:44,976
of Apple File System.

714
00:32:45,626 --> 00:32:49,036
And it will be a developer

715
00:32:49,526 --> 00:32:52,466
Sierra ships this fall.

716
00:32:52,686 --> 00:32:55,976
So now you might be wondering

717
00:32:55,976 --> 00:32:57,416
How do all of you get access

718
00:32:57,446 --> 00:32:59,686
to Apple File System

719
00:33:01,316 --> 00:33:02,086
We'll talk about that.

720
00:33:03,626 --> 00:33:05,096
So upgrading to Apple

721
00:33:05,096 --> 00:33:06,416
So you want these

722
00:33:06,416 --> 00:33:08,256
that we've shown you,

723
00:33:08,846 --> 00:33:11,816
Well one way we could do

724
00:33:11,816 --> 00:33:14,716
all users to back up their

725
00:33:14,716 --> 00:33:16,256
make sure everything's

726
00:33:16,436 --> 00:33:18,616
and then erase the

727
00:33:18,886 --> 00:33:21,776
restore it put a new OS back on

728
00:33:22,086 --> 00:33:23,666
A process which will

729
00:33:24,036 --> 00:33:25,866
and hope that everything's

730
00:33:25,866 --> 00:33:26,816
after you've restored it.

731
00:33:27,526 --> 00:33:28,286
Well, we're not doing that.

732
00:33:29,316 --> 00:33:32,476
Instead, Apple will provide

733
00:33:32,706 --> 00:33:35,466
from HFS+ to Apple File System.

734
00:33:36,516 --> 00:33:40,906
[ Applause ]

735
00:33:41,406 --> 00:33:44,806
In doing this, the user data

736
00:33:45,276 --> 00:33:49,096
and we will write, or Apple

737
00:33:49,096 --> 00:33:51,946
brand new, into the

738
00:33:52,076 --> 00:33:54,516
And we're doing this

739
00:33:55,256 --> 00:33:56,856
This is a multi-second

740
00:33:56,856 --> 00:33:59,236
to multi-minute operation

741
00:33:59,836 --> 00:34:02,896
And over that time, if the

742
00:33:59,836 --> 00:34:02,896
And over that time, if the

743
00:34:02,896 --> 00:34:06,126
anything bad happens we want the

744
00:34:06,126 --> 00:34:07,996
and sound as if nothing

745
00:34:08,565 --> 00:34:12,065
So the Apple File System

746
00:34:12,065 --> 00:34:13,266
as atomic as possible.

747
00:34:13,266 --> 00:34:14,886
It's not completely

748
00:34:14,996 --> 00:34:17,775
but as the operation is

749
00:34:18,306 --> 00:34:20,466
we intend for it

750
00:34:20,585 --> 00:34:23,096
as if nothing had ever happened.

751
00:34:24,335 --> 00:34:26,406
So Apple File System will ship,

752
00:34:26,406 --> 00:34:29,496
by default on all

753
00:34:31,516 --> 00:34:36,946
[ Applause ]

754
00:34:37,446 --> 00:34:41,856
So to summarize, Apple File

755
00:34:41,856 --> 00:34:46,065
system for all Apple products

756
00:34:46,576 --> 00:34:49,045
it's crash protected, it

757
00:34:50,306 --> 00:34:52,156
we support cloning

758
00:34:52,525 --> 00:34:55,686
Enhanced data security features

759
00:34:55,996 --> 00:34:56,976
that we just discussed.

760
00:34:58,016 --> 00:35:01,376
It's also been tuned and

761
00:34:58,016 --> 00:35:01,376
It's also been tuned and

762
00:35:01,376 --> 00:35:03,746
for the Apple ecosystem

763
00:35:04,516 --> 00:35:07,786
So you can get more information

764
00:35:08,106 --> 00:35:12,746
at this URL behind me that will

765
00:35:12,746 --> 00:35:16,156
as some sample code so that

766
00:35:16,156 --> 00:35:17,636
and directories in action.

767
00:35:18,906 --> 00:35:21,816
So some takeaways for all

768
00:35:22,356 --> 00:35:23,916
Apple File System

769
00:35:23,916 --> 00:35:26,196
2017 will be here

770
00:35:26,466 --> 00:35:29,966
I want you to please test your

771
00:35:29,966 --> 00:35:32,406
with the macOS build

772
00:35:33,086 --> 00:35:35,166
Try running your apps

773
00:35:35,286 --> 00:35:37,966
Please let us know

774
00:35:38,386 --> 00:35:41,986
If you report any bugs, please

775
00:35:41,986 --> 00:35:44,126
through traditional means

776
00:35:44,366 --> 00:35:47,086
We all want you to love

777
00:35:47,596 --> 00:35:51,706
So, some related sessions.

778
00:35:51,706 --> 00:35:53,776
If you're interested in

779
00:35:53,776 --> 00:35:56,746
of the security features on

780
00:35:56,826 --> 00:35:59,726
we recommend that

781
00:35:59,726 --> 00:36:02,026
at How iOS Security

782
00:35:59,726 --> 00:36:02,026
at How iOS Security

783
00:36:02,026 --> 00:36:04,116
in this room today at 4 o'clock.

784
00:36:04,646 --> 00:36:07,506
And with that, that's Apple

785
00:36:07,506 --> 00:36:08,526
to see how you're

786
00:36:09,508 --> 00:36:11,508
[ Applause ]
