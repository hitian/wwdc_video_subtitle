1
00:00:06,516 --> 00:00:17,500
[ Music ]

2
00:00:22,516 --> 00:00:27,856
[ Applause ]

3
00:00:28,356 --> 00:00:30,226
&gt;&gt; Good afternoon and welcome.

4
00:00:30,916 --> 00:00:33,886
My name is Nurinder Manj and

5
00:00:33,886 --> 00:00:34,716
of TVMLKit team.

6
00:00:35,536 --> 00:00:38,266
I'm here with Parry

7
00:00:38,266 --> 00:00:40,826
to build great apps

8
00:00:42,186 --> 00:00:47,456
Now most of you here have built

9
00:00:47,456 --> 00:00:50,476
through the hard work

10
00:00:50,476 --> 00:00:51,996
and optimizing user interface.

11
00:00:52,626 --> 00:00:57,826
Often that means sacrificing

12
00:00:59,126 --> 00:01:03,116
Some of you have built web

13
00:00:59,126 --> 00:01:03,116
Some of you have built web

14
00:01:03,316 --> 00:01:08,806
dynamic updates, but the user

15
00:01:08,806 --> 00:01:13,176
TVMLKit, which is a brand new

16
00:01:13,706 --> 00:01:16,316
bridges the gap between these

17
00:01:17,496 --> 00:01:22,316
When you build your apps using

18
00:01:22,756 --> 00:01:27,516
feel, and perform

19
00:01:27,516 --> 00:01:29,576
Let's get started.

20
00:01:29,686 --> 00:01:31,626
Today, first I'm going to talk

21
00:01:31,626 --> 00:01:34,166
about what the framework

22
00:01:34,656 --> 00:01:40,876
Next, we have sample app

23
00:01:40,876 --> 00:01:43,986
to demonstrate a

24
00:01:44,866 --> 00:01:49,166
But before that, I will cover

25
00:01:50,796 --> 00:01:55,186
The latter half of the talk is

26
00:01:55,186 --> 00:01:57,746
of the exciting new

27
00:01:57,786 --> 00:02:01,426
to introduce for tvOS 10.

28
00:01:57,786 --> 00:02:01,426
to introduce for tvOS 10.

29
00:02:01,616 --> 00:02:04,226
Let me walk you through some

30
00:02:06,646 --> 00:02:10,336
This is an app store

31
00:02:11,676 --> 00:02:18,446
a gorgeous iTunes movies app,

32
00:02:20,116 --> 00:02:22,056
Another example is Apple Music.

33
00:02:22,676 --> 00:02:28,506
In fact, all of these

34
00:02:28,566 --> 00:02:31,316
with Apple TV are

35
00:02:31,316 --> 00:02:34,836
And if you take a step back

36
00:02:34,896 --> 00:02:38,276
to consider what are

37
00:02:39,226 --> 00:02:40,436
they have a common goal.

38
00:02:40,436 --> 00:02:46,476
They let people browse, interact

39
00:02:46,476 --> 00:02:51,966
of content in a simple,

40
00:02:54,216 --> 00:02:57,006
So what does the

41
00:02:57,816 --> 00:03:01,596
The framework offers

42
00:02:57,816 --> 00:03:01,596
The framework offers

43
00:03:01,596 --> 00:03:06,246
interface, which is

44
00:03:07,156 --> 00:03:12,816
saving you both development

45
00:03:13,036 --> 00:03:15,096
That rich and complex

46
00:03:15,096 --> 00:03:19,806
that you just saw is defined

47
00:03:21,436 --> 00:03:23,696
and JavaScript drives

48
00:03:24,106 --> 00:03:28,266
Templates are very flexible.

49
00:03:29,196 --> 00:03:33,166
You can change their appearance

50
00:03:36,956 --> 00:03:39,086
Now the framework

51
00:03:39,086 --> 00:03:41,346
to the templates

52
00:03:42,686 --> 00:03:45,216
You can enhance existing

53
00:03:45,296 --> 00:03:47,936
by adding your own views

54
00:03:49,246 --> 00:03:51,346
or even create brand

55
00:03:51,856 --> 00:03:55,736
You can also extend

56
00:03:55,816 --> 00:03:59,906
that is specific to your app.

57
00:04:00,186 --> 00:04:02,726
And let me assure you

58
00:04:03,996 --> 00:04:08,686
It an optimized native user

59
00:04:09,246 --> 00:04:12,846
Let's build an app.

60
00:04:14,606 --> 00:04:17,906
There are three main components

61
00:04:17,906 --> 00:04:21,546
about that we are going to

62
00:04:22,296 --> 00:04:27,076
First is Xcode to create and

63
00:04:27,446 --> 00:04:33,456
Next, I will talk about

64
00:04:33,456 --> 00:04:35,606
to configure the templates.

65
00:04:36,066 --> 00:04:40,376
And last, I will talk

66
00:04:40,906 --> 00:04:42,416
how it will drive

67
00:04:43,006 --> 00:04:47,896
Now before we dig into details,

68
00:04:47,896 --> 00:04:49,496
like from an architectural

69
00:04:50,016 --> 00:04:53,576
A typical TVMLKit app is based

70
00:04:53,576 --> 00:04:55,336
on a client server

71
00:04:55,916 --> 00:05:00,316
where your client app is

72
00:04:55,916 --> 00:05:00,316
where your client app is

73
00:05:00,316 --> 00:05:05,136
on a tvOS device and your

74
00:05:05,196 --> 00:05:06,146
and JavaScript files.

75
00:05:08,196 --> 00:05:11,066
The framework offers an

76
00:05:12,286 --> 00:05:15,796
that will download the main

77
00:05:15,796 --> 00:05:17,876
up a JavaScript environment

78
00:05:17,876 --> 00:05:20,036
over the control to JavaScript.

79
00:05:20,456 --> 00:05:27,176
Once the control is handed

80
00:05:27,176 --> 00:05:30,796
for downloading any

81
00:05:31,726 --> 00:05:33,516
to present the templates

82
00:05:34,026 --> 00:05:37,636
And JavaScript is

83
00:05:37,636 --> 00:05:39,966
for handling any user events and

84
00:05:46,216 --> 00:05:49,216
Now the first step to

85
00:05:50,816 --> 00:05:54,446
Xcode provides TVML application

86
00:05:54,446 --> 00:05:56,566
as a starting point

87
00:05:58,816 --> 00:06:01,766
This is the partial code that

88
00:05:58,816 --> 00:06:01,766
This is the partial code that

89
00:06:02,376 --> 00:06:08,696
The first step here is to modify

90
00:06:08,696 --> 00:06:10,086
to your main JavaScript file.

91
00:06:10,566 --> 00:06:16,316
Next step is to create an

92
00:06:16,886 --> 00:06:18,926
associate the javaScriptURL,

93
00:06:19,796 --> 00:06:22,986
and you can optionally also

94
00:06:23,206 --> 00:06:26,076
that will be passed on to the

95
00:06:26,556 --> 00:06:30,626
And the last step is to create

96
00:06:30,626 --> 00:06:32,706
instance with the

97
00:06:33,826 --> 00:06:37,516
and that will download your main

98
00:06:37,916 --> 00:06:41,866
and hand over the

99
00:06:41,866 --> 00:06:44,526
You can also optionally

100
00:06:45,976 --> 00:06:50,406
to monitor the state of your

101
00:06:50,436 --> 00:06:52,996
if it launched successfully

102
00:06:52,996 --> 00:06:56,976
Next let's talk about templates.

103
00:07:04,626 --> 00:07:06,866
Now TVML is a Markup

104
00:07:07,486 --> 00:07:09,956
to define Apple-TV-specific

105
00:07:10,496 --> 00:07:15,936
The Markup when presented

106
00:07:16,116 --> 00:07:19,116
from JavaScript translates

107
00:07:20,456 --> 00:07:24,116
Now once it is presented, you

108
00:07:24,116 --> 00:07:27,206
and those changes

109
00:07:27,206 --> 00:07:29,316
to user interface in

110
00:07:31,676 --> 00:07:34,826
Templates out of the

111
00:07:35,726 --> 00:07:38,006
You don't have to do

112
00:07:38,856 --> 00:07:43,206
Just fill in your content

113
00:07:43,426 --> 00:07:46,566
However, you can

114
00:07:46,566 --> 00:07:50,666
and behavior using styles

115
00:07:51,406 --> 00:07:57,396
In terms of Markup,

116
00:07:57,986 --> 00:07:59,276
that wraps the templates.

117
00:07:59,796 --> 00:08:03,166
This is the XML structure

118
00:07:59,796 --> 00:08:03,166
This is the XML structure

119
00:08:04,216 --> 00:08:05,456
There are two child elements.

120
00:08:06,446 --> 00:08:09,476
The first is head,

121
00:08:09,906 --> 00:08:13,376
which encapsulates all the

122
00:08:14,796 --> 00:08:20,136
The second element is the

123
00:08:20,666 --> 00:08:26,396
Each template has a unique

124
00:08:27,646 --> 00:08:30,556
Let's take a look at

125
00:08:31,046 --> 00:08:37,025
This is the Top Movies page

126
00:08:37,936 --> 00:08:41,486
This template allows

127
00:08:41,486 --> 00:08:42,765
through stacks of content.

128
00:08:44,246 --> 00:08:46,716
In Markup, it is called

129
00:08:47,236 --> 00:08:50,086
In this particular example,

130
00:08:51,486 --> 00:08:54,216
this template is

131
00:08:55,666 --> 00:08:58,376
At the root of the template

132
00:08:58,556 --> 00:09:01,906
which encapsulates various

133
00:08:58,556 --> 00:09:01,906
which encapsulates various

134
00:09:02,166 --> 00:09:04,876
shelves, grids, and

135
00:09:09,456 --> 00:09:12,296
Now the top row here

136
00:09:13,206 --> 00:09:15,616
which allows horizontal

137
00:09:16,566 --> 00:09:18,316
with the focused

138
00:09:22,256 --> 00:09:26,466
This control when in idle state

139
00:09:26,936 --> 00:09:34,446
and the Markup to create

140
00:09:35,336 --> 00:09:39,006
where you have a

141
00:09:39,006 --> 00:09:40,446
of lockups with imagines.

142
00:09:40,446 --> 00:09:43,626
There is no any additional

143
00:09:45,356 --> 00:09:49,426
The row next to the

144
00:09:50,536 --> 00:09:53,086
which also allows horizontal

145
00:09:53,576 --> 00:10:00,486
And the Markup to represent that

146
00:09:53,576 --> 00:10:00,486
And the Markup to represent that

147
00:10:00,606 --> 00:10:03,236
but shelf allows you

148
00:10:04,116 --> 00:10:05,946
and can have one

149
00:10:06,946 --> 00:10:09,126
Each section further

150
00:10:09,766 --> 00:10:11,596
and must have one

151
00:10:11,596 --> 00:10:14,736
So what is a lockup?

152
00:10:14,736 --> 00:10:17,806
A lockup is a UI control

153
00:10:18,366 --> 00:10:22,576
that encapsulates image

154
00:10:23,046 --> 00:10:30,416
This is a [inaudible],

155
00:10:30,666 --> 00:10:35,236
And going back to our example,

156
00:10:35,276 --> 00:10:38,006
that is focused has its

157
00:10:39,336 --> 00:10:41,346
This is not the default

158
00:10:42,876 --> 00:10:47,216
This is an example of how you

159
00:10:48,286 --> 00:10:51,636
Let me show you how to do this.

160
00:10:51,836 --> 00:10:53,426
Here we are defining a new class

161
00:10:54,246 --> 00:10:57,606
which has a highlight style

162
00:10:57,606 --> 00:11:00,316
to marquee and show

163
00:10:57,606 --> 00:11:00,316
to marquee and show

164
00:11:01,436 --> 00:11:04,196
and then you set this class not

165
00:11:04,196 --> 00:11:09,146
of the lockup and that

166
00:11:09,256 --> 00:11:12,776
However, this is a fairly

167
00:11:13,206 --> 00:11:15,036
Let me show you a

168
00:11:15,406 --> 00:11:18,346
This is a stackTemplate again.

169
00:11:18,866 --> 00:11:23,536
Here we have a banner which has

170
00:11:23,906 --> 00:11:25,746
and banner is a sibling

171
00:11:26,136 --> 00:11:29,706
There's a background color

172
00:11:29,706 --> 00:11:32,686
and the template seamlessly

173
00:11:32,686 --> 00:11:34,966
into the banner image

174
00:11:36,136 --> 00:11:39,106
The layout for the banner title

175
00:11:39,176 --> 00:11:45,206
and the button is

176
00:11:45,366 --> 00:11:48,606
Another familiar example

177
00:11:49,076 --> 00:11:50,486
This is also a stackTemplate.

178
00:11:54,496 --> 00:11:57,846
The background image on

179
00:11:57,846 --> 00:12:01,176
by the framework by

180
00:11:57,846 --> 00:12:01,176
by the framework by

181
00:12:01,326 --> 00:12:02,576
as a hero image element.

182
00:12:03,006 --> 00:12:08,886
And again, the layout

183
00:12:09,136 --> 00:12:11,756
and the buttons is

184
00:12:12,026 --> 00:12:19,726
Now there are numerous templates

185
00:12:19,916 --> 00:12:24,276
And using styles, you can

186
00:12:24,756 --> 00:12:26,526
that suit your brand.

187
00:12:28,516 --> 00:12:32,666
TVML Catalogue is a

188
00:12:32,666 --> 00:12:34,146
and interact with templates.

189
00:12:35,276 --> 00:12:39,446
Please check it out.

190
00:12:39,726 --> 00:12:44,026
Now as I mentioned before,

191
00:12:44,026 --> 00:12:46,106
between native and

192
00:12:47,486 --> 00:12:51,466
You just saw how easy

193
00:12:51,466 --> 00:12:54,846
and complex user interface

194
00:12:55,346 --> 00:12:58,796
Let me show you how

195
00:12:58,826 --> 00:12:59,526
the application.

196
00:13:00,056 --> 00:13:08,916
The JavaScript engine that

197
00:13:08,916 --> 00:13:14,856
by JavaScriptCore framework and

198
00:13:14,856 --> 00:13:17,836
to debug and performance

199
00:13:18,316 --> 00:13:22,686
And starting tvOS 10,

200
00:13:22,776 --> 00:13:25,656
JavaScriptCore is ES6

201
00:13:26,516 --> 00:13:31,806
[ Applause ]

202
00:13:32,306 --> 00:13:34,986
TVMLKit adds platform-specific

203
00:13:35,316 --> 00:13:37,056
to help drive the application.

204
00:13:37,606 --> 00:13:44,116
Now the standard web APIs like

205
00:13:44,116 --> 00:13:49,566
between client and server;

206
00:13:49,566 --> 00:13:52,446
listen for user events,

207
00:13:52,646 --> 00:13:55,346
session storage are all

208
00:13:55,876 --> 00:14:01,316
In addition to that, TVMLKit

209
00:13:55,876 --> 00:14:01,316
In addition to that, TVMLKit

210
00:14:01,316 --> 00:14:04,526
APIs, for instance to

211
00:14:05,876 --> 00:14:07,086
access system info,

212
00:14:09,196 --> 00:14:13,306
play [inaudible] slideshow

213
00:14:13,876 --> 00:14:16,276
In addition to that,

214
00:14:17,566 --> 00:14:20,926
the framework also

215
00:14:21,396 --> 00:14:23,166
to handle media playback.

216
00:14:25,556 --> 00:14:28,916
Now one important thing I

217
00:14:28,916 --> 00:14:32,016
that there is a single

218
00:14:32,016 --> 00:14:36,136
application controller, and you

219
00:14:36,466 --> 00:14:37,926
within that single context.

220
00:14:38,386 --> 00:14:42,976
Let me go into details for

221
00:14:47,416 --> 00:14:49,516
The first is app object.

222
00:14:50,116 --> 00:14:52,866
App object provides callbacks

223
00:14:52,866 --> 00:14:55,896
and the first and

224
00:14:57,066 --> 00:14:59,706
This is the starting point for

225
00:15:02,436 --> 00:15:04,886
Another API I would

226
00:15:05,226 --> 00:15:09,106
to handle errors,

227
00:15:09,436 --> 00:15:11,286
You must provide this

228
00:15:11,496 --> 00:15:13,586
to handle those unexpected

229
00:15:14,186 --> 00:15:18,456
Now once the control is

230
00:15:19,796 --> 00:15:20,696
the first thing you will want

231
00:15:20,696 --> 00:15:22,516
to do is probably

232
00:15:23,156 --> 00:15:28,396
To do so, NavigationDocument is

233
00:15:28,396 --> 00:15:30,906
with here and it's equivalent

234
00:15:30,906 --> 00:15:33,816
to a UINavigationController

235
00:15:33,816 --> 00:15:37,726
There is a global

236
00:15:38,176 --> 00:15:39,916
and you can now create

237
00:15:40,426 --> 00:15:44,296
Now you're only responsible

238
00:15:45,016 --> 00:15:46,916
[inaudible] them as a result

239
00:15:46,916 --> 00:15:49,246
of Menu gesture is

240
00:15:52,196 --> 00:15:56,036
There are three main APIs that

241
00:15:57,016 --> 00:16:00,196
The first two here

242
00:15:57,016 --> 00:16:00,196
The first two here

243
00:16:00,196 --> 00:16:04,046
and replaceDocument

244
00:16:05,116 --> 00:16:09,396
Let me show you a recommended

245
00:16:11,156 --> 00:16:15,666
Here is a code snippet to

246
00:16:16,376 --> 00:16:18,686
Typically when you are

247
00:16:18,686 --> 00:16:22,076
or launching the app, you

248
00:16:23,296 --> 00:16:27,576
so that the users know

249
00:16:27,726 --> 00:16:30,386
And once you have created

250
00:16:30,666 --> 00:16:33,766
you would use pushDocument

251
00:16:34,916 --> 00:16:37,866
Now while you are waiting for

252
00:16:39,006 --> 00:16:42,096
and prepared, later

253
00:16:42,096 --> 00:16:45,516
to replace your loading document

254
00:16:46,886 --> 00:16:49,696
And to do that, you would

255
00:16:50,146 --> 00:16:54,986
This is a very common

256
00:16:55,336 --> 00:16:57,396
to show the Spinner right away

257
00:16:57,396 --> 00:16:57,966
from the network.

258
00:17:04,586 --> 00:17:10,336
And the last API is presentModal

259
00:17:10,486 --> 00:17:12,626
or actually any other

260
00:17:13,165 --> 00:17:18,925
Now the key to TV watching

261
00:17:19,856 --> 00:17:21,526
and we have made

262
00:17:22,685 --> 00:17:25,455
Let me show you how to do that.

263
00:17:25,685 --> 00:17:27,396
With less than 10 lines of code,

264
00:17:28,006 --> 00:17:31,206
you can configure a

265
00:17:31,206 --> 00:17:32,326
playback experience.

266
00:17:33,726 --> 00:17:36,246
Let me walk you through

267
00:17:36,376 --> 00:17:39,626
First, create a MediaItem

268
00:17:39,626 --> 00:17:43,556
and the URL to the video stream.

269
00:17:43,726 --> 00:17:47,816
You should also specify title,

270
00:17:48,096 --> 00:17:50,856
so that it can be made

271
00:17:50,856 --> 00:17:52,306
of the video playback

272
00:17:52,546 --> 00:17:59,016
Next, create a playlist and add

273
00:18:00,366 --> 00:18:03,006
And the last step is to

274
00:18:03,426 --> 00:18:05,976
associate the playlist,

275
00:18:06,516 --> 00:18:10,326
And that gives you a

276
00:18:10,326 --> 00:18:11,406
playback experience.

277
00:18:11,896 --> 00:18:20,076
In addition to that,

278
00:18:20,076 --> 00:18:24,456
like to handle interstitials,

279
00:18:25,186 --> 00:18:28,856
chapter groups, time

280
00:18:28,856 --> 00:18:30,766
of other APIs are also provided

281
00:18:30,766 --> 00:18:32,256
from within JavaScript

282
00:18:33,946 --> 00:18:35,356
Now similar to video playback,

283
00:18:36,346 --> 00:18:39,146
we have also extended the

284
00:18:39,676 --> 00:18:42,986
and doing so is very similar.

285
00:18:44,416 --> 00:18:47,646
The only thing changed

286
00:18:47,876 --> 00:18:49,356
and the URL to an audio stream.

287
00:18:49,886 --> 00:18:54,566
And that gives you

288
00:18:54,566 --> 00:18:57,036
and functional Audio

289
00:18:57,696 --> 00:18:59,446
which is the same

290
00:18:59,986 --> 00:19:06,386
Now if you're building a music

291
00:18:59,986 --> 00:19:06,386
Now if you're building a music

292
00:19:06,426 --> 00:19:09,646
that you should do which

293
00:19:10,276 --> 00:19:13,616
so that it can continue

294
00:19:13,616 --> 00:19:17,636
in the suspended state and

295
00:19:17,636 --> 00:19:22,386
to how you have done it

296
00:19:22,456 --> 00:19:25,416
up a playback category

297
00:19:26,496 --> 00:19:29,346
and add the background

298
00:19:30,046 --> 00:19:31,646
and the rest is handled

299
00:19:33,676 --> 00:19:36,866
And with that, I would like

300
00:19:37,186 --> 00:19:39,426
to demo Building a

301
00:19:39,426 --> 00:19:39,876
Thank you.

302
00:19:40,516 --> 00:19:46,516
[ Applause ]

303
00:19:47,016 --> 00:19:47,826
&gt;&gt; Thank you, Nurinder.

304
00:19:48,086 --> 00:19:48,686
Hello, everyone.

305
00:19:48,936 --> 00:19:49,796
My name is Jeff.

306
00:19:50,006 --> 00:19:53,986
I'm here to show you a TVML

307
00:19:53,986 --> 00:19:55,936
of the things that we've

308
00:19:56,846 --> 00:19:59,416
You'll also get a

309
00:19:59,416 --> 00:20:03,676
to build a native application

310
00:19:59,416 --> 00:20:03,676
to build a native application

311
00:20:05,416 --> 00:20:08,396
So for this demo, we'll be

312
00:20:08,396 --> 00:20:09,006
of the WWDC app.

313
00:20:09,006 --> 00:20:13,836
In terms of the user interface,

314
00:20:13,836 --> 00:20:17,276
of content where each shelf

315
00:20:17,326 --> 00:20:18,906
for a single track

316
00:20:19,276 --> 00:20:23,296
So just imagine having a

317
00:20:23,636 --> 00:20:25,466
app frameworks, design,

318
00:20:25,466 --> 00:20:25,976
So let's get started.

319
00:20:35,696 --> 00:20:38,116
So this is the Xcode project

320
00:20:39,186 --> 00:20:40,886
Let's start with the

321
00:20:41,066 --> 00:20:42,306
which is our app's entry point.

322
00:20:44,196 --> 00:20:47,916
In the application

323
00:20:48,906 --> 00:20:53,076
as you can see in just

324
00:20:53,076 --> 00:20:54,586
we have bootstrapped

325
00:20:54,666 --> 00:20:55,986
as a TVML application.

326
00:20:59,096 --> 00:21:01,676
We also specified the

327
00:20:59,096 --> 00:21:01,676
We also specified the

328
00:21:02,116 --> 00:21:03,736
which happens to

329
00:21:03,736 --> 00:21:06,616
that is running on this Mac.

330
00:21:07,066 --> 00:21:08,626
So if you look at this

331
00:21:09,596 --> 00:21:12,406
this is where I've configured

332
00:21:13,336 --> 00:21:16,856
And as you can see, there is a

333
00:21:17,746 --> 00:21:19,116
which is the JavaScript file

334
00:21:19,116 --> 00:21:20,766
that drives the TVML

335
00:21:23,316 --> 00:21:26,916
There is also a JSON file here

336
00:21:26,916 --> 00:21:28,006
that we need for this demo.

337
00:21:28,916 --> 00:21:31,606
So let's work through

338
00:21:31,916 --> 00:21:38,366
So at the top of this file here,

339
00:21:38,516 --> 00:21:41,026
to hold our model data.

340
00:21:41,546 --> 00:21:45,666
Next in the App.onLaunch

341
00:21:45,666 --> 00:21:49,796
that gets called when TVML

342
00:21:50,786 --> 00:21:52,476
So the main thing that

343
00:21:52,506 --> 00:21:56,556
to fetch our JSON file and then

344
00:21:56,556 --> 00:21:56,946
the data.

345
00:21:58,346 --> 00:21:59,846
Now before we go

346
00:22:00,066 --> 00:22:02,686
we should really be showing a

347
00:22:03,436 --> 00:22:04,586
This is always recommended

348
00:22:04,586 --> 00:22:07,106
for better user experience

349
00:22:07,106 --> 00:22:07,726
over the network.

350
00:22:09,316 --> 00:22:10,666
So let me add a few

351
00:22:11,406 --> 00:22:17,136
So the way to do

352
00:22:17,136 --> 00:22:18,996
to create a loading

353
00:22:19,686 --> 00:22:20,976
And this is done

354
00:22:20,976 --> 00:22:22,686
called createLoadingDocument.

355
00:22:23,076 --> 00:22:29,956
Let's jump into this

356
00:22:29,956 --> 00:22:31,976
that we are basically

357
00:22:32,246 --> 00:22:37,186
for a loading template and then

358
00:22:37,186 --> 00:22:38,396
using the DOMParser.

359
00:22:39,266 --> 00:22:42,356
Now returning to

360
00:22:43,686 --> 00:22:45,916
after creating the

361
00:22:46,196 --> 00:22:48,536
we will now use the

362
00:22:48,656 --> 00:22:50,026
to push the document onscreen.

363
00:22:50,916 --> 00:22:53,916
So this is like using

364
00:22:56,516 --> 00:22:59,166
So now that we have a loading

365
00:22:59,856 --> 00:23:05,856
we will now call a function that

366
00:22:59,856 --> 00:23:05,856
we will now call a function that

367
00:23:06,486 --> 00:23:09,826
which will use the built-in

368
00:23:09,996 --> 00:23:13,676
to fetch our JSON file and

369
00:23:13,766 --> 00:23:14,286
in a callback.

370
00:23:16,006 --> 00:23:21,896
Next, we will convert the

371
00:23:22,416 --> 00:23:24,206
into our JavaScript

372
00:23:26,786 --> 00:23:29,046
Now as our UI calls

373
00:23:29,386 --> 00:23:32,486
we will be creating a

374
00:23:33,886 --> 00:23:39,406
So let me paste some

375
00:23:39,596 --> 00:23:42,216
into our createStackDocument

376
00:23:42,216 --> 00:23:48,776
Now as you can see, similar to

377
00:23:48,776 --> 00:23:49,946
for the loading template

378
00:23:50,756 --> 00:23:53,426
we are creating the Markup

379
00:23:55,066 --> 00:23:57,186
So within the stackTemplate

380
00:23:57,676 --> 00:23:59,496
we've added a top

381
00:24:00,296 --> 00:24:02,936
And within the body

382
00:24:03,666 --> 00:24:06,686
we are actually looking through

383
00:24:07,196 --> 00:24:09,366
and creating a shelf

384
00:24:09,866 --> 00:24:12,726
And this is done using the

385
00:24:12,726 --> 00:24:13,406
that I have here.

386
00:24:13,546 --> 00:24:17,846
So let's jump into

387
00:24:18,386 --> 00:24:23,456
And again, we are creating the

388
00:24:25,166 --> 00:24:28,746
And within its body, we are

389
00:24:28,786 --> 00:24:31,916
for each session video.

390
00:24:32,736 --> 00:24:35,686
So let's now jump into the

391
00:24:36,266 --> 00:24:40,296
and you will see that we

392
00:24:40,606 --> 00:24:43,066
for a single lockup that

393
00:24:43,936 --> 00:24:46,916
And in this case, we are

394
00:24:47,036 --> 00:24:48,126
as a custom attribute.

395
00:24:49,356 --> 00:24:50,996
We are also adding an

396
00:24:51,126 --> 00:24:53,436
and the height and a title.

397
00:24:54,836 --> 00:24:58,596
So just a recap, we have now

398
00:24:58,986 --> 00:25:00,866
that contains multiple

399
00:24:58,986 --> 00:25:00,866
that contains multiple

400
00:25:01,236 --> 00:25:02,636
and within each shelf element,

401
00:25:02,636 --> 00:25:04,096
we have multiple

402
00:25:04,146 --> 00:25:05,976
So now let's return to

403
00:25:11,876 --> 00:25:14,026
So after creating

404
00:25:14,366 --> 00:25:16,556
we will now use the

405
00:25:17,006 --> 00:25:19,396
to replace the loading document

406
00:25:19,396 --> 00:25:19,976
with our stackDocument.

407
00:25:27,766 --> 00:25:29,646
And with that, we are

408
00:25:30,366 --> 00:25:31,386
Let's switch to Apple TV.

409
00:25:42,886 --> 00:25:43,436
So there you go.

410
00:25:44,006 --> 00:25:45,966
We now have a beautiful

411
00:25:46,516 --> 00:25:52,206
[ Applause ]

412
00:25:52,706 --> 00:25:55,466
where each shelf contains image

413
00:25:56,006 --> 00:25:59,596
So as you can see, with

414
00:25:59,686 --> 00:26:01,886
we were able to create an

415
00:25:59,686 --> 00:26:01,886
we were able to create an

416
00:26:02,216 --> 00:26:03,916
and feels right at

417
00:26:04,636 --> 00:26:08,576
So the next thing that we

418
00:26:08,576 --> 00:26:10,686
to play a video when we

419
00:26:11,386 --> 00:26:12,716
At the moment it

420
00:26:13,966 --> 00:26:15,936
So let's head back into Xcode

421
00:26:23,026 --> 00:26:24,356
So back into our

422
00:26:24,356 --> 00:26:26,976
I will now add these

423
00:26:35,186 --> 00:26:38,686
So this will register for

424
00:26:39,356 --> 00:26:41,666
The select event is when

425
00:26:41,666 --> 00:26:44,186
of the Siri Remote and the

426
00:26:44,306 --> 00:26:45,506
when you press on

427
00:26:46,216 --> 00:26:47,056
And in both cases,

428
00:26:48,096 --> 00:26:50,306
my playSelectedLockup

429
00:26:51,956 --> 00:26:55,466
So let's jump into this

430
00:26:57,566 --> 00:27:04,126
So the first step is to

431
00:26:57,566 --> 00:27:04,126
So the first step is to

432
00:27:04,396 --> 00:27:04,916
from the event.

433
00:27:07,136 --> 00:27:10,066
From there, we can retrieve

434
00:27:10,066 --> 00:27:10,816
custom attribute.

435
00:27:12,876 --> 00:27:16,976
Next, we will create a new

436
00:27:22,736 --> 00:27:26,266
of the type video and

437
00:27:26,266 --> 00:27:28,946
of the video, as shown here.

438
00:27:31,336 --> 00:27:34,526
We will also populate other

439
00:27:34,606 --> 00:27:38,056
such as the title,

440
00:27:40,426 --> 00:27:44,126
Next, we will create

441
00:27:44,836 --> 00:27:50,026
and push our mediaItem

442
00:27:50,026 --> 00:27:52,906
And finally, we will

443
00:27:54,946 --> 00:27:58,226
set the playlist, and

444
00:27:58,696 --> 00:28:00,336
to play the video

445
00:27:58,696 --> 00:28:00,336
to play the video

446
00:28:02,166 --> 00:28:04,576
So just a recap, we have

447
00:28:05,276 --> 00:28:07,716
with a playlist that

448
00:28:07,716 --> 00:28:09,876
So with that, let's

449
00:28:14,866 --> 00:28:18,426
So back on a UI, we will now

450
00:28:18,426 --> 00:28:20,456
on the lockup and the video

451
00:28:20,456 --> 00:28:21,686
in full-screen mode.

452
00:28:24,516 --> 00:28:31,696
[ Music and Applause ]

453
00:28:32,196 --> 00:28:32,566
Thank you.

454
00:28:32,566 --> 00:28:34,066
And you can press

455
00:28:34,296 --> 00:28:36,246
to exit the video as well.

456
00:28:36,736 --> 00:28:39,476
So that was video

457
00:28:40,316 --> 00:28:41,046
Thank you for your time.

458
00:28:41,256 --> 00:28:41,976
Back to you, Nurinder.

459
00:28:42,516 --> 00:28:49,696
[ Applause ]

460
00:28:50,196 --> 00:28:51,726
&gt;&gt; Thank you, Jeff,

461
00:28:52,746 --> 00:28:56,096
But just little amount of code,

462
00:28:56,616 --> 00:28:59,166
you could build a

463
00:28:59,496 --> 00:29:01,846
which is performance

464
00:28:59,496 --> 00:29:01,846
which is performance

465
00:29:02,316 --> 00:29:10,846
The spacing between the lockups,

466
00:29:11,186 --> 00:29:14,586
text treatments all

467
00:29:15,536 --> 00:29:19,306
Before we continue, let me

468
00:29:20,196 --> 00:29:24,156
Using the TVML application

469
00:29:24,466 --> 00:29:28,596
create and configure

470
00:29:29,016 --> 00:29:31,446
You learned how to create

471
00:29:31,726 --> 00:29:35,386
and a complex stack

472
00:29:36,346 --> 00:29:39,886
And you learned how to use

473
00:29:39,886 --> 00:29:43,686
or replace documents

474
00:29:43,896 --> 00:29:46,916
JavaScript is responsible

475
00:29:48,296 --> 00:29:53,096
And in this case, we handle

476
00:29:54,446 --> 00:29:59,506
and configured video to playback

477
00:30:03,556 --> 00:30:05,966
Now when we introduced TVMLKit,

478
00:30:06,286 --> 00:30:08,026
you could already

479
00:30:08,536 --> 00:30:11,986
and a lot of you already did.

480
00:30:12,136 --> 00:30:13,076
So thank you.

481
00:30:13,296 --> 00:30:20,546
You have provided some

482
00:30:20,546 --> 00:30:21,666
to make it even better.

483
00:30:22,196 --> 00:30:25,106
We have been hard at work

484
00:30:26,116 --> 00:30:31,256
and are adding some exciting new

485
00:30:31,746 --> 00:30:34,136
and would help take your

486
00:30:35,526 --> 00:30:37,046
To talk all about them, I would

487
00:30:37,046 --> 00:30:38,446
like to invite Parry

488
00:30:38,446 --> 00:30:38,786
Thank you.

489
00:30:39,516 --> 00:30:45,696
[ Applause ]

490
00:30:46,196 --> 00:30:46,796
&gt;&gt; Good afternoon.

491
00:30:47,836 --> 00:30:50,016
My name is Parry and I'm

492
00:30:50,016 --> 00:30:51,766
of the new features

493
00:30:51,766 --> 00:30:55,806
in TVMLKit in tvOS 10.

494
00:30:56,026 --> 00:30:58,286
Now TVMLKit provides you

495
00:30:58,286 --> 00:31:02,616
with highly desirable app-level

496
00:30:58,286 --> 00:31:02,616
with highly desirable app-level

497
00:31:02,876 --> 00:31:04,046
yet flexible interface.

498
00:31:04,666 --> 00:31:10,236
And the new features we've added

499
00:31:11,116 --> 00:31:15,006
For example, simply by

500
00:31:15,006 --> 00:31:17,016
in the search results

501
00:31:17,696 --> 00:31:20,116
you can make the results

502
00:31:20,116 --> 00:31:20,976
as the user is typing.

503
00:31:28,616 --> 00:31:32,526
This provides an engaged

504
00:31:33,426 --> 00:31:39,186
as they are trying to

505
00:31:39,256 --> 00:31:44,506
Or if you have a music app,

506
00:31:44,786 --> 00:31:48,916
to the top-level Menu bar, you

507
00:31:49,006 --> 00:31:54,806
of Now Playing audio experience

508
00:31:55,076 --> 00:31:58,906
So it comes in and goes out as

509
00:32:00,836 --> 00:32:05,946
This gives your users a

510
00:32:05,946 --> 00:32:09,026
to the playlist and

511
00:32:11,316 --> 00:32:15,106
Now all of these features

512
00:32:16,506 --> 00:32:19,016
but they're also very

513
00:32:19,536 --> 00:32:27,736
And to show you that, I'm

514
00:32:27,936 --> 00:32:32,106
talk about them, and at

515
00:32:32,106 --> 00:32:34,286
in the demo you just saw.

516
00:32:38,296 --> 00:32:43,896
So let's start with the first

517
00:32:43,966 --> 00:32:46,166
light and dark appearance.

518
00:32:46,716 --> 00:32:53,056
In tvOS 10, there's a new dark

519
00:32:53,056 --> 00:32:56,966
systemwide and all

520
00:32:58,656 --> 00:33:02,336
Your TVMLKit app is

521
00:32:58,656 --> 00:33:02,336
Your TVMLKit app is

522
00:33:03,036 --> 00:33:05,686
by configuring the

523
00:33:06,636 --> 00:33:08,696
It's the same thing you would

524
00:33:08,696 --> 00:33:10,036
application using UIKit.

525
00:33:11,896 --> 00:33:15,326
So you'll specify the appearance

526
00:33:17,056 --> 00:33:22,086
You can say either

527
00:33:22,656 --> 00:33:24,606
in which case it picks

528
00:33:25,226 --> 00:33:30,686
But no matter which

529
00:33:31,256 --> 00:33:34,786
your standard TVMLKit app

530
00:33:34,786 --> 00:33:37,456
out of the box, without

531
00:33:38,016 --> 00:33:43,216
All of our templates are

532
00:33:43,476 --> 00:33:45,526
for both appearances,

533
00:33:46,896 --> 00:33:49,946
And TVMLKit switches between

534
00:33:50,406 --> 00:33:50,976
so you get it for free.

535
00:33:56,436 --> 00:34:02,916
However, if you have explicit

536
00:33:56,436 --> 00:34:02,916
However, if you have explicit

537
00:34:04,516 --> 00:34:07,346
then you will have to

538
00:34:07,346 --> 00:34:08,936
for both appearances as well.

539
00:34:09,976 --> 00:34:10,916
Let's take an example.

540
00:34:10,916 --> 00:34:17,886
So here's a template that has

541
00:34:17,956 --> 00:34:22,636
to black using an

542
00:34:24,416 --> 00:34:26,786
This may not work

543
00:34:28,226 --> 00:34:29,856
And for it to work,

544
00:34:29,966 --> 00:34:36,726
to define the class foo specific

545
00:34:37,916 --> 00:34:41,406
So in order to do

546
00:34:42,036 --> 00:34:45,815
we've added a new media

547
00:34:45,815 --> 00:34:52,456
that has a feature

548
00:34:52,456 --> 00:34:54,846
which you can create

549
00:34:55,335 --> 00:34:59,716
that is specific

550
00:34:59,846 --> 00:35:01,606
So simply combine

551
00:34:59,846 --> 00:35:01,606
So simply combine

552
00:35:01,606 --> 00:35:03,296
up for both the appearances,

553
00:35:04,266 --> 00:35:06,536
group them in their

554
00:35:07,976 --> 00:35:09,036
put them in the document,

555
00:35:10,066 --> 00:35:13,506
and TVMLKit will pick

556
00:35:14,086 --> 00:35:21,986
So with little configuration

557
00:35:21,986 --> 00:35:26,976
of code, your apps are

558
00:35:32,636 --> 00:35:35,506
Now let's move on

559
00:35:35,546 --> 00:35:37,836
that also enhances

560
00:35:38,626 --> 00:35:39,376
but in a different way.

561
00:35:40,806 --> 00:35:41,966
Let's talk about

562
00:35:48,646 --> 00:35:53,306
It's fair to say that

563
00:35:53,306 --> 00:35:55,476
of TV watching experience.

564
00:35:56,086 --> 00:35:59,906
And if you have a catalogue

565
00:36:01,226 --> 00:36:05,656
then you want your users

566
00:36:05,656 --> 00:36:06,966
as they launch your app.

567
00:36:08,726 --> 00:36:13,216
And embedding videos in your

568
00:36:14,416 --> 00:36:17,386
Now just to show you what

569
00:36:17,386 --> 00:36:21,486
to your app, we created

570
00:36:21,616 --> 00:36:25,466
of the demo you just saw but

571
00:36:25,466 --> 00:36:26,976
Have a look.

572
00:36:31,516 --> 00:36:41,076
[ Music ]

573
00:36:41,576 --> 00:36:43,756
It's seamless.

574
00:36:43,756 --> 00:36:48,216
Not only it's not obtrusive

575
00:36:48,636 --> 00:36:49,576
but it compliments it.

576
00:36:50,536 --> 00:36:51,746
It makes it more immersive.

577
00:36:52,356 --> 00:36:59,006
And as expected, TVMLKit does

578
00:36:59,056 --> 00:37:03,376
for you and gives you this

579
00:36:59,056 --> 00:37:03,376
for you and gives you this

580
00:37:03,376 --> 00:37:04,076
to work with it.

581
00:37:04,076 --> 00:37:05,976
So let's have a look at that.

582
00:37:11,436 --> 00:37:17,826
So in a nutshell with TVMLKit,

583
00:37:17,826 --> 00:37:20,976
and a playback area

584
00:37:21,986 --> 00:37:24,796
Most likely it's going

585
00:37:29,936 --> 00:37:34,146
TVMLKit handles the playback

586
00:37:34,146 --> 00:37:38,966
to do is specify when

587
00:37:39,596 --> 00:37:43,756
So you can say that

588
00:37:44,146 --> 00:37:48,726
when the containing lockup

589
00:37:48,726 --> 00:37:52,976
as it appears on the screen.

590
00:37:53,156 --> 00:37:54,556
You have full control

591
00:37:54,556 --> 00:37:57,566
over transitioning the

592
00:37:57,986 --> 00:38:05,636
And if you have advanced use

593
00:37:57,986 --> 00:38:05,636
And if you have advanced use

594
00:38:05,636 --> 00:38:10,366
for instance, then you have

595
00:38:10,366 --> 00:38:15,976
in JavaScript with all of its

596
00:38:20,476 --> 00:38:28,326
Now you can embed videos using

597
00:38:28,516 --> 00:38:33,896
First, you configure

598
00:38:33,966 --> 00:38:36,156
Second, you configure the player

599
00:38:36,156 --> 00:38:40,796
with the media item

600
00:38:40,926 --> 00:38:45,066
And third, you want to handle

601
00:38:45,156 --> 00:38:45,686
to full screen.

602
00:38:46,726 --> 00:38:48,976
Let's have a look at these

603
00:38:53,276 --> 00:38:56,506
So we've made configuring the

604
00:38:57,576 --> 00:39:02,166
We've added a new element

605
00:38:57,576 --> 00:39:02,166
We've added a new element

606
00:39:03,536 --> 00:39:08,416
that you can use the wrap

607
00:39:08,416 --> 00:39:10,076
in which you want

608
00:39:10,606 --> 00:39:15,676
This gives the lockup

609
00:39:15,676 --> 00:39:17,976
and look before the

610
00:39:22,866 --> 00:39:26,946
And the image inside the

611
00:39:27,056 --> 00:39:31,676
in which the video will play.

612
00:39:31,906 --> 00:39:35,216
You can specify the

613
00:39:35,216 --> 00:39:38,626
on the mediaContent as

614
00:39:38,626 --> 00:39:41,726
as the lockup gets focused

615
00:39:43,486 --> 00:39:44,266
Here's an example.

616
00:39:45,816 --> 00:39:50,486
So here's a lockup

617
00:39:50,486 --> 00:39:54,956
which wraps the image

618
00:39:55,206 --> 00:40:05,326
And the width and height on

619
00:39:55,206 --> 00:40:05,326
And the width and height on

620
00:40:05,326 --> 00:40:05,976
in which the video will play.

621
00:40:10,776 --> 00:40:14,176
Second step, configure

622
00:40:15,306 --> 00:40:19,806
Now each one of these

623
00:40:19,886 --> 00:40:24,346
with its own player,

624
00:40:24,346 --> 00:40:26,306
that player in JavaScript.

625
00:40:29,706 --> 00:40:32,386
Simply query for

626
00:40:32,496 --> 00:40:34,586
from the mediaContent's

627
00:40:35,106 --> 00:40:37,966
and configure the playlist

628
00:40:37,966 --> 00:40:39,866
with the media item

629
00:40:39,866 --> 00:40:41,966
Here's a small code for that.

630
00:40:47,176 --> 00:40:50,956
Now if you notice

631
00:40:50,956 --> 00:40:52,896
of the player is

632
00:40:52,896 --> 00:40:53,996
from what you saw in the demo.

633
00:40:55,056 --> 00:40:57,166
You create a playlist,

634
00:40:57,166 --> 00:40:58,266
and you set it on the player.

635
00:40:58,806 --> 00:41:01,736
But there are two differences.

636
00:40:58,806 --> 00:41:01,736
But there are two differences.

637
00:41:03,086 --> 00:41:07,216
One, you don't have to

638
00:41:08,426 --> 00:41:10,056
You just use the

639
00:41:10,446 --> 00:41:15,596
And two, instead of doing it

640
00:41:15,596 --> 00:41:18,106
when the user selects

641
00:41:18,896 --> 00:41:21,306
you do it well in advance.

642
00:41:21,976 --> 00:41:26,106
In fact, you do it even

643
00:41:26,636 --> 00:41:32,786
which brings me to

644
00:41:32,956 --> 00:41:34,536
For better user experience,

645
00:41:35,156 --> 00:41:39,686
you must configure the player

646
00:41:40,126 --> 00:41:42,896
Once the document is loaded,

647
00:41:43,336 --> 00:41:45,856
you can change the playlist

648
00:41:51,526 --> 00:41:59,456
And finally the last step,

649
00:41:59,456 --> 00:42:03,536
Now it's worth noting the

650
00:41:59,456 --> 00:42:03,536
Now it's worth noting the

651
00:42:03,536 --> 00:42:05,026
transition for you.

652
00:42:06,446 --> 00:42:11,886
It's one of those flexibilities

653
00:42:12,296 --> 00:42:16,236
So you'll add an event

654
00:42:17,296 --> 00:42:22,676
for the lockup and use

655
00:42:22,676 --> 00:42:27,376
to trigger the transitioning

656
00:42:27,546 --> 00:42:28,636
Here's a small example.

657
00:42:30,126 --> 00:42:32,746
So here, I have added

658
00:42:32,746 --> 00:42:35,976
on select event on the document.

659
00:42:40,406 --> 00:42:42,906
I'm grabbing the

660
00:42:43,016 --> 00:42:45,586
from the subtree

661
00:42:45,796 --> 00:42:47,006
Now this would be the lockup

662
00:42:47,006 --> 00:42:51,606
because all events get

663
00:42:51,726 --> 00:42:56,646
And finally calling present

664
00:42:56,646 --> 00:43:00,626
to trigger the transitioning.

665
00:42:56,646 --> 00:43:00,626
to trigger the transitioning.

666
00:43:00,626 --> 00:43:03,546
Now you have full control

667
00:43:05,486 --> 00:43:06,696
but transitioning back

668
00:43:06,696 --> 00:43:09,856
to embedded mode happens

669
00:43:15,196 --> 00:43:16,176
So that's it.

670
00:43:17,156 --> 00:43:23,536
With these three easy steps you

671
00:43:23,536 --> 00:43:24,946
inside your apps so

672
00:43:29,096 --> 00:43:30,396
But what happens next?

673
00:43:30,926 --> 00:43:37,826
What happens when the users

674
00:43:38,386 --> 00:43:39,536
They're watching your content.

675
00:43:40,056 --> 00:43:45,516
How can you make

676
00:43:46,046 --> 00:43:50,636
Well that brings me to the

677
00:43:50,636 --> 00:43:54,906
about today that lets

678
00:43:55,116 --> 00:43:57,616
Interactive video overlays.

679
00:43:58,286 --> 00:44:04,286
Now in a sense, it's a

680
00:43:58,286 --> 00:44:04,286
Now in a sense, it's a

681
00:44:05,066 --> 00:44:08,326
in that it lets you

682
00:44:08,746 --> 00:44:10,356
by putting a user

683
00:44:10,866 --> 00:44:14,156
and you can do so much with it.

684
00:44:15,496 --> 00:44:20,696
For example, you can suggest

685
00:44:21,136 --> 00:44:24,016
so that they can pick from

686
00:44:24,576 --> 00:44:28,886
You can let them skip

687
00:44:29,986 --> 00:44:31,736
and implement a perfect

688
00:44:31,766 --> 00:44:31,976
for them.

689
00:44:37,736 --> 00:44:41,086
Or you could implement

690
00:44:41,086 --> 00:44:45,976
of your content while the users

691
00:44:50,136 --> 00:44:54,996
Even if you do it with

692
00:44:55,396 --> 00:45:01,996
as interactive metadata, like

693
00:44:55,396 --> 00:45:01,996
as interactive metadata, like

694
00:45:02,046 --> 00:45:05,526
so much more engaging

695
00:45:10,526 --> 00:45:12,556
And as you've seen

696
00:45:12,556 --> 00:45:14,346
implementation is really simple.

697
00:45:14,936 --> 00:45:22,736
You basically create a document,

698
00:45:24,046 --> 00:45:29,366
and set it on the player,

699
00:45:29,446 --> 00:45:33,956
that document when the

700
00:45:34,426 --> 00:45:37,766
Here's the code for that.

701
00:45:38,356 --> 00:45:40,506
We've added a new

702
00:45:40,506 --> 00:45:44,366
in tvOS 10 called

703
00:45:45,036 --> 00:45:48,146
So when you set the

704
00:45:48,736 --> 00:45:53,516
we will present it for you

705
00:45:57,436 --> 00:46:00,106
If the player is already

706
00:45:57,436 --> 00:46:00,106
If the player is already

707
00:46:00,186 --> 00:46:02,276
your documents will get

708
00:46:02,566 --> 00:46:08,536
but if the player is not

709
00:46:08,536 --> 00:46:12,446
in the embedded mode,

710
00:46:12,446 --> 00:46:14,786
when the video goes full screen.

711
00:46:15,356 --> 00:46:17,066
So it's really convenient

712
00:46:17,066 --> 00:46:18,976
to just set it at

713
00:46:23,786 --> 00:46:26,916
And with that, let's

714
00:46:27,866 --> 00:46:32,236
Let's implement these features

715
00:46:32,236 --> 00:46:34,606
in the presentation,

716
00:46:35,256 --> 00:46:36,996
let's welcome back

717
00:46:37,606 --> 00:46:37,976
Jeff.

718
00:46:38,516 --> 00:46:43,216
[ Applause ]

719
00:46:43,716 --> 00:46:44,186
&gt;&gt; Thank you, Parry.

720
00:46:44,556 --> 00:46:45,086
Hello again.

721
00:46:45,326 --> 00:46:46,506
Let me show you the new stuff.

722
00:46:47,706 --> 00:46:49,956
So back on the Apple TV.

723
00:46:49,956 --> 00:46:53,816
So this was the demo that

724
00:46:55,826 --> 00:47:01,396
Now let's go Home and hit

725
00:46:55,826 --> 00:47:01,396
Now let's go Home and hit

726
00:47:02,536 --> 00:47:05,066
Let's navigate down to the

727
00:47:05,346 --> 00:47:08,046
We will now toggle the

728
00:47:10,336 --> 00:47:11,816
So let's go Home again.

729
00:47:12,426 --> 00:47:15,516
Now because we created the

730
00:47:15,686 --> 00:47:18,186
we will have the

731
00:47:18,456 --> 00:47:20,976
to support automatic

732
00:47:21,686 --> 00:47:23,806
So what this means is

733
00:47:23,806 --> 00:47:25,806
to support dock appearance

734
00:47:26,586 --> 00:47:27,656
So let's see how this looks.

735
00:47:29,106 --> 00:47:32,196
Boom. There you go [applause].

736
00:47:37,026 --> 00:47:39,656
Look how beautiful our UI is

737
00:47:39,956 --> 00:47:44,786
And again, zero code

738
00:47:45,026 --> 00:47:46,866
Now let's talk about

739
00:47:49,116 --> 00:47:50,706
For our demo, we

740
00:47:50,706 --> 00:47:53,406
to start playing automatically

741
00:47:54,586 --> 00:47:55,556
As Parry mentioned earlier,

742
00:47:55,556 --> 00:47:57,096
there are three main

743
00:47:57,536 --> 00:48:00,346
Step one is to use the

744
00:47:57,536 --> 00:48:00,346
Step one is to use the

745
00:48:01,236 --> 00:48:03,776
Step two is to configure

746
00:48:04,626 --> 00:48:06,686
And step three is to

747
00:48:06,686 --> 00:48:07,976
Let's get back into Xcode.

748
00:48:15,136 --> 00:48:16,946
So let's get into the

749
00:48:24,186 --> 00:48:26,716
Now instead of creating a

750
00:48:26,716 --> 00:48:34,826
here, I will now add the

751
00:48:35,646 --> 00:48:38,236
and have it wrap our image.

752
00:48:39,116 --> 00:48:39,486
That is it.

753
00:48:39,696 --> 00:48:40,416
So that is step one.

754
00:48:40,966 --> 00:48:41,416
Pretty easy.

755
00:48:41,826 --> 00:48:43,756
Now onto step two.

756
00:48:45,646 --> 00:48:46,986
Now as Parry also

757
00:48:47,496 --> 00:48:50,226
each mediaContent element

758
00:48:50,226 --> 00:48:51,246
in with an embedded player.

759
00:48:52,056 --> 00:48:55,846
So what we will need to do is to

760
00:48:56,056 --> 00:49:00,086
with a corresponding playlist

761
00:48:56,056 --> 00:49:00,086
with a corresponding playlist

762
00:49:00,496 --> 00:49:02,156
So let's head back into

763
00:49:02,156 --> 00:49:06,746
Now before we present

764
00:49:06,746 --> 00:49:08,476
I will now call a function

765
00:49:08,476 --> 00:49:12,856
that I created called

766
00:49:13,446 --> 00:49:16,636
And inside this function,

767
00:49:17,176 --> 00:49:22,316
we are first retrieving

768
00:49:22,626 --> 00:49:23,396
from this document.

769
00:49:26,086 --> 00:49:27,676
And for each

770
00:49:28,526 --> 00:49:29,796
similar to the previous demo,

771
00:49:29,796 --> 00:49:32,476
we will be creating a

772
00:49:33,206 --> 00:49:37,866
a new playlist object that

773
00:49:39,356 --> 00:49:41,786
but instead of creating

774
00:49:42,506 --> 00:49:44,466
we will use the getFeature

775
00:49:45,686 --> 00:49:46,756
to retrieve the embedded player

776
00:49:47,746 --> 00:49:49,576
and then we just set

777
00:49:50,736 --> 00:49:52,226
So that was step two.

778
00:49:53,556 --> 00:49:55,886
The final step is to

779
00:49:57,206 --> 00:49:59,396
So let's head into the

780
00:50:01,736 --> 00:50:03,976
which as you recall is triggered

781
00:50:08,856 --> 00:50:11,056
We won't be needing

782
00:50:11,486 --> 00:50:13,266
so let's replace

783
00:50:17,136 --> 00:50:19,836
First we are retrieving the

784
00:50:21,966 --> 00:50:24,826
then retrieving the mediaContent

785
00:50:25,446 --> 00:50:29,116
and again using the getFeature

786
00:50:29,236 --> 00:50:33,586
to the embedded player, and then

787
00:50:33,876 --> 00:50:34,826
to take it full screen.

788
00:50:35,836 --> 00:50:37,976
So let's see how this looks.

789
00:50:54,786 --> 00:50:57,476
So as you can see, [Background

790
00:50:57,476 --> 00:50:59,496
playing automatically inside

791
00:50:59,676 --> 00:51:04,376
And when I clicked on the

792
00:50:59,676 --> 00:51:04,376
And when I clicked on the

793
00:51:04,376 --> 00:51:06,226
to the video into

794
00:51:06,306 --> 00:51:09,146
&gt;&gt; Welcome to 2015

795
00:51:10,266 --> 00:51:12,276
and welcome your host

796
00:51:12,276 --> 00:51:13,176
&gt;&gt; Pretty cool stuff.

797
00:51:13,176 --> 00:51:14,976
You can also press the Menu

798
00:51:20,506 --> 00:51:21,576
So that was embedded videos.

799
00:51:22,476 --> 00:51:23,726
The next new feature we wanted

800
00:51:23,726 --> 00:51:25,806
to show you is interactive

801
00:51:26,636 --> 00:51:29,866
So this new feature is going

802
00:51:30,266 --> 00:51:31,836
over the video while

803
00:51:32,746 --> 00:51:36,496
So for our demo, let's say we

804
00:51:36,496 --> 00:51:39,096
of related videos

805
00:51:40,006 --> 00:51:41,606
So let's head back into Xcode.

806
00:51:42,706 --> 00:51:44,396
Now in my playSelectedLockup

807
00:51:45,226 --> 00:51:48,246
I will now call a

808
00:51:48,416 --> 00:51:52,576
that creates my overlay called

809
00:51:52,836 --> 00:51:54,976
And inside this function,

810
00:51:59,546 --> 00:52:03,846
as you can see, we are basically

811
00:51:59,546 --> 00:52:03,846
as you can see, we are basically

812
00:52:04,586 --> 00:52:10,676
with a single shelf,

813
00:52:10,676 --> 00:52:12,626
we have multiple

814
00:52:15,246 --> 00:52:17,566
Also, we are changing the

815
00:52:18,956 --> 00:52:20,606
We are adding a blurred

816
00:52:21,296 --> 00:52:25,006
and we are also adding

817
00:52:25,006 --> 00:52:26,666
so that our shelf

818
00:52:26,666 --> 00:52:27,666
at the bottom of the player.

819
00:52:30,516 --> 00:52:32,836
So let's head back into

820
00:52:34,656 --> 00:52:37,936
Now after we create our overlay

821
00:52:37,936 --> 00:52:41,146
to the new modal overlay

822
00:52:41,566 --> 00:52:43,206
and the player object

823
00:52:43,876 --> 00:52:47,156
In fact, the player will show

824
00:52:47,156 --> 00:52:47,756
this property.

825
00:52:49,636 --> 00:52:51,076
Now we can also show

826
00:52:51,326 --> 00:52:53,786
at any time while the video

827
00:52:54,556 --> 00:52:55,836
For example, we might want

828
00:52:55,836 --> 00:52:58,846
to show the overlay 30 seconds

829
00:52:59,846 --> 00:53:01,146
but for the purpose

830
00:52:59,846 --> 00:53:01,146
but for the purpose

831
00:53:01,146 --> 00:53:03,486
we will just show

832
00:53:03,486 --> 00:53:06,086
as the video goes full screen,

833
00:53:07,356 --> 00:53:08,046
So let's run this.

834
00:53:08,596 --> 00:53:11,766
Again, the video is going

835
00:53:11,766 --> 00:53:13,676
to start playing

836
00:53:13,676 --> 00:53:14,486
[Background Music].

837
00:53:14,486 --> 00:53:18,636
And when I now take

838
00:53:18,636 --> 00:53:21,126
you will now see the

839
00:53:23,516 --> 00:53:29,486
[ Applause ]

840
00:53:29,986 --> 00:53:32,466
And the overlay is also

841
00:53:32,466 --> 00:53:34,356
around within the

842
00:53:37,076 --> 00:53:38,776
So that was interactive

843
00:53:39,186 --> 00:53:41,536
We hope the demo has

844
00:53:42,016 --> 00:53:42,966
Thank you for your time.

845
00:53:43,476 --> 00:53:44,046
Back to you, Parry.

846
00:53:44,886 --> 00:53:45,416
&gt;&gt; Thank you, Jeff.

847
00:53:45,416 --> 00:53:46,696
That was an amazing demo.

848
00:53:47,186 --> 00:53:49,966
Let's quickly recap what

849
00:53:50,906 --> 00:53:55,596
You saw how light and dark

850
00:53:55,596 --> 00:53:58,356
out of the box for TVMLKit apps.

851
00:53:59,356 --> 00:54:04,626
You saw how easy it is to embed

852
00:53:59,356 --> 00:54:04,626
You saw how easy it is to embed

853
00:54:04,626 --> 00:54:09,886
And finally, you saw an example

854
00:54:09,886 --> 00:54:12,916
of a binge-watching

855
00:54:12,916 --> 00:54:16,096
through interactive

856
00:54:16,096 --> 00:54:23,236
Now with that, I would like

857
00:54:23,236 --> 00:54:23,746
learned today.

858
00:54:27,456 --> 00:54:31,436
So there's one thing I

859
00:54:31,436 --> 00:54:35,906
from this presentation

860
00:54:37,256 --> 00:54:42,856
TVMLKit is an easy

861
00:54:43,446 --> 00:54:49,066
that gives you native

862
00:54:49,656 --> 00:54:52,756
and performs like Apple apps.

863
00:54:54,346 --> 00:55:00,456
It's based off of web

864
00:54:54,346 --> 00:55:00,456
It's based off of web

865
00:55:00,456 --> 00:55:04,916
and JavaScript that lets you

866
00:55:05,646 --> 00:55:08,206
and reduce the time to market.

867
00:55:12,616 --> 00:55:14,206
And with the new features

868
00:55:14,816 --> 00:55:20,616
and how you saw how TVMLKit

869
00:55:21,276 --> 00:55:29,616
for writing the user interface,

870
00:55:30,546 --> 00:55:35,966
and intellectual energy on

871
00:55:37,466 --> 00:55:42,186
that make your app

872
00:55:45,136 --> 00:55:49,686
I highly encourage you to go to

873
00:55:49,686 --> 00:55:52,716
out documentation and

874
00:55:52,716 --> 00:55:55,776
There's a wealth of

875
00:55:57,826 --> 00:56:01,696
I'd also like to suggest some

876
00:55:57,826 --> 00:56:01,696
I'd also like to suggest some

877
00:56:01,696 --> 00:56:06,026
What's New in tvOS, and one

878
00:56:06,026 --> 00:56:08,856
to happen tomorrow,

879
00:56:10,066 --> 00:56:13,726
and we talk about how can

880
00:56:13,726 --> 00:56:17,616
view controllers, and even

881
00:56:19,406 --> 00:56:24,966
And finally, I would like to

882
00:56:24,966 --> 00:56:31,306
and I wish you have a very nice

883
00:56:31,306 --> 00:56:31,716
Thank you.

884
00:56:32,516 --> 00:56:35,500
[ Applause ]
