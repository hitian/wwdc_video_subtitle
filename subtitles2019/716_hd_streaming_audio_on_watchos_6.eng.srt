1
00:00:00,506 --> 0:00:04,500
[ Music ]

2
00:00:08,006 --> 0:00:10,186
&gt;&gt; Last year in watchOS 5, we

3
00:00:10,236 --> 0:00:12,076
introduced the ability to play

4
00:00:12,076 --> 0:00:13,836
local, long-form audio in the

5
00:00:13,836 --> 0:00:14,326
background.

6
00:00:16,265 --> 0:00:18,346
This year with watchOS 6, we're

7
00:00:18,346 --> 0:00:19,806
bringing the ability for watch

8
00:00:19,806 --> 0:00:21,756
apps to stream audio directly on

9
00:00:21,756 --> 0:00:22,356
Apple Watch.

10
00:00:23,486 --> 0:00:24,916
This means that your customers

11
00:00:25,296 --> 0:00:26,626
no longer need to bring their

12
00:00:26,716 --> 0:00:28,086
iPhone with them to access your

13
00:00:28,086 --> 0:00:30,186
audio content, they no longer

14
00:00:30,186 --> 0:00:31,716
need to sync audio content to

15
00:00:31,716 --> 0:00:33,496
their watches, and they now have

16
00:00:33,496 --> 0:00:35,336
access to live audio programing

17
00:00:35,596 --> 0:00:36,526
like sports events.

18
00:00:37,686 --> 0:00:40,696
WatchOS 6 supports two main ways

19
00:00:40,696 --> 0:00:42,836
to stream audio to Apple Watch.

20
00:00:43,286 --> 0:00:47,386
HLS and custom audio protocols.

21
00:00:47,906 --> 0:00:50,426
Let's dive into a bit more

22
00:00:50,426 --> 0:00:50,976
detail.

23
00:00:51,456 --> 0:00:53,346
If your content is available as

24
00:00:53,346 --> 0:00:56,656
an HLS audio feed, you can point

25
00:00:56,656 --> 0:00:58,766
AVQueuePlayer to the feed and it

26
00:00:58,766 --> 0:00:59,926
will take care of streaming your

27
00:00:59,926 --> 0:01:00,456
content.

28
00:00:59,926 --> 0:01:00,456
content.

29
00:01:01,666 --> 0:01:03,776
WatchOS is optimized for HLS

30
00:01:03,776 --> 0:01:05,346
audio feeds and makes it simple

31
00:01:05,346 --> 0:01:06,166
to get started with.

32
00:01:07,796 --> 0:01:09,336
Applications that use

33
00:01:09,336 --> 0:01:11,346
proprietary audio formats or use

34
00:01:11,346 --> 0:01:12,726
custom protocols are a bit

35
00:01:12,726 --> 0:01:13,336
different.

36
00:01:14,536 --> 0:01:17,416
They need to use URLSession on

37
00:01:17,416 --> 0:01:18,736
the network framework to

38
00:01:18,736 --> 0:01:20,146
retrieve and interpret their

39
00:01:20,146 --> 0:01:21,746
metadata and audio content.

40
00:01:23,406 --> 0:01:25,466
Once audio content has been

41
00:01:25,466 --> 0:01:27,096
downloaded to the watch, use

42
00:01:27,096 --> 0:01:28,736
AVFoundation for audio route

43
00:01:28,736 --> 0:01:30,236
selection and audio playback.

44
00:01:33,036 --> 0:01:34,466
Audio streaming is made possible

45
00:01:34,466 --> 0:01:36,596
in watchOS 6 by bringing several

46
00:01:36,596 --> 0:01:39,176
iOS APIs into the watchOS SDK.

47
00:01:39,546 --> 0:01:41,406
Our goal has been to bring the

48
00:01:41,406 --> 0:01:43,576
two SDKs closer together so that

49
00:01:43,576 --> 0:01:45,376
your code can run watchOS with

50
00:01:45,376 --> 0:01:46,816
little or no modification.

51
00:01:48,316 --> 0:01:51,236
For networking, watchOS 6 now

52
00:01:51,236 --> 0:01:53,016
has the network framework, first

53
00:01:53,016 --> 0:01:54,276
introducing iOS 12.

54
00:01:55,066 --> 0:01:56,646
This framework provides a modern

55
00:01:56,646 --> 0:01:58,276
alternative to unit sockets.

56
00:01:58,986 --> 0:02:00,566
Network framework is not only

57
00:01:58,986 --> 0:02:00,566
Network framework is not only

58
00:02:00,566 --> 0:02:02,886
more on C API but also provides

59
00:02:02,886 --> 0:02:06,396
a very convenient Swift API.

60
00:02:06,396 --> 0:02:07,586
URLSession brings

61
00:02:07,586 --> 0:02:09,036
URLSessionStreamingTask to

62
00:02:09,036 --> 0:02:09,786
watchOS.

63
00:02:10,295 --> 0:02:11,806
It also brings along

64
00:02:11,806 --> 0:02:14,166
URLSessionWebSocketTask, which

65
00:02:14,166 --> 0:02:16,636
is new in both iOS 13 and in

66
00:02:16,636 --> 0:02:17,376
watchOS 6.

67
00:02:18,276 --> 0:02:19,766
Audio streaming presents special

68
00:02:19,766 --> 0:02:21,396
challenges to the way the data

69
00:02:21,396 --> 0:02:22,736
is retrieved from the network.

70
00:02:23,346 --> 0:02:25,346
To this end, URLSession has

71
00:02:25,346 --> 0:02:27,146
added the new AV streaming

72
00:02:27,146 --> 0:02:28,306
network service type.

73
00:02:28,906 --> 0:02:29,916
You should use it for your

74
00:02:29,916 --> 0:02:31,026
streaming data request.

75
00:02:32,656 --> 0:02:34,746
For audio playback, AVFoundation

76
00:02:34,746 --> 0:02:35,976
is bringing many of their APIs

77
00:02:35,976 --> 0:02:39,096
to watchOS 6 including AVPlayer

78
00:02:39,096 --> 0:02:40,676
and AVQueuePlayer.

79
00:02:42,186 --> 0:02:43,856
Also, for the first time,

80
00:02:44,106 --> 0:02:45,406
CoreMedia is available in

81
00:02:45,406 --> 0:02:45,846
watchOS.

82
00:02:47,696 --> 0:02:48,916
If your application is already

83
00:02:48,916 --> 0:02:50,236
set up for background audio

84
00:02:50,236 --> 0:02:52,006
playback, it is ready for audio

85
00:02:52,006 --> 0:02:52,446
streaming.

86
00:02:53,096 --> 0:02:54,706
No other project configuration

87
00:02:54,706 --> 0:02:55,156
is needed.

88
00:02:56,116 --> 0:02:57,276
If your project is not

89
00:02:57,276 --> 0:02:58,776
configured for background audio,

90
00:02:58,776 --> 0:03:00,076
you will need to add this

91
00:02:58,776 --> 0:03:00,076
you will need to add this

92
00:03:00,076 --> 0:03:01,716
capability to the WatchKit

93
00:03:01,716 --> 0:03:02,576
extension target.

94
00:03:03,306 --> 0:03:05,116
For this, open your Xcode

95
00:03:05,116 --> 0:03:06,676
project and go to your WatchKit

96
00:03:06,676 --> 0:03:07,916
extension target settings.

97
00:03:09,146 --> 0:03:10,816
On the signing and capability

98
00:03:10,816 --> 0:03:13,416
section, click Add Capability

99
00:03:13,416 --> 0:03:14,826
and select Background Modes.

100
00:03:16,006 --> 0:03:17,746
Finally, under Background Modes,

101
00:03:17,966 --> 0:03:19,806
select the Audio Mode.

102
00:03:20,216 --> 0:03:21,156
This is all that needs to be

103
00:03:21,156 --> 0:03:21,356
done.

104
00:03:21,876 --> 0:03:24,586
Now that the project is

105
00:03:24,586 --> 0:03:26,476
configured, let's talk about the

106
00:03:26,476 --> 0:03:28,126
different APIs that need to be

107
00:03:28,126 --> 0:03:29,596
used during audio playback.

108
00:03:30,426 --> 0:03:32,426
After your app launches and

109
00:03:32,426 --> 0:03:33,906
before you activate an audio

110
00:03:33,906 --> 0:03:35,476
session, you may need to

111
00:03:35,476 --> 0:03:36,886
retrieve data from your servers.

112
00:03:38,396 --> 0:03:40,466
This data is needed to present

113
00:03:40,466 --> 0:03:42,156
streaming options and content to

114
00:03:42,156 --> 0:03:42,686
users.

115
00:03:43,026 --> 0:03:45,366
For example, album information,

116
00:03:45,756 --> 0:03:47,456
playlist information, all

117
00:03:47,456 --> 0:03:48,736
metadata about the content of

118
00:03:48,736 --> 0:03:49,486
your applicant stream.

119
00:03:50,766 --> 0:03:52,056
You may have already cached this

120
00:03:52,056 --> 0:03:54,076
data when your app activated or

121
00:03:54,076 --> 0:03:55,236
during the background refresh

122
00:03:55,236 --> 0:03:55,946
opportunity.

123
00:03:56,486 --> 0:03:58,466
If not, use URLSession to

124
00:03:58,466 --> 0:03:59,216
retrieve your data.

125
00:03:59,816 --> 0:04:02,566
At this time, socket, streaming

126
00:03:59,816 --> 0:04:02,566
At this time, socket, streaming

127
00:04:02,566 --> 0:04:04,196
task, and the network framework

128
00:04:04,196 --> 0:04:05,516
will not be available for use.

129
00:04:07,686 --> 0:04:08,536
Once you have all the

130
00:04:08,536 --> 0:04:09,936
information you need to begin

131
00:04:09,936 --> 0:04:11,906
streaming, activate an audio

132
00:04:11,906 --> 0:04:12,276
session.

133
00:04:12,576 --> 0:04:14,626
The audio session should not be

134
00:04:14,626 --> 0:04:16,505
activated before this point,

135
00:04:16,776 --> 0:04:18,146
because activating one can

136
00:04:18,146 --> 0:04:19,446
disrupt the user experience.

137
00:04:20,305 --> 0:04:21,346
This is a very important

138
00:04:21,346 --> 0:04:23,686
difference between watchOS and

139
00:04:23,686 --> 0:04:23,886
iOS.

140
00:04:23,886 --> 0:04:25,916
On iOS, there's always a default

141
00:04:25,916 --> 0:04:26,956
audio route available.

142
00:04:27,116 --> 0:04:27,866
Let's figure out.

143
00:04:28,366 --> 0:04:29,326
This is not the case for

144
00:04:29,326 --> 0:04:29,936
watchOS.

145
00:04:31,376 --> 0:04:32,796
When you activate an audio

146
00:04:32,796 --> 0:04:34,406
session, watchOS will

147
00:04:34,436 --> 0:04:35,956
automatically present an audio

148
00:04:35,956 --> 0:04:37,716
route picker on behalf of your

149
00:04:37,716 --> 0:04:39,476
application if no route is

150
00:04:39,476 --> 0:04:40,296
currently active.

151
00:04:41,296 --> 0:04:42,606
There are two cases where

152
00:04:42,606 --> 0:04:44,436
watchOS may be able to skip

153
00:04:44,436 --> 0:04:45,906
presenting the audio route

154
00:04:45,906 --> 0:04:46,286
picker.

155
00:04:47,156 --> 0:04:48,936
For any Bluetooth device, if the

156
00:04:48,936 --> 0:04:50,136
device is already connected to

157
00:04:50,136 --> 0:04:52,486
the watch, or for Bluetooth

158
00:04:52,486 --> 0:04:54,336
devices based on the Apple

159
00:04:54,336 --> 0:04:56,456
wireless chip set, if the device

160
00:04:56,456 --> 0:04:58,206
is connected to the iPhone, the

161
00:04:58,206 --> 0:04:59,936
watch may temporarily borrow it.

162
00:05:00,336 --> 0:05:01,986
There are cases where this is

163
00:05:01,986 --> 0:05:03,626
not possible though, for

164
00:05:03,656 --> 0:05:05,066
instance, if you are on a phone

165
00:05:05,066 --> 0:05:06,256
call while connected to your

166
00:05:06,256 --> 0:05:06,506
iPhone.

167
00:05:07,086 --> 0:05:09,456
Once your application has an

168
00:05:09,456 --> 0:05:11,516
active audio session, all of the

169
00:05:11,516 --> 0:05:13,816
networking APIs are available to

170
00:05:13,816 --> 0:05:15,316
retrieve audio content.

171
00:05:15,316 --> 0:05:16,306
This includes

172
00:05:16,306 --> 0:05:18,356
URLSessionStreamingTask,

173
00:05:18,356 --> 0:05:20,706
URLSessionWebSocketTask, and the

174
00:05:20,706 --> 0:05:21,486
network framework.

175
00:05:22,376 --> 0:05:24,446
If you attempt to use these APIs

176
00:05:24,446 --> 0:05:26,106
without an active audio session,

177
00:05:26,386 --> 0:05:27,366
your calls will fail.

178
00:05:29,466 --> 0:05:31,216
Finally, your application has

179
00:05:31,216 --> 0:05:32,356
reached the point where it has

180
00:05:32,356 --> 0:05:33,636
enough audio data to start

181
00:05:33,636 --> 0:05:34,256
playback.

182
00:05:34,686 --> 0:05:36,256
You can now use AVFoundation to

183
00:05:36,256 --> 0:05:40,036
play your audio content.

184
00:05:40,036 --> 0:05:40,936
If you need to request new

185
00:05:40,936 --> 0:05:42,386
information from your servers to

186
00:05:42,386 --> 0:05:43,716
do your streaming, you can use

187
00:05:43,776 --> 0:05:45,816
all available networking APIs to

188
00:05:46,516 --> 0:05:48,366
do this.

189
00:05:48,366 --> 0:05:49,896
Now, let's talk about some audio

190
00:05:49,896 --> 0:05:51,376
streaming best practices for

191
00:05:51,376 --> 0:05:51,946
Apple Watch.

192
00:05:54,076 --> 0:05:55,546
Audio streaming on Apple Watch

193
00:05:55,666 --> 0:05:57,346
is available in Series 3 and

194
00:05:57,346 --> 0:05:57,696
later.

195
00:05:58,606 --> 0:06:00,076
This means that your application

196
00:05:58,606 --> 0:06:00,076
This means that your application

197
00:06:00,076 --> 0:06:01,296
needs to check if audio

198
00:06:01,296 --> 0:06:02,546
streaming is available on the

199
00:06:02,546 --> 0:06:03,536
watch it is running on.

200
00:06:04,326 --> 0:06:05,916
In watchOS 6, use

201
00:06:05,916 --> 0:06:08,106
WKInterphaseDevices

202
00:06:08,106 --> 0:06:10,286
supportsAudioStreaming to make

203
00:06:10,286 --> 0:06:10,816
this check.

204
00:06:12,516 --> 0:06:13,956
The additional audio and

205
00:06:13,956 --> 0:06:16,066
networking APIs in watchOS 6

206
00:06:16,396 --> 0:06:18,156
mean that applications no longer

207
00:06:18,156 --> 0:06:21,276
need to use WatchKit's WK audio

208
00:06:21,276 --> 0:06:22,106
file APIs.

209
00:06:22,106 --> 0:06:23,976
For this reason, these APIs have

210
00:06:23,976 --> 0:06:25,326
been deprecated starting with

211
00:06:25,326 --> 0:06:26,116
watchOS 6.

212
00:06:27,226 --> 0:06:28,476
Now, let's discuss some

213
00:06:28,476 --> 0:06:29,956
networking best practices.

214
00:06:32,116 --> 0:06:33,896
Caching is very important.

215
00:06:34,496 --> 0:06:35,906
The right amount of audio data

216
00:06:35,906 --> 0:06:37,496
should be locally available at

217
00:06:37,496 --> 0:06:39,116
all times to cope with changing

218
00:06:39,116 --> 0:06:40,106
network conditions.

219
00:06:41,976 --> 0:06:44,146
The number of network requests

220
00:06:44,146 --> 0:06:45,416
and their sizes should be

221
00:06:45,416 --> 0:06:46,926
reduced to the absolute minimum.

222
00:06:47,246 --> 0:06:49,246
Extra requests that did not post

223
00:06:49,246 --> 0:06:51,156
a problem on other devices may

224
00:06:51,156 --> 0:06:52,426
delay or stall playback.

225
00:06:53,246 --> 0:06:54,686
The same is true for downloading

226
00:06:54,686 --> 0:06:55,746
unnecessary data in those

227
00:06:55,746 --> 0:06:56,416
requests.

228
00:06:56,906 --> 0:06:58,536
All of these can result in poor

229
00:06:58,536 --> 0:06:59,506
user experiences.

230
00:07:01,836 --> 0:07:03,836
To be safe, start streaming

231
00:07:03,836 --> 0:07:06,376
using 64 kbps encoded audio

232
00:07:06,376 --> 0:07:06,866
data.

233
00:07:07,536 --> 0:07:09,346
Monitor the speed at which data

234
00:07:09,346 --> 0:07:11,006
arrives to your application and

235
00:07:11,006 --> 0:07:13,146
only upgrade to higher bit rates

236
00:07:13,146 --> 0:07:14,516
if the network conditions allow

237
00:07:14,516 --> 0:07:15,006
for them.

238
00:07:15,256 --> 0:07:17,476
AVFoundation automatically does

239
00:07:17,476 --> 0:07:19,106
this for HLS audio streaming.

240
00:07:21,096 --> 0:07:22,706
Do not rely on network

241
00:07:22,706 --> 0:07:23,356
reachability.

242
00:07:23,956 --> 0:07:25,496
Due to the nature of networks,

243
00:07:25,866 --> 0:07:27,796
the information returned by this

244
00:07:27,796 --> 0:07:29,666
API may no longer be valid by

245
00:07:29,666 --> 0:07:31,166
the time your application uses

246
00:07:31,166 --> 0:07:31,356
it.

247
00:07:31,746 --> 0:07:33,676
For the best user experience,

248
00:07:34,006 --> 0:07:35,456
always assume that you have a

249
00:07:35,456 --> 0:07:36,686
network connection and

250
00:07:36,686 --> 0:07:38,526
gracefully handle stalls and

251
00:07:38,526 --> 0:07:41,296
failures, and always adjust in

252
00:07:41,296 --> 0:07:43,246
real-time the audio quality and

253
00:07:43,246 --> 0:07:44,626
the amount of caching that your

254
00:07:44,626 --> 0:07:47,546
application does.

255
00:07:47,546 --> 0:07:49,066
Finally, your application is

256
00:07:49,066 --> 0:07:50,356
likely to experience more

257
00:07:50,356 --> 0:07:51,786
network transitions when running

258
00:07:51,786 --> 0:07:52,506
an Apple Watch.

259
00:07:52,636 --> 0:07:54,656
As the watch moves away from the

260
00:07:54,656 --> 0:07:56,126
iPhone, a good transition from

261
00:07:56,126 --> 0:07:58,176
Bluetooth to Wi-Fi or cellular.

262
00:07:58,546 --> 0:08:00,266
It is not uncommon for the watch

263
00:07:58,546 --> 0:08:00,266
It is not uncommon for the watch

264
00:08:00,266 --> 0:08:01,556
to go between these three

265
00:08:01,556 --> 0:08:02,916
network types while your app is

266
00:08:02,916 --> 0:08:03,226
running.

267
00:08:03,226 --> 0:08:04,926
Your application should be

268
00:08:04,926 --> 0:08:06,586
prepared for such transitions,

269
00:08:06,916 --> 0:08:08,166
which can take several seconds

270
00:08:08,166 --> 0:08:08,656
to complete.

271
00:08:09,066 --> 0:08:11,156
As you can see, when bringing

272
00:08:11,156 --> 0:08:12,676
audio streaming applications to

273
00:08:12,676 --> 0:08:13,696
Apple Watch from other

274
00:08:13,696 --> 0:08:15,656
platforms, Apple or otherwise,

275
00:08:16,066 --> 0:08:17,156
you should be prepared for the

276
00:08:17,156 --> 0:08:18,416
possibility that you will need

277
00:08:18,416 --> 0:08:20,106
to optimize your networking code

278
00:08:20,106 --> 0:08:20,876
and protocols.

279
00:08:21,416 --> 0:08:23,916
If you need more information to

280
00:08:23,916 --> 0:08:25,326
get started writing audio

281
00:08:25,326 --> 0:08:26,756
applications for Apple Watch,

282
00:08:27,216 --> 0:08:29,656
Creating Audio Apps for watchOS

283
00:08:29,656 --> 0:08:30,436
is a great start.

284
00:08:30,836 --> 0:08:32,645
The information in the network

285
00:08:32,645 --> 0:08:34,405
framework introduction talk is

286
00:08:34,405 --> 0:08:36,346
100% applicable to watchOS.

287
00:08:37,066 --> 0:08:38,956
Finally, check out these other

288
00:08:38,956 --> 0:08:40,866
sessions to help create a great

289
00:08:40,866 --> 0:08:41,966
audio streaming experience.
