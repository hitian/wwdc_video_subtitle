1
00:00:06,640 --> 0:00:10,410
（与Siri活动集成建议）

2
00:00:10,477 --> 0:00:11,578
大家下午好

3
00:00:12,546 --> 0:00:15,716
欢迎来到

4
00:00:16,216 --> 0:00:19,620
我是Sofiane 是Apple

5
00:00:20,387 --> 0:00:22,589
今天我将与

6
00:00:23,190 --> 0:00:25,058
今天很开心能在这里

7
00:00:25,292 --> 0:00:29,263
和大家讲讲如何将你的app

8
00:00:31,231 --> 0:00:33,667
Siri是我们喜爱的虚拟助手

9
00:00:34,268 --> 0:00:37,104
通过SiriKit

10
00:00:37,371 --> 0:00:40,541
做一些比如发送信息 请求乘坐

11
00:00:40,841 --> 0:00:44,378
还有使用捷径

12
00:00:45,679 --> 0:00:48,982
Siri也深入与我们的平台集成

13
00:00:49,216 --> 0:00:52,019
为我们每天使用的app

14
00:00:53,420 --> 0:00:55,689
在日历中 Siri是个人的

15
00:00:55,856 --> 0:00:58,725
它知道你的预订并帮你组织你的活动

16
00:00:59,526 --> 0:01:02,596
Siri可以利用你的预订信息

17
00:00:59,526 --> 0:01:02,596
Siri可以利用你的预订信息

18
00:01:03,030 --> 0:01:05,432
在系统中主动提出积极的建议

19
00:01:06,300 --> 0:01:07,901
在锁屏上

20
00:01:08,268 --> 0:01:11,638
Siri会根据交通情况

21
00:01:12,573 --> 0:01:15,142
当你打开地图时

22
00:01:15,275 --> 0:01:16,844
让你方便快捷得

23
00:01:17,177 --> 0:01:20,247
获取到达终点的路线 只需一按

24
00:01:21,481 --> 0:01:22,583
当你到达目的地时

25
00:01:23,016 --> 0:01:25,652
Siri会建议你打开请勿打扰模式

26
00:01:25,986 --> 0:01:27,955
这样你就能专注你要做的事情

27
00:01:28,822 --> 0:01:32,559
而这些都基于系统知道你的预订

28
00:01:33,060 --> 0:01:33,994
不管这些预订是在哪里的

29
00:01:34,661 --> 0:01:37,497
不管是邮件中的车辆租赁预订

30
00:01:38,098 --> 0:01:40,267
还是信息中的餐厅预订

31
00:01:40,934 --> 0:01:43,937
或者是在Safari中订的机票

32
00:01:44,738 --> 0:01:46,673
现在在iOS 13中

33
00:01:47,007 --> 0:01:50,644
我们很高兴

34
00:01:50,777 --> 0:01:52,779
能够与生态系统直接整合

35
00:01:58,118 --> 0:01:59,486
比如

36
00:01:59,786 --> 0:02:02,923
你在美国航空app内部

37
00:01:59,786 --> 0:02:02,923
你在美国航空app内部

38
00:02:03,590 --> 0:02:05,826
该app会将信息发给系统

39
00:02:06,660 --> 0:02:09,930
Siri就可以利用该信息

40
00:02:10,264 --> 0:02:11,732
并将该航班添加至你的日历中

41
00:02:12,833 --> 0:02:16,336
Siri之后就会对该航班

42
00:02:16,637 --> 0:02:19,173
提出积极的建议 显示在刚刚

43
00:02:20,007 --> 0:02:23,510
而所有的这些智能行为

44
00:02:24,478 --> 0:02:25,879
但我们不止于此

45
00:02:26,446 --> 0:02:29,883
今年 我们希望扩展深度系统集成

46
00:02:30,317 --> 0:02:33,086
并在系统中的更多位置

47
00:02:34,288 --> 0:02:35,455
在iOS 13中

48
00:02:35,856 --> 0:02:37,291
如果你的app支持签到

49
00:02:37,558 --> 0:02:39,927
它会在锁屏中置顶

50
00:02:40,360 --> 0:02:43,163
以便在正确的时间

51
00:02:44,731 --> 0:02:46,600
在新的iOS 13中 在地图中

52
00:02:47,201 --> 0:02:49,536
当用户在正确的时间进入地图

53
00:02:49,937 --> 0:02:52,606
他们就可以获得

54
00:02:52,739 --> 0:02:56,710
还能够帮助他们

55
00:02:58,445 --> 0:03:01,381
所以Siri会你从预订开始

56
00:02:58,445 --> 0:03:01,381
所以Siri会你从预订开始

57
00:03:01,815 --> 0:03:04,651
到你登机为止的

58
00:03:05,752 --> 0:03:09,756
我希望你们也觉得这个功能很酷

59
00:03:10,490 --> 0:03:11,792
但是这是怎么运作的呢

60
00:03:13,493 --> 0:03:15,462
API是SiriKit的一部分

61
00:03:15,596 --> 0:03:18,498
它能够让你做许多事情

62
00:03:18,565 --> 0:03:20,200
发送付款等等

63
00:03:20,868 --> 0:03:23,604
特别是我们今天说的每一点

64
00:03:23,837 --> 0:03:25,672
都是作为Intent

65
00:03:27,140 --> 0:03:29,309
我们支持从餐厅到票务

66
00:03:29,610 --> 0:03:31,778
甚至是交通方式等

67
00:03:31,845 --> 0:03:33,213
一系列类别的预订

68
00:03:33,881 --> 0:03:37,718
今年我们在Intent框架中

69
00:03:38,118 --> 0:03:41,221
来表示所有这些预订类别的详细信息

70
00:03:42,022 --> 0:03:45,125
所有的新类都继承自

71
00:03:45,459 --> 0:03:48,128
例如 要表示餐厅预订

72
00:03:48,529 --> 0:03:51,064
你可以创建

73
00:03:52,933 --> 0:03:56,570
如果你熟悉SiriKit

74
00:03:56,770 --> 0:03:58,906
可以用于创建捷径

75
00:03:59,473 --> 0:04:02,242
所以当用户浏览你app中的预订时

76
00:03:59,473 --> 0:04:02,242
所以当用户浏览你app中的预订时

77
00:04:02,709 --> 0:04:06,180
你的app就会创建交互

78
00:04:06,980 --> 0:04:09,816
交互是由Intent

79
00:04:10,117 --> 0:04:13,420
他们共同代表用户的完整交互

80
00:04:15,022 --> 0:04:16,589
今年 我们引入了

81
00:04:16,656 --> 0:04:20,027
新的IN获取预订细节Intent

82
00:04:20,627 --> 0:04:24,631
旨在获取与用户预订相关的详细信息

83
00:04:25,032 --> 0:04:28,368
这是你的app

84
00:04:29,670 --> 0:04:32,606
现在Intent响应

85
00:04:32,673 --> 0:04:33,907
INReservation

86
00:04:34,308 --> 0:04:36,210
这代表了你的具体预订

87
00:04:36,743 --> 0:04:37,945
比如说

88
00:04:38,245 --> 0:04:41,849
我要创建一个IN住宿预订

89
00:04:42,182 --> 0:04:43,917
来代表酒店入住细节

90
00:04:45,319 --> 0:04:48,488
你要做的就是将这些交互发送给系统

91
00:04:49,156 --> 0:04:52,259
Siri就可以将其用于

92
00:04:52,526 --> 0:04:53,961
或者是Siri捷径等地方

93
00:04:55,262 --> 0:04:58,699
现在我们来说说你的app要做的

94
00:04:58,932 --> 0:05:00,234
简单的三个步骤

95
00:04:58,932 --> 0:05:00,234
简单的三个步骤

96
00:05:00,434 --> 0:05:02,803
来充分利用这些功能

97
00:05:03,537 --> 0:05:07,608
首先我们来说说如何创建及发送交互

98
00:05:08,442 --> 0:05:12,446
接下来是如何采用

99
00:05:12,713 --> 0:05:15,449
这样你的app就可以从新的

100
00:05:16,283 --> 0:05:20,053
最后 你的app可能会与你

101
00:05:20,654 --> 0:05:22,756
所以我们也会说到你应该处理的

102
00:05:22,823 --> 0:05:24,024
各种启动方案

103
00:05:24,992 --> 0:05:27,661
现在有请我的同事Magnus上台

104
00:05:27,995 --> 0:05:29,897
来讲讲API 有请Magnus

105
00:05:34,434 --> 0:05:35,402
谢谢你 Sofiane

106
00:05:37,037 --> 0:05:38,839
大家好 我是Magnus

107
00:05:39,406 --> 0:05:41,308
今天我很高兴和大家说说

108
00:05:41,375 --> 0:05:43,143
Siri活动建议

109
00:05:44,244 --> 0:05:46,847
首先我会向你展示

110
00:05:47,447 --> 0:05:49,816
之后再谈到细节

111
00:05:50,651 --> 0:05:51,685
我们先来看演示

112
00:05:55,556 --> 0:05:58,025
先来看看这款叫我的航班的app

113
00:05:58,692 --> 0:06:00,527
我们先打开来看看是什么样的

114
00:05:58,692 --> 0:06:00,527
我们先打开来看看是什么样的

115
00:06:02,296 --> 0:06:04,665
它会显示我的航班预订列表

116
00:06:05,666 --> 0:06:08,702
如果我点击其中一个

117
00:06:10,437 --> 0:06:13,140
我想利用Siri活动建议API

118
00:06:13,340 --> 0:06:16,476
并发送预订细节并向用户显示

119
00:06:18,579 --> 0:06:19,780
让我们转到Xcode

120
00:06:22,082 --> 0:06:25,118
现在我的app中有一些

121
00:06:25,252 --> 0:06:26,887
我可以在那里获取航班信息详情

122
00:06:27,654 --> 0:06:29,556
因为我想在向用户显示时

123
00:06:30,257 --> 0:06:31,592
发送这些信息

124
00:06:31,692 --> 0:06:34,094
所以让我们看看预订信息视图控制器

125
00:06:37,531 --> 0:06:39,800
视图控制器从服务器中获取预订信息

126
00:06:40,601 --> 0:06:41,935
在这个演示中

127
00:06:42,135 --> 0:06:45,239
服务器会返回

128
00:06:46,406 --> 0:06:48,041
我已经做了一些工作了

129
00:06:48,175 --> 0:06:50,544
但是这里还有一些没有写的代码

130
00:06:52,145 --> 0:06:55,649
我们去服务器看看

131
00:06:59,086 --> 0:07:02,189
在我的服务器代码中

132
00:06:59,086 --> 0:07:02,189
在我的服务器代码中

133
00:07:02,556 --> 0:07:04,091
使用来创建和保存预订信息的

134
00:07:04,157 --> 0:07:06,093
所以我可以从我的视图控制器访问它

135
00:07:07,327 --> 0:07:09,329
我要在这里创建一个

136
00:07:16,737 --> 0:07:19,339
该方法创建了一个

137
00:07:19,806 --> 0:07:22,943
该对象涵盖了所有

138
00:07:24,678 --> 0:07:26,246
我们来看看其中一些属性

139
00:07:29,583 --> 0:07:31,151
首先是itemReference

140
00:07:31,919 --> 0:07:34,788
这是该预订项目的唯一标识符

141
00:07:35,422 --> 0:07:37,224
它在系统启动我的app时使用

142
00:07:37,791 --> 0:07:40,027
以告知它要显示哪个特定的预订项目

143
00:07:41,995 --> 0:07:44,731
在我的app中 预订编号对于

144
00:07:45,199 --> 0:07:47,601
所以我将它用于词汇表标识符

145
00:07:48,969 --> 0:07:52,372
同时我也加上了可以向

146
00:07:53,407 --> 0:07:57,010
我用的是航班XX815

147
00:08:00,881 --> 0:08:02,182
这是所有预订类型

148
00:08:03,317 --> 0:08:05,452
共享的一些常见属性

149
00:08:05,819 --> 0:08:08,522
比如预订编号 还有预订持有人等

150
00:08:12,426 --> 0:08:14,661
我们也想获取关于航班的一些信息

151
00:08:15,629 --> 0:08:18,198
它是在一个叫创建航班的

152
00:08:18,866 --> 0:08:20,133
我们来看看

153
00:08:27,975 --> 0:08:30,177
在这里我创建了一个

154
00:08:30,777 --> 0:08:32,946
它表示了航班的所有详细信息

155
00:08:33,246 --> 0:08:35,448
比如航班号 航空公司

156
00:08:35,916 --> 0:08:38,018
还有出发和到达信息

157
00:08:39,385 --> 0:08:40,821
我这里还有一些待办事项

158
00:08:41,087 --> 0:08:42,222
我们一起来完成

159
00:08:42,456 --> 0:08:45,526
从航空公司和机场信息开始

160
00:08:53,600 --> 0:08:55,369
这些对象表示了航空公司

161
00:08:55,435 --> 0:08:57,971
还有航班出发和到达的信息

162
00:08:58,805 --> 0:09:01,742
在我们的例子中

163
00:08:58,805 --> 0:09:01,742
在我们的例子中

164
00:09:03,177 --> 0:09:07,447
航空公司和机场信息都使用

165
00:09:08,415 --> 0:09:10,184
对于机场信息而言 这也可以用来

166
00:09:10,984 --> 0:09:13,554
确定机场的位置

167
00:09:15,022 --> 0:09:18,959
我来为出发添加登机口和航站楼信息

168
00:09:19,092 --> 0:09:20,694
因为现在我已经知道了

169
00:09:21,762 --> 0:09:23,630
我还不知道到达口的信息

170
00:09:23,797 --> 0:09:24,765
所以我设置为无

171
00:09:28,669 --> 0:09:30,904
接下来 我还要为我的航班

172
00:09:30,971 --> 0:09:32,906
指定出发和到达时间

173
00:09:37,544 --> 0:09:39,646
我们使用IN日期组件范围类

174
00:09:39,713 --> 0:09:41,648
来表示出发和到达时间

175
00:09:42,583 --> 0:09:43,984
为了更好的用户体验

176
00:09:44,518 --> 0:09:46,220
我设置的是当地时区

177
00:09:46,687 --> 0:09:49,022
不好意思 我对出发和到达

178
00:09:49,690 --> 0:09:51,592
设置的都是当地时区

179
00:09:53,026 --> 0:09:56,997
好了 现在我们设置好

180
00:09:57,564 --> 0:10:00,033
我们回过头看看其他的预订

181
00:09:57,564 --> 0:10:00,033
我们回过头看看其他的预订

182
00:10:07,307 --> 0:10:10,077
我想让我的用户有更好的登记体验

183
00:10:10,410 --> 0:10:13,447
所以我就要利用新的登记捷径

184
00:10:14,581 --> 0:10:17,484
为此 我要创建一个登记活动

185
00:10:18,285 --> 0:10:20,354
让我们看看

186
00:10:27,327 --> 0:10:29,563
该方法会创建一个

187
00:10:30,397 --> 0:10:33,934
它由类型 有效持续时间和

188
00:10:35,235 --> 0:10:36,904
在该例中 类型是登记

189
00:10:37,571 --> 0:10:41,408
有效持续时间是用户可以

190
00:10:42,843 --> 0:10:45,312
在此期间 我指定的用户活动

191
00:10:45,445 --> 0:10:47,848
会显示为建议捷径

192
00:10:49,783 --> 0:10:51,785
我从创建

193
00:11:02,729 --> 0:11:05,299
我用活动类型来创建NS用户活动

194
00:11:05,532 --> 0:11:09,169
这让我的app在启动时

195
00:11:10,771 --> 0:11:14,007
我将标题设为航班XX815登记

196
00:11:14,908 --> 0:11:17,010
这里向用户显示的是捷径

197
00:11:17,244 --> 0:11:19,146
所以要确保短小精悍

198
00:11:22,449 --> 0:11:24,852
现在我再添加一些我需要知道的细节

199
00:11:25,285 --> 0:11:27,621
以便在启动app时开始登记流程

200
00:11:27,955 --> 0:11:31,458
我在用户信息都添加

201
00:11:35,229 --> 0:11:37,064
我还添加了一个网页URL值

202
00:11:38,265 --> 0:11:41,602
这样即使没有安装我的app

203
00:11:43,337 --> 0:11:44,972
现在我觉得用户活动已经很不错了

204
00:11:45,439 --> 0:11:47,508
但我还需要指定有效持续时间

205
00:11:53,580 --> 0:11:55,516
我们在这里再次使用

206
00:11:56,049 --> 0:11:58,252
这一次我们使用开始时间和结束时间

207
00:11:58,452 --> 0:11:59,419
来表示有效持续时间

208
00:12:00,254 --> 0:12:03,690
在我们的例子中

209
00:12:04,057 --> 0:12:07,594
在起飞前一小时结束 所以这就是

210
00:12:09,363 --> 0:12:11,632
这就是我们创建

211
00:12:12,199 --> 0:12:14,935
我们回过头看看我们创建的预订

212
00:12:20,874 --> 0:12:22,442
现在我们有了所需的信息

213
00:12:22,576 --> 0:12:24,211
包括预订细节

214
00:12:24,678 --> 0:12:26,947
航班信息 和登记活动

215
00:12:28,048 --> 0:12:32,052
让我们回到预订细节视图控制器

216
00:12:32,319 --> 0:12:33,320
来添加发送代码

217
00:12:35,122 --> 0:12:38,258
所以我们的视图控制器已经知道了

218
00:12:38,992 --> 0:12:41,361
我就在这里设置一个方式来发送预订

219
00:12:42,095 --> 0:12:43,697
让我们来添加发送代码

220
00:12:56,310 --> 0:12:58,545
我把导航关掉 这样看得清楚一点

221
00:13:01,949 --> 0:13:03,550
那么现在我开始创建Intent

222
00:13:04,084 --> 0:13:07,454
该Intent告诉Siri

223
00:13:08,522 --> 0:13:09,690
它需要两个参数

224
00:13:10,190 --> 0:13:12,492
容器参考和项目参考

225
00:13:13,560 --> 0:13:16,964
容器参考是标识整个预订的唯一参数

226
00:13:18,031 --> 0:13:21,368
在该例中 我只有一个

227
00:13:22,202 --> 0:13:24,905
所以我将预订项目中的项目参考

228
00:13:25,205 --> 0:13:26,373
设置为容器参考

229
00:13:27,474 --> 0:13:29,176
如果我有多个预订项目

230
00:13:29,376 --> 0:13:31,445
比如说酒店和航班

231
00:13:31,879 --> 0:13:37,117
那么我就会新建一个容器参考

232
00:13:39,186 --> 0:13:41,522
我将预订项目参考的属性设为无

233
00:13:42,289 --> 0:13:45,125
这是在启动app时由系统填充的

234
00:13:48,428 --> 0:13:49,596
除了Intent

235
00:13:49,830 --> 0:13:53,133
我还指定了Intent响应

236
00:13:53,934 --> 0:13:56,370
这会告诉Siri

237
00:13:56,436 --> 0:13:57,504
展示给用户

238
00:13:58,972 --> 0:14:02,876
最后 我将Intent和Intent响应

239
00:13:58,972 --> 0:14:02,876
最后 我将Intent和Intent响应

240
00:14:03,243 --> 0:14:04,578
然后发送至我的系统

241
00:14:06,346 --> 0:14:09,216
现在我们已经写好了所有

242
00:14:09,550 --> 0:14:10,984
但我们在启动app前

243
00:14:11,051 --> 0:14:12,219
还要检查一个地方

244
00:14:18,225 --> 0:14:20,627
我要将

245
00:14:20,694 --> 0:14:22,296
以及自定义CheckInActivity

246
00:14:22,362 --> 0:14:25,365
添加至info.plist中

247
00:14:26,200 --> 0:14:28,936
我之前已经做好了

248
00:14:34,107 --> 0:14:35,843
我们先来回顾一下

249
00:14:37,010 --> 0:14:39,446
我们创建并发送了

250
00:14:39,680 --> 0:14:42,282
该预订包含了所有预订信息

251
00:14:43,617 --> 0:14:45,385
现在Siri就知道了该预订

252
00:14:45,819 --> 0:14:48,622
并可以在整个系统中提供主动建议了

253
00:14:50,057 --> 0:14:51,925
我们还添加了

254
00:14:52,125 --> 0:14:53,927
来提供更好的登记体验

255
00:14:53,994 --> 0:14:56,196
我们会将捷径展示给用户

256
00:14:56,663 --> 0:14:59,433
并且在对的时机直接将其

257
00:15:00,734 --> 0:15:01,768
我们来在操作中看看

258
00:15:06,240 --> 0:15:07,207
回到我的app中

259
00:15:07,574 --> 0:15:10,410
我们来看看到巴黎的航班预订

260
00:15:13,113 --> 0:15:15,682
当我查看我的预订时

261
00:15:16,383 --> 0:15:18,819
告诉我Siri找到了一项活动

262
00:15:19,686 --> 0:15:20,587
谢谢

263
00:15:23,323 --> 0:15:25,592
我来点击该通知 看看会出现什么

264
00:15:27,261 --> 0:15:30,163
正如我们所见

265
00:15:30,497 --> 0:15:32,866
在我的Siri建议日历中

266
00:15:34,201 --> 0:15:35,903
这里还有一个回到app的链接

267
00:15:37,037 --> 0:15:40,040
当我点击时 就会直接回到app

268
00:15:40,474 --> 0:15:41,308
这很棒

269
00:15:42,009 --> 0:15:44,144
但是当我在查看日历时

270
00:15:44,211 --> 0:15:45,946
我还是没有看到预订细节

271
00:15:46,480 --> 0:15:47,581
这里我们还可以提升一下

272
00:15:47,881 --> 0:15:51,051
让我们回到Xcode

273
00:15:54,021 --> 0:15:56,356
为了实现app启动

274
00:15:58,926 --> 0:16:00,194
当Siri启动我的app时

275
00:15:58,926 --> 0:16:00,194
当Siri启动我的app时

276
00:16:00,260 --> 0:16:02,462
它将使用

277
00:16:02,663 --> 0:16:06,300
所以我要实现app

278
00:16:10,637 --> 0:16:12,606
我在这里添加了对

279
00:16:13,240 --> 0:16:15,976
第一项是

280
00:16:16,810 --> 0:16:20,314
此活动类型表示

281
00:16:20,380 --> 0:16:22,416
查看特定预订的详细信息

282
00:16:23,817 --> 0:16:25,886
所以我要调用

283
00:16:26,186 --> 0:16:28,322
它会将相关预订展示给用户

284
00:16:35,262 --> 0:16:39,700
第二个是我为登记捷径

285
00:16:40,167 --> 0:16:42,436
当用户点击锁屏或者是搜索上的

286
00:16:42,703 --> 0:16:44,271
登记捷径时会启用

287
00:16:45,672 --> 0:16:47,975
当该情况发生时 我要调用

288
00:16:48,041 --> 0:16:49,376
来开始登记流程

289
00:16:51,545 --> 0:16:53,080
处理完这两项事情后

290
00:16:53,547 --> 0:16:55,382
我们再次启动app看看

291
00:17:02,022 --> 0:17:04,525
我们首先回到日历

292
00:17:04,992 --> 0:17:07,060
再次点击显示我的航班按钮

293
00:17:09,329 --> 0:17:11,765
如你所见

294
00:17:11,832 --> 0:17:13,733
活动的预订详细信息

295
00:17:14,034 --> 0:17:15,868
这大大提升了用户体验

296
00:17:21,241 --> 0:17:23,443
我还添加了对登记捷径的支持

297
00:17:23,777 --> 0:17:28,281
我的航班在明天下午2:50起飞

298
00:17:29,349 --> 0:17:30,350
我们来看看这是怎样工作的

299
00:17:31,718 --> 0:17:34,154
现在登记捷径在锁屏

300
00:17:34,621 --> 0:17:35,689
和搜索UI上都有显示

301
00:17:36,490 --> 0:17:37,324
当我点击

302
00:17:37,824 --> 0:17:40,294
我就直接启动了app中的登记流程

303
00:17:40,594 --> 0:17:41,461
这真的很棒

304
00:17:48,135 --> 0:17:49,036
我们来回顾一下

305
00:17:49,736 --> 0:17:51,839
我们创建和发送了预订

306
00:17:53,040 --> 0:17:54,508
我们提供了登记活动

307
00:17:55,576 --> 0:17:57,311
同时我们也处理了启动app

308
00:17:58,579 --> 0:17:59,580
利用Siri活动建议API

309
00:17:59,646 --> 0:18:02,149
来提供深度系统集成和提高用户体验

310
00:17:59,646 --> 0:18:02,149
来提供深度系统集成和提高用户体验

311
00:18:02,416 --> 0:18:05,752
就是这么简单

312
00:18:07,054 --> 0:18:09,189
现在我还想说说API

313
00:18:11,558 --> 0:18:12,826
我们从发送开始

314
00:18:12,893 --> 0:18:15,429
再说说Siri是如何在

315
00:18:15,629 --> 0:18:18,799
和日历这些地方利用你发送的信息的

316
00:18:20,434 --> 0:18:21,468
正如我们在演示中所见

317
00:18:21,935 --> 0:18:24,438
你的app位于登记

318
00:18:25,405 --> 0:18:27,040
我们显示了你的app名称和图标

319
00:18:27,107 --> 0:18:29,042
还有预订信息

320
00:18:30,244 --> 0:18:34,314
同样 我们使用你在捷径中

321
00:18:34,882 --> 0:18:38,218
因此 请确保使用准确

322
00:18:40,521 --> 0:18:43,423
现在 Siri会端到端加密

323
00:18:43,490 --> 0:18:46,360
自动将预订详情同步至用户设备

324
00:18:47,227 --> 0:18:49,496
所以用户在没有安装

325
00:18:49,563 --> 0:18:50,697
也可以看到登记捷径

326
00:18:51,231 --> 0:18:52,666
在我们的情况下是iPad

327
00:18:54,067 --> 0:18:54,902
当该情况发生时

328
00:18:55,135 --> 0:18:58,572
我们将使用你在NSUserActivity上

329
00:18:58,939 --> 0:19:01,642
利用Safari提供

330
00:18:58,939 --> 0:19:01,642
利用Safari提供

331
00:19:03,076 --> 0:19:04,278
这就是登记捷径

332
00:19:04,778 --> 0:19:05,779
我们再来看看日历

333
00:19:07,514 --> 0:19:09,082
第一是标题

334
00:19:09,950 --> 0:19:11,785
标题由Siri自动生成

335
00:19:12,819 --> 0:19:14,888
利用的是你提供的预订详情

336
00:19:15,856 --> 0:19:19,526
如你所见 Siri为标题添加了

337
00:19:20,961 --> 0:19:22,462
根据不同的预订类型

338
00:19:22,629 --> 0:19:25,532
它会使用信息的不同部分来生成标题

339
00:19:26,233 --> 0:19:28,468
因此请确保按原样提供所有详情

340
00:19:28,535 --> 0:19:31,638
不要添加或附加任何内容

341
00:19:33,540 --> 0:19:34,675
接下来是位置

342
00:19:35,709 --> 0:19:38,378
位置是用户体验的关键组成部

343
00:19:38,645 --> 0:19:40,614
它也推动了系统集成

344
00:19:40,681 --> 0:19:43,684
例如出发时间通知和地图集成

345
00:19:44,651 --> 0:19:46,053
对于大多预订类型

346
00:19:46,220 --> 0:19:49,423
SiriKit会使用

347
00:19:50,757 --> 0:19:52,960
你可以自己创建

348
00:19:53,093 --> 0:19:56,196
或者你的app用的是MapKit

349
00:19:58,065 --> 0:20:00,267
如果你是自己创建

350
00:19:58,065 --> 0:20:00,267
如果你是自己创建

351
00:20:00,601 --> 0:20:05,038
一定要包括位置和邮政地址

352
00:20:06,340 --> 0:20:09,109
如果你不知道坐标 就设为00

353
00:20:09,710 --> 0:20:12,212
这样Siri就知道只有邮政地址

354
00:20:14,548 --> 0:20:17,117
接下来就是预订的开始和结束时间

355
00:20:18,418 --> 0:20:19,319
如你所见

356
00:20:20,254 --> 0:20:22,389
该活动显示的开始和结束时间

357
00:20:22,589 --> 0:20:26,226
是用户所在时区和预订所在时区

358
00:20:27,895 --> 0:20:31,331
因此 请确保为预订设置本地时区

359
00:20:31,398 --> 0:20:34,134
或者如果你的app

360
00:20:35,869 --> 0:20:38,372
有些预订类型有着清晰的

361
00:20:39,239 --> 0:20:40,741
比如航班

362
00:20:40,807 --> 0:20:43,911
你可以使用计划出发时间

363
00:20:45,212 --> 0:20:47,648
对于住宿和汽车租赁等预订

364
00:20:47,814 --> 0:20:49,816
就使用登记入住和退房时间

365
00:20:51,685 --> 0:20:54,621
如果该预订没有特定的

366
00:20:55,422 --> 0:20:59,760
这样Siri就会根据

367
00:21:02,095 --> 0:21:03,363
接下来是Notes部分

368
00:21:03,997 --> 0:21:06,600
Siri使用Notes部分来提供

369
00:21:06,667 --> 0:21:09,136
可能会对用户有用的

370
00:21:09,236 --> 0:21:10,537
关于预订详情的更多信息

371
00:21:11,004 --> 0:21:13,574
例如预订号码或座位信息

372
00:21:14,675 --> 0:21:16,743
请确保填写所有

373
00:21:16,810 --> 0:21:17,945
可能向用户显示的

374
00:21:18,312 --> 0:21:19,780
预订详细信息

375
00:21:22,082 --> 0:21:25,919
最后，Siri提供了一个直接从

376
00:21:26,753 --> 0:21:28,422
点击即可启动你的app

377
00:21:28,622 --> 0:21:31,425
这样它就可以显示更多

378
00:21:32,860 --> 0:21:34,494
我们来看看在你的app中

379
00:21:34,628 --> 0:21:35,829
你需要知道什么

380
00:21:38,432 --> 0:21:39,766
为了更好地理解启动app

381
00:21:40,100 --> 0:21:43,704
我们回过头看看我们

382
00:21:44,605 --> 0:21:47,908
在刚刚的演示里

383
00:21:49,343 --> 0:21:52,145
但现在我们假设有多个预订项目

384
00:21:52,779 --> 0:21:54,348
比如往返航班

385
00:21:55,916 --> 0:21:58,018
这样我们就有两趟航班

386
00:21:58,085 --> 0:21:59,853
可能会共享一个预订编号

387
00:22:01,154 --> 0:22:03,390
这样预订编号就不能用于

388
00:22:03,457 --> 0:22:06,059
唯一标识特定预订项目了

389
00:22:07,794 --> 0:22:11,365
因此你的app必须提供名为

390
00:22:11,732 --> 0:22:13,100
项目参考的附加标识符

391
00:22:14,668 --> 0:22:18,505
对于app的每个预订项

392
00:22:19,573 --> 0:22:22,042
怎么构建项目参考完全取决于你

393
00:22:22,442 --> 0:22:25,946
只要后面能够推断出它属于哪个预订

394
00:22:27,247 --> 0:22:30,083
在这个例子中

395
00:22:30,150 --> 0:22:31,985
和特定航班号

396
00:22:32,219 --> 0:22:33,787
来创建预订项目

397
00:22:37,824 --> 0:22:39,960
然后我们将两个预订项目

398
00:22:40,093 --> 0:22:42,496
添加至

399
00:22:43,163 --> 0:22:44,331
完善发送信息

400
00:22:44,531 --> 0:22:47,367
我们还需要创建

401
00:22:49,937 --> 0:22:50,971
当我们创建Intent时

402
00:22:51,405 --> 0:22:54,575
我们要告诉Siri

403
00:22:56,043 --> 0:22:58,178
这由容器参考表示

404
00:22:59,613 --> 0:23:02,015
在该例中 我们发送的是

405
00:22:59,613 --> 0:23:02,015
在该例中 我们发送的是

406
00:23:02,216 --> 0:23:03,851
两个属于同一预订的航班

407
00:23:04,484 --> 0:23:07,721
我们将容器参考设置为共享预订编号

408
00:23:08,021 --> 0:23:10,757
因为它唯一地标识了整个预订

409
00:23:12,926 --> 0:23:16,263
最后我们将预订项目参考数组设为无

410
00:23:16,797 --> 0:23:18,432
这当你启动app时才会使用

411
00:23:18,665 --> 0:23:21,602
让它知道用户想要查看哪个预订

412
00:23:23,871 --> 0:23:24,805
这就是信息发送

413
00:23:26,507 --> 0:23:28,509
我们来看看启动app时

414
00:23:28,575 --> 0:23:29,576
这些信息是如何利用的

415
00:23:31,945 --> 0:23:34,815
当你的app启动

416
00:23:35,015 --> 0:23:37,718
它会以

417
00:23:39,052 --> 0:23:42,389
这表示用户想要查看详细信息的预订

418
00:23:43,156 --> 0:23:44,024
在该例中

419
00:23:44,791 --> 0:23:47,528
我们启动该app

420
00:23:47,594 --> 0:23:50,497
希望详细了解标识为B9C8的预订

421
00:23:51,665 --> 0:23:54,301
如果该预订项目参考数组为无

422
00:23:54,701 --> 0:23:57,871
你的app就会显示一个

423
00:23:58,772 --> 0:24:01,475
在我们刚刚的例子中

424
00:23:58,772 --> 0:24:01,475
在我们刚刚的例子中

425
00:24:03,243 --> 0:24:07,181
用户可能还希望查看

426
00:24:07,614 --> 0:24:10,217
比如前一个例子中的某一趟航班

427
00:24:11,385 --> 0:24:15,556
在这种情况下

428
00:24:15,689 --> 0:24:17,224
预订项目参考数组启动

429
00:24:18,325 --> 0:24:20,194
它会是你在

430
00:24:20,260 --> 0:24:22,596
设置的项目参考

431
00:24:23,864 --> 0:24:26,600
在这种情况下

432
00:24:26,667 --> 0:24:28,402
只有特定预订的界面

433
00:24:31,772 --> 0:24:32,773
在你启动app之前

434
00:24:32,906 --> 0:24:36,443
我们会将Intent包括在INInteraction

435
00:24:36,910 --> 0:24:39,179
有了活动类型

436
00:24:39,646 --> 0:24:42,115
再用其启动app

437
00:24:45,586 --> 0:24:48,522
我们了解了Siri如何利用

438
00:24:48,689 --> 0:24:51,425
以及该信息之后

439
00:24:52,893 --> 0:24:54,895
但是生活是不确定的

440
00:24:55,863 --> 0:24:58,298
用户可能改变或者取消了他们的预订

441
00:24:58,699 --> 0:25:00,834
而这可能是在你的app外发生的

442
00:24:58,699 --> 0:25:00,834
而这可能是在你的app外发生的

443
00:25:01,068 --> 0:25:02,569
比如网页

444
00:25:03,871 --> 0:25:06,106
我们现在就来看看怎么处理这种情况

445
00:25:08,275 --> 0:25:11,678
我们先看看什么时候

446
00:25:13,080 --> 0:25:16,750
在该例中 用户正在浏览

447
00:25:17,851 --> 0:25:20,220
这就是你发送信息的时机

448
00:25:20,754 --> 0:25:24,858
就像我们刚刚在演示里看到的

449
00:25:25,993 --> 0:25:29,596
同时看到通知和预订详情

450
00:25:29,830 --> 0:25:32,065
会是很好的用户体验

451
00:25:33,700 --> 0:25:35,969
但是在app后台运行的时候

452
00:25:36,870 --> 0:25:39,206
而用户应该始终拥有最新信息

453
00:25:40,007 --> 0:25:43,076
所以有新的预订可用时

454
00:25:44,178 --> 0:25:45,479
应将其从后台发送

455
00:25:46,780 --> 0:25:49,349
.在这种情况下 我们就不会

456
00:25:51,185 --> 0:25:53,287
这就是你的app发送信息的时机

457
00:25:53,687 --> 0:25:55,923
那么什么时候不该发送信息呢

458
00:25:58,058 --> 0:25:59,459
在刚刚那个演示中

459
00:25:59,960 --> 0:26:01,094
你的app不应该在

460
00:25:59,960 --> 0:26:01,094
你的app不应该在

461
00:26:01,161 --> 0:26:03,597
显示不相关的预订列表时发送

462
00:26:05,132 --> 0:26:08,402
如果在这时发送通知

463
00:26:08,569 --> 0:26:09,870
因为缺乏上下文

464
00:26:11,538 --> 0:26:13,106
为了提供更好的体验

465
00:26:13,307 --> 0:26:16,677
你的app不应该提供

466
00:26:18,779 --> 0:26:20,447
在该例中 你的app应该在

467
00:26:20,514 --> 0:26:22,616
预订详情正在显示的时候发送信息

468
00:26:24,484 --> 0:26:28,422
接下来让我们看看预订

469
00:26:30,257 --> 0:26:33,627
我们以用户选择航班座位为例

470
00:26:34,962 --> 0:26:36,830
我们先发送了预订

471
00:26:37,998 --> 0:26:40,467
这时座位信息还不可用

472
00:26:40,634 --> 0:26:42,236
所以我们将座位属性设为无

473
00:26:43,303 --> 0:26:45,038
现在用户选择了座位

474
00:26:45,873 --> 0:26:48,175
我们就要发送更新的预订详情

475
00:26:48,609 --> 0:26:50,143
也就是座位信息设置

476
00:26:51,512 --> 0:26:54,681
请记住 项目参考在整个

477
00:26:54,781 --> 0:26:56,316
都要保持不变

478
00:26:57,751 --> 0:27:00,420
一旦发送 Siri就会将该信息

479
00:26:57,751 --> 0:27:00,420
一旦发送 Siri就会将该信息

480
00:27:00,721 --> 0:27:03,056
发送至有关位置 包括日历

481
00:27:04,491 --> 0:27:06,393
现在我们就来说说取消

482
00:27:08,095 --> 0:27:10,531
取消是一种特殊的修改方式

483
00:27:11,532 --> 0:27:12,432
在该例中

484
00:27:12,733 --> 0:27:16,837
我们已经以确认状态发送了此预订

485
00:27:17,871 --> 0:27:20,440
但是用户取消了预订

486
00:27:21,074 --> 0:27:23,577
所以我们还要发送更新信息

487
00:27:23,644 --> 0:27:25,012
既取消状态设置

488
00:27:26,880 --> 0:27:30,184
就像其他修改一样

489
00:27:31,752 --> 0:27:33,687
这就是app处理这些情况的方式

490
00:27:33,754 --> 0:27:35,856
它可能发生在预订

491
00:27:37,024 --> 0:27:39,393
现在我们对今天讲的东西做一个总结

492
00:27:41,628 --> 0:27:42,863
我们看到了利用

493
00:27:42,930 --> 0:27:45,465
Siri活动建议API是多么容易

494
00:27:45,799 --> 0:27:49,503
以及我们在预订生命周期内

495
00:27:50,571 --> 0:27:52,372
以下是三个主要内容

496
00:27:54,308 --> 0:27:57,711
你的app应在向用户显示时

497
00:27:58,111 --> 0:27:59,947
或者是在后台接收时

498
00:28:01,748 --> 0:28:03,617
确保在预订详细信息

499
00:28:03,684 --> 0:28:06,019
来保证用户拥有最新信息

500
00:28:06,954 --> 0:28:09,756
最后记得处理app启动

501
00:28:09,990 --> 0:28:14,494
这样用户就可以在正确的时间

502
00:28:17,030 --> 0:28:19,600
有关更多信息

503
00:28:19,733 --> 0:28:22,102
你可以访问开发者门户上的演讲链接

504
00:28:22,970 --> 0:28:25,405
我们也有早些年的相关演讲

505
00:28:25,572 --> 0:28:27,107
我也建议你听一听

506
00:28:28,475 --> 0:28:30,611
谢谢大家 希望大家喜欢
