1
00:00:01,516 --> 0:00:04,500
[音乐]

2
00:00:06,516 --> 0:00:13,556
[掌声]

3
00:00:14,056 --> 0:00:14,916
&gt;&gt; 下午好 欢迎各位

4
00:00:14,916 --> 0:00:16,456
参加今天的“订阅优惠的最佳实践”会议

5
00:00:17,176 --> 0:00:18,046
我是 Ross LaBeau

6
00:00:18,046 --> 0:00:19,396
我是 App Store 团队的一名工程师

7
00:00:20,206 --> 0:00:21,086
今天我们将深入地了解

8
00:00:21,086 --> 0:00:22,646
App Store 中

9
00:00:22,646 --> 0:00:23,946
App 内购买项目的最新特性

10
00:00:26,496 --> 0:00:28,556
订阅提供者

11
00:00:28,556 --> 0:00:29,726
可通过订阅优惠

12
00:00:29,726 --> 0:00:31,016
这一全新的方式

13
00:00:31,016 --> 0:00:32,476
为用户提供

14
00:00:32,476 --> 0:00:34,386
特定时长的折扣价格

15
00:00:35,836 --> 0:00:37,996
我们知道

16
00:00:38,266 --> 0:00:41,076
用户流失是订阅 App

17
00:00:41,236 --> 0:00:42,016
利润下降的主要原因之一

18
00:00:42,946 --> 0:00:44,516
这是一个强大的新工具

19
00:00:44,516 --> 0:00:46,646
通过留住用户

20
00:00:47,046 --> 0:00:49,316
或赢回已经流失的用户

21
00:00:49,316 --> 0:00:50,856
来帮助减少用户流失

22
00:00:51,526 --> 0:00:54,336
订阅优惠

23
00:00:54,336 --> 0:00:55,486
最酷的地方在于

24
00:00:55,486 --> 0:00:56,826
你可以选择何时

25
00:00:56,826 --> 0:00:58,216
向用户提供优惠

26
00:00:58,216 --> 0:00:59,246
以及向他们展示哪些优惠

27
00:01:00,176 --> 0:01:03,576
例如 如果你刚刚收到一条

28
00:01:04,056 --> 0:01:05,656
服务器对服务器的自动续订通知

29
00:01:05,656 --> 0:01:10,026
一位用户已经取消了自动续订

30
00:01:10,026 --> 0:01:13,166
你想在即刻采取行动

31
00:01:13,166 --> 0:01:15,226
并给予他优惠

32
00:01:15,226 --> 0:01:16,896
例如为期三个月的半价订阅

33
00:01:16,896 --> 0:01:18,436
从而让用户继续使用你的 App 并保持订阅

34
00:01:21,356 --> 0:01:22,726
与试用优惠不同的是

35
00:01:23,006 --> 0:01:24,476
用户可以在你的允许下

36
00:01:24,476 --> 0:01:25,496
多次兑换订阅优惠

37
00:01:25,496 --> 0:01:27,276
他们甚至可以

38
00:01:27,276 --> 0:01:28,226
多次兑换同一优惠

39
00:01:28,716 --> 0:01:33,226
App Store 提出的唯一条件是

40
00:01:33,226 --> 0:01:34,756
用户必须

41
00:01:34,756 --> 0:01:36,076
正在自动续订

42
00:01:36,106 --> 0:01:37,706
或者订阅过你的 App

43
00:01:41,666 --> 0:01:43,426
今天我们将介绍

44
00:01:43,426 --> 0:01:44,606
在 App Store Connect 中

45
00:01:44,606 --> 0:01:45,276
创建这些优惠的具体设置

46
00:01:47,416 --> 0:01:48,466
我们将讨论如何生成

47
00:01:48,466 --> 0:01:49,906
在每次交易中

48
00:01:49,906 --> 0:01:51,636
你都需要发送的密码签名

49
00:01:53,056 --> 0:01:54,456
我们也将谈到新的 StoreKit API

50
00:01:54,456 --> 0:01:56,136
以及如何使用它们

51
00:01:56,176 --> 0:01:58,236
向 App Store 发送一个交易

52
00:01:58,236 --> 0:01:59,500
并进行一次购买

53
00:02:02,556 --> 0:02:04,016
我们将从 App Store 的角度

54
00:02:04,016 --> 0:02:05,216
以及如何创建你的

55
00:02:05,216 --> 0:02:06,696
自定义业务规则的角度

56
00:02:06,696 --> 0:02:08,586
来讨论用户的资格审查

57
00:02:09,735 --> 0:02:12,066
我们将提供一些提示和技巧

58
00:02:12,066 --> 0:02:13,386
帮助你给你的用户

59
00:02:13,386 --> 0:02:14,656
分配和营销这些优惠

60
00:02:15,196 --> 0:02:18,346
最后 我们将讨论

61
00:02:18,346 --> 0:02:19,836
更多关于如何

62
00:02:19,836 --> 0:02:20,536
减少用户流失的商业策略

63
00:02:25,056 --> 0:02:26,456
首先 就像试用优惠一样

64
00:02:26,456 --> 0:02:27,866
你需要在 App Store Connect 中

65
00:02:27,866 --> 0:02:28,946
设置订阅优惠

66
00:02:29,816 --> 0:02:32,416
进入“功能”选项卡下的

67
00:02:32,416 --> 0:02:34,046
“App 内购买”

68
00:02:34,466 --> 0:02:36,436
之后选择任一自动续订的订阅选项

69
00:02:37,986 --> 0:02:39,066
然后点按“订阅价格”

70
00:02:39,066 --> 0:02:40,776
旁边的加号按钮

71
00:02:40,776 --> 0:02:41,976
选择“创建促销优惠”

72
00:02:45,306 --> 0:02:46,356
在这里 你可以输入

73
00:02:46,356 --> 0:02:48,236
易于理解的优惠名称

74
00:02:48,236 --> 0:02:49,476
以及产品代码

75
00:02:50,176 --> 0:02:51,546
这个产品代码

76
00:02:51,546 --> 0:02:52,476
也就是标识符

77
00:02:53,446 --> 0:02:55,586
从这开始 你将使用这个特定的标识符

78
00:02:55,586 --> 0:02:56,846
来指代这个优惠

79
00:02:58,216 --> 0:02:59,696
之后就和试用优惠的设置

80
00:02:59,696 --> 0:03:00,406
非常相似了

81
00:02:59,696 --> 0:03:00,406
非常相似了

82
00:03:00,666 --> 0:03:02,116
你需要选择类型

83
00:03:02,116 --> 0:03:03,166
时长以及价格

84
00:03:03,636 --> 0:03:04,926
除了设置这些优惠之外

85
00:03:05,546 --> 0:03:08,696
你还需要设置一个私钥

86
00:03:08,696 --> 0:03:10,216
以便生成之前提及的签名

87
00:03:10,216 --> 0:03:13,146
我们之后再进一步讨论这个签名

88
00:03:13,146 --> 0:03:15,116
创建你的私钥

89
00:03:15,856 --> 0:03:16,816
你需要进入

90
00:03:16,816 --> 0:03:18,156
App Store Connect 的“用户与访问”

91
00:03:19,066 --> 0:03:20,286
选择“密钥”

92
00:03:20,286 --> 0:03:21,816
并确保选择左侧的“订阅”

93
00:03:22,246 --> 0:03:24,286
点按加号按钮

94
00:03:25,576 --> 0:03:26,816
输入易于理解的密钥的名字

95
00:03:26,816 --> 0:03:27,976
并点按“生成”

96
00:03:32,476 --> 0:03:33,756
之后你就可以

97
00:03:33,756 --> 0:03:35,276
在上方的“活跃”密钥列表中

98
00:03:35,526 --> 0:03:36,176
发现这个新建的密钥

99
00:03:37,276 --> 0:03:38,176
你也会发现

100
00:03:38,176 --> 0:03:39,686
App Store Connect 已经为它生成了

101
00:03:39,686 --> 0:03:40,956
一个密钥 ID

102
00:03:41,206 --> 0:03:42,156
这也是一个

103
00:03:42,156 --> 0:03:43,276
特定的标识符

104
00:03:43,276 --> 0:03:43,976
用来在 StoreKit 中引用这个密钥

105
00:03:47,046 --> 0:03:47,666
现在你可以

106
00:03:47,666 --> 0:03:48,836
下载你的私钥

107
00:03:49,276 --> 0:03:50,246
只需点按“下载密钥”

108
00:03:50,756 --> 0:03:51,976
但是重要的一点需要注意

109
00:03:51,976 --> 0:03:54,446
你仅可以下载一次这个密钥

110
00:03:55,356 --> 0:03:56,816
没有错 只有一次

111
00:03:57,736 --> 0:03:58,986
一旦你下载了它

112
00:03:58,986 --> 0:03:59,966
App Store Connect 将会

113
00:03:59,966 --> 0:04:01,256
永久地从 Apple 服务器中删除它

114
00:03:59,966 --> 0:04:01,256
永久地从 Apple 服务器中删除它

115
00:04:01,256 --> 0:04:04,076
这么处理的原因是

116
00:04:04,076 --> 0:04:07,626
这些密钥是非常敏感的加密信息

117
00:04:08,226 --> 0:04:10,196
这个私钥就像是你的身份

118
00:04:10,316 --> 0:04:12,786
它被用来证明授权用户

119
00:04:12,786 --> 0:04:14,976
兑换这笔交易的是你本人

120
00:04:20,236 --> 0:04:21,716
如果你在你的所有 App 中

121
00:04:21,716 --> 0:04:23,516
以及为这些 App 设置的优惠中

122
00:04:23,666 --> 0:04:25,176
都使用了同一个密钥

123
00:04:25,176 --> 0:04:27,216
那么这些密钥将在

124
00:04:27,216 --> 0:04:28,776
你的整个开发者帐户中生效

125
00:04:29,926 --> 0:04:31,336
但是你也可以按照喜好

126
00:04:31,336 --> 0:04:31,996
使用多个密钥

127
00:04:32,546 --> 0:04:33,756
如果你使用

128
00:04:33,756 --> 0:04:35,296
一个开发者帐户来服务

129
00:04:35,566 --> 0:04:37,046
多个 App 或不同的业务组分

130
00:04:37,046 --> 0:04:40,706
那么你可以创建多个密钥

131
00:04:40,706 --> 0:04:42,566
来将它们分割开

132
00:04:42,816 --> 0:04:44,516
就像我所提到的

133
00:04:44,656 --> 0:04:47,416
每笔交易都需要一个加密签名

134
00:04:47,416 --> 0:04:48,686
你需要把它发送到 App Store

135
00:04:48,686 --> 0:04:48,936
来兑换优惠

136
00:04:51,546 --> 0:04:52,716
现在 为了确保只有授权用户才能兑换优惠

137
00:04:52,716 --> 0:04:55,866
我们需要做出如下的设置

138
00:04:56,846 --> 0:04:58,766
使用有效载荷生成一个签名

139
00:04:58,766 --> 0:05:00,766
你同样需要将这个有效载荷

140
00:04:58,766 --> 0:05:00,766
你同样需要将这个有效载荷

141
00:05:00,766 --> 0:05:01,386
发送到 App Store

142
00:05:02,396 --> 0:05:05,116
这个签名运用了一个叫“非对称加密”的东西

143
00:05:05,736 --> 0:05:09,376
非对称加密 是一个十分常见的技术

144
00:05:09,426 --> 0:05:10,976
它使用两个密钥来生成

145
00:05:10,976 --> 0:05:12,996
并验证签名

146
00:05:12,996 --> 0:05:14,616
而不仅仅是我们刚才讨论的私钥

147
00:05:15,276 --> 0:05:16,596
我们使用私钥作为你身份的证明

148
00:05:16,596 --> 0:05:18,366
来签署你的有效载荷

149
00:05:18,366 --> 0:05:21,646
第二个密钥 叫做公钥

150
00:05:22,666 --> 0:05:23,546
就像它的字面意思

151
00:05:23,616 --> 0:05:25,276
这个公钥实际上

152
00:05:25,276 --> 0:05:26,016
可以显示给其他人

153
00:05:26,186 --> 0:05:27,936
你不能用它 生成任何签名

154
00:05:28,566 --> 0:05:29,406
使用公钥所能做的一切

155
00:05:29,406 --> 0:05:31,596
就是证明该签名

156
00:05:31,676 --> 0:05:33,106
是用你的私钥生成的

157
00:05:33,106 --> 0:05:34,966
并与你用来签署的

158
00:05:34,966 --> 0:05:35,496
有效负载匹配

159
00:05:39,046 --> 0:05:40,346
由于生成签名

160
00:05:40,776 --> 0:05:42,056
需要使用你的私钥

161
00:05:42,526 --> 0:05:43,596
所以你应该始终在

162
00:05:43,596 --> 0:05:45,256
安全服务器上进行

163
00:05:45,256 --> 0:05:46,516
而不是从设备本身进行

164
00:05:46,516 --> 0:05:47,356
因为你一定不想

165
00:05:47,736 --> 0:05:49,086
将这段加密信息

166
00:05:49,086 --> 0:05:50,516
放在其他人的硬件上

167
00:05:51,706 --> 0:05:53,106
我们现在看一看

168
00:05:53,106 --> 0:05:54,806
我们利用 NodeJS 和 Express

169
00:05:54,806 --> 0:05:55,966
构建的服务器

170
00:05:56,156 --> 0:05:58,066
这实际上是可以

171
00:05:58,066 --> 0:05:59,406
在网上下载到的示例代码

172
00:06:00,566 --> 0:06:01,746
如果你不使用 JavaScript

173
00:06:01,826 --> 0:06:02,286
也不用担心

174
00:06:03,056 --> 0:06:04,216
这里展示的一切成果

175
00:06:04,216 --> 0:06:05,706
都可以以其他语言完成

176
00:06:06,046 --> 0:06:09,206
比如 Python PHP Java Swift 等等

177
00:06:09,206 --> 0:06:10,546
选择哪个都可以

178
00:06:14,346 --> 0:06:15,976
第一步

179
00:06:15,976 --> 0:06:17,246
当你的 App

180
00:06:17,246 --> 0:06:18,746
准备好向用户展示优惠时

181
00:06:18,746 --> 0:06:19,806
你需要将这个请求

182
00:06:19,806 --> 0:06:20,806
发送到服务器

183
00:06:20,806 --> 0:06:21,686
然后生成一个签名

184
00:06:23,336 --> 0:06:25,276
在本例中

185
00:06:25,276 --> 0:06:26,316
App 已经知道我们想要签署的

186
00:06:26,366 --> 0:06:28,366
几个有效载荷

187
00:06:28,366 --> 0:06:29,216
因此我们仅需

188
00:06:29,216 --> 0:06:31,066
在请求中的主题部分获取它们

189
00:06:32,486 --> 0:06:33,386
我们将获得 App 的

190
00:06:33,386 --> 0:06:36,006
套装标识符

191
00:06:36,006 --> 0:06:37,666
订阅的产品标识符

192
00:06:38,786 --> 0:06:39,876
以及优惠标识符

193
00:06:39,876 --> 0:06:41,146
对应的是你将展示给

194
00:06:41,356 --> 0:06:43,546
用户的优惠

195
00:06:43,626 --> 0:06:46,516
最后我们会得到一个哈希 App 用户名

196
00:06:47,426 --> 0:06:50,116
这是一个单向排序的安全哈希值

197
00:06:50,116 --> 0:06:53,696
包含一些关于用户的标识信息

198
00:06:54,146 --> 0:06:55,316
也许是他们在你的 App 中的用户名

199
00:06:55,316 --> 0:06:55,946
或者他们的邮箱

200
00:06:57,056 --> 0:06:57,956
但很重要的一点是

201
00:06:57,956 --> 0:06:59,106
你要对它进行哈希 处理

202
00:06:59,106 --> 0:07:01,196
并且永远不要把纯文本标识信息

203
00:06:59,106 --> 0:07:01,196
并且永远不要把纯文本标识信息

204
00:07:01,196 --> 0:07:02,236
发送到 App Store

205
00:07:02,736 --> 0:07:03,586
你需要在自己的数据库中

206
00:07:03,586 --> 0:07:03,976
保持这种安全性

207
00:07:07,336 --> 0:07:08,336
下一个有效载荷

208
00:07:08,336 --> 0:07:09,426
叫做“nonce”（唯一性参数）

209
00:07:10,586 --> 0:07:12,386
这只是一个随机的数据片段

210
00:07:12,386 --> 0:07:15,486
以确保没有两个交易是相同的

211
00:07:15,486 --> 0:07:20,486
我们使用它来防止重放攻击

212
00:07:20,486 --> 0:07:21,446
和其他绕过它的方法

213
00:07:21,446 --> 0:07:23,486
如此用户将不能重新发送相同的请求

214
00:07:23,486 --> 0:07:25,606
在没有你的批准下

215
00:07:25,606 --> 0:07:26,636
获得多次的免费订阅

216
00:07:27,196 --> 0:07:30,006
App Store 使用

217
00:07:30,006 --> 0:07:31,476
版本为 4 的 UUID

218
00:07:31,476 --> 0:07:31,966
这就是我们要创建的

219
00:07:34,146 --> 0:07:35,216
然后我们会得到一个时间戳

220
00:07:36,136 --> 0:07:37,306
这是自 Unix Epoch 格式以来的

221
00:07:37,306 --> 0:07:39,346
以毫秒为单位的时间戳

222
00:07:40,506 --> 0:07:42,256
这是一个十分常用的格式

223
00:07:42,256 --> 0:07:43,396
你可以看到

224
00:07:43,396 --> 0:07:44,466
在 JavaScript 中生成它十分容易

225
00:07:45,876 --> 0:07:47,336
这个时间戳

226
00:07:47,336 --> 0:07:49,196
也被用来帮助阻止攻击

227
00:07:50,226 --> 0:07:54,066
重要的是你所做的每一笔交易

228
00:07:54,066 --> 0:07:55,916
将只在该时间戳之后的

229
00:07:56,026 --> 0:07:57,036
24 小时内被接受

230
00:07:57,496 --> 0:07:58,196
所以你不应该

231
00:07:58,196 --> 0:07:59,956
提前一周产生这些签名

232
00:08:05,046 --> 0:08:06,426
有效载荷的最后一部分

233
00:08:06,426 --> 0:08:07,086
是密钥 ID

234
00:08:07,346 --> 0:08:08,416
这个是 App Store Connect

235
00:08:08,416 --> 0:08:09,606
之前生成的密钥 ID

236
00:08:12,116 --> 0:08:13,276
我在这里植入了一个

237
00:08:13,276 --> 0:08:13,896
名为 getKeyID() 的函数

238
00:08:15,136 --> 0:08:16,116
我们要做的就是

239
00:08:16,116 --> 0:08:17,396
返回我们存储在

240
00:08:17,396 --> 0:08:18,916
环境变量中的密钥 ID

241
00:08:18,916 --> 0:08:22,796
我们这样做

242
00:08:22,796 --> 0:08:24,436
而不是将它提交到代码

243
00:08:24,436 --> 0:08:25,426
并将其放入存储库中

244
00:08:25,426 --> 0:08:26,226
是因为这样更安全

245
00:08:27,426 --> 0:08:28,346
暴露更少的弱点

246
00:08:30,266 --> 0:08:31,196
如果你只返回了

247
00:08:31,196 --> 0:08:33,436
一个密钥 ID

248
00:08:33,436 --> 0:08:34,476
但如果你使用多个密钥

249
00:08:34,476 --> 0:08:36,326
这实际上是实现逻辑的

250
00:08:36,326 --> 0:08:37,395
理想位置

251
00:08:38,905 --> 0:08:41,096
或者 如果你确定

252
00:08:41,096 --> 0:08:42,466
你的一个密钥被泄露了

253
00:08:42,466 --> 0:08:44,536
有人未经授权访问了它

254
00:08:44,536 --> 0:08:46,196
你可以在 App Store Connect 中禁用它

255
00:08:46,796 --> 0:08:49,506
你可以生成一个新密钥

256
00:08:49,546 --> 0:08:50,896
只需要切换这里的逻辑

257
00:08:50,896 --> 0:08:52,016
就可以使用这里的新密钥

258
00:08:52,016 --> 0:08:52,896
来签署它们

259
00:08:53,306 --> 0:08:56,756
你甚至不需要推送 App 更新

260
00:08:56,756 --> 0:08:57,596
这样你可以把停运时间降到最低

261
00:08:59,156 --> 0:09:00,536
现在我们已经有了所有

262
00:08:59,156 --> 0:09:00,536
现在我们已经有了所有

263
00:09:00,536 --> 0:09:01,846
要签署的有效载荷

264
00:09:02,796 --> 0:09:03,846
我们想把它们合并成

265
00:09:03,846 --> 0:09:05,966
一个数据块来生成签名

266
00:09:06,546 --> 0:09:09,336
现在你可以看到

267
00:09:09,336 --> 0:09:10,826
我们的方法是

268
00:09:10,986 --> 0:09:12,716
把它们按这个顺序组合成一个字符串

269
00:09:13,776 --> 0:09:16,056
我们使用字符

270
00:09:16,056 --> 0:09:17,376
将它们连接起来

271
00:09:17,376 --> 0:09:19,226
每个字符之间的代码点为“\u2063”

272
00:09:20,176 --> 0:09:21,386
好吧 我明白你们的疑惑

273
00:09:21,386 --> 0:09:22,196
为什么我们不使用空格呢

274
00:09:23,126 --> 0:09:25,406
十分重要的一点是

275
00:09:25,406 --> 0:09:26,896
当你生成

276
00:09:26,896 --> 0:09:27,846
或验证加密签名时

277
00:09:27,846 --> 0:09:29,286
你要非常精确地知道

278
00:09:29,286 --> 0:09:30,536
你使用的是哪个字符

279
00:09:31,096 --> 0:09:31,986
正如你们中的一些人可能知道的

280
00:09:31,986 --> 0:09:33,236
单词空格可以指

281
00:09:33,236 --> 0:09:35,056
多种不同类型的空白字符

282
00:09:35,796 --> 0:09:37,236
所以我们使用这个

283
00:09:40,046 --> 0:09:41,796
现在我们有了有效载荷

284
00:09:41,796 --> 0:09:43,316
下一步是得到密钥本身

285
00:09:44,066 --> 0:09:47,366
我们使用 getKeyStringForID(keyID)

286
00:09:49,386 --> 0:09:50,206
我们要做的就是检查

287
00:09:50,206 --> 0:09:51,736
确保密钥 ID

288
00:09:51,736 --> 0:09:52,926
和我们的期望匹配

289
00:09:52,926 --> 0:09:55,166
然后我们将从另一个环境变量

290
00:09:55,166 --> 0:09:56,416
返回密钥

291
00:09:56,416 --> 0:09:59,636
这里我使用的是

292
00:09:59,636 --> 0:10:00,676
字符串中的密钥

293
00:09:59,636 --> 0:10:00,676
字符串中的密钥

294
00:10:01,196 --> 0:10:03,036
它以 PEM 格式记录

295
00:10:04,046 --> 0:10:05,236
这是一个十分常见的格式

296
00:10:05,236 --> 0:10:06,166
App Store Connect

297
00:10:06,166 --> 0:10:07,736
会把它发送给你

298
00:10:08,086 --> 0:10:09,396
几乎任何第三方

299
00:10:09,396 --> 0:10:11,266
或第一方的库

300
00:10:11,266 --> 0:10:11,976
都能处理它

301
00:10:17,056 --> 0:10:18,516
我们有了密钥有效载荷

302
00:10:19,036 --> 0:10:19,936
我们准备好签署了

303
00:10:22,246 --> 0:10:23,826
我们在这里做的是

304
00:10:23,886 --> 0:10:25,416
创建一个椭圆曲线

305
00:10:25,416 --> 0:10:27,176
数字签名算法对象

306
00:10:27,176 --> 0:10:28,986
这听起来很神奇

307
00:10:28,986 --> 0:10:29,386
但很容易做到

308
00:10:29,386 --> 0:10:30,436
正如你所看到的

309
00:10:30,436 --> 0:10:32,336
这里只有一行使用了 NodeJS 中的

310
00:10:32,336 --> 0:10:33,786
JavaScript 语言的 ECKey 库代码

311
00:10:35,186 --> 0:10:36,826
其他语言的库

312
00:10:36,826 --> 0:10:37,756
也使它变得非常简单

313
00:10:39,056 --> 0:10:40,256
我们传入密钥字符串

314
00:10:40,256 --> 0:10:41,706
并告诉它 它是 PEM 格式

315
00:10:42,436 --> 0:10:44,776
我们将把这个

316
00:10:44,906 --> 0:10:46,606
cryptoSign 对象作为

317
00:10:46,606 --> 0:10:47,836
NodeJS 的加密库的一部分

318
00:10:48,676 --> 0:10:49,476
我们要告诉它

319
00:10:49,476 --> 0:10:51,196
使用 SHA256 哈希算法

320
00:10:52,236 --> 0:10:53,776
这是你一直应该使用的算法

321
00:10:53,776 --> 0:10:54,736
无论你使用什么库

322
00:10:54,736 --> 0:10:56,676
你都应该确保指定它

323
00:10:59,226 --> 0:11:00,346
接下来 我们把有效负载

324
00:10:59,226 --> 0:11:00,346
接下来 我们把有效负载

325
00:11:00,346 --> 0:11:01,316
添加到这个 cryptoSign 对象

326
00:11:01,636 --> 0:11:02,636
它只是告诉我们

327
00:11:02,636 --> 0:11:04,336
这是我们用来生成签名的东西

328
00:11:07,216 --> 0:11:09,326
最终 生成签名

329
00:11:09,906 --> 0:11:12,236
这里的加密库

330
00:11:12,236 --> 0:11:13,296
在默认情况下

331
00:11:13,296 --> 0:11:15,996
以 DER 格式生成签名

332
00:11:17,096 --> 0:11:18,346
大多数情况都是这样的

333
00:11:18,346 --> 0:11:19,716
但如果你的库默认情况下

334
00:11:19,716 --> 0:11:21,216
不使用这个格式

335
00:11:21,216 --> 0:11:22,036
请确保在这里指定 DER

336
00:11:23,766 --> 0:11:25,186
它不会返回

337
00:11:25,186 --> 0:11:27,666
一大堆原始的加密字节

338
00:11:28,406 --> 0:11:29,696
我们要求它发送一个

339
00:11:29,696 --> 0:11:31,376
Base64 编码的字符串

340
00:11:32,306 --> 0:11:33,216
这使得将数据

341
00:11:33,216 --> 0:11:35,916
从服务器传输到设备

342
00:11:35,916 --> 0:11:37,016
非常容易

343
00:11:37,016 --> 0:11:39,446
这也是 StoreKit 使用的格式

344
00:11:44,346 --> 0:11:45,426
现在我们有了我们的签名

345
00:11:46,876 --> 0:11:49,886
下一步是做一些验证

346
00:11:49,886 --> 0:11:51,626
你不必每次

347
00:11:51,626 --> 0:11:53,606
都进行这种验证

348
00:11:53,606 --> 0:11:55,016
但是当你在自己的服务器上

349
00:11:55,016 --> 0:11:56,916
编写签名生成代码时

350
00:11:57,176 --> 0:11:58,226
这样做确实很有帮助

351
00:11:58,226 --> 0:12:00,886
只是为了确保没有错误

352
00:11:58,226 --> 0:12:00,886
只是为了确保没有错误

353
00:12:00,886 --> 0:12:01,766
或者什么奇怪的事情发生

354
00:12:02,786 --> 0:12:04,436
它的作用是

355
00:12:04,496 --> 0:12:05,906
基于你的私钥

356
00:12:05,906 --> 0:12:07,836
生成一个公钥

357
00:12:07,836 --> 0:12:08,966
然后像 App Store 一样

358
00:12:08,966 --> 0:12:09,516
验证你的签名和有效载荷

359
00:12:11,046 --> 0:12:13,186
最后 剩下的就是将签名

360
00:12:13,186 --> 0:12:15,176
连同我们在这里生成的

361
00:12:15,176 --> 0:12:16,196
这些有效负载片段

362
00:12:16,196 --> 0:12:17,576
包括 密钥 ID  nonce 和时间戳

363
00:12:17,576 --> 0:12:18,976
一起发送回设备

364
00:12:23,326 --> 0:12:24,286
现在你已经设置好服务器

365
00:12:24,286 --> 0:12:25,286
来生成这些签名

366
00:12:25,286 --> 0:12:28,976
下一步就是设置 App

367
00:12:28,976 --> 0:12:32,536
发出请求并发送交易

368
00:12:34,096 --> 0:12:36,076
首先要做的是

369
00:12:36,346 --> 0:12:37,696
获取优惠细节

370
00:12:38,086 --> 0:12:39,016
这些你当然都可在 App Store Connect 中

371
00:12:39,016 --> 0:12:42,766
通过 SKProducts 请求进行设置

372
00:12:45,326 --> 0:12:46,386
我们将添加一些代码

373
00:12:46,386 --> 0:12:47,756
来发送签名请求到服务器

374
00:12:47,756 --> 0:12:48,976
并运行我们刚刚讲过的代码

375
00:12:52,046 --> 0:12:53,066
具体执行时

376
00:12:53,066 --> 0:12:55,166
一个好的策略是

377
00:12:55,166 --> 0:12:56,566
在用户准备购买时

378
00:12:56,566 --> 0:12:57,966
发送签名请求

379
00:12:58,946 --> 0:13:00,536
我们建议你

380
00:12:58,946 --> 0:13:00,536
我们建议你

381
00:13:00,536 --> 0:13:02,406
在展示你的故事线

382
00:13:02,406 --> 0:13:03,356
或向用户展示这个优惠之前

383
00:13:03,356 --> 0:13:04,006
发送签名请求

384
00:13:05,126 --> 0:13:06,236
这样做不仅是因为

385
00:13:06,236 --> 0:13:07,256
24 小时的

386
00:13:07,256 --> 0:13:09,006
时间戳限制

387
00:13:09,006 --> 0:13:09,736
还因为这样你就可以

388
00:13:09,776 --> 0:13:11,136
从自己的服务器中获得最新的业务逻辑

389
00:13:11,926 --> 0:13:13,536
你可能已经换了密钥

390
00:13:13,536 --> 0:13:14,886
或者你有了关于你的用户的

391
00:13:14,886 --> 0:13:16,086
新的资格信息

392
00:13:16,086 --> 0:13:17,296
从而使你决定

393
00:13:17,296 --> 0:13:18,276
是否向其发送优惠信息

394
00:13:18,986 --> 0:13:20,126
你希望所有这些

395
00:13:20,126 --> 0:13:20,976
都是最新的

396
00:13:24,066 --> 0:13:25,176
最后 我们将处理

397
00:13:25,176 --> 0:13:26,546
来自服务器的响应

398
00:13:26,546 --> 0:13:27,976
然后将交易发送到 App Store

399
00:13:32,486 --> 0:13:33,776
当你发出 SKProducts 请求时

400
00:13:33,776 --> 0:13:36,726
你将注意到在每个 SKProduct 上

401
00:13:36,726 --> 0:13:38,226
都有一个用于订阅优惠的新属性

402
00:13:38,626 --> 0:13:39,426
它就是 discounts

403
00:13:40,716 --> 0:13:43,596
这是一个 SKProductDiscount 对象数组

404
00:13:44,976 --> 0:13:46,076
你可能会认出

405
00:13:46,076 --> 0:13:47,606
SKProductDiscount

406
00:13:47,606 --> 0:13:48,646
因为它与我们用于

407
00:13:48,646 --> 0:13:50,006
试用优惠的模型相同

408
00:13:50,006 --> 0:13:50,586
因为它们非常相似

409
00:13:51,146 --> 0:13:53,486
你可以看到

410
00:13:53,486 --> 0:13:56,166
它有价格 订阅时长等信息

411
00:13:57,276 --> 0:13:58,616
但我们还为订阅优惠

412
00:13:58,616 --> 0:13:59,976
添加了两个新属性

413
00:14:02,576 --> 0:14:04,816
其中一个是 identifier

414
00:14:04,816 --> 0:14:06,016
这是你在 App Store Connect 中

415
00:14:06,016 --> 0:14:06,986
添加的产品代码

416
00:14:08,106 --> 0:14:09,756
它是可选的

417
00:14:09,756 --> 0:14:11,226
因为试用优惠并没有标识符

418
00:14:11,226 --> 0:14:12,496
所以它在那里为 nil

419
00:14:12,746 --> 0:14:15,106
但是对于每一个订阅优惠而言

420
00:14:15,106 --> 0:14:20,516
它是存在的 我们添加了一个类型

421
00:14:21,186 --> 0:14:22,206
这是一个数组

422
00:14:22,206 --> 0:14:23,476
它会告诉你

423
00:14:23,636 --> 0:14:24,966
这是一个订阅优惠

424
00:14:24,966 --> 0:14:25,686
还是一个试用优惠

425
00:14:27,166 --> 0:14:28,976
然而 你永远不会在 discounts 数组中

426
00:14:28,976 --> 0:14:29,646
获得试用优惠

427
00:14:30,276 --> 0:14:31,576
那些将只会存在于

428
00:14:31,576 --> 0:14:33,696
SKProduct 的试用价格属性中

429
00:14:38,076 --> 0:14:39,636
这样你已经准备好向用户

430
00:14:39,636 --> 0:14:40,396
展示你的优惠了

431
00:14:40,576 --> 0:14:41,736
第一步是向服务器

432
00:14:41,736 --> 0:14:42,716
发送一个请求

433
00:14:42,776 --> 0:14:43,746
来获取优惠细节

434
00:14:47,056 --> 0:14:48,836
在本例中

435
00:14:49,166 --> 0:14:52,856
我们将传入 App 用户名的哈希版本 

436
00:14:52,856 --> 0:14:54,116
订阅的产品标识符

437
00:14:55,806 --> 0:14:56,716
以及优惠标识符

438
00:14:56,716 --> 0:14:58,676
这里 我们的服务器

439
00:14:58,676 --> 0:15:00,416
已经知道我们使用的是什么 App 套装 ID

440
00:14:58,676 --> 0:15:00,416
已经知道我们使用的是什么 App 套装 ID

441
00:15:01,236 --> 0:15:05,156
它会运行所有我们提及的代码

442
00:15:05,156 --> 0:15:09,296
然后返回一个 nonce 一个时间戳 一个密钥标识符

443
00:15:09,296 --> 0:15:10,616
当然还有

444
00:15:10,616 --> 0:15:13,896
在 Base64 格式字符串中的签名本身

445
00:15:16,056 --> 0:15:18,376
我们不会详细讨论如何发出

446
00:15:18,376 --> 0:15:20,246
安全的 HTTPS 请求和响应

447
00:15:20,326 --> 0:15:21,896
有许多关于这点的资源可供参考

448
00:15:22,526 --> 0:15:23,816
我们将继续

449
00:15:23,816 --> 0:15:24,786
把目光放在 completion() 代码块中

450
00:15:28,226 --> 0:15:30,956
你需要对所有这些信息进行处理

451
00:15:30,956 --> 0:15:33,296
创建这个名为 SKPaymentDiscount 的新类

452
00:15:34,626 --> 0:15:36,746
注意这里是 SKPaymentDiscount

453
00:15:36,746 --> 0:15:37,946
而不是 SKProductDiscount

454
00:15:38,966 --> 0:15:40,436
SKProductDiscount

455
00:15:40,436 --> 0:15:42,196
是我们刚刚提到的

456
00:15:42,196 --> 0:15:43,806
它提供了你在 App Store Connect 中

457
00:15:43,806 --> 0:15:44,566
设置的优惠的详细信息

458
00:15:45,646 --> 0:15:47,796
这个 SKPaymentDiscount 实际上

459
00:15:47,796 --> 0:15:48,856
包含了有效负载

460
00:15:48,856 --> 0:15:49,876
和签名的所有细节

461
00:15:50,266 --> 0:15:52,066
你需要使用它附加到支付上

462
00:15:52,066 --> 0:15:52,976
并发送到 StoreKit

463
00:15:56,276 --> 0:15:57,026
我们在这里创建一个

464
00:15:57,026 --> 0:15:58,646
把这些细节

465
00:15:58,696 --> 0:16:00,076
传递到初始化器

466
00:15:58,696 --> 0:16:00,076
传递到初始化器

467
00:16:00,076 --> 0:16:01,066
然后返回到 completion() 代码块中

468
00:16:01,066 --> 0:16:01,976
这样我们便准备好显示优惠

469
00:16:07,416 --> 0:16:08,866
当顾客轻点购买时

470
00:16:08,866 --> 0:16:10,406
我们将调用这里的

471
00:16:10,406 --> 0:16:11,856
buyProduct 函数

472
00:16:11,856 --> 0:16:16,246
你需要确保订阅本身

473
00:16:16,246 --> 0:16:18,586
具有 SKProduct

474
00:16:18,786 --> 0:16:21,306
用于生成签名的

475
00:16:21,306 --> 0:16:22,126
相同的哈希 App 用户名

476
00:16:22,126 --> 0:16:24,526
以及我们刚刚创建的

477
00:16:24,526 --> 0:16:25,646
SKPaymentDiscount

478
00:16:28,046 --> 0:16:29,876
从这里开始设置就非常简单了

479
00:16:30,606 --> 0:16:32,216
使用该产品

480
00:16:32,496 --> 0:16:33,136
创建一个新的 SKMutablePayment

481
00:16:35,086 --> 0:16:36,396
我们将设置 applicationUsername

482
00:16:39,046 --> 0:16:39,816
然后用 SKPaymentDiscount

483
00:16:39,816 --> 0:16:41,316
设置这个新的

484
00:16:41,316 --> 0:16:42,436
paymentDiscount 属性

485
00:16:44,216 --> 0:16:45,186
就是这样

486
00:16:46,366 --> 0:16:47,336
只需将支付

487
00:16:47,336 --> 0:16:48,456
添加到支付队列中

488
00:16:49,086 --> 0:16:50,086
就像其他 App 内购买项目的设置

489
00:16:55,136 --> 0:16:56,016
除此之外

490
00:16:56,016 --> 0:16:57,586
我们还专门为订阅优惠

491
00:16:57,586 --> 0:16:59,236
新添了 SKErrorCodes

492
00:17:00,886 --> 0:17:02,676
第一个是 invalidOfferIdentifier

493
00:17:03,456 --> 0:17:04,226
正如它的字面意思

494
00:17:04,226 --> 0:17:06,086
如果你试图使用的

495
00:17:06,086 --> 0:17:07,465
优惠标识符丢失

496
00:17:07,806 --> 0:17:08,886
或者你在 App Store Connect 中禁用了它

497
00:17:08,886 --> 0:17:10,705
就会返回这个代码

498
00:17:12,596 --> 0:17:14,626
下一个是 invalidOfferPrice

499
00:17:15,586 --> 0:17:16,925
App Store 实际上

500
00:17:16,925 --> 0:17:18,286
会对现收现付的订阅优惠

501
00:17:18,286 --> 0:17:19,935
进行价格验证

502
00:17:20,556 --> 0:17:21,526
我们想要确保

503
00:17:21,526 --> 0:17:23,415
优惠的价格

504
00:17:23,455 --> 0:17:24,736
比订阅本身的基础价格更低

505
00:17:25,346 --> 0:17:27,455
因为可能会发生这种情况

506
00:17:27,455 --> 0:17:29,116
你设定了一个优惠

507
00:17:29,116 --> 0:17:30,136
然后你又降低了

508
00:17:30,136 --> 0:17:30,806
基础订阅的价格

509
00:17:30,806 --> 0:17:31,856
我们要确保

510
00:17:31,856 --> 0:17:32,826
这确实是一个折扣

511
00:17:35,046 --> 0:17:36,216
然而 App Store 不为

512
00:17:36,216 --> 0:17:37,536
预付费订阅优惠

513
00:17:37,606 --> 0:17:39,296
进行价格验证

514
00:17:40,276 --> 0:17:41,806
原因是我们希望

515
00:17:41,806 --> 0:17:43,906
你能够创建套装

516
00:17:43,906 --> 0:17:45,866
例如 如果你开始运营

517
00:17:45,866 --> 0:17:46,546
一个全新的

518
00:17:46,546 --> 0:17:48,916
基于订阅的游戏

519
00:17:48,916 --> 0:17:50,416
你可能想给一些用户一个优惠

520
00:17:50,416 --> 0:17:53,696
比如三个月的订阅访问

521
00:17:53,696 --> 0:17:56,956
附赠一个额外的传奇装备

522
00:17:56,956 --> 0:17:58,326
或者经验包之类的赠品

523
00:17:58,326 --> 0:17:59,406
相比于仅仅三个月的订阅

524
00:17:59,406 --> 0:17:59,976
提供更多的价值

525
00:18:04,416 --> 0:18:06,416
下一个错误代码是 invalidSignature

526
00:18:08,036 --> 0:18:09,296
如果你发送的签名

527
00:18:09,296 --> 0:18:11,106
不能与你之前告诉我们

528
00:18:11,106 --> 0:18:12,496
你所使用的私钥

529
00:18:12,586 --> 0:18:14,726
或者与你发送的有效载荷

530
00:18:15,136 --> 0:18:17,646
进行验证匹配

531
00:18:17,646 --> 0:18:18,446
这意味着在这两者之间

532
00:18:18,446 --> 0:18:19,396
有什么被更换了

533
00:18:19,396 --> 0:18:19,976
我们将发回这段代码

534
00:18:24,056 --> 0:18:25,506
最后一个是 missingOfferParams

535
00:18:26,246 --> 0:18:28,306
如果你忘记发送

536
00:18:28,376 --> 0:18:29,906
或者你发送一个

537
00:18:29,906 --> 0:18:31,256
空字符串版本的有效载荷

538
00:18:31,256 --> 0:18:32,456
你会收到这段代码

539
00:18:33,696 --> 0:18:34,776
最常见的例子是

540
00:18:34,776 --> 0:18:36,036
忘记在 SKMutablePayment 上

541
00:18:36,036 --> 0:18:37,936
设置 App 用户名

542
00:18:44,186 --> 0:18:45,106
我们刚才看到的这些代码

543
00:18:45,106 --> 0:18:46,466
都可以在网上找到

544
00:18:47,486 --> 0:18:49,146
就像我说的

545
00:18:49,246 --> 0:18:50,816
你现在就可以下载 NodeJS 服务器

546
00:18:50,816 --> 0:18:52,016
并在本地运行

547
00:18:52,216 --> 0:18:53,336
这是一个随时可以运行的 App

548
00:18:54,446 --> 0:18:55,406
我们看到的 Swift 代码

549
00:18:55,406 --> 0:18:58,076
可以在这些文档页面上找到

550
00:18:58,076 --> 0:19:00,086
而且有更多关于它的详细文档

551
00:18:58,076 --> 0:19:00,086
而且有更多关于它的详细文档

552
00:19:00,816 --> 0:19:02,046
另外 如果你有任何问题

553
00:19:02,556 --> 0:19:03,716
请在 3 点后

554
00:19:03,716 --> 0:19:04,646
到我们实验室来

555
00:19:09,046 --> 0:19:11,196
现在我们已经讨论了

556
00:19:11,196 --> 0:19:12,626
如何生成签名

557
00:19:12,816 --> 0:19:13,676
以及如何将交易

558
00:19:13,676 --> 0:19:15,446
发送到 StoreKit

559
00:19:15,446 --> 0:19:17,646
你可能会想

560
00:19:17,646 --> 0:19:18,946
“很好 但是我应该将这些优惠发送给谁呢”

561
00:19:22,216 --> 0:19:24,046
正如我所说

562
00:19:24,046 --> 0:19:27,376
App Store 只执行一条规则

563
00:19:27,376 --> 0:19:28,466
每个想要兑换优惠的用户

564
00:19:28,466 --> 0:19:30,986
必须在该 App 中订阅过

565
00:19:30,986 --> 0:19:34,466
自动续订的订阅服务

566
00:19:34,726 --> 0:19:36,066
这包括了

567
00:19:36,066 --> 0:19:37,026
任何自动续订的订阅

568
00:19:37,336 --> 0:19:38,626
它不一定是

569
00:19:38,626 --> 0:19:39,416
你想要给出优惠的

570
00:19:39,416 --> 0:19:39,976
那个订阅类别

571
00:19:42,046 --> 0:19:43,526
它可以来自任何订阅组

572
00:19:43,586 --> 0:19:45,686
重复一下 并不需要匹配

573
00:19:48,256 --> 0:19:49,886
这既包括当前的订阅用户

574
00:19:49,886 --> 0:19:50,996
也包括那些

575
00:19:50,996 --> 0:19:52,266
已经退出并流失的订阅用户

576
00:19:52,886 --> 0:19:54,076
因此你可以使用优惠

577
00:19:54,076 --> 0:19:55,956
来留住用户 或者重新召回用户

578
00:19:59,516 --> 0:20:00,656
用户从第一个订阅期起

579
00:19:59,516 --> 0:20:00,656
用户从第一个订阅期起

580
00:20:00,656 --> 0:20:02,466
便具有资格

581
00:20:03,696 --> 0:20:05,186
包括他们正处于

582
00:20:05,186 --> 0:20:07,466
一个免费或付费的试用优惠订阅中

583
00:20:11,436 --> 0:20:13,166
记住这一点

584
00:20:13,166 --> 0:20:14,576
用来检查以确保用户

585
00:20:14,576 --> 0:20:15,766
确实符合条件的方法

586
00:20:15,796 --> 0:20:18,286
当然是查看收据

587
00:20:21,046 --> 0:20:22,906
其实很简单

588
00:20:22,906 --> 0:20:23,536
你只需要查看

589
00:20:23,536 --> 0:20:24,166
in_app 数组

590
00:20:24,166 --> 0:20:25,376
或者 latest_receipt_info 数组

591
00:20:25,376 --> 0:20:28,336
如果它可用 并且浏览那里的所有对象

592
00:20:28,806 --> 0:20:34,336
你需要查看每个产品 ID

593
00:20:35,066 --> 0:20:36,846
如果你发现一个产品 ID

594
00:20:36,846 --> 0:20:38,026
是自动更新订阅

595
00:20:38,826 --> 0:20:39,456
那么你就知道

596
00:20:39,456 --> 0:20:40,546
他们已经订阅了

597
00:20:40,576 --> 0:20:42,396
因此他们有资格

598
00:20:42,396 --> 0:20:44,556
兑换该 App 中

599
00:20:44,556 --> 0:20:45,666
任何自动续订订阅的

600
00:20:45,666 --> 0:20:46,696
任何优惠

601
00:20:47,686 --> 0:20:49,916
但这只是 App Store 提出的资格条件

602
00:20:50,506 --> 0:20:51,536
十分简单

603
00:20:52,086 --> 0:20:53,036
我们将更多的决定权交给你

604
00:20:54,146 --> 0:20:55,186
你一定希望

605
00:20:55,186 --> 0:20:56,136
实现自己的业务规则

606
00:20:56,136 --> 0:20:58,246
以确定向哪些客户展示优惠

607
00:20:58,246 --> 0:20:59,926
以及向他们展示哪些优惠

608
00:21:02,046 --> 0:21:03,846
为了给你们一些实用的

609
00:21:03,846 --> 0:21:04,836
关于这个内容的建议和见解

610
00:21:05,536 --> 0:21:06,546
我想请我的同事

611
00:21:06,546 --> 0:21:07,406
Michael 上台

612
00:21:08,516 --> 0:21:11,616
[掌声]

613
00:21:12,116 --> 0:21:12,506
&gt;&gt; 谢谢 Ross

614
00:21:13,016 --> 0:21:15,000
[掌声]

615
00:21:18,476 --> 0:21:19,406
下午好

616
00:21:19,976 --> 0:21:21,346
我是 Michael Gargas

617
00:21:21,346 --> 0:21:22,896
我是 App Store 商业团队的

618
00:21:22,896 --> 0:21:23,926
一名技术支持

619
00:21:24,526 --> 0:21:25,566
今天我很高兴

620
00:21:25,566 --> 0:21:26,656
能和大家一起

621
00:21:27,376 --> 0:21:29,806
使用我们超棒的新功能 

622
00:21:29,806 --> 0:21:31,206
订阅优惠

623
00:21:31,456 --> 0:21:32,626
并讨论用户的资格 分配

624
00:21:32,766 --> 0:21:33,616
和自发流失

625
00:21:36,046 --> 0:21:37,626
作为开发者

626
00:21:37,626 --> 0:21:39,166
你可能会问自己一些

627
00:21:39,166 --> 0:21:40,486
关于 App 中

628
00:21:40,486 --> 0:21:43,516
用户订阅活动的问题

629
00:21:44,276 --> 0:21:45,536
比如

630
00:21:45,536 --> 0:21:47,086
我的大多数用户什么时候会流失

631
00:21:47,776 --> 0:21:48,866
是否已经有用户流失了

632
00:21:49,886 --> 0:21:51,596
或者 为什么用户

633
00:21:51,596 --> 0:21:52,866
可能取消了他们的订阅

634
00:21:54,416 --> 0:21:56,076
正如 Ross 提到的

635
00:21:56,076 --> 0:21:57,926
你可以通过 App 收据

636
00:21:57,926 --> 0:21:59,996
确定订阅优惠的基本资格

637
00:22:00,826 --> 0:22:02,606
在 in_app 数组

638
00:22:02,606 --> 0:22:04,666
和 latest_receipt_info 中

639
00:22:04,726 --> 0:22:05,776
你将获知该订阅用户

640
00:22:05,776 --> 0:22:08,286
或普通用户之前的订阅活动

641
00:22:09,326 --> 0:22:10,706
此外 我们将通过更新的

642
00:22:10,706 --> 0:22:12,486
服务器到服务器通知

643
00:22:12,676 --> 0:22:14,246
提供此信息

644
00:22:16,496 --> 0:22:17,666
但这只是关于

645
00:22:17,666 --> 0:22:20,476
用户所订阅的产品

646
00:22:21,356 --> 0:22:22,986
在 App 收据的内部

647
00:22:22,986 --> 0:22:24,506
我们提供了许多额外的

648
00:22:24,656 --> 0:22:26,806
有价值的用户订阅信息

649
00:22:28,026 --> 0:22:29,106
比如订阅状态

650
00:22:29,106 --> 0:22:31,506
我的用户会在

651
00:22:31,506 --> 0:22:33,026
订阅到期后续订吗

652
00:22:33,896 --> 0:22:36,136
或者我的用户是否处于

653
00:22:36,606 --> 0:22:37,886
付款失败状态

654
00:22:38,086 --> 0:22:39,286
我们还提供了独特标识符

655
00:22:39,316 --> 0:22:41,176
比如原始的交易 ID

656
00:22:41,176 --> 0:22:43,236
和 WEB 订单行项目 ID

657
00:22:43,236 --> 0:22:45,236
以便你为服务器上的

658
00:22:45,236 --> 0:22:46,886
特定的用户

659
00:22:47,136 --> 0:22:49,386
确定特定的订阅

660
00:22:49,896 --> 0:22:53,016
我们提供

661
00:22:53,016 --> 0:22:54,226
该用户的订阅日期

662
00:22:54,226 --> 0:22:55,976
例如当前期间的订阅开始日期

663
00:22:55,976 --> 0:22:57,836
和到期日期

664
00:22:57,836 --> 0:22:59,206
以及之前的所有续订日期

665
00:22:59,746 --> 0:23:02,766
我们提供订阅意图

666
00:22:59,746 --> 0:23:02,766
我们提供订阅意图

667
00:23:02,766 --> 0:23:04,376
让你知道

668
00:23:04,376 --> 0:23:05,236
是否有人取消了订阅

669
00:23:05,236 --> 0:23:06,806
以及他们为什么

670
00:23:06,806 --> 0:23:07,346
要取消订阅

671
00:23:07,696 --> 0:23:09,136
如果他们要求退款

672
00:23:09,516 --> 0:23:10,506
是你的 App 出了问题

673
00:23:10,506 --> 0:23:11,976
还是其他的什么原因

674
00:23:14,356 --> 0:23:15,806
在去年的“Engineering Subscription”会议中

675
00:23:15,806 --> 0:23:17,816
我们讨论了

676
00:23:17,816 --> 0:23:19,496
从 App 收据中

677
00:23:19,496 --> 0:23:21,236
存储额外用户数据的概念

678
00:23:22,046 --> 0:23:23,446
这里我们有一个

679
00:23:23,446 --> 0:23:24,616
查看用户的

680
00:23:24,616 --> 0:23:26,826
订阅到期日期的示例

681
00:23:26,826 --> 0:23:28,586
将其存储在服务器上

682
00:23:28,626 --> 0:23:30,196
并确定该用户不再符合

683
00:23:30,196 --> 0:23:31,826
订阅服务的资格

684
00:23:32,366 --> 0:23:35,566
我们也在此基础上

685
00:23:35,566 --> 0:23:36,736
并讨论了

686
00:23:36,776 --> 0:23:38,226
从 /verifyReceipt 存储

687
00:23:38,226 --> 0:23:39,476
额外的订阅用户状态栏

688
00:23:39,986 --> 0:23:43,226
然后从响应中

689
00:23:43,226 --> 0:23:45,266
解析出特定的栏

690
00:23:45,266 --> 0:23:46,466
比如 autoRenewStatus

691
00:23:49,046 --> 0:23:51,086
此外

692
00:23:51,086 --> 0:23:53,156
我们建议你现在保存

693
00:23:53,156 --> 0:23:56,476
来自服务器到服务器通知的状态更改

694
00:23:56,476 --> 0:23:58,056
因为我们也正在

695
00:23:58,056 --> 0:23:59,106
将统一的 App 收据

696
00:23:59,266 --> 0:24:00,976
包含在这些服务器到服务器通知中

697
00:23:59,266 --> 0:24:00,976
包含在这些服务器到服务器通知中

698
00:24:03,436 --> 0:24:05,206
这是 Apple 提供给你的

699
00:24:05,206 --> 0:24:06,616
关于你的 App 中

700
00:24:06,616 --> 0:24:08,846
订阅用户和普通用户的数据

701
00:24:10,036 --> 0:24:12,756
作为一名开发者

702
00:24:12,756 --> 0:24:14,916
你的 App 中有许多

703
00:24:14,916 --> 0:24:16,606
Apple 没有的

704
00:24:16,606 --> 0:24:18,446
关于用户订阅活动的

705
00:24:18,446 --> 0:24:19,176
附加信息

706
00:24:20,496 --> 0:24:22,276
通过获取这些信息

707
00:24:22,276 --> 0:24:24,516
并将其与

708
00:24:24,516 --> 0:24:25,936
我们在购买或续订行为之后

709
00:24:25,936 --> 0:24:27,726
提供的 JSOJN 数据结合起来

710
00:24:27,726 --> 0:24:30,056
你就可以开始为用户群体

711
00:24:30,576 --> 0:24:32,486
策划特定的优惠

712
00:24:33,486 --> 0:24:35,436
随着时间的推移

713
00:24:35,436 --> 0:24:36,996
你可以使用关键的订阅指标

714
00:24:36,996 --> 0:24:38,896
如转化率 参与度

715
00:24:39,126 --> 0:24:40,796
保留率和客户流失率

716
00:24:41,276 --> 0:24:43,456
来监视这些用户群体

717
00:24:43,816 --> 0:24:45,096
如何对优惠做出响应

718
00:24:45,686 --> 0:24:49,336
为了更直观地了解这一点

719
00:24:49,336 --> 0:24:52,366
让我们看一下服务器上的

720
00:24:52,596 --> 0:24:53,366
一个用户表的示例

721
00:24:56,146 --> 0:24:58,676
这里我们看到

722
00:24:58,676 --> 0:25:00,886
按 userId 和 originalTransactionId 排序的用户

723
00:24:58,676 --> 0:25:00,886
按 userId 和 originalTransactionId 排序的用户

724
00:25:00,886 --> 0:25:02,906
originalTransactionId 是特定用户的

725
00:25:02,906 --> 0:25:04,616
任何订阅购买的

726
00:25:04,616 --> 0:25:06,066
父特定标识符

727
00:25:06,606 --> 0:25:09,426
正如我们所说

728
00:25:09,426 --> 0:25:11,726
你可以开始在 App 收据中

729
00:25:11,726 --> 0:25:13,396
添加额外的用户信息

730
00:25:13,396 --> 0:25:15,256
比如用户的

731
00:25:15,396 --> 0:25:17,376
自动续订状态

732
00:25:17,376 --> 0:25:19,066
和账单重试状态

733
00:25:19,836 --> 0:25:21,206
但你不应该止步于此

734
00:25:22,086 --> 0:25:25,356
你可以将其与 App 中

735
00:25:25,356 --> 0:25:27,316
有关用户活动的信息相结合

736
00:25:28,156 --> 0:25:29,506
这里我们有一个

737
00:25:29,506 --> 0:25:30,476
contentConsumed 的例子

738
00:25:31,466 --> 0:25:32,676
contentConsumed 可以是观看视频

739
00:25:33,036 --> 0:25:36,326
阅读文章 保存故事等等

740
00:25:39,076 --> 0:25:39,846
通过查看这些信息

741
00:25:39,846 --> 0:25:41,336
我们能够确定

742
00:25:41,336 --> 0:25:42,926
哪些用户

743
00:25:42,926 --> 0:25:44,646
有资格获得订阅优惠

744
00:25:44,646 --> 0:25:47,756
哪些没有

745
00:25:50,266 --> 0:25:52,386
更进一步

746
00:25:52,386 --> 0:25:53,756
我们可以开始存储额外的信息

747
00:25:53,756 --> 0:25:55,856
比如续订

748
00:25:55,856 --> 0:25:58,156
用户所经历的

749
00:25:58,156 --> 0:25:59,146
账单错误的数量

750
00:25:59,146 --> 0:26:01,186
以及他们是否有资格

751
00:25:59,146 --> 0:26:01,186
以及他们是否有资格

752
00:26:01,186 --> 0:26:03,436
获得特定类型的优惠

753
00:26:04,486 --> 0:26:06,226
正如 Ross 所提到的

754
00:26:06,226 --> 0:26:08,146
每个订阅队列

755
00:26:08,466 --> 0:26:09,516
最多可以有 10 个订阅优惠

756
00:26:10,336 --> 0:26:11,496
这将允许你最多创建

757
00:26:11,496 --> 0:26:12,806
10 个不同的

758
00:26:12,806 --> 0:26:15,126
用户群体来标识

759
00:26:15,126 --> 0:26:16,606
和分配订阅优惠

760
00:26:17,176 --> 0:26:20,066
如果我们看一下

761
00:26:20,066 --> 0:26:22,186
服务器上的三个示例用户

762
00:26:22,186 --> 0:26:25,916
你将看到

763
00:26:25,916 --> 0:26:27,086
根据他们的订阅活动

764
00:26:27,836 --> 0:26:30,166
当用户在免费试用期间

765
00:26:30,166 --> 0:26:32,996
禁用了自动续订功能

766
00:26:33,186 --> 0:26:34,596
且订阅到期后并未续订时

767
00:26:34,596 --> 0:26:36,236
我们已经能够

768
00:26:36,466 --> 0:26:37,276
使他们有资格获得

769
00:26:37,276 --> 0:26:37,816
诸如回归奖励之类的优惠

770
00:26:38,396 --> 0:26:42,446
或者一个保留优惠

771
00:26:42,446 --> 0:26:43,926
指的是当前已订阅

772
00:26:43,926 --> 0:26:45,526
但已禁用自动续订功能的用户

773
00:26:45,526 --> 0:26:46,756
你希望向他们展示保留优惠

774
00:26:46,756 --> 0:26:48,196
以便让他们

775
00:26:48,196 --> 0:26:49,786
继续订阅你的服务

776
00:26:50,316 --> 0:26:53,806
还可以提供升级优惠

777
00:26:54,306 --> 0:26:55,466
找到那些在较低订阅级别上

778
00:26:55,466 --> 0:26:57,306
如按月订阅

779
00:26:57,306 --> 0:26:58,826
有连续续订的用户

780
00:26:58,826 --> 0:27:00,906
然后向他们

781
00:26:58,826 --> 0:27:00,906
然后向他们

782
00:27:00,906 --> 0:27:02,106
提供订阅优惠

783
00:27:02,336 --> 0:27:03,806
激励他们升级到

784
00:27:03,806 --> 0:27:04,266
比如年度订阅的高级订阅级别

785
00:27:05,126 --> 0:27:08,316
这将通过

786
00:27:08,316 --> 0:27:09,946
更多的信息

787
00:27:09,946 --> 0:27:11,436
确定用户资格

788
00:27:11,436 --> 0:27:13,016
而不仅仅是查看用户

789
00:27:13,016 --> 0:27:14,826
之前是否在我的 App 中

790
00:27:14,826 --> 0:27:16,276
订阅了我的订阅产品

791
00:27:17,566 --> 0:27:19,126
在你构建了

792
00:27:19,126 --> 0:27:21,196
这个详细的用户资格之后

793
00:27:21,196 --> 0:27:22,706
下一步就是

794
00:27:22,706 --> 0:27:23,676
分配你的订阅优惠

795
00:27:25,146 --> 0:27:26,726
让我们来看看订阅优惠

796
00:27:26,726 --> 0:27:28,826
可能采取的方式

797
00:27:29,956 --> 0:27:31,686
首先 正如我们所讨论的

798
00:27:31,686 --> 0:27:33,856
你需要确定哪些用户

799
00:27:33,856 --> 0:27:35,356
或用户群体

800
00:27:35,356 --> 0:27:37,006
有资格获得订阅优惠

801
00:27:37,806 --> 0:27:38,886
然后你可以和这些用户互动

802
00:27:38,886 --> 0:27:40,816
从 App Store 中

803
00:27:40,816 --> 0:27:42,176
获取信息

804
00:27:42,516 --> 0:27:43,896
并呈现给你的用户

805
00:27:45,116 --> 0:27:47,056
此时 用户将有希望

806
00:27:47,056 --> 0:27:48,416
进行购买

807
00:27:48,416 --> 0:27:49,846
并兑换订阅优惠

808
00:27:50,396 --> 0:27:52,566
如果我们回到我们的标识

809
00:27:52,706 --> 0:27:54,366
你可以看到我们标记了

810
00:27:54,366 --> 0:27:55,676
三个不同的用户

811
00:27:55,676 --> 0:27:57,366
他们有资格获得三种

812
00:27:57,366 --> 0:27:59,176
不同类型的订阅优惠

813
00:28:01,116 --> 0:28:02,716
那么你在哪里

814
00:28:02,716 --> 0:28:03,356
展示这些信息呢

815
00:28:04,076 --> 0:28:07,546
如果用户仍在

816
00:28:07,546 --> 0:28:08,896
使用你的 App

817
00:28:09,006 --> 0:28:10,736
但处于未订阅状态

818
00:28:11,036 --> 0:28:12,406
你可以通过 App 内发送信息

819
00:28:12,406 --> 0:28:13,886
或本地通知

820
00:28:13,886 --> 0:28:15,916
将订阅优惠

821
00:28:15,916 --> 0:28:18,036
直接展示给用户

822
00:28:19,276 --> 0:28:20,536
重要的是要理解

823
00:28:20,536 --> 0:28:22,316
你的 App 应该

824
00:28:22,316 --> 0:28:25,136
能为所有消费提供相应的价值

825
00:28:25,996 --> 0:28:27,366
当你鼓励用户

826
00:28:27,366 --> 0:28:29,166
消费某个优惠时

827
00:28:29,166 --> 0:28:30,926
你要仔细考虑这种推销

828
00:28:30,926 --> 0:28:32,686
并确保你

829
00:28:32,686 --> 0:28:33,886
清楚地陈述了

830
00:28:33,886 --> 0:28:35,606
这个订阅优惠的价值定位

831
00:28:35,606 --> 0:28:37,206
以及拟定

832
00:28:37,206 --> 0:28:38,136
用户认可的条款

833
00:28:39,256 --> 0:28:40,876
和往常一样

834
00:28:40,876 --> 0:28:42,126
你需要确保

835
00:28:42,126 --> 0:28:43,576
你遵守了最新的

836
00:28:43,716 --> 0:28:44,656
关于订阅的 App 审查指南

837
00:28:45,746 --> 0:28:47,156
这是基于用户

838
00:28:47,156 --> 0:28:49,046
仍然在使用你的 App 的情况

839
00:28:50,446 --> 0:28:51,756
如果用户不再启动 App

840
00:28:51,756 --> 0:28:52,776
又该如何呢

841
00:28:53,736 --> 0:28:55,086
这对于订阅优惠而言

842
00:28:55,086 --> 0:28:55,896
又有什么不同呢

843
00:28:58,266 --> 0:28:58,916
这里我们可以

844
00:28:58,916 --> 0:29:00,996
看到标识阶段

845
00:28:58,916 --> 0:29:00,996
看到标识阶段

846
00:29:00,996 --> 0:29:02,176
但是我们还需要了解

847
00:29:02,176 --> 0:29:03,676
在你的 App 之外

848
00:29:03,676 --> 0:29:06,446
推广订阅优惠的能力

849
00:29:07,086 --> 0:29:11,016
你需要

850
00:29:11,016 --> 0:29:12,426
在 App Store

851
00:29:12,426 --> 0:29:14,236
或者说 在 App 之外

852
00:29:14,236 --> 0:29:16,066
展示这些订阅优惠

853
00:29:16,066 --> 0:29:17,446
从而吸引这些老用户

854
00:29:20,046 --> 0:29:21,406
现在 让我们来谈谈

855
00:29:21,406 --> 0:29:23,896
在你的 App 之外展示优惠

856
00:29:25,116 --> 0:29:26,716
你可以使用

857
00:29:26,716 --> 0:29:28,426
现有的外部通道

858
00:29:28,516 --> 0:29:29,246
来分发对订阅优惠操作的调用

859
00:29:31,046 --> 0:29:32,686
比如 你已经采用了

860
00:29:32,686 --> 0:29:34,276
付费广告或电子邮件营销

861
00:29:35,396 --> 0:29:38,046
然后使用通用链接

862
00:29:38,646 --> 0:29:43,316
将用户从这些外部通道引导回 App

863
00:29:43,316 --> 0:29:46,456
并识别 他们可能接收到

864
00:29:46,516 --> 0:29:47,836
哪些订阅优惠

865
00:29:50,186 --> 0:29:51,126
有关通用链接的

866
00:29:51,126 --> 0:29:52,676
更多信息

867
00:29:52,676 --> 0:29:54,056
我强烈建议你查看

868
00:29:54,056 --> 0:29:55,606
“What's New in Universal Links” 的会议

869
00:29:55,676 --> 0:29:57,586
你可在今年的

870
00:29:57,646 --> 0:29:59,806
WWDC App 中获得会议内容

871
00:30:04,046 --> 0:30:04,736
我们现在已经讨论了

872
00:30:04,736 --> 0:30:06,306
确定用户资格

873
00:30:06,966 --> 0:30:07,896
以及在 App 内部

874
00:30:07,896 --> 0:30:09,276
或者通过现有的外部渠道

875
00:30:09,276 --> 0:30:12,826
向那些符合资格的用户

876
00:30:12,826 --> 0:30:14,776
推广订阅优惠

877
00:30:16,336 --> 0:30:19,806
接下来让我们谈谈一些

878
00:30:19,806 --> 0:30:21,026
可以利用在订阅优惠上的策略

879
00:30:21,026 --> 0:30:23,366
帮助我们减少用户流失

880
00:30:27,296 --> 0:30:28,626
在去年的“Engineering Subscription”中

881
00:30:28,626 --> 0:30:30,306
我们谈到了

882
00:30:30,306 --> 0:30:32,576
用户自主流失

883
00:30:32,576 --> 0:30:33,726
即用户在订阅期间

884
00:30:33,726 --> 0:30:36,406
主动取消订阅的行为

885
00:30:37,546 --> 0:30:39,016
自主流失指的是

886
00:30:39,016 --> 0:30:40,246
用户选择

887
00:30:40,246 --> 0:30:41,066
离开你的订阅产品

888
00:30:41,676 --> 0:30:43,166
这与非自主流失有所不同

889
00:30:43,166 --> 0:30:44,926
后者指的是用户没有做出任何选择

890
00:30:45,176 --> 0:30:46,896
只是账单问题导致的流失

891
00:30:48,336 --> 0:30:51,996
去年 我们给了你一些策略

892
00:30:52,166 --> 0:30:53,246
比如向那些自主流失的用户

893
00:30:53,246 --> 0:30:55,786
提供其他可选的订阅产品

894
00:30:56,446 --> 0:30:59,046
但这不是赢回客户的好方法

895
00:30:59,736 --> 0:31:02,156
今年 我们将给出如下的建议

896
00:30:59,736 --> 0:31:02,156
今年 我们将给出如下的建议

897
00:31:03,266 --> 0:31:05,006
我们希望你

898
00:31:05,006 --> 0:31:06,616
使用来自 App 收据的数据

899
00:31:06,986 --> 0:31:08,506
以及你所拥有的

900
00:31:08,716 --> 0:31:10,256
关于订阅用户

901
00:31:10,576 --> 0:31:11,916
如何在 App 中消费内容的信息

902
00:31:11,916 --> 0:31:14,566
来分析你的用户订阅行为

903
00:31:15,316 --> 0:31:16,506
我们想让你

904
00:31:16,506 --> 0:31:17,866
使用这些信息

905
00:31:17,866 --> 0:31:19,916
并确定特定的用户群体

906
00:31:20,576 --> 0:31:23,646
然后把你的订阅优惠

907
00:31:23,646 --> 0:31:26,406
最好是匹配的订阅优惠

908
00:31:26,406 --> 0:31:27,586
分配给

909
00:31:27,926 --> 0:31:29,526
不同的用户群体

910
00:31:30,886 --> 0:31:34,036
在谈到订阅优惠时

911
00:31:34,356 --> 0:31:36,916
我们通常只考虑

912
00:31:36,916 --> 0:31:37,836
赢回未订阅的用户

913
00:31:38,866 --> 0:31:41,196
但我们想

914
00:31:41,196 --> 0:31:43,246
在此基础上再扩展一下

915
00:31:43,246 --> 0:31:44,496
讨论另外五种

916
00:31:44,496 --> 0:31:45,846
为你的订阅用户

917
00:31:46,106 --> 0:31:47,006
展示订阅优惠的方式

918
00:31:47,656 --> 0:31:49,926
你可以利用订阅优惠

919
00:31:49,926 --> 0:31:51,416
来进行用户保留营销

920
00:31:52,346 --> 0:31:54,326
当你看到

921
00:31:54,526 --> 0:31:56,106
用户在订阅到期后

922
00:31:56,106 --> 0:31:57,736
选择不再续订时

923
00:31:57,736 --> 0:31:59,126
你可以尝试通过订阅优惠

924
00:31:59,126 --> 0:31:59,886
来留住该客户

925
00:32:01,326 --> 0:32:02,846
如果你掌握的信息

926
00:32:02,846 --> 0:32:03,946
使你相信在某个时间点

927
00:32:03,946 --> 0:32:05,766
这个用户可能会流失

928
00:32:05,766 --> 0:32:08,176
那么你可以为他们提供一个挽留优惠

929
00:32:08,176 --> 0:32:10,126
实质上是预测

930
00:32:10,126 --> 0:32:11,906
用户可能会

931
00:32:11,986 --> 0:32:13,066
从 App 中流失

932
00:32:13,616 --> 0:32:15,796
你可以在 App 收据中

933
00:32:15,796 --> 0:32:17,026
查看用户的订阅活动

934
00:32:17,026 --> 0:32:18,036
和他们当前

935
00:32:18,036 --> 0:32:19,446
订阅的产品

936
00:32:19,876 --> 0:32:21,306
你可以提供订阅优惠

937
00:32:21,306 --> 0:32:23,086
从而在订阅组中

938
00:32:23,086 --> 0:32:25,346
升级或降级该用户

939
00:32:25,646 --> 0:32:29,786
此外 你还可以使用订阅优惠

940
00:32:29,826 --> 0:32:31,206
来安抚可能在 App 中

941
00:32:31,206 --> 0:32:33,066
体验不佳的用户

942
00:32:34,376 --> 0:32:36,736
你也可以使用订阅优惠

943
00:32:36,736 --> 0:32:38,106
来奖励你最忠实的订阅用户

944
00:32:38,106 --> 0:32:41,596
让我们来逐个探讨

945
00:32:41,596 --> 0:32:43,596
并展示如何

946
00:32:43,596 --> 0:32:44,546
在 App 中

947
00:32:44,546 --> 0:32:46,826
向用户展示这些订阅优惠

948
00:32:48,236 --> 0:32:50,406
首先 让我们看一个

949
00:32:50,406 --> 0:32:51,306
赢回用户的例子

950
00:32:52,246 --> 0:32:53,796
这里我们有一位

951
00:32:54,216 --> 0:32:57,146
在 26 日购买订阅的用户

952
00:32:58,236 --> 0:32:59,536
但是在订阅期间中

953
00:33:00,406 --> 0:33:02,776
该用户选择取消

954
00:33:03,516 --> 0:33:04,526
他们致电 Apple Care

955
00:33:04,526 --> 0:33:05,656
并阐述对服务不满意

956
00:33:05,656 --> 0:33:08,276
想要取消订阅并退款

957
00:33:08,736 --> 0:33:10,786
正如我们在今天早些时候

958
00:33:10,786 --> 0:33:12,716
与你谈论到的

959
00:33:12,716 --> 0:33:13,856
我们通过

960
00:33:13,856 --> 0:33:16,066
带有取消日期等栏的收据

961
00:33:16,066 --> 0:33:17,396
让你知道这一信息

962
00:33:17,396 --> 0:33:18,976
以便你立即知道

963
00:33:18,976 --> 0:33:20,296
退款 取消发生的时间

964
00:33:21,246 --> 0:33:23,256
以及取消原因

965
00:33:23,256 --> 0:33:24,906
这样你就能知道

966
00:33:24,906 --> 0:33:27,126
是因为 App 本身还是其他原因

967
00:33:27,666 --> 0:33:30,086
我们还通过更新的

968
00:33:30,086 --> 0:33:31,316
服务器到服务器通知

969
00:33:31,316 --> 0:33:32,896
发送这些信息

970
00:33:32,896 --> 0:33:34,666
以便你能够实时了解

971
00:33:34,666 --> 0:33:36,426
订阅用户

972
00:33:36,426 --> 0:33:37,756
和普通用户的动态

973
00:33:38,306 --> 0:33:40,386
让他们知道

974
00:33:40,386 --> 0:33:41,376
他们有其他的

975
00:33:41,376 --> 0:33:42,446
订阅优惠选项

976
00:33:42,856 --> 0:33:45,516
我们进一步考虑这个问题

977
00:33:45,516 --> 0:33:47,086
我们希望从收据

978
00:33:47,086 --> 0:33:49,316
或者服务器到服务器的通知中

979
00:33:49,316 --> 0:33:51,466
获取信息

980
00:33:51,466 --> 0:33:53,596
比如自动续订状态

981
00:33:53,596 --> 0:33:55,386
过期意图 等等

982
00:33:55,386 --> 0:33:57,976
我们想把它存储在服务器上

983
00:33:59,556 --> 0:34:01,746
标记那些

984
00:33:59,556 --> 0:34:01,746
标记那些

985
00:34:01,746 --> 0:34:03,136
可享受回归优惠的用户

986
00:34:03,836 --> 0:34:04,856
这是向你的用户

987
00:34:04,856 --> 0:34:06,886
展示订阅优惠的信号

988
00:34:11,056 --> 0:34:14,946
例如 在这里你可以看到一个

989
00:34:15,335 --> 0:34:16,476
“再一次与我们同行”的标语

990
00:34:16,505 --> 0:34:17,896
展示给一个可能已经流失的用户

991
00:34:17,896 --> 0:34:19,585
作为开发者的你现在

992
00:34:19,585 --> 0:34:20,686
正试图重新赢得这个用户

993
00:34:23,246 --> 0:34:25,005
我们还有一个

994
00:34:25,005 --> 0:34:26,616
来自《iTranslate》App 的开发者的示例

995
00:34:26,616 --> 0:34:28,016
他利用订阅优惠为用户提供了

996
00:34:28,016 --> 0:34:30,126
免费续订一个月的优惠

997
00:34:31,326 --> 0:34:32,795
这些都是订阅优惠

998
00:34:32,966 --> 0:34:33,956
这项全新特性的优秀应用实例

999
00:34:38,065 --> 0:34:39,025
现在让我们讨论一下保留用户

1000
00:34:39,626 --> 0:34:42,156
保留当前 仍在订阅你的 App 的

1001
00:34:42,156 --> 0:34:43,896
订阅用户的行为

1002
00:34:45,016 --> 0:34:46,485
这里我们看到一个用户

1003
00:34:46,545 --> 0:34:47,545
已经购买了他们的订阅

1004
00:34:48,806 --> 0:34:50,646
然而在订阅期间

1005
00:34:50,646 --> 0:34:52,626
他们选择来到

1006
00:34:52,706 --> 0:34:53,536
Apple 的“管理订阅”界面

1007
00:34:53,536 --> 0:34:56,666
并取消了订阅

1008
00:34:59,386 --> 0:35:00,836
我们更新了

1009
00:34:59,386 --> 0:35:00,836
我们更新了

1010
00:35:00,836 --> 0:35:02,166
服务器到服务器的通知

1011
00:35:02,556 --> 0:35:03,876
你可以通过

1012
00:35:04,096 --> 0:35:05,546
与 Apple 重新验证收据

1013
00:35:05,546 --> 0:35:07,526
并确认“auto_renew_status”的值

1014
00:35:07,526 --> 0:35:08,996
已从 1 更改为 0

1015
00:35:08,996 --> 0:35:10,446
来找到此信息

1016
00:35:11,126 --> 0:35:12,556
这是你的用户

1017
00:35:12,556 --> 0:35:14,326
将不会在订阅到期后

1018
00:35:14,326 --> 0:35:15,666
继续订阅的信号

1019
00:35:16,206 --> 0:35:20,306
但如果你发布了订阅优惠

1020
00:35:20,306 --> 0:35:21,616
我们将发送一个状态

1021
00:35:21,616 --> 0:35:23,016
或服务器到服务器的通知

1022
00:35:23,446 --> 0:35:24,776
让你知道

1023
00:35:24,776 --> 0:35:26,406
该用户将不再续订

1024
00:35:27,136 --> 0:35:28,776
当用户禁用续订状态

1025
00:35:28,776 --> 0:35:30,266
和启用续订状态时

1026
00:35:30,266 --> 0:35:32,246
我们都会

1027
00:35:32,246 --> 0:35:33,556
发送此消息

1028
00:35:36,046 --> 0:35:37,276
这将告诉你

1029
00:35:37,276 --> 0:35:38,176
应该让他们知道

1030
00:35:38,176 --> 0:35:41,016
他们还不应该离开

1031
00:35:41,016 --> 0:35:42,216
并期待接下来你的订阅产品

1032
00:35:42,216 --> 0:35:43,326
会提供什么新功能

1033
00:35:43,716 --> 0:35:46,566
如果我们回顾数据库中的

1034
00:35:47,006 --> 0:35:48,056
用户的例子

1035
00:35:48,056 --> 0:35:49,716
你可以看到

1036
00:35:50,166 --> 0:35:51,966
我们已经更新了

1037
00:35:51,966 --> 0:35:53,756
用于保留优惠的栏

1038
00:35:54,416 --> 0:35:55,466
当这个用户

1039
00:35:55,466 --> 0:35:56,586
返回到 App

1040
00:35:56,586 --> 0:35:58,646
无论是被你的营销激励

1041
00:35:58,646 --> 0:36:01,956
还是仅仅出于使用的目的

1042
00:35:58,646 --> 0:36:01,956
还是仅仅出于使用的目的

1043
00:36:01,956 --> 0:36:02,856
都可以向他们展示订阅优惠

1044
00:36:02,856 --> 0:36:04,846
并让他们知道

1045
00:36:04,846 --> 0:36:06,086
现在是订阅的好时候

1046
00:36:07,186 --> 0:36:08,396
“请再一次与我们同行 

1047
00:36:08,826 --> 0:36:09,786
我们注意到你下个月

1048
00:36:09,786 --> 0:36:11,446
将会离开我们了”

1049
00:36:11,996 --> 0:36:13,636
这是一个很棒的标语

1050
00:36:13,936 --> 0:36:15,846
能够赢回和保留用户

1051
00:36:15,846 --> 0:36:17,206
继续订阅你的 App

1052
00:36:18,676 --> 0:36:20,206
我们还有一个

1053
00:36:20,206 --> 0:36:22,066
来自《Ultimate Guitar》的例子

1054
00:36:22,066 --> 0:36:23,896
提供一个月的免费订阅和 50% 的折扣

1055
00:36:23,896 --> 0:36:25,796
让用户知道

1056
00:36:25,796 --> 0:36:26,726
这个优惠仅限今日

1057
00:36:30,286 --> 0:36:31,136
那么这就是用户保留

1058
00:36:32,626 --> 0:36:35,126
让我们看一个升级示例

1059
00:36:35,956 --> 0:36:38,046
在这里

1060
00:36:38,046 --> 0:36:39,826
我们看到一个订阅用户

1061
00:36:39,826 --> 0:36:41,316
选择在 4 月 1 日降级他们的订阅

1062
00:36:41,796 --> 0:36:44,286
你已经知道

1063
00:36:44,286 --> 0:36:46,216
我们将在收据中显示即将更新的产品

1064
00:36:47,586 --> 0:36:48,986
你可以选择从响应中

1065
00:36:48,986 --> 0:36:51,266
解析它并将其存储在服务器中

1066
00:36:52,486 --> 0:36:54,036
我们还向你发送

1067
00:36:54,036 --> 0:36:55,406
服务器到服务器的通知

1068
00:36:55,806 --> 0:36:56,916
为了让你知道

1069
00:36:56,916 --> 0:36:58,456
该用户已选择

1070
00:36:58,456 --> 0:36:59,176
降级他的订阅

1071
00:37:03,046 --> 0:37:04,176
如果用户

1072
00:37:04,176 --> 0:37:06,246
选择了另一种产品

1073
00:37:06,246 --> 0:37:07,316
你知道他们一直在消费

1074
00:37:07,316 --> 0:37:08,396
更高级别的服务

1075
00:37:08,926 --> 0:37:09,876
无论是

1076
00:37:09,876 --> 0:37:11,056
享有更高折扣

1077
00:37:11,056 --> 0:37:12,836
和更长订阅时间的

1078
00:37:12,836 --> 0:37:14,236
年度订阅

1079
00:37:14,836 --> 0:37:16,766
还是高级订阅服务

1080
00:37:16,816 --> 0:37:18,286
其能够访问

1081
00:37:18,286 --> 0:37:20,226
低级订阅无权访问的

1082
00:37:20,266 --> 0:37:22,676
这名用户查看过的特定内容

1083
00:37:22,676 --> 0:37:26,596
在本例中

1084
00:37:26,786 --> 0:37:28,426
当你看到用户降级订阅时

1085
00:37:28,426 --> 0:37:29,836
你可以将他们标记为

1086
00:37:29,836 --> 0:37:30,576
有资格获得升级优惠

1087
00:37:31,096 --> 0:37:34,926
当这名用户

1088
00:37:34,926 --> 0:37:37,576
返回到你的 App 时

1089
00:37:37,786 --> 0:37:39,616
利用一个明确且简洁的标语

1090
00:37:39,846 --> 0:37:41,396
展示一个订阅优惠

1091
00:37:41,396 --> 0:37:44,006
说明优惠的内容

1092
00:37:44,236 --> 0:37:45,286
以及他们将

1093
00:37:45,286 --> 0:37:46,426
在这项优惠中获得什么

1094
00:37:47,216 --> 0:37:49,156
我们还有一个

1095
00:37:49,156 --> 0:37:51,466
很棒的《Dashlane》开发者的例子

1096
00:37:51,466 --> 0:37:52,416
他们试图让用户

1097
00:37:52,416 --> 0:37:54,316
再次升级到

1098
00:37:54,316 --> 0:37:55,226
他们的高级服务

1099
00:37:58,116 --> 0:37:59,726
那么这就是升级的例子

1100
00:38:00,266 --> 0:38:03,296
让我们来讨论一下用户服务

1101
00:38:06,046 --> 0:38:07,186
我们都在尽我们最大的努力

1102
00:38:07,256 --> 0:38:08,956
制作完美的软件

1103
00:38:08,956 --> 0:38:10,186
但是很明显 有些时候用户可能会

1104
00:38:10,186 --> 0:38:12,666
在你的订阅产品中

1105
00:38:12,666 --> 0:38:14,156
遇到问题 故障

1106
00:38:14,156 --> 0:38:15,486
某种类型的错误或者停机

1107
00:38:16,756 --> 0:38:18,546
这个用户可能决定

1108
00:38:18,546 --> 0:38:19,346
通过你的支持渠道

1109
00:38:19,346 --> 0:38:20,806
与你联系

1110
00:38:20,806 --> 0:38:22,816
并让你知道他们的使用体验并不理想

1111
00:38:23,316 --> 0:38:26,686
如果我们在你的服务器上

1112
00:38:26,686 --> 0:38:29,486
回顾用户表

1113
00:38:29,486 --> 0:38:30,936
如果你的用户服务代理

1114
00:38:30,936 --> 0:38:32,656
有能力查找那些特定的用户

1115
00:38:32,706 --> 0:38:34,926
并将他们标识为

1116
00:38:34,926 --> 0:38:36,966
有资格享受优惠

1117
00:38:36,966 --> 0:38:38,796
你的代理就可以指示

1118
00:38:38,796 --> 0:38:40,626
那个用户重新启动 App

1119
00:38:40,626 --> 0:38:41,706
因为他们现在有资格享受优惠

1120
00:38:43,006 --> 0:38:45,646
你可能希望

1121
00:38:45,646 --> 0:38:46,946
在设置界面上

1122
00:38:46,946 --> 0:38:48,196
显示订阅优惠

1123
00:38:49,046 --> 0:38:51,486
在这里 我们看到了一个

1124
00:38:51,486 --> 0:38:53,616
免费续订一个月的优惠

1125
00:38:53,736 --> 0:38:55,076
并为用户可能经历的

1126
00:38:55,076 --> 0:38:56,856
任何服务中断道歉

1127
00:38:58,196 --> 0:39:00,186
当用户使用 App 时

1128
00:38:58,196 --> 0:39:00,186
当用户使用 App 时

1129
00:39:00,186 --> 0:39:02,566
他将看到一个订阅优惠

1130
00:39:03,316 --> 0:39:05,126
和一个明确且简洁的标语

1131
00:39:06,186 --> 0:39:07,316
这是让你的用户

1132
00:39:07,316 --> 0:39:09,766
满意的好方法

1133
00:39:10,046 --> 0:39:11,186
并且可以安抚任何在你的 App 中

1134
00:39:11,186 --> 0:39:11,906
有过糟糕使用体验的用户

1135
00:39:16,046 --> 0:39:17,396
你还可以使用订阅优惠

1136
00:39:17,396 --> 0:39:20,276
来奖励你最忠实的订阅用户

1137
00:39:20,786 --> 0:39:24,436
在这里

1138
00:39:24,436 --> 0:39:25,606
我们看到一个用户

1139
00:39:25,606 --> 0:39:26,626
即将连续地第 11 次续订

1140
00:39:27,416 --> 0:39:28,596
对于开发者来说

1141
00:39:28,596 --> 0:39:30,596
他显然是一个很棒的的订阅用户

1142
00:39:31,236 --> 0:39:32,276
我们希望给予他们一些奖励

1143
00:39:33,196 --> 0:39:35,716
如果我们查看

1144
00:39:35,716 --> 0:39:37,646
服务器上的用户表

1145
00:39:37,646 --> 0:39:39,306
你将看到我们一直在捕捉续订周期

1146
00:39:39,896 --> 0:39:41,616
这是通过存储在

1147
00:39:41,616 --> 0:39:42,896
App 收据中的信息找到的

1148
00:39:45,196 --> 0:39:46,486
如果我们回顾

1149
00:39:46,486 --> 0:39:48,876
用户的时间线

1150
00:39:49,096 --> 0:39:50,636
我们现在可以将该用户

1151
00:39:50,636 --> 0:39:52,646
标记为有资格享受忠诚用户优惠

1152
00:39:52,646 --> 0:39:54,096
因为他们已经越过了一个阈值

1153
00:39:54,126 --> 0:39:56,666
所以我们认为这些用户值得奖励

1154
00:39:57,716 --> 0:39:59,356
在下一次

1155
00:39:59,356 --> 0:40:01,046
使用 App 时

1156
00:39:59,356 --> 0:40:01,046
使用 App 时

1157
00:40:01,046 --> 0:40:02,266
你可以通过

1158
00:40:02,266 --> 0:40:03,956
比如一个月的免费订阅

1159
00:40:03,956 --> 0:40:04,976
来奖励他们的服务和忠诚度

1160
00:40:09,106 --> 0:40:10,466
在这里 我们看到一个

1161
00:40:10,466 --> 0:40:12,526
《Luminary》开发者的例子

1162
00:40:12,576 --> 0:40:14,166
他们奖励早期的高级用户

1163
00:40:14,786 --> 0:40:16,256
如果现在激活

1164
00:40:16,256 --> 0:40:18,656
用户就能享受额外的两个月的服务

1165
00:40:22,536 --> 0:40:25,446
最后让我们谈谈挽留优惠

1166
00:40:26,846 --> 0:40:28,506
挽留优惠

1167
00:40:28,506 --> 0:40:30,466
和保留优惠十分相似

1168
00:40:31,846 --> 0:40:33,866
作为一名开发者

1169
00:40:33,866 --> 0:40:35,506
你可能掌握一些信息

1170
00:40:35,506 --> 0:40:37,926
使你相信这个用户可能会流失

1171
00:40:38,606 --> 0:40:39,966
这指的是

1172
00:40:39,966 --> 0:40:41,996
在用户可能采取行动

1173
00:40:41,996 --> 0:40:43,506
进入“管理订阅”界面

1174
00:40:43,506 --> 0:40:44,506
并取消订阅之前

1175
00:40:46,076 --> 0:40:47,926
如果你发现

1176
00:40:48,116 --> 0:40:49,756
其中一个有流失倾向的用户

1177
00:40:49,756 --> 0:40:51,956
进入到

1178
00:40:52,006 --> 0:40:53,306
你在 App 内部的设置界面中

1179
00:40:53,306 --> 0:40:54,576
安置的的一个深链接

1180
00:40:54,576 --> 0:40:56,836
使得他跳转到

1181
00:40:57,026 --> 0:40:58,476
Apple 的“管理订阅”界面

1182
00:40:58,476 --> 0:41:00,576
你可以在这名用户

1183
00:40:58,476 --> 0:41:00,576
你可以在这名用户

1184
00:41:00,576 --> 0:41:03,776
跳转到 Apple 的

1185
00:41:03,776 --> 0:41:05,436
“管理订阅”界面之前

1186
00:41:05,436 --> 0:41:06,946
向他展示一个订阅优惠

1187
00:41:11,046 --> 0:41:12,276
以上是六个不同的例子

1188
00:41:12,276 --> 0:41:14,126
向你展示了

1189
00:41:14,126 --> 0:41:16,366
如何使用订阅优惠

1190
00:41:16,366 --> 0:41:18,806
来最小化 App 的用户自主流失

1191
00:41:19,506 --> 0:41:21,596
但这仅仅是一个开始

1192
00:41:21,596 --> 0:41:22,956
我非常兴奋地看到

1193
00:41:22,956 --> 0:41:25,006
作为开发者

1194
00:41:25,006 --> 0:41:26,566
你能够提出一些

1195
00:41:26,566 --> 0:41:27,756
非常棒的想法

1196
00:41:27,756 --> 0:41:29,636
为你的 App 中的订阅用户

1197
00:41:29,636 --> 0:41:30,626
提供良好的用户体验

1198
00:41:35,046 --> 0:41:36,546
在订阅优惠

1199
00:41:36,546 --> 0:41:37,766
被分配给用户之后

1200
00:41:38,346 --> 0:41:40,086
下一步是

1201
00:41:40,216 --> 0:41:43,356
分析订阅优惠的性能

1202
00:41:43,926 --> 0:41:47,766
今天 我很高兴地宣布

1203
00:41:47,846 --> 0:41:50,416
我们推出了两个全新的报告仪表盘

1204
00:41:50,416 --> 0:41:51,746
能够帮助你

1205
00:41:51,746 --> 0:41:53,476
分析订阅活动

1206
00:41:53,476 --> 0:41:55,326
订阅状态仪表盘

1207
00:41:55,326 --> 0:41:56,796
和订阅事件仪表盘

1208
00:41:57,306 --> 0:42:00,656
让我们看一看 App Store Connect

1209
00:41:57,306 --> 0:42:00,656
让我们看一看 App Store Connect

1210
00:42:01,706 --> 0:42:03,036
如果你导航到

1211
00:42:03,036 --> 0:42:05,236
销售和趋势模块

1212
00:42:05,236 --> 0:42:06,506
你将看到

1213
00:42:06,506 --> 0:42:07,486
我们推出的订阅状态指示板

1214
00:42:08,276 --> 0:42:09,926
这个仪表盘允许你

1215
00:42:09,926 --> 0:42:11,816
随着时间的推移

1216
00:42:12,186 --> 0:42:13,376
了解你的订阅用户基础

1217
00:42:14,176 --> 0:42:18,056
例如 你将能够在标准价格

1218
00:42:18,056 --> 0:42:20,076
与试用优惠

1219
00:42:20,506 --> 0:42:22,506
或订阅优惠之间比较

1220
00:42:22,506 --> 0:42:23,436
精确地查看有多少订阅用户

1221
00:42:24,956 --> 0:42:26,916
这是一个很好的工具

1222
00:42:26,916 --> 0:42:28,356
帮助你查看和分析

1223
00:42:28,356 --> 0:42:29,466
你的订阅用户在不同时间

1224
00:42:29,466 --> 0:42:29,956
和地区的增长情况

1225
00:42:33,066 --> 0:42:37,836
此外 你还可以使用此仪表盘

1226
00:42:38,146 --> 0:42:39,996
查看 App 中的用户

1227
00:42:39,996 --> 0:42:41,976
正在选择哪些优惠

1228
00:42:46,166 --> 0:42:47,516
我们还启用了

1229
00:42:47,516 --> 0:42:49,226
全新的订阅事件仪表盘

1230
00:42:49,976 --> 0:42:52,316
它允许你

1231
00:42:52,316 --> 0:42:53,416
随时查看

1232
00:42:53,416 --> 0:42:55,006
用户订阅活动

1233
00:42:56,266 --> 0:42:57,596
你可以使用它

1234
00:42:57,596 --> 0:42:58,826
来查看用户如何转换到

1235
00:42:58,826 --> 0:42:59,846
订阅的标准价格

1236
00:42:59,846 --> 0:43:02,156
或者你甚至可以

1237
00:42:59,846 --> 0:43:02,156
或者你甚至可以

1238
00:43:02,156 --> 0:43:03,666
使用它来了解

1239
00:43:03,906 --> 0:43:06,176
新订阅用户

1240
00:43:06,176 --> 0:43:07,166
与回归的订阅用户的比率

1241
00:43:11,046 --> 0:43:12,326
通过应用正确的过滤器

1242
00:43:12,736 --> 0:43:13,776
你还可以使用它

1243
00:43:13,776 --> 0:43:15,556
来具体查看

1244
00:43:15,556 --> 0:43:17,036
特定的订阅优惠

1245
00:43:17,626 --> 0:43:19,456
如何赢回以前未订阅的用户

1246
00:43:19,496 --> 0:43:21,776
然后你可以

1247
00:43:21,776 --> 0:43:23,826
使用这些信息

1248
00:43:23,826 --> 0:43:25,656
通知和优化你的订阅优惠

1249
00:43:25,656 --> 0:43:27,916
并决定在何时分配优惠

1250
00:43:31,046 --> 0:43:33,156
总而言之

1251
00:43:33,156 --> 0:43:35,226
如果你从今天的会议中

1252
00:43:35,226 --> 0:43:36,986
学习到了什么

1253
00:43:36,986 --> 0:43:37,806
我们希望是实现订阅优惠

1254
00:43:38,446 --> 0:43:41,996
但是你必须在 App 内

1255
00:43:41,996 --> 0:43:44,056
和服务器上实现它们

1256
00:43:44,616 --> 0:43:47,426
我们强烈建议你

1257
00:43:47,426 --> 0:43:49,046
执行详细的

1258
00:43:49,046 --> 0:43:49,996
用户资格规则

1259
00:43:50,676 --> 0:43:51,906
通过使用

1260
00:43:51,906 --> 0:43:54,926
来自收据的信息

1261
00:43:54,986 --> 0:43:56,336
我们更新了服务器到服务器的通知

1262
00:43:56,336 --> 0:43:57,776
以便你能够实时了解

1263
00:43:57,776 --> 0:43:59,606
用户活动

1264
00:44:00,146 --> 0:44:03,216
并获得只有开发者能够拥有

1265
00:44:03,216 --> 0:44:05,626
且 Apple 不会拥有的数据

1266
00:44:08,046 --> 0:44:09,356
我们鼓励你向用户提供

1267
00:44:09,446 --> 0:44:11,856
内容定向的订阅优惠

1268
00:44:11,956 --> 0:44:14,636
我们希望你这样做

1269
00:44:14,636 --> 0:44:16,046
以便在 App 中

1270
00:44:16,046 --> 0:44:18,436
提供最佳的用户体验

1271
00:44:18,836 --> 0:44:23,556
最后 在订阅优惠被分发到用户之后

1272
00:44:23,596 --> 0:44:25,216
建议你使用我们的两个

1273
00:44:25,216 --> 0:44:27,106
全新的报告仪表盘

1274
00:44:27,106 --> 0:44:28,896
来监视这些

1275
00:44:28,896 --> 0:44:35,986
订阅优惠的性能 获取更多信息

1276
00:44:35,986 --> 0:44:37,336
欢迎大家

1277
00:44:37,336 --> 0:44:38,496
在演讲之后的下午 3 点

1278
00:44:38,496 --> 0:44:41,146
来到我们的实验室

1279
00:44:41,916 --> 0:44:44,106
感谢今天所有参加

1280
00:44:44,106 --> 0:44:45,336
“订阅优惠”会议的各位

1281
00:44:45,336 --> 0:44:46,766
我真的很期待

1282
00:44:46,766 --> 0:44:48,006
能够看到你们在你们的 App 中

1283
00:44:48,006 --> 0:44:49,256
做出怎样的创新

1284
00:44:49,256 --> 0:44:50,496
为我们共同的用户

1285
00:44:50,496 --> 0:44:51,296
提供优异的使用体验

1286
00:44:51,706 --> 0:44:51,976
谢谢大家

1287
00:44:52,516 --> 0:44:55,500
[掌声]
