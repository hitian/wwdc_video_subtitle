1
00:00:00,506 --> 0:00:04,500
[ Music ]

2
00:00:06,516 --> 0:00:09,500
[ Applause ]

3
00:00:12,366 --> 0:00:13,736
&gt;&gt; Hi. My name is Alex Schaefer,

4
00:00:13,736 --> 0:00:15,036
and I'm an engineer on the iOS

5
00:00:15,036 --> 0:00:15,796
system UI team.

6
00:00:16,015 --> 0:00:17,336
And this is Targeting Content

7
00:00:17,336 --> 0:00:18,306
with Multiple Windows.

8
00:00:18,746 --> 0:00:19,646
To get a sense of the problem

9
00:00:19,646 --> 0:00:21,166
we're going to talk about today,

10
00:00:21,166 --> 0:00:22,266
let's take a quick detour to iOS

11
00:00:22,266 --> 0:00:22,636
12.

12
00:00:24,086 --> 0:00:26,446
In iOS 12, we had a 1-to-1

13
00:00:26,446 --> 0:00:28,066
mapping between your application

14
00:00:28,066 --> 0:00:29,046
and your user interface.

15
00:00:29,756 --> 0:00:30,896
Let's say a notification comes

16
00:00:30,896 --> 0:00:31,500
in.

17
00:00:32,595 --> 0:00:33,726
The user taps on it.

18
00:00:33,726 --> 0:00:35,446
It gets routed to your app, and

19
00:00:35,446 --> 0:00:36,506
your app will update your user

20
00:00:36,506 --> 0:00:37,476
interface in response.

21
00:00:38,126 --> 0:00:38,406
Great.

22
00:00:38,406 --> 0:00:40,036
What could be different?

23
00:00:41,076 --> 0:00:43,326
Well, in iOS 13, you could have

24
00:00:43,326 --> 0:00:44,806
multiple user interfaces running

25
00:00:45,496 --> 0:00:46,576
which raises the question -

26
00:00:48,566 --> 0:00:49,976
Which scene should activate in

27
00:00:49,976 --> 0:00:51,316
response to this notification?

28
00:00:52,266 --> 0:00:52,986
Well, I know what you're all

29
00:00:52,986 --> 0:00:53,336
saying.

30
00:00:54,586 --> 0:00:56,116
Just ask my app.

31
00:00:56,516 --> 0:00:57,306
Well, I guess.

32
00:00:57,406 --> 0:00:58,996
But what if your app isn't

33
00:00:58,996 --> 0:00:59,396
running?

34
00:01:00,146 --> 0:01:01,066
Who cares?

35
00:01:01,066 --> 0:01:01,786
Just launch my app.

36
00:01:02,986 --> 0:01:04,066
Well, hold your horses.

37
00:01:04,906 --> 0:01:06,936
iOS needs to know which scene in

38
00:01:06,936 --> 0:01:07,886
your application should be

39
00:01:07,886 --> 0:01:09,086
frontmost and activated in

40
00:01:09,086 --> 0:01:10,516
response to that launch event,

41
00:01:10,706 --> 0:01:11,996
like that incoming notification.

42
00:01:12,696 --> 0:01:13,636
So, if we're going to background

43
00:01:13,636 --> 0:01:15,716
launch your app and ask for the

44
00:01:15,716 --> 0:01:16,886
appropriate scene, we'd have to

45
00:01:16,886 --> 0:01:17,766
wait until your app is fully

46
00:01:17,766 --> 0:01:19,396
loaded and then wait again until

47
00:01:19,396 --> 0:01:20,136
you could've made that

48
00:01:20,136 --> 0:01:20,966
determination.

49
00:01:21,716 --> 0:01:22,296
This could lead to a

50
00:01:22,296 --> 0:01:23,496
less-than-desirable user

51
00:01:23,496 --> 0:01:24,156
experience.

52
00:01:24,626 --> 0:01:25,616
The system would basically grind

53
00:01:25,616 --> 0:01:26,546
to a halt waiting for that

54
00:01:26,546 --> 0:01:27,076
feedback.

55
00:01:27,076 --> 0:01:28,636
And when I tap a notification, I

56
00:01:28,636 --> 0:01:29,666
expect it to go somewhere

57
00:01:29,666 --> 0:01:30,256
immediately.

58
00:01:31,026 --> 0:01:32,766
So, what could we do about that?

59
00:01:33,806 --> 0:01:35,476
Well, let's take a step back and

60
00:01:35,476 --> 0:01:36,716
let's think about what we have

61
00:01:36,716 --> 0:01:37,796
to work with with the system.

62
00:01:38,176 --> 0:01:40,126
We have your application.

63
00:01:40,416 --> 0:01:42,066
Maybe it's running, maybe it

64
00:01:42,066 --> 0:01:42,446
isn't.

65
00:01:43,136 --> 0:01:46,256
Your app has your scenes and

66
00:01:46,256 --> 0:01:47,576
also the knowledge of the

67
00:01:47,576 --> 0:01:49,016
capabilities of each scene.

68
00:01:49,016 --> 0:01:50,266
That's going to come in handy.

69
00:01:51,266 --> 0:01:53,206
And finally, the system has this

70
00:01:53,206 --> 0:01:54,236
incoming notification.

71
00:01:54,826 --> 0:01:56,066
We've talked about why we can't

72
00:01:56,066 --> 0:01:58,416
rely on activating your app, and

73
00:01:58,416 --> 0:01:59,576
we know that the notification

74
00:01:59,576 --> 0:02:00,926
has to somehow trigger an

75
00:01:59,576 --> 0:02:00,926
has to somehow trigger an

76
00:02:00,926 --> 0:02:01,886
appropriate scene to be

77
00:02:01,886 --> 0:02:02,466
activated.

78
00:02:03,006 --> 0:02:04,446
So, let's try and pull together

79
00:02:04,816 --> 0:02:06,316
a solution, given these

80
00:02:06,316 --> 0:02:06,966
constraints.

81
00:02:08,336 --> 0:02:10,795
First, we need to find a way to

82
00:02:10,795 --> 0:02:11,926
describe what that notification

83
00:02:11,926 --> 0:02:12,626
pertains to.

84
00:02:12,916 --> 0:02:13,926
So, let's add some of the

85
00:02:13,926 --> 0:02:15,406
notification that lets the

86
00:02:15,406 --> 0:02:17,266
system know what it is about.

87
00:02:18,396 --> 0:02:20,036
Then we need to get your scenes

88
00:02:20,036 --> 0:02:21,646
to describe somehow something

89
00:02:21,646 --> 0:02:22,646
about their capabilities.

90
00:02:22,646 --> 0:02:23,556
You know, what kind of content

91
00:02:23,556 --> 0:02:24,166
they can show.

92
00:02:26,796 --> 0:02:28,546
Well, if your scenes are

93
00:02:28,546 --> 0:02:29,506
describing what kind of content

94
00:02:29,506 --> 0:02:30,166
they can work with to the

95
00:02:30,166 --> 0:02:31,896
system, and the notification has

96
00:02:31,896 --> 0:02:33,556
this hint about what it's about,

97
00:02:34,476 --> 0:02:35,656
then we don't really need your

98
00:02:35,656 --> 0:02:35,936
app.

99
00:02:37,096 --> 0:02:38,686
The system is informed enough to

100
00:02:38,686 --> 0:02:40,476
make a selection of a desired

101
00:02:40,476 --> 0:02:41,956
scene to activate in response to

102
00:02:41,956 --> 0:02:42,786
this notification.

103
00:02:46,576 --> 0:02:49,196
So, to think about that and

104
00:02:49,196 --> 0:02:50,416
think about those capabilities,

105
00:02:50,536 --> 0:02:52,656
we need to think about what's,

106
00:02:52,706 --> 0:02:54,006
what those capabilities are.

107
00:02:54,006 --> 0:02:55,096
And those capabilities are

108
00:02:55,096 --> 0:02:56,996
housed within this UIKit class,

109
00:02:56,996 --> 0:02:58,616
UI Scene Activation Conditions.

110
00:02:59,126 --> 0:03:00,366
This is an object attached to

111
00:02:59,126 --> 0:03:00,366
This is an object attached to

112
00:03:00,366 --> 0:03:00,916
UIScene.

113
00:03:01,106 --> 0:03:02,566
And your scene activation

114
00:03:02,566 --> 0:03:03,886
conditions are really just a

115
00:03:03,886 --> 0:03:06,636
couple of NS predicates that set

116
00:03:06,636 --> 0:03:08,196
the course for what specific

117
00:03:08,196 --> 0:03:09,316
scene can activate for it.

118
00:03:10,326 --> 0:03:12,156
Let's dig into the API.

119
00:03:13,996 --> 0:03:15,296
So, your activation condition

120
00:03:15,296 --> 0:03:17,046
consists of two parts, your

121
00:03:17,046 --> 0:03:17,996
canned predicate and your

122
00:03:17,996 --> 0:03:18,926
preferred predicate.

123
00:03:19,356 --> 0:03:21,596
You should think of the canned

124
00:03:21,596 --> 0:03:22,836
predicate as the main predicate

125
00:03:22,836 --> 0:03:23,406
of the two.

126
00:03:23,796 --> 0:03:25,186
This is expressing to the system

127
00:03:25,186 --> 0:03:26,416
what kind of content the scene

128
00:03:26,416 --> 0:03:27,000
can display.

129
00:03:29,766 --> 0:03:31,166
Your prefers predicate is a way

130
00:03:31,166 --> 0:03:32,276
to express to the system that

131
00:03:32,276 --> 0:03:33,426
this scene is especially

132
00:03:33,426 --> 0:03:34,756
interested in a particular type

133
00:03:34,756 --> 0:03:35,346
of content.

134
00:03:35,376 --> 0:03:36,756
You should think of canned as

135
00:03:36,756 --> 0:03:38,256
expressing capability and prefer

136
00:03:38,256 --> 0:03:39,556
is a way to delineate amongst

137
00:03:39,556 --> 0:03:41,456
the capable scenes the content

138
00:03:41,456 --> 0:03:42,466
that should be chosen.

139
00:03:43,266 --> 0:03:44,316
I've told you these predicates

140
00:03:44,316 --> 0:03:45,026
help you define your

141
00:03:45,026 --> 0:03:46,236
capabilities, but I haven't

142
00:03:46,236 --> 0:03:47,806
really gone into detail about

143
00:03:47,806 --> 0:03:49,026
what these predicates operate

144
00:03:49,026 --> 0:03:49,436
on.

145
00:03:51,076 --> 0:03:52,916
These predicates operate on

146
00:03:52,956 --> 0:03:54,796
something called target content

147
00:03:54,796 --> 0:03:55,716
identifiers.

148
00:03:55,766 --> 0:03:57,066
You might be asking yourself

149
00:03:57,066 --> 0:03:57,666
what that is.

150
00:03:58,536 --> 0:03:59,706
Target content identifier is a

151
00:03:59,706 --> 0:04:00,136
string.

152
00:03:59,706 --> 0:04:00,136
string.

153
00:04:00,386 --> 0:04:01,206
It's just the string.

154
00:04:01,576 --> 0:04:02,636
But, it's a little bit more

155
00:04:02,636 --> 0:04:03,706
complicated than that.

156
00:04:03,706 --> 0:04:05,236
A target content identifier is a

157
00:04:05,236 --> 0:04:07,406
structured way to represent data

158
00:04:07,406 --> 0:04:08,116
within your model.

159
00:04:08,366 --> 0:04:09,356
The system's not going to access

160
00:04:09,356 --> 0:04:10,526
your model - that's your job.

161
00:04:10,526 --> 0:04:11,866
But what we're going to use that

162
00:04:11,956 --> 0:04:14,386
for is a way to build off these

163
00:04:14,386 --> 0:04:15,536
scene activation conditions.

164
00:04:16,286 --> 0:04:19,106
iOS 13 is going to use that

165
00:04:19,106 --> 0:04:20,656
target content identifier and

166
00:04:20,656 --> 0:04:22,016
evaluate it against your scene

167
00:04:22,016 --> 0:04:23,836
activation conditions for all

168
00:04:23,836 --> 0:04:25,056
the scenes your application has

169
00:04:25,376 --> 0:04:26,916
and use it that to make the call

170
00:04:26,916 --> 0:04:28,186
on what scene the content should

171
00:04:28,186 --> 0:04:28,846
be targeted to.

172
00:04:30,616 --> 0:04:32,176
Clown Town is our exciting demo

173
00:04:32,176 --> 0:04:33,346
application which answers the

174
00:04:33,346 --> 0:04:35,056
age old question - What would it

175
00:04:35,056 --> 0:04:36,446
be like to order a clown at any

176
00:04:36,446 --> 0:04:37,836
time to my current location?

177
00:04:37,836 --> 0:04:41,656
So, let's take a look at what a

178
00:04:41,656 --> 0:04:43,056
target content identifier might

179
00:04:43,056 --> 0:04:44,196
look like for Clown Town.

180
00:04:44,786 --> 0:04:48,296
So, this looks exactly like a

181
00:04:48,296 --> 0:04:48,496
URL.

182
00:04:48,616 --> 0:04:49,846
In this case, Clown Town is

183
00:04:49,846 --> 0:04:51,326
actually using a universal link.

184
00:04:51,786 --> 0:04:53,616
Like we were saying, target

185
00:04:53,616 --> 0:04:54,406
content identifiers should

186
00:04:54,406 --> 0:04:56,296
ideally express in a structured

187
00:04:56,296 --> 0:04:57,916
format, just like a universal

188
00:04:57,916 --> 0:04:58,646
link or URL.

189
00:04:58,646 --> 0:05:00,686
Many of you are already using a

190
00:04:58,646 --> 0:05:00,686
Many of you are already using a

191
00:05:00,686 --> 0:05:02,296
universal link and that'll be

192
00:05:02,296 --> 0:05:03,366
great here as your target

193
00:05:03,366 --> 0:05:04,226
content identifier.

194
00:05:05,006 --> 0:05:06,396
Let's take a look where in the

195
00:05:06,396 --> 0:05:08,296
SDK target content identifiers

196
00:05:08,296 --> 0:05:10,366
have been added.

197
00:05:10,456 --> 0:05:13,746
First, UNNotification Content.

198
00:05:14,086 --> 0:05:16,216
New in iOS 13, you can actually

199
00:05:16,216 --> 0:05:18,266
augment your JSON payload prior

200
00:05:18,266 --> 0:05:19,276
to sending it off to the Apple

201
00:05:19,276 --> 0:05:21,036
Push notification server with a

202
00:05:21,036 --> 0:05:22,906
new key, Target Content ID.

203
00:05:24,026 --> 0:05:25,066
So, this raises also a very

204
00:05:25,066 --> 0:05:25,476
important point.

205
00:05:25,546 --> 0:05:27,306
You can actually structure this

206
00:05:27,306 --> 0:05:28,856
target content identifier the

207
00:05:29,046 --> 0:05:30,976
same on your back-end server and

208
00:05:31,196 --> 0:05:32,476
actually pinpoint what scene

209
00:05:32,566 --> 0:05:33,876
that notification should open up

210
00:05:34,636 --> 0:05:34,703
in.

211
00:05:35,706 --> 0:05:38,476
Next, UI application shortcut

212
00:05:38,476 --> 0:05:39,606
item has been extended to allow

213
00:05:39,606 --> 0:05:40,726
for using target content

214
00:05:40,726 --> 0:05:41,426
identifiers.

215
00:05:41,926 --> 0:05:43,426
New in iPad OS this year, you

216
00:05:43,426 --> 0:05:44,666
can actually long press on an

217
00:05:44,666 --> 0:05:45,986
icon in the homescreen and get

218
00:05:45,986 --> 0:05:46,976
the same quick actions you've

219
00:05:46,976 --> 0:05:47,876
been using on your iPhone.

220
00:05:48,926 --> 0:05:54,286
And finally, NS user activity.

221
00:05:54,856 --> 0:05:56,036
Use this date restoration as

222
00:05:56,036 --> 0:05:57,216
well as features like handoff

223
00:05:57,476 --> 0:05:58,626
could also be very useful there.

224
00:05:59,956 --> 0:06:01,196
So, let's set up that scene in

225
00:05:59,956 --> 0:06:01,196
So, let's set up that scene in

226
00:06:01,196 --> 0:06:02,286
Clown Town in response to that

227
00:06:02,286 --> 0:06:04,226
target content identifier we

228
00:06:04,776 --> 0:06:04,906
just talked about.

229
00:06:06,446 --> 0:06:07,746
Up top we have our target

230
00:06:07,746 --> 0:06:08,656
content identifier.

231
00:06:09,626 --> 0:06:11,356
It's our URL format and it looks

232
00:06:11,356 --> 0:06:12,536
like it's geared towards a clown

233
00:06:12,536 --> 0:06:13,286
named Crusty.

234
00:06:14,216 --> 0:06:14,446
Okay.

235
00:06:15,976 --> 0:06:17,426
On your left, we have a general

236
00:06:17,426 --> 0:06:18,796
overview of all clowns we can

237
00:06:18,796 --> 0:06:19,556
order in the area.

238
00:06:20,446 --> 0:06:21,916
This is our main scene and where

239
00:06:21,916 --> 0:06:23,266
all content in our application

240
00:06:23,266 --> 0:06:23,576
lives.

241
00:06:24,236 --> 0:06:26,316
The user's really unlikely to

242
00:06:26,316 --> 0:06:27,576
associate Crusty with this

243
00:06:27,576 --> 0:06:28,006
scene.

244
00:06:28,476 --> 0:06:29,846
I think it would be ideal to set

245
00:06:29,846 --> 0:06:30,966
this scene's activation

246
00:06:30,966 --> 0:06:32,746
conditions up in such a way that

247
00:06:32,746 --> 0:06:34,186
it can display anything but

248
00:06:34,186 --> 0:06:35,026
doesn't prefer anything

249
00:06:35,026 --> 0:06:35,666
specifically.

250
00:06:35,856 --> 0:06:36,656
And that makes sense.

251
00:06:36,656 --> 0:06:38,206
It's my main scene and where I

252
00:06:38,206 --> 0:06:39,446
enter into my application, it

253
00:06:39,446 --> 0:06:40,426
has all my content.

254
00:06:41,496 --> 0:06:43,786
Lucky for us, that's actually

255
00:06:43,786 --> 0:06:44,676
the default when you create a

256
00:06:44,676 --> 0:06:45,386
new scene.

257
00:06:45,636 --> 0:06:46,686
Your UIScene Activation

258
00:06:46,686 --> 0:06:47,616
conditions will be set up to

259
00:06:47,616 --> 0:06:50,076
allow any content, or can allow

260
00:06:50,076 --> 0:06:51,666
any content, but not prefer

261
00:06:51,666 --> 0:06:52,656
anything specifically.

262
00:06:54,146 --> 0:06:54,686
Alright.

263
00:06:55,156 --> 0:06:58,136
On your right, we have a scene

264
00:06:58,136 --> 0:06:59,806
set up just for Crusty.

265
00:07:00,216 --> 0:07:04,056
This scene can display any

266
00:07:04,056 --> 0:07:06,276
specific clown's details but

267
00:07:06,706 --> 0:07:07,526
it's likely the user would

268
00:07:07,526 --> 0:07:08,696
associate Crusty with this scene

269
00:07:08,696 --> 0:07:09,306
specifically.

270
00:07:09,906 --> 0:07:12,956
So, we should express that

271
00:07:12,956 --> 0:07:14,676
association within our scene

272
00:07:14,676 --> 0:07:16,116
activation conditions, as the

273
00:07:16,116 --> 0:07:17,596
scene can be activated, and we

274
00:07:17,596 --> 0:07:18,596
prefer it to be activated

275
00:07:18,596 --> 0:07:19,746
specifically for Crusty.

276
00:07:20,366 --> 0:07:22,986
So, let's take these

277
00:07:22,986 --> 0:07:23,946
requirements and put together

278
00:07:23,946 --> 0:07:25,176
some scene activation conditions

279
00:07:25,176 --> 0:07:26,756
for our Detail scene.

280
00:07:28,006 --> 0:07:29,626
Okay, let's break this down.

281
00:07:30,806 --> 0:07:32,206
For this scene, we want to only

282
00:07:32,206 --> 0:07:34,486
activate if this scene is about

283
00:07:34,486 --> 0:07:34,826
Crusty.

284
00:07:34,936 --> 0:07:36,076
And so we're just going to check

285
00:07:36,076 --> 0:07:37,426
to see if the target content

286
00:07:37,426 --> 0:07:39,566
identifier that's passed in is

287
00:07:39,566 --> 0:07:40,776
equal to the one we would expect

288
00:07:40,776 --> 0:07:41,296
for Crusty.

289
00:07:41,956 --> 0:07:42,206
Cool.

290
00:07:42,516 --> 0:07:44,166
Now, you'll note that this is a

291
00:07:44,166 --> 0:07:45,356
place where we actually use the

292
00:07:45,356 --> 0:07:47,376
same predicate for our can and

293
00:07:47,376 --> 0:07:48,336
our prefers.

294
00:07:48,536 --> 0:07:50,166
This is a pretty common pattern

295
00:07:50,166 --> 0:07:51,226
you'll find yourself using when

296
00:07:51,226 --> 0:07:52,376
you want to target a scene for a

297
00:07:52,376 --> 0:07:53,906
specific piece of content.

298
00:07:54,686 --> 0:07:56,106
Sure, we could accept any other

299
00:07:56,106 --> 0:07:56,696
clown here.

300
00:07:56,836 --> 0:07:58,026
It's just a detail scene.

301
00:07:58,886 --> 0:08:00,506
But if I have a notification

302
00:07:58,886 --> 0:08:00,506
But if I have a notification

303
00:08:00,506 --> 0:08:01,366
come in, I want it to be

304
00:08:01,366 --> 0:08:02,956
targeted to exactly where Crusty

305
00:08:02,956 --> 0:08:03,276
is.

306
00:08:04,736 --> 0:08:04,856
Cool.

307
00:08:04,856 --> 0:08:07,746
So, let's talk about what

308
00:08:07,746 --> 0:08:09,086
happens when we set these

309
00:08:09,086 --> 0:08:09,506
predicates.

310
00:08:10,596 --> 0:08:12,236
When I set the Crusty predicate

311
00:08:12,236 --> 0:08:13,256
on our scene activation

312
00:08:13,256 --> 0:08:14,676
condition, the system's going to

313
00:08:14,676 --> 0:08:16,416
package these predicates up and

314
00:08:16,416 --> 0:08:17,756
ship them off to somewhere else

315
00:08:17,756 --> 0:08:18,656
in the operating system.

316
00:08:20,066 --> 0:08:21,336
That has a couple repercussions

317
00:08:21,336 --> 0:08:22,786
for how NSPredicate is used

318
00:08:22,786 --> 0:08:24,336
within scene activation

319
00:08:24,336 --> 0:08:25,346
conditions and I'd like to go

320
00:08:25,346 --> 0:08:27,686
over them right now.

321
00:08:27,916 --> 0:08:29,426
Scene activation conditions have

322
00:08:29,426 --> 0:08:30,966
three restrictions with its use

323
00:08:31,006 --> 0:08:31,736
of NSPredicate.

324
00:08:32,346 --> 0:08:35,356
First, block-based predicates

325
00:08:35,356 --> 0:08:35,976
aren't allowed.

326
00:08:36,806 --> 0:08:38,265
Unfortunately, we can't package

327
00:08:38,265 --> 0:08:39,196
up code within your running

328
00:08:39,196 --> 0:08:41,025
application and ship it out to

329
00:08:41,025 --> 0:08:42,606
other parts of the system.

330
00:08:43,696 --> 0:08:46,896
Next, regular expression-based

331
00:08:46,896 --> 0:08:47,806
predicates aren't allowed.

332
00:08:48,296 --> 0:08:49,526
We can't use them because they

333
00:08:49,526 --> 0:08:50,816
could introduce an indeterminate

334
00:08:50,816 --> 0:08:51,756
amount of time during the

335
00:08:51,756 --> 0:08:53,746
evaluation of your scene

336
00:08:53,746 --> 0:08:54,316
predicates.

337
00:08:55,016 --> 0:08:55,936
We encourage you to take a look

338
00:08:55,936 --> 0:08:56,836
at the like operator.

339
00:08:56,986 --> 0:08:58,726
It's the de facto glob operator

340
00:08:58,726 --> 0:09:00,006
to NSPredicate and it should

341
00:08:58,726 --> 0:09:00,006
to NSPredicate and it should

342
00:09:00,006 --> 0:09:00,916
help you do all the kinds of

343
00:09:00,916 --> 0:09:02,326
wildcard matching you might want

344
00:09:02,326 --> 0:09:03,196
to do.

345
00:09:03,456 --> 0:09:05,076
With that being said, if you

346
00:09:05,076 --> 0:09:07,626
have a unique thought on how you

347
00:09:07,626 --> 0:09:08,696
might use a regular expression

348
00:09:08,696 --> 0:09:10,016
predicate, please use the

349
00:09:10,016 --> 0:09:11,576
feedback assistant and inform us

350
00:09:11,576 --> 0:09:12,306
of what you're thinking.

351
00:09:12,576 --> 0:09:13,566
We'd really like to hear about

352
00:09:13,946 --> 0:09:14,000
it.

353
00:09:15,076 --> 0:09:17,576
And finally, the only keypath

354
00:09:17,576 --> 0:09:18,936
your NSPredicate can reference

355
00:09:18,936 --> 0:09:19,636
is self.

356
00:09:20,116 --> 0:09:21,476
Which is to say, you're not

357
00:09:21,476 --> 0:09:23,026
going to set your scene

358
00:09:23,026 --> 0:09:24,706
activation requirement

359
00:09:24,746 --> 0:09:26,576
predicates on something along

360
00:09:26,576 --> 0:09:27,746
the lines of the length of the

361
00:09:27,746 --> 0:09:29,406
string or your target content

362
00:09:29,406 --> 0:09:29,996
identifier.

363
00:09:30,606 --> 0:09:32,136
We want you to put real content

364
00:09:32,136 --> 0:09:32,976
that you could actually use in

365
00:09:32,976 --> 0:09:33,826
your model there.

366
00:09:34,346 --> 0:09:37,026
Next, let's take a look at

367
00:09:37,026 --> 0:09:38,706
another example for what their

368
00:09:38,706 --> 0:09:39,716
scene activation conditions

369
00:09:39,716 --> 0:09:40,996
might look like for our commonly

370
00:09:40,996 --> 0:09:42,116
used app architecture.

371
00:09:42,686 --> 0:09:45,116
Let's talk about what a tabbed

372
00:09:45,116 --> 0:09:46,126
application might do like

373
00:09:46,126 --> 0:09:46,636
Safari.

374
00:09:47,586 --> 0:09:48,696
You'll see that Safari here has

375
00:09:48,726 --> 0:09:50,786
two tabs open, each analogous to

376
00:09:50,786 --> 0:09:51,856
their own document.

377
00:09:52,716 --> 0:09:53,756
And we should sort of think of

378
00:09:53,756 --> 0:09:55,046
each tab, since they're their

379
00:09:55,046 --> 0:09:56,386
own document, as having their

380
00:09:56,386 --> 0:09:58,036
own target content identifier.

381
00:09:58,396 --> 0:10:00,586
But note, if we have two of

382
00:09:58,396 --> 0:10:00,586
But note, if we have two of

383
00:10:00,586 --> 0:10:01,846
these target content identifiers

384
00:10:01,846 --> 0:10:03,646
up on screen and we want to set

385
00:10:03,646 --> 0:10:04,796
it on our scene activation

386
00:10:04,796 --> 0:10:05,666
conditions as something we

387
00:10:05,666 --> 0:10:07,816
prefer, how would we do that?

388
00:10:08,616 --> 0:10:11,216
First, let's examine the canned

389
00:10:11,216 --> 0:10:11,766
predicate.

390
00:10:13,956 --> 0:10:14,806
Simple enough.

391
00:10:15,146 --> 0:10:16,106
Document-based apps can

392
00:10:16,106 --> 0:10:17,416
typically open any kind of

393
00:10:17,416 --> 0:10:18,666
documents in your application.

394
00:10:19,046 --> 0:10:21,316
So to encode that, we actually

395
00:10:21,316 --> 0:10:22,676
use an always true predicate

396
00:10:22,676 --> 0:10:24,306
here to describe that any scene

397
00:10:24,306 --> 0:10:25,676
can display any content passed

398
00:10:25,676 --> 0:10:26,296
to it.

399
00:10:26,786 --> 0:10:27,716
What kind of content does it

400
00:10:27,756 --> 0:10:28,316
prefer?

401
00:10:28,806 --> 0:10:31,286
Because this UI has multiple

402
00:10:31,286 --> 0:10:32,616
tabs, it makes sense that we'd

403
00:10:32,616 --> 0:10:33,706
use something like a compound

404
00:10:33,706 --> 0:10:35,886
predicate in order to gather all

405
00:10:35,936 --> 0:10:37,496
the subpredicates within it.

406
00:10:37,496 --> 0:10:39,096
And then we'll use that with our

407
00:10:39,096 --> 0:10:40,306
scene activation conditions.

408
00:10:41,566 --> 0:10:41,826
Great.

409
00:10:42,266 --> 0:10:44,016
Well, for more information,

410
00:10:44,196 --> 0:10:44,836
please visit

411
00:10:44,836 --> 0:10:46,176
developer.apple.com.

412
00:10:46,256 --> 0:10:47,436
We have all of our slides and

413
00:10:47,436 --> 0:10:48,606
notes and you can go there and

414
00:10:48,606 --> 0:10:49,846
get some more information about

415
00:10:49,846 --> 0:10:49,956
that.

416
00:10:50,436 --> 0:10:52,996
And really, thank you for

417
00:10:52,996 --> 0:10:53,386
coming.

418
00:10:53,426 --> 0:10:55,036
It has been a tremendous WWDC

419
00:10:55,036 --> 0:10:56,166
and we are so thrilled to see

420
00:10:56,166 --> 0:10:57,286
what you guys make with these

421
00:10:57,286 --> 0:10:58,106
new APIs.

422
00:10:58,306 --> 0:10:59,096
Thank you very much.

423
00:11:00,508 --> 0:11:02,508
[ Applause ]
