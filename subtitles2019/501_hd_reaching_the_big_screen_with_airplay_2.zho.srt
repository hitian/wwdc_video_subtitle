1
00:00:05,739 --> 0:00:08,675
（在大屏幕上进行隔空播放2）

2
00:00:08,742 --> 0:00:09,610
好吧

3
00:00:09,977 --> 0:00:10,911
大家早上好

4
00:00:12,779 --> 0:00:14,381
我是

5
00:00:14,448 --> 0:00:17,017
我是Apple连接媒体团队的一员

6
00:00:18,018 --> 0:00:20,654
我很高兴能来到这里与大家分享

7
00:00:20,721 --> 0:00:22,289
关于隔空播放的相关信息

8
00:00:23,323 --> 0:00:26,693
开始我们先讲一下

9
00:00:28,562 --> 0:00:33,567
你可以使用隔空播放无线发送视频

10
00:00:34,868 --> 0:00:36,703
或在家里任何地方听音乐

11
00:00:37,571 --> 0:00:39,273
你还可以

12
00:00:41,742 --> 0:00:47,181
使用隔空播放镜像从iOS或

13
00:00:48,415 --> 0:00:51,118
对于今天的演讲 我们聚焦视频

14
00:00:51,885 --> 0:00:54,354
我们会讲我们所做的改进

15
00:00:55,489 --> 0:00:58,792
从而确保你可以

16
00:00:59,159 --> 0:01:03,597
在隔空播放发送设备上

17
00:00:59,159 --> 0:01:03,597
在隔空播放发送设备上

18
00:01:04,331 --> 0:01:05,999
获得很棒的电视目的地

19
00:01:09,503 --> 0:01:11,171
当提到目的地时

20
00:01:11,872 --> 0:01:15,442
过去Apple TV一向是

21
00:01:16,009 --> 0:01:18,345
对于许多人来说仍然是个不错的选择

22
00:01:19,279 --> 0:01:21,915
正如你今年早些时候听到的

23
00:01:22,916 --> 0:01:26,119
在与一些最大的电视制造商合作

24
00:01:27,487 --> 0:01:31,358
直接在电视中建立隔空播放支持

25
00:01:32,192 --> 0:01:35,028
这极大地增加了人们

26
00:01:35,562 --> 0:01:38,432
在哪里可以进行隔空播放视频的选择

27
00:01:38,999 --> 0:01:41,134
也增加了大量

28
00:01:41,568 --> 0:01:44,638
你可以利用的电视设备

29
00:01:47,441 --> 0:01:51,211
因此只要在电视盒上找到这个标签

30
00:01:51,778 --> 0:01:55,682
隔空播放镜像、多房间音乐

31
00:01:59,019 --> 0:02:01,688
Apple TV

32
00:01:59,019 --> 0:02:01,688
Apple TV

33
00:02:04,324 --> 0:02:08,729
可以支持最高4K HDR视频

34
00:02:09,062 --> 0:02:12,299
这是一种高品质的视频体验

35
00:02:14,101 --> 0:02:18,005
这些是我们在电视上所增加的

36
00:02:19,106 --> 0:02:21,375
提到隔空播放发送设备

37
00:02:22,042 --> 0:02:24,845
我想讲一下我们在iOS中

38
00:02:24,912 --> 0:02:27,548
从而使人们可以更轻松地

39
00:02:28,015 --> 0:02:29,683
把app中他们所喜欢的内容

40
00:02:31,952 --> 0:02:35,822
首先现在你的视频app

41
00:02:35,889 --> 0:02:37,457
对电视目的地进行排序

42
00:02:37,791 --> 0:02:42,296
使查找你想要播放视频的电视

43
00:02:43,664 --> 0:02:47,801
我们还改进和丰富了可用的远程控制

44
00:02:48,435 --> 0:02:54,074
允许人们与你的视频迅速和轻松地

45
00:02:55,876 --> 0:02:57,211
我们还做了一些改善

46
00:02:57,277 --> 0:02:59,780
可以让人们更好地在他们的

47
00:02:59,847 --> 0:03:02,382
因此他们可以接电话

48
00:02:59,847 --> 0:03:02,382
因此他们可以接电话

49
00:03:03,217 --> 0:03:06,420
或查看他们刚从iMessage中

50
00:03:06,954 --> 0:03:09,089
而同时仍在电视上继续播放你的视频

51
00:03:11,391 --> 0:03:16,663
最后iOS现在可以使用设备上学习

52
00:03:16,730 --> 0:03:18,098
智能地推荐要进行隔空播放的电视

53
00:03:18,632 --> 0:03:21,535
因此我可以坐在沙发上

54
00:03:22,069 --> 0:03:25,939
我只需要轻触我最喜欢的节目

55
00:03:28,342 --> 0:03:31,845
通过新电视目的地和这些体验改善

56
00:03:31,912 --> 0:03:35,582
现在是时候确保你的视频app

57
00:03:36,783 --> 0:03:41,154
我想在接下来的演讲中讲五个重点

58
00:03:42,122 --> 0:03:44,291
用于添加这种优秀的体验

59
00:03:45,726 --> 0:03:49,530
首先我们要确保你有在电视上可用的

60
00:03:51,298 --> 0:03:54,535
然后我们要一种方式

61
00:03:54,601 --> 0:03:55,736
可以让人们使用app内的选择器

62
00:03:58,539 --> 0:04:01,141
一旦视频出现在电视上

63
00:03:58,539 --> 0:04:01,141
一旦视频出现在电视上

64
00:04:03,810 --> 0:04:05,913
并且要确保当人们使用iOS设备

65
00:04:06,914 --> 0:04:09,550
持续播放视频

66
00:04:11,451 --> 0:04:13,220
最后如果你的app

67
00:04:13,287 --> 0:04:17,591
主要播放长格式视频

68
00:04:18,659 --> 0:04:20,260
你还应该采取一些额外的步骤

69
00:04:20,327 --> 0:04:21,995
从而确保用户们受益于

70
00:04:22,396 --> 0:04:25,365
智能隔空播放推荐

71
00:04:28,368 --> 0:04:31,371
让我们先讲高品质视频

72
00:04:33,106 --> 0:04:36,210
HTTP直播流是一种

73
00:04:36,276 --> 0:04:38,612
用于把高品质视频放到任何设备上

74
00:04:39,213 --> 0:04:43,917
你很可能已经使用HLS

75
00:04:44,852 --> 0:04:47,688
现在有些人可能正在整理播放列表

76
00:04:47,754 --> 0:04:49,790
主要集中于那些设备类型

77
00:04:50,190 --> 0:04:52,526
是iPhone屏幕或iPad屏幕

78
00:04:54,127 --> 0:04:57,331
但请记住

79
00:04:57,397 --> 0:04:59,533
并可以在电视上进行隔空播放

80
00:04:59,600 --> 0:05:02,903
你的播放列表中

81
00:04:59,600 --> 0:05:02,903
你的播放列表中

82
00:05:03,570 --> 0:05:05,906
拥有适合电视的全部变体非常重要

83
00:05:06,073 --> 0:05:11,011
其中包括支持4K、HDR

84
00:05:12,613 --> 0:05:15,749
如果你的播放列表中含有

85
00:05:15,816 --> 0:05:17,584
你用于编码内容的多视频编解码器

86
00:05:18,185 --> 0:05:21,688
请一定要为每个视频编解码器

87
00:05:22,389 --> 0:05:24,558
这可以确保播放你视频的任意设备

88
00:05:24,625 --> 0:05:26,260
完全支持播放你的视频

89
00:05:26,827 --> 0:05:30,464
并确保播放器可以流畅地在变体之间

90
00:05:31,164 --> 0:05:33,700
通过使用同一个视频编解码器实现

91
00:05:36,470 --> 0:05:39,740
我发现自己经常会做的一件事就是

92
00:05:39,806 --> 0:05:42,176
快进或跳着看视频

93
00:05:42,776 --> 0:05:44,211
无论是…

94
00:05:46,146 --> 0:05:50,851
在我和孩子们一起观看时

95
00:05:51,118 --> 0:05:53,720
或查找WWDC视频中间部分的一个

96
00:05:54,154 --> 0:05:58,125
在跳着看时有快进、快速播放、

97
00:05:58,492 --> 0:06:02,563
可以让我迅速并自信地找到

98
00:05:58,492 --> 0:06:02,563
可以让我迅速并自信地找到

99
00:06:03,564 --> 0:06:05,632
你可以在你的视频中添加这种支持

100
00:06:05,699 --> 0:06:08,902
通过在你的HLS播放列表中

101
00:06:11,572 --> 0:06:16,410
最后如果你有需要保护和管理的

102
00:06:16,476 --> 0:06:18,745
你很可能会使用FairPlay Streaming

103
00:06:19,379 --> 0:06:23,550
无论何时也无论你在哪里进行隔空

104
00:06:24,017 --> 0:06:25,986
包括在Apple TV上隔空播放

105
00:06:26,453 --> 0:06:29,389
我也很高兴地宣布

106
00:06:29,456 --> 0:06:32,292
只要内嵌隔空播放支持的智能电视

107
00:06:34,228 --> 0:06:38,198
除了我们今天所讲的这些

108
00:06:38,265 --> 0:06:39,266
还有许多关于针对隔空播放

109
00:06:39,766 --> 0:06:42,336
我们制作了一个与此演讲相关联的

110
00:06:42,402 --> 0:06:43,904
我推荐你参考那个视频了解相关信息

111
00:06:46,773 --> 0:06:49,276
拥有高品质内容非常棒

112
00:06:49,343 --> 0:06:52,246
但我们也要确保我们有流畅的播放

113
00:06:53,247 --> 0:06:57,451
如果你需要在你的视频中

114
00:06:57,518 --> 0:06:59,386
插入前、中或后视频广告

115
00:07:00,120 --> 0:07:02,623
你可以使用HLS的不连续性标签

116
00:07:03,190 --> 0:07:05,659
这就允许播放器保持不变

117
00:07:05,726 --> 0:07:07,628
并且预估的带宽也保持不变

118
00:07:07,694 --> 0:07:10,097
从而你的插播广告视频

119
00:07:10,497 --> 0:07:12,399
当它结束后恢复播放主内容时

120
00:07:12,466 --> 0:07:15,802
可以立即开始以高品质播放主内容

121
00:07:18,105 --> 0:07:20,774
再一次 确保这些插播视频广告

122
00:07:20,841 --> 0:07:23,343
拥有与主内容相同的视频格式

123
00:07:23,877 --> 0:07:26,413
比如同样的视频编解码器

124
00:07:26,480 --> 0:07:27,948
可以迅速并流畅地进行

125
00:07:30,150 --> 0:07:33,654
如果你由于某些原因不能使用

126
00:07:33,720 --> 0:07:36,924
或你有想要连续播放的多段视频内容

127
00:07:37,925 --> 0:07:40,394
我们推荐你在隔空播放时使用

128
00:07:42,963 --> 0:07:47,234
如果当你进行隔空播放时不能使用

129
00:07:47,301 --> 0:07:49,870
请使用同一个AVPlayer实例

130
00:07:50,270 --> 0:07:52,973
你只需要用你的新内容替换

131
00:07:53,807 --> 0:07:56,743
你一定不想给每段视频销毁一个

132
00:07:57,010 --> 0:08:00,013
或在实例之间调换

133
00:07:57,010 --> 0:08:00,013
或在实例之间调换

134
00:08:00,414 --> 0:08:01,682
因为当隔空播放时

135
00:08:01,748 --> 0:08:02,783
系统不了解

136
00:08:02,850 --> 0:08:05,118
一段新视频即将到达

137
00:08:05,185 --> 0:08:07,487
因此它可能会开始释放引擎

138
00:08:07,554 --> 0:08:10,057
你一定不想产生这种类型的延迟

139
00:08:10,123 --> 0:08:12,326
仅仅是因为在视频之间进行转换

140
00:08:15,596 --> 0:08:18,332
好吧 我们已经得到了高品质的内容

141
00:08:18,398 --> 0:08:21,468
现在让我们为人们提供一种方式

142
00:08:22,669 --> 0:08:25,572
你可以通过把隔空投放选择器

143
00:08:26,440 --> 0:08:30,911
在iOS 13中有个新功能

144
00:08:32,779 --> 0:08:36,482
要添加一个隔空播放选择器 请使用

145
00:08:36,549 --> 0:08:40,921
自iOS 11起它在iOS上可用

146
00:08:42,256 --> 0:08:46,093
有些人可能会使用

147
00:08:46,159 --> 0:08:47,594
在app中获得选择器

148
00:08:48,695 --> 0:08:52,566
iOS 13中

149
00:08:54,168 --> 0:08:56,904
但不要担心 你仍可以使用

150
00:08:56,970 --> 0:08:59,873
把音量UI放到你的app中

151
00:08:59,940 --> 0:09:02,809
但当要使用路由按钮时 请使用

152
00:08:59,940 --> 0:09:02,809
但当要使用路由按钮时 请使用

153
00:09:08,782 --> 0:09:13,921
让我们看看如何添加 非常简单

154
00:09:14,454 --> 0:09:17,257
我所要做的就是创建一个

155
00:09:17,324 --> 0:09:18,759
并把它添加到我的视频等级中

156
00:09:20,360 --> 0:09:22,396
在iOS 13中

157
00:09:22,696 --> 0:09:25,265
我可以把prioritizesVideoDevices

158
00:09:25,599 --> 0:09:30,404
那会为我提供一个路由按钮图标

159
00:09:30,470 --> 0:09:33,707
关注带有隔空播放视频标志的视频

160
00:09:34,208 --> 0:09:38,078
并同时在顶部对这些电视目的地

161
00:09:38,478 --> 0:09:40,147
从而把查找我想在哪个电视上

162
00:09:45,419 --> 0:09:47,254
现在我可以在电视上播放视频了

163
00:09:47,321 --> 0:09:49,790
让我们确保人们可以通过一种方式

164
00:09:49,857 --> 0:09:50,991
这非常重要

165
00:09:51,058 --> 0:09:53,093
因此我们要确保

166
00:09:53,160 --> 0:09:56,530
比以前更便利、更得力

167
00:09:58,065 --> 0:10:02,202
比如我可以通过锁屏控件

168
00:09:58,065 --> 0:10:02,202
比如我可以通过锁屏控件

169
00:10:02,436 --> 0:10:05,439
并且当你锚定一个电视时

170
00:10:07,007 --> 0:10:10,410
我还可以使用Siri发布播放命令

171
00:10:10,611 --> 0:10:12,145
你知道的

172
00:10:17,251 --> 0:10:21,221
这并不仅仅是控制在iOS设备上

173
00:10:21,388 --> 0:10:22,890
还要控制你周围的设备

174
00:10:23,490 --> 0:10:25,325
比如你可以下拉控制中心

175
00:10:25,492 --> 0:10:28,362
控制正在家里播放音乐的

176
00:10:28,829 --> 0:10:32,566
或甚至是控制

177
00:10:32,799 --> 0:10:34,735
我可以看到播放内容

178
00:10:39,072 --> 0:10:42,809
如果你的app不支持

179
00:10:42,876 --> 0:10:45,512
嗯 这是我的app

180
00:10:47,314 --> 0:10:50,651
但如果我锁定屏幕

181
00:10:50,717 --> 0:10:53,654
更重要的是

182
00:10:55,822 --> 0:10:57,724
通过支持远程控制

183
00:10:58,158 --> 0:11:00,093
你可以了解正在播放什么

184
00:10:58,158 --> 0:11:00,093
你可以了解正在播放什么

185
00:11:01,795 --> 0:11:03,463
视频已经播放了多久

186
00:11:04,898 --> 0:11:06,700
一种与之迅速地相交互的不错的方式

187
00:11:08,001 --> 0:11:10,070
然后甚至可以返回到

188
00:11:10,137 --> 0:11:11,271
目前正在播放那段视频的app中

189
00:11:11,338 --> 0:11:13,907
你只需要轻触视频或标题即可返回

190
00:11:15,375 --> 0:11:19,713
让我们看看如何在你的app中

191
00:11:19,947 --> 0:11:22,649
首先是要成为“正在播放”app

192
00:11:24,284 --> 0:11:26,687
通过做两件事即可成为

193
00:11:26,753 --> 0:11:29,623
一件事是至少支持一个远程控制命令

194
00:11:30,290 --> 0:11:33,327
另一件事是用媒体配置初始化播放

195
00:11:34,661 --> 0:11:37,965
在iOS上 那意味着

196
00:11:38,031 --> 0:11:40,167
用不可混合类别激活你的音频会话

197
00:11:40,234 --> 0:11:42,970
对于多大多数视频app来说

198
00:11:44,838 --> 0:11:49,409
在macOS和运行在

199
00:11:49,476 --> 0:11:52,813
你要采取的措施稍微有些不同

200
00:11:53,247 --> 0:11:59,119
并且无论何时当你开始或结束

201
00:12:02,155 --> 0:12:04,291
提到支持远程控制

202
00:12:04,358 --> 0:12:06,860
如果你使用了AVKit的

203
00:12:06,927 --> 0:12:08,028
来呈现你的视频

204
00:12:08,395 --> 0:12:11,098
它会替你处理远程控制

205
00:12:13,867 --> 0:12:17,137
如你使用AVFoundation

206
00:12:17,471 --> 0:12:21,375
你得用MPRemoteCommandCenter

207
00:12:21,441 --> 0:12:23,177
来获得同样的功能

208
00:12:23,977 --> 0:12:26,246
我想花点时间逐步讲一下

209
00:12:26,313 --> 0:12:29,349
如何使用这些媒体播放器API

210
00:12:29,416 --> 0:12:31,051
来创建这个功能

211
00:12:32,853 --> 0:12:35,122
在这里我又返回到我孤独的锁屏上

212
00:12:36,490 --> 0:12:39,960
让我们通过支持播放命令来添加一些

213
00:12:42,162 --> 0:12:44,731
我可以通过创建

214
00:12:44,798 --> 0:12:46,366
支持远程控制的设置方法来实现

215
00:12:46,867 --> 0:12:49,102
随着我们继续创建支持

216
00:12:49,169 --> 0:12:50,838
我们会一次又一次地使用这个方法

217
00:12:52,573 --> 0:12:55,375
我首先要获取远程命令中心的

218
00:12:57,477 --> 0:13:01,648
远程命令中心支持许多不同类型的

219
00:12:57,477 --> 0:13:01,648
远程命令中心支持许多不同类型的

220
00:13:02,049 --> 0:13:03,884
在这里我支持播放命令

221
00:13:03,951 --> 0:13:06,019
为此 我们要添加一个目标处理器

222
00:13:06,286 --> 0:13:08,622
来接收那个命令

223
00:13:09,256 --> 0:13:11,124
在这里 我们要开始播放

224
00:13:12,226 --> 0:13:13,227
一旦完成播放

225
00:13:13,794 --> 0:13:17,431
我要返回一个状态

226
00:13:18,632 --> 0:13:20,467
这是你要针对你所支持的

227
00:13:20,534 --> 0:13:22,336
所要使用的基础结构

228
00:13:24,505 --> 0:13:26,640
为了充实我们的播放命令处理

229
00:13:26,707 --> 0:13:30,577
我们要支持暂停命令和

230
00:13:30,644 --> 0:13:32,246
通过为它们添加处理器实现

231
00:13:34,481 --> 0:13:37,985
这给了我一个

232
00:13:38,051 --> 0:13:40,053
我至少知道哪个app正在播放

233
00:13:40,120 --> 0:13:43,357
但如果我知道正在播放哪个视频

234
00:13:45,259 --> 0:13:47,794
你可以通过提供

235
00:13:49,062 --> 0:13:51,031
“正在播放”信息由两部分组成

236
00:13:51,098 --> 0:13:55,035
一部分是元数据 比如视频或标题

237
00:13:56,069 --> 0:13:59,973
然后是播放状态

238
00:14:00,307 --> 0:14:02,709
在我的代码中有两个主要事件

239
00:14:02,776 --> 0:14:04,645
我想在这两个主要事件中

240
00:14:05,212 --> 0:14:10,250
其中一个是当某项发生变更时

241
00:14:12,886 --> 0:14:14,821
另一个是当我有当前项时

242
00:14:14,888 --> 0:14:16,857
且播放状态发生变革

243
00:14:16,924 --> 0:14:21,328
因此我的速率发生了改变

244
00:14:24,831 --> 0:14:26,300
因此当某项发生变更时

245
00:14:26,500 --> 0:14:29,937
我要获取我在app中通过一种结构

246
00:14:30,170 --> 0:14:32,673
并通过我的app传递它

247
00:14:33,407 --> 0:14:35,676
我要更新那个静态的

248
00:14:35,742 --> 0:14:37,411
比如标题和视频

249
00:14:38,145 --> 0:14:39,146
如果我有“正在播放”信息

250
00:14:40,547 --> 0:14:44,418
我这一次也会更新播放信息

251
00:14:45,853 --> 0:14:48,121
当播放状态发生变更时

252
00:14:49,489 --> 0:14:51,825
我所要做的就是更新那个播放信息

253
00:14:52,092 --> 0:14:55,762
我不需要更新视频

254
00:14:57,731 --> 0:14:59,800
让我们看看如何更新这些信息

255
00:15:01,702 --> 0:15:04,905
我要做的第一件事就是

256
00:15:04,972 --> 0:15:06,940
获取“现在播放”信息字典

257
00:15:09,776 --> 0:15:12,212
对于这个字典 我要更新我的元数据

258
00:15:12,279 --> 0:15:14,414
在这里 我要更新标题和视频

259
00:15:14,681 --> 0:15:16,550
我的app中还支持或可能支持

260
00:15:16,617 --> 0:15:19,019
许多其它类型的元数据

261
00:15:19,720 --> 0:15:20,988
无论我支持哪种类型

262
00:15:21,221 --> 0:15:24,825
重要的是要更新这个元数据或清除它

263
00:15:24,892 --> 0:15:29,830
如果某项没有那种类型的属性的话

264
00:15:30,564 --> 0:15:35,269
你一定不想在字典中包含

265
00:15:37,204 --> 0:15:38,372
然而一旦我更新元数据之后

266
00:15:38,438 --> 0:15:41,175
我就把它传回给信息中心用于呈现

267
00:15:45,078 --> 0:15:48,282
更新“现在播放”信息超级简单

268
00:15:48,482 --> 0:15:50,884
现在让我们看看如何更新播放信息

269
00:15:52,286 --> 0:15:55,522
更新方式很相似

270
00:15:55,923 --> 0:15:57,057
信息字典

271
00:15:57,824 --> 0:15:59,860
为此 我要更新时长

272
00:15:59,927 --> 0:16:02,229
和已播放时间以及播放速率

273
00:15:59,927 --> 0:16:02,229
和已播放时间以及播放速率

274
00:16:03,397 --> 0:16:07,234
我只需要在发生显著变化的事件上

275
00:16:07,301 --> 0:16:11,171
我不需要对每秒都进行更新

276
00:16:11,572 --> 0:16:13,941
只要我在速率发生变化时

277
00:16:14,007 --> 0:16:16,109
更新这三项

278
00:16:16,577 --> 0:16:18,111
系统就会推断

279
00:16:18,278 --> 0:16:20,581
在任何特定时刻你在视频中

280
00:16:20,781 --> 0:16:22,916
并相应地更新远程UI

281
00:16:24,751 --> 0:16:25,953
再一次 一旦我更新了这个信息

282
00:16:26,019 --> 0:16:28,589
我只需要把它传回给信息中心

283
00:16:30,958 --> 0:16:32,659
这样我就能了解正在播放哪个视频

284
00:16:32,726 --> 0:16:36,597
能在视频中实现导航真是太棒了

285
00:16:37,130 --> 0:16:41,368
你可以使用playhead刷子

286
00:16:42,669 --> 0:16:45,472
在你的视频中添加对视频导航的支持

287
00:16:46,573 --> 0:16:47,674
让我们看一下我们该如何做

288
00:16:48,942 --> 0:16:52,312
我们返回到

289
00:16:52,579 --> 0:16:56,183
我要添加对快进命令的支持

290
00:16:57,084 --> 0:16:59,987
这是支持额外配置的其中一个命令

291
00:17:00,053 --> 0:17:03,957
在这里我把首选快进间隔设置为

292
00:17:05,726 --> 0:17:08,161
然后我为那个命令添加一个处理器

293
00:17:09,496 --> 0:17:11,231
重点是要注意

294
00:17:11,531 --> 0:17:14,367
我在这里使用了通过命令事件

295
00:17:15,169 --> 0:17:16,703
仅仅因为我设置了首选间隔

296
00:17:16,770 --> 0:17:18,472
但那并不意味着每次都要用这个间隔

297
00:17:18,739 --> 0:17:23,010
比如我可以要求Siri快进42秒

298
00:17:23,076 --> 0:17:25,078
这是将要传给我的值

299
00:17:25,145 --> 0:17:26,480
也是我应该使用的值

300
00:17:28,749 --> 0:17:30,317
然后我通过支持后退命令

301
00:17:30,584 --> 0:17:33,187
和当对视频进行导航时所使用的

302
00:17:33,253 --> 0:17:36,590
来充实我的支持

303
00:17:39,793 --> 0:17:41,762
对于某些app

304
00:17:41,828 --> 0:17:44,331
你可能需要暂时禁用导航

305
00:17:44,665 --> 0:17:47,634
你可以通过在你要禁用的命令上

306
00:17:47,701 --> 0:17:49,603
设置isEnabled属性来实现

307
00:17:49,903 --> 0:17:52,506
你不需要移除目标处理器

308
00:17:56,043 --> 0:17:59,780
今年我们对远程控制UI

309
00:17:59,847 --> 0:18:04,284
选择和修改音频语言和字幕的能力

310
00:17:59,847 --> 0:18:04,284
选择和修改音频语言和字幕的能力

311
00:18:04,785 --> 0:18:07,521
因此如果你拥有带有这些选项的视频

312
00:18:07,921 --> 0:18:09,923
你一定想在远程控制中

313
00:18:10,757 --> 0:18:11,925
添加这种类型的支持

314
00:18:13,694 --> 0:18:20,234
这可以让人们轻松地

315
00:18:20,801 --> 0:18:22,102
你可以通过提供一个

316
00:18:22,169 --> 0:18:26,940
代表音频语言和字幕的

317
00:18:28,041 --> 0:18:30,244
听得见的和易读的语言选项列表

318
00:18:30,677 --> 0:18:32,312
然后你还可以识别

319
00:18:32,379 --> 0:18:34,214
其中每个群组的当前选项

320
00:18:35,115 --> 0:18:36,416
最后你要通过远程UI

321
00:18:36,583 --> 0:18:39,653
处理那些选择

322
00:18:41,355 --> 0:18:43,357
让我们看看如何提供这个信息

323
00:18:45,459 --> 0:18:46,960
首先创建一个映射

324
00:18:47,027 --> 0:18:54,001
我要从我的AVAsset中加载

325
00:18:55,002 --> 0:18:56,770
我要通过把它们转化到

326
00:18:57,070 --> 0:19:00,874
代表这些选项的媒体播放器对象中

327
00:18:57,070 --> 0:19:00,874
代表这些选项的媒体播放器对象中

328
00:19:00,941 --> 0:19:03,210
来创建它们的映射

329
00:19:03,277 --> 0:19:05,145
我可以使用便利的函数来实现

330
00:19:05,812 --> 0:19:08,916
我要在我的app中维持这种映射

331
00:19:08,982 --> 0:19:11,785
因此当我从远程命令中

332
00:19:11,852 --> 0:19:14,688
我最终可以把它转化到

333
00:19:14,988 --> 0:19:18,158
并在我的AVPlayer项上

334
00:19:20,227 --> 0:19:23,263
创建好映射之后

335
00:19:23,697 --> 0:19:27,334
在这里我要在update方法中

336
00:19:27,668 --> 0:19:31,672
我已经在播放信息中添加了

337
00:19:32,506 --> 0:19:36,743
为此 我要添加一个可用选项群组

338
00:19:38,212 --> 0:19:39,680
及其当前选择的列表

339
00:19:41,815 --> 0:19:44,885
现在我们要处理对这些选择的更改

340
00:19:46,787 --> 0:19:49,823
我可以在我的setup方法中

341
00:19:50,290 --> 0:19:54,061
或我可以添加支持

342
00:19:55,395 --> 0:19:58,365
这个处理器将首先获取当前播放项

343
00:19:59,900 --> 0:20:02,769
然后使用我的映射来获取

344
00:19:59,900 --> 0:20:02,769
然后使用我的映射来获取

345
00:20:03,036 --> 0:20:06,406
并把它转化为

346
00:20:08,675 --> 0:20:10,677
然后我就使用AVPlayer项

347
00:20:10,744 --> 0:20:12,913
选择option和group方法

348
00:20:13,647 --> 0:20:16,950
从而为当前项选择新选项

349
00:20:17,885 --> 0:20:19,753
我想更新我的“现在播放”信息

350
00:20:19,820 --> 0:20:22,689
和其它内部状态并处理那个播放变更

351
00:20:25,893 --> 0:20:29,096
现在有些类型的选项群组

352
00:20:29,162 --> 0:20:31,965
比如关闭字幕和隐藏字幕

353
00:20:32,499 --> 0:20:35,035
通过disableLanguage

354
00:20:35,102 --> 0:20:38,872
因此你一定要确保支持

355
00:20:39,640 --> 0:20:43,210
并且处理器非常类似

356
00:20:44,444 --> 0:20:46,780
并使用我的映射查找群组

357
00:20:47,781 --> 0:20:49,082
但现在我要查看

358
00:20:49,650 --> 0:20:53,453
群组是否允许空选择

359
00:20:56,056 --> 0:20:57,057
如果它允许

360
00:20:57,124 --> 0:20:58,559
我就使用同一个选择方法

361
00:20:58,625 --> 0:21:00,027
但传递“无”作为选项

362
00:20:58,625 --> 0:21:00,027
但传递“无”作为选项

363
00:21:00,093 --> 0:21:02,396
这将取消那个群组中所选择的

364
00:21:06,300 --> 0:21:09,203
因此我就得到了

365
00:21:09,436 --> 0:21:11,972
我要何时注册和注销这些呢？

366
00:21:12,706 --> 0:21:15,943
对于绝大多数视频app来说

367
00:21:16,210 --> 0:21:20,247
即当用户在你的app中选择了一个

368
00:21:21,582 --> 0:21:24,051
当你没有什么要播放的东西时

369
00:21:24,117 --> 0:21:27,120
即当用户退出视频时

370
00:21:27,721 --> 0:21:31,225
你可以利用那个机会来清除字典中的

371
00:21:31,291 --> 0:21:33,794
从而确保不保留数据

372
00:21:36,563 --> 0:21:38,832
我提到过那并不仅仅是控制

373
00:21:38,899 --> 0:21:41,635
在你的设备上播放什么

374
00:21:42,402 --> 0:21:44,671
因此如果你有一个tvOS app

375
00:21:45,205 --> 0:21:48,275
用于尝试在Apple TV上

376
00:21:48,342 --> 0:21:50,911
并在iPhone上下拉控制中心

377
00:21:51,445 --> 0:21:53,146
而锚定那台Apple TV

378
00:21:53,514 --> 0:21:57,251
请看 你可以看到

379
00:21:57,317 --> 0:21:59,019
并且你也可以按照你的预期

380
00:21:59,219 --> 0:22:01,622
这对于使用Siri来控制你的电视

381
00:21:59,219 --> 0:22:01,622
这对于使用Siri来控制你的电视

382
00:22:05,626 --> 0:22:07,995
我刚才所讲到的例子

383
00:22:08,061 --> 0:22:10,330
都是我们所制作的

384
00:22:10,397 --> 0:22:11,665
示例项目的一部分

385
00:22:11,732 --> 0:22:13,100
我建议你们查看一下示例项目

386
00:22:16,970 --> 0:22:18,505
好吧 我们已经拥有高品质内容

387
00:22:18,572 --> 0:22:20,440
我们可以在电视上播放它并控制它

388
00:22:21,108 --> 0:22:22,309
当在电视上播放时

389
00:22:22,376 --> 0:22:26,280
如果我可以同时使用手机或iPad

390
00:22:27,581 --> 0:22:31,385
要支持一种优秀的多任务体验

391
00:22:31,919 --> 0:22:34,188
第一步是确保当用户执行多任务时

392
00:22:34,988 --> 0:22:36,356
你的视频可以持续播放

393
00:22:37,191 --> 0:22:38,659
第二步是确保

394
00:22:39,159 --> 0:22:41,461
如果电视上已经有正在播放的视频

395
00:22:41,662 --> 0:22:44,665
你的app在对其UI进行导航时

396
00:22:45,532 --> 0:22:47,134
中断那种体验

397
00:22:49,403 --> 0:22:52,239
因此当我正在收集上观看视频时

398
00:22:52,973 --> 0:22:55,175
我的视频app通常会留在前台

399
00:22:55,242 --> 0:22:57,344
因为我需要在屏幕上看它

400
00:22:59,680 --> 0:23:01,381
但当我在电视上进行隔空播放时

401
00:22:59,680 --> 0:23:01,381
但当我在电视上进行隔空播放时

402
00:23:01,448 --> 0:23:04,017
我现在可以自由使用

403
00:23:04,084 --> 0:23:06,820
比如查看我的消息或邮件或社交媒体

404
00:23:10,023 --> 0:23:13,560
如果我使用了

405
00:23:15,662 --> 0:23:17,931
当我离开那个app时

406
00:23:18,432 --> 0:23:21,568
因此我们一定要确保你的视频

407
00:23:23,470 --> 0:23:26,406
你可以通过在app的

408
00:23:26,473 --> 0:23:27,908
支持音频后台模式来实现

409
00:23:29,343 --> 0:23:31,578
并且你还可以把

410
00:23:31,645 --> 0:23:32,980
后台播放

411
00:23:33,981 --> 0:23:37,017
对于绝大多数视频app来说

412
00:23:37,084 --> 0:23:41,588
这就在你的app中

413
00:23:42,489 --> 0:23:44,091
包括在后台播放

414
00:23:46,360 --> 0:23:48,462
关于播放类别设备的另一点是

415
00:23:48,529 --> 0:23:49,863
它会中断其它媒体的播放

416
00:23:49,930 --> 0:23:53,967
当用户按下播放

417
00:23:54,034 --> 0:23:56,737
并开始播放你app中的一段

418
00:23:56,803 --> 0:23:59,306
确保你仅激活你的音频会话非常重要

419
00:24:01,008 --> 0:24:03,510
一旦你的app被激活

420
00:24:05,412 --> 0:24:07,781
不必仅仅因为用户暂停了视频

421
00:24:07,848 --> 0:24:10,350
就遣散你的音频会话

422
00:24:13,187 --> 0:24:16,690
现在媒体中断可在任意时间发生

423
00:24:16,990 --> 0:24:21,228
因此在AVAudioSession上

424
00:24:21,995 --> 0:24:25,999
当中断开始时

425
00:24:26,967 --> 0:24:29,736
当它结束时 请查看通知有效载荷

426
00:24:30,070 --> 0:24:33,941
并确保你检查了

427
00:24:34,541 --> 0:24:36,176
并使用那个值

428
00:24:36,510 --> 0:24:40,480
因此 仅当那个值返回真时自动恢复

429
00:24:42,182 --> 0:24:44,818
当电视上已经正在播放视频时

430
00:24:44,885 --> 0:24:47,621
测试你的app并启动它

431
00:24:47,688 --> 0:24:48,956
用于导航UI

432
00:24:49,156 --> 0:24:50,290
并确保不会发生

433
00:24:50,357 --> 0:24:52,693
你不希望发生的突然中断隔空播放

434
00:24:53,026 --> 0:24:56,196
或突然中断当前视频体验

435
00:24:57,598 --> 0:25:01,168
我想讲一些你可能会遇到的几个例子

436
00:24:57,598 --> 0:25:01,168
我想讲一些你可能会遇到的几个例子

437
00:25:03,003 --> 0:25:06,039
第一个 有时存在永远不应该进行

438
00:25:06,106 --> 0:25:10,043
因此如果在app启动时有启动动画

439
00:25:10,110 --> 0:25:12,279
那是我通过视频资产实现的启动动画

440
00:25:13,213 --> 0:25:16,950
你一定不想让启动动画中断当前体验

441
00:25:17,484 --> 0:25:21,221
对于用于其他类型的视觉丰富

442
00:25:21,421 --> 0:25:23,490
或在我app内促销内容的视频资产

443
00:25:24,458 --> 0:25:26,260
你一定要确保那些视频

444
00:25:26,326 --> 0:25:30,531
不会中断当前体验

445
00:25:30,898 --> 0:25:33,500
你可以通过把allowsExternalPlayback

446
00:25:35,869 --> 0:25:37,804
你的app仅应该

447
00:25:37,871 --> 0:25:40,474
在用户直接与该视频进行交互时

448
00:25:43,043 --> 0:25:44,144
为了那个目的

449
00:25:45,546 --> 0:25:48,549
你不应该仅仅因为你的app被启动

450
00:25:48,615 --> 0:25:51,285
就自动播放主要内容

451
00:25:53,453 --> 0:25:54,454
当提到媒体时

452
00:25:54,521 --> 0:25:57,824
人们总是应该能控制何时开始播放

453
00:25:58,825 --> 0:25:59,793
这一点非常重要

454
00:25:59,860 --> 0:26:02,629
我想讲一些例子 解释一下为什么

455
00:25:59,860 --> 0:26:02,629
我想讲一些例子 解释一下为什么

456
00:26:04,765 --> 0:26:07,000
在这里 我正在

457
00:26:07,367 --> 0:26:11,104
我有一个支持按需视频的视频app

458
00:26:11,171 --> 0:26:13,674
当app进入前台时

459
00:26:14,308 --> 0:26:15,943
我可以观看并自动播放直播电视频道

460
00:26:17,377 --> 0:26:19,446
因此如果我正在听音乐

461
00:26:19,713 --> 0:26:22,783
将会停止播放音乐

462
00:26:24,484 --> 0:26:26,587
也许我不是为了观看直播视频

463
00:26:26,653 --> 0:26:28,422
才启动那个app

464
00:26:30,724 --> 0:26:34,528
你一定要确保人们可以

465
00:26:34,761 --> 0:26:38,031
明确了解那不会中断他们当前的体验

466
00:26:39,833 --> 0:26:42,870
我将举例说明今年新添加的一个

467
00:26:45,372 --> 0:26:46,640
对于长格式视频app来说

468
00:26:46,707 --> 0:26:50,377
当视频开始播放时

469
00:26:51,578 --> 0:26:53,480
iOS可以推荐自动播放视频的电视

470
00:26:54,314 --> 0:26:56,917
当iOS为你做出推荐时

471
00:26:56,984 --> 0:27:00,687
告诉用户视频将在电视上自动播放

472
00:26:56,984 --> 0:27:00,687
告诉用户视频将在电视上自动播放

473
00:27:01,421 --> 0:27:04,758
人们可以轻触通知或状态栏图标

474
00:27:04,825 --> 0:27:06,827
来修改所推荐的目的地

475
00:27:08,729 --> 0:27:12,599
如果我有一款自动播放内容的app

476
00:27:13,433 --> 0:27:16,203
在我有机会真正查看通知

477
00:27:16,270 --> 0:27:20,140
很可能就会在电视上开始播放视频

478
00:27:21,275 --> 0:27:23,443
通过使用开始播放动作

479
00:27:24,545 --> 0:27:29,650
你可以为人们提供能决定何时

480
00:27:30,050 --> 0:27:32,286
那会创建一种优秀的媒体体验

481
00:27:33,020 --> 0:27:36,190
为了让大家更好地了解

482
00:27:36,523 --> 0:27:39,993
及其与智能隔空播放建议的集成

483
00:27:40,394 --> 0:27:42,863
我要邀请我同事

484
00:27:51,371 --> 0:27:52,239
谢谢Jonathan

485
00:27:52,306 --> 0:27:53,440
大家好

486
00:27:53,507 --> 0:27:54,541
我是Marty Pye

487
00:27:54,608 --> 0:27:56,276
我是Apple的

488
00:27:57,110 --> 0:27:59,012
今天我在这里要与大家分享一些

489
00:27:59,079 --> 0:28:02,282
关于我们嵌入到iOS 13中的

490
00:27:59,079 --> 0:28:02,282
关于我们嵌入到iOS 13中的

491
00:28:02,716 --> 0:28:05,752
以及你的长格式视频app

492
00:28:06,887 --> 0:28:10,057
首先我们要讲一下

493
00:28:11,024 --> 0:28:12,559
然后我们再讲讲

494
00:28:12,626 --> 0:28:16,597
我们针对长格式视频app创建了

495
00:28:16,997 --> 0:28:20,934
最后我要为大家介绍

496
00:28:23,370 --> 0:28:24,838
那么什么是长格式视频app？

497
00:28:25,339 --> 0:28:29,409
正如它的名字所暗示的那样

498
00:28:29,743 --> 0:28:31,211
都可以称为长格式视频app

499
00:28:31,278 --> 0:28:34,181
内容包含比如电影

500
00:28:34,615 --> 0:28:38,385
或电视类内容

501
00:28:39,686 --> 0:28:43,423
如果你的app主要是从社交媒体

502
00:28:43,757 --> 0:28:45,559
或其它类型的短视频片段播放内容

503
00:28:45,626 --> 0:28:48,095
那它就不是长格式视频app

504
00:28:50,230 --> 0:28:52,733
我们推荐你全面评估你的app

505
00:28:52,799 --> 0:28:55,602
从而决定它属于哪一类

506
00:28:56,470 --> 0:28:58,906
一旦你确定你的app

507
00:28:58,972 --> 0:29:02,543
对于此类app

508
00:28:58,972 --> 0:29:02,543
对于此类app

509
00:29:03,744 --> 0:29:05,145
让我们看一个例子

510
00:29:06,880 --> 0:29:10,617
假如你正在观看关于香蕉蛞蝓的一个

511
00:29:10,684 --> 0:29:14,354
并且你把这个内容从iPhone上

512
00:29:15,689 --> 0:29:20,994
iOS 13有个新功能 当朋友

513
00:29:21,295 --> 0:29:24,598
你可以继续并在本地设备上观看

514
00:29:24,932 --> 0:29:28,535
而不需要中断正在电视上播放的

515
00:29:31,305 --> 0:29:35,209
我们嵌入iOS 13中的

516
00:29:36,677 --> 0:29:38,712
如果用户要播放某些内容

517
00:29:38,779 --> 0:29:43,016
隔空播放路由系统会检测附近

518
00:29:43,717 --> 0:29:48,755
然后系统可能提示用户并建议

519
00:29:48,822 --> 0:29:50,791
或取决于系统的自信程度

520
00:29:50,858 --> 0:29:54,528
系统可能还会自动在那台设备上

521
00:29:55,762 --> 0:30:00,067
现在你了解了这些功能

522
00:29:55,762 --> 0:30:00,067
现在你了解了这些功能

523
00:30:00,801 --> 0:30:02,569
嗯 你需要做两件事

524
00:30:02,803 --> 0:30:06,673
第一件事是把你的app注册为

525
00:30:07,541 --> 0:30:08,742
这要如何实现呢？

526
00:30:09,409 --> 0:30:10,577
非常非常简单

527
00:30:11,512 --> 0:30:14,748
你所要做的就是在你app的

528
00:30:14,815 --> 0:30:18,018
添加AVInitialRouteSharingPolicy键

529
00:30:19,186 --> 0:30:20,654
通过把它设置到plist上

530
00:30:20,854 --> 0:30:22,589
在你创建任何播放对象之前

531
00:30:22,656 --> 0:30:24,992
以及在app启动的时候

532
00:30:25,292 --> 0:30:27,694
我们可以确保你的app

533
00:30:27,895 --> 0:30:29,463
跟系统上其它长格式视频

534
00:30:33,333 --> 0:30:35,135
为了利用隔空播放建议

535
00:30:35,202 --> 0:30:38,005
你需要做的第二件事是

536
00:30:38,071 --> 0:30:40,474
预备要播放的路由系统

537
00:30:41,942 --> 0:30:45,512
我首先要给你一个概念上的综述

538
00:30:45,579 --> 0:30:48,081
然后我们再从代码中实现它

539
00:30:51,752 --> 0:30:54,922
在你的app中

540
00:30:54,988 --> 0:30:58,292
用户们可以在不同内容之间进行滚动

541
00:30:58,759 --> 0:31:01,929
选择他们想要播放的内容并点击播放

542
00:30:58,759 --> 0:31:01,929
选择他们想要播放的内容并点击播放

543
00:31:02,696 --> 0:31:06,266
嗯 在这个转换中

544
00:31:06,466 --> 0:31:09,169
你应该预备好隔空播放路由系统

545
00:31:10,437 --> 0:31:12,506
当你预备路由系统时会发生什么？

546
00:31:13,807 --> 0:31:18,612
嗯 它可能会决定自动在本地设备上

547
00:31:18,679 --> 0:31:21,281
或把内容路由到外部屏幕上

548
00:31:21,481 --> 0:31:24,451
很可能是附近的隔空播放设备

549
00:31:24,518 --> 0:31:27,454
或如果你有连接到设备上的

550
00:31:29,323 --> 0:31:31,491
然而 取决于自信等级

551
00:31:31,658 --> 0:31:33,493
系统可能还会提示用户

552
00:31:33,727 --> 0:31:38,098
请求是否会在附近的隔空播放设备上

553
00:31:39,533 --> 0:31:41,535
然后取决于用户的选择

554
00:31:41,602 --> 0:31:43,270
然后控制会交还到你的app手上

555
00:31:43,670 --> 0:31:46,240
其中包含内容要在哪里播放的信息

556
00:31:48,876 --> 0:31:51,111
让我们看一下如何在代码中实现

557
00:31:52,479 --> 0:31:55,349
当用户决定点击播放时

558
00:31:55,782 --> 0:31:58,485
你应该

559
00:31:58,652 --> 0:32:00,087
调用

560
00:31:58,652 --> 0:32:00,087
调用

561
00:32:00,921 --> 0:32:02,823
这个方法接受一个完成处理器

562
00:32:04,124 --> 0:32:06,493
如果隔空播放可以-

563
00:32:06,560 --> 0:32:07,461
如果隔空播放路由系统可以做出

564
00:32:07,528 --> 0:32:10,697
将会立即调用这个完成处理器

565
00:32:11,598 --> 0:32:15,602
然而 可能还会给用户呈现一个提示

566
00:32:16,270 --> 0:32:18,906
请求用户是否要在附近的这台

567
00:32:19,406 --> 0:32:22,943
如果用户决定要在本地播放内容

568
00:32:23,410 --> 0:32:27,814
然后会调用你的完成处理器

569
00:32:29,583 --> 0:32:31,985
现在你可以继续

570
00:32:32,186 --> 0:32:34,221
比如AVPlayerViewController

571
00:32:34,821 --> 0:32:37,524
或你可以呈现你自己的

572
00:32:38,792 --> 0:32:42,229
相反 如果用户决定

573
00:32:42,429 --> 0:32:43,931
他们要在客厅隔空播放内容

574
00:32:44,431 --> 0:32:46,400
然后会调用你的完成处理器

575
00:32:46,466 --> 0:32:48,402
其路由选择类型为外部

576
00:32:49,469 --> 0:32:52,039
此时你有机会呈现

577
00:32:52,105 --> 0:32:54,875
某种自定义远程播放UI

578
00:32:55,142 --> 0:32:58,445
其控件可以专用于控制

579
00:32:58,512 --> 0:33:00,314
正在外部显示屏上播放的内容

580
00:32:58,512 --> 0:33:00,314
正在外部显示屏上播放的内容

581
00:33:00,781 --> 0:33:04,852
最后不要忘记处理这种情况

582
00:33:06,253 --> 0:33:09,356
为了测试你的app

583
00:33:09,523 --> 0:33:11,525
在各种不同情境中的表现

584
00:33:12,059 --> 0:33:16,363
我们在开发者设置中创建了一些

585
00:33:16,997 --> 0:33:19,399
如果你深入到开发者设置中

586
00:33:19,600 --> 0:33:22,002
你会发现这个新添加的隔空播放建议

587
00:33:23,103 --> 0:33:26,807
在这里 你可以选择三种不同的模式

588
00:33:28,509 --> 0:33:31,478
默认模式就是默认系统行为

589
00:33:33,080 --> 0:33:34,915
你还可以模式之间进行选择

590
00:33:35,349 --> 0:33:38,252
在这种模式下 系统总是会提示用户

591
00:33:38,318 --> 0:33:42,523
并请求是否应该在特定设备上

592
00:33:43,257 --> 0:33:45,058
或你可以强制系统进入一种模式

593
00:33:45,125 --> 0:33:48,896
总是会在特定设备上自动路由播放

594
00:33:49,463 --> 0:33:51,798
并且你还可以选择这应用于

595
00:33:52,032 --> 0:33:55,302
下面列出的附近的路由列表中的

596
00:33:56,003 --> 0:33:58,839
一旦你强制用户进入特定模式

597
00:33:59,206 --> 0:34:01,542
请一定要重设媒体服务

598
00:33:59,206 --> 0:34:01,542
请一定要重设媒体服务

599
00:34:02,910 --> 0:34:05,812
如果你担心隔空播放建议是否

600
00:34:05,879 --> 0:34:07,748
能处理每一种用户可能想要执行

601
00:34:07,814 --> 0:34:10,984
不用担心

602
00:34:11,251 --> 0:34:12,286
最终

603
00:34:12,953 --> 0:34:16,790
你仍能完全控制何时以及在哪里进行

604
00:34:17,324 --> 0:34:22,094
你总是可以选择修改

605
00:34:22,161 --> 0:34:24,364
你可以通过app内的

606
00:34:25,032 --> 0:34:27,601
或通过AVPlayerViewController内的

607
00:34:27,935 --> 0:34:29,469
或通过控制中心实现

608
00:34:31,271 --> 0:34:34,541
这些新功能使用户

609
00:34:34,608 --> 0:34:37,578
在他们所选择的设备上播放你的内容

610
00:34:38,478 --> 0:34:41,047
我们建议你们查看

611
00:34:41,481 --> 0:34:43,617
我们在一个简单的

612
00:34:43,784 --> 0:34:46,987
如何继承我们今天所描述的行为

613
00:34:47,821 --> 0:34:49,223
那么我们今天学到了什么？

614
00:34:49,989 --> 0:34:52,525
我们了解了如何通过

615
00:34:52,592 --> 0:34:54,061
把隔空播放选择器

616
00:34:54,862 --> 0:34:59,032
我们了解了如何通过

617
00:34:59,099 --> 0:35:00,834
处理和注册远程控制命令

618
00:34:59,099 --> 0:35:00,834
处理和注册远程控制命令

619
00:35:01,235 --> 0:35:05,038
以及如何用相关的“正在播放”信息

620
00:35:06,707 --> 0:35:09,409
我们了解了如何利用隔空播放多任务

621
00:35:09,476 --> 0:35:12,179
以及如何把你的app注册为一个

622
00:35:14,081 --> 0:35:17,651
最后我们了解了如何在播放之前

623
00:35:17,718 --> 0:35:20,120
从而充分利用隔空播放建议

624
00:35:21,955 --> 0:35:25,559
就是这些了 我想感谢你们大家

625
00:35:26,894 --> 0:35:28,996
我们已经迫不及待地要看到你们

626
00:35:29,062 --> 0:35:30,564
集成到你的app中了

627
00:35:31,265 --> 0:35:32,766
请享受余下的大会时光
