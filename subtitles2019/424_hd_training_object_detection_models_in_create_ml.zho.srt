1
00:00:00,506 --> 0:00:05,500
[音乐]

2
00:00:09,516 --> 0:00:16,096
[掌声]

3
00:00:16,596 --> 0:00:17,216
&gt;&gt; 上午好

4
00:00:18,406 --> 0:00:22,146
我是 Alex Brown

5
00:00:23,206 --> 0:00:24,736
今天 我们要

6
00:00:24,736 --> 0:00:27,366
展示用于物体检测的 Create ML

7
00:00:27,786 --> 0:00:30,726
在机器学习的新功能

8
00:00:30,726 --> 0:00:32,235
这一会议中 我们向你们

9
00:00:32,235 --> 0:00:35,003
介绍了全新的 Create ML App

10
00:00:36,076 --> 0:00:37,206
这是一种非常

11
00:00:37,206 --> 0:00:39,296
亲善好用的工具 可以帮助你

12
00:00:39,296 --> 0:00:40,786
在 App 中添加自定义

13
00:00:41,286 --> 0:00:42,466
机器学习模型

14
00:00:43,496 --> 0:00:45,906
本会议中 我们会

15
00:00:45,906 --> 0:00:47,756
更深入地介绍两个

16
00:00:47,756 --> 0:00:49,086
专门的模板

17
00:00:49,886 --> 0:00:51,796
分别是针对图像的

18
00:00:51,796 --> 0:00:54,456
物体检测 和声音分类

19
00:00:55,056 --> 0:01:00,046
我们先来看物体检测

20
00:00:55,056 --> 0:01:00,046
我们先来看物体检测

21
00:01:02,506 --> 0:01:05,506
物体检测可以让你的

22
00:01:05,506 --> 0:01:07,316
App 识别

23
00:01:07,316 --> 0:01:09,076
设备相机拍摄的

24
00:01:09,076 --> 0:01:10,856
真实物体 并根据

25
00:01:10,856 --> 0:01:13,226
它们是否出现

26
00:01:13,806 --> 0:01:16,246
在何位置 有何关系作出反应

27
00:01:17,116 --> 0:01:19,406
你可以在网上

28
00:01:19,406 --> 0:01:21,026
下载能够分辨

29
00:01:21,026 --> 0:01:22,176
物体所属大类的

30
00:01:22,176 --> 0:01:23,756
物体检测器

31
00:01:25,386 --> 0:01:27,086
但如果使用你自己的数据

32
00:01:27,086 --> 0:01:29,046
训练自定机器学习模型

33
00:01:29,636 --> 0:01:31,166
你就可以让你的 App

34
00:01:31,166 --> 0:01:32,506
分辨不同物体间的细微差别

35
00:01:33,046 --> 0:01:35,306
例如动物 手势

36
00:01:35,306 --> 0:01:38,816
路标 游戏符号等等

37
00:01:39,396 --> 0:01:43,056
如果你曾经使用过

38
00:01:43,316 --> 0:01:45,086
Apple 的机器学习

39
00:01:45,086 --> 0:01:47,936
你对图像分类就应该比较熟悉了

40
00:01:49,456 --> 0:01:51,896
你可以使用图像分类

41
00:01:51,896 --> 0:01:53,636
建立模型 为一幅图像

42
00:01:53,636 --> 0:01:56,146
提供简短描述

43
00:01:57,656 --> 0:01:59,626
我们可以将这幅图像描述为

44
00:02:00,166 --> 0:02:02,976
户外或公园 或者

45
00:02:02,976 --> 0:02:05,476
对特定 App 而言 描述为“一条狗”

46
00:02:08,056 --> 0:02:10,346
但要是我们想要获取

47
00:02:10,346 --> 0:02:11,936
场景中两个或以上的物体呢？

48
00:02:12,306 --> 0:02:16,286
这种情况下 物体检测

49
00:02:16,466 --> 0:02:18,086
就能派上用场

50
00:02:18,586 --> 0:02:20,616
它可以检测出照片里

51
00:02:20,826 --> 0:02:22,596
两个或以上的物体

52
00:02:22,596 --> 0:02:25,456
并提供位置 大小等信息

53
00:02:25,456 --> 0:02:26,726
还能给每个物体添加标签

54
00:02:27,646 --> 0:02:29,966
这样一来 你的 App 就可以

55
00:02:29,966 --> 0:02:31,806
运用设备用摄像头

56
00:02:32,096 --> 0:02:34,436
做更复杂的事 但为此

57
00:02:34,436 --> 0:02:36,136
我们要详细了解

58
00:02:36,136 --> 0:02:37,776
如何用图像

59
00:02:37,776 --> 0:02:39,676
训练你的模型

60
00:02:41,756 --> 0:02:45,296
要训练物体检测器

61
00:02:45,296 --> 0:02:47,796
你需要在图像上

62
00:02:47,796 --> 0:02:49,326
标记出希望

63
00:02:49,326 --> 0:02:50,836
模型检测的区域

64
00:02:51,606 --> 0:02:53,786
标记物体用的

65
00:02:53,786 --> 0:02:56,266
选框 起始点位于

66
00:02:56,266 --> 0:02:57,576
希望标记物体的中心

67
00:02:57,576 --> 0:03:00,116
并且有其大小

68
00:02:57,576 --> 0:03:00,116
并且有其大小

69
00:03:00,206 --> 0:03:03,066
高度和宽度

70
00:03:03,156 --> 0:03:05,376
单位均为像素

71
00:03:05,376 --> 0:03:07,306
定位取图像左上角为原点

72
00:03:08,136 --> 0:03:12,436
定位点是希望标记的物体中心

73
00:03:12,886 --> 0:03:14,806
你将所有的

74
00:03:14,806 --> 0:03:17,736
标注 标签 位置和大小

75
00:03:17,736 --> 0:03:20,356
打包在一个 JSON 文件中

76
00:03:20,356 --> 0:03:21,226
格式如下

77
00:03:21,946 --> 0:03:26,986
你可以从网页

78
00:03:26,986 --> 0:03:29,176
下载工具帮助实现 但要

79
00:03:29,466 --> 0:03:31,016
确保这些工具的坐标系统

80
00:03:31,016 --> 0:03:33,206
与 Create ML

81
00:03:34,506 --> 0:03:35,646
App 的相一致

82
00:03:35,966 --> 0:03:37,216
完成标注

83
00:03:37,256 --> 0:03:40,256
图像后 将文件

84
00:03:40,256 --> 0:03:41,716
拖拽到被标注图像

85
00:03:41,776 --> 0:03:44,686
所在的文件夹 就好了

86
00:03:45,896 --> 0:03:50,176
你的训练数据就准备就绪了

87
00:03:50,336 --> 0:03:52,576
现在我们知道如何

88
00:03:52,576 --> 0:03:54,436
展示用于物体检测的训练数据

89
00:03:55,176 --> 0:03:56,656
我们来看一个实例

90
00:03:58,266 --> 0:03:59,736
我的同事 Scott 有一个

91
00:03:59,736 --> 0:04:01,876
不错的想法 制作

92
00:03:59,736 --> 0:04:01,876
不错的想法 制作

93
00:04:01,876 --> 0:04:03,786
一款面向儿童的

94
00:04:03,786 --> 0:04:06,676
数学游戏 并使用真正的骰子

95
00:04:07,066 --> 0:04:08,376
生成问题

96
00:04:10,116 --> 0:04:11,346
你们可以在 228 号

97
00:04:11,346 --> 0:04:13,546
会议中了解更多 会议名为

98
00:04:14,046 --> 0:04:16,616
使用 Core ML 和 ARKit

99
00:04:16,616 --> 0:04:18,685
创建超棒的 App

100
00:04:19,236 --> 0:04:21,106
Scott 找我帮忙

101
00:04:21,106 --> 0:04:23,436
给他的游戏构建一个模型

102
00:04:23,436 --> 0:04:25,576
我提议用 Apple 的 Create ML App 

103
00:04:25,576 --> 0:04:27,716
来训练一个

104
00:04:27,716 --> 0:04:28,546
物体检测器

105
00:04:29,136 --> 0:04:34,036
Scott 早就把训练数据发给我了

106
00:04:35,346 --> 0:04:36,706
他找了一堆图像

107
00:04:36,736 --> 0:04:38,816
是角度不同 顶部点数不同的

108
00:04:38,816 --> 0:04:39,776
骰子的图像

109
00:04:39,776 --> 0:04:41,976
他标注了这些图像

110
00:04:42,406 --> 0:04:44,636
在顶面画了选框

111
00:04:44,636 --> 0:04:47,056
并且添加了标签

112
00:04:47,056 --> 0:04:51,816
标注了每个骰子上面的点数大小

113
00:04:52,476 --> 0:04:54,336
现在 数据就准备就绪了

114
00:04:54,906 --> 0:04:56,266
我们来看看 如何

115
00:04:56,266 --> 0:04:58,566
使用 Create ML App 来构建模型

116
00:05:07,056 --> 0:05:10,796
首先 我们来检查数据

117
00:05:12,326 --> 0:05:13,646
可以看到 我们把所有

118
00:05:13,646 --> 0:05:18,766
图像放在一个文件夹里 每张图像

119
00:05:18,856 --> 0:05:22,236
包含多个骰子

120
00:05:23,286 --> 0:05:24,416
我们把所有

121
00:05:24,416 --> 0:05:26,486
标注都放在一个 JSON 文件里

122
00:05:28,276 --> 0:05:31,286
现在 我来打开 Create ML App

123
00:05:31,836 --> 0:05:33,786
我可以从 Xcode 的

124
00:05:33,786 --> 0:05:36,286
菜单打开 也可以使用聚焦

125
00:05:40,696 --> 0:05:42,106
Create ML App

126
00:05:42,106 --> 0:05:44,226
打开后 就可以选择

127
00:05:44,226 --> 0:05:45,976
打开之前创建的文档

128
00:05:46,586 --> 0:05:50,666
我们来创建一个新项目

129
00:05:50,756 --> 0:05:52,376
首先 可以看到模板

130
00:05:52,376 --> 0:05:54,076
选择器 可以

131
00:05:54,076 --> 0:05:55,586
从一系列机器学习

132
00:05:55,586 --> 0:05:57,056
模型中选择

133
00:05:57,646 --> 0:05:59,756
这个案例中 我们选图像

134
00:06:00,006 --> 0:06:01,596
物体检测器

135
00:06:04,476 --> 0:06:06,156
我来给它命名 这样

136
00:06:06,156 --> 0:06:08,116
之后就能把它区分出来

137
00:06:08,116 --> 0:06:09,246
再添加一些细节

138
00:06:15,666 --> 0:06:17,976
现在 可以看到主窗口

139
00:06:17,976 --> 0:06:20,956
训练视图位于右侧

140
00:06:20,956 --> 0:06:22,706
它已经选择了一个

141
00:06:22,706 --> 0:06:25,196
训练标签页 准备接收我们的训练数据

142
00:06:25,926 --> 0:06:27,816
我也可以将它直接

143
00:06:27,816 --> 0:06:30,606
拖入训练数据区

144
00:06:31,166 --> 0:06:32,676
在训练数据之前

145
00:06:33,266 --> 0:06:34,686
App 便会检查

146
00:06:34,686 --> 0:06:36,416
数据 确保其

147
00:06:36,416 --> 0:06:38,566
格式正确 包含图像

148
00:06:38,656 --> 0:06:40,236
而非声音等其他类型的文件

149
00:06:40,506 --> 0:06:41,886
且饱含一个 JSON 文件

150
00:06:41,886 --> 0:06:43,626
能正确描述图像文件

151
00:06:43,926 --> 0:06:46,376
它同时还提供了一些初始数据

152
00:06:46,916 --> 0:06:48,226
可以看到 我们大概有

153
00:06:48,226 --> 0:06:51,526
1,000 幅图像 并且有

154
00:06:51,526 --> 0:06:54,236
六个类 对应

155
00:06:54,236 --> 0:06:57,356
骰子的六个面 非常好

156
00:06:59,576 --> 0:07:01,296
我们还可以在这个界面上做些其他的

157
00:06:59,576 --> 0:07:01,296
我们还可以在这个界面上做些其他的

158
00:07:01,446 --> 0:07:03,006
例如 我们可以提供

159
00:07:03,006 --> 0:07:04,786
测试数据 从而

160
00:07:04,786 --> 0:07:07,036
比较不同模型的表现

161
00:07:07,686 --> 0:07:09,816
同时 我们也可以设置高级

162
00:07:09,816 --> 0:07:11,276
参数 调整模型

163
00:07:11,276 --> 0:07:12,216
训练的方式

164
00:07:12,716 --> 0:07:13,956
但现在 这些

165
00:07:13,956 --> 0:07:15,266
还不需要担心 我们已经

166
00:07:15,266 --> 0:07:16,296
可以开始训练了

167
00:07:17,466 --> 0:07:19,036
我们按下开始按钮

168
00:07:19,036 --> 0:07:19,856
看看会发生什么

169
00:07:21,616 --> 0:07:22,976
训练开始了

170
00:07:23,826 --> 0:07:25,546
我们直接就会来到

171
00:07:25,546 --> 0:07:28,086
训练标签页 这里可以看到

172
00:07:28,086 --> 0:07:29,706
模型训练的进度

173
00:07:30,006 --> 0:07:32,316
这是展示损失的图表

174
00:07:32,506 --> 0:07:35,136
随着模型不断优化 损失也越来越少

175
00:07:35,486 --> 0:07:36,936
所以这条线最后

176
00:07:37,076 --> 0:07:41,226
应当到达图表底部

177
00:07:42,016 --> 0:07:43,906
物体检测训练所需时间

178
00:07:43,906 --> 0:07:45,896
比图像分类要长得多

179
00:07:46,506 --> 0:07:47,776
我估计这可能要花上

180
00:07:47,776 --> 0:07:49,336
至少一个小时

181
00:07:49,726 --> 0:07:51,466
我们不想这么干等

182
00:07:51,466 --> 0:07:53,976
所以我已经用这组数据训练好了一个模型

183
00:08:03,496 --> 0:08:05,486
好了 现在我可以

184
00:08:05,486 --> 0:08:06,966
跳转到之前看到的

185
00:08:06,966 --> 0:08:07,636
训练标签页

186
00:08:08,706 --> 0:08:10,396
可以看到 损失已经

187
00:08:10,396 --> 0:08:11,996
显著减少了 表明

188
00:08:11,996 --> 0:08:13,106
模型的性能随着

189
00:08:13,106 --> 0:08:14,706
训练时间增加

190
00:08:14,706 --> 0:08:15,466
而不断改善

191
00:08:16,506 --> 0:08:17,636
这个界面上还有其他东西

192
00:08:17,636 --> 0:08:18,416
我认为值得大家

193
00:08:18,416 --> 0:08:19,546
仔细一看

194
00:08:20,416 --> 0:08:23,336
首先是总体性能

195
00:08:23,686 --> 0:08:25,396
92% 这个数字

196
00:08:25,396 --> 0:08:26,606
对于物体检测器来说

197
00:08:26,606 --> 0:08:27,436
相当不错

198
00:08:29,116 --> 0:08:30,746
我们还想确认一下

199
00:08:30,746 --> 0:08:32,456
是否对所有类

200
00:08:32,456 --> 0:08:34,676
性能水平都较为一致

201
00:08:35,746 --> 0:08:38,446
从 1 到 6 的每个类

202
00:08:38,546 --> 0:08:41,015
性能都超过 90% 并且

203
00:08:41,015 --> 0:08:42,056
值都大致相等

204
00:08:42,645 --> 0:08:45,036
这很重要 因为

205
00:08:45,036 --> 0:08:46,096
这表明 模型处理

206
00:08:46,096 --> 0:08:48,076
骰子六个面时 性能一样好

207
00:08:48,806 --> 0:08:50,086
对骰子游戏来说

208
00:08:50,086 --> 0:08:52,586
公平性很重要 这一点也至关重要

209
00:08:53,136 --> 0:08:57,796
所以 数学上来讲

210
00:08:57,946 --> 0:08:59,396
这个模型性能不错

211
00:08:59,396 --> 0:09:01,886
但我们又该如何相信 它适用于

212
00:08:59,396 --> 0:09:01,886
但我们又该如何相信 它适用于

213
00:09:01,886 --> 0:09:03,446
我们的实例呢

214
00:09:04,316 --> 0:09:06,266
我们可以使用输出标签页

215
00:09:07,816 --> 0:09:09,416
Scott 发给我一张测试图像

216
00:09:09,416 --> 0:09:11,106
让我在把模型发回给他之前

217
00:09:11,106 --> 0:09:12,976
先测试一下 我们把这张图拖进来

218
00:09:20,036 --> 0:09:21,256
看起来还不错

219
00:09:21,896 --> 0:09:22,766
可以看到 场景中的

220
00:09:22,766 --> 0:09:24,966
五枚骰子都被识别了

221
00:09:25,196 --> 0:09:27,146
模型正确地在骰子的

222
00:09:27,146 --> 0:09:29,746
顶面画出了方框

223
00:09:29,746 --> 0:09:34,526
依次点击 6 1 5 我们

224
00:09:34,526 --> 0:09:36,386
可以看到每个标签

225
00:09:36,386 --> 0:09:37,546
置信度较高

226
00:09:39,456 --> 0:09:41,086
性能很不错

227
00:09:41,786 --> 0:09:43,726
所以 如果我要编写自己的

228
00:09:44,556 --> 0:09:46,436
App 的话 我就可以直接

229
00:09:46,466 --> 0:09:47,756
将生成的模型拖入

230
00:09:48,136 --> 0:09:49,456
在 Xcode 中使用

231
00:09:50,316 --> 0:09:51,926
我觉得 Scott 可能

232
00:09:51,926 --> 0:09:53,976
也在等着把这个模型用到他的 App 里

233
00:09:55,306 --> 0:09:57,396
但在此之前

234
00:09:57,396 --> 0:09:58,336
我还想再试一件事

235
00:10:00,556 --> 0:10:01,816
在我准备此次

236
00:10:01,846 --> 0:10:03,936
演示 鼓弄骰子 照相机

237
00:10:03,936 --> 0:10:06,146
和电脑的时候

238
00:10:06,146 --> 0:10:07,886
我九岁的儿子过来问

239
00:10:07,886 --> 0:10:09,116
我在干什么

240
00:10:10,276 --> 0:10:11,826
我解释之后

241
00:10:11,826 --> 0:10:13,226
他非常兴奋

242
00:10:13,226 --> 0:10:14,586
并且想出了一个游戏

243
00:10:14,586 --> 0:10:17,056
里面有熊 蝙蝠

244
00:10:17,056 --> 0:10:18,446
和其他动物

245
00:10:18,686 --> 0:10:20,456
它们共同合作 收集螺栓

246
00:10:20,456 --> 0:10:21,226
造一艘太空船

247
00:10:21,476 --> 0:10:23,586
要用不同颜色的骰子

248
00:10:23,586 --> 0:10:24,836
升级不同

249
00:10:24,836 --> 0:10:25,436
种类的怪物

250
00:10:26,946 --> 0:10:28,716
我们拿到了他的骰子

251
00:10:28,716 --> 0:10:30,786
并决定试一下 Scott 的模型

252
00:10:31,236 --> 0:10:34,636
他用的骰子有一点不同

253
00:10:35,206 --> 0:10:36,506
这些是角色扮演类游戏用的骰子

254
00:10:36,896 --> 0:10:40,556
我们来看看模型的性能

255
00:10:40,556 --> 0:10:43,816
到底如何使用 Mac 的连续互通相机

256
00:10:43,816 --> 0:10:46,336
功能 我可以直接从

257
00:10:47,316 --> 0:10:49,036
iPhone 导入照片

258
00:10:49,436 --> 0:10:50,546
这一点很棒

259
00:10:50,596 --> 0:10:52,186
因为这意味着我使用的

260
00:10:52,296 --> 0:10:53,536
屏幕和相机与你的 App

261
00:10:53,536 --> 0:10:54,736
使用的一样

262
00:10:57,176 --> 0:10:59,796
我来拍摄一张照片 选择 使用照片

263
00:11:00,346 --> 0:11:04,716
照片马上就被分析了

264
00:11:04,876 --> 0:11:06,276
我们来看一下

265
00:11:06,376 --> 0:11:07,556
到底发生了什么

266
00:11:08,216 --> 0:11:11,876
模型正确识别了两枚

267
00:11:12,026 --> 0:11:15,376
带点数的六面骰子 并且

268
00:11:15,376 --> 0:11:18,056
附上了正确的标签

269
00:11:18,476 --> 0:11:20,966
模型忽视了照片中

270
00:11:20,966 --> 0:11:23,306
大多数的骰子 除了

271
00:11:23,306 --> 0:11:24,246
那边的几枚

272
00:11:28,156 --> 0:11:29,596
模型识别出的它们的点数

273
00:11:29,596 --> 0:11:30,206
也是错误的

274
00:11:30,436 --> 0:11:31,986
为什么会这样

275
00:11:32,336 --> 0:11:35,726
问题在于预期的不同

276
00:11:36,596 --> 0:11:37,896
Scott 知道 要使用的

277
00:11:37,896 --> 0:11:39,726
都是白色六面骰子

278
00:11:39,806 --> 0:11:41,036
用点数标明数字

279
00:11:41,686 --> 0:11:43,636
我儿子对骰子的理解有点不同

280
00:11:44,006 --> 0:11:44,956
这些骰子都是彩色的

281
00:11:44,956 --> 0:11:46,406
它们不只有六个面

282
00:11:47,266 --> 0:11:49,246
该如何在我们的 App 中

283
00:11:49,246 --> 0:11:50,006
解决这个问题呢

284
00:11:51,006 --> 0:11:52,926
我们可以继续

285
00:11:52,926 --> 0:11:54,206
使用课堂上玩这个游戏

286
00:11:54,206 --> 0:11:56,316
可能会用到的骰子

287
00:11:56,316 --> 0:11:58,806
或者 我们可以用这些骰子

288
00:11:58,806 --> 0:12:00,536
训练这个模型

289
00:11:58,806 --> 0:12:00,536
训练这个模型

290
00:12:00,836 --> 0:12:02,766
有两种方法可以实现这一点

291
00:12:03,366 --> 0:12:05,166
我们可以决定

292
00:12:05,166 --> 0:12:06,726
只有六面带点骰子

293
00:12:06,726 --> 0:12:08,556
有效 而排除

294
00:12:08,556 --> 0:12:11,026
其他骰子 这样的话

295
00:12:11,276 --> 0:12:13,096
我们只需要拍摄

296
00:12:13,096 --> 0:12:14,666
包括两种骰子的照片

297
00:12:15,326 --> 0:12:17,286
只标记六面骰子就好

298
00:12:18,246 --> 0:12:20,466
或者 如果我们要编写

299
00:12:20,776 --> 0:12:23,516
先前说到的游戏 我们就要

300
00:12:23,516 --> 0:12:25,096
把其他类型的骰子加入模型

301
00:12:25,096 --> 0:12:26,546
将它们一并标记

302
00:12:27,386 --> 0:12:28,916
可以只标记数字

303
00:12:29,236 --> 0:12:30,946
或者添加额外标记

304
00:12:30,946 --> 0:12:32,076
记录颜色

305
00:12:32,806 --> 0:12:35,576
红 6 黑 4 等等

306
00:12:38,466 --> 0:12:40,626
我们把这个模型发给

307
00:12:40,626 --> 0:12:42,656
Scott 他就可以编写演示 App 了

308
00:12:43,266 --> 0:12:45,556
我可以使用分享按钮

309
00:12:45,556 --> 0:12:47,000
直接用邮件发送模型

310
00:12:54,226 --> 0:12:55,176
这样就行了

311
00:12:57,516 --> 0:13:01,500
[掌声]

312
00:12:57,516 --> 0:13:01,500
[掌声]

313
00:13:07,256 --> 0:13:08,396
&gt;&gt; 我们看到 你可以

314
00:13:08,396 --> 0:13:10,696
使用 Create ML App

315
00:13:10,696 --> 0:13:12,726
基于你收集的训练数据

316
00:13:12,726 --> 0:13:14,336
训练物体检测器

317
00:13:14,746 --> 0:13:16,526
有一些事情 希望

318
00:13:16,526 --> 0:13:18,726
大家在收集训练数据时予以考虑

319
00:13:19,626 --> 0:13:21,496
首先 每个类

320
00:13:21,496 --> 0:13:23,376
带有标注的图片数量

321
00:13:23,376 --> 0:13:25,116
应该均衡

322
00:13:26,416 --> 0:13:29,646
这样 算法就知道每一个类

323
00:13:29,646 --> 0:13:31,276
都同等重要 我们构建的模型

324
00:13:31,276 --> 0:13:32,556
才能对所有类

325
00:13:32,556 --> 0:13:35,746
有均衡的表现

326
00:13:37,456 --> 0:13:40,096
其次 你需要很多图片

327
00:13:40,266 --> 0:13:42,036
我建议 每个类中

328
00:13:42,036 --> 0:13:44,206
你希望模型识别的

329
00:13:44,246 --> 0:13:45,346
带标注的图片至少为

330
00:13:45,346 --> 0:13:47,546
30 张 如果

331
00:13:47,546 --> 0:13:49,256
性能不够好 或者

332
00:13:49,256 --> 0:13:51,086
识别对象特别复杂

333
00:13:51,086 --> 0:13:52,906
就进一步增加数量

334
00:13:53,186 --> 0:13:54,196
比如 对象不同面的

335
00:13:54,196 --> 0:13:56,000
外观不一样

336
00:13:59,376 --> 0:14:00,566
我们之前遇到的

337
00:13:59,376 --> 0:14:00,566
我们之前遇到的

338
00:14:00,566 --> 0:14:02,376
骰子颜色不同的问题怎么解决

339
00:14:02,946 --> 0:14:05,626
图像中的区别不止这一种

340
00:14:06,696 --> 0:14:09,036
我们建议你考虑

341
00:14:09,036 --> 0:14:11,086
你的 App 在现实中是如何运用的

342
00:14:11,776 --> 0:14:13,696
你的用户可能不会有

343
00:14:13,696 --> 0:14:15,656
工作室光照 标准骰子

344
00:14:15,656 --> 0:14:17,126
也没有一张精美的木质书桌

345
00:14:18,176 --> 0:14:20,486
你或许可以找朋友

346
00:14:20,486 --> 0:14:21,956
在不同情境下收集

347
00:14:21,956 --> 0:14:23,896
额外数据 例如

348
00:14:24,226 --> 0:14:26,296
室内灯光 室外自然光

349
00:14:26,296 --> 0:14:28,826
不同的背景 还可以

350
00:14:28,906 --> 0:14:30,406
添加一些你的模型

351
00:14:30,406 --> 0:14:31,956
用不到的物体

352
00:14:32,796 --> 0:14:34,856
这可以帮助模型适应普遍情况

353
00:14:39,046 --> 0:14:40,146
如果你之前用过物体分类器

354
00:14:40,146 --> 0:14:42,326
有一件事情你可能

355
00:14:42,326 --> 0:14:44,376
意想不到 那就是

356
00:14:44,376 --> 0:14:45,156
一个标签足矣

357
00:14:46,316 --> 0:14:48,186
这是因为 既然你将

358
00:14:48,186 --> 0:14:49,686
图片的一部分

359
00:14:49,686 --> 0:14:51,676
解释为狗 也就意味着

360
00:14:51,676 --> 0:14:53,516
其余部分不是 模型也会

361
00:14:53,516 --> 0:14:54,416
照此训练

362
00:14:55,506 --> 0:14:57,506
所以 比方说 你要

363
00:14:57,506 --> 0:14:59,156
编写一款 App 用它识别

364
00:14:59,156 --> 0:15:00,576
你冰箱里泡菜罐的

365
00:14:59,156 --> 0:15:00,576
你冰箱里泡菜罐的

366
00:15:00,576 --> 0:15:02,366
数量 你就不需要

367
00:15:02,366 --> 0:15:03,816
把其他调味品都标记出来

368
00:15:03,986 --> 0:15:05,476
模型自动就能归纳出

369
00:15:05,476 --> 0:15:06,616
那些不是咸菜罐

370
00:15:08,656 --> 0:15:12,646
模型构建完成后

371
00:15:12,646 --> 0:15:14,616
你如果想把这一

372
00:15:14,616 --> 0:15:15,716
功能加入你的

373
00:15:15,716 --> 0:15:18,326
App 我们建议你

374
00:15:18,326 --> 0:15:19,416
使用 Vision 框架

375
00:15:20,216 --> 0:15:21,926
Vision 框架能够

376
00:15:21,926 --> 0:15:24,016
将实时相机和视频

377
00:15:24,396 --> 0:15:27,000
无缝整合进你的模型工作流

378
00:15:29,346 --> 0:15:30,996
这就是训练物体检测器

379
00:15:30,996 --> 0:15:32,446
需要知道的事项

380
00:15:33,516 --> 0:15:39,960
[掌声]
