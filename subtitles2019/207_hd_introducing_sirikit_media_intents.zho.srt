1
00:00:06,406 --> 0:00:09,209
（关于SiriKit Media Intent的介绍）

2
00:00:18,418 --> 0:00:20,521
嗨 我是Danny Mandel

3
00:00:20,587 --> 0:00:23,323
欢迎参加关于

4
00:00:24,358 --> 0:00:27,895
针对音频用例向SiriKit中

5
00:00:28,462 --> 0:00:30,697
能与大家分享相关信息

6
00:00:33,200 --> 0:00:34,535
我们要讲哪些内容呢？

7
00:00:35,302 --> 0:00:39,439
我们要做的第一件事就是介绍新的

8
00:00:39,907 --> 0:00:41,041
及其功能

9
00:00:41,108 --> 0:00:42,309
（新SiriKit Media Intent

10
00:00:42,376 --> 0:00:45,279
然后讲在你的app上

11
00:00:45,345 --> 0:00:46,914
处理SiriKit Media

12
00:00:47,948 --> 0:00:49,016
最后

13
00:00:49,082 --> 0:00:51,318
讲一些最佳范例

14
00:00:51,952 --> 0:00:54,054
你可以按照范例

15
00:00:54,454 --> 0:00:56,590
当向app中添加

16
00:01:00,060 --> 0:01:03,997
今年我们允许你们

17
00:01:04,063 --> 0:01:05,532
通过SiriKit Media Intent

18
00:01:06,200 --> 0:01:09,503
我们认为你们一定会喜欢

19
00:01:09,570 --> 0:01:10,571
你通过SiriKit Media Intent

20
00:01:11,438 --> 0:01:12,806
创建到app中的

21
00:01:13,173 --> 0:01:15,876
你们可以实现比如播放音频、

22
00:01:16,577 --> 0:01:19,279
更新品味介绍、添加到收藏

23
00:01:19,680 --> 0:01:20,547
和搜索

24
00:01:21,215 --> 0:01:24,384
这意味着

25
00:01:24,451 --> 0:01:26,119
来处理Siri功能

26
00:01:26,987 --> 0:01:29,623
可以说比如“在我的app中

27
00:01:30,324 --> 0:01:33,360
那会立即在你的app中

28
00:01:35,662 --> 0:01:36,597
（新SiriKit Media Intent）

29
00:01:36,663 --> 0:01:39,466
让我们来看看新的

30
00:01:39,533 --> 0:01:40,467
及其功能

31
00:01:43,036 --> 0:01:44,805
共有四个

32
00:01:45,806 --> 0:01:48,141
第一个Intent是

33
00:01:49,142 --> 0:01:52,079
INPlayMediaIntent

34
00:01:52,145 --> 0:01:55,249
“在我的app中播放

35
00:01:56,049 --> 0:01:59,753
现在你可能记得

36
00:01:59,820 --> 0:02:01,755
Media Playback

37
00:01:59,820 --> 0:02:01,755
Media Playback

38
00:02:02,256 --> 0:02:03,290
今年

39
00:02:03,357 --> 0:02:06,293
我们把SiriKit功能添加到了

40
00:02:08,562 --> 0:02:10,830
下一个Intent是

41
00:02:11,832 --> 0:02:13,267
INAddMediaIntent

42
00:02:13,333 --> 0:02:16,937
允许人们向他们的播放列表

43
00:02:18,405 --> 0:02:19,673
举个例子

44
00:02:20,274 --> 0:02:22,809
“把这首歌添加到

45
00:02:25,112 --> 0:02:27,447
我们有

46
00:02:27,814 --> 0:02:30,651
允许人们表达对媒体项的亲密关系

47
00:02:31,552 --> 0:02:33,854
人们可以通过说类似的

48
00:02:34,254 --> 0:02:35,088
“我喜欢这首歌”

49
00:02:37,090 --> 0:02:39,660
最后我们有

50
00:02:40,260 --> 0:02:43,063
让人们搜索你的app中的

51
00:02:43,830 --> 0:02:46,834
比如“从我的app中

52
00:02:50,137 --> 0:02:52,506
我们谈谈SiriKit Media中

53
00:02:53,473 --> 0:02:56,176
SiriKit Media

54
00:02:56,243 --> 0:02:57,411
第一个类型就是音乐

55
00:02:58,045 --> 0:02:59,346
并且音乐支持…

56
00:02:59,913 --> 0:03:01,215
你可以说比如

57
00:02:59,913 --> 0:03:01,215
你可以说比如

58
00:03:01,481 --> 0:03:03,483
“在我的app中播放歌曲

59
00:03:04,751 --> 0:03:05,919
除了歌曲

60
00:03:06,186 --> 0:03:07,888
我们还支持专辑、歌手、

61
00:03:07,955 --> 0:03:09,857
播放列表、流派等等 还有很多

62
00:03:11,391 --> 0:03:14,194
那么你可以查看关于

63
00:03:14,528 --> 0:03:16,363
以获取所支持的

64
00:03:16,964 --> 0:03:19,466
并且我们希望你尽可能多地采用它们

65
00:03:20,000 --> 0:03:22,703
从而在你的app中

66
00:03:23,704 --> 0:03:25,472
此外我们还有播放控制

67
00:03:25,906 --> 0:03:28,108
比如随机播放、重复播放

68
00:03:29,510 --> 0:03:32,613
人们可以说比如“请在我的app中

69
00:03:32,946 --> 0:03:35,849
或“在我的app中下一首播放

70
00:03:38,919 --> 0:03:40,921
所支持的下一个音频类型是播客

71
00:03:41,955 --> 0:03:44,291
你可以通过说

72
00:03:44,691 --> 0:03:47,027
Stuff You Should Know”

73
00:03:47,961 --> 0:03:48,962
此外

74
00:03:49,029 --> 0:03:53,066
人们还可以控制

75
00:03:54,001 --> 0:03:55,702
人们可以说比如

76
00:03:55,769 --> 0:03:56,803
“在我的app播客中播放

77
00:03:56,870 --> 0:03:58,605
Stuff You Should Know

78
00:03:58,939 --> 0:04:02,609
或“在我的app播客中双倍速播放最新一集

79
00:03:58,939 --> 0:04:02,609
或“在我的app播客中双倍速播放最新一集

80
00:04:04,411 --> 0:04:05,612
（有声书）

81
00:04:05,679 --> 0:04:07,481
接下来我们支持有声书

82
00:04:08,348 --> 0:04:09,917
人们可以说比如

83
00:04:10,317 --> 0:04:11,985
“在我的app中播放有声书

84
00:04:12,719 --> 0:04:13,787
跟播客一样

85
00:04:14,154 --> 0:04:16,322
以指定速度开始播放

86
00:04:16,390 --> 0:04:17,524
当请求播放有声书时

87
00:04:19,660 --> 0:04:20,961
最后我们支持收音机

88
00:04:21,862 --> 0:04:25,199
收音机支持允许人们

89
00:04:25,499 --> 0:04:26,567
在你的收音机播放app中

90
00:04:27,301 --> 0:04:29,903
比如“在我的app中

91
00:04:32,706 --> 0:04:35,876
如果你app的媒体类型不含在

92
00:04:36,343 --> 0:04:39,880
你仍可以采用SiriKit Media Intent

93
00:04:40,914 --> 0:04:42,282
人们可以说比如

94
00:04:42,683 --> 0:04:43,984
“在我的app中播放搜索条目”

95
00:04:44,384 --> 0:04:46,486
你将可以在你的app中

96
00:04:47,487 --> 0:04:49,289
漏掉的唯一一个功能

97
00:04:49,356 --> 0:04:51,225
就是对强烈解析的媒体类型的支持

98
00:04:51,758 --> 0:04:53,360
假如你有一个自然声音app

99
00:04:53,894 --> 0:04:56,196
然后你说“在我的app中播放

100
00:04:56,530 --> 0:04:58,565
或“在我的app中播放

101
00:04:59,199 --> 0:05:01,702
Siri不知道那是两种

102
00:04:59,199 --> 0:05:01,702
Siri不知道那是两种

103
00:05:02,236 --> 0:05:07,307
因此你会获得一个哺乳动物叫声

104
00:05:08,008 --> 0:05:09,243
你可以查找并播放它

105
00:05:09,309 --> 0:05:11,512
因此不像其它类型那样有组织

106
00:05:11,812 --> 0:05:12,913
但仍然支持

107
00:05:16,550 --> 0:05:19,019
让我们看看如何在SiriKit中

108
00:05:19,086 --> 0:05:20,387
（Siri请求处理）

109
00:05:21,822 --> 0:05:25,792
请求SiriKit Media

110
00:05:26,093 --> 0:05:29,129
就是SiriKit Media Intent

111
00:05:30,197 --> 0:05:33,634
因此发生在Intent

112
00:05:33,967 --> 0:05:36,937
都遵守

113
00:05:38,305 --> 0:05:40,007
SiriKit请求处理的具体信息

114
00:05:40,073 --> 0:05:42,643
在之前的WWDC演讲中已具体讲过

115
00:05:43,243 --> 0:05:46,947
我推荐你回顾那些演讲

116
00:05:47,381 --> 0:05:50,150
获取更多关于SiriKit

117
00:05:53,187 --> 0:05:55,923
现在让我们看看

118
00:05:56,390 --> 0:05:57,558
典型请求会发生什么？

119
00:05:58,992 --> 0:06:01,228
当人们说“在我的app中

120
00:05:58,992 --> 0:06:01,228
当人们说“在我的app中

121
00:06:01,528 --> 0:06:02,829
就开始请求处理

122
00:06:03,597 --> 0:06:05,899
并且Siri会识别

123
00:06:06,533 --> 0:06:08,068
它会启动Intent扩展

124
00:06:08,802 --> 0:06:11,104
SiriKit请求处理

125
00:06:11,939 --> 0:06:13,440
Resolve、

126
00:06:16,009 --> 0:06:18,145
请求处理的第一个步骤是

127
00:06:19,112 --> 0:06:20,247
在媒体域中

128
00:06:20,314 --> 0:06:24,051
Resolve步骤是获取Intent的

129
00:06:24,718 --> 0:06:26,887
并在app的目录中进行搜索

130
00:06:27,888 --> 0:06:31,758
Resolve的输出是要播放的

131
00:06:33,060 --> 0:06:35,429
否则如果我们没有找到匹配项

132
00:06:36,163 --> 0:06:37,397
或发生了另一个报错

133
00:06:37,464 --> 0:06:39,399
我们会返回一个

134
00:06:39,733 --> 0:06:42,269
那会告诉Siri播放

135
00:06:45,272 --> 0:06:47,574
请求处理的下一步是

136
00:06:48,909 --> 0:06:51,912
一般我们不鼓励

137
00:06:52,813 --> 0:06:54,581
通过查看在我们自己的

138
00:06:54,848 --> 0:06:56,550
我们发现使用Confirm

139
00:06:57,184 --> 0:07:00,354
实际上会降低

140
00:06:57,184 --> 0:07:00,354
实际上会降低

141
00:07:00,888 --> 0:07:03,357
因此我们不推荐

142
00:07:05,692 --> 0:07:08,395
请求处理的最后一个步骤是

143
00:07:09,229 --> 0:07:10,864
对于INPlayMediaIntent

144
00:07:11,598 --> 0:07:12,933
这一步非常简单

145
00:07:13,000 --> 0:07:15,002
因为我们会返回响应代码

146
00:07:15,302 --> 0:07:18,338
“handle an app”

147
00:07:21,708 --> 0:07:23,477
在app后台启动过程中

148
00:07:23,810 --> 0:07:26,880
我们会像通常在app中所做的那样

149
00:07:28,081 --> 0:07:29,383
唯一棘手的部分就是测试

150
00:07:30,050 --> 0:07:31,485
你要确保全部都会播放

151
00:07:31,552 --> 0:07:33,086
因为屏幕上没有任何UI

152
00:07:33,587 --> 0:07:35,322
你还要确保

153
00:07:35,389 --> 0:07:36,857
针对各种情况都进行了测试

154
00:07:37,157 --> 0:07:38,625
比如在CarPlay车载中

155
00:07:39,126 --> 0:07:40,694
或当你戴着耳机时

156
00:07:40,761 --> 0:07:42,396
那么现在我们了解了

157
00:07:42,696 --> 0:07:44,298
关于SiriKit请求处理的

158
00:07:44,798 --> 0:07:47,034
让我们看一个简化了的

159
00:07:48,168 --> 0:07:49,369
需要注意的第一件事就是

160
00:07:49,736 --> 0:07:51,438
参数稍微有点不一样

161
00:07:52,039 --> 0:07:53,307
但Resolve逻辑一样

162
00:07:53,607 --> 0:07:55,876
全部四个Media Intent

163
00:07:56,710 --> 0:07:58,946
Resolve的工作是

164
00:07:59,580 --> 0:08:02,049
全部四个Intent的

165
00:07:59,580 --> 0:08:02,049
全部四个Intent的

166
00:08:04,051 --> 0:08:06,920
因此我们要把一个结果初始化为

167
00:08:07,521 --> 0:08:10,858
那会告诉Siri说出恰当的

168
00:08:10,924 --> 0:08:12,793
如果我们没有在app目录中

169
00:08:15,462 --> 0:08:18,365
INMediaSearch

170
00:08:18,432 --> 0:08:19,833
包含关于用户

171
00:08:20,701 --> 0:08:24,404
INMediaSearch

172
00:08:24,471 --> 0:08:25,439
全部音频相关的查询

173
00:08:26,340 --> 0:08:29,009
我们在Resolve步骤中的工作

174
00:08:29,610 --> 0:08:30,711
找到单一媒体项并播放

175
00:08:31,612 --> 0:08:32,746
在这个例子中

176
00:08:33,013 --> 0:08:37,083
我们要做的第一件事就是

177
00:08:39,385 --> 0:08:42,623
然后要从app目录中

178
00:08:44,992 --> 0:08:47,861
我们要在媒体搜索中

179
00:08:48,128 --> 0:08:50,664
从而与媒体项的名称属性进行对比

180
00:08:51,298 --> 0:08:55,068
我们稍后再具体谈这个

181
00:08:55,135 --> 0:08:56,937
但在你已发布的app中

182
00:08:57,237 --> 0:08:58,272
这并不是你真正想要去做的

183
00:09:00,774 --> 0:09:02,843
但如果我们实现了精确的名称匹配

184
00:09:03,410 --> 0:09:04,745
我们找到了要播放的媒体项

185
00:09:05,279 --> 0:09:08,782
我们会使用那个媒体项的属性

186
00:09:10,450 --> 0:09:13,954
然后调用完成处理器并继续处理

187
00:09:16,223 --> 0:09:17,891
在这种情况下 正如我们所说过的

188
00:09:18,492 --> 0:09:19,860
处理过程非常短

189
00:09:20,394 --> 0:09:23,931
因为我们所要做的只是返回

190
00:09:24,565 --> 0:09:27,267
这将会开始在后台启动我们的app

191
00:09:28,202 --> 0:09:30,270
现在让我们来看看app的后台启动

192
00:09:32,506 --> 0:09:34,775
我们在app委托中实施的

193
00:09:35,108 --> 0:09:36,643
用于支持后台app启动的方法

194
00:09:36,710 --> 0:09:39,813
就是application:handle:

195
00:09:41,882 --> 0:09:43,884
再一次 这是一个过程很短的实施

196
00:09:45,586 --> 0:09:48,422
我们要从intent中

197
00:09:48,789 --> 0:09:49,790
读取要播放的第一个媒体项

198
00:09:51,024 --> 0:09:53,760
然后我们只需要像通常那样

199
00:09:55,796 --> 0:09:58,298
最后我们会调用完成处理器

200
00:09:58,565 --> 0:10:00,033
返回成功响应代码

201
00:09:58,565 --> 0:10:00,033
返回成功响应代码

202
00:10:02,369 --> 0:10:04,104
现在我们已经了解了新Intent

203
00:10:04,171 --> 0:10:05,439
以及它们是如何共同起作用的

204
00:10:05,839 --> 0:10:07,341
我要把舞台交给

205
00:10:07,841 --> 0:10:10,110
他将在实际的app中

206
00:10:17,718 --> 0:10:18,685
谢谢Danny

207
00:10:20,821 --> 0:10:22,422
向当前Media app中添加

208
00:10:22,489 --> 0:10:24,258
SiriKit Media Intent

209
00:10:24,658 --> 0:10:26,126
这是我们的音乐app

210
00:10:26,393 --> 0:10:28,195
要添加Siri支持

211
00:10:28,862 --> 0:10:30,364
添加Siri扩展目标

212
00:10:30,430 --> 0:10:32,366
添加一些方法 然后

213
00:10:33,100 --> 0:10:35,002
我们将立即处理Siri请求

214
00:10:36,236 --> 0:10:37,404
要添加Intent的扩展

215
00:10:37,471 --> 0:10:38,872
我们所要做的就是打开File

216
00:10:39,373 --> 0:10:40,741
New Target…

217
00:10:42,910 --> 0:10:45,646
选择Intent Extension

218
00:10:46,246 --> 0:10:47,314
给它命名…

219
00:10:50,684 --> 0:10:51,618
然后点击完成

220
00:10:53,720 --> 0:10:56,423
Xcode将为我们创建

221
00:10:57,257 --> 0:11:01,762
我们要继续并向app中

222
00:10:57,257 --> 0:11:01,762
我们要继续并向app中

223
00:11:05,999 --> 0:11:08,802
然后打开

224
00:11:09,403 --> 0:11:12,406
并且添加我们所支持的Intent

225
00:11:12,472 --> 0:11:16,944
在这个例子中 我们将支持

226
00:11:18,779 --> 0:11:20,314
和INAddMediaIntent

227
00:11:27,054 --> 0:11:28,589
我们继续并选择音乐类型

228
00:11:30,657 --> 0:11:33,327
在这里有一些

229
00:11:33,393 --> 0:11:34,828
从而确保文件加入编译过程

230
00:11:40,734 --> 0:11:44,972
我们要确保打开适当的代码签名

231
00:11:46,773 --> 0:11:48,275
现在我们将转向Intent处理器

232
00:11:49,142 --> 0:11:53,013
我们所要做的就是添加

233
00:11:56,750 --> 0:11:59,286
然后我们要为Resolve

234
00:12:02,589 --> 0:12:03,757
和Handle方法加入一些存根

235
00:12:05,292 --> 0:12:06,460
在这个例子中

236
00:12:06,527 --> 0:12:09,429
我们只需要从

237
00:12:10,130 --> 0:12:11,331
返回Unsupported

238
00:12:11,398 --> 0:12:12,966
那将导致Siri说

239
00:12:13,033 --> 0:12:14,434
它没有找到搜索项

240
00:12:15,235 --> 0:12:16,803
那么我们要继续并尝试运行一下

241
00:12:16,870 --> 0:12:17,938
这正是我们想要的结果

242
00:12:28,882 --> 0:12:31,251
那么Siri说了

243
00:12:32,386 --> 0:12:34,321
由于我们从Intent处理器中

244
00:12:35,155 --> 0:12:36,123
返回了Unsupported…

245
00:12:37,357 --> 0:12:39,960
那么我们现在要做的就是继续并…

246
00:12:40,460 --> 0:12:42,663
把这个挂钩到现有的搜索实施上

247
00:12:49,436 --> 0:12:51,338
在这种情况下 我们要做的第一件事

248
00:12:51,405 --> 0:12:53,207
就是决定用户正在搜索什么

249
00:12:53,273 --> 0:12:57,010
在这个简单的例子中

250
00:13:01,315 --> 0:13:02,416
在方法中

251
00:13:02,916 --> 0:13:04,251
我们继续并Resolve

252
00:13:05,752 --> 0:13:06,720
媒体项

253
00:13:24,037 --> 0:13:25,606
一旦我们Resolve媒体项

254
00:13:25,672 --> 0:13:27,975
然后我们将返回到Handle方法

255
00:13:28,976 --> 0:13:33,013
并返回handleInApp方法

256
00:13:33,080 --> 0:13:35,349
那将导致在后台启动app

257
00:13:35,415 --> 0:13:37,684
为此 我们要切换到app委托中

258
00:13:38,619 --> 0:13:41,822
添加

259
00:13:42,456 --> 0:13:45,659
这将提取我们所传递的

260
00:13:45,726 --> 0:13:47,227
我们在上一个步骤中找到了它

261
00:13:47,728 --> 0:13:48,929
并把它传递给播放

262
00:13:49,596 --> 0:13:52,666
我们要继续并播放

263
00:13:59,439 --> 0:14:01,775
那么你可以看到

264
00:13:59,439 --> 0:14:01,775
那么你可以看到

265
00:14:01,842 --> 0:14:05,612
它找到了INMediaItem

266
00:14:05,679 --> 0:14:06,747
然后开始播放

267
00:14:07,514 --> 0:14:09,883
那么现在我们已经完成了

268
00:14:09,950 --> 0:14:11,185
并给添加方法添加支持呢？

269
00:14:12,920 --> 0:14:15,289
为此 我们只需要对它进行扩展

270
00:14:16,390 --> 0:14:18,258
INAddMediaIntent

271
00:14:23,764 --> 0:14:26,033
然后我们要添加用于查找

272
00:14:26,867 --> 0:14:28,368
和处理添加方法的方法

273
00:14:29,303 --> 0:14:31,572
你可能在这里注意到

274
00:14:31,638 --> 0:14:34,975
和用于播放的Resolve方法

275
00:14:36,977 --> 0:14:40,480
此外 对于添加 我们还有一个

276
00:14:40,547 --> 0:14:42,115
它用于决定用户是否

277
00:14:42,182 --> 0:14:44,084
尝试添加到媒体库或添加到播放列表

278
00:14:45,185 --> 0:14:47,054
如果是添加到播放列表

279
00:14:47,120 --> 0:14:49,823
比如“返回未找到的播放列表名称”

280
00:14:50,190 --> 0:14:53,894
如果用户指定的播放列表

281
00:14:57,598 --> 0:14:59,733
同时 对于添加的不同之处在于

282
00:14:59,800 --> 0:15:03,036
没有理由返回到app比如开始播放

283
00:14:59,800 --> 0:15:03,036
没有理由返回到app比如开始播放

284
00:15:03,103 --> 0:15:04,838
就像我们在Play Media Intent中

285
00:15:05,372 --> 0:15:07,341
在这种情况下 我们要做的就是

286
00:15:07,407 --> 0:15:09,042
在扩展中处理一切

287
00:15:09,843 --> 0:15:12,079
我们有找到的媒体项

288
00:15:12,145 --> 0:15:15,582
我们只需要继续并使用app方法

289
00:15:15,649 --> 0:15:17,451
添加到媒体库或播放列表

290
00:15:18,018 --> 0:15:19,820
在这种情况下 我们只需要使用

291
00:15:19,887 --> 0:15:21,355
媒体播放器工具来添加它即可

292
00:15:22,122 --> 0:15:24,258
那么让我们继续并查看

293
00:15:37,304 --> 0:15:39,506
因此它与添加到播放列表中的媒体项

294
00:15:39,573 --> 0:15:40,674
以及播放列表名称通讯

295
00:15:40,741 --> 0:15:43,343
因为那些是在请求中指定的

296
00:15:44,912 --> 0:15:48,182
正如你所看到的

297
00:15:48,248 --> 0:15:51,285
我们非常想看到你们

298
00:15:51,351 --> 0:15:52,386
谢谢

299
00:15:53,587 --> 0:15:54,655
Danny 舞台交还给你

300
00:15:57,758 --> 0:15:58,892
谢谢Ryan

301
00:15:58,959 --> 0:16:00,194
那么Ryan给我们演示了什么？

302
00:15:58,959 --> 0:16:00,194
那么Ryan给我们演示了什么？

303
00:16:00,827 --> 0:16:04,031
首先他演示了如何向app中

304
00:16:04,665 --> 0:16:07,534
然后他演示了如何指定

305
00:16:07,968 --> 0:16:09,069
及所支持的媒体类型

306
00:16:09,770 --> 0:16:12,272
最后他演示了如何对

307
00:16:12,606 --> 0:16:14,942
INPlayMediaIntent

308
00:16:15,309 --> 0:16:16,710
实施Resolve和Handle

309
00:16:17,110 --> 0:16:21,315
我们可以立即开始使用Siri

310
00:16:22,015 --> 0:16:22,983
（演示总结）

311
00:16:23,050 --> 0:16:23,884
（最佳实践）

312
00:16:23,951 --> 0:16:26,553
让我们看一些最佳范例

313
00:16:26,854 --> 0:16:28,222
你可以在采用SiriKit Media时

314
00:16:28,856 --> 0:16:30,190
（添加SiriKit支持捷径）

315
00:16:30,691 --> 0:16:33,493
如果你已经为媒体播放

316
00:16:33,560 --> 0:16:34,628
我们有个好消息

317
00:16:35,095 --> 0:16:37,731
对于后台启动app来说

318
00:16:37,798 --> 0:16:39,099
SiriKit Media使用的

319
00:16:40,267 --> 0:16:43,437
运行在之前添加的

320
00:16:43,504 --> 0:16:45,105
不要求Intent分辨率

321
00:16:46,006 --> 0:16:47,941
而SiriKit的确要求有

322
00:16:48,542 --> 0:16:50,677
因此你需要添加的两个东西是…

323
00:16:51,044 --> 0:16:52,980
Resolve方法

324
00:16:53,614 --> 0:16:55,616
并且你需要在Xcode中更新

325
00:16:55,682 --> 0:16:57,284
所支持的媒体类型的

326
00:16:58,051 --> 0:17:00,220
从而Siri就了解你的app

327
00:16:58,051 --> 0:17:00,220
从而Siri就了解你的app

328
00:17:01,588 --> 0:17:03,790
Extensions Handle

329
00:17:03,857 --> 0:17:06,993
在两个实施和后台启动app之间

330
00:17:07,828 --> 0:17:10,531
app委托的

331
00:17:10,830 --> 0:17:13,967
只要你为媒体项使用了同样的标识符

332
00:17:15,935 --> 0:17:17,404
让我们看看那看起来怎么样

333
00:17:17,938 --> 0:17:19,873
这是去年的捷径实施

334
00:17:20,440 --> 0:17:22,075
你要注意没有Resolve方法

335
00:17:22,142 --> 0:17:23,210
但其余都一样

336
00:17:23,777 --> 0:17:25,712
为了从捷径打开SiriKit

337
00:17:26,880 --> 0:17:29,449
我们只需要添加Resolve方法

338
00:17:29,516 --> 0:17:30,617
（Siri请求处理）

339
00:17:31,718 --> 0:17:35,055
现在让我们谈谈如何

340
00:17:35,122 --> 0:17:36,056
向Apple Watch

341
00:17:37,558 --> 0:17:39,660
在watchOS上

342
00:17:40,294 --> 0:17:44,464
实现方式是在Intent的扩展中

343
00:17:44,531 --> 0:17:46,567
从Handle方法中

344
00:17:46,967 --> 0:17:48,669
返回INPlayMediaIntent响应代码

345
00:17:50,204 --> 0:17:52,139
这个代码将在前台启动app

346
00:17:52,673 --> 0:17:55,409
并在app中把Intent转给

347
00:17:58,478 --> 0:17:59,746
你要注意app的Handle方法

348
00:17:59,813 --> 0:18:01,548
看起来与iOS上的

349
00:17:59,813 --> 0:18:01,548
看起来与iOS上的

350
00:18:02,249 --> 0:18:04,084
Signature方法有点不一样

351
00:18:04,484 --> 0:18:06,353
但你需要从

352
00:18:06,420 --> 0:18:09,056
Interaction属性中

353
00:18:09,623 --> 0:18:11,091
然后跟iOS上一样

354
00:18:11,158 --> 0:18:12,626
读取要播放的媒体项

355
00:18:13,260 --> 0:18:14,628
并开始在app中播放

356
00:18:16,897 --> 0:18:17,998
有一个警告

357
00:18:18,365 --> 0:18:20,167
你要在watchOS上的

358
00:18:20,601 --> 0:18:22,336
使用设备上的缓存

359
00:18:22,870 --> 0:18:24,204
仅通过网络

360
00:18:24,271 --> 0:18:25,572
如果绝对必要的话

361
00:18:28,342 --> 0:18:30,077
因此我们知道当某人说

362
00:18:30,444 --> 0:18:32,246
“在我的app中播放

363
00:18:33,013 --> 0:18:34,681
请求处理的第一个步骤

364
00:18:35,015 --> 0:18:36,383
是查找要播放的媒体项

365
00:18:37,684 --> 0:18:39,419
我们查看了一个以前的实施

366
00:18:39,887 --> 0:18:41,822
我们核对了媒体项的名称的值

367
00:18:42,189 --> 0:18:43,924
和Intent的媒体名称属性

368
00:18:45,158 --> 0:18:46,727
完全匹配

369
00:18:47,494 --> 0:18:50,731
那么在那个实施中我们还没有考虑到

370
00:18:53,066 --> 0:18:55,469
第一个是我们之前的方法

371
00:18:55,769 --> 0:18:58,539
如果存在错配或标点符号

372
00:18:59,473 --> 0:19:00,607
那么在这个例子中

373
00:18:59,473 --> 0:19:00,607
那么在这个例子中

374
00:19:00,674 --> 0:19:02,009
“在我的app中

375
00:19:02,276 --> 0:19:05,012
我们可以看到一些

376
00:19:06,413 --> 0:19:09,950
准确的歌曲标题是

377
00:19:10,617 --> 0:19:12,686
Siri语音引擎不可能

378
00:19:12,753 --> 0:19:14,221
给我们提供小写的hello

379
00:19:14,755 --> 0:19:17,424
或也许它给我们提供了一个

380
00:19:18,025 --> 0:19:20,294
因此在Resolve方法中

381
00:19:20,727 --> 0:19:22,796
忽略大小写和标点符号非常重要

382
00:19:24,965 --> 0:19:26,099
（在Resolve中

383
00:19:26,166 --> 0:19:28,302
类似地 许多音乐实体

384
00:19:28,368 --> 0:19:31,205
标题中有人们要么不表达

385
00:19:31,872 --> 0:19:34,775
要么以一种不能与媒体项的标题

386
00:19:34,842 --> 0:19:35,909
精确匹配的方式表达的内容

387
00:19:36,643 --> 0:19:39,446
比如许多专辑发布了精装版

388
00:19:40,113 --> 0:19:42,983
当人们请求播放专辑时

389
00:19:44,351 --> 0:19:45,352
他们不会说

390
00:19:45,719 --> 0:19:48,088
“在我的app中播放专辑

391
00:19:48,488 --> 0:19:50,824
而是会说“在我的app中播放专辑

392
00:19:51,992 --> 0:19:53,493
而电影原声是另一个例子

393
00:19:54,528 --> 0:19:56,129
人们不会说—

394
00:19:56,196 --> 0:19:58,031
“在我的app中播放

395
00:19:58,832 --> 0:20:00,968
但他们不会说“来自电影的音乐”

396
00:19:58,832 --> 0:20:00,968
但他们不会说“来自电影的音乐”

397
00:20:02,603 --> 0:20:04,271
最后许多嘻哈音乐的标题中

398
00:20:04,605 --> 0:20:06,473
都有缩写

399
00:20:07,174 --> 0:20:11,378
因此人们要么不说 要么说“特色”

400
00:20:11,445 --> 0:20:13,580
因此这里不适用精确匹配

401
00:20:19,820 --> 0:20:22,055
并且播客也有一些情况

402
00:20:22,122 --> 0:20:26,126
人们所说的内容与实体标题

403
00:20:27,194 --> 0:20:30,097
有些播客在标题中包含

404
00:20:30,831 --> 0:20:32,099
因此如果某人说

405
00:20:32,399 --> 0:20:34,701
“在我的app播客中播放

406
00:20:35,502 --> 0:20:40,674
Siri会在播客的媒体项类型中解析

407
00:20:41,542 --> 0:20:43,777
因此这里也不适用精确匹配

408
00:20:45,279 --> 0:20:49,316
此外 有些播客既有音频又有视频

409
00:20:49,383 --> 0:20:51,718
并且标题中出现了

410
00:20:52,619 --> 0:20:55,255
但SiriKit Media

411
00:20:55,656 --> 0:20:57,157
因此人们也不会那样说

412
00:20:59,960 --> 0:21:02,529
最后请记住

413
00:20:59,960 --> 0:21:02,529
最后请记住

414
00:21:03,163 --> 0:21:06,533
并且语音识别器

415
00:21:07,000 --> 0:21:09,269
如果有人要求播放歌曲81st

416
00:21:09,570 --> 0:21:13,607
你会得到数字81st或文字八十一

417
00:21:15,275 --> 0:21:17,611
或如果某人要求播放歌曲

418
00:21:17,678 --> 0:21:19,780
你会得到sun或son

419
00:21:22,082 --> 0:21:24,051
现在Siri会尽最大努力

420
00:21:24,618 --> 0:21:27,054
为你提供它所了解的实体标题

421
00:21:27,754 --> 0:21:32,860
但…最好是在Resolve方法中

422
00:21:37,030 --> 0:21:38,899
当你实施

423
00:21:39,266 --> 0:21:42,669
你通过从Resolve方法中

424
00:21:42,736 --> 0:21:44,037
控制Siri说什么

425
00:21:45,105 --> 0:21:46,206
你可以从这里看到

426
00:21:46,607 --> 0:21:50,244
用户请求

427
00:21:50,577 --> 0:21:51,645
播放Special Disaster Team的歌曲

428
00:21:52,212 --> 0:21:53,280
而Siri说

429
00:21:53,347 --> 0:21:56,116
“这是Special Disaster Team的

430
00:21:56,183 --> 0:21:57,317
来自Control Audio”

431
00:21:59,152 --> 0:22:01,421
在这种情况下 所返回的

432
00:21:59,152 --> 0:22:01,421
在这种情况下 所返回的

433
00:22:01,855 --> 0:22:03,924
有一个标题属性是

434
00:22:04,224 --> 0:22:06,326
歌手属性是

435
00:22:07,427 --> 0:22:11,598
因此一定要在所返回的媒体项中

436
00:22:12,099 --> 0:22:15,869
因为这些都会对Siri所说的内容

437
00:22:16,870 --> 0:22:17,905
有一件事要注意

438
00:22:18,238 --> 0:22:20,507
如果你在Resolve方法中

439
00:22:20,974 --> 0:22:22,910
Siri会指向列表中的第一项

440
00:22:25,546 --> 0:22:28,582
在SiriKit Media中

441
00:22:28,649 --> 0:22:29,750
非常重要

442
00:22:30,484 --> 0:22:32,920
当你与一个聪明的助手比如Siri

443
00:22:33,520 --> 0:22:35,856
当某些事情发生时

444
00:22:36,390 --> 0:22:38,258
并且恰当地处理报错

445
00:22:38,625 --> 0:22:40,827
会让用户了解发生了什么

446
00:22:40,894 --> 0:22:42,362
当出错时

447
00:22:42,429 --> 0:22:43,463
（错误）

448
00:22:43,530 --> 0:22:45,265
你最经常遇到的情况是

449
00:22:45,666 --> 0:22:47,501
从app目录中找不到

450
00:22:47,568 --> 0:22:48,569
用户所请求的内容

451
00:22:49,403 --> 0:22:52,940
你可以通过从Resolve

452
00:22:53,006 --> 0:22:54,341
Unsupported Resolution

453
00:22:55,242 --> 0:22:56,877
但还可能发生许多其它错误

454
00:22:57,678 --> 0:23:00,848
也许有人请求播放

455
00:22:57,678 --> 0:23:00,848
也许有人请求播放

456
00:23:01,248 --> 0:23:03,483
但却关闭了你app中的蜂窝数据

457
00:23:04,685 --> 0:23:08,021
或也许他们要求播放需要订阅的内容

458
00:23:08,322 --> 0:23:09,289
但他们却没有订阅

459
00:23:10,724 --> 0:23:13,760
INPlayMediaMediaItem

460
00:23:14,494 --> 0:23:16,997
并且对全部四个Intent的命名

461
00:23:17,531 --> 0:23:19,766
因此要在你支持的

462
00:23:20,300 --> 0:23:22,836
现在让我们谈谈

463
00:23:22,903 --> 0:23:24,404
人们对Siri说的一些不同的内容

464
00:23:24,471 --> 0:23:25,706
以及如何

465
00:23:26,206 --> 0:23:28,942
在SiriKit Media

466
00:23:29,009 --> 0:23:30,143
（人们可能会对Siri说的内容）

467
00:23:31,512 --> 0:23:33,947
人们最可能对Siri说

468
00:23:34,281 --> 0:23:35,282
“播放我的app”

469
00:23:35,849 --> 0:23:38,185
他们不会告诉你具体要播放什么

470
00:23:39,353 --> 0:23:42,256
那是你作为SiriKit Media

471
00:23:42,689 --> 0:23:44,925
你要选择做正确的事

472
00:23:46,026 --> 0:23:48,929
这变得和恢复现有排序一样简单了

473
00:23:49,730 --> 0:23:52,232
如果不是有声书或播客app

474
00:23:52,699 --> 0:23:54,735
这很可能是最合理的行为

475
00:23:55,969 --> 0:23:58,105
但你可以尽可能地

476
00:23:58,939 --> 0:24:02,009
也许你想把他们指向推荐播放列表

477
00:23:58,939 --> 0:24:02,009
也许你想把他们指向推荐播放列表

478
00:24:02,609 --> 0:24:04,044
或一些很火的新热门音乐

479
00:24:04,611 --> 0:24:05,579
选择权在你

480
00:24:06,180 --> 0:24:08,248
如何知道某人说了

481
00:24:08,949 --> 0:24:12,619
在INMediaSearch

482
00:24:13,253 --> 0:24:15,022
有一件事听起来像是个好主意

483
00:24:15,355 --> 0:24:16,957
就是询问用户要播放什么内容

484
00:24:17,658 --> 0:24:20,661
但是与不推荐使用

485
00:24:21,195 --> 0:24:22,996
我们不推荐这种方案

486
00:24:23,730 --> 0:24:25,766
在用户面前弹出对话框

487
00:24:26,233 --> 0:24:29,603
是他们退出SiriKit Media

488
00:24:32,706 --> 0:24:35,309
用户可以使用额外控制

489
00:24:36,143 --> 0:24:38,946
并且其中所支持的选项有重复播放、

490
00:24:39,012 --> 0:24:40,280
和按顺序播放

491
00:24:41,148 --> 0:24:43,717
如果你的app支持这些功能

492
00:24:44,251 --> 0:24:46,854
请一定在

493
00:24:47,454 --> 0:24:48,455
也支持它们

494
00:24:50,123 --> 0:24:52,759
人们还会请求播放

495
00:24:53,727 --> 0:24:56,163
最有用的搜索选项之一

496
00:24:56,964 --> 0:24:58,031
你可以说比如

497
00:24:58,098 --> 0:25:00,667
“在我的app播客中播放新一集的

498
00:24:58,098 --> 0:25:00,667
“在我的app播客中播放新一集的

499
00:25:00,734 --> 0:25:02,436
然后你会得到最新的

500
00:25:03,370 --> 0:25:05,539
或你可以按歌手请求最佳专辑

501
00:25:05,606 --> 0:25:07,407
你将得到最佳的

502
00:25:08,141 --> 0:25:10,711
或你可以要求app推荐

503
00:25:10,978 --> 0:25:13,013
你将得到推荐的

504
00:25:13,881 --> 0:25:15,983
请从INMediaSortOrder中

505
00:25:18,318 --> 0:25:21,388
另一个强大的搜索选项是

506
00:25:21,755 --> 0:25:24,057
它包含INMediaReferenceCurrently

507
00:25:25,225 --> 0:25:29,496
这对于INAddMediaIntent

508
00:25:29,930 --> 0:25:33,000
因为人们可以轻松地向媒体库

509
00:25:33,066 --> 0:25:34,635
或播放列表中

510
00:25:35,035 --> 0:25:38,238
或者他们会告诉app他们喜欢

511
00:25:39,306 --> 0:25:40,674
还有一件事要注意

512
00:25:40,741 --> 0:25:43,410
如果你在

513
00:25:43,477 --> 0:25:45,112
填充了外部内容识别器

514
00:25:45,746 --> 0:25:49,416
那个识别器将出现在

515
00:25:49,716 --> 0:25:51,518
因此你就能了解具体要找哪个媒体项

516
00:25:55,055 --> 0:25:58,592
现在告诉Siri更多关于

517
00:25:58,859 --> 0:26:02,362
会帮助Siri提供极好的

518
00:25:58,859 --> 0:26:02,362
会帮助Siri提供极好的

519
00:26:02,429 --> 0:26:03,430
（告诉Siri有关客户的信息）

520
00:26:03,964 --> 0:26:05,098
（词汇表）

521
00:26:06,667 --> 0:26:08,836
当你给Siri提供用户词汇表时

522
00:26:09,670 --> 0:26:12,239
这会帮助Siri了解你的部分目录

523
00:26:12,539 --> 0:26:14,174
对客户有吸引力

524
00:26:14,908 --> 0:26:15,909
有一点需要留意 非常重要

525
00:26:15,976 --> 0:26:18,378
它不是app目录的完整内容

526
00:26:18,745 --> 0:26:21,048
它只是你的客户

527
00:26:21,114 --> 0:26:22,316
特别感兴趣的部分内容

528
00:26:23,550 --> 0:26:26,220
还有一件非常重要的事要注意

529
00:26:26,687 --> 0:26:29,423
因此一定要在词汇表的开端

530
00:26:29,756 --> 0:26:30,924
包含最重要的词

531
00:26:32,259 --> 0:26:34,228
并根据app所支持的媒体类型

532
00:26:34,628 --> 0:26:36,096
向Siri发送不同的类型

533
00:26:37,331 --> 0:26:40,968
音乐app应该使用

534
00:26:41,802 --> 0:26:45,205
有声书app应该使用

535
00:26:45,939 --> 0:26:48,642
而播客app应该使用显示标题

536
00:26:50,244 --> 0:26:54,581
对于那些适用于全部用户的功能

537
00:26:54,982 --> 0:26:57,751
请查看SiriKit中的

538
00:26:59,386 --> 0:27:00,554
（总结）

539
00:26:59,386 --> 0:27:00,554
（总结）

540
00:27:00,888 --> 0:27:02,022
总的来说

541
00:27:02,089 --> 0:27:04,224
我们发布了新的

542
00:27:04,658 --> 0:27:07,361
允许你使用Siri

543
00:27:07,995 --> 0:27:09,897
你将可以播放、添加、

544
00:27:10,364 --> 0:27:11,632
更新品味介绍

545
00:27:11,899 --> 0:27:13,934
并使用新Intent搜索媒体项

546
00:27:14,868 --> 0:27:17,738
尽可能地提供最佳体验非常重要

547
00:27:18,505 --> 0:27:21,542
你可以通过弹性搜索来实现

548
00:27:22,309 --> 0:27:25,212
但人们并不会表明

549
00:27:26,246 --> 0:27:28,182
你可以恰当地处理错误

550
00:27:28,815 --> 0:27:31,218
从而当发生错误时

551
00:27:32,419 --> 0:27:34,087
并且你一定要

552
00:27:34,354 --> 0:27:36,623
恰当地构建

553
00:27:37,057 --> 0:27:39,726
从而使尽可能地

554
00:27:40,794 --> 0:27:43,697
最后一定要尽可能地给Siri

555
00:27:43,997 --> 0:27:48,502
提供重要的情境信息

556
00:27:49,136 --> 0:27:50,337
从而使Siri以客户名义

557
00:27:52,973 --> 0:27:56,043
请参加我们的讨论会

558
00:27:56,910 --> 0:27:58,779
我们认为你们一定会喜欢

559
00:27:58,846 --> 0:28:00,480
用新SiriKit Media Intent

560
00:27:58,846 --> 0:28:00,480
用新SiriKit Media Intent

561
00:28:00,781 --> 0:28:02,449
并且我们已经迫不及待地

562
00:28:02,749 --> 0:28:03,650
谢谢

563
00:28:03,917 --> 0:28:05,986
（欲知更多信息 请登录
