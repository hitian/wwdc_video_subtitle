1
00:00:18,085 --> 0:00:22,289
大家好 欢迎参加

2
00:00:23,156 --> 0:00:24,591
我是Grace Kendall

3
00:00:24,992 --> 0:00:26,393
我是Joy Forbes

4
00:00:26,460 --> 0:00:27,928
我叫Jonathan Penn

5
00:00:27,995 --> 0:00:29,997
我们都是Swift Playgrounds的

6
00:00:30,063 --> 0:00:32,665
今天能来到这里 我们感到非常激动

7
00:00:33,000 --> 0:00:36,403
我们要与你们分享使用Swift的

8
00:00:36,703 --> 0:00:39,039
我们会演示一些技巧

9
00:00:39,106 --> 0:00:41,775
关于创建更具吸引力的体验

10
00:00:43,343 --> 0:00:46,313
Swift Playgrounds

11
00:00:46,380 --> 0:00:49,316
并了解其他作者所创建的内容

12
00:00:50,384 --> 0:00:52,519
你所编写的代码是真正的Swift

13
00:00:52,586 --> 0:00:56,023
由app进行编译

14
00:00:57,791 --> 0:00:59,593
你所创建或下载的

15
00:00:59,660 --> 0:01:02,129
显示在你的文档列表中 如图所示

16
00:00:59,660 --> 0:01:02,129
显示在你的文档列表中 如图所示

17
00:01:03,397 --> 0:01:05,498
底部的

18
00:01:05,732 --> 0:01:08,869
显示与你所创建的内容相似的

19
00:01:09,469 --> 0:01:11,104
如果你轻触“查看全部”按钮

20
00:01:12,172 --> 0:01:15,342
你会看到可以

21
00:01:15,909 --> 0:01:17,911
以及你所订阅的其它feeds

22
00:01:18,412 --> 0:01:20,414
你还可以在底部的“其它发布商”中

23
00:01:20,480 --> 0:01:23,183
浏览特色订阅

24
00:01:24,885 --> 0:01:28,755
Apple在Swift Playgrounds 3中

25
00:01:29,990 --> 0:01:33,193
Learn to Code家族又扩展了

26
00:01:33,460 --> 0:01:35,696
Assemble Your Camera

27
00:01:36,196 --> 0:01:38,365
这些与起初的

28
00:01:39,099 --> 0:01:41,535
介绍了用组件进行创建的概念

29
00:01:41,735 --> 0:01:44,004
从而创建比如摄像头

30
00:01:45,339 --> 0:01:48,442
Sonic Workshop挑战

31
00:01:48,509 --> 0:01:53,280
在iPad上使用触摸事件来作曲

32
00:01:55,148 --> 0:01:57,951
今天我们将了解

33
00:01:58,018 --> 0:01:59,319
一些很棒的新功能

34
00:01:59,953 --> 0:02:03,657
我将介绍你在iPad上

35
00:01:59,953 --> 0:02:03,657
我将介绍你在iPad上

36
00:02:03,957 --> 0:02:06,226
然后Joy再讲Mac上

37
00:02:06,293 --> 0:02:08,328
对作者们可用的一些新功能

38
00:02:08,628 --> 0:02:10,731
但首先Jonathan

39
00:02:10,797 --> 0:02:14,868
举例说明Swift Playgrounds 3

40
00:02:14,935 --> 0:02:15,802
Jonathan？

41
00:02:16,069 --> 0:02:16,904
谢谢Grace

42
00:02:23,777 --> 0:02:26,280
我要演示作为想法的暂存器的

43
00:02:26,346 --> 0:02:29,783
还带点乐趣

44
00:02:30,083 --> 0:02:31,552
这些设备非常漂亮

45
00:02:31,952 --> 0:02:34,888
我个人非常喜欢它的传感器

46
00:02:34,955 --> 0:02:36,290
比如加速度计

47
00:02:36,623 --> 0:02:41,161
我个人是那些使用加速度计来实现

48
00:02:41,228 --> 0:02:44,831
那可以带来一种真实的感觉

49
00:02:45,465 --> 0:02:48,669
我要给你演示

50
00:02:48,735 --> 0:02:53,707
我从零开始在iPad上创建

51
00:02:54,141 --> 0:02:56,543
完全在Swift Playgrounds中实现

52
00:02:57,077 --> 0:02:59,012
不知道你是否玩过其中一种

53
00:02:59,079 --> 0:03:01,982
就是你得滚动大理石

54
00:02:59,079 --> 0:03:01,982
就是你得滚动大理石

55
00:03:02,049 --> 0:03:03,116
就是类似那样的游戏

56
00:03:04,051 --> 0:03:05,819
我们需要一些东西才能实现这种功能

57
00:03:05,886 --> 0:03:10,724
比如响应iPad倾转动作的大理石

58
00:03:11,892 --> 0:03:14,194
我们需要程序性的生成洞的地图

59
00:03:14,261 --> 0:03:16,296
从而玩家可以引导大理石绕过

60
00:03:16,697 --> 0:03:17,831
为了让事情简单一些

61
00:03:17,898 --> 0:03:19,766
我们的目标是尽可能远

62
00:03:19,833 --> 0:03:23,937
尽可能快 而不会掉进洞里

63
00:03:25,606 --> 0:03:27,207
创建类似这样的功能

64
00:03:27,274 --> 0:03:30,210
我主要讲其中的几个步骤

65
00:03:30,277 --> 0:03:32,746
当然了 我要使用

66
00:03:34,214 --> 0:03:36,250
读取原生加速度计数据

67
00:03:36,316 --> 0:03:38,452
试验在线结果

68
00:03:38,852 --> 0:03:42,556
使用实时视图了解物理引擎中的

69
00:03:43,123 --> 0:03:45,125
并试验如何在整个跑道上实现这个

70
00:03:45,192 --> 0:03:48,128
程序化的生成和布局洞

71
00:03:48,662 --> 0:03:51,865
然后我们要把它们组合在一起

72
00:03:52,399 --> 0:03:53,333
让我们开始吧

73
00:03:57,304 --> 0:04:00,340
好吧 让我们从空白页开始

74
00:03:57,304 --> 0:04:00,340
好吧 让我们从空白页开始

75
00:04:00,641 --> 0:04:02,976
Swift Playgrounds

76
00:04:03,043 --> 0:04:05,279
都是自己的执行输入点

77
00:04:05,345 --> 0:04:06,647
是个main.swf文件

78
00:04:06,880 --> 0:04:08,949
我喜欢使用独立的页面

79
00:04:09,183 --> 0:04:10,918
就像是我的旅行日记一样

80
00:04:10,984 --> 0:04:13,253
我要尝试解决问题

81
00:04:13,320 --> 0:04:15,689
或学习新API

82
00:04:16,156 --> 0:04:17,658
我要从一个子系统开始

83
00:04:17,724 --> 0:04:20,093
或从一个函数开始 或从这里开始

84
00:04:20,293 --> 0:04:22,029
然后在移到新页面上

85
00:04:22,095 --> 0:04:23,463
这是一张完全空白的页面

86
00:04:23,530 --> 0:04:24,965
我可以继续下一个想法

87
00:04:25,199 --> 0:04:27,868
留下一条我可以返回去

88
00:04:27,935 --> 0:04:29,203
进行进一步实验的线索

89
00:04:29,636 --> 0:04:32,840
现在我们的首席技师是

90
00:04:32,906 --> 0:04:35,943
我们很可能应该

91
00:04:37,110 --> 0:04:39,213
我们要创建

92
00:04:39,446 --> 0:04:41,915
现在我使用硬件键盘上的Tab键

93
00:04:42,549 --> 0:04:46,854
从底部的这个快捷方式中

94
00:04:46,920 --> 0:04:47,788
用于代码完成

95
00:04:48,021 --> 0:04:50,724
然后我要按回车键选中它

96
00:04:51,825 --> 0:04:55,929
我们通过startAccelerometerUpdates

97
00:04:57,030 --> 0:04:59,933
现在我不知道你是谁 但我从未记得

98
00:05:00,234 --> 0:05:03,804
加速度计的哪些xyz坐标

99
00:05:03,871 --> 0:05:07,674
响应iPad

100
00:05:07,741 --> 0:05:09,276
我总是感到很困惑

101
00:05:09,610 --> 0:05:11,845
但 嘿 让我们就在这里解决它

102
00:05:12,846 --> 0:05:15,849
在我们开始之前 我们要等一小会儿

103
00:05:16,149 --> 0:05:18,385
加速度计需要一些时间才能运转起来

104
00:05:18,952 --> 0:05:22,523
我们担心稍后要定期读取

105
00:05:22,589 --> 0:05:25,492
目前我们只想试验

106
00:05:25,559 --> 0:05:27,361
看我们是否能取出它的值

107
00:05:27,561 --> 0:05:29,863
因此我要告诉管理器

108
00:05:30,430 --> 0:05:32,399
我想获取加速度计数据、

109
00:05:32,666 --> 0:05:35,035
加速度属性和x坐标

110
00:05:35,435 --> 0:05:38,939
把它放在它自己的行上

111
00:05:39,006 --> 0:05:42,943
表达式也被记录在案

112
00:05:43,010 --> 0:05:45,078
我们可以在这里看到

113
00:05:46,513 --> 0:05:48,081
全部四行代码得到了一个内联结果

114
00:05:48,148 --> 0:05:50,984
我要轻触代表最后一行的

115
00:05:51,285 --> 0:05:54,721
嘿 我们看到了一个值 负0.78

116
00:05:55,422 --> 0:05:57,124
那代表了-某些东西

117
00:05:57,457 --> 0:05:58,425
嗯 让我在这里试一下这个

118
00:05:58,492 --> 0:06:00,360
我要倾转iPad并尝试再次运行它

119
00:05:58,492 --> 0:06:00,360
我要倾转iPad并尝试再次运行它

120
00:06:00,427 --> 0:06:02,462
看看现在有什么值

121
00:06:03,430 --> 0:06:06,900
它说 嘿 负0.061

122
00:06:07,201 --> 0:06:08,769
数值不一样了

123
00:06:09,236 --> 0:06:12,072
在这里的某个地方

124
00:06:12,139 --> 0:06:14,107
我认为这与iPad的移动相关

125
00:06:14,174 --> 0:06:15,008
这是一个开始

126
00:06:15,375 --> 0:06:18,278
但我很想获得某种实时反馈

127
00:06:18,345 --> 0:06:20,614
告诉我正在发生什么

128
00:06:21,114 --> 0:06:25,485
因此让我们快速进入下一页

129
00:06:27,921 --> 0:06:30,123
通常当你运行

130
00:06:30,190 --> 0:06:33,961
程序计数器到达最末端后

131
00:06:34,127 --> 0:06:36,730
无论何时你都可以轻触

132
00:06:36,964 --> 0:06:38,498
这在很多情况下都很有用

133
00:06:38,565 --> 0:06:41,435
但在这个例子中 我希望能继续执行

134
00:06:41,502 --> 0:06:43,403
从而我可以随时间收集值

135
00:06:43,637 --> 0:06:44,538
为此

136
00:06:44,738 --> 0:06:46,773
我要使用

137
00:06:46,940 --> 0:06:50,444
告诉当前页面我需要无限执行

138
00:06:51,345 --> 0:06:53,714
我们像以往一样创建

139
00:06:53,947 --> 0:06:55,482
我们启动加速度计

140
00:06:56,016 --> 0:06:57,618
我在这里写了一个简单的函数

141
00:06:57,851 --> 0:07:00,254
只是个helper函数

142
00:06:57,851 --> 0:07:00,254
只是个helper函数

143
00:07:00,320 --> 0:07:02,122
它接受一个后置闭包

144
00:07:02,422 --> 0:07:03,790
立即调用闭包

145
00:07:03,857 --> 0:07:06,059
然后在给定的时间间隔之后

146
00:07:06,126 --> 0:07:07,461
安排再次调用它

147
00:07:07,628 --> 0:07:10,631
通过在主调度队列上使用

148
00:07:11,098 --> 0:07:13,166
这是一种简单的重复方式 我知道

149
00:07:13,233 --> 0:07:16,436
但你知道吗 我们只是在试验

150
00:07:16,503 --> 0:07:18,739
无论在这个页面上的任何位置

151
00:07:19,239 --> 0:07:20,407
并且我要在这里使用它

152
00:07:21,074 --> 0:07:22,009
每隔半秒钟

153
00:07:22,242 --> 0:07:23,877
就调用这个后置闭包

154
00:07:23,944 --> 0:07:26,647
并且只要加速度计数据不为无

155
00:07:27,147 --> 0:07:31,118
我们就使用这行上的表达式

156
00:07:31,518 --> 0:07:34,188
让我们看一下当我轻触

157
00:07:34,521 --> 0:07:37,291
好吧 屏幕上正在进行

158
00:07:37,357 --> 0:07:39,426
让我轻触内联结果

159
00:07:40,160 --> 0:07:43,130
自动为我们选择了图表呈现

160
00:07:43,197 --> 0:07:45,933
因为这是一系列简单的数值

161
00:07:46,200 --> 0:07:47,734
我要拿起它并四处移动

162
00:07:48,335 --> 0:07:51,371
哇哦 我们有值了 有东西了 好吧

163
00:07:51,672 --> 0:07:53,006
我要尝试在这里获取一个基线

164
00:07:53,073 --> 0:07:57,444
我要把它平放 然后我再垂直倾转它

165
00:07:58,512 --> 0:08:00,714
我要把它向下倾转

166
00:07:58,512 --> 0:08:00,714
我要把它向下倾转

167
00:08:00,781 --> 0:08:03,417
好的 我认为我们已经搞定了

168
00:08:03,483 --> 0:08:04,685
加速度计的x坐标

169
00:08:05,319 --> 0:08:08,689
响应iPad沿这个轴

170
00:08:09,022 --> 0:08:10,958
在这个方向上的移动

171
00:08:11,124 --> 0:08:11,992
好吧 我们开始吧

172
00:08:12,159 --> 0:08:15,729
我可以做同样的操作来了解

173
00:08:15,796 --> 0:08:17,097
这非常有用

174
00:08:17,931 --> 0:08:19,633
这个repeatEvery函数-

175
00:08:20,767 --> 0:08:21,602
谢谢

176
00:08:23,537 --> 0:08:25,772
这个repeatEvery

177
00:08:25,839 --> 0:08:28,675
虽然很粗糙 但很简洁 很清楚

178
00:08:28,742 --> 0:08:30,277
我要把它用在其它地方

179
00:08:30,344 --> 0:08:31,945
直到我了解如何正确处理它

180
00:08:32,011 --> 0:08:32,846
没关系

181
00:08:33,179 --> 0:08:38,251
因为我在Swift Playgrounds 3中

182
00:08:38,318 --> 0:08:41,421
我可以使用新的选项卡式编辑

183
00:08:41,621 --> 0:08:42,456
让我来演示一下

184
00:08:42,823 --> 0:08:45,526
我要轻触上边导航栏中的

185
00:08:46,026 --> 0:08:48,295
然后我要轻触“实用程序模块”

186
00:08:48,462 --> 0:08:50,864
这会打开用户模块和源文件选择器

187
00:08:50,931 --> 0:08:53,000
你可以看到因为我要实现这个想法

188
00:08:53,066 --> 0:08:54,401
我已经在这里克隆了许多东西

189
00:08:54,835 --> 0:08:57,538
嗯 在“实用程序模块”中

190
00:08:57,838 --> 0:08:59,640
做一个

191
00:09:01,074 --> 0:09:04,411
我要轻触“选项卡”

192
00:09:04,878 --> 0:09:07,414
我要轻触repeatEvery

193
00:09:07,981 --> 0:09:09,917
如果我轻触并按住 我可以拿起它

194
00:09:10,350 --> 0:09:13,420
我用另一只手轻触“计时选项卡”

195
00:09:13,687 --> 0:09:19,193
然后松开手 那会复制这段代码

196
00:09:20,160 --> 0:09:21,428
因为这是个新文件

197
00:09:21,628 --> 0:09:24,431
Swift不知道什么是时间间隔

198
00:09:24,698 --> 0:09:25,632
我要通过导入

199
00:09:26,333 --> 0:09:29,136
从而它就了解如何处理那些符号

200
00:09:29,770 --> 0:09:32,706
因为我想在每个页面上的任何地方

201
00:09:32,773 --> 0:09:34,942
甚至可能在其它模块上使用它

202
00:09:35,242 --> 0:09:38,078
我需要把这个函数标记为公共函数

203
00:09:38,712 --> 0:09:40,681
现在我可以返回到主文件

204
00:09:40,948 --> 0:09:43,784
轻触以选择函数、删除它

205
00:09:44,651 --> 0:09:47,287
如果我做的对 一切都应该没问题

206
00:09:47,354 --> 0:09:48,488
好吧 我们开始吧

207
00:09:48,722 --> 0:09:52,526
耶 现在我可以按需要打开文件了

208
00:09:52,593 --> 0:09:54,094
从而试验不同的想法

209
00:09:54,161 --> 0:09:56,830
比如让我们在这里尝试一下这个

210
00:09:57,030 --> 0:09:59,399
当我正在执行的时候我要丢掉

211
00:09:59,466 --> 0:10:00,667
只是为了帮我试验

212
00:09:59,466 --> 0:10:00,667
只是为了帮我试验

213
00:10:00,734 --> 0:10:04,404
这些是数学helper函数

214
00:10:04,738 --> 0:10:08,041
可以让编写代码变得更流畅

215
00:10:08,108 --> 0:10:09,843
当我把它作为过程的一部分使用时

216
00:10:10,777 --> 0:10:15,015
我可以轻触并拖动以重排序选项卡

217
00:10:15,549 --> 0:10:17,284
轻触“关闭”按钮以关闭选项卡

218
00:10:17,451 --> 0:10:21,154
所有这些代码

219
00:10:21,622 --> 0:10:22,456
非常方便

220
00:10:22,956 --> 0:10:26,393
现在让我们加快一些进度

221
00:10:26,560 --> 0:10:28,262
我一直在用

222
00:10:28,328 --> 0:10:30,097
从而回顾它是如何运作的

223
00:10:30,163 --> 0:10:33,300
让我们看看我的下一页进展怎么样了

224
00:10:34,368 --> 0:10:36,837
我需要为

225
00:10:36,904 --> 0:10:39,606
我通过轻触导航栏中的

226
00:10:39,673 --> 0:10:42,075
并选择“文档”来实现

227
00:10:42,576 --> 0:10:45,612
我通过轻触放大镜搜索文档

228
00:10:45,679 --> 0:10:46,980
并搜索SpriteKit

229
00:10:47,748 --> 0:10:50,884
通过阅读这些内容

230
00:10:51,185 --> 0:10:54,621
如何创建屏幕左手边的代码主体的

231
00:10:54,988 --> 0:10:58,058
我了解了

232
00:10:58,125 --> 0:11:03,163
SpriteKit通过在游戏中

233
00:10:58,125 --> 0:11:03,163
SpriteKit通过在游戏中

234
00:11:03,430 --> 0:11:04,798
我了解了物理引擎

235
00:11:04,865 --> 0:11:06,800
以及如何对节点施加力

236
00:11:06,867 --> 0:11:09,937
从而使物理机制随时间的推移

237
00:11:10,304 --> 0:11:12,105
并且我了解了SpriteKit

238
00:11:12,339 --> 0:11:15,375
在每帧上回调我的代码时的游戏循环

239
00:11:15,442 --> 0:11:17,678
从而我可以影响环境的变化

240
00:11:17,911 --> 0:11:19,279
最后一点非常重要

241
00:11:19,713 --> 0:11:25,018
让我关闭侧边面板并打开底部的

242
00:11:25,519 --> 0:11:28,388
因为SpriteKit在每一帧上

243
00:11:28,455 --> 0:11:31,258
我必须得快点 我要关闭内联结果

244
00:11:31,525 --> 0:11:33,894
正如我们所看到的

245
00:11:33,961 --> 0:11:37,297
但记录那些表达式却需要时间

246
00:11:37,531 --> 0:11:39,733
我不想在这种情况下减慢

247
00:11:39,933 --> 0:11:41,068
并且我甚至都不需要它们

248
00:11:41,134 --> 0:11:44,004
因为你可以看到

249
00:11:44,404 --> 0:11:46,640
我把SpriteKit

250
00:11:46,707 --> 0:11:50,644
SpriteKit自身会给我提供

251
00:11:51,078 --> 0:11:55,082
就是这样 我们有一个圆形的物质

252
00:11:55,582 --> 0:11:57,918
以响应iPad的倾转 好吧

253
00:11:58,285 --> 0:12:00,521
现在重点来了 因为…

254
00:11:58,285 --> 0:12:00,521
现在重点来了 因为…

255
00:12:01,388 --> 0:12:02,589
谢谢…

256
00:12:03,991 --> 0:12:05,592
一旦你得到了这样的东西

257
00:12:05,659 --> 0:12:08,095
一旦你在屏幕上得到了正在运行的

258
00:12:08,161 --> 0:12:10,030
你会拿着它去做用户测试 对吗？

259
00:12:10,464 --> 0:12:11,765
因此我要把它拿给我的孩子们

260
00:12:12,132 --> 0:12:14,334
我告诉他们说

261
00:12:14,401 --> 0:12:17,638
他们打断了我 从我手上

262
00:12:18,005 --> 0:12:20,240
倾转iPad看它在屏幕上四处移动

263
00:12:20,307 --> 0:12:21,575
他们觉得有意思

264
00:12:21,742 --> 0:12:23,810
他们说“这很棒 爸爸 这非常棒

265
00:12:25,913 --> 0:12:26,847
但好像缺点东西

266
00:12:27,581 --> 0:12:29,683
你看屏幕上并没有足够多的大理石

267
00:12:30,184 --> 0:12:32,986
我们需要更多大理石

268
00:12:34,388 --> 0:12:36,356
他们有做项目管理的天赋 好吧

269
00:12:38,892 --> 0:12:41,028
这和我的最终目标没有任何关系

270
00:12:41,495 --> 0:12:42,696
但那听起来确实很酷

271
00:12:42,763 --> 0:12:43,797
我们应该有更多的大理石

272
00:12:43,864 --> 0:12:46,466
因此我增加了轻触 只是为了识别她

273
00:12:46,533 --> 0:12:47,367
我们一起实现了这个功能

274
00:12:47,434 --> 0:12:49,269
每次你在屏幕上轻触时

275
00:12:49,336 --> 0:12:52,406
我们都向场景中插入一个

276
00:12:52,472 --> 0:12:54,241
并把它添加到物理引擎中

277
00:12:54,308 --> 0:12:56,944
从而它可以加入这里正在进行的

278
00:12:57,211 --> 0:12:58,612
通常是这样的

279
00:12:59,313 --> 0:13:01,882
孩子的年龄越小

280
00:12:59,313 --> 0:13:01,882
孩子的年龄越小

281
00:13:01,949 --> 0:13:03,684
从而尝试尽快把屏幕填满

282
00:13:03,750 --> 0:13:05,752
并且他们想看看它是否会崩溃

283
00:13:05,986 --> 0:13:08,889
然后他们就会把这东西弄走

284
00:13:08,956 --> 0:13:12,893
我不说谎

285
00:13:12,960 --> 0:13:14,228
我可以看一下全部…

286
00:13:19,466 --> 0:13:20,367
我稍后再做

287
00:13:27,107 --> 0:13:28,909
我建议你们也这样做 很放松

288
00:13:29,243 --> 0:13:31,512
那么无论如何

289
00:13:31,678 --> 0:13:34,448
它正在执行某些操作以响应加速度计

290
00:13:34,715 --> 0:13:37,050
这些操作就是倾转iPad

291
00:13:37,117 --> 0:13:39,453
我们了解了一些这个游戏的运作方式

292
00:13:39,520 --> 0:13:40,754
并且它会变得越来越刺激

293
00:13:41,421 --> 0:13:44,958
但现在我需要了解如何实现

294
00:13:45,025 --> 0:13:48,295
请记住 这是一个分布着洞的路线

295
00:13:48,362 --> 0:13:50,364
大理石应该穿过路线并绕过洞口

296
00:13:50,697 --> 0:13:54,001
我们很可能希望记住

297
00:13:54,067 --> 0:13:57,271
因此如果用户恰好由于某些原因

298
00:13:57,538 --> 0:13:59,540
他们可以重新路过

299
00:14:00,474 --> 0:14:03,043
让我们继续看一个试验

300
00:14:03,610 --> 0:14:05,112
当创建这个页面时

301
00:14:05,179 --> 0:14:07,848
我决定进入我的游戏模型模块

302
00:14:10,484 --> 0:14:12,553
并创建MapStruct

303
00:14:12,619 --> 0:14:15,889
这个类型的目标是

304
00:14:16,156 --> 0:14:18,258
随着你穿过路线

305
00:14:18,525 --> 0:14:20,260
计算并记住洞的位置

306
00:14:20,327 --> 0:14:23,397
它其实是把地图分成了几个栏

307
00:14:23,463 --> 0:14:24,932
然后再把洞口安置在栏里边

308
00:14:25,165 --> 0:14:25,999
非常简单

309
00:14:26,233 --> 0:14:27,501
如果我想

310
00:14:27,568 --> 0:14:29,636
我可以用一些更复杂的东西来交换它

311
00:14:29,803 --> 0:14:31,004
额 它现在能用

312
00:14:32,072 --> 0:14:33,974
同时在游戏引擎模块中

313
00:14:34,241 --> 0:14:37,578
我创建了一个MapNode

314
00:14:37,845 --> 0:14:42,082
并了解如何沿着路线在不同的点上

315
00:14:42,149 --> 0:14:44,017
你所要做的就是给它传递一个长方形

316
00:14:44,251 --> 0:14:46,386
代表摄像头所在位置

317
00:14:46,587 --> 0:14:49,189
和用户所看到的视区的长方形

318
00:14:49,389 --> 0:14:50,524
一旦你这样做了

319
00:14:50,824 --> 0:14:54,294
它就会渲染那个点中的洞口

320
00:14:54,361 --> 0:14:56,363
它有点像UI表视图之类的东西

321
00:14:56,997 --> 0:14:59,399
让我运行这里的代码

322
00:14:59,967 --> 0:15:02,002
右手边有一些内联结果

323
00:14:59,967 --> 0:15:02,002
右手边有一些内联结果

324
00:15:02,069 --> 0:15:04,538
我要轻触以浏览预览

325
00:15:04,605 --> 0:15:06,974
我在MathNode上

326
00:15:07,040 --> 0:15:10,744
因为我想生成SKView

327
00:15:10,811 --> 0:15:13,981
UIView子类显示

328
00:15:14,047 --> 0:15:15,382
我想生成它并把它放在这里

329
00:15:15,449 --> 0:15:17,618
从而它只显示为静态内联结果

330
00:15:17,784 --> 0:15:19,786
我不需要创建任何额外的东西

331
00:15:19,853 --> 0:15:21,688
它就在那儿 已经准备好了

332
00:15:21,989 --> 0:15:25,325
现在我们看到

333
00:15:25,759 --> 0:15:28,529
并且我们正处于路线中的这个点上

334
00:15:29,129 --> 0:15:31,598
我可以按我的意愿试验这个密度

335
00:15:31,899 --> 0:15:34,968
并调整这里的值

336
00:15:35,135 --> 0:15:38,238
内联结果为我提供了我在这个点上

337
00:15:40,107 --> 0:15:40,941
现在我已经准备好了

338
00:15:41,008 --> 0:15:44,011
让我们再往进一步 跳到最后一步

339
00:15:45,078 --> 0:15:46,079
我们可以看到这个游戏

340
00:15:46,280 --> 0:15:49,750
在我开始之前

341
00:15:49,816 --> 0:15:52,252
和之前一样

342
00:15:52,319 --> 0:15:55,489
我们不需要记录表达式

343
00:15:56,190 --> 0:15:59,126
我要轻触“运行我的代码”

344
00:15:59,526 --> 0:16:02,329
我们有个看起来像是大理石一样的

345
00:15:59,526 --> 0:16:02,329
我们有个看起来像是大理石一样的

346
00:16:02,396 --> 0:16:06,033
在看起来像是墙壁一样的东西的顶部

347
00:16:06,099 --> 0:16:07,367
看起来就像这样 很漂亮

348
00:16:07,801 --> 0:16:09,536
当我在实现这个想法时

349
00:16:09,603 --> 0:16:12,806
Joy提醒我说我可以从模板中

350
00:16:12,873 --> 0:16:14,575
取出大量纹理

351
00:16:14,641 --> 0:16:16,844
你可以直接从app中下载

352
00:16:16,910 --> 0:16:18,579
你知道的

353
00:16:18,946 --> 0:16:20,747
因此我拉出传感器

354
00:16:21,248 --> 0:16:22,449
使用资产选择器创建模板

355
00:16:22,749 --> 0:16:25,018
取出其中一些纹理

356
00:16:25,085 --> 0:16:25,919
它们在这里

357
00:16:26,119 --> 0:16:28,388
我甚至还查看了…

358
00:16:28,589 --> 0:16:30,457
一个图像编辑app以查找…

359
00:16:30,524 --> 0:16:33,360
做一些看起来模糊的洞口形状的东西

360
00:16:33,427 --> 0:16:34,394
哦 没关系

361
00:16:35,128 --> 0:16:36,897
径向渐变看起来很不错

362
00:16:36,964 --> 0:16:37,798
很酷

363
00:16:38,065 --> 0:16:40,467
在这里 让我轻触屏幕中央

364
00:16:40,534 --> 0:16:43,737
通过把中心点一直拖动到左边实现

365
00:16:44,338 --> 0:16:45,272
我要再试一下这个

366
00:16:45,472 --> 0:16:47,508
我添加了轻触识别器 如果游戏结束

367
00:16:48,175 --> 0:16:49,309
可以重新开始

368
00:16:49,376 --> 0:16:50,878
让我们看看我目前进度怎么样

369
00:16:51,211 --> 0:16:52,579
你的速度越快

370
00:16:53,213 --> 0:16:55,449
分数增加的也越快

371
00:16:55,516 --> 0:16:58,151
给这里的乐趣增加了一些鲁莽的因素

372
00:16:58,218 --> 0:16:59,152
哇哦 好的

373
00:17:01,121 --> 0:17:03,824
在这么多人面前实现这个想法

374
00:17:04,391 --> 0:17:05,325
但 嘿 你知道吗

375
00:17:05,559 --> 0:17:07,027
你在这里所看到的一切

376
00:17:07,094 --> 0:17:11,798
到达这一点的每一个步骤都完全是在

377
00:17:12,199 --> 0:17:13,300
这非常有意思

378
00:17:13,500 --> 0:17:15,301
我的家人玩这个玩得很好

379
00:17:15,736 --> 0:17:17,104
我更加了解了SpriteKit

380
00:17:17,271 --> 0:17:19,406
我有机会在app中使用新用户模块

381
00:17:19,473 --> 0:17:21,008
和源文件支持

382
00:17:21,074 --> 0:17:23,676
从而把我要实现的东西

383
00:17:23,877 --> 0:17:25,212
这是非常奇妙的体验

384
00:17:25,811 --> 0:17:27,079
iPad上的

385
00:17:27,146 --> 0:17:29,816
是一个非常好用的暂存器

386
00:17:30,350 --> 0:17:33,654
也许甚至了解并使用我们的API

387
00:17:34,254 --> 0:17:36,190
或甚至是增加你生活中的压力

388
00:17:36,256 --> 0:17:38,392
通过创建速度运行游戏

389
00:17:39,459 --> 0:17:42,529
现在我要邀请Grace返回舞台

390
00:17:42,596 --> 0:17:44,698
她会讲这是如何运作的

391
00:17:44,765 --> 0:17:47,768
并深入地讲如何使用这些新功能

392
00:17:47,835 --> 0:17:50,237
来充分利用

393
00:17:50,604 --> 0:17:51,471
谢谢

394
00:17:59,780 --> 0:18:00,747
谢谢Jonathan

395
00:17:59,780 --> 0:18:00,747
谢谢Jonathan

396
00:18:02,216 --> 0:18:04,685
如果你已经熟悉

397
00:18:04,751 --> 0:18:07,855
你可能已经在Jonathan

398
00:18:08,155 --> 0:18:09,356
现在让我们看一下那些新功能

399
00:18:11,325 --> 0:18:14,127
最显著的是模块的添加

400
00:18:14,194 --> 0:18:17,564
可以让你把你的代码分成多个

401
00:18:19,066 --> 0:18:21,768
模块表示为Swift代码目录

402
00:18:21,835 --> 0:18:24,171
可以在书中的任意页面使用

403
00:18:24,438 --> 0:18:28,141
你不需要担心设置目标

404
00:18:30,143 --> 0:18:34,114
用户可以向书中添加模块

405
00:18:35,382 --> 0:18:37,651
然而请注意 如果你重设了文档

406
00:18:37,985 --> 0:18:40,187
那么所有用户编辑也会被重设

407
00:18:40,354 --> 0:18:43,557
这确实包含所添加的任意文件或模块

408
00:18:46,493 --> 0:18:49,329
所以通过所有这些新文件

409
00:18:49,630 --> 0:18:51,865
我们可以了解一下

410
00:18:52,366 --> 0:18:54,668
我要使用“形状”模板作为例子

411
00:18:56,670 --> 0:18:58,739
每本书都有许多页

412
00:18:59,940 --> 0:19:02,843
每本书还可以有多个模块

413
00:18:59,940 --> 0:19:02,843
每本书还可以有多个模块

414
00:19:04,478 --> 0:19:08,048
这些模块中的每一个也都可以

415
00:19:09,850 --> 0:19:12,619
让我快速讲一下

416
00:19:12,686 --> 0:19:14,922
这些不同的Swift

417
00:19:16,990 --> 0:19:20,661
每本书内一张页面上的代码

418
00:19:21,094 --> 0:19:23,564
也就是说“画布”页面上的代码

419
00:19:23,630 --> 0:19:26,333
与“创建”页面上的代码不共享

420
00:19:27,568 --> 0:19:31,905
然而每个模块都自动导入到

421
00:19:32,339 --> 0:19:36,009
这意味着每个页面上都能访问

422
00:19:36,076 --> 0:19:38,178
只要那个代码被标记为公共代码即可

423
00:19:41,048 --> 0:19:43,917
同一个模块中的文件可以相互访问

424
00:19:43,984 --> 0:19:45,986
而不需要把代码标记为公共代码

425
00:19:46,453 --> 0:19:48,522
然而如果代码被标记为私有代码

426
00:19:48,589 --> 0:19:52,726
它将对其它模块或页面中的其它文件

427
00:19:52,893 --> 0:19:54,461
它仅为那个文件所私有

428
00:19:57,297 --> 0:20:00,300
默认情况下 模块之间的代码不共享

429
00:19:57,297 --> 0:20:00,300
默认情况下 模块之间的代码不共享

430
00:20:01,101 --> 0:20:04,471
但假如我在“图形”模块有一些代码

431
00:20:04,538 --> 0:20:07,241
我想在我的

432
00:20:07,307 --> 0:20:08,809
那个文件在我的“数学”模块中

433
00:20:09,610 --> 0:20:12,846
我所要做的就是确保“图形”代码

434
00:20:13,213 --> 0:20:16,950
然后把“图形”模块导入到我的

435
00:20:19,953 --> 0:20:24,291
通过模块 你仍然可以访问内联结果

436
00:20:24,591 --> 0:20:28,195
因此你可以观察代码在全部文件中

437
00:20:28,896 --> 0:20:30,497
当app分步执行代码时

438
00:20:30,564 --> 0:20:34,168
它会自动切换正在执行代码的文件

439
00:20:36,403 --> 0:20:38,238
你还可以关掉内联结果

440
00:20:38,305 --> 0:20:41,275
那会加速执行速度 我们已经在

441
00:20:42,109 --> 0:20:45,212
你可以从“执行控制菜单”

442
00:20:45,279 --> 0:20:47,881
以及“分步执行我的代码”

443
00:20:50,884 --> 0:20:54,688
新的“问题”弹出框可在一个文档中

444
00:20:54,755 --> 0:20:57,724
并可以让你轻松地

445
00:20:59,393 --> 0:21:01,061
如果你轻触任何一个错误

446
00:20:59,393 --> 0:21:01,061
如果你轻触任何一个错误

447
00:21:01,261 --> 0:21:03,530
它会把你带到相应的代码行

448
00:21:03,897 --> 0:21:07,100
既包含创建错误 又包含运行时错误

449
00:21:09,970 --> 0:21:14,408
Swift Playgrounds支持Swift 5

450
00:21:15,008 --> 0:21:18,846
这可以让你使用这样的框架

451
00:21:19,146 --> 0:21:22,482
直接在iOS上做iOS开发

452
00:21:24,518 --> 0:21:26,987
一切都来自一个空白的

453
00:21:27,821 --> 0:21:30,757
你可以通过“目录”弹出框添加页面

454
00:21:32,259 --> 0:21:33,193
添加模型

455
00:21:34,194 --> 0:21:37,164
并向那些模块中添加源代码文件

456
00:21:37,231 --> 0:21:39,166
而不需要离开app

457
00:21:41,935 --> 0:21:44,905
还有许多自定义你的内容的方式

458
00:21:45,372 --> 0:21:49,009
比如设置模块模式、

459
00:21:49,076 --> 0:21:52,379
并当用户打开你的文档时

460
00:21:52,980 --> 0:21:55,616
接下来我想邀请我的同事Joy上台

461
00:21:55,682 --> 0:21:56,550
为大家讲如何实现

462
00:22:01,788 --> 0:22:02,656
谢谢Grace

463
00:22:06,260 --> 0:22:08,195
接下来让我们讲一下作者们

464
00:22:08,262 --> 0:22:10,197
可以在Xcode中

465
00:22:10,564 --> 0:22:12,266
无论你是直接共享

466
00:22:12,332 --> 0:22:13,800
或是通过订阅实现

467
00:22:15,335 --> 0:22:18,605
当我在教学时

468
00:22:18,672 --> 0:22:22,109
要选择恰当并尽可能具有用户友好性

469
00:22:23,544 --> 0:22:26,713
为了给拥有不同知识储备的你们

470
00:22:26,880 --> 0:22:30,717
在Swift Playgrounds 3中

471
00:22:31,151 --> 0:22:33,353
你可以用于突显你的

472
00:22:33,687 --> 0:22:35,789
并移除不必要的复杂的东西

473
00:22:36,523 --> 0:22:39,660
这些新功能可以帮助你们创建

474
00:22:40,060 --> 0:22:42,196
并为初学者在实际的开发工具中

475
00:22:42,262 --> 0:22:43,597
提供一种非常友好的体验

476
00:22:45,332 --> 0:22:47,134
首先让我们看一下模块模式

477
00:22:47,367 --> 0:22:49,670
你已经听到许多关于app中的

478
00:22:50,003 --> 0:22:51,538
Jonathan和Grace

479
00:22:52,239 --> 0:22:56,109
作为作者 你可以决定哪个模块模式

480
00:22:57,010 --> 0:22:59,413
因为所有模块都是一个新功能

481
00:22:59,713 --> 0:23:01,982
并不是所有的书都受益于模块的使用

482
00:22:59,713 --> 0:23:01,982
并不是所有的书都受益于模块的使用

483
00:23:02,482 --> 0:23:05,118
为此 我们有三种模块模式

484
00:23:05,619 --> 0:23:07,154
分别是无、受限和全部

485
00:23:07,621 --> 0:23:08,822
你所选择的模块模式

486
00:23:08,889 --> 0:23:11,158
将从根本上改变你的书的性质

487
00:23:11,592 --> 0:23:14,561
应该被视为用户体验的基础

488
00:23:15,996 --> 0:23:18,065
让我们先看一下“无”模块模式

489
00:23:20,000 --> 0:23:23,403
这种模式为学生们提供了一种

490
00:23:23,770 --> 0:23:26,206
不允许访问用户模块

491
00:23:26,874 --> 0:23:29,610
这种模式完全依赖于页面和章节

492
00:23:29,676 --> 0:23:31,011
用代码推进故事

493
00:23:31,545 --> 0:23:34,014
每个页面都完全独立

494
00:23:34,181 --> 0:23:36,984
因此在页面之间不会以任何方式

495
00:23:39,319 --> 0:23:40,621
在“无”模块模式中

496
00:23:40,854 --> 0:23:43,590
你书中的所有代码都将进入

497
00:23:44,558 --> 0:23:46,393
这将创建私有模块

498
00:23:46,560 --> 0:23:48,629
并在Playground

499
00:23:48,996 --> 0:23:50,731
而你的学生们不能编辑它

500
00:23:51,598 --> 0:23:54,067
你可以在三种模式的任意一种模式中

501
00:23:54,368 --> 0:23:56,336
然而“无”模块模式的区别在于

502
00:23:56,637 --> 0:23:59,339
你的全部代码都将进入私有模块

503
00:24:01,375 --> 0:24:02,476
在你创建书时

504
00:24:02,643 --> 0:24:06,680
请记住对页面和章节的体验

505
00:24:07,347 --> 0:24:10,684
作为作者 你应该考虑

506
00:24:11,051 --> 0:24:15,289
并让每个页面都实现一些你能实现的

507
00:24:16,156 --> 0:24:18,292
这将为学习者提供一个紧密的

508
00:24:18,525 --> 0:24:20,761
确保他们了解他们已经完成了任务

509
00:24:21,228 --> 0:24:22,396
他们已经准备好继续了

510
00:24:24,264 --> 0:24:27,334
要浏览这本模块模式书的

511
00:24:27,534 --> 0:24:30,838
请查看

512
00:24:31,138 --> 0:24:35,042
Learn to Code 2、Lights、

513
00:24:37,611 --> 0:24:41,582
“受限”模式是你初次涉足用户模块

514
00:24:42,282 --> 0:24:44,651
“受限”模式只限于单一用户模块

515
00:24:44,985 --> 0:24:50,023
与私有模块不同

516
00:24:52,192 --> 0:24:55,229
用户模块中共享的文件

517
00:24:55,495 --> 0:24:57,531
并且随着时间的推移

518
00:24:58,498 --> 0:25:00,133
访问单一模块

519
00:24:58,498 --> 0:25:00,133
访问单一模块

520
00:25:00,434 --> 0:25:02,970
你的学生们可以学习如何管理

521
00:25:03,570 --> 0:25:06,840
来自他们不一定打开过的文件中的

522
00:25:08,775 --> 0:25:10,010
在你的一个模块内

523
00:25:10,277 --> 0:25:12,713
你可以想提供多少共享文件

524
00:25:13,380 --> 0:25:15,749
你的学生们可以在他们的用户模块内

525
00:25:16,016 --> 0:25:18,318
任意共享文件

526
00:25:20,287 --> 0:25:22,890
作为作者 你还可以使用私有模块

527
00:25:24,024 --> 0:25:27,194
在模块目录中

528
00:25:27,361 --> 0:25:28,629
包含你不想让学生们编辑的API

529
00:25:30,330 --> 0:25:31,932
正如你在Jonathan的演示中

530
00:25:32,232 --> 0:25:35,869
他向单一Math.swift

531
00:25:36,803 --> 0:25:39,873
添加新的共享文件是学习的好机会

532
00:25:39,940 --> 0:25:42,543
学习如何教学生们

533
00:25:43,544 --> 0:25:44,611
你可以教你的学生们

534
00:25:44,678 --> 0:25:48,248
把代码移动到一个共享文件中

535
00:25:48,882 --> 0:25:51,218
或移到不经常更改的代码旁边

536
00:25:52,853 --> 0:25:55,923
要浏览受限模式书的示例库

537
00:25:55,989 --> 0:25:58,659
你可以查看Blu's Adventure、

538
00:25:59,092 --> 0:26:01,428
Flashy Photos

539
00:25:59,092 --> 0:26:01,428
Flashy Photos

540
00:26:01,495 --> 0:26:02,829
你在这里看到了其中一些挑战

541
00:26:04,998 --> 0:26:06,900
如果你想要全部附加功能

542
00:26:06,967 --> 0:26:08,535
你可以用“全部”模块模式

543
00:26:09,269 --> 0:26:11,405
这个模式为你提供全部可用的工具

544
00:26:11,672 --> 0:26:15,909
包括创建多个模块以及在这些模块内

545
00:26:17,678 --> 0:26:21,114
这个模块适合教代码架构和管理

546
00:26:21,648 --> 0:26:22,950
在“全部”模块模式中

547
00:26:23,417 --> 0:26:25,986
你不仅可以教如何管理多个文件

548
00:26:26,153 --> 0:26:27,287
还可以教如何管理多个模块

549
00:26:27,654 --> 0:26:30,591
以及如何把模块导入到其它模块中

550
00:26:32,759 --> 0:26:35,729
在“全部”模块模式

551
00:26:35,929 --> 0:26:38,665
并可以拥有许多预创建的用户模块

552
00:26:39,766 --> 0:26:42,936
“全部”模块模式也为学生们提供了

553
00:26:43,003 --> 0:26:47,040
他们可以扩展那些用户模块

554
00:26:48,342 --> 0:26:49,877
当你创建模块时

555
00:26:50,043 --> 0:26:52,646
你应该考虑何时想要使用私有模块

556
00:26:53,180 --> 0:26:54,214
以及何时使用用户模块

557
00:26:55,816 --> 0:26:58,285
通过把全部代码放到用户模块中

558
00:26:58,519 --> 0:27:01,788
你的学生们可以轻松地在你的

559
00:26:58,519 --> 0:27:01,788
你的学生们可以轻松地在你的

560
00:27:02,222 --> 0:27:03,557
从而了解它是如何创建的

561
00:27:04,258 --> 0:27:07,661
这还可以让他们完全控制修补工具

562
00:27:08,195 --> 0:27:10,464
可以让你的学生们超越

563
00:27:11,665 --> 0:27:14,601
更加靠近他们的目标

564
00:27:14,668 --> 0:27:16,770
即成为一名app开发人员

565
00:27:18,839 --> 0:27:21,742
要浏览“全部”模块模式书的示例库

566
00:27:21,975 --> 0:27:23,644
请查看任意起点

567
00:27:24,978 --> 0:27:28,248
要指明你想让你的书归入哪个

568
00:27:28,448 --> 0:27:32,519
你必须在书一级的清单中编辑

569
00:27:34,922 --> 0:27:36,990
你可以实现的另一个自定义是

570
00:27:37,057 --> 0:27:40,127
当在“受限”和“全部”模式下

571
00:27:40,494 --> 0:27:44,798
会按页面自动打开并激活

572
00:27:46,633 --> 0:27:50,404
你可以在选项卡式编辑器中

573
00:27:50,871 --> 0:27:53,240
你可以指明要打开哪个文件

574
00:27:53,507 --> 0:27:56,176
以及当你到达页面时要激活哪个文件

575
00:27:58,178 --> 0:28:01,782
要添加开放文件意味着

576
00:27:58,178 --> 0:28:01,782
要添加开放文件意味着

577
00:28:02,015 --> 0:28:04,818
但编辑器中可能有其它文件

578
00:28:05,786 --> 0:28:09,022
当用户到达页面时

579
00:28:09,223 --> 0:28:11,425
可以帮助他们了解他们要编辑

580
00:28:11,792 --> 0:28:12,893
或需要引用哪个文件

581
00:28:13,126 --> 0:28:16,697
而他们不需要自己在文件弹出框中

582
00:28:19,032 --> 0:28:22,569
你可以在页面级的清单中

583
00:28:23,170 --> 0:28:24,705
按页面指定所打开的文件

584
00:28:26,340 --> 0:28:27,374
在清单中

585
00:28:27,441 --> 0:28:30,477
使用UserModuleSourceFilesToOpen

586
00:28:31,678 --> 0:28:33,647
接着是共享文件的数组

587
00:28:34,314 --> 0:28:37,618
每一项的值都应该是所共享的

588
00:28:40,187 --> 0:28:42,256
在任何情况下 你有开放文件时

589
00:28:42,422 --> 0:28:44,558
默认动作是main.swift

590
00:28:44,892 --> 0:28:47,361
为最前面的文件或激活文件

591
00:28:48,695 --> 0:28:50,397
然而如果其中一个共享文件

592
00:28:50,464 --> 0:28:52,432
是你的用户要处理的

593
00:28:52,499 --> 0:28:53,834
第一个或最主要的文件

594
00:28:54,201 --> 0:28:57,337
当用户到达这个页面时

595
00:28:59,072 --> 0:29:01,041
要声明共享文件为激活文件

596
00:28:59,072 --> 0:29:01,041
要声明共享文件为激活文件

597
00:29:01,408 --> 0:29:06,680
要在页面级的清单中再次使用

598
00:29:07,414 --> 0:29:10,417
这个密钥的值是

599
00:29:12,886 --> 0:29:16,323
你总是会在主文件中执行代码完成

600
00:29:16,890 --> 0:29:18,625
在Swift Playgrounds 3中

601
00:29:18,825 --> 0:29:22,029
让我们看一下如何对共享文件

602
00:29:24,431 --> 0:29:28,435
代码完成指令决定了

603
00:29:29,203 --> 0:29:32,472
快捷方式栏是一个很有帮助的工具

604
00:29:32,940 --> 0:29:34,575
最小化他们必须键入的时间

605
00:29:34,842 --> 0:29:36,777
并确保他们总是知道下一步要做什么

606
00:29:37,744 --> 0:29:39,046
在介绍性内容中

607
00:29:39,246 --> 0:29:40,948
你想减少录入的障碍

608
00:29:41,114 --> 0:29:43,884
通过让学生们

609
00:29:44,518 --> 0:29:45,853
在更高级的内容中

610
00:29:46,053 --> 0:29:48,422
你想在何时的时候暴露API

611
00:29:49,857 --> 0:29:53,427
作为作者 你可以按页面控制在

612
00:29:53,493 --> 0:29:57,497
快捷方式栏中显示哪些API

613
00:29:59,600 --> 0:30:01,535
为了管理这些完成

614
00:29:59,600 --> 0:30:01,535
为了管理这些完成

615
00:30:01,602 --> 0:30:04,071
Swift Playgrounds

616
00:30:04,304 --> 0:30:06,507
你可以在这两个地方提供

617
00:30:07,774 --> 0:30:11,378
先看一下你可能熟悉的一个地方

618
00:30:14,014 --> 0:30:16,116
如果你在新内容中没有任何

619
00:30:16,483 --> 0:30:18,685
这就是你首先会看到的内容

620
00:30:18,919 --> 0:30:20,888
Assemble Your Camera

621
00:30:22,322 --> 0:30:25,425
为了确保你可以完全控制

622
00:30:25,959 --> 0:30:28,395
你可以先从这个指令开始

623
00:30:29,029 --> 0:30:30,063
正如它的名字所暗示的那样

624
00:30:30,130 --> 0:30:32,366
这会隐藏快捷方式栏中的一切

625
00:30:32,566 --> 0:30:34,334
这会为你提供一个白板

626
00:30:36,170 --> 0:30:39,173
要把创建建议放回到快捷方式栏中

627
00:30:39,239 --> 0:30:40,908
你可以使用

628
00:30:41,341 --> 0:30:43,911
这是一个特殊关键字

629
00:30:44,144 --> 0:30:48,015
用于确保在主文件中显示

630
00:30:50,350 --> 0:30:51,752
指令模块后面

631
00:30:52,085 --> 0:30:54,188
是一个用逗号分隔的模块列表

632
00:30:54,454 --> 0:30:58,025
那会显示用户模块文件中

633
00:30:58,425 --> 0:31:01,595
以及用户在使用Playground时

634
00:30:58,425 --> 0:31:01,595
以及用户在使用Playground时

635
00:31:02,829 --> 0:31:04,631
这与你用来暴露库

636
00:31:04,698 --> 0:31:06,667
指令是同一个指令

637
00:31:07,634 --> 0:31:09,670
要获取关于各种指令的更多信息

638
00:31:09,736 --> 0:31:12,206
请查看

639
00:31:14,775 --> 0:31:16,810
在Swift Playgrounds 3中

640
00:31:17,177 --> 0:31:20,214
如何在页面级清单中向共享文件中

641
00:31:21,215 --> 0:31:22,716
添加代码完成指令

642
00:31:23,851 --> 0:31:26,019
这意味着就像

643
00:31:26,086 --> 0:31:28,355
当学生们翻阅你的书时

644
00:31:28,422 --> 0:31:29,890
你如何指定在主文件中

645
00:31:30,457 --> 0:31:32,392
你也可以在共享文件中

646
00:31:32,826 --> 0:31:35,863
确保你不会让学习者们

647
00:31:38,065 --> 0:31:39,900
为此你可以使用密钥

648
00:31:40,167 --> 0:31:42,469
UserModule

649
00:31:43,036 --> 0:31:45,405
然后是代码完成指令的一个数组

650
00:31:45,472 --> 0:31:48,008
类似于你在主文件中的操作一样

651
00:31:50,110 --> 0:31:51,812
如果使用

652
00:31:51,879 --> 0:31:54,648
你将可以使用currentmodule show

653
00:31:55,215 --> 0:31:58,051
在主文件和共享文件中显示

654
00:31:59,620 --> 0:32:03,757
此外你还可以添加关键字作为标识符

655
00:31:59,620 --> 0:32:03,757
此外你还可以添加关键字作为标识符

656
00:32:04,157 --> 0:32:05,392
从而当学生们开始在共享文件中

657
00:32:05,459 --> 0:32:08,896
学习新函数、新类和新结构时

658
00:32:11,732 --> 0:32:14,368
接下来让我们谈谈在Swift中

659
00:32:16,603 --> 0:32:18,805
Swift Playgrounds

660
00:32:19,006 --> 0:32:24,011
使用过场动画来介绍新技术、

661
00:32:25,212 --> 0:32:30,384
之前只能用HTML实现

662
00:32:36,690 --> 0:32:39,326
这就为你 为开发者提供了许多好处

663
00:32:40,160 --> 0:32:43,664
你可以利用一些框架 比如SpriteKit、

664
00:32:44,731 --> 0:32:47,734
通过使用Swift

665
00:32:49,002 --> 0:32:51,004
那意味着你可以使用界面创建器

666
00:32:52,005 --> 0:32:53,874
来创建Storyboard

667
00:32:55,209 --> 0:32:57,244
你可以本地化你的过场动画

668
00:32:57,311 --> 0:32:59,947
所使用的工具与你本地化你的内容

669
00:33:02,349 --> 0:33:04,985
你可以使用Swift

670
00:33:05,052 --> 0:33:06,887
与添加新页面的方式类似

671
00:33:08,222 --> 0:33:09,356
在页面文件夹中

672
00:33:09,523 --> 0:33:12,059
你仍需要一个以.cutscenepage

673
00:33:12,459 --> 0:33:15,696
只有现在你才既需要

674
00:33:16,363 --> 0:33:19,867
你所包含的.swift文件

675
00:33:20,234 --> 0:33:22,202
应该运行并呈现一个实时视图

676
00:33:24,571 --> 0:33:27,374
为了让你的过场动画在目录中显示

677
00:33:27,441 --> 0:33:29,443
你要把它添加到章节级的清单中

678
00:33:30,344 --> 0:33:31,912
就像添加新页面一样

679
00:33:34,381 --> 0:33:36,650
最后我要非常激动地给你们介绍

680
00:33:36,717 --> 0:33:38,752
本地化代码注释

681
00:33:40,554 --> 0:33:43,624
如果你把Playground书

682
00:33:43,690 --> 0:33:48,729
你现在可以在任意主文件

683
00:33:49,429 --> 0:33:52,900
这意味着你的书将对学生们进行

684
00:34:00,574 --> 0:34:03,744
对于代码注释

685
00:34:04,211 --> 0:34:05,612
包装单一或多个注释

686
00:34:05,946 --> 0:34:09,248
每个可本地化区域都应该有一个

687
00:34:10,650 --> 0:34:15,022
你还可以使用内联可本地化区域

688
00:34:16,822 --> 0:34:18,859
你的本地化代码注释的输出

689
00:34:18,926 --> 0:34:22,161
将被存储在

690
00:34:22,228 --> 0:34:24,531
这个文件位于书一级的

691
00:34:26,600 --> 0:34:28,635
这只是Swift Playgrounds 3中

692
00:34:28,702 --> 0:34:30,469
为作者提供的强大的新功能中的几个

693
00:34:31,038 --> 0:34:33,774
接下来让我们结合Grace的演示

694
00:34:33,841 --> 0:34:35,842
看看所有这些新的作者和app功能

695
00:34:44,284 --> 0:34:46,420
通过所有这些新功能

696
00:34:46,485 --> 0:34:47,821
我真的很想炫耀一下

697
00:34:47,888 --> 0:34:50,958
你可以在iPad上创建

698
00:34:51,024 --> 0:34:52,893
超级强健和有意思的

699
00:34:54,228 --> 0:34:55,094
你们都知道

700
00:34:55,161 --> 0:34:59,633
在iPad上创建集成iOS

701
00:34:59,700 --> 0:35:02,503
是从Mac上的Xcode中的

702
00:34:59,700 --> 0:35:02,503
是从Mac上的Xcode中的

703
00:35:02,903 --> 0:35:05,105
编写一些代码

704
00:35:05,172 --> 0:35:06,173
看是否生效

705
00:35:06,240 --> 0:35:09,276
然后在两台设备之间来回迭代

706
00:35:09,877 --> 0:35:11,945
但你可以更迅速地迭代

707
00:35:12,012 --> 0:35:13,113
如果你就在iPad上

708
00:35:13,180 --> 0:35:15,582
使用Swift Playgrounds

709
00:35:16,750 --> 0:35:20,120
我想使用Vision框架

710
00:35:20,354 --> 0:35:23,824
它使用摄像头和Core ML

711
00:35:24,191 --> 0:35:27,327
Swift Playgrounds

712
00:35:29,429 --> 0:35:31,899
在美式手语中有一个概念

713
00:35:31,965 --> 0:35:36,136
是名字手语

714
00:35:37,337 --> 0:35:40,707
我小时候

715
00:35:40,774 --> 0:35:42,676
是字母G和一个微笑

716
00:35:43,310 --> 0:35:45,479
但左边那个不笑的人是我

717
00:35:45,546 --> 0:35:47,314
也许应该更像这样

718
00:35:48,782 --> 0:35:50,584
为了实现这个想法

719
00:35:50,651 --> 0:35:52,886
我创建了一些内容

720
00:35:52,953 --> 0:35:55,589
集成了一些涂鸦和一些手语识别

721
00:35:55,889 --> 0:35:56,857
我现在想展示给你们看

722
00:36:04,131 --> 0:36:06,366
好吧 这就是我的内容

723
00:36:06,800 --> 0:36:09,403
打包到了一本书中

724
00:36:09,970 --> 0:36:11,905
我想要做的就是

725
00:36:11,972 --> 0:36:14,041
让Jonathan、Joy和我

726
00:36:14,107 --> 0:36:16,577
给自己创建独特的面部彩绘

727
00:36:16,643 --> 0:36:19,213
然后用手语触发那些绘画

728
00:36:19,980 --> 0:36:23,717
我正在做触摸识别

729
00:36:23,951 --> 0:36:27,955
然后我要使用Vision框架

730
00:36:28,555 --> 0:36:31,959
然后我要使用Core ML来执行

731
00:36:32,025 --> 0:36:35,195
从而根据手势切换绘制

732
00:36:37,497 --> 0:36:38,665
我创建了我的书

733
00:36:38,999 --> 0:36:40,400
并把它放在“受限”模式下

734
00:36:40,467 --> 0:36:43,270
因此我可以隐藏某些实施细节

735
00:36:43,504 --> 0:36:46,240
我其实只想让我的用户关注

736
00:36:46,306 --> 0:36:48,108
我在用户模块中所创建的

737
00:36:49,776 --> 0:36:54,481
我在Mac上培训了一个

738
00:36:54,548 --> 0:36:57,017
分别是G、Y和N

739
00:36:57,618 --> 0:37:01,722
然后我把模型导入到iPad上的

740
00:36:57,618 --> 0:37:01,722
然后我把模型导入到iPad上的

741
00:37:02,689 --> 0:37:04,258
G代表Grace

742
00:37:04,591 --> 0:37:07,628
而我的搭档

743
00:37:07,694 --> 0:37:10,197
他们的名字头两个字母一样

744
00:37:10,464 --> 0:37:11,832
所以我选择了第三个字母

745
00:37:11,899 --> 0:37:15,135
Y代表Joy

746
00:37:16,036 --> 0:37:18,372
我想邀请他们俩上台来做演示

747
00:37:30,651 --> 0:37:33,320
好吧 在第一页上

748
00:37:33,387 --> 0:37:36,056
我添加了一些描述 告诉用户做什么

749
00:37:36,723 --> 0:37:38,625
当Joy轻触源文件编辑器时

750
00:37:39,026 --> 0:37:41,428
你会看到我已经添加了一个

751
00:37:41,495 --> 0:37:43,463
用于推荐setColors函数

752
00:37:44,698 --> 0:37:47,000
只需要轻触

753
00:37:47,067 --> 0:37:51,071
选择颜色文字占位符来填写这个函数

754
00:37:51,605 --> 0:37:54,007
这个快速编辑器使这样查看

755
00:37:54,074 --> 0:37:55,843
UI的不同颜色变得超级简单

756
00:37:57,211 --> 0:38:00,047
setColors函数设置了

757
00:37:57,211 --> 0:38:00,047
setColors函数设置了

758
00:38:00,113 --> 0:38:02,082
一旦她运行代码就会变得可用

759
00:38:02,149 --> 0:38:03,383
让我们继续并操作一下

760
00:38:06,787 --> 0:38:10,324
太棒了 让我们把实时视图展开为

761
00:38:11,692 --> 0:38:14,027
她会循环通过底部 左下角

762
00:38:14,094 --> 0:38:15,596
设置Y代表Joy

763
00:38:16,063 --> 0:38:18,031
然后她可以轻触右下角

764
00:38:18,098 --> 0:38:19,366
选择要绘制的颜色

765
00:38:20,067 --> 0:38:22,035
然后她可以做一些面部彩绘

766
00:38:24,271 --> 0:38:26,240
她所绘制的内容

767
00:38:26,306 --> 0:38:27,441
会通过Vision框架

768
00:38:27,508 --> 0:38:31,245
那会返回面部轮廓以及一些面部特征

769
00:38:31,678 --> 0:38:34,214
我要使用左侧瞳孔把所有这些点

770
00:38:34,281 --> 0:38:35,682
都映射到它们的正确位置上去

771
00:38:36,416 --> 0:38:39,786
一旦她满意了 她可以轻触完成

772
00:38:41,388 --> 0:38:43,257
然后这些绘制就被呈现为

773
00:38:43,323 --> 0:38:46,560
一组颜色和距离

774
00:38:46,627 --> 0:38:47,794
然后被映射到一个字母

775
00:38:48,562 --> 0:38:50,163
然后把这个信息保存到

776
00:38:50,230 --> 0:38:52,599
这个Playground的

777
00:38:53,066 --> 0:38:56,603
用于映射的所有代码都在

778
00:38:56,670 --> 0:39:00,340
并对用户可用 可以让用户细读

779
00:38:56,670 --> 0:39:00,340
并对用户可用 可以让用户细读

780
00:39:00,407 --> 0:39:02,509
而不会弄乱主页面

781
00:39:03,310 --> 0:39:05,245
看起来Jonathan已经完成了

782
00:39:17,024 --> 0:39:17,858
酷

783
00:39:22,496 --> 0:39:24,398
太棒了 现在让我们进入下一个页面

784
00:39:24,464 --> 0:39:26,967
这个页面指导我们运行代码

785
00:39:29,136 --> 0:39:31,305
让我们再次全屏显示实时视图

786
00:39:31,371 --> 0:39:32,306
从而可以更好地查看它

787
00:39:33,140 --> 0:39:36,310
目前 除了面部识别什么都没发生

788
00:39:36,577 --> 0:39:38,745
但请试着比划字母Y

789
00:39:40,180 --> 0:39:42,883
太棒了 Swift Playgrounds

790
00:39:44,451 --> 0:39:45,285
是的！

791
00:39:48,755 --> 0:39:51,625
Swift Playgrounds

792
00:39:51,692 --> 0:39:54,027
并把她的绘制投射到她的脸上

793
00:39:54,361 --> 0:39:56,496
让我们看一下如果我们尝试比划

794
00:39:57,965 --> 0:39:59,733
-哦 我不知道

795
00:40:01,635 --> 0:40:04,471
我们马上就成功了 也许试试代表

796
00:40:04,771 --> 0:40:05,839
这就对了

797
00:40:06,473 --> 0:40:07,341
酷 酷

798
00:40:07,574 --> 0:40:09,576
它甚至可以切换面部

799
00:40:11,778 --> 0:40:13,780
完美 你看起来从没这么漂亮过

800
00:40:18,552 --> 0:40:21,788
所有这些代码完全都是

801
00:40:21,855 --> 0:40:23,457
Swift Playgrounds中

802
00:40:23,790 --> 0:40:25,726
并且你可以对学生们、

803
00:40:25,792 --> 0:40:28,295
朋友们或Mac上的搭档

804
00:40:28,362 --> 0:40:31,098
制作独一无二并且非常有意思的内容

805
00:40:31,164 --> 0:40:32,666
那可以让Swift Playgrounds

806
00:40:39,706 --> 0:40:43,043
你可以在线下载Jonathan的

807
00:40:43,110 --> 0:40:48,248
wwdcswiftplaygrounds2019.github.io

808
00:40:49,049 --> 0:40:53,954
要获取更多信息 请查看

809
00:40:54,321 --> 0:40:56,723
欢迎参加明早举办的演讲

810
00:40:57,090 --> 0:40:58,759
时间是早上9点

811
00:40:58,825 --> 0:41:00,527
我们都会参加演讲

812
00:40:58,825 --> 0:41:00,527
我们都会参加演讲

813
00:41:01,962 --> 0:41:04,398
非常感谢你们的参与
