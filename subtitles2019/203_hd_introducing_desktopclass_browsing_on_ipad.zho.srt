1
00:00:06,406 --> 0:00:11,078
（在iPad上进行桌面级浏览的介绍）

2
00:00:18,085 --> 0:00:19,286
大家早上好

3
00:00:19,720 --> 0:00:21,722
欢迎参加演讲203

4
00:00:22,289 --> 0:00:25,425
在iPad上进行桌面级浏览的介绍

5
00:00:26,126 --> 0:00:30,564
我叫Charles Ying

6
00:00:30,631 --> 0:00:33,500
来自Safari WebKit团队的

7
00:00:35,202 --> 0:00:38,839
我们将与大家分享桌面级浏览

8
00:00:39,473 --> 0:00:43,710
它是iPad上网络平台的一个

9
00:00:45,145 --> 0:00:46,680
正如你在主旨演讲中所听到的那样

10
00:00:46,747 --> 0:00:50,450
iPadOS上的Safari

11
00:00:51,585 --> 0:00:52,686
那意味着什么呢？

12
00:00:53,921 --> 0:00:56,256
这意味着你可以在Safari中

13
00:00:56,757 --> 0:00:58,358
现在你可以使用Safari

14
00:00:58,425 --> 0:01:01,395
实现你希望在网页上

15
00:00:58,425 --> 0:01:01,395
实现你希望在网页上

16
00:01:03,096 --> 0:01:04,965
Safari是新的下载管理器

17
00:01:05,265 --> 0:01:08,202
因此你可以下载和上传文件…

18
00:01:09,102 --> 0:01:13,106
同时还可以使用其它标签

19
00:01:14,575 --> 0:01:17,611
Safari还有新控件 全页缩放

20
00:01:18,412 --> 0:01:21,181
当你需要更多工作空间时

21
00:01:21,815 --> 0:01:25,886
以及根据不同网站设置不同偏好

22
00:01:27,454 --> 0:01:30,891
并且现在Safari可以使用

23
00:01:31,258 --> 0:01:33,527
所能使用的全部的键盘捷径了

24
00:01:33,827 --> 0:01:37,798
从而让工作速度更快

25
00:01:39,299 --> 0:01:40,234
但一切的关键是…

26
00:01:41,168 --> 0:01:42,736
浏览桌面网站

27
00:01:47,975 --> 0:01:50,844
我们长期以来一直在做网页浏览器

28
00:01:52,112 --> 0:01:54,348
当生产出第一台iPhone时

29
00:01:54,948 --> 0:01:57,985
所有网站看起来都很大

30
00:01:59,620 --> 0:02:02,689
这些网站在iPhone上看起来

31
00:01:59,620 --> 0:02:02,689
这些网站在iPhone上看起来

32
00:02:03,457 --> 0:02:05,359
如果不对它们进行修改的话…

33
00:02:05,826 --> 0:02:08,662
让它们适应小屏幕以及多点触控操作

34
00:02:09,997 --> 0:02:13,901
iPhone应该调整网站

35
00:02:13,967 --> 0:02:15,035
从而可以让你阅读

36
00:02:16,203 --> 0:02:19,173
接着你们有了新的网络API

37
00:02:19,239 --> 0:02:23,343
让你们的网站

38
00:02:24,578 --> 0:02:27,014
而结果非常了不起

39
00:02:29,349 --> 0:02:31,585
你们中有一些人用过响应式设计技术

40
00:02:31,652 --> 0:02:35,355
从而让网站灵活地适应

41
00:02:35,923 --> 0:02:38,992
如今那些网站

42
00:02:41,094 --> 0:02:43,030
但也很常见

43
00:02:43,430 --> 0:02:45,732
因为网站有两个不同的版本

44
00:02:46,567 --> 0:02:49,403
一个是适应大显示屏的

45
00:02:51,538 --> 0:02:53,307
iPad使用了移动用户代理

46
00:02:53,607 --> 0:02:55,576
意思是它会使用小显示屏版的网站

47
00:02:56,910 --> 0:02:59,379
因此在iPadOS中有个新功能

48
00:03:00,180 --> 0:03:03,650
对于网站来说

49
00:03:05,953 --> 0:03:08,188
这并不仅仅是用户代理的变更

50
00:03:08,622 --> 0:03:13,327
还是WebKit的一系列

51
00:03:13,694 --> 0:03:16,029
那会打造一种了不起的新体验

52
00:03:16,897 --> 0:03:18,665
让我们具体来看一下其中两个变更

53
00:03:20,200 --> 0:03:21,602
有些电脑版网站

54
00:03:21,668 --> 0:03:25,138
目的是在大屏幕上显示大量信息

55
00:03:26,673 --> 0:03:29,042
这些网站在大iPad上是放大的

56
00:03:29,309 --> 0:03:32,112
并且你不能看到

57
00:03:32,913 --> 0:03:35,549
WebKit使用了视窗来展示网站

58
00:03:35,616 --> 0:03:37,751
对于每种iPad尺寸都一样

59
00:03:38,285 --> 0:03:41,522
从iPad Mini

60
00:03:43,357 --> 0:03:49,396
那么在iPadOS中有个新功能

61
00:03:50,531 --> 0:03:53,667
现在网站可以在较大的iPad上

62
00:03:54,601 --> 0:03:58,038
对于较小的iPad

63
00:03:58,605 --> 0:04:01,208
屏幕上的一切并调整文本大小

64
00:03:58,605 --> 0:04:01,208
屏幕上的一切并调整文本大小

65
00:04:01,542 --> 0:04:04,244
使阅读变得更舒适

66
00:04:05,445 --> 0:04:07,714
你可以一眼就看到更多网站内容

67
00:04:08,348 --> 0:04:11,785
就跟台式电脑一样 用起来更简便了

68
00:04:13,820 --> 0:04:16,757
有些电脑版网站

69
00:04:17,891 --> 0:04:19,226
在iOS 13中有个新功能

70
00:04:20,027 --> 0:04:23,764
iPad优化了触摸输入

71
00:04:24,231 --> 0:04:28,936
因此类似这种使用鼠标悬停的网站

72
00:04:31,171 --> 0:04:35,876
对于想要完全控制的网页app

73
00:04:37,211 --> 0:04:41,982
这只是你可以在网页app中利用的

74
00:04:42,349 --> 0:04:48,055
iPadOS中众多新网络API

75
00:04:49,056 --> 0:04:51,792
稍后Beth将会

76
00:04:53,727 --> 0:04:56,630
这些都将打造一种你在iPad上

77
00:04:56,964 --> 0:04:58,699
所期待拥有的强大的浏览体验

78
00:04:59,233 --> 0:05:03,437
那么这就是iPadOS中的

79
00:04:59,233 --> 0:05:03,437
那么这就是iPadOS中的

80
00:05:05,138 --> 0:05:06,206
现在…

81
00:05:09,276 --> 0:05:12,913
现在我们想分享app和网站如何

82
00:05:12,980 --> 0:05:15,883
最大限度地利用这些新功能

83
00:05:16,683 --> 0:05:18,085
对于app开发人员

84
00:05:18,151 --> 0:05:21,655
我们将分享如何在app中

85
00:05:22,589 --> 0:05:23,957
对于网页开发人员

86
00:05:24,024 --> 0:05:27,561
我们将分享如何让你的网站

87
00:05:28,929 --> 0:05:30,430
让我们从app开始讲

88
00:05:33,934 --> 0:05:36,770
app使用网页浏览有四种常见方式

89
00:05:37,671 --> 0:05:40,807
根据链接浏览网页内容

90
00:05:41,675 --> 0:05:42,676
网页浏览器

91
00:05:42,976 --> 0:05:45,312
在这里浏览是app的主要重点

92
00:05:46,079 --> 0:05:50,150
混合型app 在这里网络技术

93
00:05:50,984 --> 0:05:54,087
并通过第三方服务

94
00:05:55,322 --> 0:05:56,857
首先 链接引导

95
00:05:58,959 --> 0:06:01,695
打开链接并停留在

96
00:05:58,959 --> 0:06:01,695
打开链接并停留在

97
00:06:02,062 --> 0:06:03,697
是使用Safari视图控制器

98
00:06:04,565 --> 0:06:07,534
跟Safari一样

99
00:06:07,835 --> 0:06:10,137
包括自动填充和阅读器

100
00:06:10,971 --> 0:06:13,941
因此我很高兴地宣布

101
00:06:14,441 --> 0:06:16,610
那么你将免费获得桌面级浏览体验

102
00:06:17,477 --> 0:06:18,779
你不需要做任何事

103
00:06:20,147 --> 0:06:22,015
Safari和

104
00:06:22,082 --> 0:06:23,750
将自动选择一种浏览模式

105
00:06:24,117 --> 0:06:26,587
根据你的情况提供一种最佳体验

106
00:06:27,688 --> 0:06:28,755
让我来解释一下

107
00:06:30,123 --> 0:06:33,627
iPad是浏览因特网的完美设备

108
00:06:34,161 --> 0:06:36,063
就像把网页握在手心里的感觉

109
00:06:36,697 --> 0:06:40,434
根据你正在做的事情

110
00:06:42,503 --> 0:06:46,406
比如有些电脑版网站

111
00:06:47,641 --> 0:06:50,711
但在移动浏览体验中

112
00:06:52,412 --> 0:06:55,482
当你在较窄的分屏浏览

113
00:06:55,749 --> 0:06:57,985
或侧拉中浏览电脑版网站时也一样

114
00:06:59,753 --> 0:07:04,758
在这些窄窗口的情况中

115
00:06:59,753 --> 0:07:04,758
在这些窄窗口的情况中

116
00:07:06,260 --> 0:07:08,929
Safari和

117
00:07:08,996 --> 0:07:11,231
一种浏览模式 为你提供最佳体验

118
00:07:14,768 --> 0:07:17,137
Safari视图控制器将为你处理

119
00:07:17,204 --> 0:07:18,505
在你的app内打开链接

120
00:07:19,439 --> 0:07:20,974
如果你的app是一个网页浏览器

121
00:07:21,708 --> 0:07:22,709
你需要做这些

122
00:07:23,577 --> 0:07:28,849
首先通过iOS 13 SDK

123
00:07:29,683 --> 0:07:32,486
然后看看如何设置用户代理

124
00:07:33,720 --> 0:07:35,789
如果使用自定义用户代理属性

125
00:07:36,156 --> 0:07:39,960
我们推荐使

126
00:07:40,360 --> 0:07:42,462
applicationNameForUserAgent属性

127
00:07:43,363 --> 0:07:44,998
当你提供app名称时

128
00:07:45,265 --> 0:07:48,569
WebKit将为你填充

129
00:07:51,405 --> 0:07:55,742
WKWebView也是一个新

130
00:07:56,143 --> 0:07:58,412
用于设置优选内容浏览模式

131
00:07:59,680 --> 0:08:02,115
共有三种模式：推荐模式

132
00:07:59,680 --> 0:08:02,115
共有三种模式：推荐模式

133
00:08:02,616 --> 0:08:05,986
与Safari的功能一样、

134
00:08:06,887 --> 0:08:10,657
在绝大多数情况中都可以使用

135
00:08:12,659 --> 0:08:17,097
你的网页浏览器也希望让用户

136
00:08:17,164 --> 0:08:20,501
或根据不同网站设置不同偏好

137
00:08:22,402 --> 0:08:26,740
对于这些情况 WebKit有个新

138
00:08:27,774 --> 0:08:31,245
在导航时指定一种优选内容模式

139
00:08:35,349 --> 0:08:38,485
Wenson稍后会做一个演示

140
00:08:40,320 --> 0:08:41,621
除了网页浏览器

141
00:08:41,989 --> 0:08:45,592
还可以使用网络技术

142
00:08:45,659 --> 0:08:46,727
或用户界面

143
00:08:48,128 --> 0:08:50,197
如果你的app以这种方式

144
00:08:50,864 --> 0:08:54,334
通过iOS 13 SDK

145
00:08:55,435 --> 0:08:58,105
然后测试app

146
00:08:59,439 --> 0:09:00,674
在绝大多数情况中 你已经完成了

147
00:08:59,439 --> 0:09:00,674
在绝大多数情况中 你已经完成了

148
00:09:01,642 --> 0:09:04,311
但还有一些罕见情况

149
00:09:04,578 --> 0:09:06,847
你可以把优选内容模式设置为移动版

150
00:09:08,448 --> 0:09:10,417
总的来说非常简单

151
00:09:10,951 --> 0:09:12,920
WKWebView

152
00:09:18,091 --> 0:09:19,126
最后…

153
00:09:19,793 --> 0:09:23,230
哎呦 最后 网页浏览

154
00:09:23,497 --> 0:09:25,499
通过第三方服务使用

155
00:09:26,400 --> 0:09:28,936
如果你正在这样做

156
00:09:29,303 --> 0:09:30,771
是一种最佳的验证方式

157
00:09:31,972 --> 0:09:35,042
在iPadOS中有个新功能

158
00:09:35,309 --> 0:09:37,344
在iPad上呈现一个格式表

159
00:09:37,678 --> 0:09:39,446
显示验证界面

160
00:09:39,513 --> 0:09:41,481
同时仍会停留在app的情境中

161
00:09:42,349 --> 0:09:43,684
考虑到这个新呈现

162
00:09:44,351 --> 0:09:47,721
ASWebAuthenticationSession

163
00:09:48,222 --> 0:09:49,556
与Safari视图控制器一样

164
00:09:49,857 --> 0:09:52,426
如果你使用这个API

165
00:09:54,094 --> 0:09:58,465
总的来说 Safari视图控制器

166
00:09:58,532 --> 0:09:59,933
将替你做大部分繁冗的工作

167
00:10:01,168 --> 0:10:04,438
并且如果使用WKWebView

168
00:10:05,706 --> 0:10:07,708
现在我想邀请Wenson上台来

169
00:10:07,774 --> 0:10:09,843
给大家做一个演示

170
00:10:10,110 --> 0:10:11,144
Wenson

171
00:10:20,787 --> 0:10:21,955
谢谢Charles

172
00:10:23,056 --> 0:10:25,492
那么我的工作是开发网页浏览器

173
00:10:26,126 --> 0:10:28,328
我有时喜欢转移注意力

174
00:10:29,029 --> 0:10:30,564
写更多的网页浏览器

175
00:10:31,298 --> 0:10:34,368
那么今天我要介绍

176
00:10:36,303 --> 0:10:38,805
它是我写的一个

177
00:10:39,072 --> 0:10:40,841
它在Google Docs上

178
00:10:41,975 --> 0:10:44,545
那么有时我需要

179
00:10:44,611 --> 0:10:45,746
通过Google Docs

180
00:10:46,380 --> 0:10:49,082
为此我希望能使用我的浏览器

181
00:10:49,783 --> 0:10:52,886
但正如你在这里所看到的

182
00:10:53,720 --> 0:10:57,157
我打赌如果我请求这个网站的桌面版

183
00:10:57,558 --> 0:10:58,992
它会为我提供全部功能

184
00:10:59,526 --> 0:11:01,828
因为我刚刚从

185
00:10:59,526 --> 0:11:01,828
因为我刚刚从

186
00:11:02,296 --> 0:11:06,233
iOS 13中的

187
00:11:06,300 --> 0:11:08,602
在我的iPad Pro上

188
00:11:08,936 --> 0:11:12,840
因此我要根据iOS 13 SDK

189
00:11:13,473 --> 0:11:15,342
那应该为我提供电脑版网站

190
00:11:15,809 --> 0:11:17,711
那么我要切换到Xcode

191
00:11:18,478 --> 0:11:20,581
我只需要点击运行

192
00:11:20,647 --> 0:11:24,818
那会编译我的app

193
00:11:26,987 --> 0:11:28,222
好的 很好

194
00:11:28,288 --> 0:11:30,557
很遗憾 我们仍然是移动版

195
00:11:31,291 --> 0:11:33,260
让我看看我们是否可以

196
00:11:33,660 --> 0:11:35,362
现在让我们退一步

197
00:11:35,596 --> 0:11:37,931
Google Docs

198
00:11:38,298 --> 0:11:42,035
很可能是使用了用户代理字符串

199
00:11:43,303 --> 0:11:46,340
我要做的就是使用网页检测器

200
00:11:46,740 --> 0:11:48,675
并打印出用户代理字符串

201
00:11:49,576 --> 0:11:51,745
也许那会暗示我哪里出错了

202
00:11:52,679 --> 0:11:54,248
那么现在我要…

203
00:11:55,282 --> 0:11:57,951
启动Safari 进入开发菜单…

204
00:11:58,452 --> 0:11:59,753
并在这里嵌入

205
00:12:01,555 --> 0:12:03,590
我要切换到控制台标签

206
00:12:04,157 --> 0:12:07,961
我只需键入navigator.userAgent

207
00:12:09,229 --> 0:12:10,898
让我们具体看看这个用户代理

208
00:12:12,099 --> 0:12:14,468
在这里我想指出一些很有意思的事

209
00:12:15,102 --> 0:12:17,804
首先iPad这个词出现在了

210
00:12:18,071 --> 0:12:20,140
那么很明显它不是电脑版

211
00:12:20,941 --> 0:12:24,244
但更重要的是

212
00:12:24,311 --> 0:12:25,379
似乎有点不可思议

213
00:12:25,779 --> 0:12:27,014
它是从哪儿来的？

214
00:12:28,148 --> 0:12:29,917
嗯 我自己也想知道

215
00:12:29,983 --> 0:12:33,720
因此我要在

216
00:12:34,121 --> 0:12:36,456
因此我要使用Command-F

217
00:12:38,458 --> 0:12:40,127
好的 事实证明

218
00:12:40,527 --> 0:12:43,430
有代码覆盖了整个用户代理字符串

219
00:12:43,764 --> 0:12:46,667
使用了WKWebView的

220
00:12:47,968 --> 0:12:50,604
我肯定是在某个点上从因特网中

221
00:12:50,671 --> 0:12:52,172
然后就忘记了

222
00:12:52,906 --> 0:12:54,808
也许在当时是一个合理的方案

223
00:12:55,309 --> 0:12:59,346
但我刚从Charles那儿了解到

224
00:12:59,913 --> 0:13:02,082
我还可以在

225
00:12:59,913 --> 0:13:02,082
我还可以在

226
00:13:02,149 --> 0:13:04,952
使用app名称作为用户代理属性

227
00:13:05,352 --> 0:13:08,121
那么让我来修改一下

228
00:13:08,922 --> 0:13:11,859
我要做的第一件事是

229
00:13:12,526 --> 0:13:14,494
然后向上来到创建网页浏览的地方

230
00:13:15,495 --> 0:13:16,930
那么在这里我要…

231
00:13:18,832 --> 0:13:21,201
首先创建WKWebView配置

232
00:13:21,735 --> 0:13:23,837
然后为用户代理设置app名称…

233
00:13:24,304 --> 0:13:26,740
无论什么都可以

234
00:13:27,241 --> 0:13:30,444
最后我要使用这个配置

235
00:13:31,011 --> 0:13:32,279
这是一个很小的调整

236
00:13:33,080 --> 0:13:36,049
我要重新编译我的app

237
00:13:39,453 --> 0:13:42,289
好的 如你所见 我们现有

238
00:13:42,356 --> 0:13:45,459
并且我终于可以与朋友们合作了

239
00:13:46,059 --> 0:13:47,127
非常简单

240
00:13:47,427 --> 0:13:48,962
但现在让我们更进一步

241
00:13:49,763 --> 0:13:52,432
有一段时间我的用户们

242
00:13:52,833 --> 0:13:55,302
能在电脑版

243
00:13:55,369 --> 0:13:56,970
和移动版之前切换网页

244
00:13:57,738 --> 0:13:59,806
通过iOS 13中的新API

245
00:14:00,207 --> 0:14:03,177
现在实施起来很简单了

246
00:14:04,077 --> 0:14:07,214
首先请注意右上角这个按钮

247
00:14:07,614 --> 0:14:10,951
包含一些附加选项

248
00:14:11,685 --> 0:14:14,488
我要做的就是添加一个第三选项

249
00:14:14,888 --> 0:14:17,491
允许用户变更内容模式

250
00:14:18,091 --> 0:14:20,360
要么就是请求移动版网站

251
00:14:20,627 --> 0:14:22,296
要么就是请求电脑版网站

252
00:14:23,630 --> 0:14:27,100
好的 让我们进入Xcode并实施

253
00:14:28,268 --> 0:14:29,303
我要在这里…

254
00:14:30,037 --> 0:14:34,308
添加这个帮助功能 它会呈现一个

255
00:14:34,975 --> 0:14:38,111
目前 正如你所看到的

256
00:14:38,779 --> 0:14:40,547
我要做的就是在这里添加第三个操作

257
00:14:40,814 --> 0:14:43,550
但在此之前

258
00:14:44,818 --> 0:14:46,753
它会帮助我创建

259
00:14:47,154 --> 0:14:48,789
当然了 我只会在这里使用它

260
00:14:50,524 --> 0:14:52,359
好的 那将会让我获得我的操作

261
00:14:52,793 --> 0:14:54,294
现在我想让你们关注一下

262
00:14:54,528 --> 0:14:56,997
这个currentContentMode实体变量

263
00:14:57,497 --> 0:14:58,765
我要在这里做什么？

264
00:14:58,832 --> 0:15:01,735
嗯 我要检查当前内容模式

265
00:14:58,832 --> 0:15:01,735
嗯 我要检查当前内容模式

266
00:15:02,236 --> 0:15:03,837
并且如果它等于电脑版

267
00:15:03,904 --> 0:15:07,941
我希望字符串是“请求移动版网站”

268
00:15:09,543 --> 0:15:12,779
好的 那应该解决了 但问题是

269
00:15:12,846 --> 0:15:15,182
“我们如何持续追踪

270
00:15:15,249 --> 0:15:16,650
我们如何了解它是什么模式？

271
00:15:17,050 --> 0:15:19,419
嗯 我要向下滚动到这里

272
00:15:19,486 --> 0:15:22,389
我在这里实施了我的

273
00:15:22,823 --> 0:15:25,058
叫做didCommit导航方法

274
00:15:25,659 --> 0:15:29,730
我要在这里做的就是

275
00:15:30,464 --> 0:15:32,699
那么在iOS 13中

276
00:15:33,000 --> 0:15:35,502
拥有一个叫做

277
00:15:36,069 --> 0:15:38,672
永远只有两个选项

278
00:15:39,039 --> 0:15:40,507
这对于我的用例来说非常完美

279
00:15:41,308 --> 0:15:43,310
我能做的就是设置

280
00:15:43,577 --> 0:15:46,813
使其等于导航的有效内容模式

281
00:15:47,281 --> 0:15:50,517
那应该会帮助我持续追踪

282
00:15:51,518 --> 0:15:53,420
那么现在我应该显示了正确的字符串

283
00:15:54,588 --> 0:15:57,024
但我希望你们关注一下

284
00:15:58,158 --> 0:15:59,226
我们仍然需要一种方式来表述

285
00:15:59,493 --> 0:16:02,763
“让我们针对指定主机名称

286
00:15:59,493 --> 0:16:02,763
“让我们针对指定主机名称

287
00:16:03,497 --> 0:16:06,633
为此我们把主机名称词典

288
00:16:06,900 --> 0:16:09,670
保存到内容模式中

289
00:16:10,170 --> 0:16:13,440
要么是移动版 要么是电脑版

290
00:16:14,808 --> 0:16:16,977
我现在要实施操作可处理器

291
00:16:18,045 --> 0:16:20,814
我要做的只是获取主机名称

292
00:16:21,481 --> 0:16:24,184
并把它设置到移动版

293
00:16:24,885 --> 0:16:26,553
然后我要告诉网页浏览器重新加载

294
00:16:27,421 --> 0:16:31,491
好的 这就是

295
00:16:31,892 --> 0:16:33,694
当然 我们还要在其它地方使用它

296
00:16:34,127 --> 0:16:36,930
因此我要向下滚动回到我的导航委托

297
00:16:37,731 --> 0:16:39,266
我要添加一个新方法

298
00:16:40,300 --> 0:16:43,670
我要实施

299
00:16:44,404 --> 0:16:47,574
这与你可能熟悉的版本非常相似

300
00:16:48,041 --> 0:16:52,279
除了在iOS 13中这个版本

301
00:16:52,646 --> 0:16:53,847
就是这个优选

302
00:16:54,248 --> 0:16:56,083
那么对于这些优选我能做的就是

303
00:16:56,416 --> 0:16:59,086
把优选内容模式设置为

304
00:16:59,152 --> 0:17:01,221
我从词典中所查询到的内容模式

305
00:16:59,152 --> 0:17:01,221
我从词典中所查询到的内容模式

306
00:17:01,555 --> 0:17:02,623
仅仅作为刷新工具

307
00:17:03,056 --> 0:17:05,025
这个contentModeToRequestForHost

308
00:17:05,392 --> 0:17:08,362
与我刚刚在操作处理器中

309
00:17:09,396 --> 0:17:10,364
所填充的那个一样

310
00:17:11,231 --> 0:17:13,834
好的 最后但并不是最不重要的

311
00:17:13,901 --> 0:17:16,603
我们要记得调用有这些新优选选项的

312
00:17:16,670 --> 0:17:19,406
然后就完成了

313
00:17:19,473 --> 0:17:21,308
那么我要重新编译我的app

314
00:17:21,875 --> 0:17:23,810
让我们看看我们的功能怎么样

315
00:17:25,679 --> 0:17:27,214
这次我也要进行切换

316
00:17:27,481 --> 0:17:30,450
这次我不进Google Docs

317
00:17:31,785 --> 0:17:34,354
这是Shiny Pics的电脑版

318
00:17:35,255 --> 0:17:38,358
我要做的是使用附加菜单

319
00:17:38,926 --> 0:17:40,527
请求移动版网站

320
00:17:42,696 --> 0:17:44,998
移动版网站看起来是这样的

321
00:17:45,399 --> 0:17:46,867
Shiny Pics的移动版

322
00:17:47,668 --> 0:17:50,871
我的意思是我可以指出

323
00:17:50,938 --> 0:17:53,874
因为它看起来真的很像是针对手机

324
00:17:54,341 --> 0:17:56,343
而并没有针对iPad Pro

325
00:17:56,743 --> 0:17:58,078
我认为在iPad Pro上

326
00:17:58,145 --> 0:18:00,581
我实际上倾向于使用

327
00:17:58,145 --> 0:18:00,581
我实际上倾向于使用

328
00:18:01,048 --> 0:18:03,450
因此我只需要轻触

329
00:18:03,851 --> 0:18:06,520
然后我就会返回到

330
00:18:07,187 --> 0:18:09,122
好的 总的来说

331
00:18:09,189 --> 0:18:11,758
我首先确保我的浏览器可以加载

332
00:18:12,292 --> 0:18:13,894
然后我使用了新API

333
00:18:14,127 --> 0:18:17,431
来实施请求移动版或电脑版网站功能

334
00:18:18,065 --> 0:18:20,734
但目前我们仅向

335
00:18:21,034 --> 0:18:22,703
app开发人员展示了一些新工具

336
00:18:23,470 --> 0:18:26,507
当然 对于网页开发人员来说

337
00:18:27,007 --> 0:18:30,644
为此我要邀请Beth上台来

338
00:18:36,049 --> 0:18:37,317
谢谢Wenson

339
00:18:37,985 --> 0:18:39,019
非常棒

340
00:18:40,320 --> 0:18:43,790
那么这些对于网页开发人员来说

341
00:18:44,358 --> 0:18:48,562
如果你有一个响应式网站

342
00:18:48,629 --> 0:18:51,098
但我们的确有一些新工具可以用于

343
00:18:51,265 --> 0:18:53,800
维护并改善你的响应式网站

344
00:18:54,868 --> 0:18:59,173
我还要分享一些关于

345
00:18:59,239 --> 0:19:01,708
因此无论你的网站是当前响应式网站

346
00:18:59,239 --> 0:19:01,708
因此无论你的网站是当前响应式网站

347
00:19:01,775 --> 0:19:04,912
或是针对台式电脑设计的大屏幕网站

348
00:19:04,978 --> 0:19:07,881
你都可以使它在iPad上

349
00:19:09,516 --> 0:19:11,885
我要讨论六个新功能

350
00:19:12,352 --> 0:19:14,321
其中有些是纯开发功能

351
00:19:14,388 --> 0:19:15,522
比如指针事件

352
00:19:15,589 --> 0:19:17,824
而有些更像是新终端用户功能

353
00:19:17,891 --> 0:19:21,094
但拥有开发暗示 比如加快滚动

354
00:19:22,229 --> 0:19:23,764
让我们从指针事件开始讲

355
00:19:24,898 --> 0:19:27,868
在iPad上加载电脑版内容的

356
00:19:27,935 --> 0:19:31,638
就是调解鼠标和触摸输入

357
00:19:32,840 --> 0:19:36,176
有时候网站是写定的

358
00:19:36,243 --> 0:19:37,878
只使用触摸事件

359
00:19:37,945 --> 0:19:40,581
而大屏幕版本只使用鼠标事件

360
00:19:41,114 --> 0:19:44,017
我们的目标是在iPad上

361
00:19:44,084 --> 0:19:46,353
尽可能地保持网站仅使用鼠标事件

362
00:19:46,420 --> 0:19:48,355
当然即使没有鼠标

363
00:19:48,889 --> 0:19:50,190
那么当用户轻触时

364
00:19:50,624 --> 0:19:52,726
WebKit将发送

365
00:19:52,793 --> 0:19:55,195
和点击事件 就跟以往一样

366
00:19:55,796 --> 0:19:58,165
那时也会发送鼠标悬停事件

367
00:19:58,232 --> 0:20:00,000
稍后我会具体讲一下

368
00:20:01,368 --> 0:20:04,471
然而鼠标移动实际上

369
00:20:04,538 --> 0:20:07,508
最接近的类似情况是

370
00:20:07,574 --> 0:20:09,076
但这是你的滚动方式

371
00:20:09,376 --> 0:20:13,113
因此我们的确尝试了

372
00:20:13,180 --> 0:20:14,348
发送鼠标移动事件

373
00:20:14,414 --> 0:20:17,217
但实际上导致了更多的问题

374
00:20:17,484 --> 0:20:18,952
因此我们决定不这样做

375
00:20:19,019 --> 0:20:20,420
它和滚动相冲突

376
00:20:21,121 --> 0:20:23,657
如果你需要诸如鼠标移动这样的事件

377
00:20:23,724 --> 0:20:26,260
那么我们有一个很棒的方案

378
00:20:27,528 --> 0:20:32,432
我们在iOS 13和macOS Catalina中的

379
00:20:32,866 --> 0:20:35,502
它是一个网页标准

380
00:20:35,569 --> 0:20:38,138
提供用户输入和你的网站之间的

381
00:20:38,205 --> 0:20:41,575
因此可以用同一个API

382
00:20:41,875 --> 0:20:43,443
触摸输入或手写输入

383
00:20:45,179 --> 0:20:46,680
指针事件的使用很简单

384
00:20:47,080 --> 0:20:49,116
如果你的现有代码

385
00:20:49,183 --> 0:20:50,951
就像这样

386
00:20:51,418 --> 0:20:53,820
让代码支持指针事件很相似

387
00:20:54,621 --> 0:20:55,989
只有事件名称不一样

388
00:20:56,356 --> 0:20:59,893
但让我们把情境扩展一下

389
00:21:00,794 --> 0:21:02,563
我实际上使用特征检测

390
00:21:02,629 --> 0:21:04,631
来决定是否支持指针事件

391
00:21:05,065 --> 0:21:08,669
我将保留鼠标事件监测器

392
00:21:08,735 --> 0:21:10,637
只有当指针事件不可用时

393
00:21:11,772 --> 0:21:14,775
PointerEvent对象

394
00:21:14,842 --> 0:21:16,710
因此我基本不需要修改关于

395
00:21:16,777 --> 0:21:19,546
直接就能用

396
00:21:19,880 --> 0:21:23,383
除非我想利用

397
00:21:23,450 --> 0:21:26,954
指定鼠标或手写输入 那非常庞大

398
00:21:27,020 --> 0:21:29,656
采用指针事件就是如此简单

399
00:21:31,825 --> 0:21:34,294
指针事件

400
00:21:34,661 --> 0:21:36,897
但请注意当混合事件输入时

401
00:21:36,964 --> 0:21:39,333
将映像到同一个用户操作 比如这个

402
00:21:39,967 --> 0:21:41,001
没有else子句

403
00:21:41,068 --> 0:21:42,936
因此会注册全部两个事件

404
00:21:43,203 --> 0:21:46,707
并且我的函数将被调用两次

405
00:21:46,773 --> 0:21:48,375
那可能会让情况变得一团糟

406
00:21:50,010 --> 0:21:52,913
同时你不需要注册全部三种事件类型

407
00:21:52,980 --> 0:21:56,183
如果你想在既支持鼠标

408
00:21:56,250 --> 0:21:57,718
区分鼠标和触摸交互

409
00:21:58,118 --> 0:22:00,287
因为指针事件允许你了解其中的不同

410
00:21:58,118 --> 0:22:00,287
因为指针事件允许你了解其中的不同

411
00:22:01,922 --> 0:22:05,325
如果你想取消默认网页浏览器行为

412
00:22:05,692 --> 0:22:07,694
那么在Mac上你将使用

413
00:22:07,761 --> 0:22:09,496
就像你针对鼠标事件所做的一样

414
00:22:11,031 --> 0:22:14,735
在iOS上preventDefault

415
00:22:14,801 --> 0:22:18,071
因此你应该也会用到

416
00:22:18,438 --> 0:22:20,507
触摸操作实际上非常棒

417
00:22:20,874 --> 0:22:22,609
它比写JavaScript要简单

418
00:22:22,676 --> 0:22:26,213
它可以让你做出

419
00:22:26,647 --> 0:22:30,417
现在我要用它阻止

420
00:22:30,484 --> 0:22:33,320
但我可以用它来 比如说 阻止滚动

421
00:22:33,387 --> 0:22:34,621
但仍允许缩放

422
00:22:35,522 --> 0:22:38,992
触摸操作也可以实现

423
00:22:39,059 --> 0:22:40,460
因为它是陈述性的

424
00:22:40,527 --> 0:22:43,630
因此在你的网站上

425
00:22:43,697 --> 0:22:45,699
可能会改善你网站的性能

426
00:22:47,601 --> 0:22:51,872
那么我们有兼容性鼠标事件

427
00:22:52,206 --> 0:22:55,642
但这对于iOS来说只是权宜之计

428
00:22:56,109 --> 0:22:57,311
它们的使用非常简单

429
00:22:57,377 --> 0:23:00,547
它们可以让你实现你当前通过鼠标

430
00:22:57,377 --> 0:23:00,547
它们可以让你实现你当前通过鼠标

431
00:23:00,981 --> 0:23:03,884
并且它们会确保快速地响应用户交互

432
00:23:04,551 --> 0:23:06,753
这对于我们所面临的

433
00:23:06,820 --> 0:23:09,690
相关的所有问题都是一个很棒的方案

434
00:23:11,325 --> 0:23:12,392
正如我所提到的那样

435
00:23:12,459 --> 0:23:15,395
WebKit也会为了兼容性而发送

436
00:23:16,029 --> 0:23:17,731
悬停对于触摸屏幕来说很棘手

437
00:23:17,798 --> 0:23:20,033
因为硬件根本就不支持它

438
00:23:20,601 --> 0:23:24,304
我们在iOS 13中修改了

439
00:23:24,371 --> 0:23:29,276
保证依赖于它的电脑版网站

440
00:23:30,978 --> 0:23:33,013
如果你在网页上轻触一个元素

441
00:23:33,080 --> 0:23:35,616
悬停的响应将实施悬停

442
00:23:36,016 --> 0:23:38,986
并且如果网页中发生了有意义的变更

443
00:23:39,052 --> 0:23:41,388
那么作为悬停的结果将会停在那里

444
00:23:42,689 --> 0:23:45,192
用户可以第二次轻触

445
00:23:47,995 --> 0:23:49,196
在iOS 13中

446
00:23:49,263 --> 0:23:52,933
WebKit会检测出

447
00:23:53,233 --> 0:23:56,436
这对于许多依赖于悬停作为网页

448
00:23:56,503 --> 0:23:59,873
必不可少的要素的许多电脑版网站

449
00:24:00,174 --> 0:24:02,309
就像这个网页

450
00:24:04,278 --> 0:24:06,246
我们发现它用起来很好

451
00:24:06,513 --> 0:24:08,081
但它从根本上来说是一种启发

452
00:24:08,148 --> 0:24:11,084
浏览器引擎尝试诠释设计意图

453
00:24:11,151 --> 0:24:12,953
因此它并不总是那么完美

454
00:24:13,854 --> 0:24:15,989
我们要记住一些最佳范例

455
00:24:16,056 --> 0:24:17,191
当你使用悬停时

456
00:24:18,926 --> 0:24:21,361
首先你应该总是提供另一种方式

457
00:24:21,428 --> 0:24:25,199
来获取有意义的内容 只是为了防止

458
00:24:25,599 --> 0:24:27,768
这对于可接入性来说也很重要

459
00:24:27,835 --> 0:24:29,970
Wenson稍后会在演示中

460
00:24:31,672 --> 0:24:34,842
你还应该避免强迫用户轻触两次

461
00:24:34,908 --> 0:24:36,510
在绝大多数常见的交互中

462
00:24:37,377 --> 0:24:41,215
请记住如果WebKit检测到

463
00:24:41,281 --> 0:24:43,650
那意味着用户必须轻触第二次

464
00:24:43,717 --> 0:24:45,085
如果他们实际上想要点击的话

465
00:24:45,419 --> 0:24:47,921
因此如果你网页上有一个元素

466
00:24:47,988 --> 0:24:51,124
用户可能会更频繁地实施点击

467
00:24:51,191 --> 0:24:54,695
而不是浏览悬停内容或与之交互

468
00:24:54,962 --> 0:24:58,732
那么考虑做一些修改来避免

469
00:24:58,799 --> 0:25:01,301
这个障碍是你在可点击的元素上

470
00:24:58,799 --> 0:25:01,301
这个障碍是你在可点击的元素上

471
00:25:02,970 --> 0:25:05,506
谈到效率 让悬停保持速度

472
00:25:05,772 --> 0:25:08,141
如果你在针对悬停的响应中

473
00:25:08,408 --> 0:25:10,711
WebKit将等待

474
00:25:10,777 --> 0:25:14,581
如果在网页上添加

475
00:25:15,215 --> 0:25:16,750
最糟糕的情况是

476
00:25:17,317 --> 0:25:19,086
有东西启动了计时器

477
00:25:19,353 --> 0:25:21,255
但是并没有发生任何有意义的变更

478
00:25:21,321 --> 0:25:23,257
那么WebKit将自动实施点击

479
00:25:23,524 --> 0:25:24,391
但同时

480
00:25:24,458 --> 0:25:26,927
比平时的等待时间长大约几百毫秒

481
00:25:26,994 --> 0:25:28,695
并且用户会觉得轻触非常慢

482
00:25:31,465 --> 0:25:33,433
我们相信我们在iOS上

483
00:25:33,500 --> 0:25:34,935
已经比以前做得好多了

484
00:25:35,235 --> 0:25:38,705
但我们仍建议你使用它

485
00:25:38,772 --> 0:25:41,575
并确保你的网站正常运行

486
00:25:44,378 --> 0:25:45,012
iOS上的WebKit

487
00:25:45,078 --> 0:25:48,048
以前总是让主框架硬件加速滚动

488
00:25:48,415 --> 0:25:49,683
但我要很高兴地宣布

489
00:25:49,950 --> 0:25:52,853
WebKit现在已经在任何地方

490
00:25:53,220 --> 0:25:56,156
意思是子框架及滚动区域

491
00:25:56,423 --> 0:26:00,727
现在也可以像黄油一样

492
00:25:56,423 --> 0:26:00,727
现在也可以像黄油一样

493
00:26:07,334 --> 0:26:09,536
就是那样 甚至是子框架也可以

494
00:26:09,603 --> 0:26:13,040
在iOS的老版本中

495
00:26:13,106 --> 0:26:15,142
尺寸是内容的完全尺寸

496
00:26:15,209 --> 0:26:17,277
因此它们实际上不需要单独滚动

497
00:26:17,544 --> 0:26:21,348
而且结果可能比你在代码中

498
00:26:21,782 --> 0:26:23,083
现在在iPad上

499
00:26:23,150 --> 0:26:26,887
你可以指定框架的尺寸

500
00:26:26,954 --> 0:26:29,122
就像电脑浏览器上那样

501
00:26:30,791 --> 0:26:33,527
这是如此常见的一个功能

502
00:26:33,594 --> 0:26:36,630
有两种很流行的实现方式

503
00:26:36,897 --> 0:26:39,366
WebKit默认不支持它

504
00:26:40,033 --> 0:26:44,404
首先我们添加一个CSS property

505
00:26:44,705 --> 0:26:48,275
开发人员们可以选择

506
00:26:49,076 --> 0:26:53,413
我们永远不会把它设为默认

507
00:26:53,881 --> 0:26:57,084
那会影响你网页上从前到后的元素层

508
00:26:57,985 --> 0:27:01,755
第二 有些人创建或使用

509
00:26:57,985 --> 0:27:01,755
第二 有些人创建或使用

510
00:27:01,822 --> 0:27:04,825
那会使用触摸事件来模拟快速滚动

511
00:27:05,526 --> 0:27:07,728
现在不需要那些技巧了

512
00:27:07,794 --> 0:27:11,498
事实上WebKit流程滚动触摸

513
00:27:13,901 --> 0:27:16,737
因此你应该测试硬件加速滚动

514
00:27:16,803 --> 0:27:18,839
如何在各个方面影响你的内容

515
00:27:18,906 --> 0:27:20,674
并且如果你以前使用了

516
00:27:20,741 --> 0:27:24,511
你可能再也不需要它了

517
00:27:26,713 --> 0:27:29,349
接下来我想谈谈新的自动化视窗

518
00:27:29,416 --> 0:27:31,518
以及文本尺寸调整行为

519
00:27:32,819 --> 0:27:34,955
我们开发了新的自动化行为

520
00:27:35,022 --> 0:27:38,125
因为网页应该在iPad上

521
00:27:38,192 --> 0:27:39,092
（网页应该呈现清晰易读的文本）

522
00:27:39,159 --> 0:27:42,663
具体地说

523
00:27:42,829 --> 0:27:44,765
应该在iPad上正常显示

524
00:27:45,065 --> 0:27:47,201
意思就是它们不应该水平滚动

525
00:27:47,267 --> 0:27:49,203
除非它们就是那样设计的

526
00:27:50,204 --> 0:27:52,973
并且对于绝大多数人来说

527
00:27:53,040 --> 0:27:55,142
而不需要额外缩放

528
00:27:56,877 --> 0:27:59,413
我们需要自动化行为来实现这些目标

529
00:27:59,713 --> 0:28:01,081
因为有些电脑版网站

530
00:27:59,713 --> 0:28:01,081
因为有些电脑版网站

531
00:28:01,148 --> 0:28:03,851
有固定的宽度

532
00:28:05,552 --> 0:28:08,722
我们发现很多网站宽度非常大

533
00:28:08,789 --> 0:28:12,993
同时视窗元标签中

534
00:28:13,060 --> 0:28:14,528
这很遗憾

535
00:28:14,928 --> 0:28:17,297
让我返回去并解释一下

536
00:28:18,599 --> 0:28:20,801
最初创建视窗元标签是为了

537
00:28:20,868 --> 0:28:24,271
处理为电脑版网站创建的内容

538
00:28:24,338 --> 0:28:27,374
在小屏幕上显示时所导致的问题

539
00:28:27,441 --> 0:28:29,142
那么它可以很完美地处理 不是吗？

540
00:28:29,710 --> 0:28:31,912
嗯 这个特殊的视窗值

541
00:28:31,979 --> 0:28:34,114
意味着对浏览器引擎的一个承诺

542
00:28:34,181 --> 0:28:36,483
承诺网站的设计是响应式的

543
00:28:36,550 --> 0:28:40,687
意思是它将随着窗口尺寸的变更

544
00:28:41,388 --> 0:28:43,190
在iOS之前的版本中

545
00:28:43,257 --> 0:28:45,959
我们一般会从表面上获取这个承诺

546
00:28:46,026 --> 0:28:48,896
并且我们不会应用

547
00:28:49,162 --> 0:28:51,999
在宽度的元标签等于设备宽度

548
00:28:52,065 --> 0:28:53,600
并且初始缩放比等于1的网站上

549
00:28:54,835 --> 0:28:58,572
但那会导致在iPad上浏览

550
00:28:59,173 --> 0:29:01,141
这个网站应该可以自适应

551
00:28:59,173 --> 0:29:01,141
这个网站应该可以自适应

552
00:29:01,775 --> 0:29:03,911
因此在iPadOS上有个新功能…

553
00:29:05,412 --> 0:29:09,216
WebKit将忽略元标签

554
00:29:09,283 --> 0:29:12,519
但那实际上会设置一个

555
00:29:13,287 --> 0:29:16,223
我们发现那会打造一个

556
00:29:17,491 --> 0:29:20,227
如果你的网站设计是水平滚动

557
00:29:20,294 --> 0:29:22,462
并且它的缩放比例不对

558
00:29:22,529 --> 0:29:23,797
你可以很轻松地解决它了

559
00:29:24,731 --> 0:29:27,434
你只需要在你的视窗元标签中

560
00:29:27,634 --> 0:29:29,069
shrink-to-fit=no

561
00:29:29,436 --> 0:29:30,971
这不是一个新值

562
00:29:31,038 --> 0:29:32,806
我们在iOS 9中添加了这个值

563
00:29:32,873 --> 0:29:36,610
因为我们在网站的分屏显示

564
00:29:37,144 --> 0:29:40,614
shrink-to-fit=no

565
00:29:41,148 --> 0:29:45,385
也防止较宽的电脑版网站自动缩小

566
00:29:47,154 --> 0:29:50,057
你可能已经注意到了

567
00:29:50,424 --> 0:29:51,892
缩小了以适应视窗

568
00:29:52,459 --> 0:29:54,728
标题中的文本实际上却变大了

569
00:29:54,795 --> 0:29:58,065
那是因为我们将自动调整网页上

570
00:29:58,298 --> 0:30:00,534
由于采用了这种方式

571
00:29:58,298 --> 0:30:00,534
由于采用了这种方式

572
00:30:00,801 --> 0:30:02,769
以便保证文本清晰易读

573
00:30:04,505 --> 0:30:08,208
如果你想在网站上控制

574
00:30:08,275 --> 0:30:11,778
最佳方案就是采用响应式设计

575
00:30:11,845 --> 0:30:15,883
并确保你的内容能自适应

576
00:30:16,483 --> 0:30:18,418
响应式设计是一个热门话题

577
00:30:18,485 --> 0:30:20,621
因此我不想在这里介绍

578
00:30:20,954 --> 0:30:22,756
因为网上有很多很棒的介绍

579
00:30:24,591 --> 0:30:28,328
总结一下 WebKit

580
00:30:28,595 --> 0:30:31,198
那会使网页适应清晰易读的文本

581
00:30:31,732 --> 0:30:33,867
你要控制这个的最佳方式是

582
00:30:33,934 --> 0:30:35,602
采用响应式设计

583
00:30:35,969 --> 0:30:38,672
并且如果你有一个水平滚动的网站

584
00:30:38,939 --> 0:30:41,708
那么你可以通过视窗元标签

585
00:30:44,311 --> 0:30:47,080
接下来我想谈谈可视化视窗API

586
00:30:48,115 --> 0:30:50,551
为此我首先要讲一下

587
00:30:50,617 --> 0:30:52,753
可视化视窗和布局视窗的不同点

588
00:30:53,453 --> 0:30:57,424
我们刚刚谈到了

589
00:30:57,491 --> 0:30:58,959
以及视窗元标签

590
00:30:59,026 --> 0:31:01,428
那些是用于定义布局视窗

591
00:30:59,026 --> 0:31:01,428
那些是用于定义布局视窗

592
00:31:01,495 --> 0:31:03,163
以及屏幕和窗口尺寸

593
00:31:04,631 --> 0:31:05,966
用户输入或调整分屏显示时

594
00:31:06,033 --> 0:31:08,435
会改变窗口尺寸

595
00:31:08,869 --> 0:31:11,872
响应式网站将对那个变更做出反应

596
00:31:12,172 --> 0:31:13,307
使用媒体查询

597
00:31:13,574 --> 0:31:16,243
或也许是通过重调尺寸事件

598
00:31:17,010 --> 0:31:18,946
获取媒体查询的最大和最小值

599
00:31:19,012 --> 0:31:21,481
无论何时布局视图发生变更时

600
00:31:21,782 --> 0:31:23,817
并且同时会启动重调尺寸事件

601
00:31:24,384 --> 0:31:26,086
那么如果用户旋转了设备

602
00:31:26,720 --> 0:31:28,288
布局视窗再次发生了变更

603
00:31:28,355 --> 0:31:30,958
并且你的内容会通过

604
00:31:32,326 --> 0:31:33,594
然后是键盘

605
00:31:34,161 --> 0:31:38,065
键盘为我们呈现了一个覆盖层

606
00:31:38,332 --> 0:31:40,934
并且媒体查询和重调尺寸事件

607
00:31:42,302 --> 0:31:44,671
因此如果用户轻触了这里的名字字段

608
00:31:45,772 --> 0:31:46,907
就会显示键盘

609
00:31:46,974 --> 0:31:49,943
很显然那影响了屏幕上的可见内容

610
00:31:50,344 --> 0:31:52,579
这是由可视化视窗所定义的

611
00:31:53,380 --> 0:31:56,149
这里的布局视窗是常规的窗口尺寸

612
00:31:56,850 --> 0:32:01,421
并且可视化视窗是当前可见

613
00:31:56,850 --> 0:32:01,421
并且可视化视窗是当前可见

614
00:32:02,222 --> 0:32:04,591
我们很早之前

615
00:32:04,925 --> 0:32:06,760
对可视化视窗中的变更做出反应

616
00:32:07,194 --> 0:32:09,229
在这个示例网页上 比如说

617
00:32:09,296 --> 0:32:11,098
捐款按钮现在是隐藏的

618
00:32:11,164 --> 0:32:13,967
并且网站应该更可用

619
00:32:14,968 --> 0:32:17,905
在iOS 13中

620
00:32:17,971 --> 0:32:21,041
通过一个W3C标准

621
00:32:23,043 --> 0:32:26,413
你可以用这个API监控

622
00:32:26,780 --> 0:32:29,950
当键盘出现在屏幕上或隐藏起来时

623
00:32:30,017 --> 0:32:31,752
并且Safari中也能触发它

624
00:32:32,085 --> 0:32:34,588
当滚动过程中智能搜索字段隐藏时

625
00:32:36,857 --> 0:32:38,759
现在我可以使捐款按钮保持可见

626
00:32:41,261 --> 0:32:44,865
我们认为可视化视窗API

627
00:32:44,932 --> 0:32:46,366
可以充分利用iPad的大屏幕

628
00:32:48,869 --> 0:32:50,337
让我们谈谈流媒体

629
00:32:50,838 --> 0:32:53,740
在网页浏览器上提供

630
00:32:53,807 --> 0:32:56,476
很可能已经知道

631
00:32:56,844 --> 0:33:01,548
最佳方式是HTTP Live Streaming

632
00:32:56,844 --> 0:33:01,548
最佳方式是HTTP Live Streaming

633
00:33:03,517 --> 0:33:06,587
HLS在iPhone、iPad

634
00:33:06,920 --> 0:33:09,156
它是一个疑难问题的简便方案

635
00:33:09,223 --> 0:33:11,158
因为它替你分担了全部繁冗的工作

636
00:33:11,658 --> 0:33:12,926
它可以和CDN一起使用

637
00:33:13,293 --> 0:33:15,562
并且你会免费获得一些东西

638
00:33:16,797 --> 0:33:19,933
然而有些电脑版内容使用了

639
00:33:20,000 --> 0:33:21,301
或简称为MSE

640
00:33:22,169 --> 0:33:24,905
MSE是一个可以让视频供应商

641
00:33:25,239 --> 0:33:28,475
精确控制所提供给用户的

642
00:33:28,842 --> 0:33:32,412
比如你可以手动提升或降低视频品质

643
00:33:32,479 --> 0:33:34,047
从而响应带宽变更

644
00:33:34,815 --> 0:33:37,317
如果你当前有内容使用了MSE

645
00:33:37,384 --> 0:33:38,619
我有一个好消息给你

646
00:33:39,353 --> 0:33:43,891
iPadOS中MSE在iPad上

647
00:33:44,892 --> 0:33:49,229
如果你当前的引擎

648
00:33:49,296 --> 0:33:50,497
它在iPad上也没问题

649
00:33:50,864 --> 0:33:54,234
并且如果你使用实施了MSE引擎的

650
00:33:54,501 --> 0:33:55,502
那也没问题

651
00:33:57,437 --> 0:34:01,375
因为有了HLS和MSE两个选项

652
00:33:57,437 --> 0:34:01,375
因为有了HLS和MSE两个选项

653
00:34:01,441 --> 0:34:03,177
流媒体在iPad的Safari中

654
00:34:05,379 --> 0:34:08,916
这些新功能应该可以帮助你

655
00:34:09,315 --> 0:34:11,851
我刚才谈到了一些最佳范例

656
00:34:12,152 --> 0:34:13,520
但我还有更多范例要分享

657
00:34:15,322 --> 0:34:16,924
最佳范例可以帮助我们具体了解

658
00:34:17,257 --> 0:34:19,193
它们引导了这个平台的转变

659
00:34:19,259 --> 0:34:20,594
但它们也把我们带到了未来

660
00:34:20,661 --> 0:34:23,063
随着平台的成长和发展

661
00:34:25,331 --> 0:34:26,833
首先并且也是最重要的

662
00:34:26,900 --> 0:34:29,837
我们坚信你应该创建一个响应式网站

663
00:34:30,103 --> 0:34:33,106
而不是创建类似的

664
00:34:34,107 --> 0:34:36,009
我知道说起来容易做起来难

665
00:34:36,076 --> 0:34:39,813
但我们真的相信

666
00:34:39,880 --> 0:34:41,348
可以打造出一个完整的网站

667
00:34:41,949 --> 0:34:45,485
并且你应该使用特征检测

668
00:34:46,553 --> 0:34:49,755
以前有些开发人员希望了解用户代理

669
00:34:49,822 --> 0:34:51,824
以便明确识别iPad

670
00:34:52,192 --> 0:34:56,295
但我们在iPad上的新

671
00:34:56,929 --> 0:35:00,501
我想说服你们不需要再了解

672
00:34:56,929 --> 0:35:00,501
我想说服你们不需要再了解

673
00:35:00,567 --> 0:35:02,336
你只需要使用特征检测就可以了

674
00:35:03,804 --> 0:35:05,939
原因是iPad是个变色龙

675
00:35:06,473 --> 0:35:09,810
通过Charles介绍的

676
00:35:10,077 --> 0:35:13,614
你的网站可以在电脑版模式

677
00:35:14,548 --> 0:35:16,416
你的网页内容可以在分屏中显示

678
00:35:16,683 --> 0:35:19,286
无论是移动端还是电脑端

679
00:35:19,720 --> 0:35:22,656
因此特别了解你的内容

680
00:35:23,023 --> 0:35:24,424
就没有那么重要了

681
00:35:25,592 --> 0:35:28,462
并且对于用户代理的困惑

682
00:35:28,529 --> 0:35:29,596
一切皆有可能

683
00:35:29,663 --> 0:35:32,132
我们现在Mac上运行着

684
00:35:34,535 --> 0:35:35,836
其实如果你返回去…

685
00:35:36,270 --> 0:35:38,572
我们在Apple Watch上、在iPhone上、

686
00:35:38,872 --> 0:35:42,476
并且我们已经覆盖了

687
00:35:42,543 --> 0:35:44,778
各种不同的内容模式和配置

688
00:35:45,078 --> 0:35:47,381
Mac上的网页内容

689
00:35:47,748 --> 0:35:49,983
Mac上AppKit上的网页内容

690
00:35:50,551 --> 0:35:52,586
针对每一种配置

691
00:35:52,653 --> 0:35:55,589
并处理它是大屏幕网站或小屏幕网站

692
00:35:55,956 --> 0:35:57,891
将会更加局限

693
00:35:58,225 --> 0:36:01,695
比使用特征检测了解

694
00:35:58,225 --> 0:36:01,695
比使用特征检测了解

695
00:36:01,762 --> 0:36:04,198
哪一种配置可用更脆弱、

696
00:36:05,732 --> 0:36:08,702
我们将站在这里

697
00:36:08,769 --> 0:36:11,572
是一个最佳范例

698
00:36:11,939 --> 0:36:13,440
一年又一年 年复一年

699
00:36:13,507 --> 0:36:16,043
直到最后我们不再需要这样做

700
00:36:17,044 --> 0:36:20,480
服务端提交的内容并不知道

701
00:36:20,747 --> 0:36:25,719
但会在每一台设备上

702
00:36:26,753 --> 0:36:29,823
并且这个设备的显示区域也没有缩小

703
00:36:32,793 --> 0:36:34,595
我们知道这需要做很多工作

704
00:36:34,962 --> 0:36:36,363
但我们也知道你值得这样做

705
00:36:39,099 --> 0:36:41,668
当我们提到iPad

706
00:36:41,735 --> 0:36:43,937
我们的意思是现代化的桌面级浏览

707
00:36:44,004 --> 0:36:45,572
那意味着没有插件

708
00:36:45,906 --> 0:36:47,641
iOS上从来都没有出现过插件

709
00:36:47,708 --> 0:36:49,476
并且我们现在也不打算添加插件了

710
00:36:50,110 --> 0:36:53,013
即使在Mac上

711
00:36:53,313 --> 0:36:54,581
它默认仍是关闭

712
00:36:54,915 --> 0:36:58,519
并且我们将于2020年停止支持它

713
00:36:59,720 --> 0:37:03,590
因此如果你还没有把老旧视频或游戏

714
00:36:59,720 --> 0:37:03,590
因此如果你还没有把老旧视频或游戏

715
00:37:03,657 --> 0:37:06,560
或饭店菜单迁移到标准网页技术

716
00:37:06,960 --> 0:37:09,463
现在是时候跟Flash说再见了

717
00:37:11,365 --> 0:37:13,467
iPad上的

718
00:37:13,867 --> 0:37:15,769
但iPad仍然是一个移动设备

719
00:37:15,836 --> 0:37:18,572
那意味着我们期待能在路上使用它

720
00:37:18,639 --> 0:37:19,973
通常是在公共区域

721
00:37:20,641 --> 0:37:24,311
因此WebKit将阻止

722
00:37:24,945 --> 0:37:26,747
我们发现有些电脑版网站

723
00:37:27,014 --> 0:37:29,449
会假设将发生自动播放

724
00:37:29,716 --> 0:37:31,251
但最好是不要这样假设

725
00:37:31,919 --> 0:37:35,055
标准的媒体API允许你了解

726
00:37:35,122 --> 0:37:36,690
实际上发生了什么

727
00:37:36,757 --> 0:37:38,592
因为播放功能有一个承诺

728
00:37:39,159 --> 0:37:41,995
你应该捕捉到那个承诺

729
00:37:42,663 --> 0:37:45,232
但你还应该在设计网站时考虑到

730
00:37:45,299 --> 0:37:47,367
以便让所有设备上的所有用户

731
00:37:47,634 --> 0:37:49,970
都能自己决定什么时候播放音频

732
00:37:51,772 --> 0:37:54,208
接下来跳出鼠标和键盘之外

733
00:37:54,274 --> 0:37:56,109
当设计用户交互流程时

734
00:37:56,610 --> 0:37:58,812
特别是要考虑使用指针事件

735
00:37:59,179 --> 0:38:03,283
并避免使用鼠标悬停

736
00:37:59,179 --> 0:38:03,283
并避免使用鼠标悬停

737
00:38:05,152 --> 0:38:07,454
最后使用内嵌API

738
00:38:07,955 --> 0:38:11,091
这是一个很宽泛的话题

739
00:38:11,491 --> 0:38:13,260
我们发现许多电脑版网站

740
00:38:13,727 --> 0:38:17,564
都使用鼠标事件

741
00:38:17,631 --> 0:38:18,999
或文本输入

742
00:38:19,366 --> 0:38:20,901
但有一个更好的工具可以实现

743
00:38:21,168 --> 0:38:23,270
选择变更事件和输入事件

744
00:38:23,337 --> 0:38:25,272
正是为了这个目的而设计的

745
00:38:25,806 --> 0:38:28,542
你总是在每个平台上获得更好的行为

746
00:38:28,809 --> 0:38:30,744
如果你使用了内嵌API

747
00:38:30,811 --> 0:38:34,481
而不是用基础的交互事件

748
00:38:36,750 --> 0:38:37,384
那么就是这么多了

749
00:38:38,218 --> 0:38:40,587
为了帮助你们消化全部这些信息

750
00:38:40,654 --> 0:38:42,756
我要邀请Wenson返回舞台

751
00:38:43,023 --> 0:38:46,860
他可以给大家在操作中

752
00:38:48,161 --> 0:38:49,129
Wenson

753
00:38:57,804 --> 0:38:59,239
好的 谢谢Beth

754
00:39:00,941 --> 0:39:02,609
那么你永远也不会猜到

755
00:39:02,676 --> 0:39:05,712
但当我不工作时 在我的空闲时间

756
00:39:06,046 --> 0:39:07,414
也没那么空闲

757
00:39:07,881 --> 0:39:09,917
我还喜欢做一些网页app

758
00:39:10,918 --> 0:39:13,153
今天我要跟大家分享一个

759
00:39:13,787 --> 0:39:15,322
叫做Shiny Sketch

760
00:39:17,758 --> 0:39:20,694
目前我只在电脑浏览器上进行了测试

761
00:39:21,094 --> 0:39:23,864
那么看看它在我的iPad上怎么样

762
00:39:24,598 --> 0:39:27,301
但首先让我在Mac上

763
00:39:27,801 --> 0:39:31,772
在这个过程中 我会指出一些

764
00:39:32,105 --> 0:39:35,008
从而使它在iPad上看起来更棒

765
00:39:35,976 --> 0:39:38,045
好的

766
00:39:38,745 --> 0:39:42,249
首先这个网站有一个固定的四栏布局

767
00:39:42,883 --> 0:39:45,219
意思是如果我把窗口变小

768
00:39:45,552 --> 0:39:48,422
我就会获得水平滚动 是吧？

769
00:39:48,488 --> 0:39:49,857
那么这是需要记住的一点

770
00:39:50,958 --> 0:39:54,661
接下来是为了获取退出或删除控件

771
00:39:55,062 --> 0:39:56,630
我必须在每个会话上进行悬停

772
00:39:57,531 --> 0:39:59,233
当然了 退出和删除控件

773
00:39:59,299 --> 0:40:02,069
对于我的网页app来说至关重要

774
00:39:59,299 --> 0:40:02,069
对于我的网页app来说至关重要

775
00:40:03,370 --> 0:40:05,772
最后我要进入并尝试

776
00:40:06,273 --> 0:40:07,374
在其中一个绘画上涂鸦

777
00:40:09,042 --> 0:40:11,778
那么我可以使用我的触控板来绘画

778
00:40:12,279 --> 0:40:15,282
但我当前的代码使用了…来实施

779
00:40:15,349 --> 0:40:16,917
仅获取鼠标事件

780
00:40:17,484 --> 0:40:21,355
我很可能需要针对iPad

781
00:40:22,356 --> 0:40:23,423
好的 这是在Mac上

782
00:40:24,358 --> 0:40:25,526
那么在iPad上看起来怎么样呢？

783
00:40:26,326 --> 0:40:27,160
让我来展示一下

784
00:40:28,362 --> 0:40:30,531
我恰好在Safari中

785
00:40:32,232 --> 0:40:34,801
并且我注意到的第一件事就是

786
00:40:35,135 --> 0:40:36,537
在横向模式中看起来很棒

787
00:40:37,471 --> 0:40:41,775
然而一旦我旋转到竖向模式

788
00:40:43,911 --> 0:40:46,013
那么我仍然是四栏布局

789
00:40:48,582 --> 0:40:51,852
我打赌如果网站时响应式的

790
00:40:52,886 --> 0:40:55,088
我现在要做的就是返回到Mac上

791
00:40:55,722 --> 0:40:57,024
并查看我是否可以解决这个问题

792
00:40:57,891 --> 0:41:02,129
是什么触发了我浏览器中的水平滚动

793
00:40:57,891 --> 0:41:02,129
是什么触发了我浏览器中的水平滚动

794
00:41:03,497 --> 0:41:04,698
好的 那么先说重要的

795
00:41:05,165 --> 0:41:07,901
我要重新调整窗口

796
00:41:08,635 --> 0:41:09,570
就像这样

797
00:41:10,437 --> 0:41:12,206
然后我要进入开发菜单

798
00:41:14,608 --> 0:41:17,110
那么我要向下进入起始元素选择

799
00:41:18,512 --> 0:41:20,447
那可以让我了解每个元素有多大

800
00:41:21,014 --> 0:41:23,217
举个例子 在这里

801
00:41:23,283 --> 0:41:25,452
这个编辑按钮是72乘48像素

802
00:41:27,221 --> 0:41:28,889
好的 那么我要从页面顶部开始

803
00:41:28,956 --> 0:41:30,657
并尝试找到一个很宽的元素

804
00:41:32,125 --> 0:41:35,028
Shiny Sketch页面条幅

805
00:41:35,128 --> 0:41:37,798
或标题是大概760像素

806
00:41:38,665 --> 0:41:41,802
如果我使用这个标尺来查看

807
00:41:42,936 --> 0:41:44,571
它也得是760像素

808
00:41:44,872 --> 0:41:46,306
那么这看起来比例很不错

809
00:41:47,608 --> 0:41:48,675
我要向下移动游标

810
00:41:49,977 --> 0:41:52,546
并且…你可能已经猜到了

811
00:41:52,880 --> 0:41:55,749
图库部分是1300像素 超级大

812
00:41:56,316 --> 0:41:59,152
因此我很确信就是它触发了水平滚动

813
00:41:59,219 --> 0:42:00,120
在我的网页app中

814
00:41:59,219 --> 0:42:00,120
在我的网页app中

815
00:42:00,854 --> 0:42:02,956
但我想了解更多信息

816
00:42:03,323 --> 0:42:04,658
那会打开网络检测器

817
00:42:05,259 --> 0:42:07,294
我可以了解关于图库的更多信息

818
00:42:08,328 --> 0:42:09,329
那么在样式侧边栏中

819
00:42:09,396 --> 0:42:12,733
却是有一个硬编码的1300像素

820
00:42:13,534 --> 0:42:14,501
这里为什么有这个？

821
00:42:14,968 --> 0:42:15,903
嗯 当我添加这个时

822
00:42:16,336 --> 0:42:19,573
我认为我在尝试让网站在很大、

823
00:42:19,640 --> 0:42:21,074
很宽的显示屏上看起来不错

824
00:42:21,775 --> 0:42:24,011
我认为不会有人

825
00:42:24,511 --> 0:42:27,080
在小于1300像素宽度的显示屏上

826
00:42:28,482 --> 0:42:30,584
也许当时我的假设很合理

827
00:42:30,951 --> 0:42:32,686
但现在我认为我可以做得更好

828
00:42:33,554 --> 0:42:35,489
因此我现在要做的就是…

829
00:42:35,989 --> 0:42:37,324
转换并尝试修复它

830
00:42:38,058 --> 0:42:39,593
我要让我的网站变成响应式网站

831
00:42:40,427 --> 0:42:44,231
顺便说一下

832
00:42:44,598 --> 0:42:47,501
一个HTML文件、一个CSS文件

833
00:42:47,868 --> 0:42:49,369
我要从HTML文件开始

834
00:42:50,204 --> 0:42:51,972
我要添加一个元视窗标签

835
00:42:53,674 --> 0:42:55,742
那么有两个重点

836
00:42:55,809 --> 0:42:58,679
width=device-width

837
00:42:59,379 --> 0:43:01,348
这就告诉浏览器

838
00:42:59,379 --> 0:43:01,348
这就告诉浏览器

839
00:43:01,415 --> 0:43:02,349
页面可以响应任意设备宽度

840
00:43:03,283 --> 0:43:05,652
因此这很重要

841
00:43:06,019 --> 0:43:07,087
可以响应任意设备宽度

842
00:43:07,421 --> 0:43:09,389
因此让我们打开CSS文件

843
00:43:09,823 --> 0:43:12,326
请记住我们之前看到的那个

844
00:43:12,826 --> 0:43:13,927
我要搜索一下

845
00:43:15,162 --> 0:43:17,731
开始吧

846
00:43:17,798 --> 0:43:19,700
它的确在图库上

847
00:43:20,467 --> 0:43:23,036
我要做的就是把它修改成最大宽度

848
00:43:23,871 --> 0:43:26,874
那意味着如果窗口小于1300像素

849
00:43:27,407 --> 0:43:29,776
图库中的绘画就应该重新排列

850
00:43:30,210 --> 0:43:31,178
它们可以进行重排

851
00:43:31,245 --> 0:43:34,181
因为我很方便地把它们设置为

852
00:43:35,048 --> 0:43:36,416
好的 那么…

853
00:43:37,818 --> 0:43:39,253
那是一些小修改

854
00:43:39,586 --> 0:43:41,054
让我们看看它现在怎么样了

855
00:43:43,857 --> 0:43:46,360
好的 它在竖向模式中

856
00:43:46,760 --> 0:43:48,495
但如果我旋转到横向模式

857
00:43:49,997 --> 0:43:51,431
它变成了四栏

858
00:43:51,498 --> 0:43:53,567
这是因为横向模式足够宽

859
00:43:53,634 --> 0:43:54,735
能适应四栏布局

860
00:43:55,969 --> 0:43:58,705
无论怎样 再也不用按比例缩放了

861
00:43:59,673 --> 0:44:02,109
好的 那么接下来让我们谈谈绘画

862
00:43:59,673 --> 0:44:02,109
好的 那么接下来让我们谈谈绘画

863
00:44:02,809 --> 0:44:05,145
正如Beth所提到的那样

864
00:44:05,612 --> 0:44:07,648
但幸运的是我可以采用指针事件

865
00:44:07,915 --> 0:44:10,450
以及触摸操作CSS属性来实现

866
00:44:11,485 --> 0:44:12,953
那么让我们返回到CSS文件

867
00:44:15,122 --> 0:44:17,291
在这里我要添加

868
00:44:18,325 --> 0:44:20,627
或更具体一些 我要把它添加到

869
00:44:20,827 --> 0:44:22,262
正如它的名字所暗示的那样

870
00:44:22,529 --> 0:44:25,432
它是我在绘画时拖动手指的元素

871
00:44:26,200 --> 0:44:30,237
当然 重点是当我拖动手指时

872
00:44:30,304 --> 0:44:31,238
它不会滚动

873
00:44:32,072 --> 0:44:33,574
这就是为什么

874
00:44:34,508 --> 0:44:37,177
好的 接下来我要打开

875
00:44:37,878 --> 0:44:40,881
我要查找mousemove

876
00:44:43,016 --> 0:44:45,118
好的 那么这就是我目前用于

877
00:44:45,419 --> 0:44:48,589
监测鼠标事件的代码

878
00:44:49,756 --> 0:44:51,158
我要稍微调整一下

879
00:44:52,726 --> 0:44:54,228
那么取而代之 我要…

880
00:44:55,996 --> 0:44:57,564
检查是否支持指针事件

881
00:44:58,332 --> 0:45:01,568
如果支持

882
00:44:58,332 --> 0:45:01,568
如果支持

883
00:45:02,569 --> 0:45:05,272
否则我就要退回到

884
00:45:06,406 --> 0:45:10,143
好的 让我们实际看一下这些变更

885
00:45:13,380 --> 0:45:16,216
让我们给我们的狗狗朋友Sona

886
00:45:22,689 --> 0:45:23,891
嗯 画得并不好

887
00:45:24,157 --> 0:45:26,860
但正如你所看到的那样

888
00:45:28,395 --> 0:45:31,098
好的 那么最后一个小细节

889
00:45:32,466 --> 0:45:35,369
正如Beth所提到的那样

890
00:45:36,069 --> 0:45:37,504
但我并没有立刻就知道

891
00:45:37,771 --> 0:45:40,674
编辑或删除或绘画的方法是

892
00:45:41,408 --> 0:45:44,912
首先轻触每一幅绘画

893
00:45:46,146 --> 0:45:47,814
然后轻触那些控件

894
00:45:48,582 --> 0:45:50,784
这意味着在iPad上

895
00:45:51,151 --> 0:45:54,021
都需要两次轻触

896
00:45:55,956 --> 0:45:58,759
让我们把它变成

897
00:45:59,526 --> 0:46:02,296
我要做的是添加一个

898
00:45:59,526 --> 0:46:02,296
我要做的是添加一个

899
00:46:02,596 --> 0:46:06,133
并使轻触绘画即可立即进入

900
00:46:07,234 --> 0:46:08,168
那么让我们来做一下

901
00:46:09,303 --> 0:46:11,438
首先我要打开HTML文件

902
00:46:12,172 --> 0:46:13,574
我要添加一些标记

903
00:46:14,942 --> 0:46:16,877
它是一个很简单的按钮

904
00:46:17,244 --> 0:46:19,680
但请注意我在这里放了一个

905
00:46:20,514 --> 0:46:22,282
很快它就会变得很重要了

906
00:46:22,349 --> 0:46:24,084
因为我要打开CSS文件了…

907
00:46:25,686 --> 0:46:27,221
我会在那里添加一个媒体查询

908
00:46:30,157 --> 0:46:31,225
因此我在这里要

909
00:46:31,291 --> 0:46:33,927
通过这个媒体查询查看是否支持悬停

910
00:46:34,294 --> 0:46:35,395
并且如果支持

911
00:46:35,462 --> 0:46:37,130
我们就不再需要那个静态控件了

912
00:46:37,197 --> 0:46:38,866
就是我刚刚添加的那个

913
00:46:39,399 --> 0:46:42,236
因此我可以给它设置

914
00:46:42,603 --> 0:46:43,537
然后应该会隐藏它

915
00:46:44,838 --> 0:46:47,407
最后我们需在JavaScript

916
00:46:48,675 --> 0:46:50,444
那么现在我要查找

917
00:46:51,745 --> 0:46:54,982
并且这是我用于显示或隐藏

918
00:46:55,415 --> 0:46:57,684
当用户的鼠标

919
00:46:58,485 --> 0:47:00,654
如果不支持悬停

920
00:46:58,485 --> 0:47:00,654
如果不支持悬停

921
00:47:01,355 --> 0:47:03,490
那么我要做的就是

922
00:47:04,224 --> 0:47:07,194
可以使用我在CSS文件中

923
00:47:07,261 --> 0:47:08,428
来查看是否存在悬停

924
00:47:08,896 --> 0:47:10,731
并且如果不支持悬停

925
00:47:11,231 --> 0:47:13,667
我就得针对

926
00:47:13,934 --> 0:47:14,935
采用点击事件监测器来取而代之

927
00:47:15,335 --> 0:47:17,938
并允许它立即开启绘画模式

928
00:47:18,939 --> 0:47:20,040
然后这个提前返回

929
00:47:20,807 --> 0:47:23,210
确保我不会添加

930
00:47:24,278 --> 0:47:25,779
如果不支持悬停的话

931
00:47:26,947 --> 0:47:28,682
好的 我们做了许多变更

932
00:47:29,216 --> 0:47:30,551
但现在让我们实际看一下

933
00:47:33,086 --> 0:47:35,322
好的 首先我注意到的是删除按钮

934
00:47:35,389 --> 0:47:37,224
现在总是可见 并且随时准备被轻触

935
00:47:38,759 --> 0:47:39,793
但如果我轻触任意一副绘画

936
00:47:40,861 --> 0:47:42,462
我将可以立即编辑它们

937
00:47:44,198 --> 0:47:45,999
那么在我的app中

938
00:47:49,002 --> 0:47:50,704
好的 那么通过一些简单的步骤

939
00:47:51,004 --> 0:47:53,707
我就让我的电脑版网页app

940
00:47:54,208 --> 0:47:57,344
并且我认为

941
00:47:58,412 --> 0:47:59,913
现在我想把舞台

942
00:48:00,447 --> 0:48:03,217
他会总结一下我们今天所讲的内容

943
00:48:13,427 --> 0:48:15,596
谢谢Wenson

944
00:48:18,298 --> 0:48:19,266
总结一下…

945
00:48:19,800 --> 0:48:22,169
iPad做出了一些重要的新改进

946
00:48:22,603 --> 0:48:26,039
让如今的电脑版网站

947
00:48:27,207 --> 0:48:29,877
我们希望你们充分利用这些新功能

948
00:48:30,244 --> 0:48:34,147
让你的app或网站

949
00:48:34,915 --> 0:48:36,183
就像你曾经为

950
00:48:40,020 --> 0:48:41,255
对于我们的网页开发人员来说

951
00:48:41,321 --> 0:48:43,790
考虑创建一个响应式网站

952
00:48:44,224 --> 0:48:46,159
通过我们今天所讲到的技术

953
00:48:48,061 --> 0:48:50,998
对于app开发人员来说

954
00:48:51,265 --> 0:48:52,966
和ASWebAuthenticationSession

955
00:48:53,033 --> 0:48:54,434
替你分担繁冗的工作

956
00:48:56,003 --> 0:48:58,505
如果使用WKWebView

957
00:49:00,007 --> 0:49:02,242
并且请提出错误并把你们的反馈

958
00:49:02,743 --> 0:49:03,844
我们希望听到你们的反馈

959
00:49:05,579 --> 0:49:08,415
要获取其它关于验证

960
00:49:08,682 --> 0:49:09,917
和网络平台功能的更多信息

961
00:49:10,217 --> 0:49:13,053
你应当看一下演讲504

962
00:49:13,387 --> 0:49:18,025
验证、Safari和WebKit中的

963
00:49:18,992 --> 0:49:23,063
还有两场与演讲相关的实验室

964
00:49:23,497 --> 0:49:25,199
和周四中午12点

965
00:49:25,866 --> 0:49:29,102
希望大家积极参与并了解

966
00:49:30,237 --> 0:49:33,106
谢谢大家
