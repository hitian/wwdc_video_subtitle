1
00:00:00,506 --> 0:00:05,500
[ Music ]

2
00:00:09,516 --> 0:00:15,436
[ Applause and Cheering ]

3
00:00:15,936 --> 0:00:17,516
&gt;&gt; Welcome to Getting Started

4
00:00:17,516 --> 0:00:18,356
with Xcode.

5
00:00:18,876 --> 0:00:20,986
My name is Prachi and I'm an

6
00:00:20,986 --> 0:00:21,876
Xcode engineer.

7
00:00:22,386 --> 0:00:24,296
Along with my colleagues Holly

8
00:00:24,296 --> 0:00:26,386
and Honza, I'll be walking you

9
00:00:26,386 --> 0:00:27,766
through how you can build a

10
00:00:27,766 --> 0:00:30,546
simple iOS app using Xcode.

11
00:00:31,196 --> 0:00:32,886
Xcode is an integrated

12
00:00:32,966 --> 0:00:34,606
development environment used for

13
00:00:34,606 --> 0:00:36,776
developing software in Swift,

14
00:00:37,126 --> 0:00:38,906
Objective-C, and other

15
00:00:38,906 --> 0:00:39,526
languages.

16
00:00:40,176 --> 0:00:43,266
In the session, we'll be

17
00:00:43,266 --> 0:00:44,686
covering how you can create a

18
00:00:44,686 --> 0:00:47,486
new project using Xcode, write

19
00:00:47,486 --> 0:00:50,076
and navigate your source code in

20
00:00:50,076 --> 0:00:53,426
Xcode's Source Editor, run and

21
00:00:53,426 --> 0:00:55,816
debug any issues that may exist

22
00:00:56,166 --> 0:00:59,036
within your code base, extend

23
00:00:59,036 --> 0:01:00,506
the functionality of your app

24
00:00:59,036 --> 0:01:00,506
the functionality of your app

25
00:01:00,856 --> 0:01:02,926
using packages and frameworks,

26
00:01:03,006 --> 0:01:04,745
and finally how you can test

27
00:01:04,956 --> 0:01:06,736
distribute your app to the App

28
00:01:06,736 --> 0:01:06,976
Store.

29
00:01:09,506 --> 0:01:12,946
Let's get started with creating

30
00:01:12,946 --> 0:01:16,706
a new project in Xcode.

31
00:01:17,026 --> 0:01:18,746
In front of you, you see the

32
00:01:18,746 --> 0:01:20,786
Xcode window which I'll be

33
00:01:20,786 --> 0:01:22,496
discussing in four different

34
00:01:22,496 --> 0:01:23,086
sections.

35
00:01:26,176 --> 0:01:27,496
In the center section is the

36
00:01:27,496 --> 0:01:29,696
Source Editor where you can view

37
00:01:29,696 --> 0:01:31,206
and edit all of your files.

38
00:01:31,866 --> 0:01:33,166
In particular, we have the

39
00:01:33,166 --> 0:01:34,946
Source Editor open and you can

40
00:01:34,946 --> 0:01:37,156
use it to navigate and edit all

41
00:01:37,156 --> 0:01:38,096
of your source code.

42
00:01:38,886 --> 0:01:40,026
There are other editors

43
00:01:40,026 --> 0:01:41,176
available to use such the

44
00:01:41,176 --> 0:01:42,196
Project Editor.

45
00:01:42,196 --> 0:01:44,336
And here, you can customize your

46
00:01:44,336 --> 0:01:45,766
project settings when you need

47
00:01:45,766 --> 0:01:46,126
to.

48
00:01:47,006 --> 0:01:48,446
Within the project editor, you

49
00:01:48,446 --> 0:01:50,116
will find targets for your app.

50
00:01:50,846 --> 0:01:52,986
A target contains instructions

51
00:01:53,166 --> 0:01:54,956
to build one product.

52
00:01:55,806 --> 0:01:57,766
Examples of products include

53
00:01:57,766 --> 0:02:00,676
libraries, frameworks, test

54
00:01:57,766 --> 0:02:00,676
libraries, frameworks, test

55
00:02:00,676 --> 0:02:02,156
bundles and the app itself.

56
00:02:02,816 --> 0:02:05,446
To the very left of the Xcode

57
00:02:05,446 --> 0:02:06,966
window is the Navigator where

58
00:02:06,966 --> 0:02:08,886
you have quick and easy access

59
00:02:08,916 --> 0:02:10,175
to all of the content within

60
00:02:10,175 --> 0:02:10,886
your project.

61
00:02:11,836 --> 0:02:13,336
You can use the Navigator

62
00:02:13,336 --> 0:02:15,906
selector bar to select a

63
00:02:15,906 --> 0:02:16,696
navigator.

64
00:02:16,696 --> 0:02:18,376
You have many available to you.

65
00:02:18,376 --> 0:02:21,586
And because we have the project

66
00:02:21,586 --> 0:02:23,746
navigator selected, you can use

67
00:02:23,746 --> 0:02:26,316
it to add, delete group, or

68
00:02:26,316 --> 0:02:28,006
otherwise manage all of the

69
00:02:28,006 --> 0:02:29,576
files that exist within your

70
00:02:29,576 --> 0:02:30,146
project.

71
00:02:30,666 --> 0:02:33,056
On the very right is the

72
00:02:33,056 --> 0:02:35,986
Inspector and it provides with

73
00:02:35,986 --> 0:02:37,736
you contextual data about the

74
00:02:37,736 --> 0:02:39,006
contents of your editor.

75
00:02:39,406 --> 0:02:40,386
Because we have the Source

76
00:02:40,386 --> 0:02:42,896
Editor open, you can view

77
00:02:42,896 --> 0:02:44,556
information about the file

78
00:02:44,556 --> 0:02:45,756
that's being displayed such as

79
00:02:45,756 --> 0:02:48,266
the file name and the file path.

80
00:02:49,096 --> 0:02:51,686
The top section is a toolbar.

81
00:02:52,266 --> 0:02:55,006
And here, you'll find the Run

82
00:02:55,346 --> 0:02:56,986
button which will build and run

83
00:02:56,986 --> 0:02:58,186
your product.

84
00:02:59,516 --> 0:03:01,896
The Stop button will terminate

85
00:02:59,516 --> 0:03:01,896
The Stop button will terminate

86
00:03:01,896 --> 0:03:03,716
the current action in progress.

87
00:03:04,456 --> 0:03:07,806
The next two drop-down menus are

88
00:03:07,806 --> 0:03:09,066
the Scheme and the Run

89
00:03:09,066 --> 0:03:09,846
Destination.

90
00:03:10,316 --> 0:03:13,146
A scheme a sharable file that

91
00:03:13,146 --> 0:03:15,016
contains rules for our how app

92
00:03:15,016 --> 0:03:17,466
will be built, run and tested.

93
00:03:18,046 --> 0:03:19,706
The Run Destination is where you

94
00:03:19,706 --> 0:03:20,356
will run your app.

95
00:03:21,346 --> 0:03:22,646
You can choose to run your app

96
00:03:22,976 --> 0:03:24,526
in a simulator for a device such

97
00:03:24,526 --> 0:03:26,396
as the iPhone XR which is what

98
00:03:26,396 --> 0:03:27,186
we're doing up here.

99
00:03:27,796 --> 0:03:30,926
You can run it on your Mac or a

100
00:03:30,926 --> 0:03:32,966
connected device such as an

101
00:03:33,106 --> 0:03:35,446
iPhone or an iPad.

102
00:03:36,476 --> 0:03:38,686
The last three buttons are the

103
00:03:38,686 --> 0:03:40,076
Show and Hide buttons which will

104
00:03:40,076 --> 0:03:41,706
show and hide different sections

105
00:03:41,706 --> 0:03:42,886
of the Xcode window.

106
00:03:42,886 --> 0:03:44,406
And these can come handy.

107
00:03:44,406 --> 0:03:45,786
For example, if you're

108
00:03:45,786 --> 0:03:47,846
developing code and you need

109
00:03:47,846 --> 0:03:49,116
more space in the editor, you

110
00:03:49,116 --> 0:03:50,716
can use the right mouse button

111
00:03:51,036 --> 0:03:53,556
to close the Inspector and

112
00:03:53,616 --> 0:03:54,976
provide yourself with that extra

113
00:03:54,976 --> 0:03:56,736
space in the editor.

114
00:03:59,326 --> 0:04:00,936
Now, I'd like to bring your

115
00:03:59,326 --> 0:04:00,936
Now, I'd like to bring your

116
00:04:00,936 --> 0:04:03,016
attention to the Xcode Help Menu

117
00:04:03,016 --> 0:04:04,136
where you have access to

118
00:04:04,136 --> 0:04:06,226
resources such as Developer

119
00:04:06,226 --> 0:04:08,636
Documentation, Release Notes and

120
00:04:08,636 --> 0:04:09,636
Xcode Help.

121
00:04:11,106 --> 0:04:12,856
Xcode Help is an amazing

122
00:04:12,856 --> 0:04:14,326
resource for learning about

123
00:04:14,326 --> 0:04:14,806
Xcode.

124
00:04:15,076 --> 0:04:16,386
And we highly recommend that you

125
00:04:16,386 --> 0:04:17,886
browse through it on your own.

126
00:04:18,476 --> 0:04:21,016
So now that we walked through

127
00:04:21,016 --> 0:04:22,626
the layout of the Xcode window,

128
00:04:23,056 --> 0:04:24,556
let's go ahead and create an

129
00:04:24,616 --> 0:04:26,216
actual project from scratch.

130
00:04:26,806 --> 0:04:29,216
So in front of you is the

131
00:04:29,216 --> 0:04:31,276
Welcome to Xcode Window.

132
00:04:31,276 --> 0:04:34,226
And on the left, you have the

133
00:04:34,226 --> 0:04:36,086
option to create a new project

134
00:04:36,656 --> 0:04:38,046
which will store all of your

135
00:04:38,136 --> 0:04:39,916
files and resources for your

136
00:04:39,916 --> 0:04:40,006
app.

137
00:04:41,016 --> 0:04:43,016
You can also clone an existing

138
00:04:43,016 --> 0:04:45,056
project that may be hosted on

139
00:04:45,056 --> 0:04:46,426
the source control account such

140
00:04:46,426 --> 0:04:47,036
as GitHub.

141
00:04:47,786 --> 0:04:50,006
And finally, you can also open

142
00:04:50,296 --> 0:04:52,456
up a Xcode Playground which

143
00:04:52,456 --> 0:04:53,786
allows you to experiment with

144
00:04:53,836 --> 0:04:55,586
your Swift code and then see the

145
00:04:55,586 --> 0:04:57,136
result of that code in real

146
00:04:57,136 --> 0:04:57,626
time.

147
00:04:57,626 --> 0:05:00,526
On the right are all of the

148
00:04:57,626 --> 0:05:00,526
On the right are all of the

149
00:05:00,526 --> 0:05:01,476
projects that we've been

150
00:05:01,476 --> 0:05:03,116
recently modifying, and so we

151
00:05:03,116 --> 0:05:04,426
have quick and easy access to

152
00:05:04,426 --> 0:05:04,696
them.

153
00:05:04,696 --> 0:05:07,176
I'm going to go ahead and create

154
00:05:07,176 --> 0:05:08,566
a new project in Xcode.

155
00:05:09,626 --> 0:05:11,506
This will open up the template

156
00:05:11,506 --> 0:05:12,126
selector.

157
00:05:12,636 --> 0:05:14,356
Templates are starting points

158
00:05:14,356 --> 0:05:15,776
for our app.

159
00:05:15,866 --> 0:05:17,596
And there are a variety of

160
00:05:17,636 --> 0:05:19,096
templates that are available for

161
00:05:19,096 --> 0:05:19,776
us to use.

162
00:05:21,366 --> 0:05:22,326
In order to pick the right

163
00:05:22,406 --> 0:05:23,546
template, we need to start out

164
00:05:23,546 --> 0:05:24,966
by identifying the platform

165
00:05:24,966 --> 0:05:25,926
we're developing for.

166
00:05:25,926 --> 0:05:27,476
And I know I'm writing an iOS

167
00:05:27,476 --> 0:05:27,556
app.

168
00:05:28,146 --> 0:05:29,806
So I'll go ahead and click on

169
00:05:29,906 --> 0:05:30,666
the iOS tab.

170
00:05:31,116 --> 0:05:32,716
Within this tab, you'll notice

171
00:05:32,716 --> 0:05:34,146
that there are two categories of

172
00:05:34,146 --> 0:05:36,696
templates available such as the

173
00:05:36,696 --> 0:05:38,856
Application templates and the

174
00:05:38,926 --> 0:05:40,176
Framework and the Library

175
00:05:40,176 --> 0:05:40,706
templates.

176
00:05:40,776 --> 0:05:43,636
For the purpose of this session

177
00:05:43,636 --> 0:05:44,906
though, I'm going to go ahead

178
00:05:44,906 --> 0:05:46,856
and select an Application

179
00:05:46,856 --> 0:05:48,066
template and I'm going to pick

180
00:05:48,136 --> 0:05:49,306
the simplest one which is the

181
00:05:49,306 --> 0:05:51,436
Single View App and I'll click

182
00:05:51,436 --> 0:05:51,876
Next.

183
00:05:52,716 --> 0:05:53,876
So my teammates and I have

184
00:05:53,876 --> 0:05:55,066
decided we want to build a

185
00:05:55,066 --> 0:05:56,546
meditation application.

186
00:05:57,086 --> 0:05:58,246
And we've decided to call it

187
00:05:58,246 --> 0:05:58,666
Mind.

188
00:05:58,666 --> 0:06:00,376
So for the Product Name, I'm

189
00:05:58,666 --> 0:06:00,376
So for the Product Name, I'm

190
00:06:00,586 --> 0:06:01,826
going to enter in Mind.

191
00:06:03,276 --> 0:06:04,886
For the Organization Name,

192
00:06:04,886 --> 0:06:06,356
typically, I would put in the

193
00:06:06,356 --> 0:06:08,606
name of my organization, but for

194
00:06:08,606 --> 0:06:09,996
the purposes of this session,

195
00:06:10,316 --> 0:06:11,716
I'm going to call ourselves

196
00:06:11,716 --> 0:06:12,596
Example Team.

197
00:06:13,916 --> 0:06:16,086
The Organization Identifier is

198
00:06:16,086 --> 0:06:17,936
then the reversed DNS of the

199
00:06:17,936 --> 0:06:19,116
organization name.

200
00:06:19,406 --> 0:06:20,706
So in this case, it is

201
00:06:20,706 --> 0:06:22,216
com.exampleteam.

202
00:06:23,276 --> 0:06:25,016
Finally, the Bundle Identifier

203
00:06:25,016 --> 0:06:28,296
is autofilled and it is a unique

204
00:06:28,296 --> 0:06:30,096
ID for your app within Apple's

205
00:06:30,146 --> 0:06:30,946
ecosystem.

206
00:06:31,166 --> 0:06:33,256
It is a combination of the

207
00:06:33,256 --> 0:06:34,546
Product Name and the

208
00:06:34,546 --> 0:06:36,026
Organization Identifier.

209
00:06:36,716 --> 0:06:38,186
For the Language, I will go

210
00:06:38,186 --> 0:06:39,506
ahead and leave at Swift because

211
00:06:39,506 --> 0:06:40,916
I want to write my app in Swift.

212
00:06:41,846 --> 0:06:44,376
And I will ensure that I have UI

213
00:06:44,376 --> 0:06:46,166
Tests included so that it

214
00:06:46,166 --> 0:06:47,426
creates a target for them.

215
00:06:47,426 --> 0:06:49,726
Because as developers, we want

216
00:06:49,726 --> 0:06:51,726
to be in the habit of constantly

217
00:06:51,726 --> 0:06:52,696
testing our code.

218
00:06:53,316 --> 0:06:55,456
We'll show you later how to add

219
00:06:56,516 --> 0:06:59,936
unit tests.

220
00:07:00,106 --> 0:07:02,016
So after you click Finish, it

221
00:07:02,066 --> 0:07:03,576
will open to Save sheet.

222
00:07:03,916 --> 0:07:05,616
Here, I can decide where I want

223
00:07:05,616 --> 0:07:06,226
to save my app.

224
00:07:06,816 --> 0:07:09,026
It defaults to the Desktop and

225
00:07:09,026 --> 0:07:09,716
I'm happy with that.

226
00:07:10,246 --> 0:07:11,806
So I'll leave that as is.

227
00:07:12,206 --> 0:07:13,466
But one thing that I do want to

228
00:07:13,466 --> 0:07:15,646
ensure is that Source Control is

229
00:07:15,646 --> 0:07:16,826
available from the very

230
00:07:16,826 --> 0:07:18,076
beginning of this project so

231
00:07:18,076 --> 0:07:20,246
that I can manage, track and

232
00:07:20,246 --> 0:07:22,526
backup any changes that I make

233
00:07:23,956 --> 0:07:25,396
during the development process.

234
00:07:25,396 --> 0:07:27,476
So I will go ahead and check the

235
00:07:27,476 --> 0:07:29,646
Create a Git Repository on my

236
00:07:29,646 --> 0:07:31,826
Mac checkbox and I'll click

237
00:07:31,866 --> 0:07:32,316
Create.

238
00:07:32,806 --> 0:07:35,886
So we have our template setup

239
00:07:35,926 --> 0:07:36,256
now.

240
00:07:36,736 --> 0:07:39,866
We can add an app icon to our

241
00:07:39,866 --> 0:07:39,996
app.

242
00:07:40,196 --> 0:07:43,516
App icons are the images that a

243
00:07:43,516 --> 0:07:45,456
user will select whenever they

244
00:07:45,456 --> 0:07:46,326
want to launch our app.

245
00:07:47,496 --> 0:07:48,956
App icons are assets.

246
00:07:49,386 --> 0:07:51,036
Examples of assets include

247
00:07:51,196 --> 0:07:52,436
images and colors.

248
00:07:53,446 --> 0:07:56,436
Assets are managed and organized

249
00:07:56,436 --> 0:07:58,466
by an asset catalog and we can

250
00:07:58,466 --> 0:08:00,076
access that asset catalog

251
00:07:58,466 --> 0:08:00,076
access that asset catalog

252
00:08:00,396 --> 0:08:01,396
through the Navigator by

253
00:08:01,396 --> 0:08:02,146
clicking on it.

254
00:08:02,146 --> 0:08:04,306
And because we want the catalog

255
00:08:04,306 --> 0:08:05,716
for our app icon, let's go ahead

256
00:08:05,716 --> 0:08:07,066
and click on the app icon and

257
00:08:07,066 --> 0:08:07,866
the editor.

258
00:08:08,276 --> 0:08:10,176
And you'll notice from the

259
00:08:10,176 --> 0:08:13,066
catalog that you can have assets

260
00:08:13,066 --> 0:08:15,536
for Notifications, Settings,

261
00:08:16,006 --> 0:08:17,666
Spotlight as well as the app

262
00:08:17,666 --> 0:08:17,966
itself.

263
00:08:17,966 --> 0:08:20,716
So I have an app icon sitting on

264
00:08:20,716 --> 0:08:21,376
my desktop.

265
00:08:21,376 --> 0:08:22,406
It's ready to be used.

266
00:08:23,256 --> 0:08:26,586
And I have device that uses 2X

267
00:08:26,756 --> 0:08:27,636
resolution.

268
00:08:27,906 --> 0:08:30,996
So app icon-- assets are

269
00:08:30,996 --> 0:08:33,535
available for 1X, 2X and 3X

270
00:08:33,535 --> 0:08:34,946
resolution depending upon the

271
00:08:34,946 --> 0:08:35,826
device you use.

272
00:08:36,145 --> 0:08:37,515
So I'm going to ahead and grab

273
00:08:37,515 --> 0:08:40,496
this app icon and drag it into

274
00:08:40,496 --> 0:08:42,566
the 2X catalog box for the

275
00:08:42,566 --> 0:08:43,826
iPhone app.

276
00:08:46,256 --> 0:08:47,976
Now, I want to test my app icon

277
00:08:47,976 --> 0:08:49,156
to make sure that it actually

278
00:08:49,156 --> 0:08:49,466
works.

279
00:08:50,186 --> 0:08:51,976
So to do that, I want to run it

280
00:08:51,976 --> 0:08:53,826
in a simulator for the iPhone

281
00:08:53,826 --> 0:08:54,216
XR.

282
00:08:54,556 --> 0:08:55,496
So I'll change my Run

283
00:08:55,496 --> 0:08:57,056
Destination to the iPhone XR,

284
00:08:58,466 --> 0:08:59,556
and then I'll click the Run

285
00:08:59,556 --> 0:08:59,976
button.

286
00:09:04,516 --> 0:09:06,956
This will launch the simulator.

287
00:09:06,956 --> 0:09:09,426
And you'll notice that the

288
00:09:09,426 --> 0:09:11,346
simulator goes about launching

289
00:09:11,346 --> 0:09:12,356
my app immediately.

290
00:09:12,356 --> 0:09:13,396
I know this because it's

291
00:09:13,396 --> 0:09:14,956
displaying Hello World and

292
00:09:14,956 --> 0:09:16,116
that's what my template is set

293
00:09:16,116 --> 0:09:16,786
up to do.

294
00:09:17,406 --> 0:09:19,066
So I need to go to the Hardware

295
00:09:19,066 --> 0:09:21,726
Menu to actually see my app icon

296
00:09:21,726 --> 0:09:22,626
in the home screen.

297
00:09:22,716 --> 0:09:24,096
So I'll go to the Hardware Menu

298
00:09:25,066 --> 0:09:26,376
and click on Home.

299
00:09:27,886 --> 0:09:28,956
This will bring me to the home

300
00:09:28,956 --> 0:09:30,436
screen and I see my app icon is

301
00:09:30,466 --> 0:09:30,976
there.

302
00:09:31,106 --> 0:09:33,546
If I click on app icon, my app

303
00:09:33,546 --> 0:09:35,026
comes back into the foreground.

304
00:09:35,326 --> 0:09:36,646
So great, I know that my app

305
00:09:36,646 --> 0:09:37,366
icon works.

306
00:09:37,546 --> 0:09:39,946
I can terminate execution of the

307
00:09:40,036 --> 0:09:40,646
simulator.

308
00:09:40,646 --> 0:09:43,286
And now, we're at a good point

309
00:09:43,286 --> 0:09:44,716
where we can commit and save our

310
00:09:44,716 --> 0:09:46,356
changes so that our colleagues

311
00:09:46,356 --> 0:09:48,286
Holly and Honza can continue

312
00:09:48,286 --> 0:09:50,796
developing on this app-- on this

313
00:09:50,936 --> 0:09:51,416
project.

314
00:09:52,426 --> 0:09:54,316
To do that, we first need to add

315
00:09:54,486 --> 0:09:55,906
a GitHub account.

316
00:09:57,016 --> 0:09:58,716
We can do that through Xcode

317
00:09:58,826 --> 0:10:00,596
Preferences which you can access

318
00:09:58,826 --> 0:10:00,596
Preferences which you can access

319
00:10:00,596 --> 0:10:02,086
from the Xcode Menu and then

320
00:10:02,086 --> 0:10:03,106
going to Preferences.

321
00:10:04,096 --> 0:10:05,766
Xcode Preferences lets you

322
00:10:05,766 --> 0:10:07,876
customize Xcode for your needs.

323
00:10:08,496 --> 0:10:09,986
And in order to add an account,

324
00:10:10,246 --> 0:10:11,256
we'll go ahead and ago to the

325
00:10:11,256 --> 0:10:13,196
Account Preference Pane and

326
00:10:13,196 --> 0:10:14,636
click on the Plus button.

327
00:10:15,316 --> 0:10:16,566
You'll see that there are a

328
00:10:16,566 --> 0:10:18,686
variety of accounts that are

329
00:10:18,686 --> 0:10:19,426
available to us.

330
00:10:19,426 --> 0:10:20,586
And since we're interested in

331
00:10:20,586 --> 0:10:22,816
the GitHub account, we'll click

332
00:10:22,816 --> 0:10:24,406
on GitHub and click Continue.

333
00:10:25,736 --> 0:10:27,316
So now it's asking me for my

334
00:10:27,376 --> 0:10:28,616
account credentials so I am

335
00:10:28,616 --> 0:10:30,946
going to go ahead and type in my

336
00:10:31,266 --> 0:10:33,686
account name and my password.

337
00:10:34,776 --> 0:10:36,316
So it's signed in to my account

338
00:10:36,836 --> 0:10:38,026
which is great, so I'll go ahead

339
00:10:38,026 --> 0:10:39,756
and close Xcode Preferences.

340
00:10:40,356 --> 0:10:44,336
And now, I need to make the

341
00:10:44,376 --> 0:10:45,036
actual commit.

342
00:10:45,036 --> 0:10:46,406
So to do that I'll go the Source

343
00:10:46,406 --> 0:10:48,166
Control Menu and I'll click on

344
00:10:48,166 --> 0:10:48,416
Commit.

345
00:10:52,036 --> 0:10:53,066
This will open up the commit

346
00:10:53,066 --> 0:10:53,606
sheet.

347
00:10:53,606 --> 0:10:55,626
And here you can verify all of

348
00:10:55,626 --> 0:10:57,356
the changes you made and you can

349
00:10:57,356 --> 0:10:58,956
add a commit message to let your

350
00:10:58,956 --> 0:11:00,026
colleagues know what you

351
00:10:58,956 --> 0:11:00,026
colleagues know what you

352
00:11:00,086 --> 0:11:00,476
changed.

353
00:11:00,516 --> 0:11:02,026
So for the commit message, I'll

354
00:11:02,026 --> 0:11:04,096
say that this commit will add an

355
00:11:04,136 --> 0:11:05,336
app icon.

356
00:11:06,776 --> 0:11:08,596
And I'll click commit which will

357
00:11:08,596 --> 0:11:09,676
close the commit sheet.

358
00:11:10,396 --> 0:11:13,876
So now to get to this point in

359
00:11:13,876 --> 0:11:15,676
our development, we started out

360
00:11:15,926 --> 0:11:17,486
by creating a project using

361
00:11:17,486 --> 0:11:18,096
Xcode.

362
00:11:18,946 --> 0:11:21,416
We then chose a template that

363
00:11:21,416 --> 0:11:22,496
was appropriate for our

364
00:11:22,496 --> 0:11:23,136
platform.

365
00:11:24,386 --> 0:11:26,766
We added an app icon to our

366
00:11:26,766 --> 0:11:29,096
asset catalogue and then we used

367
00:11:29,096 --> 0:11:30,436
Xcode source control

368
00:11:30,436 --> 0:11:32,326
functionality to commit our

369
00:11:32,326 --> 0:11:33,786
changes so that our colleagues

370
00:11:33,836 --> 0:11:35,236
could continue developing on our

371
00:11:35,316 --> 0:11:35,656
project.

372
00:11:37,096 --> 0:11:38,516
To learn more about Source

373
00:11:38,516 --> 0:11:40,166
Control we recommend that you

374
00:11:40,166 --> 0:11:41,726
check out the Source Control

375
00:11:41,726 --> 0:11:43,776
Workflows in Xcode talk from

376
00:11:43,776 --> 0:11:45,146
2018.

377
00:11:46,336 --> 0:11:47,406
Now we're at a point where we

378
00:11:47,406 --> 0:11:48,706
can start adding actual

379
00:11:48,706 --> 0:11:50,696
meditation functionality to our

380
00:11:50,696 --> 0:11:50,846
app.

381
00:11:51,466 --> 0:11:52,816
And to do that, I'm going to

382
00:11:52,816 --> 0:11:54,476
invite up my colleague Holly.

383
00:11:54,736 --> 0:11:55,256
Thank you.

384
00:11:56,516 --> 0:12:02,736
[ Applause and Cheering ]

385
00:11:56,516 --> 0:12:02,736
[ Applause and Cheering ]

386
00:12:03,236 --> 0:12:04,046
&gt;&gt; Thanks, Prachi.

387
00:12:04,806 --> 0:12:07,556
My name is Holly and I'm an

388
00:12:07,556 --> 0:12:09,106
engineer on the Xcode Source

389
00:12:09,106 --> 0:12:09,896
Editor team.

390
00:12:11,086 --> 0:12:13,046
And welcome to the Source

391
00:12:13,046 --> 0:12:13,456
Editor.

392
00:12:14,166 --> 0:12:15,836
This is where you will write all

393
00:12:15,836 --> 0:12:18,036
of the code for your app.

394
00:12:18,556 --> 0:12:19,896
To the left of the Source Code

395
00:12:20,146 --> 0:12:22,436
we have the line numbers, and to

396
00:12:22,436 --> 0:12:23,876
the right of the code we have

397
00:12:23,876 --> 0:12:25,546
the mini map which shows you a

398
00:12:25,546 --> 0:12:27,096
miniature view of the file in

399
00:12:27,096 --> 0:12:28,666
the editor for navigation.

400
00:12:29,636 --> 0:12:31,776
Above the source code we have

401
00:12:31,806 --> 0:12:32,436
the Jump Bar.

402
00:12:33,796 --> 0:12:35,016
The Jump bar also helps you

403
00:12:35,016 --> 0:12:36,706
navigate the file in the editor

404
00:12:36,706 --> 0:12:37,996
using the function popup.

405
00:12:38,636 --> 0:12:41,536
The Jump Bar also lets you

406
00:12:41,536 --> 0:12:43,006
customize the layout of your

407
00:12:43,006 --> 0:12:45,036
editor using the Editor Options

408
00:12:45,036 --> 0:12:46,426
and Editor Split menus.

409
00:12:48,136 --> 0:12:50,066
We are already making great

410
00:12:50,066 --> 0:12:51,186
progress on building our

411
00:12:51,186 --> 0:12:51,976
meditation app.

412
00:12:52,686 --> 0:12:53,876
Let's have a look at where we're

413
00:12:53,876 --> 0:12:54,106
headed.

414
00:12:55,616 --> 0:12:57,136
We are building a meditation app

415
00:12:57,526 --> 0:12:59,126
that allows users to select a

416
00:12:59,126 --> 0:13:00,866
duration and meditate for that

417
00:12:59,126 --> 0:13:00,866
duration and meditate for that

418
00:13:00,956 --> 0:13:01,866
amount of time.

419
00:13:02,506 --> 0:13:03,996
When the meditation is over, the

420
00:13:03,996 --> 0:13:05,536
app will write the user's

421
00:13:05,536 --> 0:13:06,946
mindful minutes back to their

422
00:13:06,946 --> 0:13:07,506
health data.

423
00:13:08,636 --> 0:13:09,956
We'll need to add quite a bit of

424
00:13:09,956 --> 0:13:11,326
Swift code to get our app

425
00:13:11,326 --> 0:13:11,776
working.

426
00:13:12,286 --> 0:13:14,026
But instead of trying to read

427
00:13:14,026 --> 0:13:15,706
the code that I write, I want

428
00:13:15,706 --> 0:13:17,196
you to focus on the tools that

429
00:13:17,196 --> 0:13:18,676
Xcode provides to aid the

430
00:13:18,676 --> 0:13:19,396
editing process.

431
00:13:19,396 --> 0:13:22,056
And if you're new to Swift,

432
00:13:22,396 --> 0:13:22,946
welcome.

433
00:13:23,366 --> 0:13:24,656
To get started with Swift, I

434
00:13:24,656 --> 0:13:25,836
recommend going through the

435
00:13:25,836 --> 0:13:27,286
Swift guided tour which is

436
00:13:27,286 --> 0:13:30,036
available online or in an Xcode

437
00:13:30,086 --> 0:13:31,556
Playground so that you can

438
00:13:31,556 --> 0:13:33,346
experiment with the Swift code

439
00:13:33,346 --> 0:13:34,576
as you walk through the tour.

440
00:13:36,146 --> 0:13:38,016
This resource is available on

441
00:13:38,016 --> 0:13:39,296
docs.swift.org.

442
00:13:40,046 --> 0:13:41,876
And with that, let's head over

443
00:13:41,876 --> 0:13:42,586
to Xcode.

444
00:13:48,196 --> 0:13:50,646
I added some code to the project

445
00:13:50,646 --> 0:13:51,986
template that Prachi showed us

446
00:13:52,286 --> 0:13:53,336
to implement timing of

447
00:13:53,336 --> 0:13:55,116
meditation and drawing a

448
00:13:55,226 --> 0:13:56,426
peaceful background for the app.

449
00:13:57,356 --> 0:13:58,906
We still have to implement a UI

450
00:13:59,286 --> 0:14:00,986
for selecting a meditation

451
00:13:59,286 --> 0:14:00,986
for selecting a meditation

452
00:14:00,986 --> 0:14:02,966
duration and for starting the

453
00:14:02,966 --> 0:14:03,736
meditation.

454
00:14:04,676 --> 0:14:06,006
We also have to implement the

455
00:14:06,006 --> 0:14:07,126
class that interacts with

456
00:14:07,126 --> 0:14:07,696
HealthKit.

457
00:14:08,396 --> 0:14:09,596
To get our app up and running

458
00:14:09,596 --> 0:14:11,466
really quickly, I implemented a

459
00:14:11,466 --> 0:14:13,226
mock HealthStore that does not

460
00:14:13,226 --> 0:14:14,586
interact with HealthKit and

461
00:14:14,586 --> 0:14:15,546
we'll implement the real

462
00:14:15,546 --> 0:14:16,436
HealthStore later.

463
00:14:17,166 --> 0:14:18,896
So here, we're looking at the

464
00:14:18,896 --> 0:14:20,356
ContentView.swift from the

465
00:14:20,356 --> 0:14:22,356
project template and I added a

466
00:14:22,356 --> 0:14:24,136
title and a background.

467
00:14:25,056 --> 0:14:26,856
While building the UI for your

468
00:14:26,856 --> 0:14:28,456
app, Xcode can show you a

469
00:14:28,456 --> 0:14:30,296
preview of what your UI will

470
00:14:30,296 --> 0:14:32,496
look like on an interactive

471
00:14:32,496 --> 0:14:32,896
Canvas.

472
00:14:33,476 --> 0:14:35,156
To show the Canvas, we can

473
00:14:35,156 --> 0:14:37,676
select the Editor Menu and click

474
00:14:37,846 --> 0:14:38,986
Editor and Canvas.

475
00:14:41,066 --> 0:14:42,676
The Canvas will build and run

476
00:14:42,676 --> 0:14:44,706
your code as you edit so that it

477
00:14:44,706 --> 0:14:45,996
can show you the results of your

478
00:14:45,996 --> 0:14:47,666
code in real time.

479
00:14:48,256 --> 0:14:50,086
So now in the preview, we can

480
00:14:50,086 --> 0:14:51,926
see the welcome title and the

481
00:14:51,926 --> 0:14:52,956
peaceful background.

482
00:14:53,616 --> 0:14:55,926
Next, I want to add a meditation

483
00:14:55,926 --> 0:14:56,296
view.

484
00:14:56,586 --> 0:15:00,656
So I'll create a new file, and

485
00:14:56,586 --> 0:15:00,656
So I'll create a new file, and

486
00:15:01,036 --> 0:15:03,146
I'll use the SwiftUI View file

487
00:15:03,146 --> 0:15:03,666
template.

488
00:15:04,276 --> 0:15:07,116
And I'm going to call this

489
00:15:07,206 --> 0:15:08,236
MeditationView.

490
00:15:16,086 --> 0:15:17,706
Right now, the preview is

491
00:15:17,706 --> 0:15:19,946
showing me a full device, but

492
00:15:19,946 --> 0:15:21,306
the view that I'm working on is

493
00:15:21,306 --> 0:15:23,086
only taking up a small portion

494
00:15:23,086 --> 0:15:23,936
of the screen.

495
00:15:24,336 --> 0:15:25,966
I can modify the preview

496
00:15:25,966 --> 0:15:27,416
provider which is what's

497
00:15:27,416 --> 0:15:28,956
supplying the view to show on

498
00:15:28,956 --> 0:15:30,976
the Canvas to only show the view

499
00:15:30,976 --> 0:15:32,466
that I'm working on using the

500
00:15:32,466 --> 0:15:33,986
previewLayout modifier.

501
00:15:35,436 --> 0:15:36,526
When I start to type the

502
00:15:36,526 --> 0:15:38,496
modifier, Xcode will bring up

503
00:15:38,686 --> 0:15:40,116
the Code Completion Window.

504
00:15:40,806 --> 0:15:42,216
This shows me a list of

505
00:15:42,216 --> 0:15:44,176
suggested symbols based on the

506
00:15:44,176 --> 0:15:46,066
text that I typed as well as the

507
00:15:46,066 --> 0:15:47,886
surrounding context of the code.

508
00:15:48,656 --> 0:15:50,416
The modifier that I want is the

509
00:15:50,416 --> 0:15:52,496
first one in the completion list

510
00:15:52,496 --> 0:15:54,016
and I can press Enter to accept

511
00:15:54,016 --> 0:15:54,856
the suggestion.

512
00:15:55,076 --> 0:15:57,846
Now Xcode inserted the symbol

513
00:15:57,846 --> 0:15:59,276
into the editor along with the

514
00:15:59,276 --> 0:16:00,906
placeholder for me to fill out

515
00:15:59,276 --> 0:16:00,906
placeholder for me to fill out

516
00:16:00,906 --> 0:16:01,766
the remaining code.

517
00:16:01,836 --> 0:16:03,346
And I'll fill that out now with

518
00:16:03,346 --> 0:16:04,326
a sizeThatFits.

519
00:16:05,796 --> 0:16:07,656
Next, I know that my

520
00:16:07,656 --> 0:16:09,296
MeditationView will need to

521
00:16:09,296 --> 0:16:09,976
interact with the

522
00:16:09,976 --> 0:16:11,466
MeditationController.

523
00:16:11,806 --> 0:16:13,526
So I am going to add a property

524
00:16:13,526 --> 0:16:15,746
wrapper that wraps a

525
00:16:15,746 --> 0:16:18,486
MeditationController, and I'll

526
00:16:18,486 --> 0:16:19,336
resume the preview.

527
00:16:20,676 --> 0:16:22,236
If you're unsure of what a

528
00:16:22,236 --> 0:16:24,186
certain API does in the Source

529
00:16:24,186 --> 0:16:25,366
Editor, you can view

530
00:16:25,366 --> 0:16:28,026
documentation for that API by

531
00:16:28,026 --> 0:16:29,786
holding down Option and clicking

532
00:16:29,786 --> 0:16:30,906
on the symbol that you want to

533
00:16:30,906 --> 0:16:32,276
view documentation for.

534
00:16:33,556 --> 0:16:34,626
This will bring up the Quick

535
00:16:34,626 --> 0:16:36,586
Help popover which shows me the

536
00:16:36,586 --> 0:16:38,716
declaration of the symbol along

537
00:16:38,716 --> 0:16:39,926
with its documentation.

538
00:16:40,836 --> 0:16:43,046
Before we move on, I need to

539
00:16:43,116 --> 0:16:45,706
supply a MeditationController

540
00:16:46,106 --> 0:16:47,306
using the environmentObject

541
00:16:47,306 --> 0:16:47,886
modifier.

542
00:16:53,196 --> 0:16:55,756
Now, let's start building up

543
00:16:55,826 --> 0:16:56,436
this view.

544
00:16:56,876 --> 0:16:58,936
Right now, we have text that's

545
00:16:58,936 --> 0:17:00,836
showing us Hello World, and I

546
00:16:58,936 --> 0:17:00,836
showing us Hello World, and I

547
00:17:00,836 --> 0:17:02,626
want to change this to show the

548
00:17:02,626 --> 0:17:03,676
remaining time for the

549
00:17:03,676 --> 0:17:05,566
meditation which I can get from

550
00:17:05,566 --> 0:17:06,846
the MeditationController.

551
00:17:09,175 --> 0:17:10,685
And as I updated the code in the

552
00:17:10,685 --> 0:17:12,396
editor, the preview updated to

553
00:17:12,396 --> 0:17:13,626
reflect this change.

554
00:17:14,256 --> 0:17:15,656
Now, the text looks a little

555
00:17:15,656 --> 0:17:17,266
small to me and I can make it

556
00:17:17,266 --> 0:17:18,976
larger using the Inspector.

557
00:17:19,465 --> 0:17:21,736
So, I'll show the Inspector from

558
00:17:21,736 --> 0:17:23,266
the button in the Xcode Toolbar.

559
00:17:23,596 --> 0:17:25,026
And I'll click on the Attributes

560
00:17:25,026 --> 0:17:25,586
icon.

561
00:17:26,236 --> 0:17:27,866
Then I'll click on the view that

562
00:17:27,866 --> 0:17:28,626
I want to inspect.

563
00:17:29,316 --> 0:17:31,086
And here I can see the values of

564
00:17:31,126 --> 0:17:32,496
all of the modifiers being

565
00:17:32,496 --> 0:17:33,746
applied to this view.

566
00:17:34,546 --> 0:17:35,926
Right now, the font is

567
00:17:35,926 --> 0:17:37,676
inherited, and I can change it

568
00:17:37,676 --> 0:17:38,956
by clicking on the Menu, and

569
00:17:38,956 --> 0:17:40,146
selecting Large Title.

570
00:17:41,296 --> 0:17:42,786
When I do that, the preview

571
00:17:42,786 --> 0:17:44,716
updates and the Source Editor

572
00:17:44,716 --> 0:17:46,376
automatically adds in the code

573
00:17:46,376 --> 0:17:48,216
required to make this change.

574
00:17:49,516 --> 0:17:53,276
[ Applause ]

575
00:17:53,776 --> 0:17:55,566
Above the text, I want to show a

576
00:17:55,566 --> 0:17:57,686
button to allow users to pause

577
00:17:57,756 --> 0:17:59,406
and resume their meditation.

578
00:18:00,246 --> 0:18:01,966
You can add in ready to use

579
00:18:01,966 --> 0:18:03,626
resources into the file that

580
00:18:03,626 --> 0:18:04,836
you're working on using the

581
00:18:04,836 --> 0:18:06,946
Library which you can access by

582
00:18:06,946 --> 0:18:08,436
clicking on the plus button in

583
00:18:08,436 --> 0:18:09,076
the toolbar.

584
00:18:10,546 --> 0:18:12,056
The Library has different

585
00:18:12,156 --> 0:18:14,256
categories of objects including

586
00:18:14,256 --> 0:18:16,616
views, modifiers, and code

587
00:18:16,616 --> 0:18:17,206
snippets.

588
00:18:17,606 --> 0:18:18,696
Let's look at the code snippets

589
00:18:18,696 --> 0:18:19,266
category.

590
00:18:19,986 --> 0:18:22,616
Xcode has built in code snippets

591
00:18:22,706 --> 0:18:23,726
and you can add your own

592
00:18:23,726 --> 0:18:25,126
snippets too for fragments of

593
00:18:25,126 --> 0:18:26,646
code that you write frequently.

594
00:18:27,426 --> 0:18:28,576
Here, you can see all of the

595
00:18:28,576 --> 0:18:30,006
snippets that I have added to

596
00:18:30,006 --> 0:18:31,386
allow us to add code really

597
00:18:31,386 --> 0:18:32,656
quickly during this demo.

598
00:18:33,106 --> 0:18:34,706
But now I'll switch back to the

599
00:18:34,706 --> 0:18:37,176
View Category, and I can type in

600
00:18:37,256 --> 0:18:38,396
the view that I'm looking for.

601
00:18:38,836 --> 0:18:41,056
I can drag in this button into

602
00:18:41,056 --> 0:18:43,346
the Source Editor or directly on

603
00:18:43,346 --> 0:18:44,236
to a preview.

604
00:18:44,946 --> 0:18:46,536
And now the Canvas is telling me

605
00:18:46,536 --> 0:18:47,896
that this button will be added

606
00:18:47,896 --> 0:18:50,126
to a new vertical stack along

607
00:18:50,126 --> 0:18:52,306
with the existing text.

608
00:18:52,356 --> 0:18:54,576
When I drop the button, the

609
00:18:54,576 --> 0:18:56,036
Source Editor will add in the

610
00:18:56,036 --> 0:18:58,206
necessary code to embed both the

611
00:18:58,206 --> 0:19:00,316
button, and the text into a

612
00:18:58,206 --> 0:19:00,316
button, and the text into a

613
00:19:00,316 --> 0:19:02,126
vertical stack by adding a

614
00:19:02,126 --> 0:19:02,576
VStack.

615
00:19:03,216 --> 0:19:04,206
And now I can fill in the

616
00:19:04,206 --> 0:19:04,786
placeholders.

617
00:19:05,436 --> 0:19:07,126
When we tap the button, we want

618
00:19:07,126 --> 0:19:08,406
to toggle the meditation.

619
00:19:08,946 --> 0:19:11,646
and rather than showing text, I

620
00:19:11,646 --> 0:19:13,356
want to show an icon that's

621
00:19:13,356 --> 0:19:16,026
either showing play or pause.

622
00:19:16,766 --> 0:19:19,216
Now finally, I only want to show

623
00:19:19,216 --> 0:19:21,036
the remaining time if the user

624
00:19:21,036 --> 0:19:22,606
is actively meditating.

625
00:19:23,156 --> 0:19:24,896
Otherwise, I want to show a

626
00:19:24,896 --> 0:19:26,876
picker with preset meditation

627
00:19:26,876 --> 0:19:27,546
durations.

628
00:19:28,616 --> 0:19:30,216
Xcode knows a lot about the

629
00:19:30,216 --> 0:19:31,346
structure of the code that I

630
00:19:31,346 --> 0:19:33,236
have written in the editor, and

631
00:19:33,236 --> 0:19:35,196
it can help me transform and

632
00:19:35,196 --> 0:19:36,916
refactor my code using

633
00:19:36,976 --> 0:19:38,016
structured editing.

634
00:19:38,456 --> 0:19:40,866
If I hold on Command and click

635
00:19:40,866 --> 0:19:42,396
on a code structure such as

636
00:19:42,396 --> 0:19:44,726
Text, Xcode will show me the

637
00:19:44,726 --> 0:19:46,766
Action Menu which has many

638
00:19:46,766 --> 0:19:47,856
different actions that I can

639
00:19:47,856 --> 0:19:49,916
perform to transform this code

640
00:19:49,916 --> 0:19:50,416
structure.

641
00:19:51,246 --> 0:19:52,536
There are also options in the

642
00:19:52,536 --> 0:19:54,276
Menu to Jump to Definition and

643
00:19:54,506 --> 0:19:56,256
to view Quick Help for the text

644
00:19:56,386 --> 0:19:56,826
symbol.

645
00:19:57,616 --> 0:19:59,246
Since I only want to show the

646
00:19:59,246 --> 0:20:00,966
text under a certain condition,

647
00:19:59,246 --> 0:20:00,966
text under a certain condition,

648
00:20:01,126 --> 0:20:02,916
I'll click on Make Conditional.

649
00:20:04,376 --> 0:20:05,266
And now I can fill in the

650
00:20:05,266 --> 0:20:06,526
placeholders again.

651
00:20:07,016 --> 0:20:08,616
The condition is if the

652
00:20:08,616 --> 0:20:09,786
meditation is active.

653
00:20:10,256 --> 0:20:11,756
And now, I have another

654
00:20:11,826 --> 0:20:12,956
placeholder further down in the

655
00:20:12,956 --> 0:20:13,436
file.

656
00:20:13,726 --> 0:20:15,486
And I can jump to it, using the

657
00:20:15,486 --> 0:20:16,936
Control-forward slash key

658
00:20:16,936 --> 0:20:18,696
binding which helps me really

659
00:20:18,696 --> 0:20:19,766
quickly fill out the missing

660
00:20:19,766 --> 0:20:21,516
code without even having to

661
00:20:21,516 --> 0:20:22,526
touch the mouse.

662
00:20:23,726 --> 0:20:25,346
Now, this is exactly what I want

663
00:20:25,346 --> 0:20:26,846
my meditation view to look like.

664
00:20:27,286 --> 0:20:28,496
So now, I'll switch back to the

665
00:20:28,496 --> 0:20:29,946
ContentView to add it there.

666
00:20:30,996 --> 0:20:33,046
I want to add my MeditationView

667
00:20:33,206 --> 0:20:34,506
to the bottom of this VStack

668
00:20:34,926 --> 0:20:36,136
along with another spacer.

669
00:20:37,506 --> 0:20:39,686
And now, the preview has updated

670
00:20:39,686 --> 0:20:41,966
to show me my welcome title, my

671
00:20:42,096 --> 0:20:44,266
Play button and my picker to

672
00:20:44,266 --> 0:20:45,726
select the meditation duration.

673
00:20:46,406 --> 0:20:47,466
Now, that I'm done with the UI,

674
00:20:47,466 --> 0:20:49,196
I'm going to close the Canvas.

675
00:20:49,796 --> 0:20:51,356
And I'll hide the Inspector to

676
00:20:51,356 --> 0:20:52,126
make some more room in the

677
00:20:52,126 --> 0:20:52,586
editor.

678
00:20:54,576 --> 0:20:56,396
Before, we try to run our app, I

679
00:20:56,396 --> 0:20:57,476
want to modify the

680
00:20:57,476 --> 0:20:59,306
MeditationController to make

681
00:20:59,306 --> 0:21:00,766
debugging a little easier.

682
00:20:59,306 --> 0:21:00,766
debugging a little easier.

683
00:21:01,566 --> 0:21:03,186
And here, I'm going to use the

684
00:21:03,186 --> 0:21:05,076
mini map to navigate to the

685
00:21:05,076 --> 0:21:06,996
Meditation Timer State section

686
00:21:06,996 --> 0:21:07,506
of code.

687
00:21:08,536 --> 0:21:09,886
The mini map shows me text

688
00:21:10,036 --> 0:21:12,026
labels for all of the marks

689
00:21:12,186 --> 0:21:13,246
throughout this file.

690
00:21:13,706 --> 0:21:15,486
And I can navigate to a mark by

691
00:21:15,486 --> 0:21:16,586
clicking on the label in the

692
00:21:16,586 --> 0:21:18,186
mini map.

693
00:21:18,626 --> 0:21:20,896
A mark is a special comment that

694
00:21:20,896 --> 0:21:22,716
Xcode understands to show your

695
00:21:22,716 --> 0:21:24,896
sections of code any editor, in

696
00:21:24,896 --> 0:21:26,446
the jump bar and into the mini

697
00:21:26,446 --> 0:21:26,576
map.

698
00:21:27,366 --> 0:21:29,546
Now, in this section of code, I

699
00:21:29,546 --> 0:21:31,366
have several computed properties

700
00:21:31,366 --> 0:21:32,476
that indicate state.

701
00:21:33,246 --> 0:21:34,806
To make inspecting the state

702
00:21:34,806 --> 0:21:36,736
easier, I'm going to add a

703
00:21:36,846 --> 0:21:39,076
stored property called State

704
00:21:39,756 --> 0:21:40,996
that has one of the possible

705
00:21:40,996 --> 0:21:43,066
values stopped, paused, or

706
00:21:43,066 --> 0:21:43,516
running.

707
00:21:43,986 --> 0:21:45,026
And I'll default this to

708
00:21:45,106 --> 0:21:45,516
stopped.

709
00:21:46,846 --> 0:21:48,086
Now, when we update the

710
00:21:48,086 --> 0:21:50,536
MeditationTimer, we want to look

711
00:21:50,536 --> 0:21:52,596
at the timer state and update

712
00:21:52,596 --> 0:21:54,796
the controller state using a

713
00:21:54,886 --> 0:21:55,666
switch statement.

714
00:21:58,046 --> 0:22:00,086
The possible values of the timer

715
00:21:58,046 --> 0:22:00,086
The possible values of the timer

716
00:22:00,086 --> 0:22:02,246
state are nil, paused and

717
00:22:02,246 --> 0:22:02,576
running.

718
00:22:02,896 --> 0:22:04,876
And in Swift, switch statements

719
00:22:04,876 --> 0:22:06,186
must be exhaustive.

720
00:22:06,716 --> 0:22:07,976
If they're not, I'll get a

721
00:22:07,976 --> 0:22:09,756
compiler error telling me to add

722
00:22:09,756 --> 0:22:10,746
the missing cases.

723
00:22:11,016 --> 0:22:12,426
And notice that I've gotten a

724
00:22:12,426 --> 0:22:14,016
compiler error in my editor

725
00:22:14,016 --> 0:22:15,426
without even building my code.

726
00:22:15,776 --> 0:22:17,746
These are called live issues and

727
00:22:17,746 --> 0:22:18,836
they appear as you type.

728
00:22:19,966 --> 0:22:21,506
So if I click on the live issue,

729
00:22:21,626 --> 0:22:23,316
I get a Fix-It asking me if I

730
00:22:23,316 --> 0:22:24,656
want to add the missing cases.

731
00:22:24,976 --> 0:22:26,246
And I do. So I'll go ahead and

732
00:22:26,246 --> 0:22:26,656
click on that.

733
00:22:32,436 --> 0:22:34,456
Now in the case where the timer

734
00:22:34,456 --> 0:22:36,736
is nil, I want the state to be

735
00:22:36,736 --> 0:22:37,176
stopped.

736
00:22:38,266 --> 0:22:40,106
Now, rather than having a catch

737
00:22:40,106 --> 0:22:42,046
all case for all of the possible

738
00:22:42,046 --> 0:22:43,856
values that can be wrapped, I

739
00:22:43,856 --> 0:22:46,056
want explicit cases for each of

740
00:22:46,056 --> 0:22:46,776
those values.

741
00:22:47,276 --> 0:22:48,676
So I'll change this underscore

742
00:22:48,676 --> 0:22:50,266
to the first value which is

743
00:22:50,266 --> 0:22:50,666
running.

744
00:22:51,316 --> 0:22:52,696
And now that I've done that,

745
00:22:52,916 --> 0:22:54,166
this switch statement is no

746
00:22:54,166 --> 0:22:55,246
longer exhaustive.

747
00:22:55,636 --> 0:22:57,816
So, I'll get another live issue

748
00:22:58,246 --> 0:22:59,636
with another Fix-It to add at

749
00:22:59,636 --> 0:23:00,856
there with last remaining case.

750
00:22:59,636 --> 0:23:00,856
there with last remaining case.

751
00:23:02,156 --> 0:23:04,986
And I don't need this associated

752
00:23:04,986 --> 0:23:06,386
value so I'll go ahead and

753
00:23:06,386 --> 0:23:08,356
remove that.

754
00:23:09,136 --> 0:23:10,556
You may have noticed that these

755
00:23:10,626 --> 0:23:12,546
two names, running and paused,

756
00:23:12,546 --> 0:23:14,446
are the same as the remaining

757
00:23:14,446 --> 0:23:16,376
cases of this State enum.

758
00:23:16,696 --> 0:23:18,136
And I can use multi-cursor

759
00:23:18,136 --> 0:23:19,746
editing to quickly fill out the

760
00:23:19,746 --> 0:23:20,736
code placeholders.

761
00:23:21,696 --> 0:23:23,146
Right now, I have one insertion

762
00:23:23,146 --> 0:23:24,966
point, and I can add another one

763
00:23:25,066 --> 0:23:26,536
by holding down Control and

764
00:23:26,536 --> 0:23:28,406
Shift and clicking where I want

765
00:23:28,406 --> 0:23:29,836
to place my next insertion

766
00:23:29,836 --> 0:23:30,106
point.

767
00:23:31,746 --> 0:23:33,086
Now that I have multiple

768
00:23:33,086 --> 0:23:35,116
insertion points, I can perform

769
00:23:35,356 --> 0:23:37,246
any command and that command

770
00:23:37,246 --> 0:23:39,016
will act on each my insertion

771
00:23:39,016 --> 0:23:39,506
points.

772
00:23:40,176 --> 0:23:41,476
To see all of the commands that

773
00:23:41,476 --> 0:23:43,476
are available, you can go to the

774
00:23:43,476 --> 0:23:45,986
Xcode Preferences, select the

775
00:23:45,986 --> 0:23:46,936
Key Bindings Tab.

776
00:23:47,486 --> 0:23:48,786
And here you can see all of the

777
00:23:48,786 --> 0:23:50,586
commands and their key bindings,

778
00:23:50,846 --> 0:23:52,006
and you can even change the key

779
00:23:52,006 --> 0:23:53,306
binding to be whatever you like.

780
00:23:53,306 --> 0:23:55,596
So I'll will show you a few now.

781
00:23:56,396 --> 0:23:57,766
I can select the word back,

782
00:23:58,366 --> 0:24:00,586
copy, jump to next placeholder,

783
00:23:58,366 --> 0:24:00,586
copy, jump to next placeholder,

784
00:24:01,336 --> 0:24:03,126
type and paste.

785
00:24:04,446 --> 0:24:05,416
And now, we're done.

786
00:24:06,516 --> 0:24:10,616
[ Applause and Cheering ]

787
00:24:11,116 --> 0:24:12,246
And this is all of the code that

788
00:24:12,246 --> 0:24:13,636
we need to implement the basic

789
00:24:13,636 --> 0:24:14,686
functionality of our App.

790
00:24:15,626 --> 0:24:17,026
Before we dive into running and

791
00:24:17,026 --> 0:24:18,686
debugging, let's review what we

792
00:24:18,686 --> 0:24:19,866
learned about the Source Editor.

793
00:24:24,836 --> 0:24:26,606
We saw how Xcode's interactive

794
00:24:26,646 --> 0:24:28,436
Canvas can help us preview the

795
00:24:28,436 --> 0:24:30,746
UI of our app and help us edit

796
00:24:30,746 --> 0:24:32,096
the appearance of our views.

797
00:24:33,236 --> 0:24:34,956
We learned how code completion

798
00:24:34,956 --> 0:24:36,046
can greatly speed up the

799
00:24:36,046 --> 0:24:37,086
development process.

800
00:24:38,456 --> 0:24:40,286
Then we saw how Xcode can help

801
00:24:40,286 --> 0:24:41,746
us transform and add

802
00:24:41,746 --> 0:24:43,016
functionality to our code

803
00:24:43,016 --> 0:24:44,626
structures automatically from

804
00:24:44,626 --> 0:24:45,616
the Action Menu.

805
00:24:45,616 --> 0:24:48,766
And finally, we saw how live

806
00:24:48,816 --> 0:24:50,366
issues and Fix-Its can help us

807
00:24:50,416 --> 0:24:52,156
fix our compiler errors before

808
00:24:52,156 --> 0:24:53,366
even building our project.

809
00:24:54,486 --> 0:24:56,346
For more information on the new

810
00:24:56,416 --> 0:24:57,696
Swift language features that we

811
00:24:57,696 --> 0:24:59,806
saw or the SwiftUI framework

812
00:24:59,806 --> 0:25:01,446
that we built-- that we used to

813
00:24:59,806 --> 0:25:01,446
that we built-- that we used to

814
00:25:01,446 --> 0:25:03,266
build up our views, please watch

815
00:25:03,316 --> 0:25:04,766
the What's New in Swift and the

816
00:25:04,766 --> 0:25:06,336
Introducing SwiftUI Session

817
00:25:06,336 --> 0:25:07,056
recordings.

818
00:25:07,876 --> 0:25:09,516
And now that we're ready to run

819
00:25:09,586 --> 0:25:11,026
the app, I'm going to hand it

820
00:25:11,026 --> 0:25:12,416
off to Honza to walk us through

821
00:25:12,416 --> 0:25:13,316
running and the bugging.

822
00:25:14,516 --> 0:25:19,496
[ Applause and Cheering ]

823
00:25:19,996 --> 0:25:20,566
&gt;&gt; Thanks Holly.

824
00:25:21,106 --> 0:25:22,996
Hi, my name is Honza and I'm and

825
00:25:22,996 --> 0:25:23,836
Xcode engineer.

826
00:25:24,766 --> 0:25:26,316
So now that Prachi created our

827
00:25:26,316 --> 0:25:28,146
project and Holly added some

828
00:25:28,146 --> 0:25:29,896
codes to it, we'll talk about

829
00:25:29,896 --> 0:25:32,406
how we can build, run and debug

830
00:25:32,406 --> 0:25:34,606
our app on the simulator and on

831
00:25:34,606 --> 0:25:35,406
a real device.

832
00:25:36,016 --> 0:25:37,586
And then, we'll add a Swift

833
00:25:37,586 --> 0:25:39,376
Package dependency that allows

834
00:25:39,376 --> 0:25:40,756
us to add new feature to our

835
00:25:40,856 --> 0:25:40,966
app.

836
00:25:41,496 --> 0:25:42,306
So let's get started.

837
00:25:50,096 --> 0:25:52,186
So Prachi has shown you how to

838
00:25:52,186 --> 0:25:54,226
build and run our app using the

839
00:25:54,226 --> 0:25:55,726
Run button in the toolbar.

840
00:25:56,136 --> 0:25:57,886
But we can also do this from the

841
00:25:57,936 --> 0:25:59,206
Product Menu where we have the

842
00:25:59,206 --> 0:26:02,196
options to Run, Test, Archive,

843
00:25:59,206 --> 0:26:02,196
options to Run, Test, Archive,

844
00:26:02,316 --> 0:26:03,366
Build and many more.

845
00:26:03,906 --> 0:26:06,216
So right now, I will run the app

846
00:26:06,386 --> 0:26:07,106
on the simulator.

847
00:26:09,446 --> 0:26:10,836
The app is being built,

848
00:26:11,376 --> 0:26:13,066
installed, and launched on the

849
00:26:13,066 --> 0:26:14,436
iPhone simulator, and the

850
00:26:14,556 --> 0:26:15,976
simulator app comes to the

851
00:26:15,976 --> 0:26:17,146
foreground automatically.

852
00:26:17,866 --> 0:26:19,376
So this is what our app looks

853
00:26:19,376 --> 0:26:20,496
like right now.

854
00:26:21,586 --> 0:26:22,826
So, because we're moving pretty

855
00:26:22,826 --> 0:26:24,026
fast, let's do a quick

856
00:26:24,026 --> 0:26:26,556
meditation using our new app.

857
00:26:26,746 --> 0:26:28,846
All I have to do is click on the

858
00:26:28,846 --> 0:26:30,556
Play button to start a new 3

859
00:26:30,556 --> 0:26:31,646
minute meditation.

860
00:26:32,816 --> 0:26:35,236
So the meditation started

861
00:26:35,236 --> 0:26:37,476
correctly, but the Play icon

862
00:26:37,476 --> 0:26:39,126
didn't change which I think is

863
00:26:39,126 --> 0:26:39,616
wrong.

864
00:26:40,146 --> 0:26:42,186
Just like in music apps, we want

865
00:26:42,186 --> 0:26:44,356
to show the Play icon when the

866
00:26:44,356 --> 0:26:46,046
meditation is paused, and the

867
00:26:46,116 --> 0:26:48,056
Pause icon when the meditation

868
00:26:48,056 --> 0:26:48,636
is running.

869
00:26:49,166 --> 0:26:50,156
So we'll use the debugger

870
00:26:50,156 --> 0:26:51,816
integration in Xcode to help us

871
00:26:51,816 --> 0:26:53,556
find and fix this bug.

872
00:26:55,316 --> 0:26:57,476
To run our app with debugger

873
00:26:57,476 --> 0:26:58,866
attached to it, I don't need to

874
00:26:58,866 --> 0:26:59,836
do anything special.

875
00:27:00,256 --> 0:27:02,206
As when I just run my app right

876
00:27:02,206 --> 0:27:04,716
now, Xcode automatically

877
00:27:05,306 --> 0:27:07,696
attached debugger.

878
00:27:07,816 --> 0:27:09,406
So, I'll leave the app running

879
00:27:09,406 --> 0:27:10,736
in the simulator right now and

880
00:27:10,736 --> 0:27:11,806
go back to Xcode.

881
00:27:12,186 --> 0:27:13,746
And we'll start to looking in

882
00:27:13,746 --> 0:27:14,826
the MeditationView.

883
00:27:15,346 --> 0:27:16,736
We'll get to the MeditationView

884
00:27:17,086 --> 0:27:18,296
by using the Jump Bar.

885
00:27:18,886 --> 0:27:21,386
And the MeditationView is

886
00:27:21,386 --> 0:27:23,106
responsible for showing the Play

887
00:27:23,106 --> 0:27:24,936
icon and the remaining time

888
00:27:24,936 --> 0:27:25,416
label.

889
00:27:25,796 --> 0:27:26,966
And here, it seems that we're

890
00:27:26,966 --> 0:27:29,016
getting the image from the

891
00:27:29,016 --> 0:27:30,126
MeditationController's

892
00:27:30,396 --> 0:27:32,006
displayedIcon property.

893
00:27:32,856 --> 0:27:35,136
So, to get there, I will Command

894
00:27:35,226 --> 0:27:37,326
click on displayedIcon and

895
00:27:37,326 --> 0:27:38,676
select Jump to Definition.

896
00:27:39,806 --> 0:27:41,056
And here we are in the

897
00:27:41,056 --> 0:27:42,256
MeditationController.

898
00:27:42,876 --> 0:27:45,156
So I will add a breakpoint to

899
00:27:45,156 --> 0:27:46,726
the second line of the

900
00:27:46,726 --> 0:27:49,016
displayedIcon property getter by

901
00:27:49,016 --> 0:27:50,446
clicking on the line number.

902
00:27:50,996 --> 0:27:54,046
And because the app is still

903
00:27:54,046 --> 0:27:55,386
running in the simulator and the

904
00:27:55,386 --> 0:27:57,196
timer is still ticking, the

905
00:27:57,196 --> 0:27:58,766
breakpoint got hit right away

906
00:27:58,946 --> 0:28:00,376
and highlighted the line in

907
00:27:58,946 --> 0:28:00,376
and highlighted the line in

908
00:28:00,376 --> 0:28:00,826
green.

909
00:28:02,136 --> 0:28:03,946
Breakpoints in general allow us

910
00:28:03,996 --> 0:28:05,836
to pause the app's execution

911
00:28:05,836 --> 0:28:07,526
when it hits a specific line of

912
00:28:07,596 --> 0:28:07,996
code.

913
00:28:08,696 --> 0:28:10,576
So at the bottom of the Xcode

914
00:28:10,576 --> 0:28:12,166
window now, let me make this a

915
00:28:12,166 --> 0:28:14,106
bit bigger, we have to debug

916
00:28:14,106 --> 0:28:15,716
area, at top of which is the

917
00:28:15,716 --> 0:28:17,656
Debug Bar with the buttons to

918
00:28:17,656 --> 0:28:19,846
control the debugger, as well as

919
00:28:19,846 --> 0:28:21,216
to activate features like the

920
00:28:21,216 --> 0:28:22,936
View Debugger, the Memory Graph

921
00:28:22,936 --> 0:28:24,066
Debugger and more.

922
00:28:24,926 --> 0:28:26,516
Below it, we have the variables

923
00:28:26,516 --> 0:28:28,686
view on the left and the console

924
00:28:28,766 --> 0:28:29,316
on the right.

925
00:28:30,426 --> 0:28:31,876
And finally, on the left hand

926
00:28:31,876 --> 0:28:33,616
side of the Xcode window, we

927
00:28:33,616 --> 0:28:35,396
have to Debug Navigator within

928
00:28:35,396 --> 0:28:36,436
information about our running

929
00:28:36,436 --> 0:28:37,786
app, like how much work it's

930
00:28:37,786 --> 0:28:39,026
doing, how much memory it's

931
00:28:39,026 --> 0:28:39,556
using.

932
00:28:40,016 --> 0:28:41,866
And below it, we have to calls

933
00:28:41,866 --> 0:28:42,296
stack.

934
00:28:42,636 --> 0:28:44,186
The call stack is the record of

935
00:28:44,186 --> 0:28:46,006
how this code is being called.

936
00:28:46,936 --> 0:28:48,276
And when I select a different

937
00:28:48,276 --> 0:28:50,766
frame in the call stack, Xcode

938
00:28:50,766 --> 0:28:52,516
switches the Source Editor, the

939
00:28:52,516 --> 0:28:54,226
debugger, and even the variables

940
00:28:54,226 --> 0:28:54,866
down here.

941
00:28:56,166 --> 0:28:58,266
So, I'll switch back to the

942
00:28:58,266 --> 0:29:00,206
original frame and we'll get

943
00:28:58,266 --> 0:29:00,206
original frame and we'll get

944
00:29:00,206 --> 0:29:01,636
back to trying to fix the bug

945
00:29:01,636 --> 0:29:03,016
where the icon didn't change

946
00:29:03,346 --> 0:29:05,266
after we started the meditation.

947
00:29:05,846 --> 0:29:08,486
So, let's look at and which icon

948
00:29:08,486 --> 0:29:09,746
is being used to right now.

949
00:29:09,746 --> 0:29:12,196
I can do that by selecting the

950
00:29:12,196 --> 0:29:14,596
variable and clicking on the

951
00:29:14,666 --> 0:29:16,796
Quick Look icon at the bottom.

952
00:29:17,546 --> 0:29:19,316
And here, we get a preview.

953
00:29:19,916 --> 0:29:23,456
And because the variable that

954
00:29:23,456 --> 0:29:25,536
we're previewing is an image, we

955
00:29:25,536 --> 0:29:27,126
actually got a rendered version

956
00:29:27,126 --> 0:29:28,986
and damage right here in Xcode.

957
00:29:30,086 --> 0:29:31,756
Quick Look preview supports

958
00:29:31,846 --> 0:29:34,106
images, colors, views, any

959
00:29:34,106 --> 0:29:35,596
custom objects that implement

960
00:29:35,596 --> 0:29:37,096
the debug Quick Look object

961
00:29:37,136 --> 0:29:37,526
method.

962
00:29:37,526 --> 0:29:40,806
So in the preview, we can see

963
00:29:40,806 --> 0:29:42,246
that we're still showing the

964
00:29:42,246 --> 0:29:43,826
Play icon even though the

965
00:29:43,826 --> 0:29:45,306
meditation is already running.

966
00:29:46,096 --> 0:29:47,236
So I wonder if it's because the

967
00:29:47,236 --> 0:29:48,976
MeditationController is in the

968
00:29:48,976 --> 0:29:49,576
wrong state.

969
00:29:50,446 --> 0:29:52,786
To find that out, I will expand

970
00:29:52,786 --> 0:29:54,226
the self variable which refers

971
00:29:54,226 --> 0:29:55,316
to the MeditationController

972
00:29:55,316 --> 0:29:57,246
we're debugging here and we

973
00:29:57,246 --> 0:29:58,296
reveal the properties.

974
00:29:58,396 --> 0:30:00,426
And one of them is the state

975
00:29:58,396 --> 0:30:00,426
And one of them is the state

976
00:30:00,426 --> 0:30:02,206
property that is telling us that

977
00:30:02,206 --> 0:30:03,926
the MeditationController is in

978
00:30:03,926 --> 0:30:04,836
the running state.

979
00:30:06,076 --> 0:30:07,486
So that's what I expected.

980
00:30:07,786 --> 0:30:08,626
And that means that the

981
00:30:08,626 --> 0:30:10,946
displayedIcon property getter is

982
00:30:10,946 --> 0:30:12,746
not taking the state of the

983
00:30:12,746 --> 0:30:13,846
MeditationController into

984
00:30:13,846 --> 0:30:15,666
account when picking which icon

985
00:30:15,666 --> 0:30:16,076
to show.

986
00:30:16,946 --> 0:30:19,806
So to fix that, we will check if

987
00:30:19,806 --> 0:30:21,006
the MeditationController is

988
00:30:21,006 --> 0:30:21,496
running.

989
00:30:22,056 --> 0:30:23,986
And if so, we will show the

990
00:30:23,986 --> 0:30:25,246
pause it, we will show the Pause

991
00:30:25,246 --> 0:30:29,416
icon, and otherwise, we'll show

992
00:30:29,416 --> 0:30:30,336
the Play icon.

993
00:30:31,116 --> 0:30:31,996
Now, because I don't need the

994
00:30:31,996 --> 0:30:33,256
breakpoint anymore, I will

995
00:30:33,256 --> 0:30:36,376
remove it by dragging out and

996
00:30:36,376 --> 0:30:37,016
letting go.

997
00:30:37,706 --> 0:30:39,146
And because we changed the code

998
00:30:39,146 --> 0:30:41,516
just now, I will stop the app

999
00:30:42,096 --> 0:30:43,916
and click the Run button again.

1000
00:30:44,226 --> 0:30:45,906
This recompiles the project,

1001
00:30:45,906 --> 0:30:47,846
reinstalls and relaunches the

1002
00:30:47,846 --> 0:30:48,806
app in the simulator.

1003
00:30:49,456 --> 0:30:51,086
Now this time, when I start a

1004
00:30:51,086 --> 0:30:53,356
new meditation, we can see that

1005
00:30:53,356 --> 0:30:54,516
the icon changed from Play to

1006
00:30:54,516 --> 0:30:54,916
Pause.

1007
00:30:55,196 --> 0:30:56,086
So the bug is fixed.

1008
00:30:56,296 --> 0:30:56,546
Great.

1009
00:30:57,516 --> 0:31:02,806
[ Applause ]

1010
00:30:57,516 --> 0:31:02,806
[ Applause ]

1011
00:31:03,306 --> 0:31:04,816
So we'll stop the app for now

1012
00:31:05,976 --> 0:31:08,036
and we'll hide the debug area.

1013
00:31:09,846 --> 0:31:11,476
So, we have been running our app

1014
00:31:11,476 --> 0:31:12,496
on the simulator which is a

1015
00:31:12,496 --> 0:31:14,276
great way to quickly iterate on

1016
00:31:14,276 --> 0:31:14,856
our code.

1017
00:31:15,316 --> 0:31:17,386
But I would also like to install

1018
00:31:17,386 --> 0:31:19,526
my app on a real device so that

1019
00:31:19,526 --> 0:31:20,976
I can start meditating on the go

1020
00:31:20,976 --> 0:31:21,486
as well.

1021
00:31:22,446 --> 0:31:25,596
First, to be able to run-- to

1022
00:31:25,596 --> 0:31:26,946
install and run apps on

1023
00:31:26,946 --> 0:31:28,526
connected devices, we have to

1024
00:31:28,666 --> 0:31:30,576
sign into Xcode with our Apple

1025
00:31:30,576 --> 0:31:30,946
ID.

1026
00:31:31,806 --> 0:31:33,486
We'll do that by going to Xcode

1027
00:31:33,486 --> 0:31:36,716
Preferences, select an account,

1028
00:31:36,976 --> 0:31:38,186
and adding new account.

1029
00:31:39,146 --> 0:31:41,866
We'll select the Apple ID, type

1030
00:31:41,866 --> 0:31:42,976
in the username and password.

1031
00:31:52,786 --> 0:31:54,556
And there, we sign in to Xcode

1032
00:31:54,556 --> 0:31:55,376
with our Apple ID.

1033
00:31:55,806 --> 0:31:58,216
Next, I'll close the window and

1034
00:31:58,216 --> 0:31:59,316
I will go to the Project

1035
00:31:59,716 --> 0:32:00,966
Navigator and select the

1036
00:31:59,716 --> 0:32:00,966
Navigator and select the

1037
00:32:00,966 --> 0:32:01,536
project.

1038
00:32:02,816 --> 0:32:04,266
Here, we'll select the app

1039
00:32:04,306 --> 0:32:06,176
target and go to the Signing

1040
00:32:06,176 --> 0:32:07,546
&amp;Capabilities Tab.

1041
00:32:08,516 --> 0:32:09,816
This is where we manage code

1042
00:32:09,816 --> 0:32:11,146
signing and capabilities.

1043
00:32:11,996 --> 0:32:13,836
Capabilities allow us to declare

1044
00:32:13,836 --> 0:32:15,606
what permissions our app needs.

1045
00:32:16,076 --> 0:32:17,696
And in our case, we need to

1046
00:32:17,696 --> 0:32:19,746
access to the HealthKit data to

1047
00:32:19,746 --> 0:32:21,296
be able to write meditations

1048
00:32:21,296 --> 0:32:23,016
that the user performed in our

1049
00:32:23,016 --> 0:32:24,346
app, but also to read

1050
00:32:24,346 --> 0:32:25,436
meditations that the user

1051
00:32:25,436 --> 0:32:27,006
performed in other apps so, that

1052
00:32:27,006 --> 0:32:28,366
we can show them statistics for

1053
00:32:28,366 --> 0:32:29,506
all of their mindfulness

1054
00:32:29,506 --> 0:32:30,006
activity.

1055
00:32:31,176 --> 0:32:32,546
So we'll add a new capability,

1056
00:32:33,096 --> 0:32:36,376
search for health, and select

1057
00:32:36,376 --> 0:32:37,316
the HealthKit capability.

1058
00:32:37,796 --> 0:32:41,076
Next, I have this iPhone

1059
00:32:41,296 --> 0:32:42,496
connected to my Mac here.

1060
00:32:43,096 --> 0:32:45,366
So, I will select that as the

1061
00:32:45,366 --> 0:32:48,326
run destination, and I will

1062
00:32:48,326 --> 0:32:48,926
click Run.

1063
00:32:49,766 --> 0:32:51,436
Now, the app is being built for

1064
00:32:51,436 --> 0:32:53,176
the device, installed, and

1065
00:32:53,176 --> 0:32:53,816
launched there.

1066
00:32:53,956 --> 0:32:55,146
And so that you can watch what's

1067
00:32:55,146 --> 0:32:56,736
going on on the screen, we'll

1068
00:32:56,736 --> 0:32:58,196
use QuickTime Player which

1069
00:32:58,196 --> 0:33:00,116
allows me to stream the iPhone

1070
00:32:58,196 --> 0:33:00,116
allows me to stream the iPhone

1071
00:33:00,116 --> 0:33:01,646
screen back to the Mac.

1072
00:33:02,486 --> 0:33:05,716
So there, we have Mind running

1073
00:33:05,716 --> 0:33:07,366
on a real iPhone now and I could

1074
00:33:07,366 --> 0:33:09,146
just unplug this phone and start

1075
00:33:09,146 --> 0:33:10,266
meditating on the go.

1076
00:33:10,996 --> 0:33:14,856
Now, let me stop the app and

1077
00:33:14,856 --> 0:33:16,576
switch the destination back to

1078
00:33:16,576 --> 0:33:17,076
the simulator.

1079
00:33:18,366 --> 0:33:19,536
When you want to find out more

1080
00:33:19,536 --> 0:33:21,326
about devices, you can go

1081
00:33:21,456 --> 0:33:24,136
Window, Devices and Simulators

1082
00:33:24,246 --> 0:33:26,236
where we can see the name, the

1083
00:33:26,236 --> 0:33:28,176
type, and the OS version of the

1084
00:33:28,176 --> 0:33:30,596
device, as well as we can see

1085
00:33:30,596 --> 0:33:31,766
the installed apps that we've

1086
00:33:31,836 --> 0:33:32,806
put there.

1087
00:33:33,306 --> 0:33:34,546
But also, we could actually

1088
00:33:34,546 --> 0:33:36,306
configure the device to connect

1089
00:33:36,366 --> 0:33:38,406
to Mac over WiFi.

1090
00:33:38,746 --> 0:33:39,976
In that way, I wouldn't need to

1091
00:33:40,076 --> 0:33:41,796
physically plug in the phone to

1092
00:33:41,796 --> 0:33:43,466
the Mac over USB at all and I

1093
00:33:43,466 --> 0:33:44,766
would still be able to build,

1094
00:33:44,976 --> 0:33:46,346
run, and debug on it.

1095
00:33:52,856 --> 0:33:55,666
So, now that we successfully run

1096
00:33:55,666 --> 0:33:57,186
our app both on the simulator

1097
00:33:57,416 --> 0:33:59,066
and on our device and we even

1098
00:33:59,216 --> 0:34:00,896
fixed a bug in it using the

1099
00:33:59,216 --> 0:34:00,896
fixed a bug in it using the

1100
00:34:00,896 --> 0:34:02,296
debugger, let's talk about

1101
00:34:02,296 --> 0:34:04,536
adding more functionality to our

1102
00:34:05,306 --> 0:34:05,386
app.

1103
00:34:05,646 --> 0:34:06,846
I'd like our app to show the

1104
00:34:06,846 --> 0:34:08,846
users statistics about their

1105
00:34:08,846 --> 0:34:10,676
meditations, like how many they

1106
00:34:10,676 --> 0:34:12,166
have performed, what the average

1107
00:34:12,166 --> 0:34:14,045
duration was, and so on.

1108
00:34:14,606 --> 0:34:16,045
But calculating statistics is

1109
00:34:16,045 --> 0:34:17,716
not a specific problem to just

1110
00:34:17,716 --> 0:34:18,576
our meditation app.

1111
00:34:18,996 --> 0:34:20,306
So we have created a Swift

1112
00:34:20,366 --> 0:34:22,556
Package called QuickStats that

1113
00:34:22,556 --> 0:34:23,956
solves that problem for us.

1114
00:34:24,446 --> 0:34:27,396
A Swift Package is basically a

1115
00:34:27,396 --> 0:34:29,235
folder with the manifest file

1116
00:34:29,456 --> 0:34:31,376
and source files that you can

1117
00:34:31,376 --> 0:34:33,886
use to build products like our

1118
00:34:33,886 --> 0:34:34,916
QuickStats library.

1119
00:34:36,255 --> 0:34:37,275
To add the package to our

1120
00:34:37,275 --> 0:34:39,306
project, I will go to the

1121
00:34:39,306 --> 0:34:41,826
project editor and select Swift

1122
00:34:41,866 --> 0:34:42,856
Packages at the top.

1123
00:34:43,406 --> 0:34:45,096
Here, I will add a new package

1124
00:34:45,096 --> 0:34:45,815
to our project.

1125
00:34:46,556 --> 0:34:48,016
And because Prachi signed us

1126
00:34:48,065 --> 0:34:50,016
into GitHub with our account, we

1127
00:34:50,016 --> 0:34:51,656
can actually see all the

1128
00:34:51,656 --> 0:34:53,226
repositories that our account

1129
00:34:53,356 --> 0:34:54,036
has favorited.

1130
00:34:54,706 --> 0:34:55,926
QuickStats is right here at the

1131
00:34:55,926 --> 0:34:57,085
top, so I'll select it.

1132
00:34:58,226 --> 0:34:58,816
Click Next.

1133
00:34:59,426 --> 0:35:00,716
We'll, use version 1.

1134
00:34:59,426 --> 0:35:00,716
We'll, use version 1.

1135
00:35:00,716 --> 0:35:01,396
That looks good.

1136
00:35:01,996 --> 0:35:06,586
And this is where we make sure

1137
00:35:06,586 --> 0:35:08,446
that the QuickStats library gets

1138
00:35:08,446 --> 0:35:09,436
linked with our app.

1139
00:35:09,436 --> 0:35:13,076
I'll click Finish, and now Xcode

1140
00:35:13,076 --> 0:35:14,736
manages the fetching of the

1141
00:35:14,736 --> 0:35:15,946
package in the background.

1142
00:35:16,776 --> 0:35:18,226
And in the Project Navigator,

1143
00:35:18,426 --> 0:35:19,266
there's an Swift Package

1144
00:35:19,266 --> 0:35:21,166
dependency section where I can

1145
00:35:21,166 --> 0:35:23,056
actually browse the sources of

1146
00:35:23,056 --> 0:35:24,896
the package which is a great way

1147
00:35:24,896 --> 0:35:26,226
to understand how the package

1148
00:35:26,226 --> 0:35:29,366
works under the hood.

1149
00:35:29,636 --> 0:35:30,886
Now, before I hand it back over

1150
00:35:30,886 --> 0:35:32,086
to Holly to integrate this

1151
00:35:32,126 --> 0:35:34,196
package into our project, let's

1152
00:35:34,196 --> 0:35:34,956
do a quick recap.

1153
00:35:41,916 --> 0:35:45,026
We saw how we can run and debug

1154
00:35:45,026 --> 0:35:46,586
our app on the simulator.

1155
00:35:47,206 --> 0:35:49,556
And we also ran our app on a

1156
00:35:49,556 --> 0:35:50,266
real device.

1157
00:35:51,186 --> 0:35:53,026
And then we added the Swift

1158
00:35:53,066 --> 0:35:54,226
Package dependency to our

1159
00:35:54,226 --> 0:35:56,086
project that allows us to add a

1160
00:35:56,086 --> 0:35:57,826
feature to our app.

1161
00:36:00,976 --> 0:36:02,886
These are the sessions relevant

1162
00:36:02,886 --> 0:36:04,156
to the topics discussed in this

1163
00:36:04,156 --> 0:36:04,596
demo.

1164
00:36:04,876 --> 0:36:06,346
And next, please welcome Holly

1165
00:36:06,346 --> 0:36:06,626
back.

1166
00:36:06,896 --> 0:36:07,216
Thank you.

1167
00:36:08,516 --> 0:36:13,936
[ Applause and Cheering ]

1168
00:36:14,436 --> 0:36:15,186
&gt;&gt; Thanks, Honza.

1169
00:36:16,266 --> 0:36:19,736
During this demo, we will see

1170
00:36:19,816 --> 0:36:21,016
how to use the QuickStats

1171
00:36:21,016 --> 0:36:22,456
package in our project.

1172
00:36:22,906 --> 0:36:25,096
After that, we will walk through

1173
00:36:25,096 --> 0:36:26,896
how to restructure our project

1174
00:36:26,986 --> 0:36:28,846
by moving our model code into a

1175
00:36:28,846 --> 0:36:29,316
framework.

1176
00:36:29,886 --> 0:36:32,076
Let's head back to Xcode to get

1177
00:36:32,146 --> 0:36:32,536
started.

1178
00:36:41,546 --> 0:36:43,206
Now, that we've added the

1179
00:36:43,206 --> 0:36:45,316
QuickStats package, we can

1180
00:36:45,316 --> 0:36:47,146
import the package into our code

1181
00:36:47,146 --> 0:36:49,706
and start using its public APIs.

1182
00:36:49,756 --> 0:36:51,396
As Honza mentioned, we want to

1183
00:36:51,396 --> 0:36:53,246
show our users some statistics

1184
00:36:53,296 --> 0:36:55,026
about their meditation sessions

1185
00:36:55,236 --> 0:36:56,266
in the ContentView.

1186
00:36:57,196 --> 0:36:57,966
We'll jump back to the

1187
00:36:57,966 --> 0:36:59,876
ContentView.swift using Open

1188
00:36:59,876 --> 0:37:01,596
Quickly which you can find under

1189
00:36:59,876 --> 0:37:01,596
Quickly which you can find under

1190
00:37:01,596 --> 0:37:02,406
the File Menu.

1191
00:37:02,956 --> 0:37:06,586
In Open Quickly, I can enter any

1192
00:37:06,586 --> 0:37:08,986
type name, method name, or file

1193
00:37:08,986 --> 0:37:10,176
name to navigate to.

1194
00:37:10,626 --> 0:37:12,606
So I'll type Contentview and

1195
00:37:12,606 --> 0:37:13,166
press Enter.

1196
00:37:14,436 --> 0:37:15,436
The first thing that I need to

1197
00:37:15,436 --> 0:37:18,226
do is import QuickStats.

1198
00:37:19,836 --> 0:37:21,886
Now we're ready to start using

1199
00:37:21,886 --> 0:37:23,436
the APIs from this package.

1200
00:37:24,206 --> 0:37:26,276
I'm going to add some code below

1201
00:37:26,276 --> 0:37:27,936
the contentView from a code

1202
00:37:27,936 --> 0:37:29,956
snippet that implements

1203
00:37:29,956 --> 0:37:32,236
StatisticsView that takes in an

1204
00:37:32,236 --> 0:37:34,496
array of meditation sessions and

1205
00:37:34,496 --> 0:37:36,866
displays statistics about those

1206
00:37:36,866 --> 0:37:39,266
sessions using QuickStats APIs.

1207
00:37:40,596 --> 0:37:42,386
Since I have access to all of

1208
00:37:42,386 --> 0:37:44,236
the package source code, I can

1209
00:37:44,236 --> 0:37:45,336
jump to the source code

1210
00:37:45,336 --> 0:37:47,606
implementation to understand how

1211
00:37:47,606 --> 0:37:48,096
it works.

1212
00:37:48,716 --> 0:37:50,766
So if I Command click on

1213
00:37:50,766 --> 0:37:52,846
QuickStats.averageDuration and

1214
00:37:52,846 --> 0:37:55,186
select Jump to Definition, I'm

1215
00:37:55,186 --> 0:37:56,726
now looking at the actual

1216
00:37:56,726 --> 0:37:58,446
implementation of this method.

1217
00:37:58,856 --> 0:38:01,456
I can see where the file is in

1218
00:37:58,856 --> 0:38:01,456
I can see where the file is in

1219
00:38:01,456 --> 0:38:02,966
the Project Navigator by

1220
00:38:02,966 --> 0:38:04,966
clicking on Navigate, Reveal in

1221
00:38:04,966 --> 0:38:05,986
Project Navigator.

1222
00:38:06,586 --> 0:38:07,896
And now we can see that we're in

1223
00:38:07,896 --> 0:38:09,076
the package source code.

1224
00:38:09,486 --> 0:38:11,106
I can navigate back to the

1225
00:38:11,106 --> 0:38:12,896
previous file by using the

1226
00:38:12,896 --> 0:38:14,426
Editor History button in the

1227
00:38:14,426 --> 0:38:14,916
Jump Bar.

1228
00:38:14,916 --> 0:38:17,236
Now, let's add the

1229
00:38:17,236 --> 0:38:19,206
StatisticsView to the

1230
00:38:19,206 --> 0:38:20,036
ContentView.

1231
00:38:20,606 --> 0:38:22,036
But before we do that, I want to

1232
00:38:22,036 --> 0:38:22,906
show the Canvas.

1233
00:38:28,896 --> 0:38:30,726
And I'll zoom out so we can see

1234
00:38:30,726 --> 0:38:31,516
the full device.

1235
00:38:31,516 --> 0:38:34,566
I'll add the StatisticsView

1236
00:38:34,566 --> 0:38:37,666
below the spacer and it takes in

1237
00:38:37,666 --> 0:38:39,076
an array of sessions which we

1238
00:38:39,076 --> 0:38:39,796
can get from the

1239
00:38:39,796 --> 0:38:40,926
MeditationController.

1240
00:38:42,836 --> 0:38:43,746
Now, we can see the

1241
00:38:43,746 --> 0:38:45,276
StatisticsView at the bottom of

1242
00:38:45,276 --> 0:38:46,116
our ContentView.

1243
00:38:46,906 --> 0:38:48,076
And now that I'm done with the

1244
00:38:48,076 --> 0:38:51,896
UI, I'll close the Canvas again.

1245
00:38:52,486 --> 0:38:54,156
Now, we want to start writing

1246
00:38:54,156 --> 0:38:55,706
unit tests for our model.

1247
00:38:55,896 --> 0:38:58,006
And to make this easier, we are

1248
00:38:58,006 --> 0:38:59,536
going to move our model code

1249
00:38:59,536 --> 0:39:01,486
into a unit testable framework.

1250
00:38:59,536 --> 0:39:01,486
into a unit testable framework.

1251
00:39:02,026 --> 0:39:03,836
I could choose to use a Swift

1252
00:39:03,836 --> 0:39:05,536
Package, but I only want to

1253
00:39:05,536 --> 0:39:07,036
share this code with my team.

1254
00:39:07,306 --> 0:39:08,406
So I'm going to choose a

1255
00:39:08,406 --> 0:39:09,456
framework instead.

1256
00:39:10,166 --> 0:39:11,866
We need to create a new target

1257
00:39:12,446 --> 0:39:15,816
and I can use the filter bar to

1258
00:39:15,816 --> 0:39:16,596
search for the framework.

1259
00:39:17,296 --> 0:39:19,336
And I'm going to call this

1260
00:39:19,336 --> 0:39:20,476
framework MindKit.

1261
00:39:20,736 --> 0:39:23,916
I want to make sure to check the

1262
00:39:23,916 --> 0:39:26,426
box to include a unit tests so

1263
00:39:26,426 --> 0:39:28,176
that a unit test target is

1264
00:39:28,256 --> 0:39:29,926
automatically created when I

1265
00:39:29,926 --> 0:39:30,806
create the framework.

1266
00:39:34,656 --> 0:39:36,226
Now, before I move the code

1267
00:39:36,226 --> 0:39:38,666
over, I want to import MindKit

1268
00:39:38,666 --> 0:39:39,946
into all of the files that I

1269
00:39:39,946 --> 0:39:41,236
know will need it.

1270
00:39:41,586 --> 0:39:43,026
I know I'm going to move over

1271
00:39:43,026 --> 0:39:44,546
HealthStore.swift.

1272
00:39:44,546 --> 0:39:46,396
And this file has two public

1273
00:39:46,396 --> 0:39:47,756
types that are used throughout

1274
00:39:47,756 --> 0:39:48,376
the project.

1275
00:39:48,856 --> 0:39:50,566
And I'm going to use the Find

1276
00:39:50,566 --> 0:39:52,096
Navigator to figure out where

1277
00:39:52,096 --> 0:39:53,206
these types are used.

1278
00:39:53,956 --> 0:39:55,536
I'll switch to Find Navigator,

1279
00:39:55,536 --> 0:39:58,296
and the Find Navigator allows me

1280
00:39:58,296 --> 0:40:00,336
to search my entire project for

1281
00:39:58,296 --> 0:40:00,336
to search my entire project for

1282
00:40:00,336 --> 0:40:02,906
text, symbol references, regular

1283
00:40:02,906 --> 0:40:03,976
expressions and more.

1284
00:40:04,996 --> 0:40:06,126
Right now, I want a regular

1285
00:40:06,126 --> 0:40:09,116
expression and I want to search

1286
00:40:09,116 --> 0:40:12,326
for HealthSession or

1287
00:40:12,856 --> 0:40:13,666
HealthStore.

1288
00:40:14,126 --> 0:40:15,246
And I'll press Enter to see the

1289
00:40:15,246 --> 0:40:15,836
results.

1290
00:40:16,086 --> 0:40:18,296
I know that I'm going to be

1291
00:40:18,296 --> 0:40:20,386
moving HealthStore.swift and

1292
00:40:20,386 --> 0:40:22,546
HealthStoreFactory.swift into

1293
00:40:22,546 --> 0:40:23,656
the MindKit framework.

1294
00:40:23,946 --> 0:40:25,446
And I can these results by

1295
00:40:25,446 --> 0:40:26,626
clicking on the disclosure

1296
00:40:26,626 --> 0:40:27,216
triangle.

1297
00:40:28,696 --> 0:40:30,206
Now, I'll navigate to each of

1298
00:40:30,206 --> 0:40:32,486
these files and add the import.

1299
00:40:32,486 --> 0:40:35,766
So I'll jump to the top of the

1300
00:40:35,766 --> 0:40:38,606
file here, and the import, and

1301
00:40:39,556 --> 0:40:40,946
then finally, we need it in

1302
00:40:40,946 --> 0:40:42,886
ContentView.swift.

1303
00:40:44,366 --> 0:40:46,036
Now, we're ready to move the

1304
00:40:46,036 --> 0:40:46,846
files over.

1305
00:40:46,846 --> 0:40:47,856
So I'll switch back to the

1306
00:40:47,856 --> 0:40:48,886
Project Navigator.

1307
00:40:48,886 --> 0:40:51,386
As I mentioned, I want to move

1308
00:40:51,386 --> 0:40:53,456
over HealthStore.swift, but I

1309
00:40:53,456 --> 0:40:54,656
also want to move over

1310
00:40:54,656 --> 0:40:56,376
HealthStoreFactory.swift.

1311
00:40:57,086 --> 0:40:59,126
I can select multiple files in

1312
00:40:59,126 --> 0:41:00,716
the Project Navigator by holding

1313
00:40:59,126 --> 0:41:00,716
the Project Navigator by holding

1314
00:41:00,716 --> 0:41:02,566
down Command and clicking on the

1315
00:41:02,566 --> 0:41:03,676
other files that I want to

1316
00:41:03,676 --> 0:41:04,066
select.

1317
00:41:05,126 --> 0:41:07,216
Then, I can drag these selected

1318
00:41:07,216 --> 0:41:09,246
files into the MindKit group.

1319
00:41:10,626 --> 0:41:12,236
When I do this, Xcode

1320
00:41:12,346 --> 0:41:14,096
automatically updates the target

1321
00:41:14,096 --> 0:41:15,626
membership for these files.

1322
00:41:16,056 --> 0:41:17,646
And we can verify this by

1323
00:41:17,646 --> 0:41:20,306
showing the Inspector and seeing

1324
00:41:20,306 --> 0:41:21,676
that the target membership for

1325
00:41:21,676 --> 0:41:23,106
the file open in the editor

1326
00:41:23,106 --> 0:41:24,826
which is HealthStore.swift is

1327
00:41:24,826 --> 0:41:26,766
now the MindKit framework target

1328
00:41:27,106 --> 0:41:30,566
rather than the Mind app target.

1329
00:41:30,936 --> 0:41:32,916
Now, I haven't forgotten that we

1330
00:41:32,916 --> 0:41:34,316
still need to implement the

1331
00:41:34,316 --> 0:41:35,716
HealthStore that interacts with

1332
00:41:35,716 --> 0:41:36,256
HealthKit.

1333
00:41:36,916 --> 0:41:38,186
We're going to do that now so

1334
00:41:38,186 --> 0:41:39,476
that we can start integrating

1335
00:41:39,476 --> 0:41:40,926
real health data into our app.

1336
00:41:42,026 --> 0:41:43,166
The first thing that I need to

1337
00:41:43,166 --> 0:41:46,496
do is import HealthKit.

1338
00:41:46,806 --> 0:41:48,476
Now, I've never used HealthKit

1339
00:41:48,476 --> 0:41:48,926
before.

1340
00:41:49,246 --> 0:41:50,696
So to get started, I want to

1341
00:41:50,696 --> 0:41:52,016
read the documentation.

1342
00:41:52,366 --> 0:41:54,476
I can do this right in Xcode by

1343
00:41:54,476 --> 0:41:55,366
opening the Developer

1344
00:41:55,366 --> 0:41:57,126
Documentation window which you

1345
00:41:57,126 --> 0:41:58,526
can find in the Help Menu.

1346
00:41:59,076 --> 0:42:02,056
Here, you can search for a

1347
00:41:59,076 --> 0:42:02,056
Here, you can search for a

1348
00:42:02,056 --> 0:42:03,516
framework from the SDK, a

1349
00:42:03,696 --> 0:42:06,506
specific API, or a programming

1350
00:42:06,506 --> 0:42:08,716
topic, such as requesting access

1351
00:42:08,716 --> 0:42:09,376
to health data.

1352
00:42:10,176 --> 0:42:11,036
So here I'll search for

1353
00:42:11,036 --> 0:42:11,516
HealthKit.

1354
00:42:14,386 --> 0:42:15,826
And now I have access to all of

1355
00:42:15,826 --> 0:42:17,516
the documentation for the entire

1356
00:42:17,516 --> 0:42:17,986
framework.

1357
00:42:17,986 --> 0:42:19,436
And this is also available

1358
00:42:19,436 --> 0:42:20,066
offline.

1359
00:42:21,026 --> 0:42:22,426
Luckily, I have all of the code

1360
00:42:22,426 --> 0:42:23,766
that I need ready in a code

1361
00:42:23,766 --> 0:42:24,036
snippet.

1362
00:42:24,036 --> 0:42:26,686
And I'll add that at the end of

1363
00:42:27,276 --> 0:42:29,046
the file.

1364
00:42:29,486 --> 0:42:31,006
Now, before we start writing

1365
00:42:31,006 --> 0:42:33,376
unit tests, I want to add my own

1366
00:42:33,376 --> 0:42:35,606
documentation for the APIs in

1367
00:42:35,606 --> 0:42:37,376
the MindKit framework starting

1368
00:42:37,376 --> 0:42:38,716
with the HealthStore protocol.

1369
00:42:39,466 --> 0:42:41,196
I can do this using special

1370
00:42:41,196 --> 0:42:43,206
comments called doc comments.

1371
00:42:43,666 --> 0:42:45,736
Xcode knows how to generate a

1372
00:42:45,736 --> 0:42:47,016
doc comment template for

1373
00:42:47,016 --> 0:42:47,946
declarations.

1374
00:42:48,346 --> 0:42:49,696
And this feature is available

1375
00:42:49,696 --> 0:42:51,106
through the Action Menu.

1376
00:42:51,736 --> 0:42:53,656
So, I'll Command click on the

1377
00:42:53,656 --> 0:42:54,956
first API that I want to

1378
00:42:54,956 --> 0:42:57,096
document which is requestAccess.

1379
00:42:57,096 --> 0:42:59,396
And then I'll select Add

1380
00:42:59,396 --> 0:43:00,226
Documentation.

1381
00:42:59,396 --> 0:43:00,226
Documentation.

1382
00:43:01,726 --> 0:43:04,106
Now, Xcode has inserted a doc

1383
00:43:04,106 --> 0:43:05,196
comment template with

1384
00:43:05,196 --> 0:43:07,466
placeholders for the method

1385
00:43:07,466 --> 0:43:08,786
description as well as the

1386
00:43:08,786 --> 0:43:10,066
description of the parameter

1387
00:43:10,066 --> 0:43:10,996
that it takes in.

1388
00:43:11,556 --> 0:43:13,966
So this method requests

1389
00:43:14,026 --> 0:43:20,476
permission from the user to

1390
00:43:20,476 --> 0:43:22,706
access mindful sessions.

1391
00:43:22,706 --> 0:43:26,516
And the completion parameter is

1392
00:43:26,516 --> 0:43:27,976
a closure to execute when the

1393
00:43:27,976 --> 0:43:31,896
request is done.

1394
00:43:32,516 --> 0:43:34,076
Now, I know that this method can

1395
00:43:34,076 --> 0:43:35,506
execute asynchronously.

1396
00:43:35,726 --> 0:43:37,686
And I want to add a special note

1397
00:43:38,276 --> 0:43:40,006
that-- to document that.

1398
00:43:40,476 --> 0:43:41,886
And I can do that using a

1399
00:43:41,886 --> 0:43:44,396
special bullet point.

1400
00:43:44,396 --> 0:43:50,626
And now I can add that note.

1401
00:43:50,946 --> 0:43:51,716
Now that I have written the

1402
00:43:51,716 --> 0:43:53,486
documentation, I can view this

1403
00:43:53,486 --> 0:43:54,116
in Quick Help.

1404
00:43:55,076 --> 0:43:56,616
Again, we can bring up the Quick

1405
00:43:56,616 --> 0:43:58,586
Help popover by option clicking

1406
00:43:58,916 --> 0:43:59,866
on the symbol that we want to

1407
00:43:59,866 --> 0:44:01,126
view documentation for.

1408
00:43:59,866 --> 0:44:01,126
view documentation for.

1409
00:44:01,556 --> 0:44:02,716
And now we can see the

1410
00:44:02,716 --> 0:44:04,086
description that we just wrote,

1411
00:44:04,866 --> 0:44:06,836
the note that we wrote as well

1412
00:44:06,836 --> 0:44:08,086
as the description of the

1413
00:44:08,136 --> 0:44:08,656
parameter.

1414
00:44:08,886 --> 0:44:10,346
And this is available at any

1415
00:44:10,346 --> 0:44:11,916
call site of request access.

1416
00:44:18,296 --> 0:44:20,036
For more information on writing

1417
00:44:20,036 --> 0:44:21,766
and documenting your own APIs,

1418
00:44:21,966 --> 0:44:23,766
please see the Swift API Design

1419
00:44:23,766 --> 0:44:26,476
Guidelines which is available on

1420
00:44:26,476 --> 0:44:28,916
swift.org.

1421
00:44:29,166 --> 0:44:31,166
During this demo, we covered how

1422
00:44:31,166 --> 0:44:32,936
to use and navigate code from a

1423
00:44:32,936 --> 0:44:34,006
Swift Package.

1424
00:44:35,036 --> 0:44:36,866
We talked about creating a new

1425
00:44:36,946 --> 0:44:38,916
framework target in our project

1426
00:44:38,916 --> 0:44:40,546
and moving existing code over

1427
00:44:40,546 --> 0:44:41,516
into that framework.

1428
00:44:42,756 --> 0:44:44,476
Next, we looked at the Xcode

1429
00:44:44,476 --> 0:44:46,236
Developer Documentation Window.

1430
00:44:46,566 --> 0:44:48,486
And finally, we learned how to

1431
00:44:48,486 --> 0:44:50,046
write our own documentation

1432
00:44:50,176 --> 0:44:52,336
through doc comments.

1433
00:44:52,456 --> 0:44:53,786
Now, I'll hand it back over to

1434
00:44:53,786 --> 0:44:55,436
Honza to talk about Testing and

1435
00:44:55,436 --> 0:44:56,236
Distribution.

1436
00:44:56,236 --> 0:44:57,616
[Applause]

1437
00:44:57,616 --> 0:44:58,266
&gt;&gt; Thanks, Holly.

1438
00:44:59,086 --> 0:45:01,116
Now, in this section, we'll talk

1439
00:44:59,086 --> 0:45:01,116
Now, in this section, we'll talk

1440
00:45:01,116 --> 0:45:02,936
about how we can test our code

1441
00:45:03,136 --> 0:45:05,106
in Xcode, and how to distribute

1442
00:45:05,106 --> 0:45:06,496
our app once we're ready to

1443
00:45:06,496 --> 0:45:06,746
ship.

1444
00:45:08,886 --> 0:45:10,436
Now, since our app is coming

1445
00:45:10,436 --> 0:45:12,126
along pretty nicely, we need to

1446
00:45:12,126 --> 0:45:13,486
make sure that it continues to

1447
00:45:13,486 --> 0:45:14,286
work properly.

1448
00:45:14,976 --> 0:45:16,996
A great way to increase our

1449
00:45:16,996 --> 0:45:18,996
confidence in the app's quality

1450
00:45:19,206 --> 0:45:22,346
is by using automated tests.

1451
00:45:24,616 --> 0:45:26,316
There are two high level

1452
00:45:26,316 --> 0:45:28,286
categories of tests that we will

1453
00:45:28,286 --> 0:45:30,706
write for our app -- unit and UI

1454
00:45:30,706 --> 0:45:31,056
tests.

1455
00:45:32,836 --> 0:45:34,866
Unit test ensure that a single

1456
00:45:34,866 --> 0:45:36,596
component such as our

1457
00:45:36,596 --> 0:45:39,096
HealthStore works properly by

1458
00:45:39,096 --> 0:45:40,916
giving it a specific input and

1459
00:45:40,916 --> 0:45:42,406
verifying that the output

1460
00:45:42,646 --> 0:45:44,146
matches our expectations.

1461
00:45:44,666 --> 0:45:48,576
UI test on the other hand ensure

1462
00:45:48,576 --> 0:45:50,056
that all these components are

1463
00:45:50,056 --> 0:45:51,666
integrated correctly and that

1464
00:45:51,666 --> 0:45:53,336
the app works from the user's

1465
00:45:53,336 --> 0:45:53,906
perspective.

1466
00:45:55,246 --> 0:45:57,316
So let's dive back into Xcode.

1467
00:46:06,456 --> 0:46:08,916
So Holly already created the

1468
00:46:08,996 --> 0:46:10,796
unit test target for the MindKit

1469
00:46:10,866 --> 0:46:12,706
framework called MindKitTests.

1470
00:46:13,066 --> 0:46:14,286
But we'll still need to add it

1471
00:46:14,346 --> 0:46:15,516
into our test plan.

1472
00:46:16,226 --> 0:46:18,126
A test plan is a file-- a

1473
00:46:18,126 --> 0:46:21,006
repository that describes how

1474
00:46:21,006 --> 0:46:22,936
our tests are built and run.

1475
00:46:23,616 --> 0:46:25,656
A way to see which test plan our

1476
00:46:25,656 --> 0:46:27,946
scheme is using is to go-- to

1477
00:46:27,996 --> 0:46:29,536
click on the Scheme and select

1478
00:46:29,536 --> 0:46:30,276
Edit Scheme.

1479
00:46:31,366 --> 0:46:33,066
We'll switch to the Test Action,

1480
00:46:33,506 --> 0:46:35,566
and here we can see all the test

1481
00:46:35,616 --> 0:46:36,656
plans used by our scheme.

1482
00:46:36,656 --> 0:46:37,716
There's only one and that the

1483
00:46:37,716 --> 0:46:38,276
default.

1484
00:46:38,586 --> 0:46:40,106
So we'll jump to it by clicking

1485
00:46:40,106 --> 0:46:41,226
on the jump arrow next to the

1486
00:46:41,226 --> 0:46:42,216
test plan's name.

1487
00:46:42,696 --> 0:46:45,636
The Test Plan Editor shows us

1488
00:46:45,636 --> 0:46:48,316
which test targets it's using

1489
00:46:48,536 --> 0:46:50,236
and we already have the UI test

1490
00:46:50,236 --> 0:46:51,826
target here for which we'll

1491
00:46:51,826 --> 0:46:53,456
write code in a minute, but

1492
00:46:53,456 --> 0:46:54,666
we'll still need to add the

1493
00:46:54,666 --> 0:46:55,856
unit's test target.

1494
00:46:56,806 --> 0:46:58,166
We'll do that by clicking on the

1495
00:46:58,166 --> 0:47:01,016
Plus button at the bottom and

1496
00:46:58,166 --> 0:47:01,016
Plus button at the bottom and

1497
00:47:01,016 --> 0:47:02,396
selecting MindKitTests.

1498
00:47:04,316 --> 0:47:06,256
Now, let's actually write our

1499
00:47:06,256 --> 0:47:07,116
unit test code.

1500
00:47:07,646 --> 0:47:11,106
I will write some unit tests for

1501
00:47:11,106 --> 0:47:11,986
our HealthStore.

1502
00:47:12,536 --> 0:47:14,116
So what I'll do now is to

1503
00:47:14,116 --> 0:47:15,506
Control click on the

1504
00:47:15,506 --> 0:47:17,876
MindKitTests group and select

1505
00:47:18,046 --> 0:47:18,606
New File.

1506
00:47:18,606 --> 0:47:21,986
I will use the Unit Test file

1507
00:47:21,986 --> 0:47:25,786
template and we'll name the file

1508
00:47:26,466 --> 0:47:28,716
Test HealthStore.

1509
00:47:30,896 --> 0:47:31,876
That looks good.

1510
00:47:33,356 --> 0:47:35,346
The first thing we'll do here is

1511
00:47:35,416 --> 0:47:37,106
import MindKit because that is

1512
00:47:37,106 --> 0:47:38,186
where the code lives now.

1513
00:47:42,656 --> 0:47:45,126
And to be able to test not only

1514
00:47:45,276 --> 0:47:46,666
public but also internal

1515
00:47:46,666 --> 0:47:48,026
interfaces of the MindKit

1516
00:47:48,026 --> 0:47:50,066
framework, we'll add the

1517
00:47:50,066 --> 0:47:53,016
testable keyword to the import.

1518
00:47:54,016 --> 0:47:59,066
Next, I'll add two tests to our

1519
00:47:59,066 --> 0:47:59,866
class.

1520
00:48:00,296 --> 0:48:02,536
The first one verifies that

1521
00:48:02,536 --> 0:48:04,436
after we saved a meditation, we

1522
00:48:04,436 --> 0:48:05,696
can retrieve it right back.

1523
00:48:06,776 --> 0:48:08,056
And the second one ensures that

1524
00:48:08,056 --> 0:48:09,676
we can actually request access

1525
00:48:09,936 --> 0:48:11,946
to read and write data.

1526
00:48:12,896 --> 0:48:15,126
So I'll run these tests by going

1527
00:48:15,126 --> 0:48:16,626
to Product, Test.

1528
00:48:17,216 --> 0:48:20,436
Now, these tests are being built

1529
00:48:20,706 --> 0:48:22,896
for the simulator and run on the

1530
00:48:22,896 --> 0:48:24,336
iPhone XR simulator.

1531
00:48:35,196 --> 0:48:36,746
Now that the tests are finished,

1532
00:48:36,946 --> 0:48:39,806
we can actually see next to the

1533
00:48:39,806 --> 0:48:41,866
test name in the Source Editor

1534
00:48:41,866 --> 0:48:43,686
diamonds that both of them

1535
00:48:43,866 --> 0:48:44,516
succeeded.

1536
00:48:45,336 --> 0:48:48,106
Good. Now, we can also see the

1537
00:48:48,106 --> 0:48:50,636
test hierarchy in the Test

1538
00:48:50,636 --> 0:48:51,406
Navigator.

1539
00:48:52,176 --> 0:48:54,566
So we added a few unit tests for

1540
00:48:54,566 --> 0:48:55,666
our HealthStore but we want to

1541
00:48:55,666 --> 0:48:57,336
make sure that the UI of our app

1542
00:48:57,336 --> 0:48:58,366
works as well.

1543
00:48:58,806 --> 0:49:00,096
So we'll add some code to our UI

1544
00:48:58,806 --> 0:49:00,096
So we'll add some code to our UI

1545
00:49:00,096 --> 0:49:00,626
test.

1546
00:49:01,726 --> 0:49:03,106
I'll jump to the existing

1547
00:49:03,106 --> 0:49:05,356
MindUITests class by selecting

1548
00:49:05,356 --> 0:49:06,676
it in the Test Navigator.

1549
00:49:07,536 --> 0:49:10,336
And here, we will add UI test

1550
00:49:10,336 --> 0:49:13,626
code that launches our app,

1551
00:49:14,546 --> 0:49:16,776
starts a new meditation, a few

1552
00:49:16,776 --> 0:49:18,786
seconds later, it pauses the

1553
00:49:18,786 --> 0:49:21,246
meditation, and then finally, it

1554
00:49:21,246 --> 0:49:23,456
verifies the remaining time

1555
00:49:23,456 --> 0:49:25,266
label, shows what we expect.

1556
00:49:26,856 --> 0:49:28,686
So I will run our test again.

1557
00:49:29,226 --> 0:49:31,266
And this time, I'll bring the

1558
00:49:31,266 --> 0:49:32,476
simulator to the foreground so

1559
00:49:32,476 --> 0:49:34,606
that we can watch the UI test

1560
00:49:34,606 --> 0:49:35,016
run.

1561
00:49:36,066 --> 0:49:38,236
So the app is launched and new

1562
00:49:38,236 --> 0:49:39,286
meditation has started.

1563
00:49:39,286 --> 0:49:40,876
And a few seconds later, it gets

1564
00:49:40,956 --> 0:49:42,046
paused and the app gets

1565
00:49:42,046 --> 0:49:42,656
terminated.

1566
00:49:43,186 --> 0:49:44,996
Next, we can also see the unit

1567
00:49:45,116 --> 0:49:46,616
test launched the app for a

1568
00:49:46,616 --> 0:49:47,066
moment.

1569
00:49:48,326 --> 0:49:49,696
Now, it seems that some of our

1570
00:49:49,696 --> 0:49:50,436
tests failed.

1571
00:49:50,436 --> 0:49:51,616
And to figure out what exactly

1572
00:49:51,616 --> 0:49:53,536
happened, we'll go to the Report

1573
00:49:53,536 --> 0:49:55,076
Navigator by clicking on the

1574
00:49:55,076 --> 0:49:56,746
right most Navigator button.

1575
00:49:57,816 --> 0:49:59,816
Here, I'll select the top which

1576
00:49:59,816 --> 0:50:01,516
is the most recent test action

1577
00:49:59,816 --> 0:50:01,516
is the most recent test action

1578
00:50:02,576 --> 0:50:04,716
and we get to the test reports.

1579
00:50:05,456 --> 0:50:07,076
Here, I can see that the new UI

1580
00:50:07,076 --> 0:50:08,606
test I just added is marked in

1581
00:50:08,606 --> 0:50:10,286
red which means that it failed.

1582
00:50:10,876 --> 0:50:11,976
And to know what exactly

1583
00:50:11,976 --> 0:50:13,846
happened, I will disclose the

1584
00:50:13,846 --> 0:50:16,286
test and drill into the failing

1585
00:50:16,286 --> 0:50:18,406
activities to see that the

1586
00:50:18,406 --> 0:50:19,736
search in failure says that

1587
00:50:19,826 --> 0:50:22,486
02:56 is not equal to 2:56.

1588
00:50:23,376 --> 0:50:24,416
Now, this is starting to make

1589
00:50:24,526 --> 0:50:24,986
sense.

1590
00:50:25,246 --> 0:50:27,026
But to really understand what

1591
00:50:27,026 --> 0:50:28,726
was on screen when the failure

1592
00:50:28,726 --> 0:50:30,586
occurred, I can disclose the

1593
00:50:30,646 --> 0:50:32,316
failure itself to reveal an

1594
00:50:32,316 --> 0:50:34,346
automatic screenshot which I can

1595
00:50:34,396 --> 0:50:36,076
preview the click icon.

1596
00:50:36,746 --> 0:50:38,356
And here, I can clearly see that

1597
00:50:38,356 --> 0:50:41,026
the remaining timer label shows

1598
00:50:41,286 --> 0:50:43,776
02:56 but our test assertion at

1599
00:50:43,776 --> 0:50:44,606
2:56.

1600
00:50:45,916 --> 0:50:47,686
So I'll close the preview and

1601
00:50:47,686 --> 0:50:49,066
we'll jump back to the test

1602
00:50:49,066 --> 0:50:50,426
source by clicking on the jump

1603
00:50:50,426 --> 0:50:52,006
arrow next to the test name.

1604
00:50:53,346 --> 0:50:54,796
And here, we'll fix the

1605
00:50:54,796 --> 0:50:56,526
assertion by adding, deleting

1606
00:50:56,526 --> 0:50:56,946
zero.

1607
00:50:58,126 --> 0:51:00,476
Now, I'll rerun just this one

1608
00:50:58,126 --> 0:51:00,476
Now, I'll rerun just this one

1609
00:51:00,476 --> 0:51:02,536
test by clicking on the test

1610
00:51:02,536 --> 0:51:04,526
diamond next to the test name.

1611
00:51:05,066 --> 0:51:08,716
And again, we can see the app

1612
00:51:08,976 --> 0:51:10,856
being launched and new

1613
00:51:11,006 --> 0:51:13,256
meditation starts, few seconds

1614
00:51:13,256 --> 0:51:14,616
later it gets pause, the app

1615
00:51:14,736 --> 0:51:16,796
gets executed, and this time--

1616
00:51:17,376 --> 0:51:19,206
terminated, sorry, and this

1617
00:51:19,206 --> 0:51:20,726
time, we can actually see with

1618
00:51:20,726 --> 0:51:22,346
the test diamond that the test

1619
00:51:22,596 --> 0:51:23,086
succeeded.

1620
00:51:23,356 --> 0:51:23,796
That's great.

1621
00:51:24,516 --> 0:51:29,536
[ Applause ]

1622
00:51:30,036 --> 0:51:31,286
Finally, now that we have a

1623
00:51:31,396 --> 0:51:33,996
functional app, we would like to

1624
00:51:33,996 --> 0:51:35,066
make it available to more

1625
00:51:35,066 --> 0:51:35,636
people.

1626
00:51:37,736 --> 0:51:40,046
To build an app for distribution

1627
00:51:40,326 --> 0:51:42,306
on the App Store or TestFlight,

1628
00:51:42,306 --> 0:51:43,666
which is Apple's beta testing

1629
00:51:43,666 --> 0:51:45,396
service, we need to perform an

1630
00:51:45,476 --> 0:51:46,056
archive.

1631
00:51:47,396 --> 0:51:49,716
To do that, we first select the

1632
00:51:49,716 --> 0:51:51,536
generic iOS device run

1633
00:51:51,536 --> 0:51:53,506
destination, and then select

1634
00:51:53,696 --> 0:51:55,096
Product Archive.

1635
00:51:55,666 --> 0:51:57,186
And this builds the app in the

1636
00:51:57,186 --> 0:51:58,906
release configuration and

1637
00:51:58,906 --> 0:52:00,836
produces an archive that we can

1638
00:51:58,906 --> 0:52:00,836
produces an archive that we can

1639
00:52:00,836 --> 0:52:04,186
use to distribute our app.

1640
00:52:04,466 --> 0:52:06,106
When it finishes, it opens the

1641
00:52:06,106 --> 0:52:07,946
organizer automatically, and

1642
00:52:07,946 --> 0:52:09,026
here, when we select the

1643
00:52:09,026 --> 0:52:11,456
archive, we can click Distribute

1644
00:52:12,016 --> 0:52:12,216
App.

1645
00:52:12,216 --> 0:52:13,366
And we would go through this

1646
00:52:13,436 --> 0:52:15,946
flow to submit our app directly

1647
00:52:15,946 --> 0:52:18,046
to Apple from Xcode.

1648
00:52:21,836 --> 0:52:24,046
Please note that to deploy apps

1649
00:52:24,166 --> 0:52:25,656
to TestFlight or the App Store,

1650
00:52:25,956 --> 0:52:26,936
you'll need to register

1651
00:52:26,936 --> 0:52:28,676
developer account associated

1652
00:52:28,846 --> 0:52:29,826
with your Apple ID.

1653
00:52:35,756 --> 0:52:38,476
Once your app has been uploaded,

1654
00:52:39,466 --> 0:52:41,026
you can manage it using the App

1655
00:52:41,026 --> 0:52:42,196
Store Connect website.

1656
00:52:42,706 --> 0:52:44,256
And this way, you can ask your

1657
00:52:44,386 --> 0:52:46,146
friends and family or your

1658
00:52:46,146 --> 0:52:47,936
colleagues to download your app

1659
00:52:47,936 --> 0:52:49,346
using TestFlight and eventually

1660
00:52:49,346 --> 0:52:50,966
getting listed-- get it listed

1661
00:52:51,156 --> 0:52:53,836
on the App Store as well.

1662
00:52:54,046 --> 0:52:56,246
So in this demo, we started by

1663
00:52:56,246 --> 0:52:58,196
creating unit and UI tests for

1664
00:52:58,196 --> 0:52:59,156
our app.

1665
00:52:59,156 --> 0:53:01,086
And then we learned how to edit

1666
00:52:59,156 --> 0:53:01,086
And then we learned how to edit

1667
00:53:01,086 --> 0:53:03,716
our test plan and how to use the

1668
00:53:03,716 --> 0:53:06,186
Test Report to diagnose a test

1669
00:53:06,186 --> 0:53:06,506
failure.

1670
00:53:07,296 --> 0:53:08,686
Then we built an archive and

1671
00:53:08,686 --> 0:53:09,656
discussed how to use the

1672
00:53:09,656 --> 0:53:12,416
organizer to upload our app to

1673
00:53:12,416 --> 0:53:15,436
TestFlight or the App Store.

1674
00:53:15,656 --> 0:53:16,476
To learn more about these

1675
00:53:16,526 --> 0:53:17,836
topics, please refer to these

1676
00:53:17,866 --> 0:53:18,346
talks.

1677
00:53:19,486 --> 0:53:21,456
And now, let's recap what we saw

1678
00:53:21,456 --> 0:53:22,656
in the last hour.

1679
00:53:23,596 --> 0:53:24,916
Today, we went through the whole

1680
00:53:24,916 --> 0:53:26,616
journey of creating an app from

1681
00:53:26,616 --> 0:53:27,136
scratch.

1682
00:53:28,396 --> 0:53:30,296
Prachi created our project and

1683
00:53:30,296 --> 0:53:31,506
introduced the Xcode UI.

1684
00:53:32,706 --> 0:53:34,666
Then Holly added codes to our

1685
00:53:34,666 --> 0:53:36,226
app using the Source Editor

1686
00:53:36,226 --> 0:53:37,656
features to make that process

1687
00:53:37,656 --> 0:53:38,906
really smooth and fun.

1688
00:53:39,916 --> 0:53:41,136
Then I came up to discuss

1689
00:53:41,286 --> 0:53:42,976
running and debugging on the

1690
00:53:42,976 --> 0:53:45,396
simulator and device, and we

1691
00:53:45,396 --> 0:53:46,666
added a Swift Package to our

1692
00:53:46,666 --> 0:53:47,146
project.

1693
00:53:48,186 --> 0:53:49,986
Then Holly came up and

1694
00:53:49,986 --> 0:53:51,796
integrated the Swift Package and

1695
00:53:51,796 --> 0:53:53,256
split some of our code into a

1696
00:53:53,256 --> 0:53:53,816
framework.

1697
00:53:54,666 --> 0:53:56,536
And finally, we just learned how

1698
00:53:56,536 --> 0:53:57,826
to use the testing integration

1699
00:53:57,826 --> 0:53:59,716
in Xcode and how to distribute

1700
00:53:59,716 --> 0:54:01,986
our app to the App Store or

1701
00:53:59,716 --> 0:54:01,986
our app to the App Store or

1702
00:54:01,986 --> 0:54:02,366
TestFlight.

1703
00:54:04,536 --> 0:54:06,006
For more information about the

1704
00:54:06,006 --> 0:54:07,446
session, please refer to this

1705
00:54:07,446 --> 0:54:07,826
link.

1706
00:54:08,076 --> 0:54:09,396
And if you have any questions,

1707
00:54:09,576 --> 0:54:11,096
there's a lab starting right

1708
00:54:11,096 --> 0:54:12,296
after this session ends.

1709
00:54:13,926 --> 0:54:14,616
And have a great week.

1710
00:54:14,616 --> 0:54:15,436
Thank you very much.

1711
00:54:16,516 --> 0:54:20,500
[ Applause Cheering ]
