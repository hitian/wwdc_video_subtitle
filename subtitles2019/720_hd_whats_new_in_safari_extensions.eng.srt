1
00:00:00,506 --> 0:00:07,486
[ Music ]

2
00:00:07,986 --> 0:00:10,436
&gt;&gt; Hi. I'm Brian Weinstein, an

3
00:00:10,436 --> 0:00:12,146
Engineer on the Safari Team.

4
00:00:12,546 --> 0:00:14,316
And today, I'm going to talk

5
00:00:14,316 --> 0:00:16,056
about what's new in Safari

6
00:00:16,056 --> 0:00:16,826
Extensions.

7
00:00:17,336 --> 0:00:19,506
Safari Extensions let you extend

8
00:00:19,506 --> 0:00:20,646
Safari's behavior.

9
00:00:21,156 --> 0:00:22,436
You can enhance a user's

10
00:00:22,436 --> 0:00:24,256
browsing experience by adding

11
00:00:24,256 --> 0:00:26,196
scripts or style sheets to web

12
00:00:26,196 --> 0:00:28,686
pages, blocking content, and

13
00:00:28,686 --> 0:00:30,056
adding to Safari's UI.

14
00:00:31,676 --> 0:00:34,346
We are going to cover how Safari

15
00:00:34,346 --> 0:00:35,796
Extensions are built and

16
00:00:35,796 --> 0:00:38,406
distributed, how your Safari App

17
00:00:38,406 --> 0:00:40,606
Extension can be notified about

18
00:00:40,606 --> 0:00:42,146
the activity of your Content

19
00:00:42,146 --> 0:00:44,656
Blocker, better support for

20
00:00:44,656 --> 0:00:47,176
window, tab, and page management

21
00:00:47,176 --> 0:00:49,946
in your extension, improvements

22
00:00:49,946 --> 0:00:51,896
made to Safari App Extension

23
00:00:51,896 --> 0:00:54,646
popovers, and some of the best

24
00:00:54,646 --> 0:00:56,566
practices for communicating

25
00:00:56,566 --> 0:00:58,596
between your Safari Extension

26
00:00:58,986 --> 0:01:00,266
and its containing app.

27
00:00:58,986 --> 0:01:00,266
and its containing app.

28
00:01:01,656 --> 0:01:03,466
There are two types of Safari

29
00:01:03,466 --> 0:01:04,766
Extensions that I'm going to

30
00:01:04,766 --> 0:01:07,306
focus on today, Content Blockers

31
00:01:08,516 --> 0:01:10,186
and Safari App Extensions.

32
00:01:10,746 --> 0:01:12,156
Both of these extensions are

33
00:01:12,156 --> 0:01:13,956
bundled with Mac apps which are

34
00:01:13,956 --> 0:01:15,256
built with Xcode.

35
00:01:16,796 --> 0:01:18,556
When you install an app with a

36
00:01:18,556 --> 0:01:20,166
Safari App Extension from the

37
00:01:20,166 --> 0:01:22,166
Mac App Store, the extension

38
00:01:22,166 --> 0:01:24,286
shows up immediately in Safari's

39
00:01:24,286 --> 0:01:26,316
preferences, ready to turn on.

40
00:01:28,516 --> 0:01:31,086
However, you can also distribute

41
00:01:31,086 --> 0:01:32,406
your app directly from your

42
00:01:32,406 --> 0:01:34,406
website after running it through

43
00:01:34,406 --> 0:01:36,076
the notarization service.

44
00:01:36,296 --> 0:01:37,966
Notarized apps need to be

45
00:01:37,966 --> 0:01:39,976
launched at least once for their

46
00:01:39,976 --> 0:01:41,946
extensions to show up in Safari.

47
00:01:42,536 --> 0:01:44,186
We love the Safari App

48
00:01:44,186 --> 0:01:45,966
Extensions and Content Blockers

49
00:01:45,966 --> 0:01:46,636
you've created.

50
00:01:47,136 --> 0:01:48,976
We also really appreciate those

51
00:01:48,976 --> 0:01:50,096
of you who suggested

52
00:01:50,096 --> 0:01:52,536
improvements, filed bug reports,

53
00:01:52,736 --> 0:01:54,316
and commented on the Safari

54
00:01:54,316 --> 0:01:55,546
developer forums.

55
00:01:58,756 --> 0:02:00,636
One of the features we've heard

56
00:01:58,756 --> 0:02:00,636
One of the features we've heard

57
00:02:00,636 --> 0:02:02,876
the most requests for is a way

58
00:02:02,876 --> 0:02:04,836
for extensions to know when

59
00:02:04,836 --> 0:02:06,566
their Content Blocker performs

60
00:02:06,566 --> 0:02:07,126
an action.

61
00:02:08,566 --> 0:02:10,455
Content Blockers provide a

62
00:02:10,455 --> 0:02:12,256
declarative list of rules

63
00:02:12,366 --> 0:02:14,646
defining the content to block or

64
00:02:14,646 --> 0:02:16,476
hide while using Safari.

65
00:02:17,006 --> 0:02:19,146
Safari requests the list of

66
00:02:19,146 --> 0:02:20,836
rules from your Content Blocker

67
00:02:21,056 --> 0:02:22,056
when it's turned on.

68
00:02:23,316 --> 0:02:25,766
The user does some browsing, and

69
00:02:25,766 --> 0:02:27,496
when your Content Blocker flags

70
00:02:27,496 --> 0:02:28,956
a resource as something that

71
00:02:28,956 --> 0:02:32,336
should be blocked, now in Safari

72
00:02:32,336 --> 0:02:35,446
13, Safari tells your Safari App

73
00:02:35,446 --> 0:02:37,476
Extension associated with your

74
00:02:37,476 --> 0:02:39,016
Content Blocker about it.

75
00:02:40,296 --> 0:02:41,996
Your users will be able to turn

76
00:02:41,996 --> 0:02:43,976
on the associated Safari App

77
00:02:43,976 --> 0:02:45,716
Extension if they want to see

78
00:02:45,716 --> 0:02:48,386
statistics from you or they can

79
00:02:48,386 --> 0:02:50,256
turn on only the Content Blocker

80
00:02:50,426 --> 0:02:51,646
to keep the most private

81
00:02:51,646 --> 0:02:52,486
experience.

82
00:02:52,836 --> 0:02:54,216
Let's take a look at how easy

83
00:02:54,216 --> 0:02:56,696
this is to do.

84
00:02:56,926 --> 0:02:59,006
The first step is associating

85
00:02:59,006 --> 0:03:00,866
your Content Blocker with your

86
00:02:59,006 --> 0:03:00,866
your Content Blocker with your

87
00:03:00,866 --> 0:03:02,976
Safari App Extension in your

88
00:03:02,976 --> 0:03:04,906
extensions info.plist file.

89
00:03:05,616 --> 0:03:08,586
To do this, add a new entry to

90
00:03:08,586 --> 0:03:10,596
the NSExtension section of your

91
00:03:10,596 --> 0:03:12,076
Safari App Extension's

92
00:03:12,076 --> 0:03:13,166
info.plist.

93
00:03:14,266 --> 0:03:17,896
The key is SFSafariAssociatedContentBlockers.

94
00:03:21,176 --> 0:03:23,626
And the value is an array of

95
00:03:23,626 --> 0:03:25,076
Content Blocker bundle

96
00:03:25,076 --> 0:03:27,386
identifiers that the Safari App

97
00:03:27,386 --> 0:03:29,096
Extension wants to be notified

98
00:03:29,096 --> 0:03:29,526
about.

99
00:03:30,106 --> 0:03:32,156
One Safari App Extension can be

100
00:03:32,156 --> 0:03:34,046
notified about multiple Content

101
00:03:34,046 --> 0:03:34,616
Blockers.

102
00:03:35,206 --> 0:03:37,026
One thing to keep in mind is

103
00:03:37,026 --> 0:03:38,906
that the Content Blockers and

104
00:03:38,906 --> 0:03:41,016
the Safari App Extension must be

105
00:03:41,016 --> 0:03:42,426
in the same containing app.

106
00:03:46,436 --> 0:03:48,586
Then, once you've set up your

107
00:03:48,586 --> 0:03:50,376
info.plist, you will need to

108
00:03:50,376 --> 0:03:52,426
implement a delegate method on

109
00:03:52,426 --> 0:03:53,746
your extension's principal

110
00:03:53,746 --> 0:03:54,346
object.

111
00:03:54,766 --> 0:03:56,926
That method is content blocker

112
00:03:56,926 --> 0:03:58,876
with identifier, blocked

113
00:03:58,876 --> 0:04:01,746
resources with URLs on page.

114
00:03:58,876 --> 0:04:01,746
resources with URLs on page.

115
00:04:02,816 --> 0:04:04,696
These notifications are batched

116
00:04:04,696 --> 0:04:06,526
and you will only be notified

117
00:04:06,716 --> 0:04:09,206
about URLs that your Safari App

118
00:04:09,206 --> 0:04:10,916
Extension has permission to

119
00:04:10,916 --> 0:04:12,996
access in the website access

120
00:04:12,996 --> 0:04:14,796
section of its info.plist.

121
00:04:16,305 --> 0:04:17,296
That's all it takes.

122
00:04:19,286 --> 0:04:20,886
Now, let's move on to the

123
00:04:20,886 --> 0:04:22,666
improvements made to window,

124
00:04:22,756 --> 0:04:24,666
tab, and page management.

125
00:04:25,706 --> 0:04:27,606
The first enhancement is another

126
00:04:27,606 --> 0:04:30,396
frequent request, an API to tell

127
00:04:30,396 --> 0:04:32,126
you when a page is about to

128
00:04:32,126 --> 0:04:33,536
perform a navigation.

129
00:04:34,076 --> 0:04:35,536
You can pair this with the

130
00:04:35,536 --> 0:04:37,546
Content Blocker notifications

131
00:04:37,546 --> 0:04:39,736
you just heard about to know any

132
00:04:39,736 --> 0:04:41,766
future notifications will be for

133
00:04:41,766 --> 0:04:42,766
a new page load.

134
00:04:44,126 --> 0:04:46,036
The first enhancement is another

135
00:04:46,036 --> 0:04:48,816
frequent request, an API to tell

136
00:04:48,816 --> 0:04:50,606
you when a page is about to

137
00:04:50,606 --> 0:04:51,966
perform a navigation.

138
00:04:52,726 --> 0:04:54,046
You can pair this with the

139
00:04:54,046 --> 0:04:55,916
Content Blocker notifications

140
00:04:56,086 --> 0:04:58,196
you just heard about to know any

141
00:04:58,196 --> 0:05:00,206
future notifications will be for

142
00:04:58,196 --> 0:05:00,206
future notifications will be for

143
00:05:00,206 --> 0:05:01,236
a new page load.

144
00:05:01,926 --> 0:05:04,116
Or you can use this to follow

145
00:05:04,116 --> 0:05:06,126
the redirect chain across the

146
00:05:06,126 --> 0:05:08,456
loading of a specific page in

147
00:05:08,456 --> 0:05:10,646
order to redirect to a specific

148
00:05:10,646 --> 0:05:13,166
version of a website or to look

149
00:05:13,166 --> 0:05:14,936
at the URL parameters to

150
00:05:14,936 --> 0:05:16,756
determine if your extension has

151
00:05:16,756 --> 0:05:18,396
already shown its UI to the

152
00:05:18,396 --> 0:05:18,926
user.

153
00:05:19,746 --> 0:05:21,426
This method will be called on

154
00:05:21,426 --> 0:05:22,726
your extension's principal

155
00:05:22,726 --> 0:05:25,066
object even if your extension

156
00:05:25,066 --> 0:05:26,406
doesn't have access to the

157
00:05:26,406 --> 0:05:27,426
target URL.

158
00:05:27,966 --> 0:05:30,006
In that case, the URL will be

159
00:05:30,006 --> 0:05:30,416
nil.

160
00:05:30,976 --> 0:05:33,286
The URL will also be nil if the

161
00:05:33,286 --> 0:05:35,376
user opened their favorites or

162
00:05:35,376 --> 0:05:36,026
their history.

163
00:05:38,556 --> 0:05:40,816
Let's adopt these new APIs in a

164
00:05:40,816 --> 0:05:41,696
sample extension.

165
00:05:43,836 --> 0:05:47,026
At a previous WWDC, when Safari

166
00:05:47,026 --> 0:05:48,856
App Extensions were introduced,

167
00:05:49,206 --> 0:05:51,176
we created an extension that

168
00:05:51,176 --> 0:05:53,386
replaces the word "bear" with

169
00:05:53,386 --> 0:05:54,366
the bear emoji.

170
00:05:54,896 --> 0:05:57,056
Today, I'd like to expand this

171
00:05:57,056 --> 0:05:59,096
extension to make life easier

172
00:05:59,096 --> 0:06:00,556
for bears on the internet.

173
00:05:59,096 --> 0:06:00,556
for bears on the internet.

174
00:06:01,166 --> 0:06:03,066
So far, I've made a Content

175
00:06:03,066 --> 0:06:06,066
Blocker that blocks all images

176
00:06:06,806 --> 0:06:10,026
with honey in the URL to remove

177
00:06:10,026 --> 0:06:11,506
the temptation for sweets.

178
00:06:12,386 --> 0:06:13,966
Let's associate that Content

179
00:06:13,966 --> 0:06:16,346
Blocker with our existing Safari

180
00:06:16,346 --> 0:06:17,166
App Extension.

181
00:06:17,646 --> 0:06:19,866
I'll start by opening the Safari

182
00:06:19,866 --> 0:06:21,806
App Extension's info.plist.

183
00:06:22,446 --> 0:06:24,506
To associate a Content Blocker,

184
00:06:24,706 --> 0:06:27,966
I'll add an SF Safari associated

185
00:06:27,966 --> 0:06:30,506
Content Blockers entry to the

186
00:06:30,506 --> 0:06:31,496
NSExtension section.

187
00:06:32,266 --> 0:06:34,666
I'm going to open the XML viewer

188
00:06:35,076 --> 0:06:36,586
to paste the source code in.

189
00:06:44,686 --> 0:06:46,576
And then go back to the plist

190
00:06:46,576 --> 0:06:46,916
viewer.

191
00:06:53,426 --> 0:06:55,476
It's an array with one entry,

192
00:06:55,916 --> 0:06:57,926
the bundle identifier of my new

193
00:06:57,926 --> 0:06:58,796
Content Blocker.

194
00:06:59,396 --> 0:07:01,426
The next step is to listen for

195
00:06:59,396 --> 0:07:01,426
The next step is to listen for

196
00:07:01,426 --> 0:07:02,366
the content blocking

197
00:07:02,366 --> 0:07:02,976
notifications.

198
00:07:08,896 --> 0:07:11,366
What we'll do is build up a map

199
00:07:11,816 --> 0:07:14,326
between SF Safari pages and the

200
00:07:14,326 --> 0:07:15,996
list of resources that have been

201
00:07:15,996 --> 0:07:17,406
blocked on that page.

202
00:07:18,396 --> 0:07:20,306
When we get a notification that

203
00:07:20,306 --> 0:07:21,796
the Content Blocker blocked

204
00:07:21,796 --> 0:07:24,896
resources, we find the list of

205
00:07:24,896 --> 0:07:26,866
blocked resources for that page

206
00:07:27,666 --> 0:07:29,666
and add the resources we were

207
00:07:29,666 --> 0:07:30,516
just told about.

208
00:07:31,636 --> 0:07:33,706
When a page navigates, we want

209
00:07:33,706 --> 0:07:34,736
to clear that list.

210
00:07:36,856 --> 0:07:39,936
To do this, we will override

211
00:07:40,156 --> 0:07:43,276
page will navigate to URL and

212
00:07:43,276 --> 0:07:44,816
use that to clear the blocked

213
00:07:44,816 --> 0:07:46,086
resources for the page.

214
00:07:47,186 --> 0:07:49,026
The last thing we want to do is

215
00:07:49,026 --> 0:07:50,846
set the badge of our toolbar

216
00:07:50,846 --> 0:07:52,906
item to be the number of blocked

217
00:07:52,906 --> 0:07:54,966
resources on that page.

218
00:07:57,236 --> 0:07:59,246
When we're asked to validate a

219
00:07:59,246 --> 0:08:02,036
toolbar item for a window, we

220
00:07:59,246 --> 0:08:02,036
toolbar item for a window, we

221
00:08:02,036 --> 0:08:03,926
find the active tab in that

222
00:08:03,926 --> 0:08:06,886
window, find its active page,

223
00:08:07,806 --> 0:08:09,776
and get the number of blocked

224
00:08:09,776 --> 0:08:11,856
resources on that page from our

225
00:08:11,856 --> 0:08:12,206
map.

226
00:08:12,806 --> 0:08:14,126
Let's see it in action.

227
00:08:15,056 --> 0:08:17,926
We'll build and run Animalify so

228
00:08:17,926 --> 0:08:19,636
the system can discover our

229
00:08:19,636 --> 0:08:19,976
extensions.

230
00:08:26,016 --> 0:08:29,316
Once we've run the app, you can

231
00:08:29,316 --> 0:08:31,076
see the splash screen with a

232
00:08:31,076 --> 0:08:32,996
button to take your users to

233
00:08:32,996 --> 0:08:34,826
Safari's extensions preferences.

234
00:08:35,385 --> 0:08:36,666
You can get the splash screen

235
00:08:36,666 --> 0:08:38,796
for free in your app if you

236
00:08:38,796 --> 0:08:41,056
create a Safari Extension App

237
00:08:41,326 --> 0:08:41,986
from Xcode.

238
00:08:43,015 --> 0:08:44,956
Let's launch Safari, which takes

239
00:08:44,956 --> 0:08:46,046
me to my homepage,

240
00:08:46,326 --> 0:08:48,616
bearseating.com, so I can have

241
00:08:48,616 --> 0:08:50,416
some food inspiration for the

242
00:08:50,416 --> 0:08:50,756
day.

243
00:08:51,566 --> 0:08:53,136
Since I'm just experimenting

244
00:08:53,136 --> 0:08:54,736
with writing Safari Extensions,

245
00:08:55,036 --> 0:08:56,556
I don't have an Apple developer

246
00:08:56,556 --> 0:08:57,426
certificate yet.

247
00:08:57,806 --> 0:08:59,666
That's OK because I can

248
00:08:59,666 --> 0:09:02,036
temporarily tell Safari to run

249
00:08:59,666 --> 0:09:02,036
temporarily tell Safari to run

250
00:09:02,036 --> 0:09:04,246
these extensions by first

251
00:09:04,506 --> 0:09:06,046
opening Safari's preferences,

252
00:09:07,096 --> 0:09:10,526
going to advanced, and turning

253
00:09:10,526 --> 0:09:11,636
on the develop menu.

254
00:09:13,446 --> 0:09:15,186
Once I've done that, I can open

255
00:09:15,186 --> 0:09:17,916
the develop menu and check allow

256
00:09:17,916 --> 0:09:19,146
unsigned extensions.

257
00:09:19,746 --> 0:09:22,006
Let's go in to Safari's

258
00:09:22,006 --> 0:09:24,476
extensions preferences, turn on

259
00:09:24,476 --> 0:09:26,176
our Content Blocker and our

260
00:09:26,176 --> 0:09:28,926
Safari App Extension, and reload

261
00:09:28,926 --> 0:09:30,006
bearseating.com.

262
00:09:30,816 --> 0:09:32,946
As you can see, the Content

263
00:09:32,946 --> 0:09:34,446
Blocker blocked the pictures of

264
00:09:34,446 --> 0:09:36,426
the bears eating honey, and our

265
00:09:36,426 --> 0:09:38,056
toolbar time is badged with the

266
00:09:38,056 --> 0:09:40,446
number 3, because there were 3

267
00:09:40,446 --> 0:09:41,526
resources blocked.

268
00:09:42,756 --> 0:09:44,526
If I reload the page without

269
00:09:44,526 --> 0:09:46,596
Content Blockers, the toolbar

270
00:09:46,596 --> 0:09:48,656
item's badge clears and you can

271
00:09:48,656 --> 0:09:50,156
see the images that were blocked

272
00:09:50,156 --> 0:09:50,526
again.

273
00:09:51,366 --> 0:09:52,646
And when you reload one more

274
00:09:52,646 --> 0:09:55,076
time, those images are gone.

275
00:09:55,636 --> 0:09:57,596
And that's how easy it is to

276
00:09:57,596 --> 0:09:59,746
adopt content blocking and page

277
00:09:59,746 --> 0:10:00,976
navigation notifications.

278
00:09:59,746 --> 0:10:00,976
navigation notifications.

279
00:10:05,346 --> 0:10:06,916
Those are just a couple of the

280
00:10:06,916 --> 0:10:09,336
many new APIs available to

281
00:10:09,336 --> 0:10:10,696
Safari App Extensions.

282
00:10:11,206 --> 0:10:12,386
Let's look at some others.

283
00:10:13,896 --> 0:10:15,756
We've added the ability to get

284
00:10:15,756 --> 0:10:17,726
the visible contents of an SF

285
00:10:17,726 --> 0:10:18,766
Safari page.

286
00:10:19,336 --> 0:10:20,886
Your extension will need to have

287
00:10:20,886 --> 0:10:23,506
access to the URL of the page in

288
00:10:23,506 --> 0:10:25,146
order to get image data from

289
00:10:25,146 --> 0:10:25,656
this API.

290
00:10:27,266 --> 0:10:28,496
With the latest version of

291
00:10:28,496 --> 0:10:31,096
Safari, it is now much easier to

292
00:10:31,096 --> 0:10:32,986
show users content from your

293
00:10:32,986 --> 0:10:34,646
Safari Extensions bundle.

294
00:10:35,036 --> 0:10:38,766
You can now get the base URL of

295
00:10:38,766 --> 0:10:40,426
your extension from native code.

296
00:10:40,806 --> 0:10:42,396
There's no need to inject script

297
00:10:42,396 --> 0:10:42,976
to do this anymore.

298
00:10:46,736 --> 0:10:49,156
You can navigate a tab to a URL

299
00:10:49,156 --> 0:10:51,496
directly also without needing an

300
00:10:51,496 --> 0:10:52,426
injected script.

301
00:10:55,346 --> 0:10:58,276
And finally, Safari now injects

302
00:10:58,276 --> 0:11:00,306
the Safari JavaScript object

303
00:10:58,276 --> 0:11:00,306
the Safari JavaScript object

304
00:11:00,456 --> 0:11:02,366
into any frames loaded with

305
00:11:02,366 --> 0:11:03,856
content from your extension,

306
00:11:04,366 --> 0:11:06,086
meaning those frames can send

307
00:11:06,086 --> 0:11:07,996
messages to the Safari App

308
00:11:07,996 --> 0:11:10,156
Extension and receive messages

309
00:11:10,156 --> 0:11:12,526
from it.

310
00:11:12,796 --> 0:11:14,826
Safari extensions can now find

311
00:11:14,826 --> 0:11:17,096
out about all the open tabs and

312
00:11:17,096 --> 0:11:19,446
windows in Safari, not just the

313
00:11:19,446 --> 0:11:20,716
active window and tab.

314
00:11:22,346 --> 0:11:24,516
Here, you can see code that gets

315
00:11:24,516 --> 0:11:25,606
all the windows in the

316
00:11:25,606 --> 0:11:27,686
application, and then for each

317
00:11:27,686 --> 0:11:29,916
window gets all of its tabs.

318
00:11:36,076 --> 0:11:38,076
You can also get a reference to

319
00:11:38,076 --> 0:11:40,856
a pages containing tab and the

320
00:11:40,856 --> 0:11:42,336
tabs containing window.

321
00:11:43,436 --> 0:11:45,486
For example, consider handling a

322
00:11:45,486 --> 0:11:47,226
message from your content script

323
00:11:47,336 --> 0:11:49,186
that requires you to update the

324
00:11:49,186 --> 0:11:50,956
toolbar item in that window.

325
00:11:51,486 --> 0:11:52,976
You can get the pages containing

326
00:11:52,976 --> 0:11:55,196
tab and then the tabs containing

327
00:11:55,196 --> 0:11:55,526
window.

328
00:12:00,016 --> 0:12:01,766
One thing to keep in mind is

329
00:12:01,766 --> 0:12:03,156
that a pinned tab will have a

330
00:12:03,156 --> 0:12:05,066
nil containing window because

331
00:12:05,066 --> 0:12:06,716
they belong to all windows

332
00:12:06,716 --> 0:12:08,056
instead of a single parent

333
00:12:08,056 --> 0:12:08,426
window.

334
00:12:09,996 --> 0:12:11,926
Those were the improvements made

335
00:12:11,926 --> 0:12:13,806
to window, tab, and page

336
00:12:13,806 --> 0:12:14,356
management.

337
00:12:15,616 --> 0:12:17,846
The last set of API improvements

338
00:12:18,096 --> 0:12:19,886
are for Safari App Extension

339
00:12:19,886 --> 0:12:23,136
popovers, which you can now

340
00:12:23,136 --> 0:12:25,006
programmatically show and

341
00:12:25,006 --> 0:12:25,606
dismiss.

342
00:12:26,026 --> 0:12:28,076
A popover is shown by calling

343
00:12:28,076 --> 0:12:30,626
show popover on an SF Safari

344
00:12:30,626 --> 0:12:32,736
toolbar item, which you can get

345
00:12:32,736 --> 0:12:33,826
from the window that will

346
00:12:33,826 --> 0:12:34,986
present the popover.

347
00:12:35,786 --> 0:12:37,476
The popover is dismissed from

348
00:12:37,476 --> 0:12:39,096
your popovers view controller

349
00:12:39,096 --> 0:12:39,676
itself.

350
00:12:39,986 --> 0:12:41,606
All you have to do is call

351
00:12:41,606 --> 0:12:43,366
self.dismissPopover.

352
00:12:45,376 --> 0:12:47,366
Let's take a look at improving

353
00:12:47,366 --> 0:12:49,366
our extension by adding some of

354
00:12:49,366 --> 0:12:50,596
these new APIs.

355
00:12:53,086 --> 0:12:55,096
Using some of these new APIs,

356
00:12:55,266 --> 0:12:56,916
I'd like to upgrade my Safari

357
00:12:56,916 --> 0:12:57,506
Extension.

358
00:12:58,036 --> 0:12:59,536
When I click my toolbar item,

359
00:12:59,786 --> 0:13:01,696
I'd like to display a popover

360
00:12:59,786 --> 0:13:01,696
I'd like to display a popover

361
00:13:01,696 --> 0:13:02,586
with a table view.

362
00:13:02,856 --> 0:13:04,916
There will be one row per tab

363
00:13:05,386 --> 0:13:06,426
and two columns.

364
00:13:06,986 --> 0:13:08,506
The left column will be a

365
00:13:08,506 --> 0:13:10,436
screenshot of the tab and the

366
00:13:10,436 --> 0:13:12,316
right column will have the title

367
00:13:12,316 --> 0:13:13,976
of the page and how many

368
00:13:13,976 --> 0:13:15,636
resources were blocked from each

369
00:13:15,636 --> 0:13:16,146
domain.

370
00:13:17,576 --> 0:13:19,146
The first step in this process

371
00:13:19,486 --> 0:13:21,136
is telling the popovers view

372
00:13:21,136 --> 0:13:22,806
controller the state of the

373
00:13:22,806 --> 0:13:25,056
Safari window before showing the

374
00:13:25,056 --> 0:13:25,666
popover.

375
00:13:26,186 --> 0:13:28,056
To do this, I'll override

376
00:13:28,056 --> 0:13:30,096
popover will show and have it

377
00:13:30,096 --> 0:13:31,366
collect this information.

378
00:13:34,236 --> 0:13:36,866
As you can see, the function

379
00:13:36,866 --> 0:13:38,536
iterates over all the tabs in

380
00:13:38,536 --> 0:13:40,366
the window and fills up three

381
00:13:40,366 --> 0:13:42,656
arrays, one for blocked

382
00:13:42,656 --> 0:13:47,106
resources, one for images, and

383
00:13:47,106 --> 0:13:48,496
one for titles.

384
00:13:49,906 --> 0:13:52,656
For each tab, we get a

385
00:13:52,656 --> 0:13:54,986
screenshot of the page's visible

386
00:13:54,986 --> 0:14:00,306
area, the title of each page

387
00:13:54,986 --> 0:14:00,306
area, the title of each page

388
00:14:00,306 --> 0:14:02,936
from the pages' properties, and

389
00:14:02,936 --> 0:14:04,446
the list of blocked resources

390
00:14:04,446 --> 0:14:05,316
for each page.

391
00:14:06,436 --> 0:14:08,306
We've also started overriding

392
00:14:08,466 --> 0:14:10,326
popover view controller to

393
00:14:10,326 --> 0:14:12,036
return our view controller.

394
00:14:12,346 --> 0:14:14,126
Let's take a look at our view

395
00:14:14,126 --> 0:14:14,706
controller.

396
00:14:16,356 --> 0:14:19,466
Set popover state, set some

397
00:14:19,466 --> 0:14:21,206
instance variables in the class,

398
00:14:21,716 --> 0:14:23,426
and then reloads the table view.

399
00:14:25,596 --> 0:14:28,106
The last thing we want to do is

400
00:14:28,106 --> 0:14:30,896
when the user clicks on one of

401
00:14:30,896 --> 0:14:33,816
these rows, we want to activate

402
00:14:33,816 --> 0:14:35,956
that tab and then dismiss the

403
00:14:35,956 --> 0:14:36,556
popover.

404
00:14:39,466 --> 0:14:40,986
When the table view selection

405
00:14:40,986 --> 0:14:43,976
changes, we activate the tab the

406
00:14:43,976 --> 0:14:46,266
user clicked on, and then

407
00:14:46,266 --> 0:14:47,266
dismiss the popover.

408
00:14:48,206 --> 0:14:49,436
Now let's build and run

409
00:14:49,556 --> 0:14:50,966
Animalify again.

410
00:14:58,256 --> 0:15:00,256
And we'll launch Safari again

411
00:14:58,256 --> 0:15:00,256
And we'll launch Safari again

412
00:15:00,826 --> 0:15:02,006
which loads our homepage.

413
00:15:02,566 --> 0:15:04,346
And you can see the extensions

414
00:15:04,346 --> 0:15:05,496
aren't turned on anymore.

415
00:15:06,076 --> 0:15:07,666
That's because you must allow

416
00:15:07,666 --> 0:15:09,656
unsigned extensions each time

417
00:15:09,656 --> 0:15:10,526
you launch Safari.

418
00:15:11,176 --> 0:15:12,456
Let's do that from the develop

419
00:15:12,456 --> 0:15:12,726
menu.

420
00:15:14,996 --> 0:15:17,966
And then we'll go to our app and

421
00:15:17,966 --> 0:15:18,846
have it take us to our

422
00:15:18,846 --> 0:15:19,346
extension.

423
00:15:20,806 --> 0:15:22,716
We'll turn on the extension and

424
00:15:22,716 --> 0:15:25,046
the Content Blocker and reload

425
00:15:25,046 --> 0:15:25,556
the page.

426
00:15:25,776 --> 0:15:28,566
We'll also open a couple more

427
00:15:28,566 --> 0:15:29,186
pages.

428
00:15:31,086 --> 0:15:32,176
You'll notice that when we

429
00:15:32,176 --> 0:15:33,866
change tabs away from

430
00:15:33,866 --> 0:15:36,176
bearseating.com, the toolbar

431
00:15:36,176 --> 0:15:37,586
item's badge is cleared.

432
00:15:38,416 --> 0:15:39,526
Let's open our popover.

433
00:15:40,776 --> 0:15:42,536
And you can see each tab in the

434
00:15:42,536 --> 0:15:42,966
window.

435
00:15:43,496 --> 0:15:45,456
In the first row, you can see

436
00:15:45,456 --> 0:15:47,066
that our Content Blocker blocked

437
00:15:47,066 --> 0:15:49,566
two resources from beardiet.com

438
00:15:49,566 --> 0:15:51,906
and one from bearseating.com.

439
00:15:52,396 --> 0:15:54,206
Let's activate that tab by

440
00:15:54,206 --> 0:15:56,316
clicking on the first row, and

441
00:15:56,316 --> 0:15:57,776
we're taken back to that tab,

442
00:15:58,166 --> 0:15:59,856
and the popover is dismissed.

443
00:16:00,316 --> 0:16:01,946
And those are just some of the

444
00:16:01,946 --> 0:16:03,636
new APIs that we've talked about

445
00:16:03,636 --> 0:16:03,826
today.

446
00:16:08,996 --> 0:16:10,996
The last thing I'd like to cover

447
00:16:11,146 --> 0:16:13,056
are some best practices about

448
00:16:13,056 --> 0:16:15,106
how to communicate between your

449
00:16:15,106 --> 0:16:17,236
Safari Extension and your app.

450
00:16:18,716 --> 0:16:20,346
Safari launches your app

451
00:16:20,346 --> 0:16:21,946
extension when necessary.

452
00:16:22,306 --> 0:16:23,746
There is no guarantee that your

453
00:16:23,746 --> 0:16:24,456
app is running.

454
00:16:25,706 --> 0:16:27,586
But if you have an app with an

455
00:16:27,586 --> 0:16:30,076
XPC service, your extension

456
00:16:30,276 --> 0:16:31,946
might want to communicate with

457
00:16:31,946 --> 0:16:33,166
that XPC service.

458
00:16:33,726 --> 0:16:35,836
Or you might want to share data

459
00:16:36,166 --> 0:16:38,106
between your Safari Extension

460
00:16:38,286 --> 0:16:38,996
and your app.

461
00:16:39,586 --> 0:16:40,646
Your extension could have

462
00:16:40,646 --> 0:16:42,326
preferences that the user

463
00:16:42,326 --> 0:16:43,826
configures in your app.

464
00:16:45,216 --> 0:16:47,366
To do this, make your Safari

465
00:16:47,366 --> 0:16:50,166
Extension and XPC service part

466
00:16:50,166 --> 0:16:51,936
of the same App Group as your

467
00:16:51,936 --> 0:16:52,176
app.

468
00:16:52,876 --> 0:16:54,436
This will allow your Safari

469
00:16:54,436 --> 0:16:56,636
Extension to look up named mock

470
00:16:56,636 --> 0:16:58,766
services in the same App Group

471
00:16:59,056 --> 0:17:00,436
and you can use the user

472
00:16:59,056 --> 0:17:00,436
and you can use the user

473
00:17:00,436 --> 0:17:02,766
defaults suiteName initializer

474
00:17:03,006 --> 0:17:04,715
to share data across the App

475
00:17:04,715 --> 0:17:05,096
Group.

476
00:17:06,106 --> 0:17:08,316
However, let's say the user

477
00:17:08,316 --> 0:17:10,165
performs an action in your app

478
00:17:10,356 --> 0:17:12,326
that is best handled by a Safari

479
00:17:12,326 --> 0:17:13,116
App Extension.

480
00:17:13,636 --> 0:17:15,185
For example, you're writing a

481
00:17:15,185 --> 0:17:17,126
password manager and the user

482
00:17:17,126 --> 0:17:19,205
selects a credential in your app

483
00:17:19,205 --> 0:17:19,726
to fill.

484
00:17:20,215 --> 0:17:21,656
There's no guarantee that your

485
00:17:21,656 --> 0:17:23,396
extension is running or that

486
00:17:23,396 --> 0:17:24,566
Safari is even running.

487
00:17:25,955 --> 0:17:28,435
There's an API you can call from

488
00:17:28,435 --> 0:17:30,256
your app to send a message to

489
00:17:30,256 --> 0:17:31,706
your Safari App Extension.

490
00:17:32,396 --> 0:17:34,466
Your app calls SFSafariApplication,

491
00:17:34,466 --> 0:17:36,866
dispatch message

492
00:17:37,046 --> 0:17:39,096
with name to extension with

493
00:17:39,096 --> 0:17:39,846
identifier.

494
00:17:40,616 --> 0:17:42,126
This method will only have an

495
00:17:42,126 --> 0:17:43,736
effect if your extension is

496
00:17:43,736 --> 0:17:46,156
enabled and the extension must

497
00:17:46,156 --> 0:17:48,016
be in the same app bundle as the

498
00:17:48,016 --> 0:17:49,426
code that calls the API.

499
00:17:51,036 --> 0:17:53,166
Calling this API will send a

500
00:17:53,166 --> 0:17:55,466
message to Safari, launching it

501
00:17:55,466 --> 0:17:56,286
if necessary.

502
00:17:57,696 --> 0:17:59,866
And Safari will forward this

503
00:17:59,866 --> 0:18:01,576
message to your Safari App

504
00:17:59,866 --> 0:18:01,576
message to your Safari App

505
00:18:01,576 --> 0:18:02,126
Extension.

506
00:18:03,286 --> 0:18:05,356
Your Safari App Extension can

507
00:18:05,356 --> 0:18:08,416
listen for these messages by

508
00:18:08,416 --> 0:18:10,576
implementing message received

509
00:18:10,656 --> 0:18:12,866
from containing app with name

510
00:18:13,116 --> 0:18:15,586
user info in your extension's

511
00:18:15,586 --> 0:18:16,786
principal object.

512
00:18:17,506 --> 0:18:19,346
Let's take a step back and look

513
00:18:19,346 --> 0:18:21,116
at all the possible ways your

514
00:18:21,236 --> 0:18:23,296
app and your Safari Extensions

515
00:18:23,516 --> 0:18:25,216
can communicate and share data.

516
00:18:27,176 --> 0:18:29,726
If your app and Safari Extension

517
00:18:29,726 --> 0:18:31,986
are in the same App Group, you

518
00:18:31,986 --> 0:18:33,956
can use NSXPCConnection to

519
00:18:33,956 --> 0:18:35,856
communicate between them or

520
00:18:35,856 --> 0:18:37,966
share data using user defaults.

521
00:18:38,236 --> 0:18:40,906
If you want to send a message

522
00:18:40,996 --> 0:18:43,136
from your app to your Safari App

523
00:18:43,136 --> 0:18:45,736
Extension, you can use SFSafariApplication

524
00:18:45,736 --> 0:18:47,806
dispatch message to

525
00:18:47,806 --> 0:18:50,736
send the message, and listen for

526
00:18:50,736 --> 0:18:52,556
message received from containing

527
00:18:52,556 --> 0:18:54,816
app in your Safari App Extension

528
00:18:54,906 --> 0:18:56,036
to handle the message.

529
00:18:56,456 --> 0:18:59,266
And that's how you communicate

530
00:18:59,366 --> 0:19:01,256
between your app and your Safari

531
00:18:59,366 --> 0:19:01,256
between your app and your Safari

532
00:19:01,256 --> 0:19:01,786
Extension.

533
00:19:04,136 --> 0:19:05,486
That concludes what we're

534
00:19:05,486 --> 0:19:06,556
covering for today.

535
00:19:07,186 --> 0:19:08,706
A few of the major things I'd

536
00:19:08,706 --> 0:19:10,106
like you to take away from this

537
00:19:10,106 --> 0:19:12,896
video are, you can distribute

538
00:19:12,896 --> 0:19:14,476
your Safari Extensions through

539
00:19:14,476 --> 0:19:16,106
the Mac App Store or as a

540
00:19:16,106 --> 0:19:17,566
notarized app through your

541
00:19:17,566 --> 0:19:18,086
website.

542
00:19:19,246 --> 0:19:20,736
You can associate your Content

543
00:19:20,736 --> 0:19:22,606
Blocker with your Safari App

544
00:19:22,606 --> 0:19:24,636
Extension so you can find out

545
00:19:24,636 --> 0:19:25,856
when your Content Blocker

546
00:19:25,856 --> 0:19:27,436
performs a blocking action.

547
00:19:28,626 --> 0:19:29,936
You can use App Groups to

548
00:19:29,936 --> 0:19:31,886
communicate between your Safari

549
00:19:31,886 --> 0:19:33,896
Extension and your app.

550
00:19:35,206 --> 0:19:36,916
All of these APIs we talked

551
00:19:36,916 --> 0:19:38,766
about today were implemented

552
00:19:38,766 --> 0:19:40,396
because of your feedback and

553
00:19:40,396 --> 0:19:41,056
requests.

554
00:19:41,436 --> 0:19:43,346
Please continue to keep filing

555
00:19:43,346 --> 0:19:45,026
enhancement requests and

556
00:19:45,026 --> 0:19:46,636
reaching out on the forums.

557
00:19:46,976 --> 0:19:48,276
Thanks, everyone, for taking the

558
00:19:48,276 --> 0:19:49,976
time to listen, and we can't

559
00:19:49,976 --> 0:19:51,396
wait to see the extensions you

560
00:19:51,396 --> 0:19:51,916
come up with.
