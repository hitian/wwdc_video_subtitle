1
00:00:07,574 --> 0:00:11,411
大家好 我是Jared McGann

2
00:00:12,679 --> 0:00:16,015
watchOS 5中 Apple发布了

3
00:00:16,082 --> 0:00:17,651
带有图形元素

4
00:00:18,886 --> 0:00:21,655
watchOS 6中的

5
00:00:21,922 --> 0:00:23,023
用新的调色 模式

6
00:00:24,892 --> 0:00:28,595
任何带图形元素的表盘

7
00:00:29,196 --> 0:00:32,665
下面几个例子就是

8
00:00:33,534 --> 0:00:36,870
这些图形元素包括三种数据类型

9
00:00:36,937 --> 0:00:38,572
仪表 文本 图形

10
00:00:39,273 --> 0:00:42,176
系统改变了它们的色彩外观

11
00:00:42,743 --> 0:00:43,810
我们分别来看

12
00:00:44,945 --> 0:00:47,314
在色彩环境中 仪表显示为

13
00:00:47,381 --> 0:00:49,683
纯色 而不是渐变色

14
00:00:49,750 --> 0:00:51,785
（仪表的调色）

15
00:00:51,852 --> 0:00:54,054
仪表的颜色由系统决定

16
00:00:54,121 --> 0:00:56,356
根据用户选择的颜色

17
00:00:57,090 --> 0:00:58,659
如果元素需要通过颜色

18
00:00:58,725 --> 0:01:00,794
传递仪表上的信息

19
00:00:58,725 --> 0:01:00,794
传递仪表上的信息

20
00:01:00,861 --> 0:01:01,962
你就要重新考虑

21
00:01:02,029 --> 0:01:04,565
如何将信息显示在元素中

22
00:01:06,099 --> 0:01:06,967
（文本的调色）

23
00:01:07,034 --> 0:01:10,204
文本在色彩环境中也是单色

24
00:01:10,571 --> 0:01:12,406
它的颜色也是由系统决定的

25
00:01:12,472 --> 0:01:14,174
根据用户选择的颜色

26
00:01:15,275 --> 0:01:17,911
多色文本被简化成单色

27
00:01:18,445 --> 0:01:20,914
如活动圆环所示

28
00:01:22,182 --> 0:01:23,250
（图片的调色）

29
00:01:23,317 --> 0:01:26,987
最后 在色彩环境中

30
00:01:28,088 --> 0:01:31,658
但我们有新的API提供替代图形

31
00:01:33,026 --> 0:01:33,961
（数据提供程序）

32
00:01:34,027 --> 0:01:36,797
在探索新API之前 我们退回一步

33
00:01:36,864 --> 0:01:38,765
了解下数据提供程序

34
00:01:39,700 --> 0:01:42,736
ClockKit

35
00:01:43,337 --> 0:01:45,873
这些程序管理

36
00:01:45,939 --> 0:01:47,674
会在元素里展示

37
00:01:50,143 --> 0:01:52,679
这是全彩图片提供程序

38
00:01:54,548 --> 0:01:56,917
图片属性定义为全彩图片

39
00:01:56,984 --> 0:01:58,819
由元素显示

40
00:02:00,354 --> 0:02:02,456
然后是

41
00:02:02,523 --> 0:02:05,792
它是个简洁的标签

42
00:02:06,660 --> 0:02:09,763
如何将替代图片加入调色环境呢

43
00:02:10,898 --> 0:02:15,335
WatchOS 6的

44
00:02:15,402 --> 0:02:16,803
tintedImageProvider

45
00:02:17,504 --> 0:02:18,672
这是个可选项属性

46
00:02:18,739 --> 0:02:21,441
可以单独将一个图形放入调色程序

47
00:02:21,508 --> 0:02:24,211
如果不想降低全彩图片饱和度

48
00:02:25,212 --> 0:02:28,348
这个属性的类型是

49
00:02:29,016 --> 0:02:30,684
选择这个类 是因为可以

50
00:02:30,751 --> 0:02:33,320
同时提供单图形和双图形

51
00:02:33,387 --> 0:02:34,655
给调色程序

52
00:02:37,057 --> 0:02:39,793
下面来仔细看看

53
00:02:40,093 --> 0:02:41,929
从watchOS 2开始使用

54
00:02:42,863 --> 0:02:46,033
首先是CLKFullColorImageProvider

55
00:02:46,099 --> 0:02:48,502
它并不是CLKImageProvider的衍生

56
00:02:48,936 --> 0:02:50,737
它们是完全不同的两个类

57
00:02:51,538 --> 0:02:53,807
CLKImageProvider

58
00:02:53,874 --> 0:02:56,643
管理元素中显示的模板图形

59
00:02:57,311 --> 0:03:00,681
显示该元素的表盘

60
00:02:57,311 --> 0:03:00,681
显示该元素的表盘

61
00:03:00,747 --> 0:03:02,416
以及使用什么颜色

62
00:03:04,284 --> 0:03:07,921
第一个属性是单图形

63
00:03:08,288 --> 0:03:09,923
这是唯一必需的属性

64
00:03:11,758 --> 0:03:12,993
下面是染色

65
00:03:13,493 --> 0:03:15,829
在一些传统的元素环境中

66
00:03:15,896 --> 0:03:17,497
该颜色是模板图片

67
00:03:17,564 --> 0:03:18,866
在元素中的显示

68
00:03:19,466 --> 0:03:22,302
而在图形环境中

69
00:03:22,369 --> 0:03:24,271
因为颜色由系统决定

70
00:03:24,338 --> 0:03:26,740
并受用户色彩选择的影响

71
00:03:28,175 --> 0:03:30,010
所以这里的双图形

72
00:03:30,077 --> 0:03:32,746
包括了双重图片背景

73
00:03:32,813 --> 0:03:35,148
和双重图片前景属性

74
00:03:38,285 --> 0:03:43,056
传统元素在多彩环境中使用双图形

75
00:03:43,824 --> 0:03:47,594
而图形元素是在调色环境中

76
00:03:48,195 --> 0:03:52,232
如适用 双图形优先于单图形

77
00:03:53,233 --> 0:03:55,669
双图形包含一个前景图片

78
00:03:55,736 --> 0:03:57,604
叠加在背景图片之上

79
00:03:58,272 --> 0:04:00,007
两个图片都是模板图片

80
00:03:58,272 --> 0:04:00,007
两个图片都是模板图片

81
00:04:00,574 --> 0:04:03,677
在传统元素中

82
00:04:03,744 --> 0:04:07,014
应用于背景图片

83
00:04:07,814 --> 0:04:11,018
而在染色图形元素中 如上所述

84
00:04:11,084 --> 0:04:12,319
着色是被忽略的

85
00:04:12,986 --> 0:04:15,856
系统会决定前景和背景的颜色

86
00:04:15,923 --> 0:04:18,225
基于用户的色彩选择

87
00:04:20,994 --> 0:04:23,497
下面演示几个场景

88
00:04:23,564 --> 0:04:25,465
染色图形元素中

89
00:04:26,433 --> 0:04:30,304
首先是全彩图形的不饱和化

90
00:04:30,904 --> 0:04:33,340
这里全彩图形的饱和度降低了

91
00:04:33,407 --> 0:04:35,309
差不多为如右图中的灰度

92
00:04:37,678 --> 0:04:38,879
代码上的操作

93
00:04:38,946 --> 0:04:41,949
只要初始化

94
00:04:42,015 --> 0:04:44,751
无需tintedImageProvider

95
00:04:45,519 --> 0:04:48,155
若tintedImageProvider

96
00:04:48,222 --> 0:04:51,625
系统显示不饱和的全彩图形

97
00:04:54,027 --> 0:04:54,862
在其他场景中

98
00:04:54,928 --> 0:04:56,864
可能需要替代图形

99
00:04:56,930 --> 0:04:58,298
给调色环境

100
00:04:58,999 --> 0:05:01,335
可能因为全彩图形的饱和度不够低

101
00:04:58,999 --> 0:05:01,335
可能因为全彩图形的饱和度不够低

102
00:05:01,702 --> 0:05:05,005
又或者某个标志的颜色不对

103
00:05:07,140 --> 0:05:10,143
代码中要创建一个

104
00:05:10,210 --> 0:05:12,479
带上需要的单图片模板

105
00:05:12,913 --> 0:05:13,847
然后提供

106
00:05:13,914 --> 0:05:16,850
CLKFullColorImageProvider

107
00:05:17,184 --> 0:05:18,919
和全彩图形

108
00:05:19,686 --> 0:05:20,988
在全彩环境中

109
00:05:21,054 --> 0:05:23,223
ClockKit会使用全彩图形

110
00:05:23,490 --> 0:05:27,094
在调色环境中

111
00:05:27,160 --> 0:05:28,161
会被采用

112
00:05:31,064 --> 0:05:32,866
值得注意的是 你也可以提供

113
00:05:32,933 --> 0:05:36,136
同样的全彩图片

114
00:05:36,203 --> 0:05:39,273
这个图片会被模板化

115
00:05:39,806 --> 0:05:43,310
这个技术被用于

116
00:05:46,146 --> 0:05:49,016
最后 如果需要有替换性的双图形

117
00:05:49,082 --> 0:05:50,317
在调色环境中

118
00:05:53,287 --> 0:05:56,190
为此 需创建一个

119
00:05:56,256 --> 0:05:58,892
同时带有单图形和双图形模板

120
00:05:59,426 --> 0:06:00,594
然后将这个对象带入

121
00:05:59,426 --> 0:06:00,594
然后将这个对象带入

122
00:06:00,661 --> 0:06:03,864
CLKFullColorImageProvider

123
00:06:04,131 --> 0:06:05,899
和全彩图片

124
00:06:06,400 --> 0:06:08,969
在染色环境中

125
00:06:09,036 --> 0:06:11,939
使用单图形还是双图形

126
00:06:14,007 --> 0:06:16,076
这个图表来自

127
00:06:16,143 --> 0:06:18,412
涵盖了多种图形元素样式

128
00:06:20,914 --> 0:06:23,817
这是调色后的样子

129
00:06:26,019 --> 0:06:26,887
（划重点）

130
00:06:26,954 --> 0:06:27,855
谨记 ClockKit

131
00:06:27,921 --> 0:06:31,124
在调色环境下 会改变元素的外观

132
00:06:32,025 --> 0:06:35,762
色彩图形元素的颜色由系统决定

133
00:06:35,829 --> 0:06:38,131
根据用户的色彩选择

134
00:06:38,832 --> 0:06:39,733
最后

135
00:06:39,800 --> 0:06:43,403
我们提供的新API可以让你

136
00:06:43,470 --> 0:06:45,506
在调色环境中显示

137
00:06:46,974 --> 0:06:48,475
（更多信息）

138
00:06:48,542 --> 0:06:51,211
如果你没有用过

139
00:06:51,278 --> 0:06:54,548
这些视频可能有用 网址
