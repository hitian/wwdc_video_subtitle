1
00:00:06,073 --> 0:00:07,341
（通用链接的新功能）

2
00:00:07,407 --> 0:00:09,543
欢迎参加我们的通用链接课程

3
00:00:10,077 --> 0:00:11,612
我叫Jonathan Grynspan

4
00:00:11,678 --> 0:00:13,947
我在Apple的核心框架团队工作

5
00:00:14,948 --> 0:00:18,285
今天 我将向您展示如何在

6
00:00:19,219 --> 0:00:21,622
我们在IOS 9中引入通用链接

7
00:00:21,688 --> 0:00:25,425
作为在网络和app中

8
00:00:26,460 --> 0:00:28,462
今天 我将向您展示我们

9
00:00:28,529 --> 0:00:29,530
已经完成的增强功能

10
00:00:30,397 --> 0:00:33,233
无论您是已经在iOS

11
00:00:33,567 --> 0:00:35,569
还是正在将它们添加到

12
00:00:36,003 --> 0:00:38,772
您都需要密切关注我将要讨论的变化

13
00:00:40,707 --> 0:00:43,644
首先 我们来谈谈什么是通用链接

14
00:00:45,512 --> 0:00:49,783
通用链接是HTTP或

15
00:00:50,050 --> 0:00:52,119
Apple的操作系统将其识别为

16
00:00:52,319 --> 0:00:55,789
无论是在网上还是在您的app中

17
00:00:56,723 --> 0:00:59,826
这意味着 无论您的用户是否

18
00:00:59,893 --> 0:01:01,695
安装了app或者只是还没有下载

19
00:00:59,893 --> 0:01:01,695
安装了app或者只是还没有下载

20
00:01:02,095 --> 0:01:03,830
一个URL都可以表示该内容

21
00:01:04,531 --> 0:01:07,167
它们是提高用户在app中

22
00:01:08,368 --> 0:01:11,872
iOS 9和tvOS 10中

23
00:01:12,706 --> 0:01:15,175
我很高兴地宣布 无论您使用的

24
00:01:15,242 --> 0:01:16,710
是AppKit还是UIKit

25
00:01:17,344 --> 0:01:19,680
介绍带有macOS 10.15的

26
00:01:20,380 --> 0:01:22,249
我一会儿再详细介绍

27
00:01:23,116 --> 0:01:27,054
通用链接在您的app

28
00:01:27,754 --> 0:01:29,890
您的app在Xcode中采用了

29
00:01:29,957 --> 0:01:32,259
一个权限 指示它可以代表哪些域

30
00:01:32,726 --> 0:01:35,195
您的网络服务器采用了

31
00:01:35,262 --> 0:01:38,165
该文件包含了关于您的app中

32
00:01:38,332 --> 0:01:39,700
可以表示其域的哪些部分的更多细节

33
00:01:40,601 --> 0:01:42,135
这种双向安全握手确保没有人

34
00:01:42,202 --> 0:01:46,006
可以将用户重定向到他们

35
00:01:47,508 --> 0:01:50,878
我们建议您现在使用自定义URL

36
00:01:51,078 --> 0:01:53,447
方案的地方从今天开始

37
00:01:54,281 --> 0:01:56,717
自定义URL方案本质上不安全

38
00:01:57,084 --> 0:01:59,186
并且可能被恶意开发人员滥用

39
00:01:59,720 --> 0:02:02,723
强烈建议不要使用自定义网址方案

40
00:01:59,720 --> 0:02:02,723
强烈建议不要使用自定义网址方案

41
00:02:05,058 --> 0:02:09,062
既然我们已经知道了什么是通用链接

42
00:02:09,663 --> 0:02:10,997
我们将从您的网络服务器开始

43
00:02:13,100 --> 0:02:17,004
您的网络服务器必须

44
00:02:17,471 --> 0:02:21,642
HTTP不安全 不能用于验证

45
00:02:21,842 --> 0:02:23,510
app和网站之间的关联

46
00:02:24,678 --> 0:02:27,714
用于签名HTTPS证书的根证书

47
00:02:27,881 --> 0:02:30,050
必须被操作系统识别

48
00:02:30,617 --> 0:02:32,586
不支持自定义根证书

49
00:02:34,087 --> 0:02:36,790
生成证书并配置服务器之后

50
00:02:37,157 --> 0:02:39,660
添加Apple-app-site-association文件

51
00:02:40,294 --> 0:02:41,495
这是一个JSON文件

52
00:02:41,562 --> 0:02:43,163
稍后我们将讨论这种格式

53
00:02:44,064 --> 0:02:46,166
当您的app安装在

54
00:02:46,333 --> 0:02:48,135
操作系统将下载该文件

55
00:02:48,202 --> 0:02:51,305
以确定服务器将允许您的

56
00:02:52,105 --> 0:02:55,342
系统还定期下载此文件的更新

57
00:02:56,210 --> 0:02:59,513
通用链接是这个文件中

58
00:03:00,547 --> 0:03:02,216
这个文件应该位于

59
00:03:02,449 --> 0:03:04,818
HTTPS://

60
00:03:05,185 --> 0:03:06,186
您的域名

61
00:03:06,587 --> 0:03:08,522
/.well-known

62
00:03:08,589 --> 0:03:11,024
/apple-app-site-association

63
00:03:11,925 --> 0:03:13,427
不推荐使用其他路径

64
00:03:14,194 --> 0:03:17,798
过去 我们讨论过注册您的

65
00:03:18,332 --> 0:03:21,335
这从来不是支持普遍联系的必要步骤

66
00:03:21,401 --> 0:03:22,769
所以现在它被弃用了

67
00:03:23,871 --> 0:03:25,639
支持已签名的JSON文件

68
00:03:25,706 --> 0:03:29,142
其他路径的JSON文件

69
00:03:31,078 --> 0:03:32,179
这就解决了

70
00:03:32,346 --> 0:03:35,282
让我们看看您的

71
00:03:36,083 --> 0:03:38,485
如果您的网络服务器上

72
00:03:38,552 --> 0:03:39,953
那么这看起来可能很熟悉

73
00:03:40,821 --> 0:03:43,056
但是 我们今天要介绍一些变化

74
00:03:43,957 --> 0:03:47,060
顶层是字典 其关键字是服务类型

75
00:03:47,461 --> 0:03:50,397
对于通用链接 关键是applinks

76
00:03:50,831 --> 0:03:52,733
但是也可以使用其他服务

77
00:03:53,534 --> 0:03:55,836
我们将只关注通用链接

78
00:03:56,770 --> 0:03:59,973
在顶层的键下面是

79
00:04:00,541 --> 0:04:02,242
如果您的目标是iOS 13

80
00:04:02,576 --> 0:04:05,245
tvOS 13和

81
00:04:05,646 --> 0:04:08,215
您不需要Apps键

82
00:04:09,049 --> 0:04:10,751
如果您继续提供支持

83
00:04:10,817 --> 0:04:14,454
对于iOS 12、tvOS 12

84
00:04:14,855 --> 0:04:17,457
对于通用链接

85
00:04:18,825 --> 0:04:21,228
Details键包含一个字典数组

86
00:04:21,394 --> 0:04:24,898
一个特定app的通用链接配置

87
00:04:25,832 --> 0:04:28,502
过去 我们在这里支持使用字典结构

88
00:04:28,569 --> 0:04:31,638
而不是数组

89
00:04:33,106 --> 0:04:37,377
在Details键下面是一个appID键

90
00:04:37,978 --> 0:04:41,615
您的app标识符由一个

91
00:04:41,682 --> 0:04:42,716
由Apple提供的字母数字

92
00:04:43,150 --> 0:04:45,586
10字符前缀

93
00:04:46,954 --> 0:04:49,923
前缀可能等于也可能不等于

94
00:04:50,123 --> 0:04:52,759
检查开发人员门户以确认

95
00:04:53,493 --> 0:04:57,064
如果您有多个具有相同通用链接配置

96
00:04:57,531 --> 0:04:59,700
的app

97
00:05:00,434 --> 0:05:02,336
如果您的目标是今年的发行版

98
00:05:02,536 --> 0:05:04,171
您可以使用复数appIDs键

99
00:05:04,404 --> 0:05:06,240
来减小该文件的大小

100
00:05:07,007 --> 0:05:09,810
该键的值是一个app标识符数组

101
00:05:10,444 --> 0:05:12,479
如果您需要支持以前的版本

102
00:05:12,546 --> 0:05:15,549
您应该继续为每个app

103
00:05:16,617 --> 0:05:17,851
接下来是路径键

104
00:05:18,285 --> 0:05:20,487
此键包含路径模式数组

105
00:05:21,021 --> 0:05:23,557
模式匹配与在终端中执行相同的方式

106
00:05:24,057 --> 0:05:27,160
星号用于表示多个通配符

107
00:05:27,494 --> 0:05:29,630
而问号只匹配一个字符

108
00:05:30,631 --> 0:05:34,268
从今年开始

109
00:05:35,369 --> 0:05:37,671
此键的值是一个字典数组

110
00:05:37,738 --> 0:05:40,641
其中每个字典都包含零个

111
00:05:40,841 --> 0:05:41,942
或多个URL组件 以进行模式匹配

112
00:05:42,776 --> 0:05:45,512
与前面一样

113
00:05:45,746 --> 0:05:47,114
该组件的键是正斜杠

114
00:05:48,081 --> 0:05:51,185
如果需要支持以前的版本

115
00:05:51,818 --> 0:05:54,054
iOS 13、tvOS 13

116
00:05:54,254 --> 0:05:57,891
如果组件键存在

117
00:05:58,926 --> 0:06:01,595
现在 您可以匹配URL的

118
00:05:58,926 --> 0:06:01,595
现在 您可以匹配URL的

119
00:06:01,929 --> 0:06:03,063
它的键是散列标记

120
00:06:03,463 --> 0:06:06,099
您还可以匹配Query组件

121
00:06:07,000 --> 0:06:09,770
现在 很多URL

122
00:06:09,837 --> 0:06:13,440
将查询组件分成键值对 称为查询项

123
00:06:14,041 --> 0:06:17,444
对于查询组件 可以指定字典而不是

124
00:06:17,511 --> 0:06:18,378
字符串作为其值和模式匹配

125
00:06:18,812 --> 0:06:20,948
模式匹配单个查询项

126
00:06:21,648 --> 0:06:23,617
URL可以重复查询项名称

127
00:06:23,684 --> 0:06:25,152
并且操作系统将要求给定查询项

128
00:06:25,219 --> 0:06:28,589
名称的所有实例都匹配您的模式

129
00:06:29,523 --> 0:06:32,192
没有值的查询项和没有查询项的

130
00:06:32,259 --> 0:06:33,760
查询项由操作系统处理

131
00:06:34,027 --> 0:06:36,430
就好像它们的值等于空字符串一样

132
00:06:37,965 --> 0:06:40,567
要使组件字典匹配候选URL

133
00:06:40,868 --> 0:06:42,870
所有指定的组件必须匹配

134
00:06:43,403 --> 0:06:44,938
如果不指定组件

135
00:06:45,005 --> 0:06:46,907
操作系统的默认行为

136
00:06:47,107 --> 0:06:48,842
就是简单地忽略那个组件

137
00:06:49,409 --> 0:06:51,845
例如 如果您的app不关心

138
00:06:51,912 --> 0:06:53,680
URL的Fragment组件

139
00:06:54,081 --> 0:06:55,849
您不需要在此文件中指定它

140
00:06:56,517 --> 0:06:58,151
您的网站可能有一些部分

141
00:06:58,218 --> 0:07:00,554
还不能在您的app中显示

142
00:06:58,218 --> 0:07:00,554
还不能在您的app中显示

143
00:07:01,221 --> 0:07:04,758
您可以通过使用布尔值True

144
00:07:05,025 --> 0:07:06,393
指定Exclude键

145
00:07:07,227 --> 0:07:09,763
此键具有与在旧路径键中

146
00:07:09,830 --> 0:07:11,498
使用的Not关键字相同的行为

147
00:07:12,032 --> 0:07:14,902
在使用组件字典时不支持该关键字

148
00:07:16,904 --> 0:07:20,274
这里有几个URL示例

149
00:07:20,974 --> 0:07:22,476
我正在开发一个订餐app

150
00:07:22,643 --> 0:07:26,146
我使用通用链接将用户

151
00:07:27,014 --> 0:07:29,449
在左边

152
00:07:29,816 --> 0:07:31,919
一些JSON 在右边

153
00:07:32,786 --> 0:07:35,956
首先 我想匹配我网站上

154
00:07:36,390 --> 0:07:40,060
它们都位于一个路径上

155
00:07:40,460 --> 0:07:42,062
第二个组件是Order

156
00:07:42,396 --> 0:07:44,631
之后就没有其他的路径组件了

157
00:07:45,832 --> 0:07:48,669
此模式将匹配一个URL

158
00:07:49,069 --> 0:07:49,937
午饭时间到了

159
00:07:51,338 --> 0:07:53,240
接下来 我知道我的很多顾客

160
00:07:53,307 --> 0:07:55,342
会想在他们的玉米饼上放奶酪

161
00:07:55,576 --> 0:07:57,377
因此 我将匹配路径

162
00:07:57,444 --> 0:08:00,047
任何URL 以及指定名为

163
00:07:57,444 --> 0:08:00,047
任何URL 以及指定名为

164
00:08:00,848 --> 0:08:03,984
奶酪的查询项的URL

165
00:08:04,585 --> 0:08:07,554
您将注意到 我从查询项的值中

166
00:08:07,721 --> 0:08:09,656
指定了一个问号和星号作为模式

167
00:08:10,457 --> 0:08:13,627
由单个星号组成的模式

168
00:08:13,794 --> 0:08:15,028
包括空字符串 而缺少的查询项

169
00:08:15,429 --> 0:08:18,498
具有与空字符串等价的值

170
00:08:19,032 --> 0:08:22,436
因此 要匹配

171
00:08:22,836 --> 0:08:24,271
我指定一个问号

172
00:08:24,338 --> 0:08:27,174
然后用星号匹配任何其他字符

173
00:08:28,041 --> 0:08:29,443
与我们的第三个URL相匹配

174
00:08:31,245 --> 0:08:33,780
第四个和第五个URL

175
00:08:34,581 --> 0:08:35,948
但这是有原因的

176
00:08:36,517 --> 0:08:39,285
我的网站也有很多四位数

177
00:08:39,352 --> 0:08:40,621
app可以处理

178
00:08:40,988 --> 0:08:42,489
但如果它们以1开头

179
00:08:42,956 --> 0:08:44,458
我希望它们留在浏览器中

180
00:08:45,192 --> 0:08:48,295
因为操作系统将从上到下

181
00:08:48,362 --> 0:08:49,429
所以我们首先将以1开头的

182
00:08:49,796 --> 0:08:53,166
优惠券代码标记为排除

183
00:08:54,234 --> 0:08:57,437
这告诉系统 如果找到匹配项

184
00:08:57,704 --> 0:09:00,274
就停止在这里查找

185
00:08:57,704 --> 0:09:00,274
就停止在这里查找

186
00:09:00,941 --> 0:09:02,809
然后 任何其他优惠券都将匹配

187
00:09:02,876 --> 0:09:04,878
第四个也是最后一个组件字典

188
00:09:08,081 --> 0:09:09,449
在我们进入您的app之前

189
00:09:09,650 --> 0:09:12,352
让我们来讨论一下如何支持国际观众

190
00:09:13,453 --> 0:09:15,522
URL始终使用ASCII编码

191
00:09:15,589 --> 0:09:17,925
所以组件匹配也是用

192
00:09:18,825 --> 0:09:20,627
如果需要匹配当前的

193
00:09:20,861 --> 0:09:22,996
并像在URL中那样对它们进行编码

194
00:09:23,931 --> 0:09:25,732
由于存在组件并对其进行编码

195
00:09:25,799 --> 0:09:27,768
Unicode字符可以由

196
00:09:27,935 --> 0:09:29,436
多个ASCII字符表示

197
00:09:29,703 --> 0:09:32,506
当您构建JSON时

198
00:09:33,640 --> 0:09:34,775
您可能想为您支持的

199
00:09:34,842 --> 0:09:37,344
每个国家提供特定于

200
00:09:37,411 --> 0:09:38,846
国家的模式

201
00:09:39,413 --> 0:09:41,815
这大大增加了JSON的大小

202
00:09:42,616 --> 0:09:45,018
如果国家之间的模式匹配是一致的

203
00:09:45,252 --> 0:09:47,387
则可以通过简化JSON

204
00:09:47,454 --> 0:09:48,755
来减少服务器之间的流量

205
00:09:49,523 --> 0:09:52,526
例如 如果您使用两个字母

206
00:09:52,860 --> 0:09:54,895
的国家代码来分隔内容

207
00:09:55,128 --> 0:09:57,197
您以前使用这些国家代码的

208
00:09:57,898 --> 0:10:00,067
其他更复杂的模式

209
00:09:57,898 --> 0:10:00,067
其他更复杂的模式

210
00:10:00,367 --> 0:10:01,602
也可以很容易地匹配

211
00:10:02,469 --> 0:10:05,138
如果遇到带有无效国家代码

212
00:10:05,205 --> 0:10:06,840
或特定于语言环境的标识符的URL

213
00:10:07,040 --> 0:10:09,042
请将其视为用户的当前语言环境

214
00:10:10,544 --> 0:10:13,380
从这个版本开始 操作系统将根据

215
00:10:13,447 --> 0:10:15,582
用户最可能浏览的位置对

216
00:10:15,782 --> 0:10:18,218
apple-app-site-association

217
00:10:18,752 --> 0:10:20,988
我们仍然会在安装app时下载它们

218
00:10:21,054 --> 0:10:22,456
但是优先级不同

219
00:10:23,156 --> 0:10:26,293
顶级域名.com

220
00:10:26,660 --> 0:10:27,961
是高优先级域

221
00:10:28,028 --> 0:10:30,831
因为它们占了全球互联网流量的

222
00:10:31,698 --> 0:10:34,568
国家代码TLD

223
00:10:34,801 --> 0:10:37,738
如果国际化的TLD

224
00:10:37,804 --> 0:10:40,107
设置匹配 那么它们也会被优先化

225
00:10:40,541 --> 0:10:42,776
例如 中国的普通用户

226
00:10:42,843 --> 0:10:46,280
访问中国ccTLD下的域名的

227
00:10:46,446 --> 0:10:49,683
可能性比访问意大利或俄罗斯

228
00:10:52,486 --> 0:10:55,222
因此 现在您的服务器

229
00:10:55,455 --> 0:10:56,423
让我们更新您的app

230
00:10:58,692 --> 0:11:01,995
在Xcode中打开项目

231
00:10:58,692 --> 0:11:01,995
在Xcode中打开项目

232
00:11:02,429 --> 0:11:04,531
添加关联域功能

233
00:11:05,132 --> 0:11:07,434
这将向选定的目标添加一个新的权限

234
00:11:08,035 --> 0:11:10,437
您可以直接从该视图修改此权限

235
00:11:13,674 --> 0:11:14,875
此权限的值是表单服务

236
00:11:14,942 --> 0:11:18,712
类型冒号域名的字符串数组

237
00:11:19,346 --> 0:11:21,849
对于通用链接

238
00:11:21,915 --> 0:11:24,585
就像在您的

239
00:11:25,352 --> 0:11:27,955
这个数组中的值的顺序被系统忽略

240
00:11:29,022 --> 0:11:31,758
在这里 我们声明

241
00:11:31,825 --> 0:11:34,061
例如www.example.com

242
00:11:34,928 --> 0:11:36,396
当您的app被安装时

243
00:11:36,463 --> 0:11:39,867
操作系统将访问

244
00:11:40,267 --> 0:11:43,504
寻找我们刚刚讨论过的

245
00:11:44,037 --> 0:11:47,674
如果它存在 并且它包含这个app

246
00:11:47,875 --> 0:11:49,443
的app标识符的信息

247
00:11:50,310 --> 0:11:52,646
还可以指示对给定域的子域的

248
00:11:52,713 --> 0:11:55,015
通配符支持 如下所示

249
00:11:55,682 --> 0:11:58,619
在本例中 此时操作系统将访问

250
00:11:58,952 --> 0:12:00,721
这次没有www

251
00:11:58,952 --> 0:12:00,721
这次没有www

252
00:12:01,989 --> 0:12:05,058
在通用链接查找期间

253
00:12:05,259 --> 0:12:06,393
具有更高的优先级

254
00:12:07,127 --> 0:12:09,830
在这种情况下 这意味着当一个系统

255
00:12:09,897 --> 0:12:12,165
在www.example.com

256
00:12:12,666 --> 0:12:14,701
它会尝试在从父域获得模式

257
00:12:14,935 --> 0:12:16,837
之前匹配该域的模式

258
00:12:17,804 --> 0:12:19,973
只有在完全限定子域中

259
00:12:20,040 --> 0:12:22,609
才会匹配来自父域的模式

260
00:12:23,944 --> 0:12:26,980
最后 这里是一个国际化域的例子

261
00:12:27,648 --> 0:12:29,449
因为URL总是ASCII

262
00:12:29,716 --> 0:12:33,253
您的国际化域名将需要使用

263
00:12:33,921 --> 0:12:37,457
有关Punycode的更多信息

264
00:12:40,093 --> 0:12:42,663
现在 您的app声明了对某些域

265
00:12:42,729 --> 0:12:45,332
的支持 您需要在

266
00:12:46,233 --> 0:12:49,536
通用链接是基于

267
00:12:49,803 --> 0:12:51,405
的NSUserActivity类

268
00:12:52,339 --> 0:12:54,675
您将需要一个处理程序

269
00:12:55,242 --> 0:12:58,245
如果您已经支持传递 或者其他

270
00:12:58,478 --> 0:13:00,747
类似的技术 您的app委托中

271
00:12:58,478 --> 0:13:00,747
类似的技术 您的app委托中

272
00:13:01,448 --> 0:13:02,683
该方法返回一个Bool

273
00:13:02,883 --> 0:13:05,719
如果您能够成功打开用户活动

274
00:13:05,986 --> 0:13:06,987
如果不能 则返回False

275
00:13:08,088 --> 0:13:09,356
如果您正在使用

276
00:13:09,656 --> 0:13:11,458
就可以使用类似的委托方法

277
00:13:12,092 --> 0:13:13,227
如果您正在使用AppKit

278
00:13:13,393 --> 0:13:15,596
这个方法的签名几乎是相同的

279
00:13:15,662 --> 0:13:18,632
就像您在这里看到的

280
00:13:19,433 --> 0:13:22,035
在此会话的其余部分

281
00:13:23,303 --> 0:13:25,339
接下来 我们将检查活动类型

282
00:13:25,405 --> 0:13:27,941
是否为NSUserActivityTypeBrowsingWeb

283
00:13:28,609 --> 0:13:30,210
这有助于将通用链接与app

284
00:13:30,277 --> 0:13:33,080
可能支持的其他传入

285
00:13:33,881 --> 0:13:36,550
即使您现在不支持其他活动类型

286
00:13:36,783 --> 0:13:38,685
检查活动类型也是一个好主意

287
00:13:38,986 --> 0:13:41,421
以防将来需要支持其他类型

288
00:13:42,556 --> 0:13:43,891
活动类型看起来不错

289
00:13:44,191 --> 0:13:46,994
让我们从用户活动对象

290
00:13:47,461 --> 0:13:49,596
对于一个通用链接

291
00:13:50,097 --> 0:13:53,267
让我们从URL构建一个URL

292
00:13:53,967 --> 0:13:56,803
您应该始终使用URL组件

293
00:13:57,237 --> 0:14:00,240
使用正则表达式或手动解析URL

294
00:13:57,237 --> 0:14:00,240
使用正则表达式或手动解析URL

295
00:14:00,307 --> 0:14:02,509
字符串可能会使您容易

296
00:14:03,610 --> 0:14:06,947
我们已经通过了guard语句

297
00:14:07,648 --> 0:14:10,384
在本例中

298
00:14:10,450 --> 0:14:12,386
但此时您可以使用URL的

299
00:14:12,452 --> 0:14:14,021
任何组件来根化活动

300
00:14:14,755 --> 0:14:17,090
如果您支持来自多个域的

301
00:14:17,324 --> 0:14:18,992
通用链接 不要忘记检查主机组件

302
00:14:21,628 --> 0:14:23,797
我们的代码已经完成

303
00:14:23,864 --> 0:14:27,100
但是在macOS上使用

304
00:14:27,968 --> 0:14:30,871
默认情况下 macOS上的

305
00:14:31,371 --> 0:14:34,942
当它们打开时 Safari会给

306
00:14:35,742 --> 0:14:37,311
如果用户选择此选项

307
00:14:37,377 --> 0:14:39,947
之后 您的链接将继续

308
00:14:41,148 --> 0:14:45,219
与iOS不同 macOS支持

309
00:14:45,786 --> 0:14:48,388
远程卷上的app不能使用通用链接

310
00:14:48,555 --> 0:14:50,057
它们必须安装在本地

311
00:14:51,291 --> 0:14:53,360
如果用户从App Store

312
00:14:53,594 --> 0:14:56,997
系统将在您的app安装或更新后

313
00:14:57,064 --> 0:14:59,266
立即开始下载

314
00:15:00,000 --> 0:15:01,735
如果您的app

315
00:15:01,802 --> 0:15:03,504
在用户至少启动一次app之前

316
00:15:03,570 --> 0:15:06,006
系统不会开始这些下载

317
00:15:07,140 --> 0:15:10,077
因为通用链接由与app标识符

318
00:15:10,143 --> 0:15:11,345
的安全关联支持 所以给定app

319
00:15:11,612 --> 0:15:13,146
只有一个副本能够处理

320
00:15:13,213 --> 0:15:15,516
Mac上的通用链接

321
00:15:16,216 --> 0:15:18,118
通常 这将是/applications中

322
00:15:18,185 --> 0:15:19,820
app的副本

323
00:15:20,287 --> 0:15:22,556
当您需要测试相关域权限

324
00:15:22,623 --> 0:15:24,458
的更改时 请记住这一点

325
00:15:25,325 --> 0:15:27,261
如果您在操作的另一端 并且想要

326
00:15:27,327 --> 0:15:28,929
打开一个通用链接UI app

327
00:15:29,363 --> 0:15:31,398
NSWorkspace

328
00:15:31,465 --> 0:15:34,735
都会在可用时自动打开它们

329
00:15:35,769 --> 0:15:38,438
如果您想在一个app中打开

330
00:15:38,505 --> 0:15:39,873
一个通用链接而不是默认的浏览器

331
00:15:40,174 --> 0:15:41,608
您可以适当地使用UI app

332
00:15:41,842 --> 0:15:44,244
或NSWorkspace API

333
00:15:44,778 --> 0:15:46,413
如果这些打开操作失败

334
00:15:46,480 --> 0:15:49,683
则意味着提供的URL

335
00:15:50,751 --> 0:15:53,053
如果您正在为macOS

336
00:15:53,120 --> 0:15:55,055
将提供额外的API

337
00:15:55,122 --> 0:15:56,823
来帮助您支持通用链接

338
00:15:58,959 --> 0:16:02,129
为了帮助您做出最好的app

339
00:15:58,959 --> 0:16:02,129
为了帮助您做出最好的app

340
00:16:02,196 --> 0:16:04,164
并提供最好的用户体验

341
00:16:06,099 --> 0:16:07,901
首先是优雅地失败

342
00:16:08,502 --> 0:16:10,537
可能会向您提供表示过期、无效

343
00:16:10,604 --> 0:16:13,941
或不存在内容的URL

344
00:16:14,608 --> 0:16:17,511
如果您确定一个通用链接

345
00:16:17,878 --> 0:16:19,980
您可以经常在Safari

346
00:16:20,414 --> 0:16:22,115
这可以让用户参与您的app

347
00:16:22,783 --> 0:16:24,718
如果Safari视图控制器

348
00:16:24,985 --> 0:16:26,954
考虑在Safari中打开URL

349
00:16:27,020 --> 0:16:30,090
或者至少提示有关问题的详细信息

350
00:16:30,591 --> 0:16:32,693
避免将用户发送到空白屏幕

351
00:16:34,027 --> 0:16:35,796
若有人访问您的网站

352
00:16:36,029 --> 0:16:38,131
请使用Smart App Banner

353
00:16:38,198 --> 0:16:40,334
App Store或

354
00:16:40,767 --> 0:16:43,971
Smart App Banner与

355
00:16:44,371 --> 0:16:46,607
而且不需要JavaScript

356
00:16:46,673 --> 0:16:47,674
或自定义URL模式来支持它

357
00:16:48,809 --> 0:16:51,745
最后 如果您有关于我们如何

358
00:16:51,912 --> 0:16:53,013
改进通用链接的反馈 我很乐意听到

359
00:16:53,380 --> 0:16:54,882
请使用反馈助手

360
00:16:54,948 --> 0:16:57,851
让我们知道我们能做些什么

361
00:16:58,752 --> 0:16:59,586
谢谢
