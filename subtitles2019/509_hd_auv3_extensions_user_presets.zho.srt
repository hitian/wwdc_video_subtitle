1
00:00:00,506 --> 0:00:04,500
[音乐]

2
00:00:07,716 --> 0:00:09,136
&gt;&gt; 大家好 欢迎

3
00:00:09,136 --> 0:00:11,076
收看我们的会议

4
00:00:11,076 --> 0:00:12,566
关于对音频单元用户预设的支持

5
00:00:13,096 --> 0:00:14,876
我叫 Bela Balazs

6
00:00:14,876 --> 0:00:16,236
我是 Core Audio

7
00:00:16,236 --> 0:00:17,096
软件团队的工程师

8
00:00:17,546 --> 0:00:18,726
今天我们将谈一谈

9
00:00:18,726 --> 0:00:19,886
一个新的 API

10
00:00:19,996 --> 0:00:21,386
用于处理

11
00:00:21,386 --> 0:00:22,376
音频单元的预设

12
00:00:24,096 --> 0:00:25,656
首先 我们先讨论一下

13
00:00:25,906 --> 0:00:27,586
什么是预设

14
00:00:27,586 --> 0:00:28,196
以及为什么它们很重要

15
00:00:29,276 --> 0:00:31,186
在一个音频软件情景中

16
00:00:31,186 --> 0:00:32,586
预设就是在给定时间点

17
00:00:32,586 --> 0:00:33,906
关于音频单元的

18
00:00:33,906 --> 0:00:35,616
参数状态的快照

19
00:00:36,466 --> 0:00:38,066
这个快照可以被保存

20
00:00:38,066 --> 0:00:38,976
并在之后恢复

21
00:00:41,216 --> 0:00:42,506
我们已经支持了

22
00:00:42,506 --> 0:00:43,096
工厂预设

23
00:00:43,786 --> 0:00:45,696
这是在 AUAudioUnit 类的一个属性

24
00:00:45,696 --> 0:00:48,136
它也被定义为

25
00:00:48,136 --> 0:00:50,436
AUAudioUnitPreset 的数组

26
00:00:50,926 --> 0:00:54,546
这些工厂预设

27
00:00:54,546 --> 0:00:55,936
由音频单元制造商

28
00:00:55,936 --> 0:00:57,096
加入至音频单元

29
00:00:57,686 --> 0:00:59,186
一个音频单元开发者

30
00:00:59,186 --> 0:01:00,236
可能会在产品中

31
00:00:59,186 --> 0:01:00,236
可能会在产品中

32
00:01:00,236 --> 0:01:02,316
包含一定数量的预设

33
00:01:02,316 --> 0:01:03,936
以此作为起点

34
00:01:03,936 --> 0:01:05,586
或展示音频单元的性能

35
00:01:07,856 --> 0:01:09,266
现在我们增加了对

36
00:01:09,266 --> 0:01:10,166
用户预设的支持

37
00:01:10,786 --> 0:01:12,586
用户预设可以通过使用这个

38
00:01:12,586 --> 0:01:14,296
新的 userPresets 属性访问

39
00:01:15,016 --> 0:01:16,226
返回值为

40
00:01:16,226 --> 0:01:17,626
AUAudioUnitPreset 数组

41
00:01:19,966 --> 0:01:21,236
这些预设

42
00:01:21,236 --> 0:01:22,846
由用户创建

43
00:01:22,846 --> 0:01:23,906
之后可以修改

44
00:01:24,466 --> 0:01:26,086
音频单元会将预设提供给

45
00:01:26,116 --> 0:01:28,056
所有托管该音频单元的 App

46
00:01:28,446 --> 0:01:31,836
我们有一个新的属性

47
00:01:31,836 --> 0:01:33,156
名为 supportUsePresets

48
00:01:33,156 --> 0:01:35,326
音频单元将其设为真

49
00:01:35,326 --> 0:01:36,376
表示支持用户预设

50
00:01:36,766 --> 0:01:39,156
托管音频单元的 App

51
00:01:39,156 --> 0:01:40,616
在使用新的功能前

52
00:01:40,616 --> 0:01:41,596
需要先检查该属性

53
00:01:41,756 --> 0:01:44,456
这就是加入使用新功能的方法

54
00:01:46,786 --> 0:01:48,426
我们有保存和

55
00:01:48,426 --> 0:01:49,586
删除用户预设的方法

56
00:01:50,036 --> 0:01:51,636
托管音频单元的 App

57
00:01:51,636 --> 0:01:53,146
可以调用 saveUsePreset 方法

58
00:01:53,146 --> 0:01:55,186
将现有的状态保存至预设

59
00:01:55,186 --> 0:01:57,516
或者可以调用

60
00:01:57,516 --> 0:01:59,246
deleteUserPreset 方法

61
00:01:59,246 --> 0:02:00,686
来删除现有的预设

62
00:01:59,246 --> 0:02:00,686
来删除现有的预设

63
00:02:01,246 --> 0:02:02,716
音频单元通过覆盖默认

64
00:02:02,716 --> 0:02:04,526
来实现用户的逻辑

65
00:02:04,766 --> 0:02:05,966
或者也可以

66
00:02:05,966 --> 0:02:07,576
从 AUAudioUnit 基础类中

67
00:02:07,576 --> 0:02:09,256
继承默认实现

68
00:02:11,526 --> 0:02:13,096
这些默认实现

69
00:02:13,096 --> 0:02:14,336
将预设存储到

70
00:02:14,336 --> 0:02:15,866
音频单元扩展的

71
00:02:15,866 --> 0:02:17,076
Application/container 文件夹中

72
00:02:20,246 --> 0:02:21,956
你可以使用 presetState（for userPreset）

73
00:02:21,956 --> 0:02:23,946
方法来恢复

74
00:02:23,946 --> 0:02:25,926
储存在用户预设里的状态

75
00:02:26,956 --> 0:02:28,436
在父类中

76
00:02:28,436 --> 0:02:29,286
也有一个默认实现

77
00:02:29,286 --> 0:02:31,046
但它可以被覆盖

78
00:02:31,046 --> 0:02:32,686
用来适应自定义需求

79
00:02:34,136 --> 0:02:35,786
它会返回一个

80
00:02:35,786 --> 0:02:37,016
可以用来还原

81
00:02:37,016 --> 0:02:38,886
音频单元状态的词典

82
00:02:38,886 --> 0:02:40,236
并且将其存储至

83
00:02:40,236 --> 0:02:41,666
音频单元的 

84
00:02:41,666 --> 0:02:42,266
fullStateForDocument 属性

85
00:02:44,716 --> 0:02:46,906
除此之外

86
00:02:46,906 --> 0:02:48,826
我们还新增了一个属性 名为

87
00:02:48,826 --> 0:02:51,356
isLoadedInProcess

88
00:02:51,356 --> 0:02:52,746
你可以将其用来检查

89
00:02:52,746 --> 0:02:54,236
音频单元是否在进程中载入

90
00:02:55,346 --> 0:02:57,186
在进程中载入

91
00:02:57,186 --> 0:02:57,886
是 macOS 特有的性能

92
00:02:58,176 --> 0:03:00,106
主程序可以请求

93
00:02:58,176 --> 0:03:00,106
主程序可以请求

94
00:03:00,106 --> 0:03:01,836
但如果音频单元没有支持

95
00:03:01,836 --> 0:03:03,656
回调行为就是

96
00:03:03,686 --> 0:03:06,386
在进程外载入音频单元

97
00:03:07,916 --> 0:03:09,836
现在 主程序和音频单元

98
00:03:09,836 --> 0:03:11,556
可以使用这个属性

99
00:03:11,556 --> 0:03:13,076
来验证操作是否成功了

100
00:03:13,076 --> 0:03:15,606
接下来 让我们实际操作一下

101
00:03:18,706 --> 0:03:20,856
现在我们看到的是

102
00:03:20,856 --> 0:03:22,466
更新后的 AUv3 样例代码

103
00:03:22,466 --> 0:03:25,026
在 macOS 和 iOS 上均可用

104
00:03:25,716 --> 0:03:27,436
在这个主 App 中

105
00:03:27,436 --> 0:03:29,436
我加载了 AUv3FilterDemo

106
00:03:30,756 --> 0:03:32,746
当我点击播放时

107
00:03:32,746 --> 0:03:35,996
我们可以听到滤波器的效果

108
00:03:35,996 --> 0:03:36,063
[背景音乐]

109
00:03:36,063 --> 0:03:38,476
我可以拖动这个曲线

110
00:03:38,476 --> 0:03:42,696
来设定滤波器的截止和共鸣

111
00:03:42,696 --> 0:03:45,406
预设部分

112
00:03:45,406 --> 0:03:46,556
在我的右侧

113
00:03:47,736 --> 0:03:49,076
我们有音频单元的

114
00:03:49,076 --> 0:03:51,256
工厂预设

115
00:03:52,076 --> 0:03:57,406
这里有热烈 欢快和突出

116
00:03:57,406 --> 0:03:59,616
另一个标签则是

117
00:03:59,616 --> 0:04:02,586
用户预设部分

118
00:03:59,616 --> 0:04:02,586
用户预设部分

119
00:04:02,586 --> 0:04:04,736
这里有我们之前保存的

120
00:04:04,736 --> 0:04:07,416
初始预设

121
00:04:07,416 --> 0:04:08,000
我也可以保存新的

122
00:04:08,516 --> 0:04:17,875
[音乐]

123
00:04:18,375 --> 0:04:21,986
我可以在两者间转换

124
00:04:21,986 --> 0:04:23,396
一旦我不再需要某个预设

125
00:04:23,396 --> 0:04:26,000
我可以直接把它删除

126
00:04:28,046 --> 0:04:29,216
这就是关于

127
00:04:29,216 --> 0:04:31,226
AUv3 所有的功能

128
00:04:31,226 --> 0:04:33,000
我鼓励你们去看一看

129
00:04:36,356 --> 0:04:38,156
总结一下

130
00:04:38,156 --> 0:04:39,656
为了补充

131
00:04:39,656 --> 0:04:41,666
工厂预设的功能

132
00:04:41,666 --> 0:04:43,276
我们为音频单元的

133
00:04:43,276 --> 0:04:44,506
增加了用户预设的支持

134
00:04:45,436 --> 0:04:46,836
这让用户可以将

135
00:04:46,836 --> 0:04:48,036
最喜欢的声音保存为预设

136
00:04:48,036 --> 0:04:50,146
并将其运用至

137
00:04:50,146 --> 0:04:51,996
每个托管音频单元的 App 中

138
00:04:53,076 --> 0:04:54,506
为了更好利用这些新的功能

139
00:04:54,506 --> 0:04:56,116
音频单元可以

140
00:04:56,116 --> 0:04:57,746
选择加入并使用

141
00:04:57,746 --> 0:04:59,286
我们提供的默认实现

142
00:04:59,286 --> 0:05:01,206
或者也可以覆盖这些方法

143
00:04:59,286 --> 0:05:01,206
或者也可以覆盖这些方法

144
00:05:01,206 --> 0:05:03,216
实现自定义功能

145
00:05:03,986 --> 0:05:05,916
托管音频单元的 App

146
00:05:05,916 --> 0:05:07,316
向音频单元

147
00:05:07,316 --> 0:05:09,576
查询预设

148
00:05:09,576 --> 0:05:11,136
也可以通过在音频单元上

149
00:05:11,136 --> 0:05:12,206
调用正确的方法来增加新的预设

150
00:05:12,206 --> 0:05:13,426
或者删除现有的预设

151
00:05:15,036 --> 0:05:16,826
在 developer.apple.com 上

152
00:05:16,826 --> 0:05:18,086
你可以通过查看

153
00:05:18,086 --> 0:05:19,636
我们最新更新的

154
00:05:19,636 --> 0:05:21,086
样例代码和这场会议所附的

155
00:05:21,086 --> 0:05:21,966
资源来获取

156
00:05:21,966 --> 0:05:23,466
更多信息

157
00:05:24,366 --> 0:05:25,796
本场展示到此结束

158
00:05:25,976 --> 0:05:26,366
谢谢
