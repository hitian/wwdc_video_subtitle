1
00:00:06,039 --> 0:00:07,441
（多任务App中的窗口管理）

2
00:00:07,508 --> 0:00:08,775
（激活、刷新和销毁窗口）

3
00:00:08,842 --> 0:00:10,477
大家好

4
00:00:10,544 --> 0:00:12,479
来自系统UI SpringBoard团队

5
00:00:12,546 --> 0:00:17,184
今天我很高兴跟大家分享

6
00:00:17,751 --> 0:00:21,154
为此我们引入了三个新API

7
00:00:21,221 --> 0:00:25,626
可以分别激活、刷新或销毁

8
00:00:26,426 --> 0:00:29,997
但让我们先来看一个

9
00:00:30,063 --> 0:00:32,031
在一个我们一直在设计的app中

10
00:00:39,273 --> 0:00:42,209
好的 我们叫它Clown Town

11
00:00:42,276 --> 0:00:45,379
这为聚会寻找小丑提供了一个新方法

12
00:00:46,013 --> 0:00:49,816
打开它是一个全屏地图

13
00:00:49,883 --> 0:00:53,587
我可以轻触任意一个标记了解详情

14
00:00:55,022 --> 0:00:57,558
它的实现也非常直观

15
00:00:57,624 --> 0:01:01,662
详情视图控制器完全了解

16
00:00:57,624 --> 0:01:01,662
详情视图控制器完全了解

17
00:01:01,728 --> 0:01:04,364
而地图视图控制器把一切

18
00:01:04,431 --> 0:01:08,035
陈述、动画、

19
00:01:08,101 --> 0:01:11,171
通过视图呈现

20
00:01:11,638 --> 0:01:13,907
嗯 关于多任务的改进

21
00:01:13,974 --> 0:01:16,810
我们可以把这个委托模型

22
00:01:16,877 --> 0:01:19,646
并免费获取强大的新功能

23
00:01:19,713 --> 0:01:21,315
需要在结账时收取税费

24
00:01:22,249 --> 0:01:25,419
因此我们的确需要从添加

25
00:01:25,485 --> 0:01:26,653
在详情视图中

26
00:01:27,187 --> 0:01:31,491
我们所有的用户都将发现

27
00:01:31,859 --> 0:01:36,363
当轻触它时 我们会调用

28
00:01:36,630 --> 0:01:39,867
从而在辅助的专用窗口中

29
00:01:40,167 --> 0:01:41,168
让我们来做一下

30
00:01:41,969 --> 0:01:43,971
我已经可以浏览地图、

31
00:01:44,037 --> 0:01:46,507
结账以及与其他小丑们对比了

32
00:01:46,874 --> 0:01:47,941
但不仅如此

33
00:01:48,008 --> 0:01:51,311
我们现在可以让整个系统

34
00:01:51,612 --> 0:01:53,247
我们可以重新调整窗口大小

35
00:01:53,981 --> 0:01:55,249
四处移动窗口

36
00:01:55,849 --> 0:01:57,818
总是打开新窗口

37
00:01:58,085 --> 0:01:59,419
我这边的窗口

38
00:01:59,486 --> 0:02:01,288
在切换器中有自己的位置

39
00:01:59,486 --> 0:02:01,288
在切换器中有自己的位置

40
00:02:01,688 --> 0:02:06,560
现在我可以把这个小丑滑过去

41
00:02:06,927 --> 0:02:10,130
也许要打开其它的详情窗口

42
00:02:10,898 --> 0:02:14,134
Crusty 还有最后一个

43
00:02:15,435 --> 0:02:16,503
Mr. Happy

44
00:02:18,405 --> 0:02:20,674
好的 那么通过滑动app

45
00:02:20,741 --> 0:02:23,677
我可以查看所有的窗口

46
00:02:23,744 --> 0:02:26,213
甚至可以在它们之间快速地切换

47
00:02:26,280 --> 0:02:27,147
就像那样

48
00:02:27,714 --> 0:02:29,583
我甚至可以返回到

49
00:02:29,650 --> 0:02:31,051
位于地图旁边的一个大窗口

50
00:02:31,451 --> 0:02:32,920
现在让我们暂停一下

51
00:02:32,986 --> 0:02:36,323
我们的确实现了全部这些功能

52
00:02:36,390 --> 0:02:39,126
动画以及更多

53
00:02:39,193 --> 0:02:43,163
目前通过

54
00:02:44,031 --> 0:02:48,168
现在我注意到这个Mr. Happy

55
00:02:48,235 --> 0:02:50,070
很可能不是一个很好的小丑

56
00:02:50,137 --> 0:02:52,072
因此让我们移除他 关掉他的窗口

57
00:02:52,139 --> 0:02:55,809
通过新的请求情景会话销毁API

58
00:02:55,876 --> 0:02:58,345
这是我为右上角的按钮调用的

59
00:02:58,745 --> 0:03:00,547
让我们做一下 他消失了

60
00:02:58,745 --> 0:03:00,547
让我们做一下 他消失了

61
00:03:01,181 --> 0:03:03,183
现在我记得切换器中有一个小丑

62
00:03:03,250 --> 0:03:04,351
拥有五星评级

63
00:03:04,418 --> 0:03:05,919
那么让我们再次打开她

64
00:03:07,621 --> 0:03:10,090
请注意她并不是复制出来的

65
00:03:10,157 --> 0:03:11,525
这是Clown Town的政策

66
00:03:11,592 --> 0:03:13,160
它的实施很简单

67
00:03:13,227 --> 0:03:16,663
就是要求请求情景会话API激活

68
00:03:16,730 --> 0:03:18,999
一个现有会话而不是一个新会话

69
00:03:20,300 --> 0:03:22,436
我甚至可以追踪她何时可用

70
00:03:22,503 --> 0:03:24,338
系统会查看并发现她是否可用

71
00:03:24,404 --> 0:03:26,773
并且我可以通过绿色导航栏来呈现

72
00:03:26,840 --> 0:03:30,777
同时会在左侧出现一个立即预定按钮

73
00:03:31,945 --> 0:03:34,081
如果她的可用性发生变化

74
00:03:34,147 --> 0:03:35,482
我会收到一个通知

75
00:03:35,549 --> 0:03:38,952
我将更新这个UI

76
00:03:39,152 --> 0:03:43,557
并且我会调用

77
00:03:43,624 --> 0:03:47,728
用于更新UI的快照 其它不变

78
00:03:47,794 --> 0:03:50,097
当它在切换器中显示时

79
00:03:50,931 --> 0:03:52,299
但我还没有做出决定

80
00:03:52,366 --> 0:03:56,236
那么让我们都追踪一下

81
00:03:56,970 --> 0:03:58,005
就像这样

82
00:03:59,139 --> 0:04:02,042
如果我可以在app后台做一些事情

83
00:03:59,139 --> 0:04:02,042
如果我可以在app后台做一些事情

84
00:04:02,109 --> 0:04:04,311
也许是把这个app推荐给我的朋友们

85
00:04:04,378 --> 0:04:07,014
并且显示我当前已经拥有的收藏

86
00:04:07,581 --> 0:04:11,985
但我已经收到了通知说

87
00:04:12,219 --> 0:04:13,353
我忘记了他们的名字

88
00:04:13,420 --> 0:04:16,322
那么让我使用app快照

89
00:04:16,390 --> 0:04:18,325
浏览我的所有窗口

90
00:04:18,725 --> 0:04:19,826
就是这样

91
00:04:19,892 --> 0:04:22,329
快照已经更新了 非常棒

92
00:04:22,396 --> 0:04:24,932
因为我可以在这里直接管理我的窗口

93
00:04:25,165 --> 0:04:27,267
向上滑动几次就搞定了

94
00:04:27,968 --> 0:04:29,870
看起来这些小丑们流动性很大

95
00:04:29,937 --> 0:04:32,739
那么让我们继续

96
00:04:32,806 --> 0:04:34,908
然后我们就可以准备聚会了

97
00:04:36,977 --> 0:04:38,378
哎呦 稍后见Clown Town

98
00:04:39,646 --> 0:04:40,881
好的 那么…

99
00:04:42,549 --> 0:04:43,617
谢谢

100
00:04:45,285 --> 0:04:48,288
那么让我们查看API的激活会话功能

101
00:04:49,656 --> 0:04:51,358
首先激活会话

102
00:04:51,425 --> 0:04:54,661
仅用于响应直接的和本地的用户交互

103
00:04:55,028 --> 0:04:58,365
用户需要触摸屏幕来触发它

104
00:04:59,900 --> 0:05:03,437
并且你要通过调用

105
00:04:59,900 --> 0:05:03,437
并且你要通过调用

106
00:05:03,504 --> 0:05:04,738
在UI app上

107
00:05:04,805 --> 0:05:07,441
要么激活一个现有会话

108
00:05:08,775 --> 0:05:11,078
在Clown Town中

109
00:05:11,144 --> 0:05:14,648
UIApplication只有一个打开的会话

110
00:05:14,715 --> 0:05:16,683
就是那个显示地图配置的会话

111
00:05:18,051 --> 0:05:21,355
窗口中显示了我们的整个视图层级

112
00:05:22,689 --> 0:05:26,093
当按下打开新窗口按钮时

113
00:05:26,159 --> 0:05:28,795
详情视图控制器

114
00:05:28,862 --> 0:05:29,963
并呈现它

115
00:05:30,364 --> 0:05:31,798
并且地图视图控制器

116
00:05:31,865 --> 0:05:35,636
会调用我们在app委托上

117
00:05:36,870 --> 0:05:39,406
因为我们有不复制政策

118
00:05:39,473 --> 0:05:43,043
我们会查看

119
00:05:43,110 --> 0:05:44,978
因为是首次启动

120
00:05:45,045 --> 0:05:47,948
那么我们在运行时会传输nil

121
00:05:48,215 --> 0:05:50,184
把nil传给这个参数

122
00:05:50,250 --> 0:05:53,120
请求创建一个全新的情景会话

123
00:05:54,121 --> 0:05:56,757
然后我们要为这个小丑

124
00:05:56,823 --> 0:06:01,195
并通过UIKit

125
00:05:56,823 --> 0:06:01,195
并通过UIKit

126
00:06:01,562 --> 0:06:04,932
我们稍后会在委托链中看到

127
00:06:05,933 --> 0:06:09,269
选项对象可以让我

128
00:06:09,336 --> 0:06:13,574
就是用户会在哪里发起这个请求

129
00:06:13,841 --> 0:06:16,977
系统使用这个信息来避免

130
00:06:17,044 --> 0:06:19,947
用激活的请求情景

131
00:06:20,314 --> 0:06:22,249
还有就是为了导航

132
00:06:23,016 --> 0:06:24,418
我们现在可以调用API

133
00:06:25,252 --> 0:06:26,553
显示了新窗口

134
00:06:26,620 --> 0:06:29,623
同时创建了新的会话等级

135
00:06:30,858 --> 0:06:31,892
正如我所提到过的

136
00:06:31,959 --> 0:06:35,495
有两个关键方法你们一定很想实施

137
00:06:35,562 --> 0:06:39,333
以便让你的app决定

138
00:06:39,399 --> 0:06:40,801
以及如何配置

139
00:06:41,802 --> 0:06:45,906
那么让我们退一步

140
00:06:46,840 --> 0:06:48,108
我们这样做时

141
00:06:49,142 --> 0:06:51,578
UIKit会创建一个全新的情景会话

142
00:06:51,645 --> 0:06:54,281
并让你为其指定一个配置

143
00:06:54,348 --> 0:06:57,484
通过调用用于连接情景会话的配置

144
00:06:57,551 --> 0:06:58,752
在app委托上

145
00:06:58,819 --> 0:07:00,487
你一定很想实施这个

146
00:06:58,819 --> 0:07:00,487
你一定很想实施这个

147
00:07:00,554 --> 0:07:03,490
在这里你可以检验用户活动

148
00:07:03,557 --> 0:07:07,294
它会通过UI情景连接选项返回给你

149
00:07:07,694 --> 0:07:09,129
让你选择一个会话

150
00:07:09,196 --> 0:07:13,767
对于我来说是详情配置

151
00:07:14,268 --> 0:07:16,970
现在如果你的配置

152
00:07:17,037 --> 0:07:18,372
正如我所推荐的

153
00:07:18,438 --> 0:07:21,975
在这点上

154
00:07:22,042 --> 0:07:23,977
并且你只需要配置就可以了

155
00:07:24,244 --> 0:07:26,980
你可以通过实施

156
00:07:27,047 --> 0:07:28,448
在你的情景委托上

157
00:07:28,916 --> 0:07:29,750
还是在那里

158
00:07:29,816 --> 0:07:32,853
你可以发现你的用户活动

159
00:07:32,920 --> 0:07:36,623
并且你可以为其

160
00:07:38,692 --> 0:07:40,093
那是一个新会话

161
00:07:40,160 --> 0:07:41,795
那么现有会话呢？

162
00:07:42,696 --> 0:07:45,232
如果会话仍然存在

163
00:07:45,299 --> 0:07:47,201
我们会直接进入情景委托

164
00:07:47,267 --> 0:07:50,704
并且如果会话在其间断开连接

165
00:07:50,771 --> 0:07:52,840
我们会调用sceneWillConnectToSession

166
00:07:53,607 --> 0:07:55,576
但是如果情景仍然保持连接

167
00:07:55,642 --> 0:07:58,579
我们将进入continueUserActivity

168
00:07:59,446 --> 0:08:01,081
这两个你一定都想实施

169
00:07:59,446 --> 0:08:01,081
这两个你一定都想实施

170
00:08:01,481 --> 0:08:06,386
总的来说 激活会话仅用于

171
00:08:06,453 --> 0:08:10,023
要么激活新会话

172
00:08:10,090 --> 0:08:14,294
并且你想实施

173
00:08:14,361 --> 0:08:19,399
以便配置两个情景以及活动窗口

174
00:08:21,001 --> 0:08:22,970
现在谈谈刷新会话

175
00:08:23,604 --> 0:08:26,807
刷新是在app中与用户相关的更新

176
00:08:27,574 --> 0:08:28,775
举几个例子

177
00:08:28,976 --> 0:08:31,545
可以是在同一个设备上

178
00:08:31,612 --> 0:08:34,481
显示并运行多个窗口

179
00:08:34,548 --> 0:08:39,318
用户可能从一个窗口

180
00:08:39,385 --> 0:08:40,888
现在你希望能保持同步

181
00:08:40,953 --> 0:08:45,526
你希望它们的呈现保持更新

182
00:08:45,993 --> 0:08:47,861
或者你只想获取新数据

183
00:08:47,928 --> 0:08:50,531
并对用户可见

184
00:08:50,597 --> 0:08:53,433
或你想更新一切情景和会话元数据

185
00:08:53,500 --> 0:08:54,501
正如我们即将看到的

186
00:08:55,736 --> 0:08:57,504
你这样做了 通过在任意时间

187
00:08:57,571 --> 0:09:01,708
在UIApplication上调用

188
00:08:57,571 --> 0:09:01,708
在UIApplication上调用

189
00:09:02,109 --> 0:09:06,146
通过传输你所希望刷新的会话

190
00:09:08,549 --> 0:09:12,352
这个API究竟会让你更新哪些东西？

191
00:09:12,686 --> 0:09:16,190
你可以给这个会话更新

192
00:09:16,256 --> 0:09:17,391
状态恢复用户活动

193
00:09:17,457 --> 0:09:20,494
你可以更新情景激活条件

194
00:09:20,561 --> 0:09:21,795
并且你的UI

195
00:09:21,862 --> 0:09:25,532
最终又会在快照中被捕捉到

196
00:09:26,633 --> 0:09:29,970
正如我们在Clown Town中所看到的

197
00:09:30,037 --> 0:09:32,272
我们会感觉app在切换器中是活跃的

198
00:09:32,339 --> 0:09:35,676
并且我们还可以

199
00:09:35,742 --> 0:09:38,679
而不需要导航到每一个会话

200
00:09:38,745 --> 0:09:41,582
只是为了查看是否已连接或已更新

201
00:09:41,648 --> 0:09:43,383
即便我们压根就不再需要它们了

202
00:09:45,219 --> 0:09:47,054
在架构注释中

203
00:09:47,354 --> 0:09:49,456
你想监测相关模型变更

204
00:09:49,523 --> 0:09:51,425
从而调用API

205
00:09:51,491 --> 0:09:55,929
无论是在感兴趣的视图控制器中

206
00:09:56,697 --> 0:09:59,066
因为如果场景仍然保持连接

207
00:09:59,566 --> 0:10:02,135
无论是在前台或是后台

208
00:09:59,566 --> 0:10:02,135
无论是在前台或是后台

209
00:10:02,202 --> 0:10:04,705
它都可以自己收到通知

210
00:10:04,771 --> 0:10:05,806
并且调用API

211
00:10:05,873 --> 0:10:08,242
这将会在内部实现

212
00:10:09,843 --> 0:10:12,012
如果情景已经断开连接

213
00:10:12,079 --> 0:10:14,147
将不会再显示视图控制器

214
00:10:14,214 --> 0:10:16,817
因此长周期对象可以介入

215
00:10:16,884 --> 0:10:20,721
解决这个问题并在它自己的位置上

216
00:10:21,088 --> 0:10:23,957
然后情景就会在后台保持连接

217
00:10:24,024 --> 0:10:27,294
并且视图控制器可以进行自我更新

218
00:10:27,528 --> 0:10:29,963
并捕捉快照

219
00:10:32,032 --> 0:10:36,403
总的来说 你想在app中

220
00:10:37,004 --> 0:10:39,106
让布局时间缩短

221
00:10:39,173 --> 0:10:41,542
因此我们可以迅速捕捉快照

222
00:10:41,875 --> 0:10:45,412
并且不依赖于它的立即执行

223
00:10:45,479 --> 0:10:48,081
系统保留在稍后

224
00:10:48,148 --> 0:10:50,217
实施这个请求的能力 如果必要的话

225
00:10:51,785 --> 0:10:53,220
现在讲销毁会话

226
00:10:53,287 --> 0:10:55,756
又叫做带着样式离开

227
00:10:57,291 --> 0:11:01,061
你针对直接用户请求销毁会话

228
00:10:57,291 --> 0:11:01,061
你针对直接用户请求销毁会话

229
00:11:01,128 --> 0:11:04,064
或者如果你有窗口

230
00:11:04,131 --> 0:11:06,433
用于显示一些数据 一些项目

231
00:11:06,500 --> 0:11:09,102
而用户已经从其它地方把这些删掉了

232
00:11:09,169 --> 0:11:11,705
从另一个窗口或甚至是另一台设备

233
00:11:13,240 --> 0:11:15,042
你可以通过在任意时间

234
00:11:15,108 --> 0:11:16,343
在UIApplication上调用

235
00:11:16,410 --> 0:11:18,779
requestSceneSessionDestruction

236
00:11:18,846 --> 0:11:21,481
它会处理你希望销毁的会话

237
00:11:21,548 --> 0:11:23,450
还有一个选项对象

238
00:11:24,585 --> 0:11:27,888
这个选项可以让你指定一个

239
00:11:28,522 --> 0:11:30,924
是系统需要考虑的

240
00:11:30,991 --> 0:11:34,494
如果情景恰好当时处于前台

241
00:11:35,629 --> 0:11:36,530
现在让我讲清楚点

242
00:11:36,597 --> 0:11:39,733
会话将会消失 再也不会出现

243
00:11:40,100 --> 0:11:45,005
但动画允许你了解用户关掉它的意图

244
00:11:45,606 --> 0:11:47,174
那么要选择哪个呢？

245
00:11:47,875 --> 0:11:49,877
主草图是一个很棒的范例

246
00:11:50,310 --> 0:11:53,580
当主草图未经保存就被取消时

247
00:11:53,647 --> 0:11:57,117
用户就是很明确地要求

248
00:11:57,184 --> 0:11:59,319
这很常见 当关掉窗口时

249
00:11:59,386 --> 0:12:00,554
正如我们在Clown Town中

250
00:11:59,386 --> 0:12:00,554
正如我们在Clown Town中

251
00:12:00,954 --> 0:12:03,724
在这些情况下 你选择标准动画

252
00:12:04,558 --> 0:12:06,426
用于了解这个意图

253
00:12:08,061 --> 0:12:09,696
当发送草稿时

254
00:12:09,763 --> 0:12:12,900
用户并没有要求销毁他的内容

255
00:12:13,333 --> 0:12:14,902
那么会话将会被销毁

256
00:12:14,968 --> 0:12:18,372
作为用户接受

257
00:12:18,438 --> 0:12:19,339
会话的最终目的的副作用

258
00:12:19,406 --> 0:12:22,476
那么对于邮箱来说就是发送邮件

259
00:12:22,543 --> 0:12:25,045
在Clown Town例子中就是预定小丑

260
00:12:25,112 --> 0:12:26,346
如果你处于追踪模式中的话

261
00:12:26,880 --> 0:12:30,684
你选择交付就是

262
00:12:30,751 --> 0:12:32,920
用户已批准会话的最终目的

263
00:12:34,488 --> 0:12:38,759
现在当草图被取消和保存时

264
00:12:39,092 --> 0:12:42,129
用户并没有要求销毁他的内容

265
00:12:42,396 --> 0:12:44,031
那么会话将会被销毁

266
00:12:44,097 --> 0:12:48,468
作为用户拒绝立即采取行动的副作用

267
00:12:49,136 --> 0:12:50,604
你选择拒绝 在这些情况中

268
00:12:50,671 --> 0:12:53,273
是告知会话的最终目的

269
00:12:53,340 --> 0:12:55,509
尚未被实现

270
00:12:56,276 --> 0:12:58,212
（会话销毁动画衰退）

271
00:12:58,779 --> 0:12:59,680
总结一下

272
00:13:00,147 --> 0:13:02,850
你为了响应用户请求而销毁会话

273
00:13:02,916 --> 0:13:04,685
无论是本地还是远程

274
00:13:04,751 --> 0:13:06,520
并且你选择动画样式

275
00:13:06,587 --> 0:13:10,157
用于最好地了解用户的意图

276
00:13:11,458 --> 0:13:13,894
总的来说 我们了解了

277
00:13:13,961 --> 0:13:16,563
授权给用户的操作

278
00:13:16,630 --> 0:13:19,800
并且你可以把复杂的操作委托给系统

279
00:13:19,867 --> 0:13:22,169
同时获取能让你的用户

280
00:13:22,236 --> 0:13:24,671
轻松发现的强大的新功能

281
00:13:24,738 --> 0:13:25,672
谢谢

282
00:13:25,739 --> 0:13:30,644
（要了解更多信息请查看
