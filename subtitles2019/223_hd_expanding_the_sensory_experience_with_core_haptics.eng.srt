1
00:00:00,506 --> 0:00:04,500
[ Music ]

2
00:00:08,066 --> 0:00:10,066
[ Applause ]

3
00:00:10,116 --> 0:00:10,476
&gt;&gt; Welcome.

4
00:00:13,656 --> 0:00:15,116
Sound has long been an

5
00:00:15,116 --> 0:00:16,666
incredible part of creating a

6
00:00:16,726 --> 0:00:17,586
truly great app.

7
00:00:18,226 --> 0:00:19,346
Whether that's creating an

8
00:00:19,506 --> 0:00:21,446
atmospheric sound bed for your

9
00:00:21,446 --> 0:00:23,946
games or drawing attention to an

10
00:00:24,006 --> 0:00:25,846
important alert or notification.

11
00:00:26,556 --> 0:00:28,316
The addition of haptics adds a

12
00:00:28,316 --> 0:00:29,586
whole new dimension to this

13
00:00:29,586 --> 0:00:30,966
experience -- touch.

14
00:00:32,336 --> 0:00:33,776
Today's session is a story in

15
00:00:33,776 --> 0:00:35,826
two parts, design and

16
00:00:35,826 --> 0:00:36,326
development.

17
00:00:36,836 --> 0:00:39,076
And first, I'd like to start by

18
00:00:39,076 --> 0:00:41,146
introducing Hugo and Camille and

19
00:00:41,246 --> 0:00:42,666
ask them to come to the stage

20
00:00:42,666 --> 0:00:44,066
for their insights and guidance

21
00:00:44,126 --> 0:00:45,556
on designing great haptic

22
00:00:45,556 --> 0:00:47,076
experiences for your apps.

23
00:00:48,516 --> 0:00:53,500
[ Applause ]

24
00:01:02,516 --> 0:01:07,566
[ Cell Phone Vibration ]

25
00:01:08,066 --> 0:01:09,206
&gt;&gt; I'm sure you're familiar with

26
00:01:09,206 --> 0:01:09,656
that sound.

27
00:01:10,846 --> 0:01:11,976
It's been part of our life for

28
00:01:11,976 --> 0:01:12,326
years.

29
00:01:12,446 --> 0:01:15,256
In 2019 though, I think we can

30
00:01:15,256 --> 0:01:15,656
do better.

31
00:01:16,396 --> 0:01:17,686
I'm Camille Moussette,

32
00:01:18,056 --> 0:01:19,386
interaction designer on the

33
00:01:19,386 --> 0:01:20,266
Apple design team.

34
00:01:21,046 --> 0:01:22,486
&gt;&gt; And I'm Hugo Verweij, sound

35
00:01:22,486 --> 0:01:23,726
designer on the design team.

36
00:01:25,036 --> 0:01:27,756
This session is about designing

37
00:01:27,756 --> 0:01:29,166
great audio haptic experiences.

38
00:01:29,416 --> 0:01:31,586
Our goal with this talk is for

39
00:01:31,586 --> 0:01:34,176
you to be inspired and leave you

40
00:01:34,176 --> 0:01:36,286
with practical ideas about how

41
00:01:36,286 --> 0:01:37,476
to design great sound and

42
00:01:37,476 --> 0:01:39,286
haptics when used to together in

43
00:01:39,286 --> 0:01:41,486
the right way can bring a new

44
00:01:41,486 --> 0:01:43,046
dimension to your app.

45
00:01:45,216 --> 0:01:46,776
During the next 30 minutes,

46
00:01:47,126 --> 0:01:48,626
we'll talk about three things.

47
00:01:49,286 --> 0:01:50,716
First, we'll introduce what is

48
00:01:50,716 --> 0:01:52,476
an audio haptic experience.

49
00:01:53,756 --> 0:01:55,076
Then we'll look at three guiding

50
00:01:55,076 --> 0:01:56,906
principles to help you design

51
00:01:56,906 --> 0:01:57,906
those great experiences.

52
00:01:58,956 --> 0:02:00,236
Lastly, we'll look at different

53
00:01:58,956 --> 0:02:00,236
Lastly, we'll look at different

54
00:02:00,236 --> 0:02:02,986
techniques and practical tips to

55
00:02:02,986 --> 0:02:04,756
make those experiences great and

56
00:02:04,756 --> 0:02:05,516
truly compelling.

57
00:02:07,346 --> 0:02:09,416
So, what is an audio haptic

58
00:02:09,416 --> 0:02:10,036
experience?

59
00:02:10,846 --> 0:02:12,606
Well, let's start by listening

60
00:02:12,606 --> 0:02:13,206
to a sound.

61
00:02:14,176 --> 0:02:16,046
[ Beeping Sound ]

62
00:02:16,046 --> 0:02:17,976
Okay. Now let's lower this

63
00:02:17,976 --> 0:02:18,096
sound.

64
00:02:18,676 --> 0:02:21,626
[ Beeping Sound ]

65
00:02:22,126 --> 0:02:23,426
What happens if I lower it even

66
00:02:23,426 --> 0:02:23,976
further?

67
00:02:24,516 --> 0:02:26,606
[ Beeping Sound ]

68
00:02:27,106 --> 0:02:29,166
Whoa. It's so low I can't hear

69
00:02:29,166 --> 0:02:29,696
it anymore.

70
00:02:30,286 --> 0:02:31,966
You know, our ears just don't

71
00:02:32,236 --> 0:02:33,216
register it anymore.

72
00:02:33,536 --> 0:02:34,986
But, if you would put your

73
00:02:35,066 --> 0:02:36,306
finger on the speaker, you could

74
00:02:36,306 --> 0:02:37,776
still feel it move back and

75
00:02:37,816 --> 0:02:38,106
forth.

76
00:02:38,656 --> 0:02:41,726
We designed a taptic engine

77
00:02:41,726 --> 0:02:44,856
specifically to play these low

78
00:02:44,856 --> 0:02:46,036
frequencies that you can only

79
00:02:46,036 --> 0:02:46,486
feel.

80
00:02:47,926 --> 0:02:50,376
Here it is in the iPhone and

81
00:02:50,376 --> 0:02:52,686
next to it the speaker module.

82
00:02:53,216 --> 0:02:56,866
The haptic sensations from the

83
00:02:56,866 --> 0:02:58,356
taptic engine are synchronized

84
00:02:58,966 --> 0:03:00,296
to the sounds coming from the

85
00:02:58,966 --> 0:03:00,296
to the sounds coming from the

86
00:03:00,296 --> 0:03:03,336
speaker, and the result is what

87
00:03:03,336 --> 0:03:05,316
we call an audio haptic

88
00:03:05,316 --> 0:03:05,936
experience.

89
00:03:06,526 --> 0:03:08,976
But haptic sensations are meant

90
00:03:08,976 --> 0:03:12,016
to be felt, so because we are

91
00:03:12,016 --> 0:03:14,146
presenting this on stage, and on

92
00:03:14,146 --> 0:03:15,876
screen we need your help in

93
00:03:15,876 --> 0:03:17,416
imagining what this would feel

94
00:03:17,416 --> 0:03:17,626
like.

95
00:03:18,456 --> 0:03:21,206
We'll do our best to help you by

96
00:03:21,206 --> 0:03:22,446
visualizing the haptics like

97
00:03:22,446 --> 0:03:22,756
this

98
00:03:26,296 --> 0:03:27,776
or by playing a sound that

99
00:03:27,776 --> 0:03:29,476
resembles the haptic, like this.

100
00:03:31,016 --> 0:03:34,506
[ Drumming ]

101
00:03:35,006 --> 0:03:36,496
We will also visualize these

102
00:03:36,496 --> 0:03:39,006
experiences on the timeline, and

103
00:03:39,006 --> 0:03:40,236
Camille will tell you some more

104
00:03:40,236 --> 0:03:41,856
about how that's done in a quick

105
00:03:42,166 --> 0:03:43,946
haptics design primer.

106
00:03:46,366 --> 0:03:48,766
&gt;&gt; IOS 13 introduced a new API

107
00:03:49,646 --> 0:03:51,026
for designing your own custom

108
00:03:51,026 --> 0:03:51,466
haptics.

109
00:03:52,176 --> 0:03:54,576
It's called Core Haptics.

110
00:03:55,196 --> 0:03:56,976
This new API allows you

111
00:03:57,196 --> 0:03:59,416
developers to use the taptic

112
00:03:59,416 --> 0:04:01,686
engine fully in iPhone.

113
00:03:59,416 --> 0:04:01,686
engine fully in iPhone.

114
00:04:04,496 --> 0:04:06,816
The taptic engine is capable of

115
00:04:06,816 --> 0:04:08,576
rendering a wide range of

116
00:04:08,576 --> 0:04:10,516
experiences and can generate a

117
00:04:10,516 --> 0:04:13,576
custom vibration like this, it

118
00:04:13,576 --> 0:04:14,746
looks like this, and it should

119
00:04:14,746 --> 0:04:16,116
sound and feel like this

120
00:04:17,516 --> 0:04:19,676
[beeping sound].

121
00:04:20,176 --> 0:04:22,055
So, as you've seen, we're using

122
00:04:22,055 --> 0:04:23,626
a wave form and sound to

123
00:04:23,626 --> 0:04:24,516
represent haptics.

124
00:04:24,966 --> 0:04:26,646
As Hugo said, you need to

125
00:04:26,646 --> 0:04:29,176
imagine this in your hand as a

126
00:04:29,176 --> 0:04:30,166
silent experience.

127
00:04:30,996 --> 0:04:32,796
This should be felt and not

128
00:04:32,886 --> 0:04:33,126
heard.

129
00:04:33,486 --> 0:04:36,836
So, we can play these continuous

130
00:04:36,836 --> 0:04:37,446
experiences.

131
00:04:38,586 --> 0:04:39,686
We can also have something

132
00:04:39,686 --> 0:04:41,666
that's more shorter and compact.

133
00:04:42,326 --> 0:04:45,686
It's a single cycle, and we call

134
00:04:45,686 --> 0:04:47,166
this experience a transient.

135
00:04:48,556 --> 0:04:51,906
It's much more momentary, and it

136
00:04:51,906 --> 0:04:54,326
feels like an impact or a strike

137
00:04:54,656 --> 0:04:56,966
or a tap.

138
00:04:57,016 --> 0:04:59,016
[ Drumming Sound ]

139
00:04:59,016 --> 0:05:01,416
Very momentary and then we

140
00:04:59,016 --> 0:05:01,416
Very momentary and then we

141
00:05:01,716 --> 0:05:05,186
actually can refine it further.

142
00:05:05,876 --> 0:05:07,796
Moving forward, we'll use basic

143
00:05:07,796 --> 0:05:09,346
shapes to represent haptics in

144
00:05:09,346 --> 0:05:10,136
different patterns.

145
00:05:10,636 --> 0:05:11,946
So, our transient becomes a

146
00:05:11,946 --> 0:05:14,516
simple rectangle, and because

147
00:05:14,516 --> 0:05:15,816
our taptic engine is an

148
00:05:16,356 --> 0:05:17,686
exceptional piece of haptic

149
00:05:17,686 --> 0:05:19,836
engineering, we can modulate the

150
00:05:19,836 --> 0:05:20,896
experience in different ways.

151
00:05:21,766 --> 0:05:23,236
First, we can modulate the

152
00:05:23,236 --> 0:05:24,976
intensity or the amplitude.

153
00:05:25,476 --> 0:05:28,886
We can also make it feel more

154
00:05:28,886 --> 0:05:30,916
round or soft.

155
00:05:32,346 --> 0:05:33,786
At the other extreme, we can

156
00:05:33,836 --> 0:05:36,816
make it more precise and crisp.

157
00:05:38,026 --> 0:05:39,856
So this experience is possible

158
00:05:40,196 --> 0:05:41,066
with the taptic engine.

159
00:05:45,076 --> 0:05:47,796
So, in the end, this completes

160
00:05:48,126 --> 0:05:49,676
our quick introduction to haptic

161
00:05:49,676 --> 0:05:51,736
design and what Core Haptics API

162
00:05:52,246 --> 0:05:52,926
is all about.

163
00:05:53,786 --> 0:05:55,926
We have one intensity you can

164
00:05:55,926 --> 0:05:57,726
modulate and another design

165
00:05:57,726 --> 0:05:59,126
dimension, haptic sharpness,

166
00:05:59,456 --> 0:06:01,426
that you can, you are in control

167
00:05:59,456 --> 0:06:01,426
that you can, you are in control

168
00:06:01,916 --> 0:06:03,046
for two types of event,

169
00:06:03,286 --> 0:06:06,406
continuous and transient.

170
00:06:06,406 --> 0:06:08,546
Now, let's look at the three

171
00:06:08,546 --> 0:06:10,346
guiding principles that we want

172
00:06:10,346 --> 0:06:13,886
to share with you today.

173
00:06:14,076 --> 0:06:15,876
First is causality.

174
00:06:17,036 --> 0:06:20,606
Then we have harmony and lastly

175
00:06:20,606 --> 0:06:21,886
we have utility.

176
00:06:23,286 --> 0:06:28,146
These concepts or approaches are

177
00:06:28,146 --> 0:06:29,606
used throughout the work that we

178
00:06:29,606 --> 0:06:31,426
do at Apple, and we think they

179
00:06:31,426 --> 0:06:33,446
can help you as well in your own

180
00:06:33,446 --> 0:06:34,146
app experience.

181
00:06:34,636 --> 0:06:36,446
For each of them, we'll look at

182
00:06:36,446 --> 0:06:38,686
the concept and explain through

183
00:06:38,686 --> 0:06:39,476
a few examples.

184
00:06:39,916 --> 0:06:40,636
Let's get started.

185
00:06:42,306 --> 0:06:42,896
Causality.

186
00:06:44,156 --> 0:06:46,036
Causality is about for feedback

187
00:06:46,126 --> 0:06:48,026
to be useful it must be obvious

188
00:06:48,076 --> 0:06:50,826
what caused it.

189
00:06:51,086 --> 0:06:52,916
&gt;&gt; So, imagine being a soccer

190
00:06:52,916 --> 0:06:54,106
player kicking this ball.

191
00:06:54,846 --> 0:06:56,986
What would the experience feel

192
00:06:56,986 --> 0:06:57,276
like?

193
00:06:58,856 --> 0:07:03,596
There is a clear, a clear

194
00:06:58,856 --> 0:07:03,596
There is a clear, a clear

195
00:07:03,596 --> 0:07:04,846
relationship, an obvious

196
00:07:04,846 --> 0:07:06,196
relationship between the cause,

197
00:07:06,996 --> 0:07:08,246
the foot colliding with the ball

198
00:07:08,676 --> 0:07:10,176
and the effect, the sound of the

199
00:07:10,176 --> 0:07:11,246
impact and the feel of the

200
00:07:11,246 --> 0:07:11,546
impact.

201
00:07:12,906 --> 0:07:15,656
Now, what this experience sounds

202
00:07:15,656 --> 0:07:17,756
and feels like is determined by

203
00:07:18,096 --> 0:07:20,566
the qualities of the interacting

204
00:07:20,626 --> 0:07:22,536
objects, the material of the

205
00:07:22,536 --> 0:07:24,226
shoe, the material of the ball.

206
00:07:24,656 --> 0:07:27,956
And then the dynamics of the

207
00:07:27,956 --> 0:07:28,386
action.

208
00:07:29,086 --> 0:07:30,486
Is it a hard kick or a soft

209
00:07:30,486 --> 0:07:30,686
kick?

210
00:07:31,606 --> 0:07:33,236
And the environment, the

211
00:07:33,236 --> 0:07:35,326
acoustics of the stadium or the

212
00:07:35,326 --> 0:07:35,876
soccer field.

213
00:07:36,876 --> 0:07:39,306
Because we are so familiar with

214
00:07:39,306 --> 0:07:41,376
these things, it would not make

215
00:07:41,376 --> 0:07:44,246
sense at all to use a sound that

216
00:07:44,246 --> 0:07:45,056
is very different.

217
00:07:45,746 --> 0:07:47,096
Let's try it out and take it way

218
00:07:47,096 --> 0:07:48,546
over the top.

219
00:07:49,516 --> 0:07:51,546
[ Glass Breaking ]

220
00:07:52,046 --> 0:07:52,816
Very strange, that doesn't

221
00:07:52,816 --> 0:07:53,266
really work.

222
00:07:54,386 --> 0:07:55,956
Now when designing sounds for

223
00:07:55,956 --> 0:07:58,256
your experiences, think about

224
00:07:58,256 --> 0:07:59,806
what it would feel and sound

225
00:07:59,806 --> 0:08:01,626
like if what you interact with

226
00:07:59,806 --> 0:08:01,626
like if what you interact with

227
00:08:01,936 --> 0:08:03,716
would be a physical object.

228
00:08:04,216 --> 0:08:08,736
As an example, let's look at the

229
00:08:08,736 --> 0:08:09,946
Apple Pay confirmation.

230
00:08:11,146 --> 0:08:12,546
We wanted the sound and the

231
00:08:12,546 --> 0:08:14,696
haptics to perfectly match the

232
00:08:14,696 --> 0:08:16,666
animation on screen, the

233
00:08:16,696 --> 0:08:17,166
checkmark.

234
00:08:17,196 --> 0:08:21,516
So, where do we start?

235
00:08:22,846 --> 0:08:24,346
Well, what sounds do you

236
00:08:24,346 --> 0:08:25,966
associate with making a payment?

237
00:08:26,916 --> 0:08:28,456
What does money sound like?

238
00:08:29,356 --> 0:08:30,436
And what is the interaction of

239
00:08:30,476 --> 0:08:32,226
making a payment using Apple

240
00:08:32,265 --> 0:08:32,446
Pay?

241
00:08:32,885 --> 0:08:33,916
And of course we have to look at

242
00:08:34,296 --> 0:08:35,616
that animation of the checkmark

243
00:08:35,616 --> 0:08:36,176
on screen.

244
00:08:37,486 --> 0:08:39,285
It should feel positive, like

245
00:08:40,046 --> 0:08:41,246
confirming a successful

246
00:08:41,246 --> 0:08:41,856
transaction.

247
00:08:42,466 --> 0:08:45,266
Here are a few examples of

248
00:08:45,266 --> 0:08:46,956
sounds that were candidates for

249
00:08:46,956 --> 0:08:48,426
this confirmation.

250
00:08:51,216 --> 0:08:52,326
This is the first one [beeping

251
00:08:52,326 --> 0:08:53,576
sound].

252
00:08:53,576 --> 0:08:55,116
This one is very pleasant, but

253
00:08:55,116 --> 0:08:57,066
it sounded a bit too happy and

254
00:08:57,266 --> 0:08:57,696
frivolous.

255
00:08:58,996 --> 0:09:01,206
Now the next one worked really

256
00:08:58,996 --> 0:09:01,206
Now the next one worked really

257
00:09:01,206 --> 0:09:02,696
well with the checkmark of the

258
00:09:04,056 --> 0:09:04,346
animation [beeping sound].

259
00:09:05,726 --> 0:09:07,356
But we felt that its character

260
00:09:07,356 --> 0:09:08,496
wasn't really right.

261
00:09:08,496 --> 0:09:10,086
It was a little too harsh.

262
00:09:11,186 --> 0:09:12,796
And then there is this one, the

263
00:09:12,796 --> 0:09:14,776
one that we chose in the end and

264
00:09:14,776 --> 0:09:15,696
that you all know.

265
00:09:16,926 --> 0:09:18,236
It's not too serious, and it's

266
00:09:18,326 --> 0:09:21,436
clearly a confirmation [beeping

267
00:09:21,436 --> 0:09:22,116
sound].

268
00:09:22,116 --> 0:09:23,476
Okay, so we've got our sound.

269
00:09:23,856 --> 0:09:25,376
Now, onto the haptics.

270
00:09:26,486 --> 0:09:28,446
Our first idea was to mimic the

271
00:09:28,446 --> 0:09:31,606
waveform of the sound because it

272
00:09:31,606 --> 0:09:33,546
matches perfectly, but after

273
00:09:33,546 --> 0:09:35,886
some experimentation, we found

274
00:09:35,886 --> 0:09:38,336
that two simple taps actually

275
00:09:38,336 --> 0:09:40,226
did a better job.

276
00:09:40,496 --> 0:09:42,456
I like to see these as little

277
00:09:42,456 --> 0:09:44,156
mini compositions where we have

278
00:09:44,256 --> 0:09:45,306
two instruments, one that you

279
00:09:45,306 --> 0:09:47,346
can hear and one that you can

280
00:09:47,456 --> 0:09:48,516
feel, the haptics.

281
00:09:49,676 --> 0:09:51,046
They don't always necessarily

282
00:09:51,046 --> 0:09:53,616
have to play the same thing, but

283
00:09:53,866 --> 0:09:55,146
they do have to play in the same

284
00:09:55,216 --> 0:09:55,706
tempo.

285
00:09:57,166 --> 0:09:58,076
Here they are together.

286
00:09:58,076 --> 0:09:59,836
Notice the lower sound

287
00:09:59,836 --> 0:10:02,976
indicating the haptics [beeping

288
00:09:59,836 --> 0:10:02,976
indicating the haptics [beeping

289
00:10:03,376 --> 0:10:05,376
sound].

290
00:10:05,776 --> 0:10:07,396
Okay, and this is then the final

291
00:10:07,396 --> 0:10:09,166
experience with the animation.

292
00:10:09,886 --> 0:10:11,996
Again, imagine feeling the taps

293
00:10:11,996 --> 0:10:13,916
in your hand when you pay.

294
00:10:17,286 --> 0:10:19,286
[ Beeping Sound ]

295
00:10:19,596 --> 0:10:21,606
Next, let's look at our second

296
00:10:21,606 --> 0:10:23,776
guiding principle, harmony.

297
00:10:24,916 --> 0:10:27,516
Harmony is about things should

298
00:10:27,516 --> 0:10:29,766
feel the way they look, the way

299
00:10:29,766 --> 0:10:30,296
they sound.

300
00:10:30,776 --> 0:10:36,226
In the real world, audio haptics

301
00:10:36,326 --> 0:10:38,156
and visuals are naturally in

302
00:10:38,156 --> 0:10:39,996
harmony because of the clear

303
00:10:39,996 --> 0:10:41,206
cause and effect relationship.

304
00:10:41,746 --> 0:10:45,396
In the digital world though, we

305
00:10:45,396 --> 0:10:47,376
have to do this work manually.

306
00:10:47,966 --> 0:10:50,806
New experiences are created in

307
00:10:51,246 --> 0:10:53,066
an additive process.

308
00:10:53,836 --> 0:10:55,736
The input and output need to be

309
00:10:55,736 --> 0:10:58,076
specifically designed by you,

310
00:10:58,326 --> 0:10:58,966
the developer.

311
00:10:59,716 --> 0:11:01,046
Let's start with creating a

312
00:10:59,716 --> 0:11:01,046
Let's start with creating a

313
00:11:01,046 --> 0:11:03,426
simple interface with the

314
00:11:03,426 --> 0:11:03,876
visual.

315
00:11:04,436 --> 0:11:08,286
We have a simple sphere dropping

316
00:11:08,286 --> 0:11:09,616
and colliding with the bottom of

317
00:11:10,456 --> 0:11:11,686
the screen.

318
00:11:11,876 --> 0:11:13,976
Next, let's add audio feedback.

319
00:11:16,516 --> 0:11:19,806
[ Beeping Sound ]

320
00:11:20,306 --> 0:11:22,946
Now, we choose a sound that

321
00:11:22,946 --> 0:11:24,646
corresponds to the physical

322
00:11:24,646 --> 0:11:26,186
impact or the bounds of the

323
00:11:26,186 --> 0:11:26,576
sphere.

324
00:11:27,726 --> 0:11:29,596
It needs to be short and precise

325
00:11:29,596 --> 0:11:31,716
and clear, but we also modulate

326
00:11:31,716 --> 0:11:32,966
the amplitude based on the

327
00:11:32,966 --> 0:11:35,356
velocity of the hit.

328
00:11:35,446 --> 0:11:36,846
Now, let's do additional work

329
00:11:37,086 --> 0:11:38,636
and introduce the third sense,

330
00:11:39,206 --> 0:11:43,966
haptic feedback [beeping sound].

331
00:11:44,046 --> 0:11:47,216
So imagine feeling that hit in

332
00:11:47,516 --> 0:11:48,096
your hand.

333
00:11:48,966 --> 0:11:50,556
Again, we're trying to design in

334
00:11:50,556 --> 0:11:53,516
harmony the sphere hitting the

335
00:11:53,516 --> 0:11:55,256
bottom of the screen, so we

336
00:11:55,256 --> 0:11:56,906
choose a transient event with

337
00:11:56,906 --> 0:11:57,646
high sharpness.

338
00:11:58,176 --> 0:12:00,166
We also modulate the intensity

339
00:11:58,176 --> 0:12:00,166
We also modulate the intensity

340
00:12:00,236 --> 0:12:03,556
to match the velocity of the

341
00:12:03,556 --> 0:12:03,846
bounce.

342
00:12:03,846 --> 0:12:06,266
We're not done yet.

343
00:12:06,346 --> 0:12:08,036
Because it's really important to

344
00:12:08,036 --> 0:12:09,536
think about synchronization

345
00:12:09,996 --> 0:12:11,496
between the three senses.

346
00:12:13,116 --> 0:12:15,086
That's where the magic happens.

347
00:12:15,356 --> 0:12:16,786
That's where the illusion of the

348
00:12:16,786 --> 0:12:18,256
real ball colliding with the

349
00:12:18,256 --> 0:12:19,506
wall takes shape.

350
00:12:20,386 --> 0:12:21,756
So here's an example where we

351
00:12:21,756 --> 0:12:23,236
broke the rules, and we

352
00:12:23,236 --> 0:12:24,536
introduced latency between the

353
00:12:24,536 --> 0:12:25,516
visual and the rest of the

354
00:12:25,516 --> 0:12:25,896
feedback.

355
00:12:27,471 --> 0:12:29,471
[ Beeping Sound ]

356
00:12:29,766 --> 0:12:31,326
It's clearly broken, and the

357
00:12:31,326 --> 0:12:33,186
illusion of a real bouncing ball

358
00:12:33,336 --> 0:12:34,466
is completely not there.

359
00:12:35,136 --> 0:12:36,976
So, harmony requires great care

360
00:12:36,976 --> 0:12:39,966
and attention from you but when

361
00:12:39,966 --> 0:12:42,336
done well can create very

362
00:12:42,336 --> 0:12:43,426
delightful and magical

363
00:12:43,426 --> 0:12:44,026
experiences.

364
00:12:47,006 --> 0:12:48,306
Let's look at different harmony

365
00:12:48,306 --> 0:12:50,226
in terms of the notion between

366
00:12:50,226 --> 0:12:52,296
interaction, visuals, audio and

367
00:12:52,296 --> 0:12:54,246
haptics, in terms of qualities

368
00:12:54,246 --> 0:12:55,526
and overall behaviors.

369
00:12:56,346 --> 0:12:58,096
We'll look at a simple green dot

370
00:12:58,096 --> 0:13:00,146
on screen that will animate and

371
00:12:58,096 --> 0:13:00,146
on screen that will animate and

372
00:13:00,176 --> 0:13:01,236
think through what kind of

373
00:13:01,236 --> 0:13:02,516
audio, what kind of haptics

374
00:13:02,516 --> 0:13:05,146
makes sense with that green dot.

375
00:13:05,916 --> 0:13:08,866
So if we add a snappy pop or a

376
00:13:08,866 --> 0:13:12,216
different pulse, what kind of

377
00:13:12,356 --> 0:13:14,146
audio, what kind of haptics work

378
00:13:14,146 --> 0:13:15,066
with these visuals?

379
00:13:15,996 --> 0:13:17,606
What if we have a large object

380
00:13:17,606 --> 0:13:18,206
on screen?

381
00:13:18,896 --> 0:13:20,016
Does it sound different?

382
00:13:20,016 --> 0:13:21,336
Does it feel different than a

383
00:13:21,376 --> 0:13:23,086
tiny little dot?

384
00:13:24,376 --> 0:13:26,436
If we add different dynamic

385
00:13:26,436 --> 0:13:27,996
behavior, a different energy

386
00:13:27,996 --> 0:13:32,156
level, a pressing, pulsating dot

387
00:13:32,216 --> 0:13:33,786
that really calls for attention

388
00:13:34,336 --> 0:13:35,326
might want a different sound,

389
00:13:35,326 --> 0:13:35,986
different haptics.

390
00:13:36,166 --> 0:13:37,626
And lastly, something that feels

391
00:13:37,756 --> 0:13:40,306
calm or like a heartbeat warrant

392
00:13:40,306 --> 0:13:41,316
different type of feedback.

393
00:13:41,906 --> 0:13:43,666
So, think about the pace, the

394
00:13:43,666 --> 0:13:45,686
energy level, and the different

395
00:13:45,686 --> 0:13:47,796
quality that you're trying to

396
00:13:47,796 --> 0:13:48,676
convey in your app.

397
00:13:49,266 --> 0:13:51,456
Design feedback that tell the

398
00:13:51,456 --> 0:13:53,386
consistent and unified story.

399
00:13:55,136 --> 0:13:58,686
&gt;&gt; Now I'll illustrate how the

400
00:13:58,686 --> 0:14:01,856
harmony principle helped us with

401
00:13:58,686 --> 0:14:01,856
harmony principle helped us with

402
00:14:01,856 --> 0:14:03,926
designing sound and haptics for

403
00:14:03,926 --> 0:14:04,846
the Apple Watch crowd.

404
00:14:05,656 --> 0:14:07,936
We were all used to our phones

405
00:14:08,246 --> 0:14:09,756
and their old school vibes

406
00:14:09,756 --> 0:14:10,526
coming from them.

407
00:14:10,806 --> 0:14:13,986
When the Apple Watch came out as

408
00:14:13,986 --> 0:14:15,226
the first device with a taptic

409
00:14:15,226 --> 0:14:17,226
engine, it was the first device

410
00:14:17,276 --> 0:14:19,096
that could precisely synchronize

411
00:14:19,096 --> 0:14:20,536
sound and haptics.

412
00:14:22,036 --> 0:14:24,266
Now for Series 4, haptics and a

413
00:14:24,266 --> 0:14:25,876
very subtle sound were added to

414
00:14:25,876 --> 0:14:30,356
the rotation of the crown.

415
00:14:30,526 --> 0:14:32,246
Remember the sharp and precise

416
00:14:32,246 --> 0:14:33,406
haptic that Camille described

417
00:14:33,406 --> 0:14:33,796
earlier?

418
00:14:34,576 --> 0:14:36,106
That was the one that we used

419
00:14:36,106 --> 0:14:36,696
for the crown.

420
00:14:37,896 --> 0:14:40,766
But it was scaled down to match

421
00:14:40,806 --> 0:14:43,296
the small size of the crown, and

422
00:14:43,296 --> 0:14:44,516
so the haptics are felt in the

423
00:14:44,516 --> 0:14:46,886
finger touching the crown rather

424
00:14:46,886 --> 0:14:50,186
than on the wrist.

425
00:14:50,376 --> 0:14:52,136
For sound, we looked at the

426
00:14:52,136 --> 0:14:53,516
world of traditional watch

427
00:14:53,516 --> 0:14:55,046
making for inspiration.

428
00:14:56,046 --> 0:14:58,516
We listened to and recorded all

429
00:14:58,516 --> 0:15:00,056
kinds of different watches, some

430
00:14:58,516 --> 0:15:00,056
kinds of different watches, some

431
00:15:00,216 --> 0:15:01,456
of which sounded quite

432
00:15:01,456 --> 0:15:02,456
remarkable, like this one

433
00:15:02,956 --> 0:15:05,736
[clicking sound].

434
00:15:06,236 --> 0:15:08,056
And then there are other

435
00:15:08,966 --> 0:15:11,116
physical mechanical objects in

436
00:15:11,116 --> 0:15:13,436
the real world with a similar

437
00:15:13,436 --> 0:15:15,946
sound like bicycle hubs

438
00:15:15,946 --> 0:15:16,876
[clicking sound].

439
00:15:16,876 --> 0:15:19,106
We wanted to find a sound that

440
00:15:19,106 --> 0:15:20,696
would feel natural coming from a

441
00:15:20,696 --> 0:15:21,766
device like this.

442
00:15:23,146 --> 0:15:24,026
We took these sounds as

443
00:15:24,026 --> 0:15:26,026
inspiration before we started

444
00:15:26,026 --> 0:15:26,766
crafting our own.

445
00:15:27,326 --> 0:15:29,646
And then this is the result.

446
00:15:29,646 --> 0:15:31,646
On your wrist, it sounds very

447
00:15:31,646 --> 0:15:32,846
quiet, just like you would

448
00:15:33,226 --> 0:15:34,976
expect coming from a watch.

449
00:15:35,516 --> 0:15:41,656
[ Clicking Sound ]

450
00:15:42,156 --> 0:15:43,976
The perfect coordination between

451
00:15:43,976 --> 0:15:47,056
sound and haptics creates the

452
00:15:47,186 --> 0:15:49,286
illusion of a mechanical crown,

453
00:15:49,886 --> 0:15:52,676
and then to match this

454
00:15:52,676 --> 0:15:54,216
mechanical sensation, our motion

455
00:15:54,216 --> 0:15:57,506
team changed the animation so it

456
00:15:57,556 --> 0:15:59,526
snaps to the sound and the

457
00:15:59,526 --> 0:16:00,856
haptics when using the crown.

458
00:15:59,526 --> 0:16:00,856
haptics when using the crown.

459
00:16:01,766 --> 0:16:05,316
Let's look at that [clicking

460
00:16:05,316 --> 0:16:05,466
sound].

461
00:16:05,466 --> 0:16:06,446
And I'll play it again.

462
00:16:06,446 --> 0:16:08,746
Look at the crown visualizing

463
00:16:08,996 --> 0:16:09,956
the haptics [clicking sound].

464
00:16:12,256 --> 0:16:13,996
The result is a precise

465
00:16:14,296 --> 0:16:16,206
mechanical feel, which is in

466
00:16:16,206 --> 0:16:17,696
perfect harmony with what you

467
00:16:17,696 --> 0:16:19,826
see and what you hear.

468
00:16:23,896 --> 0:16:26,466
&gt;&gt; Next, let's look at our third

469
00:16:26,586 --> 0:16:28,246
guiding principle, utility.

470
00:16:29,146 --> 0:16:31,276
Utility is about adding audio

471
00:16:31,276 --> 0:16:32,926
and haptic feedback only when

472
00:16:32,926 --> 0:16:35,186
you can provide clear value and

473
00:16:35,266 --> 0:16:37,866
benefit to your app experience.

474
00:16:37,906 --> 0:16:38,936
Use moderation.

475
00:16:39,686 --> 0:16:41,346
Don't add sound and haptics just

476
00:16:41,346 --> 0:16:43,676
because you can.

477
00:16:43,866 --> 0:16:45,576
Let's look at a simple AR kit

478
00:16:45,666 --> 0:16:47,436
app that we made to illustrate

479
00:16:48,066 --> 0:16:49,056
this point.

480
00:16:49,236 --> 0:16:51,176
In this app, we place a virtual

481
00:16:51,176 --> 0:16:53,446
timer in the environment, and

482
00:16:53,446 --> 0:16:55,156
then the interaction is

483
00:16:55,156 --> 0:16:56,436
dependent on the distance of

484
00:16:56,436 --> 0:16:57,306
that virtual timer.

485
00:16:57,816 --> 0:16:59,416
Let's look at the video first.

486
00:17:02,516 --> 0:17:05,500
[ Clicking Sound ]

487
00:17:08,516 --> 0:17:13,195
[ Clicking Sound ]

488
00:17:13,695 --> 0:17:16,046
So, in this app, we purposely

489
00:17:16,046 --> 0:17:17,425
designed audio and haptic

490
00:17:17,465 --> 0:17:19,185
feedback to complement the AR

491
00:17:19,185 --> 0:17:20,736
interaction and the most

492
00:17:20,736 --> 0:17:23,266
significant part of the user

493
00:17:23,266 --> 0:17:24,665
experience, meaning moving

494
00:17:24,665 --> 0:17:26,626
closer to the timer or moving

495
00:17:26,626 --> 0:17:29,126
away from the timer modulate the

496
00:17:29,126 --> 0:17:30,336
audio haptic experience.

497
00:17:30,746 --> 0:17:33,126
The three senses are coherent

498
00:17:33,126 --> 0:17:33,776
and unified.

499
00:17:34,536 --> 0:17:36,106
We refrain from adding other

500
00:17:36,246 --> 0:17:38,386
sound effects or haptic feedback

501
00:17:38,816 --> 0:17:39,586
to interacting with the

502
00:17:39,586 --> 0:17:40,976
different elements or other

503
00:17:40,976 --> 0:17:44,126
minor interaction in the app.

504
00:17:44,416 --> 0:17:46,356
&gt;&gt; It's often a good idea not to

505
00:17:46,356 --> 0:17:47,696
add sound and haptics.

506
00:17:48,416 --> 0:17:50,096
So, start by identifying

507
00:17:50,096 --> 0:17:51,416
possible locations in your app

508
00:17:52,356 --> 0:17:53,616
for audio haptic feedback, and

509
00:17:53,616 --> 0:17:56,136
then focus only on the elements

510
00:17:56,666 --> 0:17:57,616
where it can enhance the

511
00:17:57,616 --> 0:17:58,856
experience or communicate

512
00:17:58,856 --> 0:17:59,696
something important.

513
00:18:00,946 --> 0:18:02,586
And then, are you tempted to add

514
00:18:02,586 --> 0:18:02,906
more?

515
00:18:03,276 --> 0:18:04,196
But maybe don't.

516
00:18:04,196 --> 0:18:06,016
It will overwhelm people, and it

517
00:18:06,016 --> 0:18:08,966
will diminish the value of

518
00:18:08,966 --> 0:18:09,856
what's really important.

519
00:18:10,466 --> 0:18:15,846
So, to recap, here are the

520
00:18:15,846 --> 0:18:17,096
guiding principles one more

521
00:18:17,096 --> 0:18:17,406
time.

522
00:18:18,276 --> 0:18:20,686
We spoke about Causality, how it

523
00:18:20,686 --> 0:18:21,866
can help to think about what

524
00:18:21,866 --> 0:18:23,876
makes the sound and what causes

525
00:18:23,906 --> 0:18:24,466
the haptics.

526
00:18:25,646 --> 0:18:27,246
About Harmony, how sound,

527
00:18:27,646 --> 0:18:30,026
haptics, and visuals work

528
00:18:30,026 --> 0:18:32,006
together in creating a great

529
00:18:32,006 --> 0:18:32,566
experience.

530
00:18:33,656 --> 0:18:34,446
And Utility.

531
00:18:35,546 --> 0:18:39,156
How looking at the experience

532
00:18:39,156 --> 0:18:40,906
from the point of view of the

533
00:18:40,906 --> 0:18:42,906
human using your app.

534
00:18:45,236 --> 0:18:46,876
&gt;&gt; Next, let's look at the

535
00:18:46,876 --> 0:18:49,676
techniques and practical tips

536
00:18:49,726 --> 0:18:51,586
that we can use with these three

537
00:18:51,586 --> 0:18:53,756
guiding principles to create

538
00:18:53,756 --> 0:18:56,586
great audio haptic experience.

539
00:18:56,586 --> 0:18:58,916
First, a small recap about the

540
00:18:58,916 --> 0:19:00,416
primitives available in Core

541
00:18:58,916 --> 0:19:00,416
primitives available in Core

542
00:19:00,416 --> 0:19:00,826
Haptics.

543
00:19:01,516 --> 0:19:03,906
We have two building blocks that

544
00:19:03,906 --> 0:19:04,596
you can work with.

545
00:19:05,266 --> 0:19:06,436
The first one is called

546
00:19:06,436 --> 0:19:08,416
transient, and it is the sharp

547
00:19:08,926 --> 0:19:12,486
compact, haptic experience that

548
00:19:12,486 --> 0:19:14,096
you can feel like a tap or a

549
00:19:14,096 --> 0:19:14,486
strike.

550
00:19:14,976 --> 0:19:16,626
The second one is a continuous

551
00:19:17,196 --> 0:19:18,676
haptic experience that extends

552
00:19:18,676 --> 0:19:19,256
over time.

553
00:19:19,336 --> 0:19:21,156
You can specify the duration how

554
00:19:21,156 --> 0:19:22,646
long it should last.

555
00:19:23,996 --> 0:19:26,216
For transient, there are two

556
00:19:26,216 --> 0:19:27,986
design dimensions that is

557
00:19:27,986 --> 0:19:29,196
available and under your

558
00:19:29,196 --> 0:19:29,646
control.

559
00:19:30,106 --> 0:19:32,436
We have haptic intensity, and we

560
00:19:32,436 --> 0:19:34,176
have haptic sharpness to create

561
00:19:34,176 --> 0:19:36,626
something more round or soft at

562
00:19:36,626 --> 0:19:38,456
the lower value and something

563
00:19:38,456 --> 0:19:40,596
more precise, mechanical, and

564
00:19:40,596 --> 0:19:41,946
crisp at the upper bound.

565
00:19:42,826 --> 0:19:45,136
Intensity changes the amplitude

566
00:19:45,436 --> 0:19:46,776
of the experience as expected.

567
00:19:47,236 --> 0:19:50,756
For continuous, we have the two

568
00:19:50,936 --> 0:19:52,546
similar design dimensions.

569
00:19:53,196 --> 0:19:54,996
We have sharpness and intensity,

570
00:19:56,086 --> 0:19:58,326
and we're able to create more

571
00:19:58,426 --> 0:20:00,026
organic or rumble-like

572
00:19:58,426 --> 0:20:00,026
organic or rumble-like

573
00:20:00,026 --> 0:20:01,276
experience that extends over

574
00:20:01,276 --> 0:20:02,546
time or something that is more

575
00:20:02,546 --> 0:20:04,346
precise and more mechanical at

576
00:20:04,346 --> 0:20:05,656
the upper values of sharpness.

577
00:20:06,306 --> 0:20:08,806
So there are many more details

578
00:20:08,806 --> 0:20:09,996
and capabilities in the Core

579
00:20:09,996 --> 0:20:10,616
Haptics API.

580
00:20:11,256 --> 0:20:12,796
Be sure to check out the online

581
00:20:12,796 --> 0:20:13,506
documentation.

582
00:20:14,086 --> 0:20:16,796
&gt;&gt; Now, when designing sounds,

583
00:20:17,056 --> 0:20:19,326
keep in mind what will work best

584
00:20:19,466 --> 0:20:20,306
with these haptics.

585
00:20:21,476 --> 0:20:23,686
For a sharp transient, a chime

586
00:20:23,686 --> 0:20:24,696
with a sharp attack will

587
00:20:24,696 --> 0:20:26,906
probably work really well

588
00:20:26,906 --> 0:20:28,316
[chiming sound].

589
00:20:28,316 --> 0:20:29,886
But if we have a sound that's

590
00:20:29,886 --> 0:20:32,516
much smoother, using those same

591
00:20:32,516 --> 0:20:34,346
haptics, it's probably not such

592
00:20:34,346 --> 0:20:37,786
a good idea [music].

593
00:20:38,516 --> 0:20:40,866
So, for something like this, a

594
00:20:40,866 --> 0:20:42,416
continuous haptic ramping up and

595
00:20:42,416 --> 0:20:44,266
down probably works better.

596
00:20:46,206 --> 0:20:48,206
[ Music ]

597
00:20:48,396 --> 0:20:50,446
But these are not hard rules.

598
00:20:50,446 --> 0:20:52,046
There is a lot of room to

599
00:20:52,046 --> 0:20:55,266
experiment, and sometimes you

600
00:20:55,266 --> 0:20:56,816
may find out that the opposite

601
00:20:56,816 --> 0:20:57,956
of what you thought would work

602
00:20:58,506 --> 0:21:00,456
is actually better, and this was

603
00:20:58,506 --> 0:21:00,456
is actually better, and this was

604
00:21:00,456 --> 0:21:03,216
the case for the Apple Watch

605
00:21:03,216 --> 0:21:04,696
alarm, that sounds like this.

606
00:21:06,031 --> 0:21:08,031
[ Chiming Sound ]

607
00:21:08,046 --> 0:21:08,846
For a sound like this, you may

608
00:21:08,846 --> 0:21:10,996
want to add a haptic like this

609
00:21:11,486 --> 0:21:12,606
because it pairs together

610
00:21:12,846 --> 0:21:13,356
perfectly

611
00:21:14,516 --> 0:21:17,506
[chiming sound].

612
00:21:18,006 --> 0:21:18,726
But can we make it better?

613
00:21:19,876 --> 0:21:21,106
Can we keep experimenting?

614
00:21:21,106 --> 0:21:23,636
Maybe flip it around and change

615
00:21:24,736 --> 0:21:25,936
the timing?

616
00:21:26,441 --> 0:21:28,441
[ Chiming Sound ]

617
00:21:28,906 --> 0:21:30,686
This creates anticipation by

618
00:21:31,056 --> 0:21:32,916
ramping up the haptics and then

619
00:21:32,916 --> 0:21:33,956
quickly putting it off and

620
00:21:33,956 --> 0:21:34,736
playing the sound.

621
00:21:35,406 --> 0:21:36,736
There was a clear action

622
00:21:36,976 --> 0:21:38,656
reaction, and the sound plays as

623
00:21:38,656 --> 0:21:40,246
an answer to the haptic.

624
00:21:41,056 --> 0:21:42,556
This work really well for the

625
00:21:42,556 --> 0:21:43,336
Apple Watch alarm.

626
00:21:46,656 --> 0:21:49,186
Next, it's pretty common to have

627
00:21:49,186 --> 0:21:51,296
a number of events back to back

628
00:21:51,296 --> 0:21:52,436
to convey a different type of

629
00:21:52,436 --> 0:21:52,886
experience.

630
00:21:53,786 --> 0:21:55,566
In this case, we have four

631
00:21:56,126 --> 0:21:58,446
transient events, and we notice

632
00:21:58,446 --> 0:21:59,696
that when we present this to

633
00:21:59,696 --> 0:22:01,136
different people, they don't

634
00:21:59,696 --> 0:22:01,136
different people, they don't

635
00:22:01,136 --> 0:22:02,886
necessarily feel the first one.

636
00:22:03,166 --> 0:22:05,476
We have a first ghost haptics.

637
00:22:06,016 --> 0:22:07,886
[ Drumming Sound ]

638
00:22:07,886 --> 0:22:09,496
So the sequence of four taps is

639
00:22:09,496 --> 0:22:11,536
actually reported as a triple

640
00:22:11,536 --> 0:22:12,136
tap only.

641
00:22:13,246 --> 0:22:15,886
This could be a problem or an

642
00:22:15,886 --> 0:22:16,546
opportunity.

643
00:22:17,956 --> 0:22:19,486
We could use this effect of

644
00:22:19,486 --> 0:22:20,786
ghost or not perceiving the

645
00:22:20,786 --> 0:22:22,286
first one completely as a

646
00:22:22,286 --> 0:22:23,066
priming effect.

647
00:22:23,066 --> 0:22:27,066
Let's look at the example of a

648
00:22:27,066 --> 0:22:28,606
third-party alert on watchOS.

649
00:22:29,376 --> 0:22:30,636
This is the sound and the

650
00:22:30,636 --> 0:22:32,476
haptics of that third party

651
00:22:32,476 --> 0:22:32,976
notifications.

652
00:22:34,016 --> 0:22:35,656
[ Chiming Sound ]

653
00:22:35,656 --> 0:22:37,466
So this is a really important

654
00:22:37,466 --> 0:22:38,836
notification that we want to

655
00:22:38,836 --> 0:22:39,776
make sure that the user

656
00:22:39,816 --> 0:22:41,756
perceived and acknowledged

657
00:22:41,756 --> 0:22:42,166
clearly.

658
00:22:42,786 --> 0:22:45,906
So in this case, we use our

659
00:22:45,906 --> 0:22:48,496
ghost effect or a primer in this

660
00:22:48,526 --> 0:22:51,576
case to wake up the skin and

661
00:22:51,576 --> 0:22:53,246
make sure that it's completely

662
00:22:53,546 --> 0:22:55,026
ready to feel what's to come.

663
00:22:56,156 --> 0:22:57,966
Let's listen and feel it.

664
00:22:59,516 --> 0:23:02,866
[ Drum and Chiming Sound ]

665
00:22:59,516 --> 0:23:02,866
[ Drum and Chiming Sound ]

666
00:23:03,366 --> 0:23:05,256
So, in this case, we have clear

667
00:23:05,256 --> 0:23:07,706
presentation and recognition of

668
00:23:07,706 --> 0:23:08,756
our main notification

669
00:23:08,756 --> 0:23:09,236
experience.

670
00:23:09,766 --> 0:23:12,336
Next, we can also create

671
00:23:12,336 --> 0:23:14,776
contrast between very similar

672
00:23:14,776 --> 0:23:15,436
experiences.

673
00:23:16,016 --> 0:23:19,256
Here is the sound for the left

674
00:23:19,256 --> 0:23:20,856
navigation cue on watchOS.

675
00:23:21,776 --> 0:23:24,546
It sounds like this

676
00:23:25,046 --> 0:23:27,576
[beeping sound].

677
00:23:28,076 --> 0:23:30,006
With our harmony guiding

678
00:23:30,006 --> 0:23:32,156
principles, we end up with

679
00:23:32,436 --> 0:23:34,526
really nice haptics that pairs

680
00:23:34,526 --> 0:23:35,746
very well with that sound.

681
00:23:36,346 --> 0:23:37,626
So we have a series of double

682
00:23:37,626 --> 0:23:39,716
strikes that sound and feel like

683
00:23:39,716 --> 0:23:39,826
this.

684
00:23:41,516 --> 0:23:44,916
[ Beeping Sound ]

685
00:23:45,416 --> 0:23:47,406
Now if we look at the right cue,

686
00:23:48,036 --> 0:23:49,856
we have a similar sound but

687
00:23:49,986 --> 0:23:50,736
slightly different.

688
00:23:52,486 --> 0:23:54,486
[ Beeping Sound ]

689
00:23:54,956 --> 0:23:56,276
So we can notice the little

690
00:23:56,596 --> 0:23:58,256
difference between the left and

691
00:23:58,256 --> 0:24:00,526
the right on the audio, but if

692
00:23:58,256 --> 0:24:00,526
the right on the audio, but if

693
00:24:00,526 --> 0:24:02,616
we continue to follow our

694
00:24:02,616 --> 0:24:04,946
harmony principle, with the

695
00:24:04,946 --> 0:24:06,136
haptics we end up with an

696
00:24:06,136 --> 0:24:07,926
identical pattern between the

697
00:24:07,926 --> 0:24:09,246
left and the right experience.

698
00:24:10,606 --> 0:24:13,476
In this case, we want to add

699
00:24:13,476 --> 0:24:14,106
haptics.

700
00:24:14,526 --> 0:24:16,126
We double up the haptics from

701
00:24:16,126 --> 0:24:17,986
the double strikes, and then we

702
00:24:17,986 --> 0:24:19,876
have true contrast between left

703
00:24:19,876 --> 0:24:20,236
and right.

704
00:24:21,366 --> 0:24:25,646
Let's listen and feel what, this

705
00:24:26,016 --> 0:24:28,586
experience [beeping sounds].

706
00:24:30,096 --> 0:24:31,906
Again, we have contrast between

707
00:24:31,906 --> 0:24:33,636
the left and the right for very

708
00:24:33,636 --> 0:24:34,866
similar audio experience.

709
00:24:38,106 --> 0:24:39,456
&gt;&gt; So, by now you have quite a

710
00:24:39,526 --> 0:24:41,106
few tools to create your own

711
00:24:41,216 --> 0:24:42,006
experiences.

712
00:24:42,736 --> 0:24:43,786
We would like to show you one

713
00:24:43,786 --> 0:24:46,136
more example illustrating the

714
00:24:46,136 --> 0:24:46,826
points we made.

715
00:24:47,056 --> 0:24:49,056
This is a full screen effect in

716
00:24:49,056 --> 0:24:49,706
messages.

717
00:24:50,476 --> 0:24:54,236
[ Popping and Crackling Sound ]

718
00:24:54,736 --> 0:24:56,026
The sound and haptics are

719
00:24:56,116 --> 0:24:57,406
perfectly synchronized to the

720
00:24:57,406 --> 0:24:59,236
animation, and it's a delightful

721
00:24:59,236 --> 0:25:00,706
moment for a special occasion.

722
00:24:59,236 --> 0:25:00,706
moment for a special occasion.

723
00:25:01,076 --> 0:25:02,706
Let's look at it one more time.

724
00:25:03,676 --> 0:25:08,206
[ Popping and Crackling Sound ]

725
00:25:08,706 --> 0:25:10,356
Now, if you haven't yet, I

726
00:25:10,356 --> 0:25:12,296
encourage you to try this out on

727
00:25:12,296 --> 0:25:14,166
your own iPhone to experience

728
00:25:14,166 --> 0:25:15,116
the haptics yourself.

729
00:25:15,706 --> 0:25:19,146
And now, a few more thoughts to

730
00:25:19,146 --> 0:25:20,996
consider in addition to the

731
00:25:20,996 --> 0:25:22,216
guiding principles that we

732
00:25:22,216 --> 0:25:22,596
shared.

733
00:25:24,956 --> 0:25:26,566
The best results come when

734
00:25:26,566 --> 0:25:29,036
sound, haptics, and visuals are

735
00:25:29,036 --> 0:25:30,526
designed hand in hand.

736
00:25:31,386 --> 0:25:32,216
Are you an animator?

737
00:25:32,976 --> 0:25:34,396
Collaborate with the sound or

738
00:25:34,396 --> 0:25:35,706
interaction designer and vice

739
00:25:35,706 --> 0:25:36,066
versa.

740
00:25:36,836 --> 0:25:38,176
It's the best way to come to a

741
00:25:38,176 --> 0:25:39,306
unified experience.

742
00:25:41,016 --> 0:25:43,916
Imagine using your own app for

743
00:25:43,916 --> 0:25:45,246
the very first time.

744
00:25:46,746 --> 0:25:48,066
What would you like it to sound

745
00:25:48,106 --> 0:25:49,446
like or feel like?

746
00:25:50,416 --> 0:25:51,596
And then imagine using it a

747
00:25:51,696 --> 0:25:52,596
hundred times more.

748
00:25:53,926 --> 0:25:56,266
Does it still help you to hear

749
00:25:56,266 --> 0:25:58,386
and feel these things or are you

750
00:25:58,386 --> 0:25:58,956
overwhelmed?

751
00:26:00,276 --> 0:26:02,876
Experience it and take away all

752
00:26:02,876 --> 0:26:03,976
the things that don't feel

753
00:26:03,976 --> 0:26:05,616
compelling or that are not

754
00:26:05,616 --> 0:26:05,956
useful.

755
00:26:06,526 --> 0:26:08,716
And don't be afraid to

756
00:26:08,716 --> 0:26:09,316
experiment.

757
00:26:09,816 --> 0:26:10,586
Try things out.

758
00:26:11,026 --> 0:26:11,596
Prototype.

759
00:26:12,656 --> 0:26:13,686
We've seen that you may just

760
00:26:13,686 --> 0:26:15,726
come across something amazing by

761
00:26:15,726 --> 0:26:17,326
trying something new.

762
00:26:18,296 --> 0:26:20,196
We're looking forward to seeing,

763
00:26:20,596 --> 0:26:22,556
hearing, and feeling what you

764
00:26:22,556 --> 0:26:24,056
will come up with in your own

765
00:26:24,056 --> 0:26:24,286
apps.

766
00:26:25,626 --> 0:26:26,506
See this URL for more

767
00:26:26,506 --> 0:26:26,996
information.

768
00:26:27,286 --> 0:26:27,936
Thank you very much.

769
00:26:28,516 --> 0:26:36,926
[ Applause ]

770
00:26:37,426 --> 0:26:37,656
&gt;&gt; All right.

771
00:26:38,276 --> 0:26:39,346
Thank you Hugo and Camille.

772
00:26:39,346 --> 0:26:41,386
So, now that we have a better

773
00:26:41,386 --> 0:26:43,176
idea of how to design our haptic

774
00:26:43,176 --> 0:26:45,496
experiences for our apps, now

775
00:26:45,496 --> 0:26:46,646
let's understand how we're going

776
00:26:46,646 --> 0:26:48,196
to take these principles and put

777
00:26:48,196 --> 0:26:49,726
them into practice in code.

778
00:26:50,196 --> 0:26:52,086
And to do that, Michael and Doug

779
00:26:52,086 --> 0:26:53,676
are going to walk through how we

780
00:26:53,676 --> 0:26:54,936
can take advantage of the new

781
00:26:54,986 --> 0:26:56,336
Core Haptic APIs.

782
00:26:56,336 --> 0:26:58,226
And to start that off, I'd like

783
00:26:58,226 --> 0:26:59,236
to introduce Michael to the

784
00:26:59,236 --> 0:26:59,626
stage.

785
00:27:02,516 --> 0:27:06,586
[ Applause ]

786
00:27:07,086 --> 0:27:07,696
&gt;&gt; Good evening.

787
00:27:08,186 --> 0:27:09,306
I'm Michael Diu from the

788
00:27:09,306 --> 0:27:10,866
interactive haptics team, and

789
00:27:11,076 --> 0:27:12,446
I'm looking forward to sharing

790
00:27:12,446 --> 0:27:14,226
the many advances in haptics in

791
00:27:14,336 --> 0:27:15,816
iOS 13 with you.

792
00:27:16,636 --> 0:27:19,966
Let's take a look at our agenda.

793
00:27:20,046 --> 0:27:21,756
First, we'll find out where we

794
00:27:21,756 --> 0:27:23,786
can use Core Haptics, how it

795
00:27:23,846 --> 0:27:25,616
fits in with other audio and

796
00:27:25,616 --> 0:27:27,566
haptic APIs.

797
00:27:29,036 --> 0:27:30,786
We'll talk about the two groups

798
00:27:30,786 --> 0:27:33,266
of classes in the API and the

799
00:27:33,266 --> 0:27:35,806
basic dimensions and descriptors

800
00:27:36,036 --> 0:27:38,156
that we will use to describe our

801
00:27:38,156 --> 0:27:39,836
haptics and audio content.

802
00:27:40,446 --> 0:27:42,636
We're going to walk through the

803
00:27:42,636 --> 0:27:44,436
basic recipe to start playing

804
00:27:44,436 --> 0:27:47,536
out that content, and then we're

805
00:27:47,536 --> 0:27:49,746
going to move onto introducing

806
00:27:49,836 --> 0:27:51,056
dynamic parameters.

807
00:27:51,256 --> 0:27:53,456
And dynamic parameters are a way

808
00:27:53,456 --> 0:27:55,136
that you can customize your

809
00:27:55,136 --> 0:27:56,866
haptic patterns at playback

810
00:27:56,966 --> 0:27:59,736
time, in response to your user

811
00:27:59,986 --> 0:28:02,736
or your app's behavior.

812
00:27:59,986 --> 0:28:02,736
or your app's behavior.

813
00:28:02,796 --> 0:28:04,676
And, we're going to explore a

814
00:28:04,676 --> 0:28:07,786
new way to express, store, and

815
00:28:07,786 --> 0:28:09,426
share your audio haptics

816
00:28:09,426 --> 0:28:11,146
contents, a new file format

817
00:28:11,346 --> 0:28:12,866
we're calling the Apple Haptic

818
00:28:13,066 --> 0:28:15,466
Audio Pattern or AHAP.

819
00:28:16,156 --> 0:28:22,466
So let's get to it.

820
00:28:22,726 --> 0:28:24,676
First, what is Core Haptics?

821
00:28:26,036 --> 0:28:27,276
We can think of it as an

822
00:28:27,276 --> 0:28:29,786
event-based audio and haptic

823
00:28:29,976 --> 0:28:33,436
rendering API or synthesizer for

824
00:28:33,436 --> 0:28:33,786
iPhone.

825
00:28:34,356 --> 0:28:37,476
We can continue to use our other

826
00:28:37,476 --> 0:28:39,446
audio and haptics and feedback

827
00:28:39,446 --> 0:28:42,396
APIs like AV Audio Player and

828
00:28:42,396 --> 0:28:44,506
UIKit's UIFeedback Generator in

829
00:28:44,506 --> 0:28:46,266
parallel with Core Haptics.

830
00:28:47,616 --> 0:28:49,326
You might be wondering, which

831
00:28:49,676 --> 0:28:53,676
iPhones can I use this on.

832
00:28:53,826 --> 0:28:56,206
With just one API and one file

833
00:28:56,206 --> 0:28:57,806
format, we will be able to

834
00:28:57,896 --> 0:29:00,896
access hundreds of millions of

835
00:28:57,896 --> 0:29:00,896
access hundreds of millions of

836
00:29:00,896 --> 0:29:02,496
taptic engine equipped iPhones

837
00:29:02,726 --> 0:29:04,666
starting from iPhone 8 onward.

838
00:29:05,316 --> 0:29:08,066
And we've taken care that your

839
00:29:08,136 --> 0:29:09,186
haptic patterns will have the

840
00:29:09,186 --> 0:29:11,316
same feel across all of these

841
00:29:11,316 --> 0:29:13,316
products, so much so that you're

842
00:29:13,316 --> 0:29:15,166
going to be able to prototype

843
00:29:15,166 --> 0:29:17,566
and release just using one

844
00:29:17,566 --> 0:29:17,946
product.

845
00:29:18,526 --> 0:29:23,536
And these iPhones aren't

846
00:29:23,536 --> 0:29:25,576
equipped with just any old

847
00:29:25,656 --> 0:29:26,856
commodity actuator.

848
00:29:27,176 --> 0:29:28,836
They all have the Apple-designed

849
00:29:29,006 --> 0:29:30,696
taptic engine, which offers you

850
00:29:30,696 --> 0:29:32,666
that unique combination of

851
00:29:33,666 --> 0:29:35,976
power, a wide expressive range,

852
00:29:36,276 --> 0:29:38,656
and an unmatched precision and

853
00:29:38,656 --> 0:29:40,486
control and subtlety.

854
00:29:40,966 --> 0:29:44,096
Next, I'd like to talk about

855
00:29:44,096 --> 0:29:45,466
those of you who have already

856
00:29:45,466 --> 0:29:47,516
started adopting haptics on

857
00:29:47,596 --> 0:29:49,806
iPhone with UIKit's Feedback

858
00:29:49,806 --> 0:29:51,866
Generated APIs.

859
00:29:53,436 --> 0:29:56,026
Now, Core Haptics is not a

860
00:29:56,026 --> 0:29:58,216
replacement for this API.

861
00:29:59,096 --> 0:30:01,156
In most cases, you want to keep

862
00:29:59,096 --> 0:30:01,156
In most cases, you want to keep

863
00:30:01,156 --> 0:30:03,006
on using Feedback Generator

864
00:30:03,006 --> 0:30:06,096
especially for UIKit controls

865
00:30:06,196 --> 0:30:07,346
and adding haptics to that.

866
00:30:08,196 --> 0:30:11,096
With that API, you indicate the

867
00:30:11,096 --> 0:30:12,626
design intent for your event,

868
00:30:12,626 --> 0:30:14,586
whether that's a selection, an

869
00:30:14,586 --> 0:30:16,836
impact, or a notification, and

870
00:30:16,836 --> 0:30:18,686
you let someone else, Apple,

871
00:30:19,046 --> 0:30:20,456
worry about developing a

872
00:30:20,456 --> 0:30:22,596
vocabulary to express that and

873
00:30:22,716 --> 0:30:25,106
mixing the right modalities like

874
00:30:25,106 --> 0:30:27,086
audio, haptics, animation to

875
00:30:27,086 --> 0:30:28,346
communicate that message.

876
00:30:29,626 --> 0:30:31,076
Now this API is also being

877
00:30:31,076 --> 0:30:32,516
improved in iOS 13.

878
00:30:32,686 --> 0:30:33,626
So please check out its

879
00:30:33,626 --> 0:30:35,196
documentation for more details.

880
00:30:35,956 --> 0:30:40,516
In contrast, Core Haptics is

881
00:30:40,516 --> 0:30:42,226
good when you want to be your

882
00:30:42,226 --> 0:30:44,456
own sound and haptic designer.

883
00:30:45,346 --> 0:30:47,006
With it, you developed your own

884
00:30:47,006 --> 0:30:49,146
patterns, and you can have a lot

885
00:30:49,146 --> 0:30:51,646
more control over exactly what

886
00:30:51,646 --> 0:30:52,896
time it gets played, so you can

887
00:30:52,896 --> 0:30:55,436
synchronize with other APIs like

888
00:30:55,986 --> 0:30:57,736
an animation from Core Animation

889
00:30:58,006 --> 0:31:00,306
or a sound event from AV Audio

890
00:30:58,006 --> 0:31:00,306
or a sound event from AV Audio

891
00:31:00,306 --> 0:31:00,606
Engine.

892
00:31:01,756 --> 0:31:03,256
You have a much richer set of

893
00:31:03,356 --> 0:31:04,446
playback and modulation

894
00:31:04,446 --> 0:31:04,926
controls.

895
00:31:06,116 --> 0:31:08,486
Now, UIKit is built on top of

896
00:31:08,486 --> 0:31:11,816
Core Haptics, so both APIs share

897
00:31:11,816 --> 0:31:13,926
the same low latency performance

898
00:31:13,926 --> 0:31:14,786
characteristics.

899
00:31:15,646 --> 0:31:19,096
Now, designing your own haptic

900
00:31:19,126 --> 0:31:21,316
patterns is going to take more

901
00:31:21,316 --> 0:31:23,666
time, but when it allows you to

902
00:31:23,666 --> 0:31:24,686
do something that you couldn't

903
00:31:24,686 --> 0:31:27,306
otherwise do, and when it allows

904
00:31:27,306 --> 0:31:29,726
you to differentiate your app,

905
00:31:30,286 --> 0:31:31,366
then it's worth thinking about.

906
00:31:32,156 --> 0:31:33,796
Now, next I'd like to talk a bit

907
00:31:33,796 --> 0:31:34,876
more about those audio

908
00:31:34,876 --> 0:31:35,826
capabilities.

909
00:31:37,816 --> 0:31:39,886
So, Core Haptics is also an

910
00:31:39,886 --> 0:31:42,876
audio API, and so that allows

911
00:31:42,876 --> 0:31:45,126
you to play short, synthesized,

912
00:31:45,396 --> 0:31:48,656
or custom waveform audio in

913
00:31:48,656 --> 0:31:50,436
synchronization tight sync with

914
00:31:50,436 --> 0:31:51,206
your haptics.

915
00:31:52,676 --> 0:31:54,246
This type of audio haptic

916
00:31:54,276 --> 0:31:55,986
duality has been crucial to many

917
00:31:55,986 --> 0:31:57,206
of Apple's own haptic

918
00:31:57,206 --> 0:31:59,356
experiences like the haptic home

919
00:31:59,356 --> 0:32:02,536
button in iPhone 7, the haptic

920
00:31:59,356 --> 0:32:02,536
button in iPhone 7, the haptic

921
00:32:02,536 --> 0:32:05,516
crown in Series 4 Watch, and the

922
00:32:05,516 --> 0:32:07,206
UIDatePicker, those scrolling

923
00:32:07,206 --> 0:32:09,236
wheels that you use to select

924
00:32:09,346 --> 0:32:10,976
dates and times and alarms and

925
00:32:10,976 --> 0:32:11,426
calendars.

926
00:32:12,426 --> 0:32:13,956
And, you may not have realized

927
00:32:14,506 --> 0:32:14,636
that.

928
00:32:14,816 --> 0:32:16,066
You may not even have noticed

929
00:32:16,066 --> 0:32:17,056
that there was audio in these

930
00:32:17,056 --> 0:32:18,806
experiences, but if you were to

931
00:32:18,806 --> 0:32:20,696
cover up that audio once you

932
00:32:20,696 --> 0:32:22,226
take it away, you'll realize

933
00:32:22,256 --> 0:32:24,076
that it's an inseparable and

934
00:32:24,076 --> 0:32:24,906
integral part of that

935
00:32:24,906 --> 0:32:25,546
experience.

936
00:32:25,816 --> 0:32:28,606
So now, you can do the same with

937
00:32:28,606 --> 0:32:29,996
Core Haptics in your own apps.

938
00:32:30,276 --> 0:32:31,876
And I want to talk about some

939
00:32:31,876 --> 0:32:34,086
categories of apps, one huge

940
00:32:34,086 --> 0:32:35,656
category in particular, where

941
00:32:35,656 --> 0:32:36,566
you might want to think about

942
00:32:36,566 --> 0:32:40,536
Core Haptics, and that's games.

943
00:32:40,876 --> 0:32:42,336
So, imagine we are at the

944
00:32:42,336 --> 0:32:42,846
racetrack.

945
00:32:43,116 --> 0:32:44,386
We want to go into turbo mode.

946
00:32:44,826 --> 0:32:45,446
Let's imagine [rumbling sound].

947
00:32:46,206 --> 0:32:52,086
When you've got the brute force

948
00:32:52,086 --> 0:32:53,846
message to deliver, think about

949
00:32:53,846 --> 0:32:55,696
using synchronized haptics and

950
00:32:55,696 --> 0:32:57,656
audio in your app to generate

951
00:32:57,656 --> 0:32:59,496
those visceral explosions and

952
00:32:59,496 --> 0:32:59,856
rumbles.

953
00:33:01,566 --> 0:33:03,746
Now, another very nice

954
00:33:03,746 --> 0:33:06,776
application is simulate physical

955
00:33:06,776 --> 0:33:08,226
contact, to make your

956
00:33:08,226 --> 0:33:09,696
applications feel more

957
00:33:09,696 --> 0:33:10,306
realistic.

958
00:33:11,136 --> 0:33:12,166
Think about a tennis game.

959
00:33:13,136 --> 0:33:14,776
You could have audio and haptic

960
00:33:14,776 --> 0:33:17,526
components where the pitch of

961
00:33:17,526 --> 0:33:18,896
your audio, the intensity of

962
00:33:18,896 --> 0:33:20,546
your haptics are proportional to

963
00:33:20,546 --> 0:33:22,456
how fast your swing is or how

964
00:33:22,456 --> 0:33:23,926
centered the ball lands in the

965
00:33:23,926 --> 0:33:24,696
middle of the racket.

966
00:33:25,126 --> 0:33:26,656
And you can even control how

967
00:33:26,656 --> 0:33:28,526
long the strings your racket

968
00:33:28,656 --> 0:33:30,176
will resonate for after the

969
00:33:30,176 --> 0:33:30,526
impact.

970
00:33:32,836 --> 0:33:34,056
So, another great area to think

971
00:33:34,056 --> 0:33:36,016
about using Core Haptics is in

972
00:33:36,046 --> 0:33:38,156
augmented reality apps.

973
00:33:39,436 --> 0:33:41,016
And there, if you're working in

974
00:33:41,016 --> 0:33:42,746
this space, you're already

975
00:33:42,746 --> 0:33:44,366
familiar with the benefits of

976
00:33:44,366 --> 0:33:45,876
having high visual fidelity

977
00:33:46,256 --> 0:33:49,996
paired with 3D audio, working in

978
00:33:49,996 --> 0:33:50,416
concert.

979
00:33:50,736 --> 0:33:52,756
Now, we can reach for that next

980
00:33:52,756 --> 0:33:55,366
level of emersion by considering

981
00:33:55,366 --> 0:33:58,046
how custom haptic feedback can

982
00:33:58,386 --> 0:34:01,316
ground our user gestures or

983
00:33:58,386 --> 0:34:01,316
ground our user gestures or

984
00:34:02,356 --> 0:34:06,386
respond to app, device, and AR

985
00:34:06,386 --> 0:34:07,586
object events.

986
00:34:07,796 --> 0:34:09,545
For example, moving your device

987
00:34:09,545 --> 0:34:13,286
around or moving your entire

988
00:34:13,335 --> 0:34:14,076
users around.

989
00:34:14,636 --> 0:34:18,426
As an inspiration, this year

990
00:34:18,426 --> 0:34:20,666
we've enhanced the swish sample

991
00:34:20,666 --> 0:34:23,626
code by using haptics that are

992
00:34:23,626 --> 0:34:27,005
modulated based on how fast you

993
00:34:27,126 --> 0:34:29,906
pull back the sling, how fast

994
00:34:29,906 --> 0:34:31,275
you pull back your phone.

995
00:34:31,916 --> 0:34:33,275
You're going to feel the tension

996
00:34:33,406 --> 0:34:35,146
building up as you stretch it

997
00:34:35,146 --> 0:34:36,025
back, and then the very

998
00:34:36,025 --> 0:34:38,146
satisfying thunk as you release.

999
00:34:39,326 --> 0:34:40,936
I'd like to show you a video of

1000
00:34:40,936 --> 0:34:43,335
this, and I'm going to use audio

1001
00:34:43,335 --> 0:34:45,206
to represent just the haptics

1002
00:34:45,235 --> 0:34:46,005
that you're going to feel.

1003
00:34:46,596 --> 0:34:48,976
They're going to sound like this

1004
00:34:49,516 --> 0:34:51,596
[chiming sound].

1005
00:34:52,096 --> 0:34:53,556
Now, we're going to see the

1006
00:34:53,556 --> 0:34:55,596
whole thing together, visuals

1007
00:34:55,746 --> 0:34:58,446
and haptics, no regular audio.

1008
00:34:59,758 --> 0:35:01,758
[ Chiming Sound ]

1009
00:34:59,758 --> 0:35:01,758
[ Chiming Sound ]

1010
00:35:03,686 --> 0:35:05,516
So that was an example of how we

1011
00:35:05,516 --> 0:35:09,216
can use haptics, sound, and

1012
00:35:09,216 --> 0:35:10,976
visuals all synchronized

1013
00:35:10,976 --> 0:35:12,546
together to enhance our AR

1014
00:35:12,546 --> 0:35:13,556
experience.

1015
00:35:13,846 --> 0:35:14,756
Now, these are just a few

1016
00:35:14,756 --> 0:35:17,016
categories of apps, games, and

1017
00:35:17,016 --> 0:35:18,696
AR that are ripe for creative

1018
00:35:18,696 --> 0:35:20,826
explorations with haptics and

1019
00:35:20,826 --> 0:35:21,846
their corresponding sounds.

1020
00:35:22,586 --> 0:35:23,616
I'm sure you're going to think

1021
00:35:23,616 --> 0:35:24,876
of many, many more.

1022
00:35:25,456 --> 0:35:30,986
So, now let's get into how we

1023
00:35:30,986 --> 0:35:32,986
can start expressing our content

1024
00:35:33,466 --> 0:35:35,036
with Core Haptics.

1025
00:35:36,536 --> 0:35:38,446
There are just two groups of

1026
00:35:38,446 --> 0:35:39,976
classes in Core Haptics.

1027
00:35:40,046 --> 0:35:41,856
There's those to represent your

1028
00:35:41,856 --> 0:35:44,196
content and those to play back

1029
00:35:44,196 --> 0:35:44,806
that content.

1030
00:35:45,506 --> 0:35:48,486
Let's take a closer look at the

1031
00:35:48,486 --> 0:35:50,166
content side first.

1032
00:35:50,896 --> 0:35:54,336
The basic indivisible content

1033
00:35:54,336 --> 0:35:56,476
element in Core Haptics is

1034
00:35:56,476 --> 0:35:57,846
called a CH Haptic Event.

1035
00:35:58,756 --> 0:36:02,146
Now each event has a type and a

1036
00:35:58,756 --> 0:36:02,146
Now each event has a type and a

1037
00:36:02,146 --> 0:36:04,456
time, and optionally parameters

1038
00:36:04,696 --> 0:36:06,566
that will customized its feel.

1039
00:36:08,306 --> 0:36:10,366
These events can overlap each

1040
00:36:10,366 --> 0:36:11,646
other, and when they do, they

1041
00:36:11,646 --> 0:36:12,116
mix.

1042
00:36:13,476 --> 0:36:15,996
And all events are grouped into

1043
00:36:16,426 --> 0:36:16,876
a pattern.

1044
00:36:18,206 --> 0:36:19,606
Next, I'd like to talk about

1045
00:36:19,896 --> 0:36:21,626
those types of events.

1046
00:36:21,626 --> 0:36:25,856
Our first type is called the

1047
00:36:25,906 --> 0:36:26,746
Haptic Transient.

1048
00:36:27,506 --> 0:36:29,366
The Haptic Transient, I think of

1049
00:36:29,366 --> 0:36:31,676
it as a gavel, it's a tricking

1050
00:36:31,676 --> 0:36:32,186
motion.

1051
00:36:32,366 --> 0:36:33,516
It's momentary and

1052
00:36:33,516 --> 0:36:34,216
instantaneous.

1053
00:36:35,036 --> 0:36:37,076
And then we have two continuous

1054
00:36:37,076 --> 0:36:37,686
types.

1055
00:36:38,736 --> 0:36:40,536
We have Haptic Continuous and

1056
00:36:40,536 --> 0:36:41,616
Audio Continuous.

1057
00:36:42,006 --> 0:36:43,326
And there, I think of, for

1058
00:36:43,326 --> 0:36:45,256
example, bowing a stringed

1059
00:36:45,256 --> 0:36:45,796
instrument.

1060
00:36:46,346 --> 0:36:49,096
It is longer than a transient.

1061
00:36:49,386 --> 0:36:50,746
It can be, for example, used as

1062
00:36:50,746 --> 0:36:52,306
a background texture, and you

1063
00:36:52,306 --> 0:36:54,296
have a much richer set of knobs

1064
00:36:54,296 --> 0:36:55,266
that you can use, for example,

1065
00:36:55,266 --> 0:36:56,976
to modulate the resonance of it.

1066
00:36:58,446 --> 0:37:01,246
Lastly, we have the Audio Custom

1067
00:36:58,446 --> 0:37:01,246
Lastly, we have the Audio Custom

1068
00:37:01,246 --> 0:37:03,876
type, and the Audio Custom, as I

1069
00:37:03,876 --> 0:37:05,866
mentioned earlier, is where you

1070
00:37:05,866 --> 0:37:08,316
can provide your own audio to be

1071
00:37:08,616 --> 0:37:11,526
played back in sync with the

1072
00:37:11,566 --> 0:37:12,056
haptics.

1073
00:37:13,576 --> 0:37:15,216
Next, let's talk about some of

1074
00:37:15,216 --> 0:37:17,396
those optional parameters.

1075
00:37:17,906 --> 0:37:22,636
Our first event parameter is

1076
00:37:22,636 --> 0:37:25,286
called haptic intensity, and it

1077
00:37:25,286 --> 0:37:28,086
has an audio analog, audio

1078
00:37:28,086 --> 0:37:29,126
volume, which you're probably

1079
00:37:29,126 --> 0:37:30,066
already familiar with.

1080
00:37:31,416 --> 0:37:33,716
Now, with this parameter, you go

1081
00:37:33,716 --> 0:37:35,936
from no output as you turn, and

1082
00:37:35,936 --> 0:37:37,906
as you turn the knob from 0 all

1083
00:37:37,906 --> 0:37:39,306
the way up to 1, you go to

1084
00:37:39,306 --> 0:37:42,506
maximum output of the system.

1085
00:37:42,506 --> 0:37:43,996
Our next parameter is called

1086
00:37:43,996 --> 0:37:45,536
haptic sharpness.

1087
00:37:45,836 --> 0:37:48,046
Now, haptic sharpness is a new

1088
00:37:48,046 --> 0:37:48,546
concept.

1089
00:37:48,916 --> 0:37:50,826
There's no physical analog to

1090
00:37:50,826 --> 0:37:52,486
this, and there's also no audio

1091
00:37:52,486 --> 0:37:52,986
analog.

1092
00:37:53,506 --> 0:37:58,136
In this world, I want you to

1093
00:37:58,136 --> 0:38:00,176
instead think of moving along in

1094
00:37:58,136 --> 0:38:00,176
instead think of moving along in

1095
00:38:00,176 --> 0:38:03,636
a perceptual space from a very

1096
00:38:03,636 --> 0:38:07,966
round and organic feel at 0 all

1097
00:38:07,966 --> 0:38:09,296
the way to a more crisp and

1098
00:38:09,296 --> 0:38:11,126
precise feel at 1.

1099
00:38:11,636 --> 0:38:13,576
And to help ground that a bit

1100
00:38:13,576 --> 0:38:15,526
further, I'm going to use some

1101
00:38:15,526 --> 0:38:17,366
examples from iOS 12.

1102
00:38:18,856 --> 0:38:20,846
The flashlight button on your

1103
00:38:20,846 --> 0:38:22,366
lock screen is an example of a

1104
00:38:22,366 --> 0:38:25,726
very high sharpness haptic, and

1105
00:38:27,016 --> 0:38:30,826
the app switcher, that swipe up,

1106
00:38:30,826 --> 0:38:33,206
that's an example of a more

1107
00:38:33,206 --> 0:38:34,926
round, a lower sharpness haptic.

1108
00:38:35,456 --> 0:38:39,216
As for the why, why were those

1109
00:38:39,556 --> 0:38:42,326
two types of experiences, you

1110
00:38:42,326 --> 0:38:44,086
know, sharp and not sharp, I'm

1111
00:38:44,086 --> 0:38:45,696
going to refer you to our talk

1112
00:38:45,696 --> 0:38:48,176
on audio haptic design.

1113
00:38:48,686 --> 0:38:51,556
Now, we have several more types

1114
00:38:51,556 --> 0:38:53,456
of event parameters, for

1115
00:38:53,456 --> 0:38:55,806
example, that apply to audio,

1116
00:38:55,806 --> 0:38:58,116
like pitch and pan, and for

1117
00:38:58,156 --> 0:38:59,846
haptics, we have things that let

1118
00:38:59,846 --> 0:39:01,296
you change those resonance and

1119
00:38:59,846 --> 0:39:01,296
you change those resonance and

1120
00:39:01,296 --> 0:39:01,736
so forth.

1121
00:39:02,126 --> 0:39:04,766
But these two, intensity and

1122
00:39:04,766 --> 0:39:07,086
sharpness, will be enough to get

1123
00:39:07,656 --> 0:39:09,196
us going.

1124
00:39:09,376 --> 0:39:11,506
Now, to develop a feel for that

1125
00:39:11,606 --> 0:39:14,346
dynamic range and precision of

1126
00:39:14,676 --> 0:39:17,036
intensity and sharpness, we've

1127
00:39:17,036 --> 0:39:19,646
got a sample code, the Palette,

1128
00:39:19,986 --> 0:39:21,416
which allows you to try out

1129
00:39:22,876 --> 0:39:24,306
these experiences for yourself.

1130
00:39:24,626 --> 0:39:26,616
As you move, as you tap or you

1131
00:39:26,616 --> 0:39:29,156
drag your finger around, you'll

1132
00:39:29,366 --> 0:39:31,186
be accessing the sharpness axis

1133
00:39:31,846 --> 0:39:33,486
as well as the intensity axis,

1134
00:39:33,486 --> 0:39:34,506
and it's going to play out the

1135
00:39:34,506 --> 0:39:36,586
corresponding continuous or

1136
00:39:36,586 --> 0:39:38,406
transient haptic, as you do

1137
00:39:38,406 --> 0:39:38,606
that.

1138
00:39:39,636 --> 0:39:41,676
This will help you get that

1139
00:39:41,676 --> 0:39:42,556
intuition.

1140
00:39:46,636 --> 0:39:48,866
So, that was an introduction

1141
00:39:49,496 --> 0:39:51,426
about where we can use Core

1142
00:39:51,426 --> 0:39:53,946
Haptics and also how to specify

1143
00:39:53,946 --> 0:39:54,556
our content.

1144
00:39:55,056 --> 0:39:56,946
Now, let's invite Doug Scott,

1145
00:39:56,946 --> 0:39:58,876
our Core Haptics architect, to

1146
00:39:58,876 --> 0:40:01,586
get us started with playing back

1147
00:39:58,876 --> 0:40:01,586
get us started with playing back

1148
00:40:01,746 --> 0:40:03,896
Core Haptics, playing back those

1149
00:40:03,896 --> 0:40:05,896
patterns, and integrating Core

1150
00:40:05,896 --> 0:40:07,066
Haptics into our apps.

1151
00:40:07,516 --> 0:40:08,266
Please welcome Doug.

1152
00:40:09,516 --> 0:40:11,536
[ Applause ]

1153
00:40:12,036 --> 0:40:12,536
&gt;&gt; Thank you, Michael.

1154
00:40:13,586 --> 0:40:14,586
Good evening everyone.

1155
00:40:14,746 --> 0:40:16,996
I am thrilled to be here to talk

1156
00:40:16,996 --> 0:40:18,156
to you about integrating the

1157
00:40:18,156 --> 0:40:20,176
Core Haptics API into your

1158
00:40:20,176 --> 0:40:20,936
applications.

1159
00:40:22,436 --> 0:40:25,106
Before I show a demo and dive

1160
00:40:25,106 --> 0:40:26,526
into the code, let's walk

1161
00:40:26,526 --> 0:40:27,746
through the basic steps that

1162
00:40:27,746 --> 0:40:29,286
your application will follow

1163
00:40:29,286 --> 0:40:30,406
when you want to play a haptic

1164
00:40:30,446 --> 0:40:30,856
pattern.

1165
00:40:34,046 --> 0:40:35,516
Creating your content is the

1166
00:40:35,516 --> 0:40:37,466
first good step because this can

1167
00:40:37,466 --> 0:40:39,266
be done at any point prior to

1168
00:40:39,266 --> 0:40:40,556
the point where you need to use

1169
00:40:40,556 --> 0:40:40,716
it.

1170
00:40:41,366 --> 0:40:44,296
In this example, with load an NS

1171
00:40:44,296 --> 0:40:45,556
dictionary into a haptic

1172
00:40:45,556 --> 0:40:45,936
pattern.

1173
00:40:46,066 --> 0:40:47,056
The dictionary might have been

1174
00:40:47,056 --> 0:40:48,266
something that we stored in our

1175
00:40:48,266 --> 0:40:49,476
application as part of our

1176
00:40:49,476 --> 0:40:50,146
resources.

1177
00:40:51,196 --> 0:40:53,246
As we will see later, patterns

1178
00:40:53,246 --> 0:40:55,146
can also be created right before

1179
00:40:55,146 --> 0:40:56,546
they are to be played if they

1180
00:40:56,546 --> 0:40:58,486
need to vary interactively in

1181
00:40:58,486 --> 0:40:59,806
response to changes in your

1182
00:40:59,806 --> 0:41:00,426
application.

1183
00:40:59,806 --> 0:41:00,426
application.

1184
00:41:01,036 --> 0:41:04,556
The next step is to create an

1185
00:41:04,556 --> 0:41:05,906
instance of the haptic engine.

1186
00:41:06,836 --> 0:41:08,106
This should be done as soon as

1187
00:41:08,106 --> 0:41:09,646
your application knows that it

1188
00:41:09,646 --> 0:41:13,436
will be making use of haptics.

1189
00:41:13,576 --> 0:41:15,436
Next, you create a haptic player

1190
00:41:15,436 --> 0:41:16,396
for your haptic pattern.

1191
00:41:16,986 --> 0:41:18,836
Each player is associated with a

1192
00:41:18,836 --> 0:41:20,846
single pattern and a particular

1193
00:41:20,846 --> 0:41:21,606
haptic engine.

1194
00:41:22,106 --> 0:41:26,176
Starting the haptic engine tells

1195
00:41:26,176 --> 0:41:27,726
the system to initialize the

1196
00:41:27,726 --> 0:41:29,456
audio and haptic hardware in

1197
00:41:29,456 --> 0:41:31,356
preparation for a request to

1198
00:41:31,356 --> 0:41:32,246
play the pattern.

1199
00:41:32,816 --> 0:41:35,516
At the moment that your

1200
00:41:35,516 --> 0:41:36,916
application wants the pattern to

1201
00:41:36,996 --> 0:41:38,646
play, you start the player.

1202
00:41:39,296 --> 0:41:41,036
This can be done in two modes.

1203
00:41:41,336 --> 0:41:43,666
The first, which we could call

1204
00:41:43,666 --> 0:41:45,586
immediate mode, tells the system

1205
00:41:45,586 --> 0:41:47,606
that you wish this pattern to

1206
00:41:47,606 --> 0:41:49,046
play at the soonest possible

1207
00:41:49,046 --> 0:41:50,516
moment with minimal latency.

1208
00:41:51,466 --> 0:41:53,336
The second, in scheduled mode,

1209
00:41:53,336 --> 0:41:55,876
you handed a absolute timestamp,

1210
00:41:56,006 --> 0:41:57,236
which tells the system that you

1211
00:41:57,236 --> 0:41:58,576
want to synchronize this event

1212
00:41:58,826 --> 0:42:00,316
with some other system, such as

1213
00:41:58,826 --> 0:42:00,316
with some other system, such as

1214
00:42:00,316 --> 0:42:02,666
another audio player or a game

1215
00:42:02,926 --> 0:42:05,786
event or a graphics event.

1216
00:42:08,936 --> 0:42:10,186
If you want to know when your

1217
00:42:10,186 --> 0:42:12,086
pattern is finished playing, you

1218
00:42:12,086 --> 0:42:13,276
can have the haptic engine

1219
00:42:13,276 --> 0:42:15,116
notify you via callback when

1220
00:42:15,116 --> 0:42:17,076
your player or players are done.

1221
00:42:17,436 --> 0:42:20,506
Here, the engine calls back to

1222
00:42:20,506 --> 0:42:22,736
the application, and the

1223
00:42:22,736 --> 0:42:24,126
application can now choose to

1224
00:42:24,126 --> 0:42:26,216
stop the haptic engine or can

1225
00:42:26,216 --> 0:42:27,706
turn you on with the next haptic

1226
00:42:27,706 --> 0:42:28,076
pattern.

1227
00:42:29,906 --> 0:42:31,206
Those are the basic steps.

1228
00:42:31,456 --> 0:42:33,266
Now, let's see and example of an

1229
00:42:33,266 --> 0:42:34,576
application which uses this

1230
00:42:34,576 --> 0:42:35,006
system.

1231
00:42:35,996 --> 0:42:39,546
But before we do, we need to let

1232
00:42:39,546 --> 0:42:41,206
you in on a secret.

1233
00:42:41,446 --> 0:42:43,306
Demonstrating the use of an API,

1234
00:42:43,406 --> 0:42:45,116
which generates tactile feedback

1235
00:42:45,526 --> 0:42:47,726
presents a unique problem.

1236
00:42:48,366 --> 0:42:49,576
You in the audience can't feel

1237
00:42:49,576 --> 0:42:49,676
it.

1238
00:42:50,356 --> 0:42:51,986
The way we handled this was by

1239
00:42:51,986 --> 0:42:53,766
adding an audio equivalent for

1240
00:42:53,766 --> 0:42:54,856
each haptic event into the

1241
00:42:54,856 --> 0:42:56,776
output, which will let you hear

1242
00:42:56,776 --> 0:43:01,236
the effect of the haptics.

1243
00:42:56,776 --> 0:43:01,236
the effect of the haptics.

1244
00:43:01,796 --> 0:43:03,816
This application uses a simple

1245
00:43:03,816 --> 0:43:05,486
physics engine to move the ball

1246
00:43:05,486 --> 0:43:06,966
around the screen in response to

1247
00:43:06,966 --> 0:43:07,836
the accelerometer.

1248
00:43:08,246 --> 0:43:11,756
It generates haptic and audio

1249
00:43:11,756 --> 0:43:13,286
feedback when the ball impacts

1250
00:43:13,286 --> 0:43:14,616
the edges of the screen.

1251
00:43:15,096 --> 0:43:16,436
The user has the sense they are

1252
00:43:16,436 --> 0:43:17,716
feeling the impacts through the

1253
00:43:17,716 --> 0:43:19,176
edges of the game wall as well

1254
00:43:19,176 --> 0:43:19,696
as hearing them.

1255
00:43:20,046 --> 0:43:21,376
The harder the ball hits the

1256
00:43:21,376 --> 0:43:22,786
edge, the more intense the

1257
00:43:22,786 --> 0:43:24,696
haptic and the louder the audio.

1258
00:43:25,256 --> 0:43:29,196
Okay. Let's look at the code for

1259
00:43:29,196 --> 0:43:30,876
this example to see how to

1260
00:43:30,876 --> 0:43:32,176
integrate the Core Haptics API

1261
00:43:32,176 --> 0:43:33,396
into your application.

1262
00:43:33,786 --> 0:43:35,696
We'll see how event parameters

1263
00:43:35,736 --> 0:43:37,836
are used to produce changes in

1264
00:43:37,836 --> 0:43:38,886
haptics and audio.

1265
00:43:39,906 --> 0:43:41,686
The example here, all this code

1266
00:43:41,686 --> 0:43:43,096
is taken from the sample code on

1267
00:43:43,096 --> 0:43:44,496
the website, but it's been

1268
00:43:44,496 --> 0:43:45,936
edited down to show the

1269
00:43:45,936 --> 0:43:47,526
important points.

1270
00:43:48,656 --> 0:43:51,036
First, we important the Core

1271
00:43:51,036 --> 0:43:52,556
Haptics module along with the

1272
00:43:52,556 --> 0:43:53,866
other modules we need for the

1273
00:43:53,866 --> 0:43:54,536
application.

1274
00:43:55,136 --> 0:43:59,986
The CHHaptic Engine is declared

1275
00:43:59,986 --> 0:44:01,396
as a member variable of our view

1276
00:43:59,986 --> 0:44:01,396
as a member variable of our view

1277
00:44:01,396 --> 0:44:02,826
controller, because we want to

1278
00:44:02,826 --> 0:44:04,246
be able to control its lifetime

1279
00:44:04,246 --> 0:44:05,296
and have it exist for the

1280
00:44:05,296 --> 0:44:06,646
lifetime of the application.

1281
00:44:07,216 --> 0:44:10,556
As discussed in our flow chart

1282
00:44:10,556 --> 0:44:12,296
earlier, we set up the haptic

1283
00:44:12,296 --> 0:44:13,766
engine in advance of when we

1284
00:44:13,766 --> 0:44:14,526
want to use it.

1285
00:44:14,816 --> 0:44:16,786
Here, we call a helper method at

1286
00:44:16,786 --> 0:44:18,026
the point that the view has

1287
00:44:18,026 --> 0:44:18,426
loaded.

1288
00:44:18,986 --> 0:44:22,666
In the helper method, we began

1289
00:44:22,966 --> 0:44:24,676
by creating the instance of the

1290
00:44:24,676 --> 0:44:26,226
haptic engine and check for

1291
00:44:26,226 --> 0:44:27,196
possible errors.

1292
00:44:27,886 --> 0:44:29,096
The engine is assigned to our

1293
00:44:29,096 --> 0:44:30,646
member variable so we can keep

1294
00:44:30,646 --> 0:44:31,156
it around.

1295
00:44:31,796 --> 0:44:35,436
It is optional but extremely

1296
00:44:35,436 --> 0:44:37,666
useful to assign a closure to

1297
00:44:37,666 --> 0:44:39,326
the engine's stop handler

1298
00:44:39,326 --> 0:44:39,866
property.

1299
00:44:40,386 --> 0:44:41,396
This will be called if the

1300
00:44:41,396 --> 0:44:43,186
engine is stopped by some action

1301
00:44:43,236 --> 0:44:45,016
other than the application

1302
00:44:45,016 --> 0:44:46,286
itself asking it to.

1303
00:44:46,746 --> 0:44:48,026
Some possible reasons that this

1304
00:44:48,026 --> 0:44:49,386
might happen are an audio

1305
00:44:49,386 --> 0:44:50,996
session interruption or the

1306
00:44:50,996 --> 0:44:52,566
application being suspended.

1307
00:44:53,016 --> 0:44:56,476
We finish this method by

1308
00:44:56,476 --> 0:44:57,996
starting the haptic engine and

1309
00:44:57,996 --> 0:44:59,396
checking for possible errors.

1310
00:45:00,276 --> 0:45:01,816
The engine will continue to run

1311
00:45:01,886 --> 0:45:03,276
until the application or a

1312
00:45:03,276 --> 0:45:05,396
possible outside action stops

1313
00:45:05,396 --> 0:45:05,476
it.

1314
00:45:06,786 --> 0:45:08,666
Note that the application tracks

1315
00:45:08,746 --> 0:45:10,096
whether or not the engine needs

1316
00:45:10,096 --> 0:45:10,946
to be restated.

1317
00:45:12,186 --> 0:45:13,836
Typically, you might leave the

1318
00:45:13,836 --> 0:45:15,216
engine running for the entire

1319
00:45:15,216 --> 0:45:17,016
time that you have any view

1320
00:45:17,316 --> 0:45:19,156
visible on the screen, which has

1321
00:45:19,156 --> 0:45:20,316
haptic interaction.

1322
00:45:25,036 --> 0:45:26,386
Here's the location in the

1323
00:45:26,386 --> 0:45:27,726
application where the simple

1324
00:45:27,726 --> 0:45:29,366
physics engine let's us know

1325
00:45:29,366 --> 0:45:30,746
that the ball has collided with

1326
00:45:30,746 --> 0:45:31,236
the wall.

1327
00:45:31,816 --> 0:45:33,016
In this example, we want to

1328
00:45:33,016 --> 0:45:34,506
generate our haptic and audio

1329
00:45:34,506 --> 0:45:36,766
pattern to interactively track

1330
00:45:36,876 --> 0:45:38,156
the velocity of the ball.

1331
00:45:38,326 --> 0:45:39,686
So the pattern player and its

1332
00:45:39,686 --> 0:45:41,036
pattern are created at the

1333
00:45:41,036 --> 0:45:42,116
moment they are needed.

1334
00:45:44,616 --> 0:45:46,306
This method is responsible for

1335
00:45:46,306 --> 0:45:47,716
creating the pattern to be

1336
00:45:47,716 --> 0:45:49,166
played in response to the ball

1337
00:45:49,166 --> 0:45:49,626
collision.

1338
00:45:50,486 --> 0:45:51,776
In here, we will create a

1339
00:45:51,776 --> 0:45:53,706
pattern with two events, one

1340
00:45:53,736 --> 0:45:55,316
haptic and one audio.

1341
00:45:55,766 --> 0:45:59,116
We create a haptic event of type

1342
00:45:59,176 --> 0:46:01,396
haptic transient to produce that

1343
00:45:59,176 --> 0:46:01,396
haptic transient to produce that

1344
00:46:01,396 --> 0:46:05,906
impactful feel, and we give it

1345
00:46:05,906 --> 0:46:07,106
two event parameters, which

1346
00:46:07,106 --> 0:46:08,606
configure the event's sharpness

1347
00:46:08,606 --> 0:46:09,806
and intensity, which you've

1348
00:46:09,806 --> 0:46:12,166
heard about already, based upon

1349
00:46:12,166 --> 0:46:13,526
the velocity of the ball.

1350
00:46:15,876 --> 0:46:17,926
Then, we create the audio event,

1351
00:46:18,026 --> 0:46:21,736
we type audio continuous, with a

1352
00:46:21,736 --> 0:46:23,376
set of event parameters for

1353
00:46:23,376 --> 0:46:25,826
volume and envelop decay, also

1354
00:46:25,826 --> 0:46:27,066
calculated from the ball's

1355
00:46:27,066 --> 0:46:27,696
velocity.

1356
00:46:28,356 --> 0:46:29,946
The sustained parameter here

1357
00:46:30,076 --> 0:46:32,346
assures us that the intensity of

1358
00:46:32,396 --> 0:46:34,616
this event will die off to zero

1359
00:46:34,976 --> 0:46:37,056
instead of continuing on for the

1360
00:46:37,056 --> 0:46:40,586
length of the event.

1361
00:46:40,676 --> 0:46:42,146
We create a pattern containing

1362
00:46:42,146 --> 0:46:44,236
these two events, synchronized

1363
00:46:45,196 --> 0:46:46,646
in time.

1364
00:46:46,836 --> 0:46:48,436
Finally, we create the pattern

1365
00:46:48,436 --> 0:46:50,016
player from this pattern and

1366
00:46:50,016 --> 0:46:53,406
return it to this layer, back in

1367
00:46:53,406 --> 0:46:54,696
the method that responds to the

1368
00:46:54,696 --> 0:46:55,216
collision.

1369
00:46:56,336 --> 0:46:58,316
The final step is to start the

1370
00:46:58,316 --> 0:46:59,976
pattern player at time

1371
00:46:59,976 --> 0:47:02,536
CHHapticTimeImmediate, which

1372
00:46:59,976 --> 0:47:02,536
CHHapticTimeImmediate, which

1373
00:47:02,536 --> 0:47:04,156
indicates to play it back as

1374
00:47:04,156 --> 0:47:05,596
soon as possible with minimal

1375
00:47:05,596 --> 0:47:05,976
latency.

1376
00:47:08,006 --> 0:47:09,086
Notice that the app does not

1377
00:47:09,086 --> 0:47:10,616
hold onto the instance of this

1378
00:47:10,656 --> 0:47:11,186
player.

1379
00:47:12,206 --> 0:47:13,716
Its pattern is guaranteed to

1380
00:47:13,716 --> 0:47:15,456
continue playing until it is

1381
00:47:15,456 --> 0:47:17,346
finished so the application can

1382
00:47:17,346 --> 0:47:18,996
simply fire and forget it.

1383
00:47:19,096 --> 0:47:23,326
And that's the basic recipe for

1384
00:47:23,326 --> 0:47:24,526
playing your content using a

1385
00:47:24,526 --> 0:47:25,816
pattern that is created

1386
00:47:25,816 --> 0:47:26,896
programmatically within your

1387
00:47:26,896 --> 0:47:27,556
app's code.

1388
00:47:28,716 --> 0:47:29,976
Again, because this app is

1389
00:47:29,976 --> 0:47:31,846
continuously interactive, we

1390
00:47:31,846 --> 0:47:33,356
don't stop the haptic engineer

1391
00:47:33,546 --> 0:47:35,016
until the game screen is not

1392
00:47:35,016 --> 0:47:35,816
longer visible.

1393
00:47:35,816 --> 0:47:40,696
Now, let's take a moment to talk

1394
00:47:40,696 --> 0:47:41,876
about one of the most powerful

1395
00:47:41,876 --> 0:47:43,536
capabilities of Core Haptics,

1396
00:47:43,926 --> 0:47:45,186
Dynamic Parameters.

1397
00:47:45,636 --> 0:47:49,196
Dynamic Parameters let's you

1398
00:47:49,196 --> 0:47:51,036
increase and decrease the value

1399
00:47:51,106 --> 0:47:52,876
of the existing event parameters

1400
00:47:53,126 --> 0:47:55,306
for all active and upcoming

1401
00:47:55,306 --> 0:47:59,336
events in a pattern as it plays.

1402
00:47:59,506 --> 0:48:01,266
Dynamic Parameters take effect

1403
00:47:59,506 --> 0:48:01,266
Dynamic Parameters take effect

1404
00:48:01,266 --> 0:48:02,776
at the time stamp you provide.

1405
00:48:03,646 --> 0:48:04,976
You can adjust multiple

1406
00:48:04,976 --> 0:48:06,626
different parameters at the same

1407
00:48:06,626 --> 0:48:09,116
time or with any arbitrary time

1408
00:48:09,236 --> 0:48:09,926
relationship.

1409
00:48:10,376 --> 0:48:13,236
You can include dynamic

1410
00:48:13,236 --> 0:48:14,556
parameters when you create your

1411
00:48:14,556 --> 0:48:16,806
pattern or send them to your

1412
00:48:16,806 --> 0:48:18,486
player in real time during

1413
00:48:18,486 --> 0:48:19,746
playback.

1414
00:48:20,496 --> 0:48:22,886
This allows you to use a single

1415
00:48:22,886 --> 0:48:24,886
pattern to generate an infinite

1416
00:48:24,886 --> 0:48:27,316
number of haptic and audio

1417
00:48:27,316 --> 0:48:29,176
variations by adjusting the

1418
00:48:29,176 --> 0:48:30,426
pattern dynamically.

1419
00:48:30,986 --> 0:48:34,446
Let's take a look at an example.

1420
00:48:35,066 --> 0:48:36,626
In this diagram on the bottom we

1421
00:48:36,626 --> 0:48:38,076
have a haptic pattern that was

1422
00:48:38,076 --> 0:48:40,576
designed with all haptic event

1423
00:48:40,576 --> 0:48:42,386
intensities set to their maximum

1424
00:48:42,386 --> 0:48:42,876
value.

1425
00:48:43,386 --> 0:48:44,966
First half are haptic

1426
00:48:44,966 --> 0:48:45,636
transients.

1427
00:48:45,776 --> 0:48:46,946
Second half is a haptic

1428
00:48:46,946 --> 0:48:47,626
continuous.

1429
00:48:48,916 --> 0:48:49,816
We'd like to reduce the

1430
00:48:49,816 --> 0:48:51,306
intensity of all the game's

1431
00:48:51,306 --> 0:48:52,956
haptics temporarily, for

1432
00:48:52,956 --> 0:48:55,206
example, if a character was

1433
00:48:55,206 --> 0:48:58,966
speaking in the game.

1434
00:48:59,166 --> 0:49:00,686
I send a dynamic parameter for

1435
00:48:59,166 --> 0:49:00,686
I send a dynamic parameter for

1436
00:49:00,686 --> 0:49:03,416
intensity with a value of 0.3

1437
00:49:03,586 --> 0:49:05,536
that takes effect at time 0.5

1438
00:49:05,536 --> 0:49:05,976
seconds.

1439
00:49:06,756 --> 0:49:08,296
You can see that it reduced the

1440
00:49:08,296 --> 0:49:09,806
intensity of the event at that

1441
00:49:09,806 --> 0:49:11,276
time significantly to about a

1442
00:49:11,276 --> 0:49:13,276
third of what it was unmodified.

1443
00:49:17,076 --> 0:49:19,296
Finally, let's look at another

1444
00:49:19,296 --> 0:49:23,516
way to create patterns.

1445
00:49:23,516 --> 0:49:26,826
So, what exactly is AHAP.

1446
00:49:28,476 --> 0:49:31,466
The Apple Haptic Audio Pattern

1447
00:49:31,586 --> 0:49:32,926
is a specification for

1448
00:49:32,926 --> 0:49:34,286
describing a Core Haptics

1449
00:49:34,286 --> 0:49:36,686
pattern in a text-based format.

1450
00:49:37,306 --> 0:49:38,986
It is built from nested key

1451
00:49:38,986 --> 0:49:41,426
value pairs, which become quite

1452
00:49:41,426 --> 0:49:44,016
familiar to you once you start

1453
00:49:44,016 --> 0:49:45,326
working with the classes which

1454
00:49:45,326 --> 0:49:46,876
make up the Core Haptics API.

1455
00:49:47,756 --> 0:49:50,966
It is the schema for the widely

1456
00:49:50,966 --> 0:49:53,276
established JSON file format,

1457
00:49:53,476 --> 0:49:56,016
which means you have already

1458
00:49:56,016 --> 0:49:57,076
quite a number of different

1459
00:49:57,076 --> 0:49:58,316
frameworks, which can read,

1460
00:49:58,316 --> 0:50:00,226
write, and edit these, including

1461
00:49:58,316 --> 0:50:00,226
write, and edit these, including

1462
00:50:00,296 --> 0:50:02,096
such things as the Swift Codable

1463
00:50:02,096 --> 0:50:02,526
Framework.

1464
00:50:02,946 --> 0:50:07,506
AHAP makes it easy to share and

1465
00:50:07,506 --> 0:50:09,356
edit haptic patterns because it

1466
00:50:09,356 --> 0:50:11,136
is a format that all developers

1467
00:50:11,246 --> 0:50:14,366
can agree on.

1468
00:50:14,926 --> 0:50:16,076
Loading your haptic patterns

1469
00:50:16,076 --> 0:50:18,116
from external AHAP files allows

1470
00:50:18,116 --> 0:50:19,696
you to separate your content

1471
00:50:19,986 --> 0:50:24,746
from your application code.

1472
00:50:24,956 --> 0:50:26,506
Using the magic of a slide deck,

1473
00:50:26,986 --> 0:50:28,136
we're going to create a simple

1474
00:50:28,136 --> 0:50:29,466
AHAP file here.

1475
00:50:30,136 --> 0:50:33,606
We start with a version string,

1476
00:50:34,056 --> 0:50:35,896
which indicates which version of

1477
00:50:35,896 --> 0:50:37,856
the system this pattern was

1478
00:50:38,296 --> 0:50:39,986
designed for.

1479
00:50:40,196 --> 0:50:41,816
Next, we add the key for our

1480
00:50:41,816 --> 0:50:43,616
pattern, which will be an array

1481
00:50:43,616 --> 0:50:44,516
of dictionaries.

1482
00:50:45,216 --> 0:50:48,476
We add our first event

1483
00:50:48,476 --> 0:50:50,026
dictionary to our pattern array.

1484
00:50:50,606 --> 0:50:52,956
This event has two required key

1485
00:50:52,956 --> 0:50:55,166
value pairs, a time in seconds

1486
00:50:55,166 --> 0:50:56,386
at which the event should happen

1487
00:50:57,646 --> 0:50:58,766
relative to the start of the

1488
00:50:58,766 --> 0:51:00,516
pattern and the type of event.

1489
00:50:58,766 --> 0:51:00,516
pattern and the type of event.

1490
00:51:01,316 --> 0:51:02,876
This is a haptic transient event

1491
00:51:02,876 --> 0:51:04,286
starting as soon as the pattern

1492
00:51:04,286 --> 0:51:04,886
starts.

1493
00:51:05,496 --> 0:51:09,066
To this event, we add event

1494
00:51:09,066 --> 0:51:10,466
parameters, which will effect

1495
00:51:10,466 --> 0:51:11,426
only this event.

1496
00:51:12,116 --> 0:51:13,486
These are stored in their own

1497
00:51:13,486 --> 0:51:14,736
array of dictionaries.

1498
00:51:16,086 --> 0:51:17,576
We add an event parameter to

1499
00:51:17,576 --> 0:51:19,376
control the intensity of the

1500
00:51:19,376 --> 0:51:20,916
event and another to control its

1501
00:51:20,916 --> 0:51:21,626
sharpness.

1502
00:51:25,086 --> 0:51:26,456
We can add a second event in the

1503
00:51:26,456 --> 0:51:27,186
same fashion.

1504
00:51:27,886 --> 0:51:29,376
This one starts at an offset of

1505
00:51:29,376 --> 0:51:31,186
0.5 seconds from the first and

1506
00:51:31,186 --> 0:51:33,026
is of type Haptic Continuous.

1507
00:51:33,766 --> 0:51:35,356
For the event parameters, we use

1508
00:51:35,356 --> 0:51:37,216
the same as we had for the first

1509
00:51:37,216 --> 0:51:37,526
event.

1510
00:51:40,036 --> 0:51:41,866
Events of type Haptic Continuous

1511
00:51:41,866 --> 0:51:44,166
and Audio Continuous require an

1512
00:51:44,166 --> 0:51:46,176
event duration in addition to

1513
00:51:46,176 --> 0:51:47,546
the time and event type.

1514
00:51:47,906 --> 0:51:49,376
This duration value is always

1515
00:51:49,376 --> 0:51:53,296
specified in seconds.

1516
00:51:53,396 --> 0:51:55,366
Here is a visual representation

1517
00:51:55,366 --> 0:51:57,036
of the pattern we just created.

1518
00:51:57,446 --> 0:51:58,576
You can see the two type of

1519
00:51:58,576 --> 0:52:01,706
events, the Haptic Transient at

1520
00:51:58,576 --> 0:52:01,706
events, the Haptic Transient at

1521
00:52:01,706 --> 0:52:03,016
the very beginning, the

1522
00:52:03,016 --> 0:52:04,676
continuous later, with their

1523
00:52:04,676 --> 0:52:06,546
relative timing and duration and

1524
00:52:06,546 --> 0:52:08,046
their intensity and sharpness

1525
00:52:08,126 --> 0:52:09,026
parameter values.

1526
00:52:09,506 --> 0:52:14,406
That was a quick tour of AHAP.

1527
00:52:14,406 --> 0:52:16,316
This diagram shows a summary of

1528
00:52:16,316 --> 0:52:18,186
the AHAP file structure, a

1529
00:52:18,186 --> 0:52:20,056
single pattern consisting of an

1530
00:52:20,056 --> 0:52:21,436
array of event dictionaries,

1531
00:52:22,806 --> 0:52:25,486
optional dynamic parameters, and

1532
00:52:25,486 --> 0:52:27,156
optional use of parameter

1533
00:52:27,156 --> 0:52:28,816
curves, which are an extension

1534
00:52:29,036 --> 0:52:31,086
of dynamic parameters, which you

1535
00:52:31,086 --> 0:52:32,886
can read about more with the

1536
00:52:32,886 --> 0:52:34,386
information we have on the

1537
00:52:34,386 --> 0:52:34,876
website.

1538
00:52:36,166 --> 0:52:37,886
You can find a full link to the

1539
00:52:37,886 --> 0:52:39,526
AHAP specification on our

1540
00:52:39,526 --> 0:52:43,356
sessions page.

1541
00:52:43,836 --> 0:52:45,126
Also, on our sessions page,

1542
00:52:45,126 --> 0:52:46,756
you'll find a code example that

1543
00:52:46,756 --> 0:52:48,526
shows how to create, load, and

1544
00:52:48,526 --> 0:52:50,086
play the patterns described by

1545
00:52:50,086 --> 0:52:50,786
AHAP files.

1546
00:52:51,216 --> 0:52:53,296
This haptic sampler app includes

1547
00:52:53,296 --> 0:52:54,716
a range of patterns that

1548
00:52:54,716 --> 0:52:56,756
highlight the subtlety, dynamic

1549
00:52:56,756 --> 0:52:58,526
range, and audio haptic sync

1550
00:52:58,796 --> 0:53:00,056
that's possible with the Core

1551
00:52:58,796 --> 0:53:00,056
that's possible with the Core

1552
00:53:00,056 --> 0:53:00,766
Haptics API.

1553
00:53:01,596 --> 0:53:03,656
Thank you very much and now I'd

1554
00:53:03,656 --> 0:53:05,096
like to return the stage to my

1555
00:53:05,096 --> 0:53:05,976
colleague, Michael.

1556
00:53:06,516 --> 0:53:13,416
[ Applause ]

1557
00:53:13,916 --> 0:53:14,406
&gt;&gt; Thanks Doug.

1558
00:53:15,286 --> 0:53:17,106
So, although we covered a lot of

1559
00:53:17,106 --> 0:53:19,336
ground today, there is still

1560
00:53:19,396 --> 0:53:21,186
much more to discover with Core

1561
00:53:21,186 --> 0:53:21,646
Haptics.

1562
00:53:22,996 --> 0:53:24,726
Check out the online reference

1563
00:53:24,726 --> 0:53:25,226
for details.

1564
00:53:25,916 --> 0:53:28,466
Once you're up and running with

1565
00:53:28,466 --> 0:53:29,856
the basics of specifying

1566
00:53:29,856 --> 0:53:31,506
contents and playing that

1567
00:53:31,506 --> 0:53:32,806
content, you'll probably be

1568
00:53:32,806 --> 0:53:34,606
wondering about the design

1569
00:53:34,606 --> 0:53:35,956
principles for these joint

1570
00:53:35,996 --> 0:53:36,916
haptic audio patterns.

1571
00:53:37,726 --> 0:53:40,636
You'll be wondering, do the

1572
00:53:40,636 --> 0:53:42,706
rules, the guidelines for sound

1573
00:53:42,706 --> 0:53:44,336
design carry over to haptic

1574
00:53:44,336 --> 0:53:44,786
design?

1575
00:53:45,086 --> 0:53:46,586
What are some common pitfalls I

1576
00:53:46,586 --> 0:53:47,286
should be aware of?

1577
00:53:48,256 --> 0:53:51,346
The good news is that our audio

1578
00:53:51,576 --> 0:53:52,996
and haptic design teams have

1579
00:53:52,996 --> 0:53:54,776
been doing this for years, and

1580
00:53:54,776 --> 0:53:56,156
they've helped put together some

1581
00:53:56,226 --> 0:53:57,776
advice and guidance in an

1582
00:53:57,776 --> 0:53:59,316
updated human interface

1583
00:53:59,316 --> 0:54:01,486
guidelines or HIG for Haptics as

1584
00:53:59,316 --> 0:54:01,486
guidelines or HIG for Haptics as

1585
00:54:01,486 --> 0:54:03,916
well as in the accompanying talk

1586
00:54:04,046 --> 0:54:05,886
in WWDC this year.

1587
00:54:06,646 --> 0:54:09,286
Check it out.

1588
00:54:09,546 --> 0:54:10,746
So, let's recap.

1589
00:54:11,026 --> 0:54:12,686
Today we talked about where

1590
00:54:12,686 --> 0:54:14,066
haptics can help you reach for

1591
00:54:14,066 --> 0:54:16,446
that next level of emersion and

1592
00:54:16,446 --> 0:54:18,346
make your app interactions more

1593
00:54:18,346 --> 0:54:18,796
effortless.

1594
00:54:20,136 --> 0:54:21,596
Having synchronized and

1595
00:54:21,596 --> 0:54:24,336
complementary audio and haptics

1596
00:54:24,366 --> 0:54:26,616
together is a particularly

1597
00:54:26,616 --> 0:54:29,376
effective combination, but there

1598
00:54:29,376 --> 0:54:31,136
haven't been APIs that allows

1599
00:54:31,136 --> 0:54:32,446
you to actually do this.

1600
00:54:32,756 --> 0:54:35,486
With iOS 13, we now have the

1601
00:54:35,486 --> 0:54:37,656
necessary ingredients to create

1602
00:54:37,656 --> 0:54:39,196
these rich multimodal

1603
00:54:39,196 --> 0:54:39,946
experiences.

1604
00:54:40,776 --> 0:54:42,836
We have the vocabulary to

1605
00:54:42,836 --> 0:54:44,396
describe haptics and audio

1606
00:54:44,396 --> 0:54:47,716
events and a file format, AHAP.

1607
00:54:48,926 --> 0:54:51,016
We've got a new performant API,

1608
00:54:51,016 --> 0:54:53,486
Core Haptics, which is designed

1609
00:54:53,486 --> 0:54:55,376
for low latency and real-time

1610
00:54:55,376 --> 0:54:55,986
modulation.

1611
00:54:56,556 --> 0:54:59,976
We've put together sample code,

1612
00:55:00,306 --> 0:55:02,736
sample patterns, design

1613
00:55:02,736 --> 0:55:04,196
guidelines and support from

1614
00:55:04,196 --> 0:55:04,506
Apple.

1615
00:55:05,386 --> 0:55:07,216
And lastly, you've got an

1616
00:55:07,216 --> 0:55:09,346
incredible audience, incredible

1617
00:55:09,346 --> 0:55:11,046
hardware, where you can feel

1618
00:55:11,046 --> 0:55:12,466
your haptics as you intended.

1619
00:55:12,956 --> 0:55:15,756
A huge installed base of taptic

1620
00:55:15,756 --> 0:55:17,476
engines that give you the most

1621
00:55:17,576 --> 0:55:20,016
powerful, expressive, and

1622
00:55:20,016 --> 0:55:21,506
precise haptics hardware

1623
00:55:21,506 --> 0:55:21,996
available.

1624
00:55:22,586 --> 0:55:25,846
So, please come on down to the

1625
00:55:25,846 --> 0:55:27,296
labs on Thursday and Friday

1626
00:55:27,396 --> 0:55:29,056
where you can check out some of

1627
00:55:29,056 --> 0:55:31,356
these haptics samples that we

1628
00:55:31,356 --> 0:55:34,066
showed today and discuss your

1629
00:55:34,066 --> 0:55:35,156
own ideas for your apps.

1630
00:55:35,856 --> 0:55:37,446
You'll also find all of these

1631
00:55:38,596 --> 0:55:40,386
guidelines and reference online

1632
00:55:40,446 --> 0:55:41,446
at our sessions page.

1633
00:55:41,936 --> 0:55:44,366
I know you're going to have a

1634
00:55:44,366 --> 0:55:47,186
lot of fun creating and using

1635
00:55:47,186 --> 0:55:48,346
these haptic patterns in your

1636
00:55:48,346 --> 0:55:48,596
apps.

1637
00:55:49,136 --> 0:55:50,736
We can't wait to hear and feel

1638
00:55:50,836 --> 0:55:51,516
what you come up with.

1639
00:55:52,176 --> 0:55:52,976
Thank you and good night.

1640
00:55:53,516 --> 0:56:03,390
[ Applause ]
