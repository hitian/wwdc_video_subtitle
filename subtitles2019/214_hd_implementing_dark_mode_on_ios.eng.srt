1
00:00:00,506 --> 0:00:05,500
[ Music ]

2
00:00:10,516 --> 0:00:15,096
[ Applause ]

3
00:00:15,596 --> 0:00:16,126
&gt;&gt; Good morning.

4
00:00:16,976 --> 0:00:18,406
Welcome to Implementing Dark

5
00:00:18,406 --> 0:00:19,546
Mode in iOS.

6
00:00:19,776 --> 0:00:20,956
I'm Kurt. I'll be presenting

7
00:00:20,956 --> 0:00:21,416
with Tyler.

8
00:00:22,826 --> 0:00:24,356
Now, when we added Dark Mode to

9
00:00:24,356 --> 0:00:26,626
iOS 13, we looked at every piece

10
00:00:26,626 --> 0:00:28,396
of the UI and made it look great

11
00:00:28,856 --> 0:00:30,156
in this new dark appearance.

12
00:00:30,456 --> 0:00:31,776
It's a whole new look for iOS.

13
00:00:32,846 --> 0:00:33,946
Now it's your turn.

14
00:00:34,136 --> 0:00:35,546
We're here to help you implement

15
00:00:35,546 --> 0:00:36,846
Dark Mode in your apps.

16
00:00:37,476 --> 0:00:39,246
It's easy and we'll demonstrate

17
00:00:39,246 --> 0:00:40,296
that to you with some live

18
00:00:40,296 --> 0:00:40,766
demos.

19
00:00:41,856 --> 0:00:43,556
It's also built on top of a very

20
00:00:43,556 --> 0:00:45,216
flexible and powerful system.

21
00:00:45,686 --> 0:00:46,896
So whatever you imagine that

22
00:00:46,896 --> 0:00:47,946
your app should look like in

23
00:00:47,946 --> 0:00:49,606
Dark Mode, you can achieve it.

24
00:00:51,056 --> 0:00:52,096
First, let's talk about the

25
00:00:52,096 --> 0:00:53,236
design of Dark Mode.

26
00:00:53,236 --> 0:00:54,616
Now, I'll start by showing an

27
00:00:54,616 --> 0:00:55,106
example.

28
00:00:56,116 --> 0:00:57,286
Here's settings of a very

29
00:00:57,286 --> 0:00:58,116
familiar app.

30
00:00:58,836 --> 0:01:00,176
You see that in Dark Mode, it's

31
00:00:58,836 --> 0:01:00,176
You see that in Dark Mode, it's

32
00:01:00,176 --> 0:01:01,966
the same app in the same layout.

33
00:01:02,446 --> 0:01:03,496
It works the same way.

34
00:01:03,906 --> 0:01:04,796
It just has a different

35
00:01:04,796 --> 0:01:05,086
appearance.

36
00:01:06,006 --> 0:01:07,506
So, we've taken the iOS design

37
00:01:07,506 --> 0:01:09,226
system and extended it for the

38
00:01:09,226 --> 0:01:09,876
dark appearance.

39
00:01:10,846 --> 0:01:12,156
When we did that, we considered

40
00:01:12,156 --> 0:01:12,676
three things.

41
00:01:14,106 --> 0:01:15,776
First and most important,

42
00:01:16,056 --> 0:01:16,576
colors.

43
00:01:17,226 --> 0:01:19,116
iOS apps traditionally have hard

44
00:01:19,116 --> 0:01:20,716
coded all of their colors.

45
00:01:20,956 --> 0:01:22,776
You specify the RGB value of

46
00:01:22,886 --> 0:01:24,596
every piece of your UI.

47
00:01:25,286 --> 0:01:26,476
Now that we have Dark Mode,

48
00:01:26,476 --> 0:01:27,936
almost every one of those colors

49
00:01:27,936 --> 0:01:28,806
needs to change.

50
00:01:29,356 --> 0:01:30,496
And since there are so many

51
00:01:30,496 --> 0:01:31,526
colors, we need to keep

52
00:01:31,526 --> 0:01:32,116
organized.

53
00:01:33,576 --> 0:01:35,206
We do that using semantic

54
00:01:35,206 --> 0:01:35,746
colors.

55
00:01:35,986 --> 0:01:36,976
These are colors that have a

56
00:01:36,976 --> 0:01:38,666
name that explains what they

57
00:01:38,666 --> 0:01:39,206
signify.

58
00:01:40,026 --> 0:01:41,426
Our text label here uses the

59
00:01:41,426 --> 0:01:42,466
color label.

60
00:01:42,766 --> 0:01:44,136
That's a default color for text

61
00:01:44,136 --> 0:01:44,636
and labels.

62
00:01:45,836 --> 0:01:47,426
Our background is system grouped

63
00:01:47,426 --> 0:01:48,016
background.

64
00:01:48,076 --> 0:01:49,126
That's because we're in a

65
00:01:49,126 --> 0:01:51,316
grouped table view, and UI table

66
00:01:51,316 --> 0:01:52,516
view gives us that by default.

67
00:01:53,866 --> 0:01:55,076
Finally for this icon, we're

68
00:01:55,076 --> 0:01:56,356
using system blue.

69
00:01:56,896 --> 0:01:58,826
It's not just pure blue, but

70
00:01:58,826 --> 0:02:00,306
it's tweaked to fit with the

71
00:01:58,826 --> 0:02:00,306
it's tweaked to fit with the

72
00:02:00,306 --> 0:02:01,216
rest of the colors.

73
00:02:02,156 --> 0:02:04,246
So, when we implement UI, we

74
00:02:04,246 --> 0:02:05,766
pick an appropriate semantic

75
00:02:05,766 --> 0:02:06,976
color for each piece.

76
00:02:08,836 --> 0:02:09,786
When we switch back to light

77
00:02:09,786 --> 0:02:11,226
mode, we're still using the same

78
00:02:11,276 --> 0:02:11,536
colors.

79
00:02:12,186 --> 0:02:13,116
But because these colors are

80
00:02:13,116 --> 0:02:14,886
dynamic, they can have different

81
00:02:14,886 --> 0:02:16,336
values in light and dark.

82
00:02:17,576 --> 0:02:19,116
The great thing is when you use

83
00:02:19,116 --> 0:02:21,076
these semantic dynamic colors,

84
00:02:21,376 --> 0:02:22,986
UI kit does the work for you.

85
00:02:22,986 --> 0:02:24,646
You don't have to think about

86
00:02:24,646 --> 0:02:26,166
what mode you're in and you

87
00:02:26,166 --> 0:02:27,456
don't have to do any work when

88
00:02:27,456 --> 0:02:28,216
the mode changes.

89
00:02:29,676 --> 0:02:30,846
Now, our design system provides

90
00:02:30,846 --> 0:02:32,426
a whole new palette of colors.

91
00:02:32,716 --> 0:02:33,716
I'll give some examples.

92
00:02:34,676 --> 0:02:35,906
We have a stack of background

93
00:02:35,906 --> 0:02:37,286
colors here designed to work

94
00:02:37,316 --> 0:02:37,686
together.

95
00:02:38,676 --> 0:02:40,526
System background is the base

96
00:02:40,566 --> 0:02:42,246
background color, it's pure

97
00:02:42,246 --> 0:02:43,246
white in light mode.

98
00:02:43,246 --> 0:02:44,926
That's very familiar, and pure

99
00:02:44,926 --> 0:02:46,046
black in dark mode.

100
00:02:47,296 --> 0:02:48,356
On top of that, there's

101
00:02:48,356 --> 0:02:50,566
secondary and tertiary system

102
00:02:50,566 --> 0:02:52,196
background colors, and these

103
00:02:52,196 --> 0:02:53,496
allow you to structure the

104
00:02:53,576 --> 0:02:55,216
information hierarchy of your

105
00:02:55,776 --> 0:02:55,856
app.

106
00:02:56,396 --> 0:02:58,146
Note that dark mode is not just

107
00:02:58,146 --> 0:02:59,616
a simple inversion of light

108
00:02:59,616 --> 0:02:59,856
mode.

109
00:03:00,006 --> 0:03:00,916
It's more subtle than that.

110
00:03:02,276 --> 0:03:03,706
We use this idea of hierarchy

111
00:03:03,706 --> 0:03:04,776
for text as well.

112
00:03:05,466 --> 0:03:06,676
There's four levels of text

113
00:03:06,676 --> 0:03:07,876
colors and they let you

114
00:03:07,876 --> 0:03:09,276
emphasize which elements are

115
00:03:09,276 --> 0:03:11,036
important relative to others.

116
00:03:11,946 --> 0:03:13,376
For instance, the primary color

117
00:03:13,376 --> 0:03:14,526
might be used for things like

118
00:03:14,576 --> 0:03:14,926
titles.

119
00:03:15,736 --> 0:03:16,986
The secondary color might be

120
00:03:16,986 --> 0:03:19,386
used for subtitles and so on.

121
00:03:20,436 --> 0:03:22,546
The full catalog of colors is in

122
00:03:22,546 --> 0:03:23,856
the human interface guidelines,

123
00:03:24,396 --> 0:03:25,976
what they are and when to use

124
00:03:25,976 --> 0:03:26,136
them.

125
00:03:26,896 --> 0:03:28,456
And we provide a lot of colors

126
00:03:28,806 --> 0:03:30,066
but you will need to make your

127
00:03:30,066 --> 0:03:30,236
own.

128
00:03:30,946 --> 0:03:32,016
You can make your own dynamic

129
00:03:32,016 --> 0:03:33,146
colors and we'll show you how to

130
00:03:33,146 --> 0:03:34,066
do that a little later.

131
00:03:35,476 --> 0:03:36,656
Now, let's move on to the second

132
00:03:36,656 --> 0:03:37,816
part of our design system -

133
00:03:37,886 --> 0:03:38,516
materials.

134
00:03:39,126 --> 0:03:40,456
Here's an example in photos.

135
00:03:41,346 --> 0:03:43,196
Materials are more than just

136
00:03:43,196 --> 0:03:43,666
colors.

137
00:03:44,126 --> 0:03:45,826
There are blur effects that look

138
00:03:45,826 --> 0:03:47,616
like a translucent material on

139
00:03:47,616 --> 0:03:48,536
top of a background.

140
00:03:49,446 --> 0:03:51,176
On top of that, there's vibrancy

141
00:03:51,426 --> 0:03:53,016
that cuts through the blur and

142
00:03:53,016 --> 0:03:53,586
stands out.

143
00:03:53,586 --> 0:03:55,796
Of course these look good on top

144
00:03:55,796 --> 0:03:58,026
of any photo that we have, and

145
00:03:58,026 --> 0:03:59,916
they work in dark and in light

146
00:03:59,916 --> 0:04:00,156
mode.

147
00:03:59,916 --> 0:04:00,156
mode.

148
00:04:01,716 --> 0:04:03,206
The third part of the design

149
00:04:03,206 --> 0:04:05,686
system is the built-in views and

150
00:04:05,686 --> 0:04:07,366
controls provided by UIKit.

151
00:04:08,136 --> 0:04:09,406
These are made using the same

152
00:04:09,406 --> 0:04:10,966
colors and the same materials.

153
00:04:11,226 --> 0:04:12,706
Everything has been designed to

154
00:04:12,706 --> 0:04:13,406
fit together.

155
00:04:15,156 --> 0:04:16,755
So, when you design your app for

156
00:04:16,755 --> 0:04:18,276
Dark Mode, before you touch a

157
00:04:18,276 --> 0:04:20,375
single line of code, learn this

158
00:04:20,406 --> 0:04:22,256
design system and figure out how

159
00:04:22,256 --> 0:04:23,376
to take advantage of what it

160
00:04:23,416 --> 0:04:23,866
provides.

161
00:04:25,036 --> 0:04:26,896
Then, figure out what you'd like

162
00:04:26,896 --> 0:04:27,596
to customize.

163
00:04:28,536 --> 0:04:30,616
iOS apps have so much diversity

164
00:04:30,856 --> 0:04:32,166
that we can't provide everything

165
00:04:32,246 --> 0:04:33,766
for you, but we do give you the

166
00:04:33,766 --> 0:04:35,926
power to do anything you need.

167
00:04:37,056 --> 0:04:38,126
So, now that you've thought

168
00:04:38,126 --> 0:04:39,486
about your design, let's talk

169
00:04:39,486 --> 0:04:40,906
about how to implement it.

170
00:04:41,456 --> 0:04:44,256
As soon as you build using the

171
00:04:44,256 --> 0:04:47,236
iOS 13 SDK, your app can appear

172
00:04:47,236 --> 0:04:48,336
in Light and Dark.

173
00:04:49,196 --> 0:04:50,806
Switch the device to Dark Mode,

174
00:04:51,426 --> 0:04:52,826
run your app, and see what it

175
00:04:52,826 --> 0:04:53,316
looks like.

176
00:04:53,816 --> 0:04:55,126
The first thing you'll find is

177
00:04:55,126 --> 0:04:56,546
that you do have work to do.

178
00:04:57,166 --> 0:04:58,256
We can't do this for you

179
00:04:58,256 --> 0:04:58,936
automatically.

180
00:04:59,546 --> 0:05:00,766
And ultimately it is your

181
00:04:59,546 --> 0:05:00,766
And ultimately it is your

182
00:05:00,766 --> 0:05:02,086
responsibility to make the

183
00:05:02,086 --> 0:05:04,206
choices to make your app look

184
00:05:04,206 --> 0:05:05,216
good in Dark Mode.

185
00:05:06,236 --> 0:05:07,096
The first thing you'll need to

186
00:05:07,096 --> 0:05:08,746
do is start with colors.

187
00:05:10,066 --> 0:05:11,696
Now in the past, each UI color

188
00:05:11,696 --> 0:05:13,486
had only one single value.

189
00:05:13,686 --> 0:05:14,776
It was always the same.

190
00:05:15,566 --> 0:05:16,896
Now they can be dynamic.

191
00:05:17,956 --> 0:05:19,066
The color can have a different

192
00:05:19,066 --> 0:05:20,946
value in Light Mode and in Dark

193
00:05:20,946 --> 0:05:21,136
Mode.

194
00:05:22,086 --> 0:05:23,046
And when you set one of these

195
00:05:23,046 --> 0:05:24,716
dynamic colors on a view, for

196
00:05:24,716 --> 0:05:26,286
instance, as a background color

197
00:05:26,526 --> 0:05:28,566
or a text color, UIKit will

198
00:05:28,566 --> 0:05:29,826
automatically use the correct

199
00:05:29,826 --> 0:05:31,876
value and will update when the

200
00:05:31,876 --> 0:05:32,476
mode changes.

201
00:05:33,496 --> 0:05:34,986
So, you just set the color once.

202
00:05:36,006 --> 0:05:37,356
If you're familiar with macOS

203
00:05:37,356 --> 0:05:38,966
Dark Mode, this is how NSColor

204
00:05:38,966 --> 0:05:39,386
works.

205
00:05:39,386 --> 0:05:41,016
We're following the exact same

206
00:05:41,816 --> 0:05:41,966
pattern.

207
00:05:43,046 --> 0:05:43,946
So, let's get started.

208
00:05:43,946 --> 0:05:45,216
Let's implement Dark Mode in an

209
00:05:45,216 --> 0:05:45,316
app.

210
00:05:45,686 --> 0:05:47,006
Over to Tyler for a demo.

211
00:05:48,516 --> 0:05:53,946
[ Applause ]

212
00:05:54,446 --> 0:05:55,706
&gt;&gt; Thanks, Kurt.

213
00:05:58,456 --> 0:05:59,896
So, we have a simple demo app

214
00:05:59,896 --> 0:06:01,216
that we put together which was

215
00:05:59,896 --> 0:06:01,216
that we put together which was

216
00:06:01,216 --> 0:06:02,586
originally written against iOS

217
00:06:02,636 --> 0:06:04,186
12, and we want to walk you

218
00:06:04,186 --> 0:06:05,426
through some of the changes that

219
00:06:05,426 --> 0:06:06,666
we'll make to update this to

220
00:06:06,666 --> 0:06:08,636
support Dark Mode in iOS 13.

221
00:06:10,556 --> 0:06:11,326
This should hopefully give you

222
00:06:11,326 --> 0:06:12,456
an idea of some of the types of

223
00:06:12,456 --> 0:06:13,536
changes that you'll be making in

224
00:06:13,536 --> 0:06:14,266
your own apps.

225
00:06:14,676 --> 0:06:15,996
So, here's our app running in a

226
00:06:15,996 --> 0:06:16,966
simulator on the right.

227
00:06:17,756 --> 0:06:18,386
It's pretty simple.

228
00:06:18,386 --> 0:06:20,066
So, why don't we just start by

229
00:06:20,066 --> 0:06:21,516
flipping it into Dark Mode and

230
00:06:21,516 --> 0:06:22,446
seeing how things look.

231
00:06:23,356 --> 0:06:24,626
We can do that using the new

232
00:06:24,626 --> 0:06:26,466
environment overrides feature in

233
00:06:26,506 --> 0:06:26,916
Xcode.

234
00:06:27,206 --> 0:06:28,306
So, we're running from Xcode

235
00:06:28,306 --> 0:06:28,576
here.

236
00:06:29,006 --> 0:06:30,896
We can just apply a dark user

237
00:06:30,896 --> 0:06:32,346
interface dial override by

238
00:06:32,346 --> 0:06:33,406
toggling that switch.

239
00:06:33,936 --> 0:06:35,746
And if you noticed, our app

240
00:06:35,746 --> 0:06:36,666
reacted right away.

241
00:06:36,736 --> 0:06:37,676
It turned into Dark Mode.

242
00:06:38,706 --> 0:06:39,936
Now, you might've noticed that

243
00:06:39,986 --> 0:06:41,236
for example the tab bar at the

244
00:06:41,236 --> 0:06:42,886
bottom of the screen changed.

245
00:06:43,446 --> 0:06:44,446
And that's because we're using a

246
00:06:44,446 --> 0:06:46,156
UIKit standard tab bar, so we

247
00:06:46,156 --> 0:06:47,156
got all of that for free.

248
00:06:48,066 --> 0:06:49,606
But of course our app didn't

249
00:06:49,606 --> 0:06:51,236
rally get very dark and that's

250
00:06:51,236 --> 0:06:52,336
because we have some work to do.

251
00:06:52,336 --> 0:06:54,586
So, why don't we switch over and

252
00:06:54,586 --> 0:06:56,156
take a look at how our UI is

253
00:06:56,226 --> 0:06:57,196
built in the storyboard.

254
00:06:58,856 --> 0:07:00,226
So, here's our home screen of

255
00:06:58,856 --> 0:07:00,226
So, here's our home screen of

256
00:07:00,226 --> 0:07:00,556
our app.

257
00:07:01,096 --> 0:07:02,116
And the first thing that we

258
00:07:02,116 --> 0:07:03,036
should probably take a look at

259
00:07:03,036 --> 0:07:04,066
is why we have this white

260
00:07:04,126 --> 0:07:05,306
background sitting behind

261
00:07:05,306 --> 0:07:05,756
everything.

262
00:07:06,846 --> 0:07:09,056
We can select that view in our

263
00:07:09,056 --> 0:07:09,846
storyboard here.

264
00:07:10,046 --> 0:07:11,036
And if you look in the

265
00:07:11,036 --> 0:07:12,096
attributes inspector on the

266
00:07:12,096 --> 0:07:13,016
right, you can see that we're

267
00:07:13,016 --> 0:07:14,276
setting a hard-coded white

268
00:07:14,316 --> 0:07:14,706
color.

269
00:07:15,306 --> 0:07:17,026
That might've been fine before,

270
00:07:17,366 --> 0:07:18,396
but we now want to switch to

271
00:07:18,396 --> 0:07:19,926
using one of these new dynamic

272
00:07:19,926 --> 0:07:21,206
colors that Kurt talked about.

273
00:07:21,806 --> 0:07:23,816
So, a great choice is the system

274
00:07:23,816 --> 0:07:24,556
background color.

275
00:07:24,886 --> 0:07:26,086
So, you can find all these

276
00:07:26,186 --> 0:07:27,636
system colors in this new list

277
00:07:27,636 --> 0:07:27,896
here.

278
00:07:27,896 --> 0:07:29,406
We'll choose system background.

279
00:07:30,276 --> 0:07:31,676
And nothing actually changed

280
00:07:31,676 --> 0:07:32,486
when we did that, and that's

281
00:07:32,486 --> 0:07:33,686
because system background color

282
00:07:33,686 --> 0:07:35,376
is still white in light mode.

283
00:07:35,716 --> 0:07:37,506
But what we can do is write in

284
00:07:37,506 --> 0:07:38,876
the storyboard editor, switch

285
00:07:38,876 --> 0:07:40,616
our preview to see what it's

286
00:07:40,616 --> 0:07:41,906
going to look like in Dark Mode.

287
00:07:42,466 --> 0:07:44,706
So, if we do that, we can now

288
00:07:44,706 --> 0:07:46,676
see that we're getting a dark

289
00:07:46,776 --> 0:07:47,666
background color here.

290
00:07:48,266 --> 0:07:50,626
But of course, our text just

291
00:07:50,626 --> 0:07:51,176
disappeared.

292
00:07:51,176 --> 0:07:51,706
What happened?

293
00:07:52,946 --> 0:07:54,366
Well, we have black text drawing

294
00:07:54,366 --> 0:07:55,576
on top of a black background.

295
00:07:56,326 --> 0:07:57,516
So, we need to actually go in

296
00:07:57,516 --> 0:07:59,026
here and we can choose, let's

297
00:07:59,026 --> 0:08:00,276
start with the title label.

298
00:07:59,026 --> 0:08:00,276
start with the title label.

299
00:08:01,326 --> 0:08:03,036
And we can see on the right that

300
00:08:03,036 --> 0:08:04,386
we have this configured also

301
00:08:04,386 --> 0:08:05,816
with a hard-coded black color

302
00:08:05,816 --> 0:08:06,206
for the text.

303
00:08:07,086 --> 0:08:07,906
So, once again, we need to

304
00:08:07,906 --> 0:08:08,906
switch that to one of these new

305
00:08:08,906 --> 0:08:09,786
dynamic colors.

306
00:08:10,426 --> 0:08:12,296
In this case, we have a great

307
00:08:12,296 --> 0:08:13,836
choice with the label color.

308
00:08:14,566 --> 0:08:16,456
That's going to give us white in

309
00:08:16,456 --> 0:08:16,836
Dark Mode.

310
00:08:18,176 --> 0:08:19,456
Similarly, we select our text

311
00:08:19,456 --> 0:08:19,746
view.

312
00:08:20,536 --> 0:08:22,336
It's also set to black, so we'll

313
00:08:22,336 --> 0:08:23,356
need to update that as well.

314
00:08:26,156 --> 0:08:27,306
So, now that we've made those

315
00:08:27,306 --> 0:08:28,696
changes, how about we run in the

316
00:08:28,696 --> 0:08:29,916
simulator and see how things are

317
00:08:29,916 --> 0:08:33,626
actually starting to look.

318
00:08:33,866 --> 0:08:35,385
Here's our app running in light

319
00:08:35,385 --> 0:08:35,616
mode.

320
00:08:36,405 --> 0:08:37,466
We'll once again go to those

321
00:08:37,466 --> 0:08:39,395
environment overrides and toggle

322
00:08:39,395 --> 0:08:39,966
it into dark.

323
00:08:40,686 --> 0:08:42,826
And now we're seeing a lot more

324
00:08:42,826 --> 0:08:43,256
updating.

325
00:08:43,395 --> 0:08:44,796
And so it's looking pretty good.

326
00:08:45,266 --> 0:08:46,396
But what if we want to go a

327
00:08:46,396 --> 0:08:47,096
little bit further?

328
00:08:47,796 --> 0:08:49,476
So, at the top we have this star

329
00:08:49,476 --> 0:08:49,796
image.

330
00:08:49,796 --> 0:08:50,786
That's our app's logo.

331
00:08:51,176 --> 0:08:52,656
And we want to customize that

332
00:08:52,656 --> 0:08:54,446
with a different color in Dark

333
00:08:54,446 --> 0:08:54,676
Mode.

334
00:08:55,816 --> 0:08:57,346
So, this is easily possible.

335
00:08:57,826 --> 0:09:00,316
We can select the image in our

336
00:08:57,826 --> 0:09:00,316
We can select the image in our

337
00:09:00,316 --> 0:09:00,866
storyboard.

338
00:09:01,266 --> 0:09:02,156
You'll see this is an image

339
00:09:02,156 --> 0:09:02,436
view.

340
00:09:02,516 --> 0:09:04,006
It's configured with an image

341
00:09:04,006 --> 0:09:04,886
that comes from our asset

342
00:09:04,886 --> 0:09:05,406
catalog.

343
00:09:06,046 --> 0:09:07,336
And this image is set up to

344
00:09:07,336 --> 0:09:08,536
render as a template image,

345
00:09:08,536 --> 0:09:10,016
which means that any tint color

346
00:09:10,016 --> 0:09:12,086
set on the image view is going

347
00:09:12,086 --> 0:09:13,166
to tint the image.

348
00:09:13,776 --> 0:09:14,886
So, here we're tinting it with

349
00:09:14,936 --> 0:09:16,496
this custom logo color that

350
00:09:16,496 --> 0:09:17,516
we've already defined in our

351
00:09:17,516 --> 0:09:18,256
asset catalog.

352
00:09:18,786 --> 0:09:19,916
Let's click this little arrow

353
00:09:19,916 --> 0:09:21,316
right here to jump straight to

354
00:09:21,316 --> 0:09:23,596
that color and see how it's set

355
00:09:23,596 --> 0:09:23,736
up.

356
00:09:24,346 --> 0:09:25,406
So, here's that color.

357
00:09:25,406 --> 0:09:27,116
It's this custom green color.

358
00:09:27,906 --> 0:09:29,276
If we want to add a different

359
00:09:29,276 --> 0:09:30,956
appearance for Dark Mode, we can

360
00:09:30,956 --> 0:09:32,886
do that now by opening up a new

361
00:09:32,886 --> 0:09:34,836
slot specific for the dark

362
00:09:34,836 --> 0:09:35,436
appearance.

363
00:09:36,706 --> 0:09:38,256
Once we've done that, we can

364
00:09:38,366 --> 0:09:39,496
select the dark appearance and

365
00:09:39,496 --> 0:09:41,016
change it, let's say to a nice

366
00:09:41,186 --> 0:09:42,876
yellow perhaps, something like

367
00:09:42,906 --> 0:09:43,166
that.

368
00:09:44,196 --> 0:09:45,766
And now we have a color set up

369
00:09:45,826 --> 0:09:47,556
to automatically switch between

370
00:09:47,556 --> 0:09:48,446
two different appearances in

371
00:09:48,446 --> 0:09:48,916
light and dark.

372
00:09:50,096 --> 0:09:52,026
So, if I save and switch back to

373
00:09:52,026 --> 0:09:55,076
our storyboard, you can see that

374
00:09:55,076 --> 0:09:57,516
as we toggle between light and

375
00:09:57,516 --> 0:09:59,466
dark in the preview, we're

376
00:09:59,466 --> 0:10:00,816
getting that automatic updating,

377
00:09:59,466 --> 0:10:00,816
getting that automatic updating,

378
00:10:00,986 --> 0:10:01,446
which is great.

379
00:10:03,516 --> 0:10:06,516
[ Applause ]

380
00:10:07,016 --> 0:10:07,606
But there's more.

381
00:10:08,416 --> 0:10:09,336
What if we want to actually

382
00:10:09,336 --> 0:10:10,636
update that background image?

383
00:10:10,636 --> 0:10:11,606
So right now it's a nice

384
00:10:11,606 --> 0:10:12,896
tropical beach scene during the

385
00:10:12,896 --> 0:10:13,286
day.

386
00:10:13,466 --> 0:10:14,596
Wouldn't it be cool if it kind

387
00:10:14,596 --> 0:10:16,646
of got to a nice sunset-darkened

388
00:10:16,646 --> 0:10:18,956
appearance in Dark Mode?

389
00:10:19,746 --> 0:10:20,856
We can select that image view

390
00:10:20,856 --> 0:10:22,096
and do something really similar

391
00:10:22,096 --> 0:10:23,206
to what we did with the color.

392
00:10:23,786 --> 0:10:25,066
So, here we have an image view,

393
00:10:25,066 --> 0:10:26,396
it's configured with this header

394
00:10:26,396 --> 0:10:27,846
image in our asset catalog.

395
00:10:27,846 --> 0:10:29,216
We'll click the arrow to jump

396
00:10:29,216 --> 0:10:29,896
directly to that.

397
00:10:31,376 --> 0:10:32,266
Here's where that image is set

398
00:10:32,266 --> 0:10:32,396
up.

399
00:10:33,066 --> 0:10:34,066
And just like you saw with the

400
00:10:34,066 --> 0:10:35,776
color, it's really just the same

401
00:10:35,776 --> 0:10:36,116
thing.

402
00:10:36,196 --> 0:10:38,216
You can open up a new slot for

403
00:10:38,216 --> 0:10:39,936
the dark appearance and then all

404
00:10:39,936 --> 0:10:42,096
we need to do is grab that

405
00:10:42,896 --> 0:10:45,126
sunset image, drag that in.

406
00:10:46,046 --> 0:10:47,836
I'll save and just let's run for

407
00:10:47,876 --> 0:10:48,846
real and see what everything

408
00:10:48,846 --> 0:10:50,536
looks like in the simulator now.

409
00:10:52,976 --> 0:10:54,446
So, this is light mode.

410
00:10:54,606 --> 0:10:55,476
Nothing has changed.

411
00:10:55,476 --> 0:10:56,806
It's all what we started with,

412
00:10:56,806 --> 0:10:57,816
even with all these changes.

413
00:10:58,326 --> 0:11:00,116
But once we flip into Dark using

414
00:10:58,326 --> 0:11:00,116
But once we flip into Dark using

415
00:11:00,116 --> 0:11:02,496
our environment overrides, now

416
00:11:02,716 --> 0:11:04,076
everything on this screen has

417
00:11:04,076 --> 0:11:05,936
been updated to support Dark

418
00:11:05,936 --> 0:11:06,136
Mode.

419
00:11:07,516 --> 0:11:10,406
[ Applause ]

420
00:11:10,906 --> 0:11:12,356
So the really cool thing that

421
00:11:12,356 --> 0:11:13,946
you've seen here is that by

422
00:11:13,946 --> 0:11:15,076
using all of these dynamic

423
00:11:15,076 --> 0:11:16,666
colors and taking advantage of

424
00:11:16,666 --> 0:11:18,436
these dynamic images and custom

425
00:11:18,436 --> 0:11:20,296
colors in the asset catalog, we

426
00:11:20,296 --> 0:11:21,456
were able to get Dark Mode

427
00:11:21,456 --> 0:11:23,456
working without any code.

428
00:11:24,106 --> 0:11:25,416
This is the advantage of taking

429
00:11:25,416 --> 0:11:26,266
advantage of all of this

430
00:11:26,336 --> 0:11:27,796
infrastructure that we provide

431
00:11:27,796 --> 0:11:29,536
for you in Xcode and UIKit.

432
00:11:30,386 --> 0:11:31,596
You can also make these same

433
00:11:31,596 --> 0:11:33,036
sorts of changes to your app's

434
00:11:33,186 --> 0:11:34,476
Launch storyboard to support

435
00:11:34,476 --> 0:11:36,046
Dark Mode when your app is

436
00:11:36,046 --> 0:11:38,156
launching as well.

437
00:11:38,366 --> 0:11:40,386
So, now why don't we take a look

438
00:11:40,386 --> 0:11:41,846
at another screen in our app.

439
00:11:42,396 --> 0:11:43,866
If you tap this Learn More

440
00:11:43,866 --> 0:11:45,736
button, we present a view

441
00:11:45,856 --> 0:11:47,556
controller here in this new

442
00:11:47,556 --> 0:11:48,746
card-style presentation.

443
00:11:48,746 --> 0:11:49,996
And of course we're going to

444
00:11:49,996 --> 0:11:51,166
want to make this support Dark

445
00:11:51,166 --> 0:11:51,696
Mode as well.

446
00:11:52,066 --> 0:11:53,556
The interesting thing here is

447
00:11:53,556 --> 0:11:54,916
that on the bottom half, you can

448
00:11:54,916 --> 0:11:56,176
see we're taking advantage of

449
00:11:56,176 --> 0:11:57,336
some materials.

450
00:11:57,746 --> 0:11:59,406
So, we have a blur over this

451
00:11:59,446 --> 0:12:00,746
background image and then we

452
00:11:59,446 --> 0:12:00,746
background image and then we

453
00:12:00,746 --> 0:12:02,306
have a vibrant label sitting on

454
00:12:02,306 --> 0:12:02,856
top of that.

455
00:12:03,416 --> 0:12:04,506
I'll hand things back over to

456
00:12:04,556 --> 0:12:05,996
Kurt to talk a little bit more

457
00:12:05,996 --> 0:12:07,316
about how you can use these

458
00:12:07,316 --> 0:12:09,276
visual effects to automatically

459
00:12:09,276 --> 0:12:10,586
update for Dark Mode as well.

460
00:12:14,196 --> 0:12:15,156
&gt;&gt; Thank you, Tyler.

461
00:12:16,016 --> 0:12:18,426
[ Applause ]

462
00:12:18,926 --> 0:12:20,516
So, let me show some examples of

463
00:12:20,516 --> 0:12:21,216
these materials.

464
00:12:21,936 --> 0:12:23,256
Here's some new blur effects.

465
00:12:24,046 --> 0:12:26,356
There's thick, regular, thin,

466
00:12:26,816 --> 0:12:27,976
and ultra thin styles.

467
00:12:28,376 --> 0:12:29,276
And of course these work in

468
00:12:29,276 --> 0:12:30,686
light and in dark.

469
00:12:31,656 --> 0:12:32,736
Now here's how to use them.

470
00:12:33,846 --> 0:12:35,156
Let's say in my app I have some

471
00:12:35,156 --> 0:12:36,806
views in the background and I

472
00:12:36,806 --> 0:12:38,456
want a blur on top of them.

473
00:12:39,206 --> 0:12:40,636
First thing we do is create a

474
00:12:40,636 --> 0:12:43,106
UIBlur effect, and we specify a

475
00:12:43,106 --> 0:12:43,906
style.

476
00:12:44,136 --> 0:12:45,126
In this case, we're going to use

477
00:12:45,126 --> 0:12:46,086
system material.

478
00:12:46,146 --> 0:12:47,396
That's a good default choice.

479
00:12:48,636 --> 0:12:51,046
Next, we create a UIVisual

480
00:12:51,046 --> 0:12:52,756
effect view using that effect.

481
00:12:53,956 --> 0:12:55,346
We make sure its size and

482
00:12:55,346 --> 0:12:56,886
position are appropriate, then

483
00:12:56,886 --> 0:12:58,176
we put the visual effect view

484
00:12:58,286 --> 0:12:59,456
into our view hierarchy.

485
00:13:00,756 --> 0:13:02,196
You see that it blurs everything

486
00:13:02,196 --> 0:13:02,736
underneath it.

487
00:13:02,936 --> 0:13:03,606
It's pretty simple.

488
00:13:05,446 --> 0:13:06,946
Now, on top of Blur effects, you

489
00:13:06,946 --> 0:13:08,286
can have vibrant content.

490
00:13:08,866 --> 0:13:10,166
The vibrancy effect let's some

491
00:13:10,166 --> 0:13:11,416
of the background material pass

492
00:13:11,416 --> 0:13:12,036
through.

493
00:13:12,676 --> 0:13:13,886
And in the past, there was only

494
00:13:13,886 --> 0:13:16,066
one style of vibrancy but now

495
00:13:16,066 --> 0:13:16,756
there are several.

496
00:13:17,286 --> 0:13:18,746
There's four styles for text,

497
00:13:19,456 --> 0:13:21,106
three styles for larger filled

498
00:13:21,106 --> 0:13:23,486
areas, and even a style for thin

499
00:13:23,566 --> 0:13:24,346
separator lines.

500
00:13:25,086 --> 0:13:26,056
Of course, these work in light

501
00:13:26,156 --> 0:13:26,786
and in dark.

502
00:13:28,236 --> 0:13:29,326
So, here's how to implement

503
00:13:29,326 --> 0:13:29,846
vibrancy.

504
00:13:30,726 --> 0:13:32,396
Now, vibrancy's always added on

505
00:13:32,476 --> 0:13:33,946
top of Blur, so, we're starting

506
00:13:33,946 --> 0:13:35,306
with the same setup from before.

507
00:13:36,406 --> 0:13:38,396
We'll make a vibrancy effect and

508
00:13:38,396 --> 0:13:39,776
we specify a style.

509
00:13:40,206 --> 0:13:41,316
In this case, I'm using fill

510
00:13:41,316 --> 0:13:42,186
because I'm going to show a

511
00:13:42,186 --> 0:13:43,116
larger filled area.

512
00:13:44,306 --> 0:13:45,626
Note that when you create a

513
00:13:45,626 --> 0:13:46,976
vibrancy effect, you give it a

514
00:13:46,976 --> 0:13:48,316
reference to a Blur effect.

515
00:13:48,636 --> 0:13:50,156
The two things operate together.

516
00:13:51,606 --> 0:13:52,866
To show the vibrancy effect, we

517
00:13:52,866 --> 0:13:54,456
make another visual effect view,

518
00:13:55,266 --> 0:13:56,576
and then we'll put that inside

519
00:13:56,616 --> 0:13:57,216
the Blur effect.

520
00:13:57,216 --> 0:13:58,626
Now, there's something a little

521
00:13:58,626 --> 0:13:59,776
subtle here, is that we don't

522
00:13:59,776 --> 0:14:01,886
ever add views directly as

523
00:13:59,776 --> 0:14:01,886
ever add views directly as

524
00:14:01,886 --> 0:14:03,466
subviews of a visual effect

525
00:14:03,556 --> 0:14:03,806
view.

526
00:14:04,186 --> 0:14:05,406
Instead, we go through its

527
00:14:05,406 --> 0:14:06,196
content view.

528
00:14:07,566 --> 0:14:08,866
Now we'll add the views that

529
00:14:08,866 --> 0:14:09,786
become vibrant.

530
00:14:10,326 --> 0:14:11,916
So again, I get the content view

531
00:14:12,506 --> 0:14:13,656
and then I add the views that

532
00:14:13,656 --> 0:14:15,026
will become vibrant and you see

533
00:14:15,026 --> 0:14:15,686
how it looks.

534
00:14:16,546 --> 0:14:18,086
In this case, our view has an

535
00:14:18,086 --> 0:14:19,596
opaque background color.

536
00:14:20,256 --> 0:14:21,606
But instead of its normal color,

537
00:14:21,606 --> 0:14:23,056
you see the vibrancy effect

538
00:14:23,056 --> 0:14:23,546
instead.

539
00:14:24,216 --> 0:14:25,006
That's because with this

540
00:14:25,006 --> 0:14:27,096
vibrancy style, the color is

541
00:14:27,096 --> 0:14:29,036
ignored and only the alpha is

542
00:14:29,036 --> 0:14:29,446
used.

543
00:14:30,456 --> 0:14:31,676
So, over to Tyler again to

544
00:14:31,676 --> 0:14:33,136
finish adding materials to our

545
00:14:33,136 --> 0:14:34,426
demo app.

546
00:14:36,516 --> 0:14:41,500
[ Applause ]

547
00:14:44,946 --> 0:14:47,046
&gt;&gt; Okay. So, we're back on this

548
00:14:47,086 --> 0:14:48,926
learn more screen and the

549
00:14:48,926 --> 0:14:50,256
difference between this screen

550
00:14:50,326 --> 0:14:51,366
and the last screen that we

551
00:14:51,366 --> 0:14:52,966
worked on is that this one is

552
00:14:52,966 --> 0:14:54,566
actually built entirely in code.

553
00:14:55,536 --> 0:14:56,936
So, here we are in our view

554
00:14:56,936 --> 0:14:58,476
controller, and you can see that

555
00:14:58,476 --> 0:14:59,556
everything's assembled in this

556
00:14:59,556 --> 0:15:00,296
Load View method.

557
00:14:59,556 --> 0:15:00,296
Load View method.

558
00:15:00,896 --> 0:15:01,966
Before we actually get started,

559
00:15:01,966 --> 0:15:03,196
why don't we just try flipping

560
00:15:03,196 --> 0:15:04,266
on Dark Mode and seeing how

561
00:15:04,266 --> 0:15:04,676
things look.

562
00:15:06,006 --> 0:15:07,606
We'll go here to our environment

563
00:15:07,606 --> 0:15:10,186
overrides, switch to Dark, and

564
00:15:10,466 --> 0:15:11,476
if you notice, there's actually

565
00:15:11,476 --> 0:15:12,516
a few things that changed.

566
00:15:12,806 --> 0:15:14,136
We got the navigation bar this

567
00:15:14,186 --> 0:15:15,296
time for free, because that's

568
00:15:15,296 --> 0:15:16,216
coming from UIKit.

569
00:15:16,906 --> 0:15:18,886
We also already have our dynamic

570
00:15:19,066 --> 0:15:20,986
custom color and the custom

571
00:15:20,986 --> 0:15:22,366
image set up, and it's the same

572
00:15:22,366 --> 0:15:23,656
ones that we updated before, so

573
00:15:23,656 --> 0:15:24,656
those are already working as

574
00:15:24,656 --> 0:15:24,846
well.

575
00:15:25,396 --> 0:15:26,406
But of course, you can see we

576
00:15:26,406 --> 0:15:27,576
still have a white background

577
00:15:27,936 --> 0:15:29,336
and those materials don't look

578
00:15:29,416 --> 0:15:30,876
particularly great in the dark

579
00:15:31,006 --> 0:15:31,676
appearance here.

580
00:15:31,676 --> 0:15:32,306
So, we're going to make some

581
00:15:32,306 --> 0:15:32,676
changes.

582
00:15:33,546 --> 0:15:35,216
So, let's take a look at how all

583
00:15:35,216 --> 0:15:35,796
of this is built.

584
00:15:36,556 --> 0:15:38,206
The first thing that we do is

585
00:15:38,236 --> 0:15:39,466
set up this view in the

586
00:15:39,466 --> 0:15:39,976
background.

587
00:15:39,976 --> 0:15:41,066
This is where the white is

588
00:15:41,066 --> 0:15:41,556
coming from.

589
00:15:41,886 --> 0:15:42,526
Just like you saw in the

590
00:15:42,526 --> 0:15:44,156
storyboard, we need to switch to

591
00:15:44,156 --> 0:15:45,666
use one of the new system

592
00:15:45,666 --> 0:15:46,416
background colors.

593
00:15:46,826 --> 0:15:47,886
Let's choose system background

594
00:15:47,886 --> 0:15:49,306
again, just like we did before.

595
00:15:49,846 --> 0:15:52,746
Next we're setting up the star

596
00:15:52,746 --> 0:15:54,216
image, and again, that's using

597
00:15:54,266 --> 0:15:55,636
our asset catalog color.

598
00:15:55,636 --> 0:15:56,796
So, nothing to do there.

599
00:15:57,876 --> 0:16:00,006
Here is the learn more label

600
00:15:57,876 --> 0:16:00,006
Here is the learn more label

601
00:16:00,006 --> 0:16:01,126
that you can see, the title of

602
00:16:01,186 --> 0:16:02,016
this screen.

603
00:16:02,016 --> 0:16:02,946
We're going to need to make a

604
00:16:02,946 --> 0:16:04,706
change because we have the black

605
00:16:05,066 --> 0:16:06,076
hard-coded color here.

606
00:16:06,696 --> 0:16:07,626
And once again, we can just

607
00:16:07,626 --> 0:16:09,106
switch to something like label.

608
00:16:11,576 --> 0:16:13,516
Now, for the bottom half, what

609
00:16:13,516 --> 0:16:15,316
we have going on is an image

610
00:16:15,316 --> 0:16:16,626
view sitting at the very back.

611
00:16:17,626 --> 0:16:18,366
That's right here.

612
00:16:19,006 --> 0:16:20,556
Layered on top of the image view

613
00:16:20,936 --> 0:16:22,136
is a visual effect view

614
00:16:22,206 --> 0:16:23,536
configured with a Blur.

615
00:16:24,596 --> 0:16:26,146
So, that's this light-style

616
00:16:26,146 --> 0:16:26,496
blur.

617
00:16:27,446 --> 0:16:28,726
Then on top of that, we have

618
00:16:28,726 --> 0:16:29,956
another visual effect view

619
00:16:30,046 --> 0:16:31,576
configured with vibrancy.

620
00:16:32,476 --> 0:16:33,056
That's right here.

621
00:16:33,816 --> 0:16:35,236
And finally, inside of the

622
00:16:35,236 --> 0:16:37,116
content view of that vibrancy

623
00:16:37,116 --> 0:16:38,656
view, we have the label.

624
00:16:39,806 --> 0:16:40,766
So, the changes that we need to

625
00:16:40,766 --> 0:16:42,286
make to update these materials

626
00:16:42,696 --> 0:16:44,346
are first of all to switch to a

627
00:16:44,346 --> 0:16:45,566
dynamic blur effect.

628
00:16:45,566 --> 0:16:47,286
This light effect is not

629
00:16:47,286 --> 0:16:48,076
actually dynamic.

630
00:16:48,076 --> 0:16:49,246
It's not going to update for us

631
00:16:49,246 --> 0:16:50,186
when we switch to Dark Mode.

632
00:16:50,886 --> 0:16:51,886
So, we can take advantage of

633
00:16:51,886 --> 0:16:53,716
this brand-new system material

634
00:16:53,776 --> 0:16:55,726
palette that we have in iOS 13.

635
00:16:56,326 --> 0:16:57,756
Great choice, because the system

636
00:16:57,756 --> 0:16:59,696
thin material for this

637
00:16:59,696 --> 0:17:00,866
particular use case, it'll look

638
00:16:59,696 --> 0:17:00,866
particular use case, it'll look

639
00:17:00,866 --> 0:17:01,926
very similar to what we had

640
00:17:01,926 --> 0:17:02,296
before.

641
00:17:02,886 --> 0:17:04,746
And then we also want to update

642
00:17:04,746 --> 0:17:06,546
our vibrancy to take advantage

643
00:17:06,546 --> 0:17:07,695
of the new system vibrancy

644
00:17:07,695 --> 0:17:08,266
styles.

645
00:17:08,636 --> 0:17:09,976
And these vibrancy styles now

646
00:17:09,976 --> 0:17:11,586
come in a nice hierarchy.

647
00:17:11,766 --> 0:17:13,685
So, we can add a style

648
00:17:13,766 --> 0:17:14,266
parameter.

649
00:17:14,766 --> 0:17:16,016
And in this case it's kind of

650
00:17:16,016 --> 0:17:17,546
secondary content, so we can

651
00:17:17,546 --> 0:17:20,205
choose the secondary label and

652
00:17:20,955 --> 0:17:22,766
with those few changes, why

653
00:17:22,766 --> 0:17:24,715
don't we run and see how things

654
00:17:24,715 --> 0:17:24,876
look.

655
00:17:26,256 --> 0:17:26,886
Let's bring up that

656
00:17:26,886 --> 0:17:27,506
presentation.

657
00:17:28,376 --> 0:17:29,686
So, here we are in light mode.

658
00:17:29,686 --> 0:17:30,726
It looks pretty similar to what

659
00:17:30,726 --> 0:17:33,456
we had before, but we'll now

660
00:17:33,456 --> 0:17:34,246
switch into Dark.

661
00:17:35,486 --> 0:17:37,716
And bam. Everything has been

662
00:17:37,716 --> 0:17:39,336
updated with nice, new Dark

663
00:17:39,336 --> 0:17:39,816
Materials.

664
00:17:41,516 --> 0:17:44,276
[ Applause ]

665
00:17:44,776 --> 0:17:46,266
So, one point here is that even

666
00:17:46,266 --> 0:17:47,246
though we did write some code

667
00:17:47,246 --> 0:17:48,486
this time, there's nothing wrong

668
00:17:48,486 --> 0:17:50,006
with that, we didn't actually

669
00:17:50,006 --> 0:17:51,236
need to write any code that

670
00:17:51,236 --> 0:17:53,046
explicitly checked which mode we

671
00:17:53,046 --> 0:17:55,566
were in, or handled changes from

672
00:17:55,566 --> 0:17:56,656
Light to Dark Mode or vice

673
00:17:56,656 --> 0:17:57,156
versa.

674
00:17:57,926 --> 0:17:59,306
This is also the advantage of

675
00:17:59,336 --> 0:18:01,406
taking-- of using these dynamic

676
00:17:59,336 --> 0:18:01,406
taking-- of using these dynamic

677
00:18:01,546 --> 0:18:03,416
system colors and materials in

678
00:18:03,416 --> 0:18:04,426
your app.

679
00:18:04,426 --> 0:18:05,656
I'll had it back over to Kurt to

680
00:18:05,656 --> 0:18:06,566
tell you a little bit more of

681
00:18:06,566 --> 0:18:07,856
how all of this works behind the

682
00:18:07,856 --> 0:18:08,216
scenes.

683
00:18:12,566 --> 0:18:12,976
&gt;&gt; Thank you.

684
00:18:13,516 --> 0:18:16,256
[ Applause ]

685
00:18:16,756 --> 0:18:17,786
So, here's something subtle that

686
00:18:17,786 --> 0:18:18,966
you might not have noticed.

687
00:18:19,886 --> 0:18:21,696
We used system background color

688
00:18:21,746 --> 0:18:23,066
as the main background in our

689
00:18:23,066 --> 0:18:24,396
app, that was black.

690
00:18:24,746 --> 0:18:26,416
And then we used it again in

691
00:18:26,416 --> 0:18:27,296
that presented view.

692
00:18:27,856 --> 0:18:29,016
And if you look carefully, you

693
00:18:29,016 --> 0:18:30,416
can see it's a lighter shade of

694
00:18:30,416 --> 0:18:30,726
grey.

695
00:18:31,986 --> 0:18:33,486
That's because the design for

696
00:18:33,486 --> 0:18:35,046
Dark Mode has two different

697
00:18:35,046 --> 0:18:35,536
levels.

698
00:18:36,076 --> 0:18:37,256
When the view fills the whole

699
00:18:37,256 --> 0:18:38,896
screen edge to edge, we call

700
00:18:38,896 --> 0:18:39,896
that the base level.

701
00:18:40,696 --> 0:18:41,876
And then when content appears in

702
00:18:41,876 --> 0:18:43,996
a separate layer above that, we

703
00:18:43,996 --> 0:18:45,336
call that the elevated level.

704
00:18:46,236 --> 0:18:47,446
So, in Dark Mode, the

705
00:18:47,446 --> 0:18:48,886
system-provided background

706
00:18:48,886 --> 0:18:50,756
colors have lighter values in

707
00:18:50,756 --> 0:18:51,606
the elevated level.

708
00:18:51,856 --> 0:18:53,086
This helps distinguish them from

709
00:18:53,086 --> 0:18:54,546
the black background underneath.

710
00:18:55,426 --> 0:18:56,706
But foreground colors don't

711
00:18:56,706 --> 0:18:57,246
change.

712
00:18:58,276 --> 0:18:59,476
Now on iPhone, this can happen

713
00:18:59,476 --> 0:19:00,816
with presentations, as you see

714
00:18:59,476 --> 0:19:00,816
with presentations, as you see

715
00:19:00,816 --> 0:19:01,036
here.

716
00:19:01,946 --> 0:19:03,366
On iPad, this can also happen

717
00:19:03,366 --> 0:19:04,866
when the app is in multitasking

718
00:19:04,866 --> 0:19:06,446
split view, so it doesn't fill

719
00:19:06,446 --> 0:19:07,046
the whole screen.

720
00:19:08,626 --> 0:19:09,646
So, we've learned the essentials

721
00:19:09,646 --> 0:19:10,836
about implementing Dark Mode.

722
00:19:11,626 --> 0:19:13,646
And we've both been saying that

723
00:19:13,676 --> 0:19:14,746
things just work.

724
00:19:14,936 --> 0:19:15,796
It's just automatic.

725
00:19:16,276 --> 0:19:18,066
So, let's dive deeper into how

726
00:19:18,066 --> 0:19:19,756
dynamic colors and images work.

727
00:19:20,176 --> 0:19:21,166
And this will help you take

728
00:19:21,166 --> 0:19:22,516
advantage of all this power and

729
00:19:22,516 --> 0:19:23,126
flexibility.

730
00:19:24,526 --> 0:19:25,656
So, we've seen how dynamic

731
00:19:25,656 --> 0:19:27,126
colors automatically resolve

732
00:19:27,126 --> 0:19:28,746
their appearance, but how does

733
00:19:28,746 --> 0:19:29,946
the color know whether it's

734
00:19:29,946 --> 0:19:30,546
light or dark?

735
00:19:31,466 --> 0:19:32,476
This is done with trait

736
00:19:32,476 --> 0:19:32,886
collections.

737
00:19:33,506 --> 0:19:34,886
So, each view and view

738
00:19:34,886 --> 0:19:36,316
controller in your app has a

739
00:19:36,316 --> 0:19:38,156
trait collection, and this helps

740
00:19:38,846 --> 0:19:40,416
determine the appearance of the

741
00:19:40,416 --> 0:19:41,016
views.

742
00:19:41,836 --> 0:19:42,966
In this case, all of our views

743
00:19:42,966 --> 0:19:44,096
have the same trait collection.

744
00:19:44,796 --> 0:19:46,246
The idiom is phone, because

745
00:19:46,246 --> 0:19:47,536
we're running on a phone and not

746
00:19:47,536 --> 0:19:48,446
an iPad or CarPlay.

747
00:19:49,406 --> 0:19:50,726
The user interface style is

748
00:19:50,766 --> 0:19:51,946
dark, because we're in Dark

749
00:19:51,946 --> 0:19:52,206
Mode.

750
00:19:52,826 --> 0:19:54,266
And the user interface level is

751
00:19:54,396 --> 0:19:55,806
base, because we're full screen.

752
00:19:56,866 --> 0:19:58,496
So, if you want to find out what

753
00:19:58,496 --> 0:20:00,116
appearance to use, get the trait

754
00:19:58,496 --> 0:20:00,116
appearance to use, get the trait

755
00:20:00,116 --> 0:20:01,406
collection, we'll look at the

756
00:20:01,406 --> 0:20:03,036
user interface style, and also

757
00:20:03,036 --> 0:20:04,436
the other traits.

758
00:20:05,416 --> 0:20:07,396
Now, dynamic colors are resolved

759
00:20:07,546 --> 0:20:08,726
using a trait collection.

760
00:20:08,966 --> 0:20:10,376
So, it's the combination of a

761
00:20:10,426 --> 0:20:11,946
dynamic color and a trait

762
00:20:11,946 --> 0:20:13,306
collection that determine the

763
00:20:13,426 --> 0:20:14,516
final resolved color.

764
00:20:15,396 --> 0:20:16,246
And normally this happens

765
00:20:16,246 --> 0:20:17,746
automatically but if you need

766
00:20:17,786 --> 0:20:19,726
resolve a color yourself, you

767
00:20:19,726 --> 0:20:20,246
can do that.

768
00:20:21,286 --> 0:20:22,346
Let's say we have a dynamic

769
00:20:22,346 --> 0:20:23,916
color and we've gotten a trait

770
00:20:23,916 --> 0:20:24,926
collection from a view.

771
00:20:26,076 --> 0:20:27,056
If we want to resolve that

772
00:20:27,056 --> 0:20:29,356
color, we just say dynamic color

773
00:20:29,356 --> 0:20:31,446
resolved color with trait

774
00:20:31,446 --> 0:20:31,946
collection.

775
00:20:32,296 --> 0:20:34,146
It will return a fully resolved

776
00:20:34,146 --> 0:20:35,496
color that isn't dynamic

777
00:20:35,496 --> 0:20:35,896
anymore.

778
00:20:37,086 --> 0:20:38,486
So, this is safe to call on any

779
00:20:38,486 --> 0:20:38,796
color.

780
00:20:38,956 --> 0:20:40,446
If that color wasn't dynamic, it

781
00:20:40,446 --> 0:20:41,626
would've just returned itself.

782
00:20:43,056 --> 0:20:44,886
You can also make custom dynamic

783
00:20:44,936 --> 0:20:45,426
colors.

784
00:20:45,786 --> 0:20:46,726
We showed how to do that in the

785
00:20:46,726 --> 0:20:48,246
asset catalog, but you can do

786
00:20:48,246 --> 0:20:49,186
that in code as well.

787
00:20:50,496 --> 0:20:52,076
Initialize a color with a

788
00:20:52,076 --> 0:20:54,146
closure, and the argument is a

789
00:20:54,146 --> 0:20:54,946
trait collection.

790
00:20:55,856 --> 0:20:57,006
Then our closure will return

791
00:20:57,096 --> 0:20:57,896
another color.

792
00:20:58,766 --> 0:21:00,536
So, each time this dynamic color

793
00:20:58,766 --> 0:21:00,536
So, each time this dynamic color

794
00:21:00,536 --> 0:21:01,966
needs to be resolved, that

795
00:21:01,966 --> 0:21:03,856
closure will be called with the

796
00:21:03,856 --> 0:21:04,896
appropriate trait collection.

797
00:21:05,686 --> 0:21:07,146
And in the closure, you can use

798
00:21:07,146 --> 0:21:08,386
that trait collection to

799
00:21:08,386 --> 0:21:09,706
determine another color to

800
00:21:09,706 --> 0:21:10,056
return.

801
00:21:10,846 --> 0:21:12,326
This example is implementing the

802
00:21:12,326 --> 0:21:13,356
diagram that we just saw.

803
00:21:14,576 --> 0:21:16,056
So another question.

804
00:21:16,436 --> 0:21:17,546
You might be wondering since

805
00:21:17,616 --> 0:21:18,976
dynamic colors can be used

806
00:21:18,976 --> 0:21:20,346
directly like any other color,

807
00:21:20,886 --> 0:21:21,756
how did they get resolved

808
00:21:21,756 --> 0:21:22,386
automatically?

809
00:21:23,286 --> 0:21:24,956
If I have a dynamic color and I

810
00:21:24,956 --> 0:21:26,556
ask it for its RGB components,

811
00:21:27,076 --> 0:21:28,046
it'll return a result.

812
00:21:28,636 --> 0:21:30,656
If I have black, I'll get 000.

813
00:21:31,286 --> 0:21:32,846
Well, when I ask it, I don't

814
00:21:32,926 --> 0:21:33,916
pass in a Trait Collection.

815
00:21:34,386 --> 0:21:35,246
How does it know?

816
00:21:36,826 --> 0:21:38,046
Well, there's a new property on

817
00:21:38,046 --> 0:21:39,176
UITrait Collection called

818
00:21:39,286 --> 0:21:41,336
current, and this is set for you

819
00:21:41,336 --> 0:21:42,066
by UIKit.

820
00:21:43,196 --> 0:21:45,186
And the color is resolved using

821
00:21:45,186 --> 0:21:46,556
that current Trait Collection.

822
00:21:47,296 --> 0:21:48,456
And again, we're following the

823
00:21:48,456 --> 0:21:49,486
same pattern from the mac.

824
00:21:49,766 --> 0:21:51,026
This is the same concept as

825
00:21:51,146 --> 0:21:52,656
NSAppearance.current.

826
00:21:54,106 --> 0:21:55,396
Now, UIKit sets the current

827
00:21:55,396 --> 0:21:56,636
Trait Collection for you when it

828
00:21:56,636 --> 0:21:57,446
calls certain methods.

829
00:21:58,086 --> 0:21:58,796
Here's an example.

830
00:21:59,476 --> 0:22:01,366
I have a UIVIew Subclass and

831
00:21:59,476 --> 0:22:01,366
I have a UIVIew Subclass and

832
00:22:01,366 --> 0:22:02,626
I've overridden the draw method.

833
00:22:02,726 --> 0:22:03,866
So, this view will do all of its

834
00:22:03,866 --> 0:22:04,386
own drawing.

835
00:22:06,336 --> 0:22:07,896
Before it calls this method,

836
00:22:08,386 --> 0:22:10,366
UIKit will set the current Trait

837
00:22:10,366 --> 0:22:11,866
Collection to the Views Trait

838
00:22:11,866 --> 0:22:12,286
Collection.

839
00:22:13,166 --> 0:22:14,986
So that inside this code when a

840
00:22:14,986 --> 0:22:16,366
dynamic color needs to be

841
00:22:16,366 --> 0:22:18,356
resolved, it will use the Views

842
00:22:18,356 --> 0:22:18,966
Trait Collection.

843
00:22:20,376 --> 0:22:22,176
In fact, when the mode changes,

844
00:22:22,176 --> 0:22:23,856
UIKit knows that you overrode

845
00:22:23,856 --> 0:22:24,476
the draw method.

846
00:22:24,506 --> 0:22:26,206
So, it will automatically call

847
00:22:26,206 --> 0:22:27,766
set needs display on your view

848
00:22:27,866 --> 0:22:29,296
and will draw again with new

849
00:22:29,296 --> 0:22:29,816
colors.

850
00:22:31,306 --> 0:22:32,666
UIKit also sets the current

851
00:22:32,666 --> 0:22:33,926
Trait Collection for you before

852
00:22:33,926 --> 0:22:35,266
it calls several other methods.

853
00:22:36,296 --> 0:22:38,676
I'm-- subclasses of view, view

854
00:22:38,676 --> 0:22:39,916
controller, and presentation

855
00:22:39,916 --> 0:22:41,826
controller, explain draw.

856
00:22:42,946 --> 0:22:44,516
But UIKit also sets the current

857
00:22:44,516 --> 0:22:45,816
Trait Collection during layout.

858
00:22:46,646 --> 0:22:48,566
So, override layout subviews in

859
00:22:48,566 --> 0:22:50,356
your view subclass and then add

860
00:22:50,356 --> 0:22:51,576
code that resolves dynamic

861
00:22:51,576 --> 0:22:52,016
colors.

862
00:22:52,746 --> 0:22:54,626
When the mode changes, set needs

863
00:22:54,626 --> 0:22:55,826
layout will be called.

864
00:22:55,826 --> 0:22:56,736
Layout will happen again.

865
00:22:56,736 --> 0:22:58,376
And this includes the

866
00:22:58,376 --> 0:22:59,716
corresponding calls on view

867
00:22:59,716 --> 0:23:01,276
controller and presentation

868
00:22:59,716 --> 0:23:01,276
controller and presentation

869
00:23:01,276 --> 0:23:01,656
controller.

870
00:23:03,076 --> 0:23:04,846
Finally, all three kinds of

871
00:23:04,846 --> 0:23:05,876
these objects get trait

872
00:23:05,876 --> 0:23:07,616
collection did change, when a

873
00:23:07,616 --> 0:23:08,346
trait changes.

874
00:23:08,666 --> 0:23:10,266
And views get tint color did

875
00:23:10,266 --> 0:23:11,296
change when the tint color

876
00:23:11,326 --> 0:23:11,636
changes.

877
00:23:12,306 --> 0:23:13,656
So inside all of these methods,

878
00:23:13,656 --> 0:23:14,696
it's convenient to be able to

879
00:23:14,696 --> 0:23:16,316
use dynamic colors right away.

880
00:23:17,696 --> 0:23:19,186
Now, here's a big point to keep

881
00:23:19,186 --> 0:23:19,536
in mind.

882
00:23:20,546 --> 0:23:21,926
Outside of these methods, the

883
00:23:21,926 --> 0:23:23,466
current trait collection is not

884
00:23:23,836 --> 0:23:25,006
guaranteed to have any

885
00:23:25,006 --> 0:23:27,246
particular value, so if you need

886
00:23:27,246 --> 0:23:28,706
to resolve a dynamic color

887
00:23:28,906 --> 0:23:30,446
outside of these methods, you

888
00:23:30,446 --> 0:23:31,146
need to manage it.

889
00:23:31,886 --> 0:23:33,046
Here's an example of why you

890
00:23:33,046 --> 0:23:33,666
might need to.

891
00:23:35,076 --> 0:23:37,126
Lower-level classes, like CA

892
00:23:37,126 --> 0:23:39,126
Layer and CG Color, don't

893
00:23:39,126 --> 0:23:40,416
understand dynamic colors.

894
00:23:40,416 --> 0:23:41,546
It's a UIKit concept.

895
00:23:42,696 --> 0:23:43,856
So in this case, we're creating

896
00:23:43,856 --> 0:23:45,056
a layer and then setting its

897
00:23:45,136 --> 0:23:45,756
border color.

898
00:23:46,496 --> 0:23:48,656
That takes a CG Color which

899
00:23:48,656 --> 0:23:49,496
can't be dynamic.

900
00:23:50,566 --> 0:23:52,886
So, calling CG Color on a UIKit

901
00:23:52,966 --> 0:23:54,556
dynamic color needs to resolve

902
00:23:54,556 --> 0:23:54,626
it.

903
00:23:55,636 --> 0:23:56,836
Now, let's imagine, we're not in

904
00:23:56,836 --> 0:23:58,006
one of those methods I mentioned

905
00:23:58,006 --> 0:23:58,356
earlier.

906
00:23:58,526 --> 0:23:59,546
That means it's our

907
00:23:59,546 --> 0:24:01,036
responsibility to manage this

908
00:23:59,546 --> 0:24:01,036
responsibility to manage this

909
00:24:01,036 --> 0:24:01,526
process.

910
00:24:02,296 --> 0:24:03,256
The first thing we need is a

911
00:24:03,256 --> 0:24:04,826
Trait Collection and we'll get

912
00:24:04,826 --> 0:24:05,466
it from a view.

913
00:24:06,536 --> 0:24:07,816
Now we need to use that Trait

914
00:24:07,816 --> 0:24:09,036
Collection, and I'll show three

915
00:24:09,036 --> 0:24:09,756
ways to do this.

916
00:24:09,756 --> 0:24:12,096
The first way we've already

917
00:24:12,096 --> 0:24:12,366
seen.

918
00:24:12,926 --> 0:24:15,256
Ask the color to resolve itself

919
00:24:15,436 --> 0:24:16,516
using that Trait Collection.

920
00:24:17,516 --> 0:24:18,646
Now this is fine if you have

921
00:24:18,646 --> 0:24:20,436
only a single color, but it can

922
00:24:20,436 --> 0:24:21,636
be awkward if you've got more.

923
00:24:22,126 --> 0:24:23,296
And you have to remember to do

924
00:24:23,296 --> 0:24:23,906
it every time.

925
00:24:24,696 --> 0:24:25,836
The second way is easier.

926
00:24:26,396 --> 0:24:29,086
Just call perform as current on

927
00:24:29,086 --> 0:24:29,856
the Trait Collection.

928
00:24:30,866 --> 0:24:32,146
That makes that Trait Collection

929
00:24:32,296 --> 0:24:33,176
become the current Trait

930
00:24:33,176 --> 0:24:34,936
Collection, and then it runs the

931
00:24:34,936 --> 0:24:36,176
code in the closure that you

932
00:24:36,176 --> 0:24:36,646
provide.

933
00:24:37,536 --> 0:24:38,526
So, since we're resolving the

934
00:24:38,526 --> 0:24:39,936
color inside that closure, you

935
00:24:39,936 --> 0:24:42,436
get the right value.

936
00:24:42,636 --> 0:24:43,816
Finally, the third option,

937
00:24:44,186 --> 0:24:46,186
directly set the current Trait

938
00:24:46,186 --> 0:24:46,586
Collection.

939
00:24:47,406 --> 0:24:48,616
This looks a little intimidating

940
00:24:48,616 --> 0:24:50,086
but it's absolutely safe.

941
00:24:50,236 --> 0:24:50,946
It's lightweight.

942
00:24:51,046 --> 0:24:52,446
There are no side effects.

943
00:24:53,286 --> 0:24:54,746
This is even safe to do on a

944
00:24:54,746 --> 0:24:55,616
background thread.

945
00:24:55,616 --> 0:24:57,846
It will only affect the specific

946
00:24:57,916 --> 0:24:58,886
thread that you're running on,

947
00:24:59,336 --> 0:25:00,526
so it won't affect your main

948
00:24:59,336 --> 0:25:00,526
so it won't affect your main

949
00:25:00,526 --> 0:25:00,786
thread.

950
00:25:02,016 --> 0:25:03,096
If you're going to do this, it's

951
00:25:03,096 --> 0:25:04,876
a good idea to save the current

952
00:25:04,876 --> 0:25:05,806
Trait Collection and then

953
00:25:05,806 --> 0:25:07,156
restore it afterwards in case

954
00:25:07,206 --> 0:25:08,566
any other code was relying on

955
00:25:08,566 --> 0:25:08,633
it.

956
00:25:09,506 --> 0:25:10,516
And note that performance

957
00:25:10,516 --> 0:25:11,806
current does that for you, it

958
00:25:11,806 --> 0:25:14,276
does this exact same thing.

959
00:25:14,516 --> 0:25:15,966
So, if you are doing this sort

960
00:25:15,966 --> 0:25:17,366
of thing, you will also want to

961
00:25:17,366 --> 0:25:18,966
know when the dynamic color

962
00:25:19,066 --> 0:25:20,196
needs to be resolved again.

963
00:25:21,186 --> 0:25:22,826
That usually happens when traits

964
00:25:22,866 --> 0:25:23,336
change.

965
00:25:23,986 --> 0:25:25,296
When traits change, Trait

966
00:25:25,296 --> 0:25:26,666
Collection did change as called.

967
00:25:27,626 --> 0:25:29,546
But not all trait changes will

968
00:25:29,546 --> 0:25:30,346
affect colors.

969
00:25:30,726 --> 0:25:31,946
If the user interface style

970
00:25:31,946 --> 0:25:33,466
changes from light to dark, that

971
00:25:33,466 --> 0:25:34,846
will obviously affect colors.

972
00:25:35,296 --> 0:25:36,276
But if something like a size

973
00:25:36,366 --> 0:25:38,106
class changes because your app

974
00:25:38,106 --> 0:25:39,836
was resized, that won't affect

975
00:25:39,956 --> 0:25:40,336
colors.

976
00:25:41,306 --> 0:25:43,176
So, it's best to use this method

977
00:25:43,626 --> 0:25:45,376
has different color appearance

978
00:25:45,376 --> 0:25:46,696
to see if the relevant traits

979
00:25:46,696 --> 0:25:47,206
have changed.

980
00:25:48,136 --> 0:25:49,246
If it didn't, then you should

981
00:25:49,246 --> 0:25:50,446
resolve those dynamic colors

982
00:25:50,446 --> 0:25:50,666
again.

983
00:25:52,336 --> 0:25:53,856
Finally, let's talk about

984
00:25:53,856 --> 0:25:54,326
images.

985
00:25:54,916 --> 0:25:56,596
As you saw, you can create

986
00:25:56,596 --> 0:25:58,246
dynamic images in the asset

987
00:25:58,326 --> 0:25:58,736
catalog.

988
00:25:59,406 --> 0:26:00,466
And when you show one of these

989
00:25:59,406 --> 0:26:00,466
And when you show one of these

990
00:26:00,466 --> 0:26:02,586
images with UIImage view, it

991
00:26:02,586 --> 0:26:04,786
uses its Trait Collection to

992
00:26:04,786 --> 0:26:06,046
determine which image to

993
00:26:06,046 --> 0:26:06,516
display.

994
00:26:07,896 --> 0:26:09,536
Now, UIImage view is doing the

995
00:26:09,536 --> 0:26:10,016
work here.

996
00:26:10,646 --> 0:26:13,116
Unlike UIColor, UIImage doesn't

997
00:26:13,116 --> 0:26:14,426
pay attention to the current

998
00:26:14,426 --> 0:26:14,986
Trait Collection.

999
00:26:15,996 --> 0:26:17,156
So, we recommend most of the

1000
00:26:17,156 --> 0:26:18,666
time use UIImage view.

1001
00:26:19,466 --> 0:26:20,786
But if you need to resolve the

1002
00:26:20,786 --> 0:26:22,096
color yourself, you can.

1003
00:26:23,296 --> 0:26:25,276
Given an image, just ask for its

1004
00:26:25,406 --> 0:26:26,166
image asset.

1005
00:26:26,516 --> 0:26:27,746
That's that collection of all

1006
00:26:27,746 --> 0:26:29,196
the different image variations.

1007
00:26:31,066 --> 0:26:33,176
Next, ask for a specific image

1008
00:26:33,306 --> 0:26:34,976
that matches a specific Trait

1009
00:26:34,976 --> 0:26:35,376
Collection.

1010
00:26:36,946 --> 0:26:38,426
You can also use the image asset

1011
00:26:38,556 --> 0:26:40,556
to register new variations of an

1012
00:26:40,556 --> 0:26:41,306
image at runtime.

1013
00:26:41,906 --> 0:26:43,296
So, if you draw your own image,

1014
00:26:43,386 --> 0:26:45,106
you can add variations for light

1015
00:26:45,136 --> 0:26:45,626
and dark.

1016
00:26:46,516 --> 0:26:47,586
Just put that in in an image

1017
00:26:47,586 --> 0:26:47,886
view.

1018
00:26:48,206 --> 0:26:49,366
It will automatically show the

1019
00:26:49,366 --> 0:26:49,716
right one.

1020
00:26:50,916 --> 0:26:51,986
So, let's talk about some things

1021
00:26:51,986 --> 0:26:53,306
to keep in mind when adopting

1022
00:26:53,306 --> 0:26:53,756
Dark Mode.

1023
00:26:54,216 --> 0:26:55,500
Over to Tyler.

1024
00:26:57,516 --> 0:27:02,926
[ Applause ]

1025
00:26:57,516 --> 0:27:02,926
[ Applause ]

1026
00:27:03,426 --> 0:27:03,956
&gt;&gt; Thanks, Kurt.

1027
00:27:04,726 --> 0:27:06,286
So, let's take a few minutes to

1028
00:27:06,286 --> 0:27:07,536
review some more things about

1029
00:27:07,536 --> 0:27:08,786
how Trait Collections work.

1030
00:27:08,896 --> 0:27:10,256
Because as you've seen, these

1031
00:27:10,306 --> 0:27:12,176
play a really key role in Dark

1032
00:27:12,176 --> 0:27:12,386
Mode.

1033
00:27:13,046 --> 0:27:14,566
The most important thing to

1034
00:27:14,566 --> 0:27:15,806
remember about Trait Collections

1035
00:27:15,856 --> 0:27:17,766
is that there is not just one in

1036
00:27:17,766 --> 0:27:19,306
your entire app.

1037
00:27:19,706 --> 0:27:20,826
Trait Collections actually

1038
00:27:20,866 --> 0:27:22,936
cascade through the hierarchy of

1039
00:27:22,936 --> 0:27:24,836
your app, starting at the root

1040
00:27:24,836 --> 0:27:27,436
level with the screen, then down

1041
00:27:27,436 --> 0:27:28,636
to the window scene, which is

1042
00:27:28,636 --> 0:27:30,426
new this year in iOS 13.

1043
00:27:30,706 --> 0:27:32,016
From there, down to the window.

1044
00:27:32,696 --> 0:27:34,496
At that point, traits start to

1045
00:27:34,496 --> 0:27:36,096
flow into any presentations in

1046
00:27:36,096 --> 0:27:37,426
your app and then the view

1047
00:27:37,426 --> 0:27:38,636
controllers inside those

1048
00:27:38,636 --> 0:27:39,256
presentations.

1049
00:27:40,966 --> 0:27:42,406
And finally, traits cascade

1050
00:27:42,406 --> 0:27:43,606
through the view hierarchy

1051
00:27:43,696 --> 0:27:44,886
inside each of your view

1052
00:27:44,886 --> 0:27:45,596
controllers.

1053
00:27:46,696 --> 0:27:47,926
Because of this hierarchy, you

1054
00:27:47,926 --> 0:27:49,206
always want to use the trait

1055
00:27:49,206 --> 0:27:51,266
collection of the most specific

1056
00:27:51,266 --> 0:27:52,906
view or view controller you can.

1057
00:27:54,346 --> 0:27:55,376
And when the value of a trait

1058
00:27:55,376 --> 0:27:57,176
changes, you're going to receive

1059
00:27:57,176 --> 0:27:58,756
trait collection did change on

1060
00:27:58,836 --> 0:28:00,446
all of these objects inside of

1061
00:27:58,836 --> 0:28:00,446
all of these objects inside of

1062
00:28:00,446 --> 0:28:01,676
your app when they get that

1063
00:28:01,676 --> 0:28:02,206
change.

1064
00:28:02,876 --> 0:28:04,046
So, if the system Dark Mode

1065
00:28:04,046 --> 0:28:05,406
setting changes, for example,

1066
00:28:05,806 --> 0:28:06,926
you'll see that trait change

1067
00:28:06,926 --> 0:28:08,596
just cascade right through.

1068
00:28:09,036 --> 0:28:10,636
But I want to talk a little bit

1069
00:28:10,636 --> 0:28:12,206
more about Trait Changes,

1070
00:28:12,436 --> 0:28:13,706
because we have some new

1071
00:28:13,706 --> 0:28:15,596
behavior this year in iOS 13.

1072
00:28:16,236 --> 0:28:17,586
Let's zoom into the bottom half

1073
00:28:17,586 --> 0:28:18,816
of this diagram and walk through

1074
00:28:18,816 --> 0:28:20,566
an example about what's changed.

1075
00:28:22,236 --> 0:28:23,936
So, here's a view that we want

1076
00:28:23,936 --> 0:28:25,516
to add into the view hierarchy.

1077
00:28:25,576 --> 0:28:26,806
It's going to become the view

1078
00:28:26,806 --> 0:28:28,116
inside of this view controller

1079
00:28:28,116 --> 0:28:28,636
right above it.

1080
00:28:30,116 --> 0:28:32,016
The first thing that we'll do is

1081
00:28:32,016 --> 0:28:32,826
create that view.

1082
00:28:33,626 --> 0:28:34,716
Now, when a view is being

1083
00:28:34,716 --> 0:28:36,626
initialized, it hasn't yet been

1084
00:28:36,756 --> 0:28:38,276
added inside of this trait

1085
00:28:38,276 --> 0:28:38,736
hierarchy.

1086
00:28:39,306 --> 0:28:41,256
So, when the view's created, in

1087
00:28:41,396 --> 0:28:43,736
iOS 13, UIKit is going to make a

1088
00:28:43,736 --> 0:28:45,366
prediction about where it

1089
00:28:45,366 --> 0:28:46,846
expects that view will end up,

1090
00:28:47,926 --> 0:28:49,636
and populate that view's Trait

1091
00:28:49,636 --> 0:28:51,376
Collection right from the start

1092
00:28:51,696 --> 0:28:52,936
based on the predicted

1093
00:28:52,936 --> 0:28:53,626
destination.

1094
00:28:54,496 --> 0:28:56,666
So, now let's add this view

1095
00:28:56,956 --> 0:28:57,936
and-- yeah, it's pretty cool

1096
00:28:57,936 --> 0:28:59,016
[laughter].

1097
00:28:59,311 --> 0:29:01,311
[ Applause ]

1098
00:28:59,311 --> 0:29:01,311
[ Applause ]

1099
00:29:01,606 --> 0:29:02,826
So, let's add this view into the

1100
00:29:02,826 --> 0:29:03,666
hierarchy now.

1101
00:29:04,446 --> 0:29:06,426
So, we'll do that by calling out

1102
00:29:06,516 --> 0:29:07,106
subview.

1103
00:29:07,896 --> 0:29:08,846
It moves over.

1104
00:29:09,526 --> 0:29:10,626
And once the view's actually

1105
00:29:10,696 --> 0:29:12,586
added, it's going to inherit its

1106
00:29:12,586 --> 0:29:14,316
actually traits from its parent

1107
00:29:14,316 --> 0:29:15,666
trait environment, in this case

1108
00:29:15,666 --> 0:29:17,526
the view controller above it.

1109
00:29:17,846 --> 0:29:19,256
But in this case, since the

1110
00:29:19,256 --> 0:29:20,656
Trait Collection was correctly

1111
00:29:20,656 --> 0:29:23,046
predicted up front, there wasn't

1112
00:29:23,046 --> 0:29:24,426
a trait change that happened

1113
00:29:24,656 --> 0:29:26,136
when that view moved into the

1114
00:29:26,136 --> 0:29:26,976
view controller and view

1115
00:29:26,976 --> 0:29:27,396
hierarchy.

1116
00:29:27,916 --> 0:29:29,626
So, what you've seen is some new

1117
00:29:29,626 --> 0:29:30,956
behavior in iOS 13.

1118
00:29:31,666 --> 0:29:33,396
To recap, traits are now

1119
00:29:33,396 --> 0:29:35,586
predicted during initialization.

1120
00:29:36,956 --> 0:29:38,386
View controllers and views will

1121
00:29:38,386 --> 0:29:40,056
all receive a pretty complete

1122
00:29:40,056 --> 0:29:41,246
Trait Collection right up front,

1123
00:29:41,246 --> 0:29:42,086
which is really useful.

1124
00:29:42,086 --> 0:29:43,426
And then Trait Collection did

1125
00:29:43,426 --> 0:29:44,766
change will only be called

1126
00:29:44,766 --> 0:29:46,226
afterwards if any of those

1127
00:29:46,226 --> 0:29:47,506
initial traits change.

1128
00:29:48,126 --> 0:29:49,706
So, when you're updating your

1129
00:29:49,706 --> 0:29:52,586
existing apps for iOS 13, keep

1130
00:29:52,586 --> 0:29:53,876
an eye out for existing code

1131
00:29:53,876 --> 0:29:55,306
that you might have inside of

1132
00:29:55,346 --> 0:29:56,456
methods like Trait Collection

1133
00:29:56,456 --> 0:29:58,216
did change that expected the

1134
00:29:58,216 --> 0:29:59,916
older behavior where there was

1135
00:29:59,916 --> 0:30:01,196
often a trait change that

1136
00:29:59,916 --> 0:30:01,196
often a trait change that

1137
00:30:01,196 --> 0:30:02,716
occurred when you moved into the

1138
00:30:02,716 --> 0:30:03,146
hierarchy.

1139
00:30:03,876 --> 0:30:05,066
Now, to make it a little bit

1140
00:30:05,066 --> 0:30:06,596
easier to see when some of these

1141
00:30:06,596 --> 0:30:07,896
trait changes are occurring in

1142
00:30:07,986 --> 0:30:10,486
iOS 13, we have some helpful new

1143
00:30:10,486 --> 0:30:11,586
debug logging this year.

1144
00:30:11,746 --> 0:30:13,316
You can enable using this launch

1145
00:30:13,316 --> 0:30:14,786
argument and it'll tell you

1146
00:30:14,786 --> 0:30:16,116
exactly when Trait Collection

1147
00:30:16,116 --> 0:30:17,886
did change is called and the

1148
00:30:17,886 --> 0:30:19,226
details of each of those

1149
00:30:19,226 --> 0:30:19,726
changes.

1150
00:30:19,786 --> 0:30:20,866
It's really cool and you should

1151
00:30:20,866 --> 0:30:21,486
give it a try.

1152
00:30:22,946 --> 0:30:23,876
Now, as you're updating your

1153
00:30:23,876 --> 0:30:25,916
existing code or adding new code

1154
00:30:25,916 --> 0:30:28,086
that uses traits, the best

1155
00:30:28,086 --> 0:30:29,976
practice is to wait until layout

1156
00:30:30,336 --> 0:30:31,446
to actually read the Trait

1157
00:30:31,446 --> 0:30:32,916
Collection from the view or view

1158
00:30:32,916 --> 0:30:34,386
controller and perform work

1159
00:30:34,386 --> 0:30:35,386
based on it.

1160
00:30:35,996 --> 0:30:37,916
Traits are always updated before

1161
00:30:37,916 --> 0:30:38,756
layout occurs.

1162
00:30:39,286 --> 0:30:40,396
And so if you get the Trait

1163
00:30:40,396 --> 0:30:41,526
Collection from inside of one of

1164
00:30:41,526 --> 0:30:42,926
these methods, you can rest

1165
00:30:42,926 --> 0:30:44,476
assured that it's not going to

1166
00:30:44,476 --> 0:30:45,566
be a prediction anymore.

1167
00:30:45,656 --> 0:30:47,396
It'll reflect the actual values

1168
00:30:47,396 --> 0:30:48,826
that it was inheriting from its

1169
00:30:48,826 --> 0:30:49,096
parent.

1170
00:30:50,656 --> 0:30:51,696
Just remember that if you put

1171
00:30:51,696 --> 0:30:52,796
code in any of these layout

1172
00:30:52,796 --> 0:30:54,466
methods, they can be called

1173
00:30:54,466 --> 0:30:56,196
often when the view is visible.

1174
00:30:56,826 --> 0:30:58,116
Anytime something calls, a set

1175
00:30:58,116 --> 0:30:58,646
needs layout.

1176
00:30:59,066 --> 0:31:01,046
So, be sure that you handle this

1177
00:30:59,066 --> 0:31:01,046
So, be sure that you handle this

1178
00:31:01,106 --> 0:31:02,476
by not repeating work

1179
00:31:02,476 --> 0:31:03,156
unnecessarily.

1180
00:31:04,276 --> 0:31:05,696
So, that's what you should keep

1181
00:31:05,696 --> 0:31:07,296
in mind when using Trait

1182
00:31:07,296 --> 0:31:08,136
Collections.

1183
00:31:08,426 --> 0:31:09,926
But it turns out that we can

1184
00:31:09,926 --> 0:31:11,566
also modify these trait

1185
00:31:11,566 --> 0:31:12,976
collections inside of our app as

1186
00:31:12,976 --> 0:31:13,116
well.

1187
00:31:14,526 --> 0:31:15,676
Here's an example of why you

1188
00:31:15,676 --> 0:31:17,516
might want to do this.

1189
00:31:17,706 --> 0:31:19,026
Let's say that we want the learn

1190
00:31:19,026 --> 0:31:20,636
more screen that we showed you

1191
00:31:20,636 --> 0:31:22,486
in our app to always be dark,

1192
00:31:23,016 --> 0:31:24,346
even when the rest of our app is

1193
00:31:24,346 --> 0:31:25,296
in light appearance.

1194
00:31:26,196 --> 0:31:27,346
We can do this by taking

1195
00:31:27,346 --> 0:31:28,616
advantage of the trait

1196
00:31:28,616 --> 0:31:29,156
hierarchy.

1197
00:31:30,376 --> 0:31:31,886
So if this diagram represents

1198
00:31:31,886 --> 0:31:33,666
our app, normally with the

1199
00:31:33,666 --> 0:31:35,476
system in light mode, everything

1200
00:31:35,476 --> 0:31:36,436
will have the light user

1201
00:31:36,436 --> 0:31:37,756
interface style, just like you

1202
00:31:37,816 --> 0:31:38,196
see here.

1203
00:31:39,536 --> 0:31:40,906
But if we just want let's say

1204
00:31:40,906 --> 0:31:42,796
that one view controller on the

1205
00:31:42,796 --> 0:31:44,106
bottom right and everything on

1206
00:31:44,106 --> 0:31:46,196
the side of it to be dark, we

1207
00:31:46,196 --> 0:31:47,696
can do that by overriding the

1208
00:31:47,696 --> 0:31:49,846
user interface style trait with

1209
00:31:49,846 --> 0:31:50,156
dark.

1210
00:31:50,876 --> 0:31:52,316
And now everything inside that

1211
00:31:52,316 --> 0:31:53,506
view controller will be dark,

1212
00:31:54,016 --> 0:31:55,296
even the rest of our app and

1213
00:31:55,296 --> 0:31:56,426
even the system is running in

1214
00:31:56,426 --> 0:31:56,756
light mode.

1215
00:31:57,486 --> 0:31:58,606
So, how do you actually do this

1216
00:31:58,606 --> 0:31:59,086
override?

1217
00:32:00,146 --> 0:32:01,926
We have some new API this year

1218
00:32:01,926 --> 0:32:03,736
in iOS 13 to make this really

1219
00:32:03,736 --> 0:32:04,146
easy.

1220
00:32:04,986 --> 0:32:06,256
There are new properties on view

1221
00:32:06,256 --> 0:32:07,716
controller and view so that you

1222
00:32:07,716 --> 0:32:09,246
can just set the user interface

1223
00:32:09,246 --> 0:32:10,786
style that you want and it'll

1224
00:32:10,866 --> 0:32:12,776
apply to everything inside that

1225
00:32:12,776 --> 0:32:13,586
and all of its children.

1226
00:32:14,436 --> 0:32:15,776
Now, you should use the view

1227
00:32:15,776 --> 0:32:17,076
controller property whenever

1228
00:32:17,076 --> 0:32:17,796
possible.

1229
00:32:17,796 --> 0:32:19,816
The view one should only be used

1230
00:32:19,816 --> 0:32:20,816
if you don't have a view

1231
00:32:20,816 --> 0:32:22,376
controller around for that

1232
00:32:22,376 --> 0:32:23,356
particular thing you're trying

1233
00:32:23,356 --> 0:32:24,036
to change.

1234
00:32:24,566 --> 0:32:25,646
And there are some caveats if

1235
00:32:25,646 --> 0:32:27,116
you use that view property, so

1236
00:32:27,116 --> 0:32:27,866
be sure to read the

1237
00:32:27,866 --> 0:32:29,066
documentation if you do.

1238
00:32:29,956 --> 0:32:31,916
Finally, if your entire app

1239
00:32:32,096 --> 0:32:33,456
should always just be light or

1240
00:32:33,506 --> 0:32:35,386
dark, we have an info p list key

1241
00:32:35,386 --> 0:32:37,276
you can set to make this really

1242
00:32:37,846 --> 0:32:37,966
easy.

1243
00:32:39,376 --> 0:32:40,446
There's also some existing API

1244
00:32:40,446 --> 0:32:41,916
that you can use to override

1245
00:32:41,916 --> 0:32:42,446
traits.

1246
00:32:42,796 --> 0:32:44,586
This will let you override any

1247
00:32:44,586 --> 0:32:45,826
trait on a view controller or

1248
00:32:45,826 --> 0:32:46,806
presentation controller.

1249
00:32:46,806 --> 0:32:48,346
And the key thing to remember

1250
00:32:48,346 --> 0:32:49,886
when you use this is that the

1251
00:32:49,886 --> 0:32:51,066
override trait collection that

1252
00:32:51,066 --> 0:32:52,986
you set should only contain

1253
00:32:52,986 --> 0:32:54,856
values for the specific traits

1254
00:32:54,856 --> 0:32:56,066
you care about overriding.

1255
00:32:56,866 --> 0:32:58,346
Leave all of the other traits

1256
00:32:58,386 --> 0:33:00,186
unspecified - just don't touch

1257
00:32:58,386 --> 0:33:00,186
unspecified - just don't touch

1258
00:33:00,186 --> 0:33:01,596
them - so that UIKit will

1259
00:33:01,596 --> 0:33:03,566
automatically fill in the normal

1260
00:33:03,566 --> 0:33:04,896
inherited values for those

1261
00:33:04,896 --> 0:33:05,376
traits.

1262
00:33:06,556 --> 0:33:07,706
That's pretty much all you need

1263
00:33:07,706 --> 0:33:09,056
to know to successfully use

1264
00:33:09,056 --> 0:33:10,726
Trait Collections in iOS 13.

1265
00:33:12,186 --> 0:33:13,586
Let's talk about some of the

1266
00:33:13,586 --> 0:33:15,016
other API updates that we have

1267
00:33:15,066 --> 0:33:16,616
this year and some other things

1268
00:33:16,616 --> 0:33:17,606
to keep in mind as you're

1269
00:33:17,606 --> 0:33:19,046
updating your apps to support

1270
00:33:19,046 --> 0:33:19,456
Dark Mode.

1271
00:33:20,306 --> 0:33:21,236
And how about we'll start with

1272
00:33:21,236 --> 0:33:21,946
the status bar.

1273
00:33:23,536 --> 0:33:25,666
Prior to iOS 13, we had two

1274
00:33:25,666 --> 0:33:27,056
existing status bar styles.

1275
00:33:27,636 --> 0:33:29,566
We had the default style and

1276
00:33:29,566 --> 0:33:30,196
light content.

1277
00:33:32,046 --> 0:33:34,176
New in iOS 13, we have a new

1278
00:33:34,176 --> 0:33:36,296
dark content style, which is

1279
00:33:36,386 --> 0:33:38,336
sort of taking over the place of

1280
00:33:38,336 --> 0:33:39,856
what used to be default, and

1281
00:33:39,856 --> 0:33:41,276
we've repurposed default to

1282
00:33:41,276 --> 0:33:43,316
become an automatic style

1283
00:33:43,316 --> 0:33:43,916
switching mode.

1284
00:33:45,326 --> 0:33:46,466
Now, the automatic switching is

1285
00:33:46,556 --> 0:33:47,906
based on the user interface

1286
00:33:47,906 --> 0:33:49,226
style of the view controller

1287
00:33:49,226 --> 0:33:50,596
that controls the status bar

1288
00:33:50,596 --> 0:33:51,156
appearance.

1289
00:33:51,556 --> 0:33:53,326
And as always, you can override

1290
00:33:53,446 --> 0:33:55,526
a specific preferred status bar

1291
00:33:55,526 --> 0:33:56,856
style on a view controller and

1292
00:33:56,856 --> 0:33:58,336
recurrent a particular style if

1293
00:33:58,336 --> 0:33:58,806
you desire.

1294
00:33:59,916 --> 0:34:02,076
Finally, it's not shown here but

1295
00:33:59,916 --> 0:34:02,076
Finally, it's not shown here but

1296
00:34:02,076 --> 0:34:03,436
just a quick note that we also

1297
00:34:03,436 --> 0:34:04,916
updated UIScroll view's

1298
00:34:05,006 --> 0:34:06,866
indicator style to behave in a

1299
00:34:06,866 --> 0:34:08,275
really similar way to this.

1300
00:34:09,826 --> 0:34:11,886
Next, let's talk about activity

1301
00:34:11,886 --> 0:34:12,536
indicators.

1302
00:34:13,235 --> 0:34:15,636
In iOS 13, these existing styles

1303
00:34:15,636 --> 0:34:16,436
are now deprecating.

1304
00:34:16,726 --> 0:34:17,926
And that's because they were

1305
00:34:17,926 --> 0:34:19,656
implying a very specific color

1306
00:34:19,656 --> 0:34:20,666
appearance, which doesn't really

1307
00:34:20,666 --> 0:34:21,436
make sense anymore.

1308
00:34:22,456 --> 0:34:23,366
But in their place, we've

1309
00:34:23,366 --> 0:34:24,706
introduced a handful of new

1310
00:34:24,706 --> 0:34:26,416
styles, which are just based on

1311
00:34:26,416 --> 0:34:27,536
the size of the activity

1312
00:34:27,536 --> 0:34:27,936
indicator.

1313
00:34:29,116 --> 0:34:30,906
They also use a nice dynamic

1314
00:34:31,056 --> 0:34:32,735
grey color by default, so they

1315
00:34:32,735 --> 0:34:34,146
look great in light and dark

1316
00:34:34,146 --> 0:34:35,306
mode without any changes.

1317
00:34:35,966 --> 0:34:37,536
But you can use the existing

1318
00:34:37,656 --> 0:34:39,696
color property to set a custom,

1319
00:34:39,696 --> 0:34:41,656
dynamic color, or even just a

1320
00:34:41,656 --> 0:34:43,266
static color like white, if you

1321
00:34:43,266 --> 0:34:44,606
want a particular fixed

1322
00:34:44,606 --> 0:34:44,976
appearance.

1323
00:34:47,505 --> 0:34:49,376
Next, here are a few things to

1324
00:34:49,376 --> 0:34:51,096
keep in mind when you're dealing

1325
00:34:51,096 --> 0:34:52,315
with text in your app.

1326
00:34:53,416 --> 0:34:54,946
Now, by default, text classes

1327
00:34:54,946 --> 0:34:57,126
like UILabel, UIText field, and

1328
00:34:57,126 --> 0:34:59,766
UIText view use the label color.

1329
00:35:00,206 --> 0:35:01,476
So, if you're just setting the

1330
00:35:01,476 --> 0:35:03,596
text on a new text field or text

1331
00:35:03,636 --> 0:35:05,596
view, or a label, you'll just

1332
00:35:05,596 --> 0:35:07,056
get a nice, correct appearance

1333
00:35:07,146 --> 0:35:08,366
in both light and dark by

1334
00:35:08,366 --> 0:35:08,796
default.

1335
00:35:09,616 --> 0:35:11,266
But if you use attributed

1336
00:35:11,266 --> 0:35:12,976
strings in your app, and you set

1337
00:35:12,976 --> 0:35:14,346
the attributed text of one of

1338
00:35:14,346 --> 0:35:16,516
these text classes, or if you

1339
00:35:16,516 --> 0:35:17,976
draw that attributed string

1340
00:35:17,976 --> 0:35:20,026
yourself manually, you should

1341
00:35:20,026 --> 0:35:21,206
keep in mind that you need to

1342
00:35:21,206 --> 0:35:22,646
specify a foreground color.

1343
00:35:23,726 --> 0:35:25,206
Drawing an attributed string

1344
00:35:25,316 --> 0:35:26,686
without any foreground color

1345
00:35:26,686 --> 0:35:28,536
attribute like this, is actually

1346
00:35:28,536 --> 0:35:30,316
defined to yield black text.

1347
00:35:31,456 --> 0:35:33,296
So, if you see black text in

1348
00:35:33,296 --> 0:35:34,856
your app in Dark Mode, and

1349
00:35:34,856 --> 0:35:36,016
you're using attributed strings,

1350
00:35:36,126 --> 0:35:37,516
just make sure you're specifying

1351
00:35:37,576 --> 0:35:39,536
a dynamic color like label, just

1352
00:35:39,536 --> 0:35:40,866
as you see here for that

1353
00:35:40,946 --> 0:35:42,166
foreground color attribute.

1354
00:35:42,506 --> 0:35:44,706
It's really quite easy.

1355
00:35:45,506 --> 0:35:47,476
Now, for those of you who have

1356
00:35:47,666 --> 0:35:49,486
embedded web content in your

1357
00:35:49,486 --> 0:35:51,466
app, you should know that Dark

1358
00:35:51,466 --> 0:35:52,596
Mode is opt in.

1359
00:35:53,576 --> 0:35:54,656
You can do this by using the

1360
00:35:54,656 --> 0:35:56,826
color scheme style property, or

1361
00:35:56,826 --> 0:35:58,076
a meta tag with the same name.

1362
00:35:59,006 --> 0:36:00,666
And then you can use the prefers

1363
00:35:59,006 --> 0:36:00,666
And then you can use the prefers

1364
00:36:00,666 --> 0:36:02,496
color scheme media query to

1365
00:36:02,496 --> 0:36:03,796
actually customize different

1366
00:36:03,796 --> 0:36:05,276
colors and images in both light

1367
00:36:05,276 --> 0:36:05,816
and dark mode.

1368
00:36:07,096 --> 0:36:08,136
You can learn more about all

1369
00:36:08,136 --> 0:36:09,516
these details in the Supporting

1370
00:36:09,516 --> 0:36:11,366
Dark Mode in Web Content video

1371
00:36:11,666 --> 0:36:12,946
from WWDC this year.

1372
00:36:14,626 --> 0:36:16,706
Now for those of you with tvOS

1373
00:36:16,706 --> 0:36:19,466
apps, there's a good chance that

1374
00:36:19,466 --> 0:36:20,766
you already support Dark Mode

1375
00:36:21,426 --> 0:36:22,516
since we've had that available

1376
00:36:22,516 --> 0:36:23,326
for a few years now.

1377
00:36:24,476 --> 0:36:26,346
Now, this year, your tvOS 13

1378
00:36:26,346 --> 0:36:27,806
apps will be expected to support

1379
00:36:27,806 --> 0:36:29,936
Dark Mode by default, just like

1380
00:36:29,936 --> 0:36:30,546
on iOS.

1381
00:36:31,796 --> 0:36:33,006
Most of the new API that we've

1382
00:36:33,066 --> 0:36:34,466
covered today, such as all the

1383
00:36:34,466 --> 0:36:36,746
dynamic colors and image assets,

1384
00:36:37,056 --> 0:36:37,836
it's all available.

1385
00:36:38,546 --> 0:36:39,986
But a few things like the new

1386
00:36:39,986 --> 0:36:41,726
system materials, are available

1387
00:36:41,756 --> 0:36:42,496
on iOS only.

1388
00:36:43,816 --> 0:36:45,076
Now, if you do already support

1389
00:36:45,076 --> 0:36:47,786
Dark Mode on your tvOS app, you

1390
00:36:47,786 --> 0:36:49,356
can feel free to adopt all of

1391
00:36:49,356 --> 0:36:51,086
these new features and new APIs

1392
00:36:51,086 --> 0:36:51,966
anywhere that you'd like.

1393
00:36:53,076 --> 0:36:54,246
But if your existing Dark Mode

1394
00:36:54,246 --> 0:36:55,426
implementation already is

1395
00:36:55,426 --> 0:36:56,746
working well, you don't need to

1396
00:36:56,746 --> 0:36:57,576
throw any of that away.

1397
00:37:00,256 --> 0:37:01,606
Now, if you'll be bringing your

1398
00:37:01,606 --> 0:37:03,206
iPad app to the Mac this year,

1399
00:37:03,836 --> 0:37:05,196
you can support Dark Mode on the

1400
00:37:05,196 --> 0:37:07,446
Mac in the exact same way, using

1401
00:37:07,526 --> 0:37:09,066
all the same API that we just

1402
00:37:09,066 --> 0:37:10,556
talked about for iOS.

1403
00:37:11,456 --> 0:37:13,456
Now, your Mac app will follow

1404
00:37:13,456 --> 0:37:14,696
the Dark Mode setting that the

1405
00:37:14,696 --> 0:37:16,106
user selects in system

1406
00:37:16,106 --> 0:37:16,636
preferences.

1407
00:37:17,156 --> 0:37:18,766
Very simple, just like on iOS.

1408
00:37:19,346 --> 0:37:20,916
But the only difference that you

1409
00:37:20,916 --> 0:37:22,456
actually will notice is that in

1410
00:37:22,456 --> 0:37:25,186
some cases, on the Mac, UIKit

1411
00:37:25,186 --> 0:37:26,686
will automatically provide

1412
00:37:26,846 --> 0:37:28,436
slightly different versions of

1413
00:37:28,436 --> 0:37:30,006
dynamic colors for those system

1414
00:37:30,006 --> 0:37:31,486
colors, and also some of the

1415
00:37:31,486 --> 0:37:33,356
materials, to better match the

1416
00:37:33,356 --> 0:37:34,696
ones that would normally be

1417
00:37:34,696 --> 0:37:36,096
provided by a framework like

1418
00:37:36,096 --> 0:37:36,846
AppKit on the Mac.

1419
00:37:37,476 --> 0:37:38,826
So, your app will look great

1420
00:37:38,926 --> 0:37:40,566
right alongside other AppKit

1421
00:37:40,566 --> 0:37:41,926
apps on the Mac as well.

1422
00:37:44,856 --> 0:37:46,516
Believe it or not, that's about

1423
00:37:46,516 --> 0:37:47,866
all you need to know so that you

1424
00:37:47,866 --> 0:37:49,666
can start updating all of your

1425
00:37:49,666 --> 0:37:51,576
apps for Dark Mode in iOS 13

1426
00:37:51,576 --> 0:37:51,936
today.

1427
00:37:53,696 --> 0:37:55,166
Once you build against the iOS

1428
00:37:55,166 --> 0:37:57,146
13 SCK, your app will

1429
00:37:57,146 --> 0:37:58,446
participate in Dark Mode by

1430
00:37:58,446 --> 0:37:58,846
default.

1431
00:37:59,726 --> 0:38:00,846
But you might have some work to

1432
00:37:59,726 --> 0:38:00,846
But you might have some work to

1433
00:38:00,846 --> 0:38:03,696
do, as you saw in our demos.

1434
00:38:03,836 --> 0:38:05,516
Now, we've made it really easy

1435
00:38:05,666 --> 0:38:06,826
to take advantage of all of

1436
00:38:06,826 --> 0:38:08,566
these new features and quickly

1437
00:38:08,566 --> 0:38:10,216
get your app going with Dark

1438
00:38:10,216 --> 0:38:10,446
Mode.

1439
00:38:11,176 --> 0:38:13,196
So be sure to start by using all

1440
00:38:13,196 --> 0:38:14,946
of the new dynamic system colors

1441
00:38:14,946 --> 0:38:16,036
and materials that we've made

1442
00:38:16,036 --> 0:38:16,926
available this year.

1443
00:38:17,376 --> 0:38:19,146
And then of course, create your

1444
00:38:19,146 --> 0:38:20,566
own custom appearances for

1445
00:38:20,566 --> 0:38:22,126
custom colors, custom images,

1446
00:38:22,126 --> 0:38:22,576
and more.

1447
00:38:23,366 --> 0:38:24,746
Finally, don't forget to take

1448
00:38:24,746 --> 0:38:27,396
advantage of all of the powerful

1449
00:38:27,396 --> 0:38:29,026
customizations and flexibility

1450
00:38:29,136 --> 0:38:31,126
built into UIKit to make your

1451
00:38:31,126 --> 0:38:32,836
apps really shine in Dark Mode.

1452
00:38:33,776 --> 0:38:34,946
We're really looking forward to

1453
00:38:34,946 --> 0:38:36,886
seeing how all of your apps look

1454
00:38:36,886 --> 0:38:38,906
in Dark Mode later this year.

1455
00:38:39,836 --> 0:38:41,216
For more information, we have

1456
00:38:41,216 --> 0:38:42,756
some more content available and

1457
00:38:42,756 --> 0:38:43,886
a little bit of sample code up

1458
00:38:43,886 --> 0:38:45,076
on our session page.

1459
00:38:45,596 --> 0:38:46,846
And with that, thank you very

1460
00:38:46,846 --> 0:38:46,976
much.

1461
00:38:47,516 --> 0:38:54,500
[ Applause ]
