1
00:00:01,516 --> 0:00:04,500
[ Music ]

2
00:00:06,516 --> 0:00:13,556
[ Applause ]

3
00:00:14,056 --> 0:00:14,916
&gt;&gt; Good afternoon and welcome to

4
00:00:14,916 --> 0:00:15,936
Subscription Offers Best

5
00:00:15,936 --> 0:00:16,456
Practices.

6
00:00:17,176 --> 0:00:18,046
My name is Ross LaBeau.

7
00:00:18,046 --> 0:00:19,156
I'm an engineer on the App Store

8
00:00:19,156 --> 0:00:19,396
Team.

9
00:00:20,206 --> 0:00:21,086
And today we're going to take a

10
00:00:21,086 --> 0:00:22,646
deep dive into the App Store's

11
00:00:22,646 --> 0:00:23,946
latest in-app purchase feature.

12
00:00:26,496 --> 0:00:28,556
So Subscription Offers are an

13
00:00:28,556 --> 0:00:29,726
exciting new way for

14
00:00:29,726 --> 0:00:31,016
subscription developers to offer

15
00:00:31,016 --> 0:00:32,476
a discounted price to the

16
00:00:32,476 --> 0:00:33,606
customers for a specific

17
00:00:33,636 --> 0:00:34,386
duration of time.

18
00:00:35,836 --> 0:00:37,996
Now we know that churn is one of

19
00:00:38,266 --> 0:00:41,076
the major reducers of profit for

20
00:00:41,236 --> 0:00:42,016
subscription apps.

21
00:00:42,946 --> 0:00:44,516
And this is a powerful new tool

22
00:00:44,516 --> 0:00:46,646
to help mitigate churn by

23
00:00:47,046 --> 0:00:49,316
retaining customers or by

24
00:00:49,316 --> 0:00:50,276
winning back customers who have

25
00:00:50,276 --> 0:00:50,856
already churned.

26
00:00:51,526 --> 0:00:54,336
So the coolest part of

27
00:00:54,336 --> 0:00:55,486
Subscription Offers is actually

28
00:00:55,486 --> 0:00:56,826
that you choose when to offer

29
00:00:56,826 --> 0:00:58,216
customers an offer and you

30
00:00:58,216 --> 0:00:59,246
choose which ones to show them.

31
00:01:00,176 --> 0:01:02,086
So for example, if you've just

32
00:01:02,086 --> 0:01:03,576
received an auto-renewable

33
00:01:04,056 --> 0:01:05,656
subscription server-to-server

34
00:01:05,656 --> 0:01:07,066
notification saying the customer

35
00:01:07,066 --> 0:01:10,026
has disabled auto-renew, you may

36
00:01:10,026 --> 0:01:11,126
want to take that time, take

37
00:01:11,126 --> 0:01:13,166
action right then and send them

38
00:01:13,166 --> 0:01:15,226
an offer for say three months at

39
00:01:15,226 --> 0:01:16,896
half off to try and keep them

40
00:01:16,896 --> 0:01:17,706
engaged with your app and

41
00:01:17,706 --> 0:01:18,436
staying subscribed.

42
00:01:21,356 --> 0:01:22,726
Now unlike introductory offers,

43
00:01:23,006 --> 0:01:24,476
customers can redeem as many

44
00:01:24,476 --> 0:01:25,496
Subscription Offers as you

45
00:01:25,496 --> 0:01:27,276
allow, and they can even redeem

46
00:01:27,276 --> 0:01:28,226
the same one more than once.

47
00:01:28,716 --> 0:01:31,956
And the only qualification that

48
00:01:31,956 --> 0:01:33,226
the App Store puts is that the

49
00:01:33,226 --> 0:01:34,756
customer must be an existing or

50
00:01:34,756 --> 0:01:36,076
previous subscriber to an

51
00:01:36,106 --> 0:01:37,256
auto-renewable subscription in

52
00:01:37,256 --> 0:01:37,706
your app.

53
00:01:41,666 --> 0:01:43,426
So today we'll go over the setup

54
00:01:43,426 --> 0:01:44,606
of how you create these offers

55
00:01:44,606 --> 0:01:45,276
in App Store Connect.

56
00:01:47,416 --> 0:01:48,466
We'll discuss how to generate

57
00:01:48,466 --> 0:01:49,906
the cryptographic signature that

58
00:01:49,906 --> 0:01:50,996
you need to send up with each

59
00:01:50,996 --> 0:01:51,636
transaction.

60
00:01:53,056 --> 0:01:54,456
And we'll talk about the new

61
00:01:54,456 --> 0:01:56,136
StoreKit APIs and how to use

62
00:01:56,176 --> 0:01:58,236
them to send up a transaction to

63
00:01:58,236 --> 0:01:58,796
the App Store and make a

64
00:01:58,826 --> 0:01:59,500
purchase.

65
00:02:02,556 --> 0:02:04,016
We'll discuss the eligibility

66
00:02:04,016 --> 0:02:05,216
from both the App Store's point

67
00:02:05,216 --> 0:02:06,696
of view and also how to create

68
00:02:06,696 --> 0:02:08,586
your own custom business rules.

69
00:02:09,735 --> 0:02:12,066
We'll offer some tips and tricks

70
00:02:12,066 --> 0:02:13,386
for how to distribute and market

71
00:02:13,386 --> 0:02:14,656
these offers to your customers.

72
00:02:15,196 --> 0:02:18,346
And finally, we'll go over more

73
00:02:18,346 --> 0:02:19,836
business strategies for how to

74
00:02:19,836 --> 0:02:20,536
reduce churn.

75
00:02:25,056 --> 0:02:26,456
So first, just like introductory

76
00:02:26,456 --> 0:02:27,866
offers, you set up Subscription

77
00:02:27,866 --> 0:02:28,946
Offers in App Store Connect.

78
00:02:29,816 --> 0:02:32,416
Go to the In-App Purchases

79
00:02:32,416 --> 0:02:34,046
section under the Features tab,

80
00:02:34,466 --> 0:02:35,286
and just select any

81
00:02:35,286 --> 0:02:36,436
auto-renewable subscription.

82
00:02:37,986 --> 0:02:39,066
Then click the Plus button next

83
00:02:39,066 --> 0:02:40,776
to Subscription Prices and

84
00:02:40,776 --> 0:02:41,976
select Create Promotional Offer.

85
00:02:45,306 --> 0:02:46,356
There you'll put in a human

86
00:02:46,356 --> 0:02:48,236
readable name for the offer as

87
00:02:48,236 --> 0:02:49,476
well as a product code.

88
00:02:50,176 --> 0:02:51,546
This product code is also known

89
00:02:51,546 --> 0:02:52,476
as the identifier.

90
00:02:53,446 --> 0:02:54,146
And this is the unique

91
00:02:54,146 --> 0:02:55,586
identifier you'll use to refer

92
00:02:55,586 --> 0:02:56,846
to this offer from now on.

93
00:02:58,216 --> 0:02:59,696
After that, it's just like an

94
00:02:59,696 --> 0:03:00,406
introductory offer.

95
00:02:59,696 --> 0:03:00,406
introductory offer.

96
00:03:00,666 --> 0:03:02,116
You'll select the type, the

97
00:03:02,116 --> 0:03:03,166
duration and the pricing.

98
00:03:03,636 --> 0:03:04,926
Now in addition to setting up

99
00:03:05,546 --> 0:03:07,016
these offers, you'll also have

100
00:03:07,016 --> 0:03:08,696
to set up a private key so you

101
00:03:08,696 --> 0:03:09,756
can generate that signature we

102
00:03:09,756 --> 0:03:10,216
talked about.

103
00:03:10,216 --> 0:03:12,446
Now we'll go over more about the

104
00:03:12,446 --> 0:03:13,146
signature later.

105
00:03:13,146 --> 0:03:15,116
But to create your private key,

106
00:03:15,856 --> 0:03:16,816
just go into the Users and

107
00:03:16,816 --> 0:03:17,876
Access section of App Store

108
00:03:17,876 --> 0:03:18,156
Connect.

109
00:03:19,066 --> 0:03:20,286
Select Keys and make sure to

110
00:03:20,286 --> 0:03:21,496
select Subscriptions on the

111
00:03:21,496 --> 0:03:21,816
left.

112
00:03:22,246 --> 0:03:24,286
Click that plus button.

113
00:03:25,576 --> 0:03:26,816
Just enter a human readable name

114
00:03:26,816 --> 0:03:27,976
for your key and click generate.

115
00:03:32,476 --> 0:03:33,756
When you do that, you'll see the

116
00:03:33,756 --> 0:03:35,276
new key in the list of active

117
00:03:35,526 --> 0:03:36,176
keys up top.

118
00:03:37,276 --> 0:03:38,176
And you'll also see that App

119
00:03:38,176 --> 0:03:39,686
Store Connect has generated a

120
00:03:39,686 --> 0:03:40,956
key ID for it.

121
00:03:41,206 --> 0:03:42,156
This again is a unique

122
00:03:42,156 --> 0:03:43,276
identifier which you'll use to

123
00:03:43,276 --> 0:03:43,976
refer to that key in StoreKit.

124
00:03:47,046 --> 0:03:47,666
Now you can download your

125
00:03:47,666 --> 0:03:48,836
private key, by clicking

126
00:03:49,276 --> 0:03:50,246
Download Key of course.

127
00:03:50,756 --> 0:03:51,976
But it's important to note that

128
00:03:51,976 --> 0:03:53,146
you can only download this key

129
00:03:53,626 --> 0:03:54,446
one time.

130
00:03:55,356 --> 0:03:56,816
That's right, just once.

131
00:03:57,736 --> 0:03:58,986
Once you do download it, App

132
00:03:58,986 --> 0:03:59,966
Store Connect will delete it

133
00:03:59,966 --> 0:04:01,256
from Apple servers permanently.

134
00:03:59,966 --> 0:04:01,256
from Apple servers permanently.

135
00:04:01,256 --> 0:04:04,076
Now the reason for this is that

136
00:04:04,076 --> 0:04:06,436
these keys are really sensitive

137
00:04:06,436 --> 0:04:07,626
cryptographic information.

138
00:04:08,226 --> 0:04:09,486
This private key is kind of like

139
00:04:09,486 --> 0:04:10,196
your identity.

140
00:04:10,316 --> 0:04:11,896
It's what you use to prove that

141
00:04:11,896 --> 0:04:12,786
it's actually you who's

142
00:04:12,786 --> 0:04:14,466
authorizing this user to redeem

143
00:04:14,466 --> 0:04:14,976
this transaction.

144
00:04:20,236 --> 0:04:21,716
So these keys are valid across

145
00:04:21,716 --> 0:04:23,516
your entire developer account if

146
00:04:23,666 --> 0:04:25,176
you use a single key for all of

147
00:04:25,176 --> 0:04:27,216
your apps and for all of your

148
00:04:27,216 --> 0:04:28,436
offers that you set up on those

149
00:04:28,436 --> 0:04:28,776
apps.

150
00:04:29,926 --> 0:04:31,336
But if you want, you can use

151
00:04:31,336 --> 0:04:31,996
multiple keys.

152
00:04:32,546 --> 0:04:33,756
So say you're using a single

153
00:04:33,756 --> 0:04:35,296
developer account to serve

154
00:04:35,566 --> 0:04:36,436
several different apps or

155
00:04:36,436 --> 0:04:37,046
different parts of your

156
00:04:37,046 --> 0:04:39,506
business, you can create

157
00:04:39,506 --> 0:04:40,706
multiple keys to segment them

158
00:04:40,706 --> 0:04:42,566
off that way.

159
00:04:42,816 --> 0:04:44,516
So as I said, each transaction

160
00:04:44,656 --> 0:04:45,926
requires a cryptographic

161
00:04:45,926 --> 0:04:47,416
signature when you send it to

162
00:04:47,416 --> 0:04:48,686
the App Store to actually redeem

163
00:04:48,686 --> 0:04:48,936
an offer.

164
00:04:51,546 --> 0:04:52,716
Now we do this to ensure that

165
00:04:52,716 --> 0:04:55,346
only authorized users can redeem

166
00:04:55,346 --> 0:04:55,866
offers.

167
00:04:56,846 --> 0:04:58,766
Generate a signature using a

168
00:04:58,766 --> 0:05:00,766
payload which you'll also send

169
00:04:58,766 --> 0:05:00,766
payload which you'll also send

170
00:05:00,766 --> 0:05:01,386
up to the App Store.

171
00:05:02,396 --> 0:05:03,416
And this signature uses

172
00:05:03,416 --> 0:05:04,556
something called asymmetric

173
00:05:04,556 --> 0:05:05,116
cryptography.

174
00:05:05,736 --> 0:05:07,226
Asymmetric cryptography is a

175
00:05:07,226 --> 0:05:09,376
common technique where you use

176
00:05:09,426 --> 0:05:10,976
two keys to generate and

177
00:05:10,976 --> 0:05:12,996
validate a signature versus a

178
00:05:12,996 --> 0:05:14,386
private key which we just talked

179
00:05:14,386 --> 0:05:14,616
about.

180
00:05:15,276 --> 0:05:16,596
We use that as a proof of your

181
00:05:16,596 --> 0:05:18,366
identity to sign your payload.

182
00:05:18,366 --> 0:05:21,186
And the second key is called the

183
00:05:21,186 --> 0:05:21,646
public key.

184
00:05:22,666 --> 0:05:23,546
And just as it sounds, this

185
00:05:23,616 --> 0:05:25,276
public key is actually okay to

186
00:05:25,276 --> 0:05:26,016
show to other people.

187
00:05:26,186 --> 0:05:27,676
You can't generate any signature

188
00:05:27,676 --> 0:05:27,936
with it.

189
00:05:28,566 --> 0:05:29,406
All you can do with the public

190
00:05:29,406 --> 0:05:31,596
key is prove that that signature

191
00:05:31,676 --> 0:05:33,106
was generated with your private

192
00:05:33,106 --> 0:05:34,966
key and matches that payload you

193
00:05:34,966 --> 0:05:35,496
used to sign.

194
00:05:39,046 --> 0:05:40,346
So because generating signature

195
00:05:40,776 --> 0:05:42,056
requires using your private key,

196
00:05:42,526 --> 0:05:43,596
you should always do it on a

197
00:05:43,596 --> 0:05:45,256
secure server and never do it

198
00:05:45,256 --> 0:05:46,516
from the device itself because

199
00:05:46,516 --> 0:05:47,356
you don't want to be putting

200
00:05:47,736 --> 0:05:49,086
this piece of cryptographic

201
00:05:49,086 --> 0:05:50,116
information on someone else's

202
00:05:50,116 --> 0:05:50,516
hardware.

203
00:05:51,706 --> 0:05:53,106
So we're going to take a look at

204
00:05:53,106 --> 0:05:54,806
a server that we've built using

205
00:05:54,806 --> 0:05:55,966
NodeJS and Express.

206
00:05:56,156 --> 0:05:58,066
This is actually sample code

207
00:05:58,066 --> 0:05:58,976
that you'll be able to download

208
00:05:58,976 --> 0:05:59,406
online.

209
00:06:00,566 --> 0:06:01,746
And if you don't use JavaScript,

210
00:06:01,826 --> 0:06:02,286
don't worry.

211
00:06:03,056 --> 0:06:04,216
Everything we do here can be

212
00:06:04,216 --> 0:06:05,706
easily done in other languages,

213
00:06:06,046 --> 0:06:09,206
say Python, PHP, Java, Swift or

214
00:06:09,206 --> 0:06:10,546
whatever you use.

215
00:06:14,346 --> 0:06:15,976
So the first step is when your

216
00:06:15,976 --> 0:06:17,246
app is ready to display the

217
00:06:17,246 --> 0:06:18,746
offer to the customer, you'll

218
00:06:18,746 --> 0:06:19,806
want to send up this request to

219
00:06:19,806 --> 0:06:20,806
the server to generate a

220
00:06:20,806 --> 0:06:21,686
signature right then.

221
00:06:23,336 --> 0:06:25,276
In this case, the app already

222
00:06:25,276 --> 0:06:26,316
knows several pieces of that

223
00:06:26,366 --> 0:06:28,366
payload we want to sign, so

224
00:06:28,366 --> 0:06:29,216
we're just going to go ahead and

225
00:06:29,216 --> 0:06:30,516
grab them from the body of the

226
00:06:30,516 --> 0:06:31,066
request here.

227
00:06:32,486 --> 0:06:33,386
We'll get the application's

228
00:06:33,386 --> 0:06:36,006
bundle identifier, the product

229
00:06:36,006 --> 0:06:37,666
identifier of a subscription.

230
00:06:38,786 --> 0:06:39,876
And then the offer identifier

231
00:06:39,876 --> 0:06:41,146
for the offer that you want to

232
00:06:41,356 --> 0:06:43,546
show the customer.

233
00:06:43,626 --> 0:06:45,416
And finally we'll get the hashed

234
00:06:45,456 --> 0:06:46,516
application username.

235
00:06:47,426 --> 0:06:50,116
Now this is a one-way salted

236
00:06:50,116 --> 0:06:52,036
secure hash of some piece of

237
00:06:52,036 --> 0:06:53,256
identifying information about

238
00:06:53,256 --> 0:06:53,696
the user.

239
00:06:54,146 --> 0:06:55,316
Maybe their username in your app

240
00:06:55,316 --> 0:06:55,946
or their email.

241
00:06:57,056 --> 0:06:57,956
But it's really important that

242
00:06:57,956 --> 0:06:59,106
you always hash this and never

243
00:06:59,106 --> 0:07:01,196
send up plain text identifying

244
00:06:59,106 --> 0:07:01,196
send up plain text identifying

245
00:07:01,196 --> 0:07:02,236
information to the App Store.

246
00:07:02,736 --> 0:07:03,586
You want to keep that secure on

247
00:07:03,586 --> 0:07:03,976
your own database.

248
00:07:07,336 --> 0:07:08,336
So the next piece of the payload

249
00:07:08,336 --> 0:07:09,426
is something called a nonce.

250
00:07:10,586 --> 0:07:12,386
This is just a random piece of

251
00:07:12,386 --> 0:07:14,226
data to ensure that no two

252
00:07:14,466 --> 0:07:15,486
transactions are the same.

253
00:07:15,486 --> 0:07:19,156
We use this to prevent replay

254
00:07:19,156 --> 0:07:20,486
attacks and other ways of

255
00:07:20,486 --> 0:07:21,446
getting around it, so users

256
00:07:21,446 --> 0:07:23,486
can't resend the same request

257
00:07:23,486 --> 0:07:25,606
and get a free subscription over

258
00:07:25,606 --> 0:07:26,636
and over without your approval.

259
00:07:27,196 --> 0:07:30,006
The App Store uses a version 4

260
00:07:30,006 --> 0:07:31,476
UUID for this, so that's what

261
00:07:31,476 --> 0:07:31,966
we'll create here.

262
00:07:34,146 --> 0:07:35,216
And next we'll get a timestamp.

263
00:07:36,136 --> 0:07:37,306
This is a timestamp in the

264
00:07:37,306 --> 0:07:38,676
milliseconds since the Unix

265
00:07:38,676 --> 0:07:39,346
Epoch format.

266
00:07:40,506 --> 0:07:41,856
This is a really common format

267
00:07:41,906 --> 0:07:42,256
to use.

268
00:07:42,256 --> 0:07:43,396
You can see it's very easy to

269
00:07:43,396 --> 0:07:44,466
generate here in JavaScript.

270
00:07:45,876 --> 0:07:47,336
And this timestamp is also used

271
00:07:47,336 --> 0:07:49,196
to help prevent against attacks.

272
00:07:50,226 --> 0:07:52,346
It's important that each

273
00:07:52,816 --> 0:07:54,066
transaction you make will only

274
00:07:54,066 --> 0:07:55,916
be accepted within 24 hours

275
00:07:56,026 --> 0:07:57,036
after that timestamp.

276
00:07:57,496 --> 0:07:58,196
So you don't want to be

277
00:07:58,196 --> 0:07:59,476
generating these signatures, you

278
00:07:59,476 --> 0:07:59,956
know, a week ahead of time.

279
00:08:05,046 --> 0:08:06,426
The final part of the payload is

280
00:08:06,426 --> 0:08:07,086
the key ID.

281
00:08:07,346 --> 0:08:08,416
This is that key ID that App

282
00:08:08,416 --> 0:08:09,606
Store Connect generated earlier.

283
00:08:12,116 --> 0:08:13,276
So I have implanted a function

284
00:08:13,276 --> 0:08:13,896
here called GetKeyID.

285
00:08:15,136 --> 0:08:16,116
All we're going to do there is

286
00:08:16,116 --> 0:08:17,396
return our key ID which we've

287
00:08:17,396 --> 0:08:18,526
stored in an environment

288
00:08:18,526 --> 0:08:18,916
variable.

289
00:08:18,916 --> 0:08:22,796
We do that instead of committing

290
00:08:22,796 --> 0:08:24,436
it to our code and putting it in

291
00:08:24,436 --> 0:08:25,426
our repository, because it's

292
00:08:25,426 --> 0:08:26,226
more secure that way.

293
00:08:27,426 --> 0:08:28,346
Open to fewer eyes.

294
00:08:30,266 --> 0:08:31,196
And if you have just returned a

295
00:08:31,196 --> 0:08:33,436
single key ID -- but this is

296
00:08:33,436 --> 0:08:34,476
actually an ideal place to

297
00:08:34,476 --> 0:08:36,326
implement logic if you are using

298
00:08:36,326 --> 0:08:37,395
multiple keys.

299
00:08:38,905 --> 0:08:40,116
Or perhaps if you determined

300
00:08:40,116 --> 0:08:41,096
that one of your keys has been

301
00:08:41,096 --> 0:08:42,466
compromised, someone has gained

302
00:08:42,466 --> 0:08:44,536
unauthorized access to it, you

303
00:08:44,536 --> 0:08:45,966
can go disable it in App Store

304
00:08:45,966 --> 0:08:46,196
Connect.

305
00:08:46,796 --> 0:08:49,506
You can generate a new one and

306
00:08:49,546 --> 0:08:50,896
then start signing them using

307
00:08:50,896 --> 0:08:52,016
the new key here just by

308
00:08:52,016 --> 0:08:52,896
switching out logic here.

309
00:08:53,306 --> 0:08:55,646
And you don't even have to push

310
00:08:55,646 --> 0:08:56,756
an app update, so you can keep

311
00:08:56,756 --> 0:08:57,596
downtime to a minimum.

312
00:08:59,156 --> 0:09:00,536
So now that we've got all of the

313
00:08:59,156 --> 0:09:00,536
So now that we've got all of the

314
00:09:00,536 --> 0:09:01,846
pieces of our payload to sign,

315
00:09:02,796 --> 0:09:03,846
we want to combine them into one

316
00:09:03,846 --> 0:09:05,056
piece of data to actually

317
00:09:05,056 --> 0:09:05,966
generate the signature from.

318
00:09:06,546 --> 0:09:09,336
Now you can see here, the way we

319
00:09:09,336 --> 0:09:10,826
do that is by combining them

320
00:09:10,986 --> 0:09:12,716
into a string in this order.

321
00:09:13,776 --> 0:09:16,056
We'll concatenate them using the

322
00:09:16,056 --> 0:09:17,376
character with the code point

323
00:09:17,376 --> 0:09:19,226
U2063 in between each one.

324
00:09:20,176 --> 0:09:21,386
All right, I know, why didn't we

325
00:09:21,386 --> 0:09:22,196
just use space, right?

326
00:09:23,126 --> 0:09:25,406
Well, it's really important that

327
00:09:25,406 --> 0:09:26,896
when you're generating or

328
00:09:26,896 --> 0:09:27,846
verifying cryptographic

329
00:09:27,846 --> 0:09:29,286
signatures, you're very exact

330
00:09:29,286 --> 0:09:30,536
about which characters you use,

331
00:09:31,096 --> 0:09:31,986
and as some of you may know,

332
00:09:31,986 --> 0:09:33,236
just the word space can refer to

333
00:09:33,236 --> 0:09:34,176
multiple different kinds of

334
00:09:34,176 --> 0:09:35,056
white space characters.

335
00:09:35,796 --> 0:09:37,236
So we'll use this one here.

336
00:09:40,046 --> 0:09:41,796
So now that we've got our

337
00:09:41,796 --> 0:09:42,706
payload, next step is to get the

338
00:09:42,706 --> 0:09:43,316
key itself.

339
00:09:44,066 --> 0:09:47,366
So we have this GetKeyString for

340
00:09:47,406 --> 0:09:47,856
key ID.

341
00:09:49,386 --> 0:09:50,206
All we're going to do in there

342
00:09:50,206 --> 0:09:51,736
is check, make sure the key ID

343
00:09:51,736 --> 0:09:52,926
matches the one that we expect.

344
00:09:52,926 --> 0:09:55,166
And then we'll return the key

345
00:09:55,166 --> 0:09:56,056
from another environment

346
00:09:56,056 --> 0:09:56,416
variable.

347
00:09:56,416 --> 0:09:59,636
Now here what I'm doing is using

348
00:09:59,636 --> 0:10:00,676
the key in a string.

349
00:09:59,636 --> 0:10:00,676
the key in a string.

350
00:10:01,196 --> 0:10:03,036
It's formatted in the PM format.

351
00:10:04,046 --> 0:10:05,236
This is a really common format.

352
00:10:05,236 --> 0:10:06,166
This is the one that App Store

353
00:10:06,166 --> 0:10:07,736
Connect will send it to you in,

354
00:10:08,086 --> 0:10:09,396
and pretty much any third-party

355
00:10:09,396 --> 0:10:11,266
or first-party library will be

356
00:10:11,266 --> 0:10:11,976
able to handle it.

357
00:10:17,056 --> 0:10:18,306
So we've got our key, we've got

358
00:10:18,306 --> 0:10:18,516
our payload.

359
00:10:19,036 --> 0:10:19,936
We're ready to do the signing.

360
00:10:22,246 --> 0:10:23,826
What we do here is we create an

361
00:10:23,886 --> 0:10:25,416
elliptical curve digital signing

362
00:10:25,416 --> 0:10:27,176
algorithm object which sounds

363
00:10:27,176 --> 0:10:28,986
really fancy, but it's pretty

364
00:10:28,986 --> 0:10:29,386
easy to do.

365
00:10:29,386 --> 0:10:30,436
As you can see, just one line

366
00:10:30,436 --> 0:10:32,336
here using the ECKey library in

367
00:10:32,336 --> 0:10:33,786
JavaScript from NodeJS.

368
00:10:35,186 --> 0:10:36,826
And libraries in other languages

369
00:10:36,826 --> 0:10:37,756
also make it quite easy.

370
00:10:39,056 --> 0:10:40,256
We'll pass in our key string and

371
00:10:40,256 --> 0:10:41,136
we'll tell it that it's in the

372
00:10:41,136 --> 0:10:41,706
PEM format.

373
00:10:42,436 --> 0:10:44,776
And we'll go ahead and make this

374
00:10:44,906 --> 0:10:46,606
cryptoSign object part of

375
00:10:46,606 --> 0:10:47,836
NodeJS's crypto library.

376
00:10:48,676 --> 0:10:49,476
And we're going to tell it to

377
00:10:49,476 --> 0:10:50,786
use the SHA256 hashing

378
00:10:50,786 --> 0:10:51,196
algorithm.

379
00:10:52,236 --> 0:10:53,336
So that's always the one you

380
00:10:53,336 --> 0:10:53,776
should use.

381
00:10:53,776 --> 0:10:54,736
You should make sure to specify

382
00:10:54,736 --> 0:10:56,066
that, whatever library you're

383
00:10:56,066 --> 0:10:56,676
using as well.

384
00:10:59,226 --> 0:11:00,346
Next we'll add our payload to

385
00:10:59,226 --> 0:11:00,346
Next we'll add our payload to

386
00:11:00,346 --> 0:11:01,316
this sign object.

387
00:11:01,636 --> 0:11:02,636
It's just saying this is the

388
00:11:02,636 --> 0:11:03,596
thing we want to generate the

389
00:11:03,596 --> 0:11:04,336
signature from.

390
00:11:07,216 --> 0:11:08,586
And finally generate the

391
00:11:08,586 --> 0:11:09,326
signature itself.

392
00:11:09,906 --> 0:11:12,236
Now the crypto library here

393
00:11:12,236 --> 0:11:13,296
happens to generate the

394
00:11:13,296 --> 0:11:15,446
signature by default in the DER

395
00:11:15,446 --> 0:11:15,996
format.

396
00:11:17,096 --> 0:11:18,346
Most of them do, but if your

397
00:11:18,346 --> 0:11:19,716
library doesn't use that by

398
00:11:19,716 --> 0:11:21,216
default, make sure you specify

399
00:11:21,216 --> 0:11:22,036
DER here.

400
00:11:23,766 --> 0:11:25,186
And also instead of just having

401
00:11:25,186 --> 0:11:26,386
it return us back a whole bunch

402
00:11:26,386 --> 0:11:27,666
of raw cryptographic bytes,

403
00:11:28,406 --> 0:11:29,696
we're going to ask it to send us

404
00:11:29,696 --> 0:11:31,376
a string in a base-64 encoding.

405
00:11:32,306 --> 0:11:33,216
Now this makes it really easy to

406
00:11:33,216 --> 0:11:35,916
transfer this data from your

407
00:11:35,916 --> 0:11:37,016
server to your device, and this

408
00:11:37,016 --> 0:11:38,646
is also the format that StoreKit

409
00:11:39,236 --> 0:11:39,446
uses.

410
00:11:44,346 --> 0:11:45,426
So now we have our signature.

411
00:11:46,876 --> 0:11:49,246
The next step is to do some

412
00:11:49,246 --> 0:11:49,886
verification.

413
00:11:49,886 --> 0:11:51,626
You don't have to do this

414
00:11:51,626 --> 0:11:53,606
verification every time, but it

415
00:11:53,606 --> 0:11:55,016
can be really helpful to do say

416
00:11:55,016 --> 0:11:56,916
while you're writing this

417
00:11:57,176 --> 0:11:58,226
signature generation code in

418
00:11:58,226 --> 0:11:59,826
your own server, just to make

419
00:11:59,826 --> 0:12:00,886
sure there are no errors and

420
00:11:59,826 --> 0:12:00,886
sure there are no errors and

421
00:12:00,886 --> 0:12:01,766
nothing weird happened.

422
00:12:02,786 --> 0:12:04,436
What this does is generates a

423
00:12:04,496 --> 0:12:05,906
public key based on your private

424
00:12:05,906 --> 0:12:07,836
key, and then verifies your

425
00:12:07,836 --> 0:12:08,966
signature and payload just like

426
00:12:08,966 --> 0:12:09,516
the App Store would.

427
00:12:11,046 --> 0:12:12,256
Finally, all that's left is to

428
00:12:12,256 --> 0:12:13,186
send the signature back to

429
00:12:13,186 --> 0:12:15,176
device along with these pieces

430
00:12:15,176 --> 0:12:16,196
of the payload we generated

431
00:12:16,196 --> 0:12:17,576
here, being the key ID, the

432
00:12:17,576 --> 0:12:18,976
nonce and a timestamp.

433
00:12:23,326 --> 0:12:24,286
So now that you've set up your

434
00:12:24,286 --> 0:12:25,286
server to generate these

435
00:12:25,286 --> 0:12:27,836
signatures, the next step is to

436
00:12:27,836 --> 0:12:28,976
set up your app to actually make

437
00:12:28,976 --> 0:12:32,016
the request and send up a

438
00:12:32,016 --> 0:12:32,536
transaction.

439
00:12:34,096 --> 0:12:36,076
So the first thing to do is

440
00:12:36,346 --> 0:12:37,696
actually get the offer details,

441
00:12:38,086 --> 0:12:39,016
the ones you set up in App Store

442
00:12:39,016 --> 0:12:40,416
Connect which you'll do of

443
00:12:40,416 --> 0:12:42,086
course using the SKProducts

444
00:12:42,496 --> 0:12:42,766
request.

445
00:12:45,326 --> 0:12:46,386
And we'll add some code to send

446
00:12:46,386 --> 0:12:47,756
the signature request to the

447
00:12:47,756 --> 0:12:48,656
server and run that code we just

448
00:12:48,656 --> 0:12:48,976
went over.

449
00:12:52,046 --> 0:12:53,066
A good strategy for doing this

450
00:12:53,066 --> 0:12:55,166
is sending up that signature

451
00:12:55,166 --> 0:12:56,566
request just about when the

452
00:12:56,566 --> 0:12:57,486
customer is ready to make a

453
00:12:57,486 --> 0:12:57,966
purchase.

454
00:12:58,946 --> 0:13:00,536
We recommend doing it just

455
00:12:58,946 --> 0:13:00,536
We recommend doing it just

456
00:13:00,536 --> 0:13:02,406
before you show your story

457
00:13:02,406 --> 0:13:03,356
[inaudible] or show this offer

458
00:13:03,356 --> 0:13:04,006
to the customer.

459
00:13:05,126 --> 0:13:06,236
You want to do this not only

460
00:13:06,236 --> 0:13:07,256
because of that 24-hour

461
00:13:07,256 --> 0:13:09,006
timestamp limit, but also so you

462
00:13:09,006 --> 0:13:09,736
have the most up-to-date

463
00:13:09,776 --> 0:13:10,796
business logic from your own

464
00:13:10,796 --> 0:13:11,136
server.

465
00:13:11,926 --> 0:13:13,536
So any keys you may have swapped

466
00:13:13,536 --> 0:13:14,886
out or you have a new

467
00:13:14,886 --> 0:13:16,086
eligibility information about

468
00:13:16,086 --> 0:13:17,296
your customers who you actually

469
00:13:17,296 --> 0:13:18,276
want to send an offer to or not.

470
00:13:18,986 --> 0:13:20,126
You want to have all of that

471
00:13:20,126 --> 0:13:20,976
up-to-date.

472
00:13:24,066 --> 0:13:25,176
And finally we'll handle that

473
00:13:25,176 --> 0:13:26,546
response from the server and

474
00:13:26,546 --> 0:13:27,766
then send the transaction to the

475
00:13:27,766 --> 0:13:27,976
App Store.

476
00:13:32,486 --> 0:13:33,776
So when you make your SKProducts

477
00:13:33,776 --> 0:13:35,236
request, you'll notice that on

478
00:13:35,276 --> 0:13:36,726
each SKProduct, there is a new

479
00:13:36,726 --> 0:13:37,886
property for Subscription

480
00:13:37,886 --> 0:13:38,226
Offers.

481
00:13:38,626 --> 0:13:39,426
It's called Discounts.

482
00:13:40,716 --> 0:13:42,186
This is just an array of

483
00:13:42,186 --> 0:13:43,596
SKProductDiscount objects.

484
00:13:44,976 --> 0:13:46,076
You may recognize that

485
00:13:46,076 --> 0:13:47,606
SKProductDiscount since it's the

486
00:13:47,606 --> 0:13:48,646
same model we use for

487
00:13:48,646 --> 0:13:50,006
introductory offers, as these

488
00:13:50,006 --> 0:13:50,586
are very similar.

489
00:13:51,146 --> 0:13:53,486
And you can see it's got info

490
00:13:53,486 --> 0:13:55,386
such as the price, subscription

491
00:13:55,386 --> 0:13:56,166
period and such.

492
00:13:57,276 --> 0:13:58,616
But we've also added two new

493
00:13:58,616 --> 0:13:59,646
properties for Subscription

494
00:13:59,646 --> 0:13:59,976
Offers.

495
00:14:02,576 --> 0:14:04,816
That of the identifier -- this

496
00:14:04,816 --> 0:14:06,016
is that product code that you

497
00:14:06,016 --> 0:14:06,986
added in App Store Connect.

498
00:14:08,106 --> 0:14:09,756
It's an optional because there's

499
00:14:09,756 --> 0:14:11,226
no identifier for introductory

500
00:14:11,226 --> 0:14:12,256
offers, so it will be nill

501
00:14:12,256 --> 0:14:12,496
there.

502
00:14:12,746 --> 0:14:15,106
But it will be present for every

503
00:14:15,106 --> 0:14:15,876
subscription offer.

504
00:14:19,156 --> 0:14:20,516
And we've added a type.

505
00:14:21,186 --> 0:14:22,206
This is just an enum that will

506
00:14:22,206 --> 0:14:23,476
tell you whether this is in fact

507
00:14:23,636 --> 0:14:24,966
a subscription offer or an

508
00:14:24,966 --> 0:14:25,686
introductory offer.

509
00:14:27,166 --> 0:14:27,946
However, you'll never get an

510
00:14:27,946 --> 0:14:28,976
introductory offer in that

511
00:14:28,976 --> 0:14:29,646
discounts array.

512
00:14:30,276 --> 0:14:31,576
Those will still be only on the

513
00:14:31,576 --> 0:14:32,986
introductory price property of

514
00:14:33,206 --> 0:14:33,696
SKProduct.

515
00:14:38,076 --> 0:14:39,636
So you're ready to display the

516
00:14:39,636 --> 0:14:40,396
offer to your customer.

517
00:14:40,576 --> 0:14:41,736
The first step is to send a

518
00:14:41,736 --> 0:14:42,716
request to your server to

519
00:14:42,776 --> 0:14:43,746
fetchOfferDetails.

520
00:14:47,056 --> 0:14:48,836
So in this example we'll pass in

521
00:14:49,166 --> 0:14:50,356
the application username, that

522
00:14:50,356 --> 0:14:52,856
hashed version, our product

523
00:14:52,856 --> 0:14:54,116
identifier for the subscription,

524
00:14:55,806 --> 0:14:56,716
and the offer identifier.

525
00:14:56,716 --> 0:14:58,676
And here our server already

526
00:14:58,676 --> 0:14:59,906
knows what application bundle ID

527
00:14:59,906 --> 0:15:00,416
we're using.

528
00:14:59,906 --> 0:15:00,416
we're using.

529
00:15:01,236 --> 0:15:02,556
So it will run all that code we

530
00:15:02,556 --> 0:15:05,156
went over and send us back the

531
00:15:05,156 --> 0:15:09,296
nonce, a timestamp, a key

532
00:15:09,296 --> 0:15:10,616
identifier and of course the

533
00:15:10,616 --> 0:15:12,456
signature itself in that base-64

534
00:15:12,456 --> 0:15:13,896
formatted string.

535
00:15:16,056 --> 0:15:16,926
So we're not going to go over

536
00:15:16,926 --> 0:15:18,376
the details of how to make a

537
00:15:18,376 --> 0:15:19,826
secure HTTPS request and

538
00:15:19,826 --> 0:15:20,246
response.

539
00:15:20,326 --> 0:15:21,576
There's lots of other resources

540
00:15:21,576 --> 0:15:21,896
on that.

541
00:15:22,526 --> 0:15:23,816
We'll just continue here inside

542
00:15:23,816 --> 0:15:24,786
our completion block.

543
00:15:28,226 --> 0:15:29,106
What you want to do with all

544
00:15:29,106 --> 0:15:30,956
this information is create this

545
00:15:30,956 --> 0:15:31,846
new class called

546
00:15:32,046 --> 0:15:33,296
SKPaymentDiscount.

547
00:15:34,626 --> 0:15:36,746
Now, this is SKPaymentDiscount,

548
00:15:36,746 --> 0:15:37,946
not SKProductDiscount.

549
00:15:38,966 --> 0:15:40,436
The SKProductDiscount is what we

550
00:15:40,436 --> 0:15:42,196
just went over which gives you

551
00:15:42,196 --> 0:15:43,806
the details of the offer you set

552
00:15:43,806 --> 0:15:44,566
up in App Store Connect.

553
00:15:45,646 --> 0:15:47,796
This SKPaymentDiscount actually

554
00:15:47,796 --> 0:15:48,856
holds all the details of the

555
00:15:48,856 --> 0:15:49,876
payload and the signature.

556
00:15:50,266 --> 0:15:52,066
And it's what you use to attach

557
00:15:52,066 --> 0:15:52,696
to a payment to send up to

558
00:15:52,696 --> 0:15:52,976
StoreKit.

559
00:15:56,276 --> 0:15:57,026
So we'll create one here,

560
00:15:57,026 --> 0:15:58,646
passing in those details into

561
00:15:58,696 --> 0:16:00,076
the initializer, and then just

562
00:15:58,696 --> 0:16:00,076
the initializer, and then just

563
00:16:00,076 --> 0:16:01,066
return that into our completion

564
00:16:01,066 --> 0:16:01,806
block and we're ready to display

565
00:16:01,806 --> 0:16:01,976
the offer.

566
00:16:07,416 --> 0:16:08,866
So when the customer taps that

567
00:16:08,866 --> 0:16:10,406
they want to purchase it, we'll

568
00:16:10,406 --> 0:16:11,686
call this BuyProduct function

569
00:16:11,686 --> 0:16:11,856
here.

570
00:16:11,856 --> 0:16:15,156
You want to make sure to have

571
00:16:15,216 --> 0:16:16,246
the SKProduct for the

572
00:16:16,246 --> 0:16:18,586
subscription itself, that same

573
00:16:18,786 --> 0:16:21,306
hashed application username that

574
00:16:21,306 --> 0:16:22,126
you used to generate the

575
00:16:22,126 --> 0:16:24,526
signature, and that

576
00:16:24,526 --> 0:16:25,646
SKPaymentDiscount we just made.

577
00:16:28,046 --> 0:16:29,016
From there, setting it up is

578
00:16:29,346 --> 0:16:29,876
really simple.

579
00:16:30,606 --> 0:16:32,216
Create a new SKMutablePayment

580
00:16:32,496 --> 0:16:33,136
with that product.

581
00:16:35,086 --> 0:16:35,966
We'll set the application

582
00:16:35,966 --> 0:16:36,396
username.

583
00:16:39,046 --> 0:16:39,816
Then you'll set this new

584
00:16:39,816 --> 0:16:41,316
PaymentDiscount property with

585
00:16:41,316 --> 0:16:42,436
that SKPaymentDiscount.

586
00:16:44,216 --> 0:16:45,186
And that's all there is to it.

587
00:16:46,366 --> 0:16:47,336
And simply add the payment to

588
00:16:47,336 --> 0:16:48,456
the payment queue as you do with

589
00:16:49,086 --> 0:16:50,086
any other in-app purchase.

590
00:16:55,136 --> 0:16:56,016
So in addition to this, we've

591
00:16:56,016 --> 0:16:57,586
added a few new SKErrorCodes

592
00:16:57,586 --> 0:16:58,786
specific for Subscription

593
00:16:58,786 --> 0:16:59,236
Offers.

594
00:17:00,886 --> 0:17:01,436
The first one is

595
00:17:01,436 --> 0:17:02,676
invalidOfferIdentifier.

596
00:17:03,456 --> 0:17:04,226
As it sounds, this will be

597
00:17:04,226 --> 0:17:06,086
returned if the offer identifier

598
00:17:06,086 --> 0:17:07,465
you tried to use can't be found

599
00:17:07,806 --> 0:17:08,886
of if you've disabled it

600
00:17:08,886 --> 0:17:10,705
yourself in App Store Connect.

601
00:17:12,596 --> 0:17:13,476
The next one is

602
00:17:13,476 --> 0:17:14,626
invalidOfferPrice.

603
00:17:15,586 --> 0:17:16,925
So the App Store actually does

604
00:17:16,925 --> 0:17:18,286
some price validation for

605
00:17:18,286 --> 0:17:19,476
pay-as-you-go Subscription

606
00:17:19,476 --> 0:17:19,935
Offers.

607
00:17:20,556 --> 0:17:21,526
We basically want to make sure

608
00:17:21,526 --> 0:17:23,415
that the offer has a lower price

609
00:17:23,455 --> 0:17:24,296
than the base subscription

610
00:17:24,296 --> 0:17:24,736
itself.

611
00:17:25,346 --> 0:17:27,455
So this could happen say if you

612
00:17:27,455 --> 0:17:29,116
set up an offer and then later

613
00:17:29,116 --> 0:17:30,136
you've reduced the price of the

614
00:17:30,136 --> 0:17:30,806
base subscription.

615
00:17:30,806 --> 0:17:31,856
We want to make sure that's

616
00:17:31,856 --> 0:17:32,826
actually a discount.

617
00:17:35,046 --> 0:17:36,216
However, the App Store does not

618
00:17:36,216 --> 0:17:37,536
do price validation for

619
00:17:37,606 --> 0:17:38,856
pay-up-front Subscription

620
00:17:38,856 --> 0:17:39,296
Offers.

621
00:17:40,276 --> 0:17:41,806
The reason for that is we want

622
00:17:41,806 --> 0:17:43,906
to empower you to create

623
00:17:43,906 --> 0:17:45,866
bundles, for example if you're

624
00:17:45,866 --> 0:17:46,546
starting a new

625
00:17:46,546 --> 0:17:48,916
subscription-based game, you may

626
00:17:48,916 --> 0:17:50,416
want to give some customers an

627
00:17:50,416 --> 0:17:51,826
offer that's like three months

628
00:17:51,826 --> 0:17:53,696
of subscription access plus an

629
00:17:53,696 --> 0:17:55,686
additional piece of legendary

630
00:17:55,686 --> 0:17:56,956
gear or experience boosters or

631
00:17:56,956 --> 0:17:58,326
something like that that offers

632
00:17:58,326 --> 0:17:59,406
more value than just three

633
00:17:59,406 --> 0:17:59,976
months of subscription.

634
00:18:04,416 --> 0:18:05,586
The next error is

635
00:18:05,586 --> 0:18:06,416
invalidSignature.

636
00:18:08,036 --> 0:18:09,296
We'll send this back if the

637
00:18:09,296 --> 0:18:11,106
signature you sent up can't be

638
00:18:11,106 --> 0:18:12,496
validated against the private

639
00:18:12,586 --> 0:18:14,726
key you've told us you used.

640
00:18:15,136 --> 0:18:17,646
Or if it can't be validated

641
00:18:17,646 --> 0:18:18,446
against the payload that you

642
00:18:18,446 --> 0:18:19,396
sent up -- so something was

643
00:18:19,396 --> 0:18:19,976
switched in between.

644
00:18:24,056 --> 0:18:24,396
Finally, there's

645
00:18:24,396 --> 0:18:25,506
missingOfferParams.

646
00:18:26,246 --> 0:18:28,306
You'll get this if you forget to

647
00:18:28,376 --> 0:18:29,906
send up or if you send up say an

648
00:18:29,906 --> 0:18:31,256
empty string version of any of

649
00:18:31,256 --> 0:18:32,456
those pieces of the payload.

650
00:18:33,696 --> 0:18:34,776
The most common example of this

651
00:18:34,776 --> 0:18:36,036
is forgetting to set the

652
00:18:36,036 --> 0:18:37,176
application username on the

653
00:18:37,266 --> 0:18:37,936
SKMutablePayment.

654
00:18:44,186 --> 0:18:45,106
So all this code we just looked

655
00:18:45,106 --> 0:18:46,466
at is actually available online.

656
00:18:47,486 --> 0:18:49,146
As I said, that NodeJS server,

657
00:18:49,246 --> 0:18:50,816
you can go and download right

658
00:18:50,816 --> 0:18:52,016
now and run it locally.

659
00:18:52,216 --> 0:18:53,336
It's a ready-to-run app.

660
00:18:54,446 --> 0:18:55,406
And the Swift code we looked at

661
00:18:55,406 --> 0:18:56,146
is available on these

662
00:18:56,146 --> 0:18:58,076
documentation pages, so even

663
00:18:58,076 --> 0:18:59,156
more detailed documentation

664
00:18:59,156 --> 0:19:00,086
about it.

665
00:18:59,156 --> 0:19:00,086
about it.

666
00:19:00,816 --> 0:19:02,046
Plus if you have any questions,

667
00:19:02,556 --> 0:19:03,716
please stop by our lab just

668
00:19:03,716 --> 0:19:04,646
after this at 3:00.

669
00:19:09,046 --> 0:19:11,196
So now that we've talked about

670
00:19:11,196 --> 0:19:12,626
how to generate a signature and

671
00:19:12,816 --> 0:19:13,676
how to actually send up a

672
00:19:13,676 --> 0:19:15,446
transaction to StoreKit, and you

673
00:19:15,446 --> 0:19:17,646
may be thinking, "Great, but who

674
00:19:17,646 --> 0:19:18,946
do I even send these offers to?"

675
00:19:22,216 --> 0:19:24,046
Well, the App Store, as I said,

676
00:19:24,046 --> 0:19:27,376
only enforces a single rule.

677
00:19:27,376 --> 0:19:28,466
Each customer who wants to

678
00:19:28,466 --> 0:19:29,476
redeem an offer must have

679
00:19:29,536 --> 0:19:30,986
previously subscribed to an

680
00:19:30,986 --> 0:19:32,596
auto-renewable subscription in

681
00:19:33,406 --> 0:19:34,466
that app.

682
00:19:34,726 --> 0:19:36,066
So this includes any

683
00:19:36,066 --> 0:19:37,026
auto-renewable subscription.

684
00:19:37,336 --> 0:19:38,626
It doesn't have to be the same

685
00:19:38,626 --> 0:19:39,416
one that you're trying to make

686
00:19:39,416 --> 0:19:39,976
an offer for.

687
00:19:42,046 --> 0:19:42,776
And it can be from any

688
00:19:42,776 --> 0:19:43,526
subscription group.

689
00:19:43,586 --> 0:19:45,046
Once again, it doesn't have to

690
00:19:45,546 --> 0:19:45,686
match.

691
00:19:48,256 --> 0:19:49,886
This includes both current

692
00:19:49,886 --> 0:19:50,996
subscribers and those who

693
00:19:50,996 --> 0:19:52,266
already lapsed and churned out,

694
00:19:52,886 --> 0:19:54,076
so you can use this for both

695
00:19:54,076 --> 0:19:55,376
retaining customers as well as

696
00:19:55,376 --> 0:19:55,956
winning those back.

697
00:19:59,516 --> 0:20:00,656
And customers will be eligible

698
00:19:59,516 --> 0:20:00,656
And customers will be eligible

699
00:20:00,656 --> 0:20:02,106
from the very first subscription

700
00:20:02,106 --> 0:20:02,466
period.

701
00:20:03,696 --> 0:20:05,186
And this includes if they're in

702
00:20:05,186 --> 0:20:07,196
a free or a paid introductory

703
00:20:07,196 --> 0:20:07,466
offer.

704
00:20:11,436 --> 0:20:13,166
With that in mind, the way that

705
00:20:13,166 --> 0:20:14,576
you can check to make sure that

706
00:20:14,576 --> 0:20:15,766
a customer is actually eligible

707
00:20:15,796 --> 0:20:17,386
is of course looking at the

708
00:20:18,126 --> 0:20:18,286
receipt.

709
00:20:21,046 --> 0:20:22,906
So it's actually pretty easy.

710
00:20:22,906 --> 0:20:23,536
You just want to look at the

711
00:20:23,536 --> 0:20:24,166
in-app array or the

712
00:20:24,166 --> 0:20:25,376
latestReceiptInfo array if

713
00:20:25,376 --> 0:20:25,926
that's available.

714
00:20:26,576 --> 0:20:27,646
And just iterate through all the

715
00:20:27,646 --> 0:20:28,336
objects there.

716
00:20:28,806 --> 0:20:30,706
You'll want to look at the

717
00:20:30,706 --> 0:20:33,746
product ID for each one as you

718
00:20:33,746 --> 0:20:34,336
go through.

719
00:20:35,066 --> 0:20:36,846
If you find a product ID that is

720
00:20:36,846 --> 0:20:38,026
an auto-renewable subscription

721
00:20:38,826 --> 0:20:39,456
and you know that they have

722
00:20:39,456 --> 0:20:40,546
already subscribed and thus

723
00:20:40,576 --> 0:20:42,396
they're eligible to redeem any

724
00:20:42,396 --> 0:20:44,556
subscription offer on any

725
00:20:44,556 --> 0:20:45,666
auto-renewable subscription in

726
00:20:45,666 --> 0:20:46,696
that app.

727
00:20:47,686 --> 0:20:49,056
But this is just the App Store's

728
00:20:49,056 --> 0:20:49,916
version of eligibility.

729
00:20:50,506 --> 0:20:51,536
It's pretty simple and we leave

730
00:20:52,086 --> 0:20:53,036
almost everything up to you.

731
00:20:54,146 --> 0:20:55,186
You almost certainly want to

732
00:20:55,186 --> 0:20:56,136
implement your own business

733
00:20:56,136 --> 0:20:57,436
rules for determining which

734
00:20:57,436 --> 0:20:58,246
customers you want to show

735
00:20:58,246 --> 0:20:59,206
offers to and what offers you

736
00:20:59,206 --> 0:20:59,926
want show them.

737
00:21:02,046 --> 0:21:03,846
So to give you some great tips

738
00:21:03,846 --> 0:21:04,836
and insight on how to do that,

739
00:21:05,536 --> 0:21:06,546
I'd like to invite my colleague

740
00:21:06,546 --> 0:21:07,406
Michael to the stage.

741
00:21:08,516 --> 0:21:11,616
[ Applause ]

742
00:21:12,116 --> 0:21:12,506
&gt;&gt; Thanks, Ross.

743
00:21:13,016 --> 0:21:15,000
[ Applause ]

744
00:21:18,476 --> 0:21:19,406
Good afternoon.

745
00:21:19,976 --> 0:21:21,346
My name is Michael Gargas and

746
00:21:21,346 --> 0:21:22,896
I'm a technical advocate on the

747
00:21:22,896 --> 0:21:23,926
App Store Commerce Team.

748
00:21:24,526 --> 0:21:25,566
And I'm really excited to

749
00:21:25,566 --> 0:21:26,656
discuss with you all today

750
00:21:27,376 --> 0:21:29,806
eligibility, distribution and

751
00:21:29,806 --> 0:21:31,206
reduction of voluntary churn

752
00:21:31,456 --> 0:21:32,626
using our great new feature:

753
00:21:32,766 --> 0:21:33,616
Subscription Offers.

754
00:21:36,046 --> 0:21:37,626
As a developer, you may have

755
00:21:37,626 --> 0:21:39,166
asked yourselves some of these

756
00:21:39,166 --> 0:21:40,486
questions about customer

757
00:21:40,486 --> 0:21:42,626
subscription activity inside of

758
00:21:42,626 --> 0:21:43,516
your applications.

759
00:21:44,276 --> 0:21:45,536
Things like, when do the

760
00:21:45,536 --> 0:21:47,086
majority of my customers churn?

761
00:21:47,776 --> 0:21:48,866
Has a customer churned?

762
00:21:49,886 --> 0:21:51,596
Or, why may a customer have

763
00:21:51,596 --> 0:21:52,866
cancelled their subscription?

764
00:21:54,416 --> 0:21:56,076
As Ross mentioned, you can

765
00:21:56,076 --> 0:21:57,926
determine basic eligibility for

766
00:21:57,926 --> 0:21:59,666
Subscription Offers via the app

767
00:21:59,666 --> 0:21:59,996
receipt.

768
00:22:00,826 --> 0:22:02,606
In the in-app array and

769
00:22:02,606 --> 0:22:04,666
latestReceiptInfo you will have

770
00:22:04,726 --> 0:22:05,776
the previous subscription

771
00:22:05,776 --> 0:22:07,836
activity for that subscriber or

772
00:22:07,836 --> 0:22:08,286
customer.

773
00:22:09,326 --> 0:22:10,706
Additionally, we will provide

774
00:22:10,706 --> 0:22:12,486
this information via our updated

775
00:22:12,676 --> 0:22:14,246
server-to-server notifications.

776
00:22:16,496 --> 0:22:17,666
But that's just about what

777
00:22:17,666 --> 0:22:19,636
product the user or customer has

778
00:22:19,636 --> 0:22:20,476
been subscribed to.

779
00:22:21,356 --> 0:22:22,986
Inside of the app receipt, we

780
00:22:22,986 --> 0:22:24,506
provide lots of additional,

781
00:22:24,656 --> 0:22:26,226
valuable customer subscription

782
00:22:26,226 --> 0:22:26,806
information.

783
00:22:28,026 --> 0:22:29,106
Things like the subscription

784
00:22:29,106 --> 0:22:31,506
status -- will my customer renew

785
00:22:31,506 --> 0:22:32,686
in the subsequent subscription

786
00:22:32,686 --> 0:22:33,026
period?

787
00:22:33,896 --> 0:22:36,136
Or is my customer in a failed

788
00:22:36,606 --> 0:22:37,886
payment state?

789
00:22:38,086 --> 0:22:39,286
We also provide unique

790
00:22:39,316 --> 0:22:41,176
identifiers such as the original

791
00:22:41,176 --> 0:22:43,236
transaction ID and web order

792
00:22:43,236 --> 0:22:45,236
line item ID in order for you to

793
00:22:45,236 --> 0:22:46,886
determine a unique subscription

794
00:22:47,136 --> 0:22:48,996
for a specific customer on your

795
00:22:48,996 --> 0:22:49,386
server.

796
00:22:49,896 --> 0:22:53,016
We provide subscriber dates such

797
00:22:53,016 --> 0:22:54,226
as the subscription start and

798
00:22:54,226 --> 0:22:55,976
expires for the current period

799
00:22:55,976 --> 0:22:57,836
as well as all previous renewal

800
00:22:57,836 --> 0:22:59,206
period for that customer.

801
00:22:59,746 --> 0:23:02,766
And we provide subscriber

802
00:22:59,746 --> 0:23:02,766
And we provide subscriber

803
00:23:02,766 --> 0:23:04,376
intent, letting you know if

804
00:23:04,376 --> 0:23:05,236
someone cancelled their

805
00:23:05,236 --> 0:23:06,806
subscription, why did they

806
00:23:06,806 --> 0:23:07,346
cancel it?

807
00:23:07,696 --> 0:23:09,136
And if they requested a refund,

808
00:23:09,516 --> 0:23:10,506
was it an issue with your

809
00:23:10,506 --> 0:23:11,976
application or something else?

810
00:23:14,356 --> 0:23:15,806
Now last year in Engineering

811
00:23:15,806 --> 0:23:17,816
Subscriptions, we discussed this

812
00:23:17,816 --> 0:23:19,496
concept of storing additional

813
00:23:19,496 --> 0:23:21,236
user data from the app receipt.

814
00:23:22,046 --> 0:23:23,446
Here we have an example of

815
00:23:23,446 --> 0:23:24,616
looking at the customer's

816
00:23:24,616 --> 0:23:26,826
expires date, storing that on

817
00:23:26,826 --> 0:23:28,586
your server and determining that

818
00:23:28,626 --> 0:23:30,196
this customer is no longer

819
00:23:30,196 --> 0:23:31,406
eligible for subscription

820
00:23:31,406 --> 0:23:31,826
service.

821
00:23:32,366 --> 0:23:35,566
But we also built upon that and

822
00:23:35,566 --> 0:23:36,736
we talked about storing

823
00:23:36,776 --> 0:23:38,226
additional subscriber status

824
00:23:38,226 --> 0:23:39,476
fields from verifyReceipt.

825
00:23:39,986 --> 0:23:43,226
And then parsing out specific

826
00:23:43,226 --> 0:23:45,266
fields from that response, such

827
00:23:45,266 --> 0:23:46,466
as the auto-renew status.

828
00:23:49,046 --> 0:23:51,086
Additionally, we recommend that

829
00:23:51,086 --> 0:23:53,156
you now save status changes from

830
00:23:53,156 --> 0:23:53,906
our server-to-server

831
00:23:53,906 --> 0:23:56,476
notifications as we are

832
00:23:56,476 --> 0:23:58,056
including the unified app

833
00:23:58,056 --> 0:23:59,106
receipt in those

834
00:23:59,266 --> 0:24:00,826
server-to-server notifications

835
00:23:59,266 --> 0:24:00,826
server-to-server notifications

836
00:24:00,826 --> 0:24:00,976
as well.

837
00:24:03,436 --> 0:24:05,206
Now this is the data that Apple

838
00:24:05,206 --> 0:24:06,616
is providing you about

839
00:24:06,616 --> 0:24:08,126
subscribers and customers in

840
00:24:08,126 --> 0:24:08,846
your application.

841
00:24:10,036 --> 0:24:12,756
As a developer, you have a lot

842
00:24:12,756 --> 0:24:14,916
of additional information that

843
00:24:14,916 --> 0:24:16,606
Apple does not about user

844
00:24:16,606 --> 0:24:18,446
subscription activity inside of

845
00:24:18,446 --> 0:24:19,176
your application.

846
00:24:20,496 --> 0:24:22,276
By taking this information and

847
00:24:22,276 --> 0:24:24,516
marrying it alongside the JSOJN

848
00:24:24,516 --> 0:24:25,936
data that we provide after a

849
00:24:25,936 --> 0:24:27,726
purchase or renewal, you can

850
00:24:27,726 --> 0:24:30,056
begin to curate specific offers

851
00:24:30,576 --> 0:24:32,486
for cohorts of customers.

852
00:24:33,486 --> 0:24:35,436
And then over time, you can

853
00:24:35,436 --> 0:24:36,996
monitor how those cohorts of

854
00:24:36,996 --> 0:24:38,896
customers respond to offers

855
00:24:39,126 --> 0:24:40,796
using key subscription metrics

856
00:24:41,276 --> 0:24:43,456
such as conversion, engagement,

857
00:24:43,816 --> 0:24:45,096
retention and churn.

858
00:24:45,686 --> 0:24:49,336
So to visualize this, let's take

859
00:24:49,336 --> 0:24:52,366
a look at an example user table

860
00:24:52,596 --> 0:24:53,366
on your servers.

861
00:24:56,146 --> 0:24:58,676
Here we see users ordered by

862
00:24:58,676 --> 0:25:00,886
user ID and original transaction

863
00:24:58,676 --> 0:25:00,886
user ID and original transaction

864
00:25:00,886 --> 0:25:02,906
ID, which is the parent unique

865
00:25:02,906 --> 0:25:04,616
identifier for any subscription

866
00:25:04,616 --> 0:25:05,626
purchase for a specific

867
00:25:05,626 --> 0:25:06,066
customer.

868
00:25:06,606 --> 0:25:09,426
But as we said, you can begin to

869
00:25:09,426 --> 0:25:11,726
layer in additional customer

870
00:25:11,726 --> 0:25:13,396
information that is found in the

871
00:25:13,396 --> 0:25:15,256
app receipt, such as the user's

872
00:25:15,396 --> 0:25:17,376
auto-renewal status and

873
00:25:17,376 --> 0:25:19,066
billing-retry status.

874
00:25:19,836 --> 0:25:21,206
But you shouldn't stop there;

875
00:25:22,086 --> 0:25:23,436
you can combine that with

876
00:25:23,436 --> 0:25:25,356
information that you have about

877
00:25:25,356 --> 0:25:26,716
customer activity inside your

878
00:25:26,716 --> 0:25:27,316
application.

879
00:25:28,156 --> 0:25:29,506
Here we have an example of

880
00:25:29,506 --> 0:25:30,476
content consumed.

881
00:25:31,466 --> 0:25:32,676
This could be videos watched,

882
00:25:33,036 --> 0:25:35,066
articles read, stories saved,

883
00:25:35,916 --> 0:25:36,326
anything.

884
00:25:39,076 --> 0:25:39,846
By taking a look at this

885
00:25:39,846 --> 0:25:41,336
information, we're able to

886
00:25:41,336 --> 0:25:42,926
determine which users or

887
00:25:42,926 --> 0:25:44,646
customers are eligible for

888
00:25:44,646 --> 0:25:47,406
Subscription Offers and which

889
00:25:47,406 --> 0:25:47,756
are not.

890
00:25:50,266 --> 0:25:52,386
Taking this one step further, we

891
00:25:52,386 --> 0:25:53,756
can begin to store additional

892
00:25:53,756 --> 0:25:55,856
information such as the renewal

893
00:25:55,856 --> 0:25:58,156
periods, number of billing

894
00:25:58,156 --> 0:25:59,146
errors that customer has

895
00:25:59,146 --> 0:26:01,186
experienced, and if they're

896
00:25:59,146 --> 0:26:01,186
experienced, and if they're

897
00:26:01,186 --> 0:26:02,996
eligible for specific types of

898
00:26:02,996 --> 0:26:03,436
offers.

899
00:26:04,486 --> 0:26:06,226
As Ross mentioned, you can have

900
00:26:06,226 --> 0:26:08,146
up to ten Subscription Offers

901
00:26:08,466 --> 0:26:09,516
per subscriptions queue,

902
00:26:10,336 --> 0:26:11,496
allowing you to essentially

903
00:26:11,496 --> 0:26:12,806
create up to ten different

904
00:26:12,806 --> 0:26:15,126
cohorts of users to identify and

905
00:26:15,126 --> 0:26:16,386
distribute Subscription Offers

906
00:26:16,386 --> 0:26:16,606
too.

907
00:26:17,176 --> 0:26:20,066
If we take a look at three

908
00:26:20,066 --> 0:26:22,186
example customers in your

909
00:26:22,186 --> 0:26:25,916
server, you'll see that based on

910
00:26:25,916 --> 0:26:27,086
their subscription activity,

911
00:26:27,836 --> 0:26:29,076
we've been able to make them

912
00:26:29,076 --> 0:26:30,166
eligible for things like a

913
00:26:30,166 --> 0:26:32,996
win-back offer where a customer

914
00:26:33,186 --> 0:26:34,596
disabled auto-renewal during a

915
00:26:34,596 --> 0:26:36,236
free trial and subsequently

916
00:26:36,466 --> 0:26:37,276
churned out of their

917
00:26:37,276 --> 0:26:37,816
subscription.

918
00:26:38,396 --> 0:26:42,446
Or a retention offer, someone

919
00:26:42,446 --> 0:26:43,926
who's currently subscribed but

920
00:26:43,926 --> 0:26:45,526
has disabled auto-renew and you

921
00:26:45,526 --> 0:26:46,756
want to show them a retention

922
00:26:46,756 --> 0:26:48,196
offer in order to keep them

923
00:26:48,196 --> 0:26:49,786
subscribed to your service.

924
00:26:50,316 --> 0:26:52,996
And lastly, something like an

925
00:26:52,996 --> 0:26:53,806
upgrade offer.

926
00:26:54,306 --> 0:26:55,466
Finding your customers who have

927
00:26:55,466 --> 0:26:57,306
consecutive renewals on maybe a

928
00:26:57,306 --> 0:26:58,826
lower tier of subscription such

929
00:26:58,826 --> 0:27:00,906
as a monthly, and then providing

930
00:26:58,826 --> 0:27:00,906
as a monthly, and then providing

931
00:27:00,906 --> 0:27:02,106
them a subscription offer to

932
00:27:02,336 --> 0:27:03,806
upgrade them to something like

933
00:27:03,806 --> 0:27:04,266
an annual [inaudible].

934
00:27:05,126 --> 0:27:08,316
So that's determining customer

935
00:27:08,316 --> 0:27:09,946
eligibility with a little bit

936
00:27:09,946 --> 0:27:11,436
more information than just

937
00:27:11,436 --> 0:27:13,016
looking at has the customer

938
00:27:13,016 --> 0:27:14,826
previously been subscribed to my

939
00:27:14,826 --> 0:27:16,096
subscription product within my

940
00:27:16,096 --> 0:27:16,276
app.

941
00:27:17,566 --> 0:27:19,126
Once you've built this detailed

942
00:27:19,126 --> 0:27:21,196
customer eligibility, the next

943
00:27:21,196 --> 0:27:22,706
step in this is distributing

944
00:27:22,706 --> 0:27:23,676
your Subscription Offers.

945
00:27:25,146 --> 0:27:26,726
Let's take a look at the path a

946
00:27:26,726 --> 0:27:28,826
subscription offer might take.

947
00:27:29,956 --> 0:27:31,686
First, as we discussed, you have

948
00:27:31,686 --> 0:27:33,856
to identify which customers or

949
00:27:33,856 --> 0:27:35,356
cohorts of customers are

950
00:27:35,356 --> 0:27:36,626
eligible for a subscription

951
00:27:36,626 --> 0:27:37,006
offer.

952
00:27:37,806 --> 0:27:38,886
You then engage with those

953
00:27:38,886 --> 0:27:40,816
customers, you fetch that

954
00:27:40,816 --> 0:27:42,176
information from the App Store

955
00:27:42,516 --> 0:27:43,506
and you present it to your

956
00:27:43,506 --> 0:27:43,896
users.

957
00:27:45,116 --> 0:27:47,056
At which point hopefully the

958
00:27:47,056 --> 0:27:48,416
customer will purchase and

959
00:27:48,416 --> 0:27:49,556
engage with the subscription

960
00:27:49,556 --> 0:27:49,846
offer.

961
00:27:50,396 --> 0:27:52,566
If we go back to our

962
00:27:52,706 --> 0:27:54,366
identification, you can see that

963
00:27:54,366 --> 0:27:55,676
we have marked three different

964
00:27:55,676 --> 0:27:57,366
users eligible for three

965
00:27:57,366 --> 0:27:58,786
different types of Subscription

966
00:27:58,786 --> 0:27:59,176
Offers.

967
00:28:01,116 --> 0:28:02,716
So where do you present this

968
00:28:02,716 --> 0:28:03,356
information?

969
00:28:04,076 --> 0:28:07,546
Well, if the customer is still

970
00:28:07,546 --> 0:28:08,896
engaged with your application

971
00:28:09,006 --> 0:28:10,736
but is in an unsubscribed state,

972
00:28:11,036 --> 0:28:12,406
you can present the Subscription

973
00:28:12,406 --> 0:28:13,886
Offers directly to them with

974
00:28:13,886 --> 0:28:15,916
inside the application via

975
00:28:15,916 --> 0:28:17,316
messaging or local

976
00:28:17,316 --> 0:28:18,036
notifications.

977
00:28:19,276 --> 0:28:20,536
It's important to understand

978
00:28:20,536 --> 0:28:22,316
that your application is the

979
00:28:22,316 --> 0:28:24,506
landing point for all offer

980
00:28:24,506 --> 0:28:25,136
consumption.

981
00:28:25,996 --> 0:28:27,366
So it's important that when you

982
00:28:27,366 --> 0:28:29,166
drive a user to engage with an

983
00:28:29,166 --> 0:28:30,926
offer, that you think about that

984
00:28:30,926 --> 0:28:32,686
call to action and make sure you

985
00:28:32,686 --> 0:28:33,886
clearly state the value

986
00:28:33,886 --> 0:28:35,606
proposition of the subscription

987
00:28:35,606 --> 0:28:37,206
offer as well as the terms that

988
00:28:37,206 --> 0:28:38,136
they'll be agreeing to.

989
00:28:39,256 --> 0:28:40,876
And as always, make sure that

990
00:28:40,876 --> 0:28:42,126
you're in compliance with the

991
00:28:42,126 --> 0:28:43,576
latest app review guidelines

992
00:28:43,716 --> 0:28:44,656
around subscriptions.

993
00:28:45,746 --> 0:28:47,156
But that's if the user is

994
00:28:47,156 --> 0:28:49,046
engaged inside your application.

995
00:28:50,446 --> 0:28:51,756
What happens if the user's no

996
00:28:51,756 --> 0:28:52,776
longer launching the app?

997
00:28:53,736 --> 0:28:55,086
How does this journey change for

998
00:28:55,086 --> 0:28:55,896
a subscription offer?

999
00:28:58,266 --> 0:28:58,916
Here we can see the

1000
00:28:58,916 --> 0:29:00,996
identifications phase, but we

1001
00:28:58,916 --> 0:29:00,996
identifications phase, but we

1002
00:29:00,996 --> 0:29:02,176
also need to understand the

1003
00:29:02,176 --> 0:29:03,676
ability to circulate

1004
00:29:03,676 --> 0:29:05,656
Subscription Offers outside of

1005
00:29:05,686 --> 0:29:06,446
your applications.

1006
00:29:07,086 --> 0:29:11,016
And then presenting those

1007
00:29:11,016 --> 0:29:12,426
Subscription Offers outside of

1008
00:29:12,426 --> 0:29:14,236
the App Store in order to -- or

1009
00:29:14,236 --> 0:29:16,066
outside of your application in

1010
00:29:16,066 --> 0:29:17,446
order to drive users back in.

1011
00:29:20,046 --> 0:29:21,406
So let's talk about presenting

1012
00:29:21,406 --> 0:29:23,286
offers outside of your

1013
00:29:23,286 --> 0:29:23,896
applications.

1014
00:29:25,116 --> 0:29:26,716
You can use your existing

1015
00:29:26,716 --> 0:29:28,426
external channels to distribute

1016
00:29:28,516 --> 0:29:29,906
calls to action for Subscription

1017
00:29:29,906 --> 0:29:30,246
Offers.

1018
00:29:31,046 --> 0:29:31,606
Things like your

1019
00:29:31,606 --> 0:29:32,686
already-existing paid

1020
00:29:32,686 --> 0:29:34,276
advertising or email marketing.

1021
00:29:35,396 --> 0:29:38,046
And then using universal links,

1022
00:29:38,646 --> 0:29:40,576
you can drive users back into

1023
00:29:40,576 --> 0:29:41,976
the application from these

1024
00:29:41,976 --> 0:29:43,316
external channels and

1025
00:29:43,316 --> 0:29:45,076
identifying which subscription

1026
00:29:45,076 --> 0:29:46,456
offer they are potentially

1027
00:29:46,516 --> 0:29:47,836
available to receive.

1028
00:29:50,186 --> 0:29:51,126
For more information on

1029
00:29:51,126 --> 0:29:52,676
universal links, I strongly

1030
00:29:52,676 --> 0:29:54,056
encourage you to check out our

1031
00:29:54,056 --> 0:29:55,606
What's New in Universal Links

1032
00:29:55,676 --> 0:29:57,586
session, which is available in

1033
00:29:57,646 --> 0:29:59,806
this year's WWDC application.

1034
00:30:04,046 --> 0:30:04,736
So we've now talked about

1035
00:30:04,736 --> 0:30:06,306
determining customer eligibility

1036
00:30:06,966 --> 0:30:07,896
and then distributing

1037
00:30:07,896 --> 0:30:09,276
Subscription Offers to those

1038
00:30:09,276 --> 0:30:10,956
eligible customers, either

1039
00:30:10,956 --> 0:30:12,826
inside of your applications or

1040
00:30:12,826 --> 0:30:14,416
via your existing external

1041
00:30:14,416 --> 0:30:14,776
channels.

1042
00:30:16,336 --> 0:30:18,266
So next, let's talk about some

1043
00:30:18,266 --> 0:30:19,806
tactics or strategies that we

1044
00:30:19,806 --> 0:30:21,026
can use with these Subscription

1045
00:30:21,026 --> 0:30:23,366
Offers in order to reduce churn.

1046
00:30:27,296 --> 0:30:28,626
During Engineering Subscriptions

1047
00:30:28,626 --> 0:30:30,306
last year, we spoke about

1048
00:30:30,306 --> 0:30:32,576
voluntary churn, the act of a

1049
00:30:32,576 --> 0:30:33,726
customer cancelling a

1050
00:30:33,726 --> 0:30:35,586
subscription during a

1051
00:30:35,586 --> 0:30:36,406
subscription period.

1052
00:30:37,546 --> 0:30:39,016
Voluntary churn is customer

1053
00:30:39,016 --> 0:30:40,246
choice to leave your

1054
00:30:40,246 --> 0:30:41,066
subscription product.

1055
00:30:41,676 --> 0:30:43,166
This differs from involuntary

1056
00:30:43,166 --> 0:30:44,926
churn where no choice was made

1057
00:30:45,176 --> 0:30:46,566
and it was a result of a billing

1058
00:30:46,566 --> 0:30:46,896
issue.

1059
00:30:48,336 --> 0:30:50,576
Last year we gave you some

1060
00:30:50,576 --> 0:30:51,996
tactics such as presenting

1061
00:30:52,166 --> 0:30:53,246
alternative subscription

1062
00:30:53,246 --> 0:30:54,786
products to users who

1063
00:30:54,786 --> 0:30:55,786
voluntarily churned.

1064
00:30:56,446 --> 0:30:58,006
But that's not a great way to

1065
00:30:58,006 --> 0:30:59,046
win customers back.

1066
00:30:59,736 --> 0:31:01,116
And so this year we're

1067
00:30:59,736 --> 0:31:01,116
And so this year we're

1068
00:31:01,116 --> 0:31:02,156
recommending the following.

1069
00:31:03,266 --> 0:31:05,006
We want you to analyze your

1070
00:31:05,006 --> 0:31:06,616
customer subscription behavior

1071
00:31:06,986 --> 0:31:08,506
using data from the app receipt

1072
00:31:08,716 --> 0:31:10,256
as well as information you have

1073
00:31:10,576 --> 0:31:11,916
around how subscribers are

1074
00:31:11,916 --> 0:31:13,816
consuming content inside your

1075
00:31:14,486 --> 0:31:14,566
app.

1076
00:31:15,316 --> 0:31:16,506
We want you to take this

1077
00:31:16,506 --> 0:31:17,866
information and identify

1078
00:31:17,866 --> 0:31:19,916
specific customer cohorts.

1079
00:31:20,576 --> 0:31:23,646
And then distribute your

1080
00:31:23,646 --> 0:31:26,406
Subscription Offers, relevant

1081
00:31:26,406 --> 0:31:27,586
Subscription Offers hopefully,

1082
00:31:27,926 --> 0:31:29,086
to these different customer

1083
00:31:29,086 --> 0:31:29,526
cohorts.

1084
00:31:30,886 --> 0:31:31,746
Now in thinking about

1085
00:31:31,746 --> 0:31:34,036
Subscription Offers, oftentimes

1086
00:31:34,356 --> 0:31:35,566
we just think about the concept

1087
00:31:35,566 --> 0:31:36,916
of winning a customer back that

1088
00:31:36,916 --> 0:31:37,836
has been unsubscribed.

1089
00:31:38,866 --> 0:31:41,196
But we want to expand upon this

1090
00:31:41,196 --> 0:31:43,246
a little bit and talk about five

1091
00:31:43,246 --> 0:31:44,496
other ways that you could

1092
00:31:44,496 --> 0:31:45,846
implement Subscription Offers

1093
00:31:46,106 --> 0:31:47,006
for your subscribers.

1094
00:31:47,656 --> 0:31:49,926
You can leverage Subscription

1095
00:31:49,926 --> 0:31:51,416
Offers for retention marketing.

1096
00:31:52,346 --> 0:31:54,326
When you see someone has opted

1097
00:31:54,526 --> 0:31:56,106
not to renew in the subsequent

1098
00:31:56,106 --> 0:31:57,736
subscription period, you can try

1099
00:31:57,736 --> 0:31:59,126
to retain that customer with a

1100
00:31:59,126 --> 0:31:59,886
subscription offer.

1101
00:32:01,326 --> 0:32:02,846
If you have information that

1102
00:32:02,846 --> 0:32:03,946
leads you to believe at some

1103
00:32:03,946 --> 0:32:05,766
point in time this customer may

1104
00:32:05,766 --> 0:32:08,176
churn, you could offer them a

1105
00:32:08,176 --> 0:32:10,126
save offer, essentially

1106
00:32:10,126 --> 0:32:11,906
predicting that the customer may

1107
00:32:11,986 --> 0:32:13,066
churn out of the application.

1108
00:32:13,616 --> 0:32:15,796
You can look at customer

1109
00:32:15,796 --> 0:32:17,026
subscription activity and

1110
00:32:17,026 --> 0:32:18,036
products that they're currently

1111
00:32:18,036 --> 0:32:19,446
subscribed to in the app receipt

1112
00:32:19,876 --> 0:32:21,306
and you can offer Subscription

1113
00:32:21,306 --> 0:32:23,086
Offers to upgrade or downgrade

1114
00:32:23,086 --> 0:32:24,356
that customer within

1115
00:32:24,356 --> 0:32:25,346
subscription groups.

1116
00:32:25,646 --> 0:32:28,346
Additionally, you can use

1117
00:32:28,346 --> 0:32:29,786
Subscription Offers to appease

1118
00:32:29,826 --> 0:32:31,206
customers that may have had a

1119
00:32:31,206 --> 0:32:32,446
poor experience inside your

1120
00:32:32,446 --> 0:32:33,066
application.

1121
00:32:34,376 --> 0:32:35,346
And you can also use

1122
00:32:35,346 --> 0:32:36,736
Subscription Offers to reward

1123
00:32:36,736 --> 0:32:38,106
your most loyal subscribers.

1124
00:32:38,106 --> 0:32:41,596
So let's take a look at each one

1125
00:32:41,596 --> 0:32:43,596
of these and show how you can

1126
00:32:43,596 --> 0:32:44,546
display these Subscription

1127
00:32:44,546 --> 0:32:46,406
Offers to customers within your

1128
00:32:46,406 --> 0:32:46,826
application.

1129
00:32:48,236 --> 0:32:50,406
First, let's take a look at a

1130
00:32:50,406 --> 0:32:51,306
win-back example.

1131
00:32:52,246 --> 0:32:53,796
Here we have a subscriber that

1132
00:32:54,216 --> 0:32:57,146
has purchased on the 26th.

1133
00:32:58,236 --> 0:32:59,536
Midway through the subscription,

1134
00:33:00,406 --> 0:33:02,776
this customer opted to cancel.

1135
00:33:03,516 --> 0:33:04,526
They called Apple Care and they

1136
00:33:04,526 --> 0:33:05,656
stated that they were not happy

1137
00:33:05,656 --> 0:33:06,806
with the service and they wanted

1138
00:33:06,806 --> 0:33:08,276
to have a cancel and a refund.

1139
00:33:08,736 --> 0:33:10,786
As we spoke to you in our

1140
00:33:10,786 --> 0:33:12,716
earlier session today, we let

1141
00:33:12,716 --> 0:33:13,856
you know about this information

1142
00:33:13,856 --> 0:33:16,066
via the receipt with fields such

1143
00:33:16,066 --> 0:33:17,396
as cancelation date letting you

1144
00:33:17,396 --> 0:33:18,976
know immediately when the refund

1145
00:33:18,976 --> 0:33:20,296
and cancelation has taken place.

1146
00:33:21,246 --> 0:33:23,256
And cancelation reason so you

1147
00:33:23,256 --> 0:33:24,906
can find out if it was a reason

1148
00:33:24,906 --> 0:33:26,826
with your application or another

1149
00:33:26,826 --> 0:33:27,126
issue.

1150
00:33:27,666 --> 0:33:30,086
But we also send this

1151
00:33:30,086 --> 0:33:31,316
information with our

1152
00:33:31,316 --> 0:33:32,896
newly-updated server-to-server

1153
00:33:32,896 --> 0:33:34,666
notifications so that you can

1154
00:33:34,666 --> 0:33:36,426
keep a pulse on your subscribers

1155
00:33:36,426 --> 0:33:37,756
and customers in real time.

1156
00:33:38,306 --> 0:33:40,386
Letting them know that they

1157
00:33:40,386 --> 0:33:41,376
should see alternative

1158
00:33:41,376 --> 0:33:42,446
Subscription Offers.

1159
00:33:42,856 --> 0:33:45,516
When we think about this

1160
00:33:45,516 --> 0:33:47,086
conceptually, we want to take

1161
00:33:47,086 --> 0:33:48,506
the information from the receipt

1162
00:33:48,506 --> 0:33:49,316
or server-to-server

1163
00:33:49,316 --> 0:33:51,466
notifications such as the

1164
00:33:51,466 --> 0:33:53,596
auto-renewal status, expiration

1165
00:33:53,596 --> 0:33:55,386
intent, so on and so forth.

1166
00:33:55,386 --> 0:33:57,546
And we want to store that on the

1167
00:33:57,546 --> 0:33:57,976
server.

1168
00:33:59,556 --> 0:34:01,746
Flagging customers available for

1169
00:33:59,556 --> 0:34:01,746
Flagging customers available for

1170
00:34:01,746 --> 0:34:03,136
something like a win-back offer

1171
00:34:03,836 --> 0:34:04,856
-- this is your signal to

1172
00:34:04,856 --> 0:34:06,326
display the subscription offer

1173
00:34:06,326 --> 0:34:06,886
to your customers.

1174
00:34:11,056 --> 0:34:13,016
As an example, here you can see

1175
00:34:13,016 --> 0:34:14,946
a call to explore with us again

1176
00:34:15,335 --> 0:34:16,476
for a customer that may have

1177
00:34:16,505 --> 0:34:17,896
churned out, and you as a

1178
00:34:17,896 --> 0:34:19,585
developer are now attempting to

1179
00:34:19,585 --> 0:34:20,686
win that customer back.

1180
00:34:23,246 --> 0:34:25,005
We also have a developer example

1181
00:34:25,005 --> 0:34:26,616
from iTranslate who's using

1182
00:34:26,616 --> 0:34:28,016
Subscription Offers to provide

1183
00:34:28,016 --> 0:34:29,466
another free month for their

1184
00:34:29,466 --> 0:34:30,126
customers.

1185
00:34:31,326 --> 0:34:32,795
These are great implementations

1186
00:34:32,966 --> 0:34:33,835
of the subscription offer

1187
00:34:33,835 --> 0:34:33,956
feature.

1188
00:34:38,065 --> 0:34:39,025
Now let's talk about retention--

1189
00:34:39,626 --> 0:34:40,735
the act of retaining a

1190
00:34:40,735 --> 0:34:42,156
subscriber who is still

1191
00:34:42,156 --> 0:34:43,326
currently subscribed to your

1192
00:34:43,326 --> 0:34:43,896
application.

1193
00:34:45,016 --> 0:34:46,485
Here we see a customer has

1194
00:34:46,545 --> 0:34:47,545
purchased their subscription.

1195
00:34:48,806 --> 0:34:50,646
And partway through, they have

1196
00:34:50,646 --> 0:34:52,626
opted to navigate to our Apple

1197
00:34:52,706 --> 0:34:53,536
Manage Subscriptions

1198
00:34:53,536 --> 0:34:56,136
infrastructure and cancel the

1199
00:34:56,136 --> 0:34:56,666
subscription.

1200
00:34:59,386 --> 0:35:00,836
Now, before, we updated our

1201
00:34:59,386 --> 0:35:00,836
Now, before, we updated our

1202
00:35:00,836 --> 0:35:02,166
server-to-server notifications,

1203
00:35:02,556 --> 0:35:03,876
you would find this information

1204
00:35:04,096 --> 0:35:05,546
by re-validating the receipt

1205
00:35:05,546 --> 0:35:07,526
with Apple and seeing that the

1206
00:35:07,526 --> 0:35:08,996
auto-renew status has changed

1207
00:35:08,996 --> 0:35:10,446
from a one to a zero.

1208
00:35:11,126 --> 0:35:12,556
This is your signal that your

1209
00:35:12,556 --> 0:35:14,326
customer will not renew in the

1210
00:35:14,326 --> 0:35:15,666
subsequent subscription period.

1211
00:35:16,206 --> 0:35:18,426
But as of the release of

1212
00:35:18,426 --> 0:35:20,306
Subscription Offers, we are now

1213
00:35:20,306 --> 0:35:21,616
going to send a status or

1214
00:35:21,616 --> 0:35:23,016
server-to-server notification

1215
00:35:23,446 --> 0:35:24,776
letting you know that this

1216
00:35:24,776 --> 0:35:26,406
customer will no longer renew.

1217
00:35:27,136 --> 0:35:28,776
And we send this both when a

1218
00:35:28,776 --> 0:35:30,266
customer disables their renewal

1219
00:35:30,266 --> 0:35:32,246
status and when a customer

1220
00:35:32,246 --> 0:35:33,556
enables their renewal status.

1221
00:35:36,046 --> 0:35:37,276
This is your signal to let them

1222
00:35:37,276 --> 0:35:38,176
know that they shouldn't leave

1223
00:35:38,176 --> 0:35:41,016
yet, and potentially check out

1224
00:35:41,016 --> 0:35:42,216
what's coming in the future for

1225
00:35:42,216 --> 0:35:43,326
your subscription product.

1226
00:35:43,716 --> 0:35:46,566
If we look back at the example

1227
00:35:47,006 --> 0:35:48,056
of the customer in your

1228
00:35:48,056 --> 0:35:49,716
database, you can see that we've

1229
00:35:50,166 --> 0:35:51,966
updated the field and made them

1230
00:35:51,966 --> 0:35:53,756
available for a retention offer,

1231
00:35:54,416 --> 0:35:55,466
at which point when this

1232
00:35:55,466 --> 0:35:56,586
customer returns into the

1233
00:35:56,586 --> 0:35:58,646
application, either driven by

1234
00:35:58,646 --> 0:36:01,956
your marketing or just use, you

1235
00:35:58,646 --> 0:36:01,956
your marketing or just use, you

1236
00:36:01,956 --> 0:36:02,856
can prompt them with a

1237
00:36:02,856 --> 0:36:04,846
subscription offer letting them

1238
00:36:04,846 --> 0:36:05,886
know that they can subscribe

1239
00:36:05,886 --> 0:36:06,086
now.

1240
00:36:07,186 --> 0:36:08,396
"Please explore with us again.

1241
00:36:08,826 --> 0:36:09,786
We've noticed that you won't be

1242
00:36:09,786 --> 0:36:11,446
staying with us next month."

1243
00:36:11,996 --> 0:36:13,636
This is a great call to action

1244
00:36:13,936 --> 0:36:15,846
to win and retain customers back

1245
00:36:15,846 --> 0:36:16,666
into your subscription

1246
00:36:16,666 --> 0:36:17,206
application.

1247
00:36:18,676 --> 0:36:20,206
We also have an example from

1248
00:36:20,206 --> 0:36:22,066
Ultimate Guitar offering a free

1249
00:36:22,066 --> 0:36:23,896
month and 50% off, letting

1250
00:36:23,896 --> 0:36:25,796
customers know that this offer

1251
00:36:25,796 --> 0:36:26,726
is for today only.

1252
00:36:30,286 --> 0:36:31,136
So that's retention.

1253
00:36:32,626 --> 0:36:34,136
Let's take a look at an upgrade

1254
00:36:34,186 --> 0:36:35,126
example.

1255
00:36:35,956 --> 0:36:38,046
Here, we see a subscriber that

1256
00:36:38,046 --> 0:36:39,826
has opted to downgrade their

1257
00:36:39,826 --> 0:36:41,316
subscription on April 1st.

1258
00:36:41,796 --> 0:36:44,286
As you know, we will surface the

1259
00:36:44,286 --> 0:36:45,816
upcoming renewal product in the

1260
00:36:45,816 --> 0:36:46,216
receipt.

1261
00:36:47,586 --> 0:36:48,986
You can choose to parse that out

1262
00:36:48,986 --> 0:36:50,726
of the response and store it in

1263
00:36:50,726 --> 0:36:51,266
your servers.

1264
00:36:52,486 --> 0:36:54,036
And we also send you the

1265
00:36:54,036 --> 0:36:55,406
server-to-server notification

1266
00:36:55,806 --> 0:36:56,916
letting you know that that

1267
00:36:56,916 --> 0:36:58,456
customer has opted to downgrade

1268
00:36:58,456 --> 0:36:59,176
their subscription.

1269
00:37:03,046 --> 0:37:04,176
If a customer has selected

1270
00:37:04,176 --> 0:37:06,246
another product, you understand

1271
00:37:06,246 --> 0:37:07,316
what they've been consuming on

1272
00:37:07,316 --> 0:37:08,396
the higher tier of service,

1273
00:37:08,926 --> 0:37:09,876
whether it be an annual

1274
00:37:09,876 --> 0:37:11,056
subscription where there's a

1275
00:37:11,056 --> 0:37:12,836
discount included by subscribing

1276
00:37:12,836 --> 0:37:14,236
for a longer duration of time,

1277
00:37:14,836 --> 0:37:16,766
or a higher tier of service that

1278
00:37:16,816 --> 0:37:18,286
the lower tier no longer has

1279
00:37:18,286 --> 0:37:20,226
access to specific pieces of

1280
00:37:20,266 --> 0:37:21,766
content that you know that

1281
00:37:21,766 --> 0:37:22,676
customer was watching.

1282
00:37:22,676 --> 0:37:26,596
So in this example, when you see

1283
00:37:26,786 --> 0:37:28,426
a customer has downgraded, you

1284
00:37:28,426 --> 0:37:29,836
can mark them eligible for an

1285
00:37:29,836 --> 0:37:30,576
upgrade offer.

1286
00:37:31,096 --> 0:37:34,926
When that customer returns back

1287
00:37:34,926 --> 0:37:37,576
into your application, you can

1288
00:37:37,786 --> 0:37:39,616
display a subscription offer

1289
00:37:39,846 --> 0:37:41,396
with a clear and concise call to

1290
00:37:41,396 --> 0:37:44,006
action stating what the offer is

1291
00:37:44,236 --> 0:37:45,286
and what they'll be getting by

1292
00:37:45,286 --> 0:37:46,426
accepting it.

1293
00:37:47,216 --> 0:37:49,156
We also have a great developer

1294
00:37:49,156 --> 0:37:51,466
example DashLane, which is

1295
00:37:51,466 --> 0:37:52,416
trying to get customers to

1296
00:37:52,416 --> 0:37:54,316
upgrade again to their premium

1297
00:37:54,316 --> 0:37:55,226
tier of service.

1298
00:37:58,116 --> 0:37:59,726
So that's an upgrade example.

1299
00:38:00,266 --> 0:38:03,296
Let's discuss customer service.

1300
00:38:06,046 --> 0:38:07,186
We all try our best to make

1301
00:38:07,256 --> 0:38:08,956
perfect software, but obviously

1302
00:38:08,956 --> 0:38:10,186
there are times when users may

1303
00:38:10,186 --> 0:38:12,666
experience an issue or outage or

1304
00:38:12,666 --> 0:38:14,156
some type of bug or downtime

1305
00:38:14,156 --> 0:38:15,076
within your subscription

1306
00:38:15,076 --> 0:38:15,486
product.

1307
00:38:16,756 --> 0:38:18,546
This user may decide to contact

1308
00:38:18,546 --> 0:38:19,346
you through your support

1309
00:38:19,346 --> 0:38:20,806
channels and let you know that

1310
00:38:20,806 --> 0:38:22,296
they had a less than optimal

1311
00:38:22,296 --> 0:38:22,816
experience.

1312
00:38:23,316 --> 0:38:26,686
If we reflect back on our user

1313
00:38:26,686 --> 0:38:29,486
table on your servers, if your

1314
00:38:29,486 --> 0:38:30,936
customer service agents have the

1315
00:38:30,936 --> 0:38:32,656
ability to look up that unique

1316
00:38:32,706 --> 0:38:34,926
customer, identify them as

1317
00:38:34,926 --> 0:38:36,966
offer-eligible, they can then

1318
00:38:36,966 --> 0:38:38,796
instruct that customer to

1319
00:38:38,796 --> 0:38:40,626
relaunch the app because they're

1320
00:38:40,626 --> 0:38:41,706
now offer-eligible.

1321
00:38:43,006 --> 0:38:45,646
You may potentially want to

1322
00:38:45,646 --> 0:38:46,946
display the subscription offer

1323
00:38:46,946 --> 0:38:48,196
on your settings screen.

1324
00:38:49,046 --> 0:38:51,486
Here we see an offer to redeem

1325
00:38:51,486 --> 0:38:53,616
your free month and an apology

1326
00:38:53,736 --> 0:38:55,076
for any interruption in service

1327
00:38:55,076 --> 0:38:56,246
that that customer might have

1328
00:38:56,246 --> 0:38:56,856
experienced.

1329
00:38:58,196 --> 0:39:00,186
When engaged upon, the customer

1330
00:38:58,196 --> 0:39:00,186
When engaged upon, the customer

1331
00:39:00,186 --> 0:39:02,566
is shown a subscription offer

1332
00:39:03,316 --> 0:39:04,736
with a clear and concise call to

1333
00:39:04,736 --> 0:39:05,126
action.

1334
00:39:06,186 --> 0:39:07,316
This is a great way to keep your

1335
00:39:07,316 --> 0:39:09,766
customers happy and appease any

1336
00:39:10,046 --> 0:39:11,186
that have had a poor experience

1337
00:39:11,186 --> 0:39:11,906
in your application.

1338
00:39:16,046 --> 0:39:17,396
You can also use Subscription

1339
00:39:17,396 --> 0:39:19,446
Offers to reward your most loyal

1340
00:39:19,446 --> 0:39:20,276
subscribers.

1341
00:39:20,786 --> 0:39:24,436
Here we see a customer that is

1342
00:39:24,436 --> 0:39:25,606
set to hit their 11th

1343
00:39:25,606 --> 0:39:26,626
consecutive renewal.

1344
00:39:27,416 --> 0:39:28,596
This is obviously an amazing

1345
00:39:28,596 --> 0:39:30,046
subscription customer for you as

1346
00:39:30,046 --> 0:39:30,596
a developer.

1347
00:39:31,236 --> 0:39:32,276
So we want to reward them.

1348
00:39:33,196 --> 0:39:35,716
If we look at our user tables on

1349
00:39:35,716 --> 0:39:37,646
your servers, you'll see that

1350
00:39:37,646 --> 0:39:38,876
we've been capturing renewal

1351
00:39:38,876 --> 0:39:39,306
periods.

1352
00:39:39,896 --> 0:39:41,616
And this is found via storing

1353
00:39:41,616 --> 0:39:42,556
information from the app

1354
00:39:42,556 --> 0:39:42,896
receipt.

1355
00:39:45,196 --> 0:39:46,486
If we reflect back to the

1356
00:39:46,486 --> 0:39:48,876
timeline of the customer, we now

1357
00:39:49,096 --> 0:39:50,636
can mark this customer as

1358
00:39:50,636 --> 0:39:52,646
loyalty offer-eligible because

1359
00:39:52,646 --> 0:39:54,096
they've crossed a threshold with

1360
00:39:54,126 --> 0:39:55,766
which we feel we want to reward

1361
00:39:55,766 --> 0:39:56,666
those customers.

1362
00:39:57,716 --> 0:39:59,356
The next time that customer

1363
00:39:59,356 --> 0:40:01,046
launches the application you can

1364
00:39:59,356 --> 0:40:01,046
launches the application you can

1365
00:40:01,046 --> 0:40:02,266
reward them for their service

1366
00:40:02,266 --> 0:40:03,956
and their loyalty by offering

1367
00:40:03,956 --> 0:40:04,846
them something like a one month

1368
00:40:04,846 --> 0:40:04,976
free.

1369
00:40:09,106 --> 0:40:10,466
Here we see a developer example

1370
00:40:10,466 --> 0:40:12,526
of Luminary Premium rewarding

1371
00:40:12,576 --> 0:40:14,166
their early Premium subscribers

1372
00:40:14,786 --> 0:40:16,256
with an additional two months of

1373
00:40:16,256 --> 0:40:18,656
service if they activate now.

1374
00:40:22,536 --> 0:40:25,116
Lastly, let's talk about a save

1375
00:40:25,116 --> 0:40:25,446
offer.

1376
00:40:26,846 --> 0:40:28,506
Save offer is very similar to a

1377
00:40:28,506 --> 0:40:30,466
retention offer.

1378
00:40:31,846 --> 0:40:33,866
Except you as a developer may

1379
00:40:33,866 --> 0:40:35,506
have information that leads you

1380
00:40:35,506 --> 0:40:36,886
to believe that this customer

1381
00:40:37,106 --> 0:40:37,926
may churn.

1382
00:40:38,606 --> 0:40:39,966
It's before they've opted to

1383
00:40:39,966 --> 0:40:41,996
take the action to navigate to

1384
00:40:41,996 --> 0:40:43,506
Manage Subscriptions and

1385
00:40:43,506 --> 0:40:44,506
potentially cancel.

1386
00:40:46,076 --> 0:40:47,926
If you see that one of these

1387
00:40:48,116 --> 0:40:49,756
customers that you feel has a

1388
00:40:49,756 --> 0:40:51,956
propensity to churn engages with

1389
00:40:52,006 --> 0:40:53,306
maybe a deep link that you've

1390
00:40:53,306 --> 0:40:54,576
placed in your application

1391
00:40:54,576 --> 0:40:56,836
settings to drive that customer

1392
00:40:57,026 --> 0:40:58,476
to Apple's Manage Subscriptions

1393
00:40:58,476 --> 0:41:00,576
infrastructure, you could

1394
00:40:58,476 --> 0:41:00,576
infrastructure, you could

1395
00:41:00,576 --> 0:41:02,666
alternatively decide to show a

1396
00:41:02,666 --> 0:41:03,776
subscription offer to that

1397
00:41:03,776 --> 0:41:05,436
customer before driving them

1398
00:41:05,436 --> 0:41:06,566
into the Manage Subscriptions

1399
00:41:06,566 --> 0:41:06,946
interface.

1400
00:41:11,046 --> 0:41:12,276
So those are six different

1401
00:41:12,276 --> 0:41:14,126
examples of how you could use

1402
00:41:14,126 --> 0:41:16,366
Subscription Offers to minimize

1403
00:41:16,366 --> 0:41:18,116
voluntary churn inside of your

1404
00:41:18,116 --> 0:41:18,806
applications.

1405
00:41:19,506 --> 0:41:21,596
But this is just the beginning

1406
00:41:21,596 --> 0:41:22,956
and I'm really excited to see

1407
00:41:22,956 --> 0:41:25,006
what amazing ideas you as

1408
00:41:25,006 --> 0:41:26,566
developers can come up with to

1409
00:41:26,566 --> 0:41:27,756
provide a great customer

1410
00:41:27,756 --> 0:41:29,636
experience to your subscribers

1411
00:41:29,636 --> 0:41:30,626
within your applications.

1412
00:41:35,046 --> 0:41:36,546
After Subscription Offers have

1413
00:41:36,546 --> 0:41:37,766
been distributed to customers,

1414
00:41:38,346 --> 0:41:40,086
the next step in this is

1415
00:41:40,216 --> 0:41:42,406
analyzing the performance of

1416
00:41:42,406 --> 0:41:43,356
your Subscription Offers.

1417
00:41:43,926 --> 0:41:45,536
And today, I'm excited to

1418
00:41:45,536 --> 0:41:47,766
announce that we've launched two

1419
00:41:47,846 --> 0:41:50,416
new reporting dashboards that

1420
00:41:50,416 --> 0:41:51,746
are meant to help you analyze

1421
00:41:51,746 --> 0:41:53,476
subscription activity: a

1422
00:41:53,476 --> 0:41:55,326
Subscription State Dashboard and

1423
00:41:55,326 --> 0:41:56,796
a Subscription Event Dashboard.

1424
00:41:57,306 --> 0:42:00,336
Let's take a look at App Store

1425
00:41:57,306 --> 0:42:00,336
Let's take a look at App Store

1426
00:42:00,336 --> 0:42:00,656
Connect.

1427
00:42:01,706 --> 0:42:03,036
If you navigate to the sales and

1428
00:42:03,036 --> 0:42:05,236
trends module, you will see that

1429
00:42:05,236 --> 0:42:06,506
we've launched a Subscription

1430
00:42:06,506 --> 0:42:07,486
State Dashboard.

1431
00:42:08,276 --> 0:42:09,926
This dashboard allows you to

1432
00:42:09,926 --> 0:42:11,816
understand your subscriber base

1433
00:42:12,186 --> 0:42:13,376
over time.

1434
00:42:14,176 --> 0:42:16,006
For example, you'll be able to

1435
00:42:16,006 --> 0:42:18,056
see exactly how many subscribers

1436
00:42:18,056 --> 0:42:20,076
you have in say a standard price

1437
00:42:20,506 --> 0:42:22,506
versus an introductory offer or

1438
00:42:22,506 --> 0:42:23,436
a subscription offer.

1439
00:42:24,956 --> 0:42:26,916
This is a great tool to see and

1440
00:42:26,916 --> 0:42:28,356
analyze your subscriber growth

1441
00:42:28,356 --> 0:42:29,466
over time and across different

1442
00:42:29,466 --> 0:42:29,956
territories.

1443
00:42:33,066 --> 0:42:34,796
Additionally, you can also use

1444
00:42:34,796 --> 0:42:37,836
this dashboard to see what

1445
00:42:38,146 --> 0:42:39,996
offers are being taken advantage

1446
00:42:39,996 --> 0:42:41,406
of by your customers inside of

1447
00:42:41,406 --> 0:42:41,976
your application.

1448
00:42:46,166 --> 0:42:47,516
We've also launched the new

1449
00:42:47,516 --> 0:42:49,226
Subscription Events Dashboard.

1450
00:42:49,976 --> 0:42:52,316
This allows you to see user

1451
00:42:52,316 --> 0:42:53,416
subscription or customer

1452
00:42:53,416 --> 0:42:55,006
subscription activity over time.

1453
00:42:56,266 --> 0:42:57,596
You can use this to see how well

1454
00:42:57,596 --> 0:42:58,826
customers are converting to the

1455
00:42:58,826 --> 0:42:59,846
standard price of your

1456
00:42:59,846 --> 0:43:02,156
subscription, or you can even

1457
00:42:59,846 --> 0:43:02,156
subscription, or you can even

1458
00:43:02,156 --> 0:43:03,666
use it to understand the ratio

1459
00:43:03,906 --> 0:43:06,176
of say new subscribers to

1460
00:43:06,176 --> 0:43:07,166
returning subscribers.

1461
00:43:11,046 --> 0:43:12,326
By applying the right filters,

1462
00:43:12,736 --> 0:43:13,776
you can also use this to

1463
00:43:13,776 --> 0:43:15,556
specifically see how a

1464
00:43:15,556 --> 0:43:17,036
particular subscription offer

1465
00:43:17,626 --> 0:43:19,456
won back previously unsubscribed

1466
00:43:19,496 --> 0:43:21,776
users and then you can use these

1467
00:43:21,776 --> 0:43:23,826
insights to inform and optimize

1468
00:43:23,826 --> 0:43:25,656
your Subscription Offers and how

1469
00:43:25,656 --> 0:43:27,276
you're distributing them over

1470
00:43:27,816 --> 0:43:27,916
time.

1471
00:43:31,046 --> 0:43:33,156
In summary, if you take anything

1472
00:43:33,156 --> 0:43:35,226
away from this session today, it

1473
00:43:35,226 --> 0:43:36,986
would be to obviously implement

1474
00:43:36,986 --> 0:43:37,806
Subscription Offers.

1475
00:43:38,446 --> 0:43:41,996
But you must implement them in

1476
00:43:41,996 --> 0:43:43,696
your app as well as on your

1477
00:43:43,696 --> 0:43:44,056
server.

1478
00:43:44,616 --> 0:43:47,426
We strongly encourage you to

1479
00:43:47,426 --> 0:43:49,046
implement detailed customer

1480
00:43:49,046 --> 0:43:49,996
eligibility rules.

1481
00:43:50,676 --> 0:43:51,906
By using information from the

1482
00:43:51,906 --> 0:43:54,926
receipt, our updated

1483
00:43:54,986 --> 0:43:56,336
server-to-server notifications

1484
00:43:56,336 --> 0:43:57,776
so that you can keep a real-time

1485
00:43:57,776 --> 0:43:59,606
pulse on customer activity.

1486
00:44:00,146 --> 0:44:03,216
As well as the data that you as

1487
00:44:03,216 --> 0:44:05,036
developers have that Apple does

1488
00:44:05,526 --> 0:44:05,626
not.

1489
00:44:08,046 --> 0:44:09,356
Then we encourage you to present

1490
00:44:09,446 --> 0:44:11,136
Subscription Offers to customers

1491
00:44:11,136 --> 0:44:11,856
contextually.

1492
00:44:11,956 --> 0:44:14,636
We hope that you do this so that

1493
00:44:14,636 --> 0:44:16,046
you provide the best customer

1494
00:44:16,046 --> 0:44:17,866
experience inside your

1495
00:44:17,866 --> 0:44:18,436
application.

1496
00:44:18,836 --> 0:44:22,156
And lastly, after your

1497
00:44:22,156 --> 0:44:23,556
Subscription Offers are deployed

1498
00:44:23,596 --> 0:44:25,216
to customers, you want to use

1499
00:44:25,216 --> 0:44:27,106
our two amazing new reporting

1500
00:44:27,106 --> 0:44:28,896
dashboards to monitor the

1501
00:44:28,896 --> 0:44:29,866
performance of these offers over

1502
00:44:29,866 --> 0:44:29,976
time.

1503
00:44:35,046 --> 0:44:35,986
For more information, I'd like

1504
00:44:35,986 --> 0:44:37,336
to welcome you all to our lab

1505
00:44:37,336 --> 0:44:38,496
immediately following the

1506
00:44:38,496 --> 0:44:41,146
presentation today at 3:00 PM.

1507
00:44:41,916 --> 0:44:44,106
And I'd like to thank you all

1508
00:44:44,106 --> 0:44:45,336
for attending the Subscription

1509
00:44:45,336 --> 0:44:46,766
Offers session and I'm really

1510
00:44:46,766 --> 0:44:48,006
excited to see what you guys can

1511
00:44:48,006 --> 0:44:49,256
bake into your application to

1512
00:44:49,256 --> 0:44:50,496
provide a great experience for

1513
00:44:50,496 --> 0:44:51,296
our shared customers.

1514
00:44:51,706 --> 0:44:51,976
Thank you.

1515
00:44:52,516 --> 0:44:55,500
[ Applause ]
