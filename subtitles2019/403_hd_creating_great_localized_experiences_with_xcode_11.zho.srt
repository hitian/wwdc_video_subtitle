1
00:00:10,544 --> 0:00:11,378
好的

2
00:00:12,746 --> 0:00:13,580
早上好

3
00:00:14,715 --> 0:00:16,550
谢谢你来参加这次演讲

4
00:00:16,917 --> 0:00:17,985
我是Kulpreet

5
00:00:18,051 --> 0:00:20,521
我是本地化的一名软件工程师

6
00:00:20,587 --> 0:00:22,556
我将和我的同事Vivian

7
00:00:22,623 --> 0:00:23,590
和Arthur一起来做本场演讲

8
00:00:25,459 --> 0:00:26,293
本场演讲中

9
00:00:26,360 --> 0:00:29,129
我会介绍一些我们平台上的

10
00:00:29,196 --> 0:00:30,364
非常棒的本地化新功能

11
00:00:30,964 --> 0:00:34,535
Vivian和Arthur将介绍

12
00:00:34,601 --> 0:00:38,071
包含一些本地化工作流程的提升

13
00:00:38,138 --> 0:00:39,640
本地化图片

14
00:00:39,706 --> 0:00:43,443
以及如何使用测试来

15
00:00:43,510 --> 0:00:45,045
为你的app创建多语言截图

16
00:00:47,080 --> 0:00:52,719
今天 我们预估超过70%的用户

17
00:00:53,554 --> 0:00:57,357
本地化是扩展app新市场

18
00:00:57,424 --> 0:00:59,860
的好机会

19
00:01:01,962 --> 0:01:02,930
在Apple

20
00:01:02,996 --> 0:01:05,666
我们非常关注为全球的

21
00:01:05,732 --> 0:01:08,569
用户带来优质的用户体验

22
00:01:08,635 --> 0:01:09,503
今年

23
00:01:09,570 --> 0:01:12,573
我们为多语种和全球用户

24
00:01:12,639 --> 0:01:15,542
提升了用户体验和引入了新功能

25
00:01:16,210 --> 0:01:17,845
举几个例子

26
00:01:17,911 --> 0:01:22,783
在iOS 13上 我们的键盘

27
00:01:23,083 --> 0:01:25,886
我敢确定你的母语是其中之一

28
00:01:26,787 --> 0:01:28,088
我们也创建了一些新的设置流程

29
00:01:28,155 --> 0:01:31,892
来引导多语种用户正确设置语言

30
00:01:33,193 --> 0:01:36,597
现在其中之一的功能是

31
00:01:36,663 --> 0:01:39,099
我们来深入了解一下

32
00:01:40,334 --> 0:01:44,438
在iOS 13 你可以在app中

33
00:01:44,505 --> 0:01:46,139
为多语种用户设计一个新的设置页面

34
00:01:46,940 --> 0:01:50,444
我很高兴告诉大家 用户现在可以

35
00:01:50,511 --> 0:01:52,713
在系统语言之外单独

36
00:01:57,217 --> 0:01:58,819
如果一个用户

37
00:01:58,886 --> 0:02:02,122
设置也会同步到相应的

38
00:01:58,886 --> 0:02:02,122
设置也会同步到相应的

39
00:02:02,923 --> 0:02:04,424
相似地 在macOS

40
00:02:04,491 --> 0:02:06,593
用户也能通过语言和地区偏好

41
00:02:06,660 --> 0:02:08,662
在app中设置语言了

42
00:02:10,464 --> 0:02:13,700
这很重要

43
00:02:13,767 --> 0:02:17,137
用户会偏爱在不同的

44
00:02:17,738 --> 0:02:19,072
比如在香港地区

45
00:02:19,139 --> 0:02:21,608
一些人可能习惯阅读中文新闻

46
00:02:21,675 --> 0:02:24,144
即使他们用英文来处理银行业务

47
00:02:25,379 --> 0:02:29,183
在印度 一个学生会在学校学习英语

48
00:02:29,249 --> 0:02:32,152
即使他们回家和家人们说北印度语

49
00:02:32,953 --> 0:02:36,790
app是我们每天都会

50
00:02:36,857 --> 0:02:39,793
这个新设置允许用户选择一个

51
00:02:39,860 --> 0:02:42,162
他们使用你app时偏爱的语言

52
00:02:43,564 --> 0:02:46,900
现在 如果你的本地化使用的

53
00:02:46,967 --> 0:02:50,737
你马上就能实现这个功能

54
00:02:51,071 --> 0:02:52,573
但你要留意一些事情

55
00:02:52,639 --> 0:02:54,775
来让用户更好地使用你的app

56
00:02:56,210 --> 0:03:00,647
首先 不要尝试手动在代码中

57
00:02:56,210 --> 0:03:00,647
首先 不要尝试手动在代码中

58
00:03:00,948 --> 0:03:02,649
我们的API为保证用户获取到

59
00:03:02,716 --> 0:03:06,186
正确的语言和字体回退做了很多工作

60
00:03:06,653 --> 0:03:09,857
如果你需要在你的app添加

61
00:03:09,923 --> 0:03:11,692
我们推荐你在设置中添加

62
00:03:11,758 --> 0:03:14,494
用户能在那里切换你app的语言

63
00:03:16,096 --> 0:03:20,200
接下来 当用户改变了

64
00:03:21,568 --> 0:03:24,204
你的app会重启 切换到目标语言

65
00:03:24,838 --> 0:03:28,475
现在 为了让用户

66
00:03:28,542 --> 0:03:31,712
我们推荐你使用

67
00:03:32,980 --> 0:03:36,483
在iOS 13

68
00:03:36,550 --> 0:03:38,485
有了新的状态恢复API

69
00:03:38,552 --> 0:03:42,222
想要了解如何使用它们的更多信息

70
00:03:44,391 --> 0:03:46,860
最后 在你的app中将所有的内容

71
00:03:46,927 --> 0:03:50,397
连贯地用一种语言表示很重要

72
00:03:50,664 --> 0:03:53,800
如果你要加载客户端或服务端的资源

73
00:03:53,867 --> 0:03:56,336
一些有用的API会帮你判定

74
00:03:56,403 --> 0:03:59,039
加载哪种语言

75
00:03:59,773 --> 0:04:01,441
我们来看看其中的一些

76
00:03:59,773 --> 0:04:01,441
我们来看看其中的一些

77
00:04:02,442 --> 0:04:04,811
本地的API对于获取用户的

78
00:04:04,878 --> 0:04:07,414
语言和地区偏好非常有用

79
00:04:07,848 --> 0:04:11,318
Locale.PreferredLanguages

80
00:04:11,385 --> 0:04:13,253
语言列表

81
00:04:13,654 --> 0:04:16,190
现在 这个列表可能对你有用

82
00:04:16,255 --> 0:04:21,094
如果你需要创建一个处理多语种

83
00:04:21,161 --> 0:04:22,362
内容的app 以及需要获取

84
00:04:22,429 --> 0:04:25,465
所有语言的一些字体等资源文件

85
00:04:25,999 --> 0:04:29,369
另一个需要注意的点是

86
00:04:29,436 --> 0:04:33,407
它会返回一个用户偏爱的语言列表

87
00:04:33,473 --> 0:04:36,743
不论是否是你应用程序包支持的语言

88
00:04:36,810 --> 0:04:40,047
所以它并不适用于获取

89
00:04:40,848 --> 0:04:43,250
为了获取当前app运行的语言

90
00:04:43,317 --> 0:04:45,018
我们可以使用Bundle API

91
00:04:45,819 --> 0:04:49,022
Bundle API适用于

92
00:04:49,389 --> 0:04:52,192
Bundle.main.preferredLocalizations

93
00:04:52,259 --> 0:04:55,295
兼顾用户偏爱的语言

94
00:04:55,362 --> 0:04:58,265
和app程序包支持的语言

95
00:04:58,332 --> 0:05:01,635
会根据用户的偏好

96
00:04:58,332 --> 0:05:01,635
会根据用户的偏好

97
00:05:01,702 --> 0:05:03,303
你的app程序包

98
00:05:04,404 --> 0:05:05,706
现在 如果你有一个外部列表

99
00:05:05,772 --> 0:05:08,141
例如你从服务器上加载了

100
00:05:08,208 --> 0:05:10,477
你的服务器有

101
00:05:10,544 --> 0:05:14,248
使用Bundle.preferredLocalizationsfrom

102
00:05:14,314 --> 0:05:17,618
它会包含你服务器的第三种语言

103
00:05:19,653 --> 0:05:21,655
现在 为了帮助你了解这些功能

104
00:05:21,722 --> 0:05:23,624
以及它能为你的app带来什么

105
00:05:23,690 --> 0:05:25,492
我来用一个示例讲解

106
00:05:34,902 --> 0:05:35,736
好的

107
00:05:36,436 --> 0:05:38,472
去年 我们开发了Vacation Planet

108
00:05:38,872 --> 0:05:41,675
这是第一个星际旅行预订app

109
00:05:41,742 --> 0:05:43,076
我们已经完善了这个app

110
00:05:43,143 --> 0:05:45,579
完整预订旅行的功能体验

111
00:05:46,146 --> 0:05:47,681
我们有这个发现标签页

112
00:05:47,748 --> 0:05:49,550
里面的集成页面展示了

113
00:05:49,616 --> 0:05:52,219
一些我们提供的很棒的缩略图

114
00:05:52,286 --> 0:05:58,358
比如这个去往浪漫的Pluto

115
00:06:00,427 --> 0:06:02,763
现在 一些季节限定的产品比如

116
00:06:02,829 --> 0:06:05,098
WWDC Afterparty

117
00:06:05,165 --> 0:06:06,633
因为这个季节限定产品

118
00:06:06,700 --> 0:06:08,936
的内容是从我们的服务器拉取的

119
00:06:09,002 --> 0:06:10,838
所以 这张图片和这个很棒的关于

120
00:06:10,904 --> 0:06:13,273
首个Interstellar Bash

121
00:06:13,340 --> 0:06:15,342
以及我们如何在船上…

122
00:06:15,409 --> 0:06:19,079
我们将要在船上的一个海鲜餐厅

123
00:06:19,146 --> 0:06:20,347
Codable

124
00:06:20,414 --> 0:06:23,717
都是完全从服务器上下载的

125
00:06:24,017 --> 0:06:25,953
现在 读完这些介绍后

126
00:06:26,019 --> 0:06:28,222
我认为很棒 我想要预订

127
00:06:28,555 --> 0:06:30,057
但是 你知道的

128
00:06:30,123 --> 0:06:33,227
WWDC的出席者来自世界各地

129
00:06:33,293 --> 0:06:35,195
他们可能想要用不同的语言

130
00:06:35,262 --> 0:06:36,663
来预定行程

131
00:06:37,130 --> 0:06:39,433
所以 我么接下来要做的是在下面的

132
00:06:39,499 --> 0:06:40,868
这里有一个表视图单元格

133
00:06:40,934 --> 0:06:43,103
展示了现在app运行的语言

134
00:06:43,504 --> 0:06:44,872
当我点击它

135
00:06:44,938 --> 0:06:46,406
它会带我进入设置界面

136
00:06:46,473 --> 0:06:47,774
我点击来查看一个

137
00:06:47,841 --> 0:06:50,444
我app所支持的所有语言列表

138
00:06:50,511 --> 0:06:52,513
我来将它改变为法语

139
00:06:52,579 --> 0:06:56,416
当我返回后 你看

140
00:06:56,483 --> 0:06:58,318
但当我返回到

141
00:06:58,385 --> 0:07:01,088
app会重启 它现在变成法语了

142
00:06:58,385 --> 0:07:01,088
app会重启 它现在变成法语了

143
00:07:05,526 --> 0:07:06,793
现在 你会注意到

144
00:07:06,860 --> 0:07:09,029
它回到了我离开时候的界面

145
00:07:09,096 --> 0:07:12,432
这是因为我使用了状态修复的API

146
00:07:13,033 --> 0:07:16,069
你能看到所有我们的字符串

147
00:07:16,136 --> 0:07:18,005
都是法语 很好

148
00:07:18,071 --> 0:07:20,908
但当我回到服务端下载的内容

149
00:07:20,974 --> 0:07:23,076
我看到它还是英语

150
00:07:23,143 --> 0:07:24,211
这样是有问题的

151
00:07:24,278 --> 0:07:25,846
因为我们希望我们app的

152
00:07:25,913 --> 0:07:27,881
我们想要他们的app是同一种语言

153
00:07:28,815 --> 0:07:30,884
所以 我们来看一下接下来要做什么

154
00:07:32,386 --> 0:07:34,922
这里 在我们的几何视图控制器里

155
00:07:34,988 --> 0:07:37,157
我有这个方法

156
00:07:37,224 --> 0:07:39,726
从服务器下载内容

157
00:07:39,793 --> 0:07:40,994
当我们下载内容时

158
00:07:41,061 --> 0:07:42,696
我们需要传language的值

159
00:07:42,763 --> 0:07:43,931
因为服务器需要知道

160
00:07:43,997 --> 0:07:46,466
我们下载内容的语言

161
00:07:47,067 --> 0:07:48,836
你在这能看到我传递的语言是

162
00:07:48,902 --> 0:07:51,238
Locale.preferredLanguages.first

163
00:07:51,538 --> 0:07:53,473
我之前提到过的

164
00:07:53,540 --> 0:07:56,376
不管我app支持的语言

165
00:07:56,443 --> 0:07:59,479
会返回一个用户偏爱的语言

166
00:07:59,546 --> 0:08:01,148
所以 这可能是我app

167
00:07:59,546 --> 0:08:01,148
所以 这可能是我app

168
00:08:01,215 --> 0:08:03,483
不怎么支持的波斯语

169
00:08:04,551 --> 0:08:06,520
现在 我最好考虑

170
00:08:06,587 --> 0:08:08,188
服务端支持的语言

171
00:08:08,255 --> 0:08:10,390
我的应用包支持的语言

172
00:08:10,457 --> 0:08:12,492
用户偏爱的顺序

173
00:08:13,026 --> 0:08:17,631
所以 我要开始从服务器支持的语言

174
00:08:17,698 --> 0:08:18,832
你能在这里看到

175
00:08:19,299 --> 0:08:20,934
接着当我使用包API时

176
00:08:21,001 --> 0:08:24,805
那个类方法来自

177
00:08:24,872 --> 0:08:27,708
我会传给

178
00:08:27,774 --> 0:08:29,276
针对那段内容 现在的第一个元素是

179
00:08:29,343 --> 0:08:34,381
向服务器请求的

180
00:08:34,448 --> 0:08:35,948
最佳语言

181
00:08:37,251 --> 0:08:39,186
所以 我来重新构建它

182
00:08:43,957 --> 0:08:46,360
等几秒钟重启

183
00:08:46,760 --> 0:08:49,329
你现在会看到图片和所有内容

184
00:08:49,396 --> 0:08:50,397
都是法语了

185
00:08:50,464 --> 0:08:51,598
这样很棒吧？

186
00:08:51,665 --> 0:08:52,633
很酷 我们可以准备预订

187
00:08:52,699 --> 0:08:55,302
我等不及在Interstellar Bash上

188
00:08:56,637 --> 0:08:57,471
好的

189
00:08:57,938 --> 0:08:59,273
来总结一下

190
00:08:59,339 --> 0:09:03,377
app语言设置能运行用户

191
00:08:59,339 --> 0:09:03,377
app语言设置能运行用户

192
00:09:05,145 --> 0:09:06,313
启动设置

193
00:09:06,380 --> 0:09:10,117
是让你的用户来切换你app语言的

194
00:09:11,251 --> 0:09:13,654
使用状态修复为用户

195
00:09:13,720 --> 0:09:16,123
带来无缝切换语言的体验

196
00:09:16,823 --> 0:09:20,227
最后 如果你要自定义或在服务端

197
00:09:20,294 --> 0:09:24,264
请确定使用正确的包或

198
00:09:26,166 --> 0:09:28,969
对于所有的这些新功能 我都很兴奋

199
00:09:29,036 --> 0:09:30,804
我们今年做出了提升

200
00:09:30,871 --> 0:09:32,172
我期待看到你在app中

201
00:09:32,239 --> 0:09:35,209
会为国际用户带来什么

202
00:09:35,542 --> 0:09:39,012
现在我们已经简化了实现方法

203
00:09:39,079 --> 0:09:40,714
有请Vivian

204
00:09:46,620 --> 0:09:47,487
谢谢Kulpreet

205
00:09:47,554 --> 0:09:49,890
现在 我们来聊一下Xcode

206
00:09:49,957 --> 0:09:52,926
中的一些本地化工具的提升功能

207
00:09:53,427 --> 0:09:57,197
今年 我们根据大家的需求

208
00:09:57,264 --> 0:10:00,334
所以这会像是阅读一份愿望清单

209
00:09:57,264 --> 0:10:00,334
所以这会像是阅读一份愿望清单

210
00:10:00,400 --> 0:10:03,270
首先 性能

211
00:10:04,304 --> 0:10:05,772
我非常兴奋地宣布

212
00:10:05,839 --> 0:10:09,743
导出很多本地化

213
00:10:09,810 --> 0:10:11,078
的用户界面构建器文件项目

214
00:10:11,144 --> 0:10:16,149
比之前平均快了15倍

215
00:10:20,621 --> 0:10:23,657
所以 这意味着 如果导出

216
00:10:24,124 --> 0:10:26,627
现在只需4秒了

217
00:10:28,962 --> 0:10:33,066
我们是通过重新设计了

218
00:10:33,133 --> 0:10:36,603
所以你的用户界面构建器文件越多

219
00:10:36,670 --> 0:10:39,706
你会看到越大的改进效果

220
00:10:39,773 --> 0:10:43,076
同时也加快了你的工作流程

221
00:10:43,143 --> 0:10:47,281
无需再为直接调用genstrings

222
00:10:47,347 --> 0:10:51,385
我们使用xcodebuild

223
00:10:51,451 --> 0:10:52,986
和importlocalizations

224
00:10:53,053 --> 0:10:55,656
取代了原有的方法

225
00:10:56,423 --> 0:10:57,391
接下来

226
00:10:58,058 --> 0:10:59,960
Mac上的iPad app

227
00:11:00,027 --> 0:11:04,765
你可能已经很兴奋能在Mac上

228
00:11:04,831 --> 0:11:08,435
但可能有一些字符串不被支持

229
00:11:08,502 --> 0:11:10,103
或其他一些事情 比如

230
00:11:10,404 --> 0:11:11,238
点击这里

231
00:11:11,305 --> 0:11:14,374
但用户现在需要使用

232
00:11:14,441 --> 0:11:15,275
没有人会点击

233
00:11:15,342 --> 0:11:16,476
或在新闻中

234
00:11:16,977 --> 0:11:20,314
你能控制Siri在设置中的推荐

235
00:11:20,380 --> 0:11:21,682
当你使用iPad时

236
00:11:21,748 --> 0:11:26,053
但app是Mac的偏好设置

237
00:11:26,553 --> 0:11:27,688
当然

238
00:11:28,455 --> 0:11:32,593
你会想要使用代码中已有的

239
00:11:32,659 --> 0:11:34,828
NSLocalizedString

240
00:11:35,495 --> 0:11:36,964
所以 为了实现它

241
00:11:37,030 --> 0:11:42,703
我们为特定设备的字符串引入了一个

242
00:11:43,437 --> 0:11:47,975
这个规则结合了复数

243
00:11:48,041 --> 0:11:50,944
你可以在你已有的

244
00:11:51,011 --> 0:11:54,314
甚至stringsdict文件中

245
00:11:56,183 --> 0:11:59,887
所以 新规则是

246
00:12:00,354 --> 0:12:07,327
支持的设备是Apple TV、

247
00:12:07,394 --> 0:12:10,764
iPhone、iPod和Mac

248
00:12:10,831 --> 0:12:14,401
所以 它不仅能在Mac的

249
00:12:15,636 --> 0:12:18,071
你的stringsdict

250
00:12:18,138 --> 0:12:21,475
上面的已有字符串关键字

251
00:12:21,808 --> 0:12:25,612
接下来的新规则

252
00:12:25,679 --> 0:12:27,648
和在一个通过设备关键字的所有

253
00:12:27,714 --> 0:12:32,886
特殊设备的字符串序列的字典内部

254
00:12:33,353 --> 0:12:35,589
想要了解Mac上的

255
00:12:35,656 --> 0:12:36,823
请观看接下来的演讲

256
00:12:36,890 --> 0:12:39,826
将Mac的iPad app

257
00:12:40,427 --> 0:12:41,395
接下来

258
00:12:41,995 --> 0:12:43,230
设置包

259
00:12:45,265 --> 0:12:49,369
你现在可以在Xcode本地化目录

260
00:12:49,436 --> 0:12:53,841
所以在项目中本地化将

261
00:12:54,875 --> 0:12:57,544
我们做的非常重要地提升之一是

262
00:12:57,611 --> 0:13:00,280
Xcode的本地化工具

263
00:12:57,611 --> 0:13:00,280
Xcode的本地化工具

264
00:13:00,347 --> 0:13:04,051
是你能使用的本地化资源

265
00:13:04,351 --> 0:13:05,686
所以 到现在

266
00:13:06,086 --> 0:13:07,387
为了本地化一张图片

267
00:13:07,454 --> 0:13:11,692
它需要成为你项目的一个独立文件

268
00:13:12,025 --> 0:13:17,297
这意味着在你的资产目录

269
00:13:17,364 --> 0:13:20,501
四处分散的本地化的文件

270
00:13:20,567 --> 0:13:23,303
所以 我很兴奋来宣布现在开始

271
00:13:23,370 --> 0:13:27,407
你能直接在资产目录

272
00:13:32,179 --> 0:13:36,817
所以 你现在能本地化你的图片集

273
00:13:37,117 --> 0:13:39,019
观察并发状况

274
00:13:39,353 --> 0:13:41,655
Apple TV图像栈

275
00:13:42,089 --> 0:13:43,924
雪碧图集

276
00:13:44,458 --> 0:13:47,494
Game Center控制面板

277
00:13:47,561 --> 0:13:50,531
以及新的符号集

278
00:13:50,864 --> 0:13:52,799
我们来看一下如何实现

279
00:13:54,101 --> 0:13:55,969
在资产目录编辑器中

280
00:13:56,036 --> 0:14:00,040
当你在属性检查器

281
00:13:56,036 --> 0:14:00,040
当你在属性检查器

282
00:14:00,107 --> 0:14:02,442
你就会发现一个本地化按钮

283
00:14:02,809 --> 0:14:03,677
点击它

284
00:14:03,744 --> 0:14:05,612
我们为内容.JSON的资产添加

285
00:14:05,679 --> 0:14:08,382
本地化属性

286
00:14:08,615 --> 0:14:11,952
你可以导出一个

287
00:14:12,953 --> 0:14:15,289
不过 如果你是多语种

288
00:14:15,355 --> 0:14:18,192
你自己本地化了一些文件

289
00:14:18,492 --> 0:14:21,862
或你移动一些已经本地化的图片

290
00:14:22,062 --> 0:14:23,864
到资产目录

291
00:14:24,364 --> 0:14:26,033
当你点击这个按钮

292
00:14:26,500 --> 0:14:29,069
它会显示你项目中所有

293
00:14:29,136 --> 0:14:32,372
本地化过文件的复选框

294
00:14:33,307 --> 0:14:34,875
检查其中的一些

295
00:14:35,876 --> 0:14:39,012
它会在资产目录编辑器

296
00:14:39,079 --> 0:14:43,884
所以你能拖拽本地化的图片到

297
00:14:44,751 --> 0:14:46,887
那么 新的符号们会怎样呢？

298
00:14:47,221 --> 0:14:51,058
SF系统符号已经被本地化了

299
00:14:51,124 --> 0:14:52,993
你无需再做其他工作

300
00:14:53,894 --> 0:14:56,663
自定义符号也能被本地化

301
00:14:56,730 --> 0:14:58,632
你能设置方向

302
00:14:58,699 --> 0:15:01,201
或者你只需要它们

303
00:14:58,699 --> 0:15:01,201
或者你只需要它们

304
00:15:01,268 --> 0:15:02,769
比如阿拉伯语和希伯来语

305
00:15:02,836 --> 0:15:07,741
或者你能在相同图片

306
00:15:07,808 --> 0:15:11,411
你会发现在属性检查器有

307
00:15:12,012 --> 0:15:13,247
了解符号的更多内容

308
00:15:13,313 --> 0:15:17,284
可以今天晚些时候参加

309
00:15:18,552 --> 0:15:19,620
接下来

310
00:15:19,686 --> 0:15:22,222
我想要在示例中向你展示实际操作

311
00:15:28,562 --> 0:15:30,130
现在 你可能留意到

312
00:15:30,197 --> 0:15:33,033
我们并没有完全本地化剩余的图片

313
00:15:33,100 --> 0:15:34,768
现在我们来完成它

314
00:15:35,335 --> 0:15:36,870
如果我进入Xcode

315
00:15:36,937 --> 0:15:38,505
我能找到我的资产目录

316
00:15:38,572 --> 0:15:41,542
我们来修复这张瑜伽图片

317
00:15:41,608 --> 0:15:43,944
这是月球上非常棒的瑜伽疗养所

318
00:15:44,011 --> 0:15:47,948
你能感觉心理和身体上

319
00:15:49,249 --> 0:15:52,586
所以 我只需打开属性检查器

320
00:15:52,653 --> 0:15:54,254
点击本地化

321
00:15:55,055 --> 0:15:57,591
保存 就好了

322
00:15:57,658 --> 0:16:00,961
我已经为我其他的旅行指南

323
00:15:57,658 --> 0:16:00,961
我已经为我其他的旅行指南

324
00:16:01,895 --> 0:16:05,599
但我有一张已经被本地化的图片

325
00:16:05,666 --> 0:16:08,335
我想要把它移到我的资产目录

326
00:16:08,402 --> 0:16:11,772
利用资产目录所有很棒的功能

327
00:16:11,839 --> 0:16:15,309
比如来指定一个不同的外观

328
00:16:15,809 --> 0:16:17,010
这超级简单

329
00:16:17,077 --> 0:16:20,981
我只需将我的旧图片拖入到资产目录

330
00:16:21,782 --> 0:16:24,451
Xcode已经为相同名字的旧资源

331
00:16:24,518 --> 0:16:27,888
创建了一个新的图片集

332
00:16:27,955 --> 0:16:31,124
所以我甚至不需要在故事板

333
00:16:31,191 --> 0:16:32,426
它就能工作

334
00:16:32,759 --> 0:16:35,295
现在 我也想要将我的本地化文件

335
00:16:35,362 --> 0:16:37,297
我点击本地化

336
00:16:38,532 --> 0:16:42,703
核对当前的语言

337
00:16:43,504 --> 0:16:44,638
然后保存

338
00:16:45,305 --> 0:16:47,374
现在 我能删除我的项目

339
00:16:47,975 --> 0:16:49,943
和硬盘里的旧文件

340
00:16:50,744 --> 0:16:53,814
好了 一切都准备好了

341
00:16:53,881 --> 0:16:57,317
我现在能导出一个

342
00:16:57,651 --> 0:17:00,554
这和Xcode 10工作流程一样

343
00:16:57,651 --> 0:17:00,554
这和Xcode 10工作流程一样

344
00:17:00,621 --> 0:17:03,190
我选择项目 来到编辑器

345
00:17:03,657 --> 0:17:05,459
为本地化导出

346
00:17:08,228 --> 0:17:10,396
我们现在来完成法语

347
00:17:10,464 --> 0:17:11,832
我不需要其他多余的

348
00:17:12,799 --> 0:17:14,667
好的 导出

349
00:17:15,836 --> 0:17:17,404
我们来看看我们得到了什么

350
00:17:19,940 --> 0:17:23,010
好的 这是我的Xcode的

351
00:17:23,076 --> 0:17:25,913
我能将它发送到我的本地化工具

352
00:17:26,180 --> 0:17:27,781
我找到了我的本地化工具

353
00:17:28,582 --> 0:17:29,616
我将它打开

354
00:17:29,683 --> 0:17:34,821
我知道我能访问本地化文件

355
00:17:34,888 --> 0:17:38,192
所以 我们在这里得到了xliff

356
00:17:38,258 --> 0:17:39,459
我知道怎么做

357
00:17:39,526 --> 0:17:42,029
我知道它包含项目所有的字符串

358
00:17:42,095 --> 0:17:43,664
但还有什么呢？

359
00:17:44,498 --> 0:17:46,667
我们有一个资产目录

360
00:17:46,867 --> 0:17:50,170
这是一个完整的资产目录

361
00:17:50,237 --> 0:17:53,974
我能将它拖到另一个

362
00:17:54,041 --> 0:17:58,846
但本地化工具不关心这个文件

363
00:17:58,912 --> 0:18:01,481
所以 它是唯一的本地化内容

364
00:17:58,912 --> 0:18:01,481
所以 它是唯一的本地化内容

365
00:18:01,782 --> 0:18:04,151
只针对这个语言环境

366
00:18:04,918 --> 0:18:07,688
现在 当前情况下

367
00:18:07,754 --> 0:18:12,392
现在这里只有英文的复制文件

368
00:18:12,459 --> 0:18:14,294
这是为了让本地化工具能更方便工作

369
00:18:14,361 --> 0:18:16,864
它们能直接使用 开始编辑

370
00:18:17,764 --> 0:18:21,602
为了节省时间 我已经有一些

371
00:18:22,135 --> 0:18:23,737
我们来看看它们返回了什么

372
00:18:24,204 --> 0:18:27,508
打开我最喜爱的本地化工具的目录

373
00:18:30,477 --> 0:18:32,946
我们能看到一边是所有图片

374
00:18:34,615 --> 0:18:39,386
的英文版本 另一边是法语版本

375
00:18:40,087 --> 0:18:43,056
我们来将它导入到项目中

376
00:18:43,123 --> 0:18:44,525
回到Xcode

377
00:18:44,791 --> 0:18:47,561
还是和Xcode 10一样的

378
00:18:47,628 --> 0:18:48,795
选择项目

379
00:18:48,996 --> 0:18:50,030
来到编辑器

380
00:18:50,397 --> 0:18:52,266
倒入本地化

381
00:18:52,332 --> 0:18:55,602
选择它

382
00:18:55,669 --> 0:18:58,539
选择导入 很棒

383
00:18:58,939 --> 0:19:00,908
那么 现在 我要来到我的资产目录

384
00:18:58,939 --> 0:19:00,908
那么 现在 我要来到我的资产目录

385
00:19:02,776 --> 0:19:07,981
我看到 现在我的图片有两个版本

386
00:19:08,048 --> 0:19:09,449
都在一个地方

387
00:19:12,386 --> 0:19:15,088
但是 它有点小

388
00:19:15,155 --> 0:19:17,057
现在我们看到大了一点点

389
00:19:20,394 --> 0:19:22,229
所以 这次当我们回到app

390
00:19:22,296 --> 0:19:26,600
我们现在应该能看到

391
00:19:27,067 --> 0:19:28,602
我们法语标题的旅行指南了

392
00:19:33,373 --> 0:19:35,809
看吧 真好看

393
00:19:41,782 --> 0:19:44,685
我们回到幻灯片

394
00:19:48,622 --> 0:19:53,293
我们刚看到了Xcode的

395
00:19:53,360 --> 0:19:55,996
用户界面构建器文件的导出和导入

396
00:19:56,063 --> 0:19:57,965
现在更快了

397
00:19:59,032 --> 0:20:02,636
这有一则新stringsdict规则

398
00:19:59,032 --> 0:20:02,636
这有一则新stringsdict规则

399
00:20:04,004 --> 0:20:06,740
现在设置包本地化更简单了

400
00:20:08,008 --> 0:20:12,412
符号和图片能在资产目录下本地化了

401
00:20:12,713 --> 0:20:15,315
现在 当然

402
00:20:15,382 --> 0:20:18,819
你会想要测试所有本地化的功能

403
00:20:19,086 --> 0:20:21,021
我们也简化了步骤

404
00:20:21,421 --> 0:20:24,491
有请Arthur来为大家讲解

405
00:20:27,828 --> 0:20:28,662
谢谢Vivian

406
00:20:28,729 --> 0:20:30,330
（使用XCTest来本地化截屏）

407
00:20:31,064 --> 0:20:33,300
现在 我们来了解如何利用UI测试

408
00:20:33,367 --> 0:20:35,435
的优势来测试本地化

409
00:20:36,470 --> 0:20:39,673
测试是开发周期一个重要的部分

410
00:20:39,740 --> 0:20:41,675
它耗费时间和资源

411
00:20:41,742 --> 0:20:44,077
但是当你添加新功能时

412
00:20:44,144 --> 0:20:45,445
和检测问题

413
00:20:45,512 --> 0:20:46,547
协助回归测试很重要

414
00:20:46,613 --> 0:20:49,149
在你发布你产品给用户之前

415
00:20:51,818 --> 0:20:53,820
如果你的app支持超过一种语言

416
00:20:53,887 --> 0:20:56,456
你必须测试所有语言特征的问题

417
00:20:56,890 --> 0:20:58,258
剪辑的字符串

418
00:20:59,059 --> 0:21:00,260
截断的内容

419
00:20:59,059 --> 0:21:00,260
截断的内容

420
00:21:01,728 --> 0:21:02,996
重叠的布局

421
00:21:03,430 --> 0:21:06,033
或甚至从右到左特定的语言

422
00:21:06,099 --> 0:21:07,701
比如阿拉伯语和希伯来语

423
00:21:09,703 --> 0:21:13,874
现在 如果你想要测试

424
00:21:15,175 --> 0:21:17,211
你支持的所有语言

425
00:21:18,445 --> 0:21:20,848
你的测试度量会重复探索

426
00:21:21,849 --> 0:21:25,619
你很容易就会遇到

427
00:21:26,253 --> 0:21:27,621
你的测试人员手动覆盖所有的

428
00:21:27,688 --> 0:21:30,324
测试场景会非常难

429
00:21:30,390 --> 0:21:33,827
所以 最重要的是在你项目中

430
00:21:33,894 --> 0:21:36,096
来减轻质保的体力劳动负荷

431
00:21:38,065 --> 0:21:39,233
在Xcode 11

432
00:21:40,334 --> 0:21:43,670
覆盖所有的测试计划

433
00:21:43,737 --> 0:21:44,771
的自动化测试变得简单了

434
00:21:49,710 --> 0:21:51,144
测试计划通过使用不同的配置

435
00:21:51,211 --> 0:21:53,881
是一种非常简单的方法

436
00:21:53,947 --> 0:21:55,382
来多次跑相同的测试

437
00:21:56,416 --> 0:21:58,852
我今天不会讲测试计划的很多细节

438
00:21:58,919 --> 0:22:01,421
要了解更多内容

439
00:21:58,919 --> 0:22:01,421
要了解更多内容

440
00:22:01,488 --> 0:22:03,390
使用Xcode测试演讲

441
00:22:04,992 --> 0:22:06,627
我们要讲的是如何在你的

442
00:22:06,693 --> 0:22:10,230
本地化工作流程中使用测试计划

443
00:22:12,266 --> 0:22:13,333
首先

444
00:22:13,867 --> 0:22:17,004
我们会讲如何将你的本地化测试过程

445
00:22:18,572 --> 0:22:21,208
接下来 我们会讲到

446
00:22:21,275 --> 0:22:23,143
来集成本地化截屏

447
00:22:24,611 --> 0:22:25,646
最后

448
00:22:25,712 --> 0:22:29,149
我们会了解一些截屏的使用案例

449
00:22:29,216 --> 0:22:31,351
因为它们不仅可以用来测试

450
00:22:33,520 --> 0:22:34,421
首先

451
00:22:35,322 --> 0:22:37,691
我们来了解我们如何确保

452
00:22:37,758 --> 0:22:39,359
测试你使用的每种语言

453
00:22:40,427 --> 0:22:41,361
这么做

454
00:22:42,329 --> 0:22:44,631
你需要使用可访问性标识符

455
00:22:45,566 --> 0:22:47,601
这些标识符都是特殊的

456
00:22:47,668 --> 0:22:48,669
稳定的

457
00:22:48,735 --> 0:22:52,072
我们会保证能在任意语言

458
00:22:53,640 --> 0:22:55,375
它们配置起来简单

459
00:22:55,442 --> 0:22:57,811
在代码中设置相同名字的属性

460
00:22:58,812 --> 0:23:02,282
如果你使用了界面构建器

461
00:22:58,812 --> 0:23:02,282
如果你使用了界面构建器

462
00:23:02,950 --> 0:23:05,686
你能在标识符检查器定义它们

463
00:23:08,455 --> 0:23:09,656
这样就可以了

464
00:23:09,723 --> 0:23:11,992
所以 现在 你的本地化测试

465
00:23:12,359 --> 0:23:15,395
我们来看看你如何使用它们来

466
00:23:16,730 --> 0:23:19,700
我在之前的测试计划中提到过

467
00:23:19,766 --> 0:23:21,902
你能创建多个配置

468
00:23:24,605 --> 0:23:26,740
在每个配置中

469
00:23:27,107 --> 0:23:28,442
你能设置一个不同的语言

470
00:23:28,509 --> 0:23:31,078
和一个不同的地区来运行你的测试

471
00:23:33,814 --> 0:23:37,518
接着 启用本地化截屏幕选项

472
00:23:37,584 --> 0:23:39,553
在UI测试部分

473
00:23:39,953 --> 0:23:41,955
你的屏幕截图将持续

474
00:23:42,489 --> 0:23:44,458
你能用它们做很多事情

475
00:23:46,326 --> 0:23:48,829
在模式编辑器里 有这些选项

476
00:23:48,896 --> 0:23:50,631
我们已经知道如何使用

477
00:23:50,697 --> 0:23:52,900
以防你还没在测试计划中标注它

478
00:23:56,570 --> 0:23:59,806
现在你的测试设置完成

479
00:23:59,873 --> 0:24:01,441
我们来看看如何使用它们

480
00:23:59,873 --> 0:24:01,441
我们来看看如何使用它们

481
00:24:01,742 --> 0:24:03,510
它们是很棒的扩展市场的资源

482
00:24:04,044 --> 0:24:06,480
你可以发送它们给市场团队

483
00:24:06,847 --> 0:24:08,382
或甚至上传至App Store

484
00:24:08,448 --> 0:24:10,284
来展示你最新的设计

485
00:24:11,585 --> 0:24:15,122
你可以在你的文档或

486
00:24:17,191 --> 0:24:18,859
但是 最重要的是

487
00:24:19,393 --> 0:24:22,563
它们能帮你的本地化工具

488
00:24:22,629 --> 0:24:25,132
给你提供高质量的本地化

489
00:24:26,700 --> 0:24:28,135
我们来快速看一个例子

490
00:24:29,870 --> 0:24:32,406
一个简单的词语

491
00:24:32,472 --> 0:24:35,609
它有作为动词开始的意思

492
00:24:35,676 --> 0:24:39,112
它也可以是一个名词

493
00:24:39,680 --> 0:24:42,182
在英文中 这个差异可能很细微

494
00:24:42,249 --> 0:24:43,083
但它在其他语言本地化过程中

495
00:24:43,150 --> 0:24:45,419
会产生很大的差异

496
00:24:46,753 --> 0:24:50,524
这里 我们知道它是一个名词

497
00:24:52,326 --> 0:24:54,895
根据本地化工具中的视觉内容

498
00:24:54,962 --> 0:24:56,330
我们减少了歧义

499
00:24:56,396 --> 0:24:59,233
来保证你得到了最准确地本地化翻译

500
00:25:01,401 --> 0:25:05,405
去年 我们介绍了

501
00:25:06,473 --> 0:25:10,210
它是基于一个地方的资源

502
00:25:10,277 --> 0:25:13,814
处理本地化字符串和非字符串

503
00:25:15,749 --> 0:25:18,452
在里面 我们包含了Notes目录

504
00:25:18,519 --> 0:25:21,221
特别是包含了你的上下文信息

505
00:25:21,288 --> 0:25:23,757
比如你本地化工具的截屏

506
00:25:26,059 --> 0:25:28,529
今年 我非常高兴

507
00:25:28,595 --> 0:25:30,631
我们支持在Xcode本地化目录

508
00:25:30,697 --> 0:25:33,166
中自动地为你包括这些截图

509
00:25:38,372 --> 0:25:40,073
所有的这些 你只需在你

510
00:25:40,140 --> 0:25:43,043
使用过的导出本地化

511
00:25:43,110 --> 0:25:44,611
工作流中点击一下

512
00:25:46,547 --> 0:25:49,983
如果你使用自动化

513
00:25:50,050 --> 0:25:52,519
你只需简单地添加

514
00:25:52,586 --> 0:25:54,855
至你的xcodebuildexportLocalizations

515
00:25:57,157 --> 0:25:59,860
你也能自定义导出的截屏

516
00:26:00,093 --> 0:26:03,263
我们为你简化了指定测试目标

517
00:26:03,330 --> 0:26:07,367
设备和导出至本地化目录中的语言

518
00:26:10,470 --> 0:26:14,174
但你的本地化工具要通过很多个

519
00:26:14,241 --> 0:26:16,944
截图来查看UI上展示的字符串

520
00:26:17,711 --> 0:26:21,782
所以 我们创建的每个本地化截图

521
00:26:21,849 --> 0:26:23,817
都有一个

522
00:26:23,884 --> 0:26:27,421
映射至截图上确定位置上的字符串

523
00:26:29,957 --> 0:26:31,925
这个文件包括了字符串的ID

524
00:26:31,992 --> 0:26:33,927
你能在xliff找到

525
00:26:34,528 --> 0:26:36,597
还有框架构造

526
00:26:36,663 --> 0:26:40,334
就是截图中字符串的具体位置

527
00:26:41,301 --> 0:26:43,871
这让本地化工具能简单地

528
00:26:43,937 --> 0:26:46,139
映射字符串到xliff

529
00:26:46,206 --> 0:26:48,742
并直接在截图上高亮它们

530
00:26:50,544 --> 0:26:53,113
只要你导出了你的本地化目录

531
00:26:53,180 --> 0:26:56,717
这个新内容就在Notes目录下被

532
00:26:56,783 --> 0:26:59,653
这个metadata.plist

533
00:26:59,720 --> 0:27:01,388
合并为了一个

534
00:26:59,720 --> 0:27:01,388
合并为了一个

535
00:27:02,222 --> 0:27:04,124
在Xcode 11和测试计划直接

536
00:27:04,458 --> 0:27:08,295
使用本地化截图非常简单

537
00:27:12,165 --> 0:27:14,668
我想请Vivian回到舞台

538
00:27:14,735 --> 0:27:16,270
来向你们展示如何操作

539
00:27:21,241 --> 0:27:22,576
谢谢Arthur

540
00:27:22,643 --> 0:27:28,248
现在我们已经本地化我们的app了

541
00:27:33,053 --> 0:27:33,954
好的

542
00:27:34,655 --> 0:27:38,759
我已经为我的项目

543
00:27:38,825 --> 0:27:44,164
我这里有一些

544
00:27:44,231 --> 0:27:46,200
我觉得会对我的本地化

545
00:27:46,266 --> 0:27:49,703
工具理解上下文非常有用

546
00:27:49,770 --> 0:27:50,904
我有另一个测试

547
00:27:51,438 --> 0:27:52,773
它是zip文件

548
00:27:52,840 --> 0:27:56,210
我觉得会对扩大市场有用的

549
00:27:56,276 --> 0:27:58,312
一些旅行指南图片

550
00:27:59,379 --> 0:28:04,451
但我想在我支持的所有本地化

551
00:27:59,379 --> 0:28:04,451
但我想在我支持的所有本地化

552
00:28:04,518 --> 0:28:05,986
它会耗费一些时间

553
00:28:06,053 --> 0:28:08,355
测试计划这时就很有用了

554
00:28:08,422 --> 0:28:11,692
你能在你的项目中的任何文件

555
00:28:11,758 --> 0:28:14,995
文件 新建 文件

556
00:28:15,062 --> 0:28:18,098
我只需搜寻计划 在这里

557
00:28:18,165 --> 0:28:22,202
你也能将你已有的测试

558
00:28:22,469 --> 0:28:24,705
为了节省时间 我已经做了一个

559
00:28:25,272 --> 0:28:26,640
那么 我们来看看

560
00:28:27,674 --> 0:28:31,011
好的 我这里有两个测试目标

561
00:28:31,411 --> 0:28:35,916
我有一个能运行我所有的截图测试

562
00:28:35,983 --> 0:28:40,087
另一个能截取市场需要的图片

563
00:28:40,854 --> 0:28:43,190
我也设置了一些配置

564
00:28:43,257 --> 0:28:46,693
这里最重要的是在分享设置中

565
00:28:47,661 --> 0:28:50,831
启用本地化截屏

566
00:28:52,032 --> 0:28:56,470
我已经配置了一个英文 美国

567
00:28:56,537 --> 0:28:58,672
另一个瑞典语 瑞典

568
00:28:58,739 --> 0:29:01,742
因为我已经得到了一些法语图片

569
00:28:58,739 --> 0:29:01,742
因为我已经得到了一些法语图片

570
00:29:01,808 --> 0:29:03,777
我也添加一个法语

571
00:29:03,844 --> 0:29:05,312
点击加号

572
00:29:05,612 --> 0:29:09,149
我们称它为一个法语 法国

573
00:29:11,652 --> 0:29:12,486
好的

574
00:29:13,053 --> 0:29:17,958
我们设置app语言为法语

575
00:29:18,225 --> 0:29:22,763
app的地区为法国

576
00:29:23,230 --> 0:29:24,064
好的

577
00:29:24,464 --> 0:29:28,769
现在 我来重新运行测试

578
00:29:28,836 --> 0:29:32,272
我得到了一张新的本地化法语图片

579
00:29:33,507 --> 0:29:36,677
我回到UI测试来运行它

580
00:29:36,743 --> 0:29:39,546
现在 当我点击测试方块

581
00:29:39,613 --> 0:29:41,548
它不会只运行我的测试一次

582
00:29:41,615 --> 0:29:44,451
取而代之的是

583
00:29:44,518 --> 0:29:47,454
我们能看到它

584
00:29:47,521 --> 0:29:50,691
它将会运行三次

585
00:29:50,757 --> 0:29:52,326
英语

586
00:29:52,392 --> 0:29:54,161
接下来是瑞典语

587
00:29:54,228 --> 0:29:55,963
除非我的本地化工具没有完成

588
00:29:56,029 --> 0:29:58,432
我们将会再一次看到一些英文字符串

589
00:29:58,765 --> 0:30:00,934
接下来 最后一次是法语

590
00:29:58,765 --> 0:30:00,934
接下来 最后一次是法语

591
00:30:01,969 --> 0:30:03,370
我知道它会运行

592
00:30:03,437 --> 0:30:06,974
因为我使用了Arthur提到的

593
00:30:07,040 --> 0:30:11,712
所以我的测试会运行

594
00:30:11,778 --> 0:30:13,480
好的 我们再来一次

595
00:30:16,617 --> 0:30:19,219
法语 好的

596
00:30:20,220 --> 0:30:22,155
那么 我们看看我们得到了什么

597
00:30:23,257 --> 0:30:25,826
如果我查看我刚才跑过的测试

598
00:30:26,627 --> 0:30:29,196
好的 我能看到它在运作

599
00:30:29,263 --> 0:30:33,600
如果我检查法语

600
00:30:34,201 --> 0:30:37,104
很棒 所以

601
00:30:38,172 --> 0:30:41,041
但是我的本地化工具还等着

602
00:30:41,108 --> 0:30:42,776
这样它们就能结束了

603
00:30:42,843 --> 0:30:47,514
所以我需要发送给它们一个新的

604
00:30:47,581 --> 0:30:48,982
以及我想确认

605
00:30:49,049 --> 0:30:52,186
它们能将棘手的“开始”字符串

606
00:30:52,252 --> 0:30:54,621
那么 我们来让它们获得一张截图

607
00:30:55,322 --> 0:30:56,657
我早些时候运行过我的测试

608
00:30:56,723 --> 0:30:59,359
让它来截取我所有的屏幕

609
00:31:00,060 --> 0:31:02,129
那么 我来看瑞典语的这张

610
00:31:03,864 --> 0:31:07,434
我们来看看能否找到

611
00:31:08,135 --> 0:31:09,870
我觉得它在这里

612
00:31:10,370 --> 0:31:11,238
是的 在这 好的

613
00:31:11,305 --> 0:31:13,740
它们没有翻译开始或结束

614
00:31:13,807 --> 0:31:15,876
以及旅行者

615
00:31:16,176 --> 0:31:22,616
这里 我得到的包含框架信息的文件

616
00:31:23,283 --> 0:31:24,885
应该会很有用

617
00:31:25,719 --> 0:31:29,890
所以 现在我准备导出

618
00:31:30,390 --> 0:31:31,792
选择项目

619
00:31:31,859 --> 0:31:32,893
来到编辑器

620
00:31:33,360 --> 0:31:34,895
导出本地化

621
00:31:35,729 --> 0:31:38,899
这次 我来运行瑞典语

622
00:31:39,700 --> 0:31:44,204
最重要的是 我会点击包含截屏

623
00:31:44,738 --> 0:31:47,975
好的 Xcode找到了

624
00:31:48,041 --> 0:31:49,910
我们来看一下我们得到了什么

625
00:31:50,143 --> 0:31:51,144
如果我点击自定义

626
00:31:51,211 --> 0:31:57,718
我能看到我在iPhone 8 Plus

627
00:31:57,784 --> 0:31:59,186
所以 如果有截取的

628
00:31:59,253 --> 0:32:01,388
任何布局的问题

629
00:31:59,253 --> 0:32:01,388
任何布局的问题

630
00:32:01,455 --> 0:32:03,690
好的 我会保留所有这些

631
00:32:04,791 --> 0:32:08,929
现在 我来导出

632
00:32:10,297 --> 0:32:11,131
好的

633
00:32:12,633 --> 0:32:14,401
现在 如果我来看我新的

634
00:32:16,270 --> 0:32:17,938
本地化目录

635
00:32:19,239 --> 0:32:23,944
现在在Notes目录下 我有截图

636
00:32:24,411 --> 0:32:27,214
我能在这看到由测试目标和设备

637
00:32:27,281 --> 0:32:30,884
组织的所有的截图

638
00:32:30,951 --> 0:32:34,254
事实上 我将取出等下市场需要的

639
00:32:34,588 --> 0:32:37,958
将剩余的发送至我的本地化工具

640
00:32:39,793 --> 0:32:40,961
那么 我们看一下这里

641
00:32:41,028 --> 0:32:44,965
我们看到我所有的截图都在这

642
00:32:47,601 --> 0:32:49,503
好的 这是怪异的“开始”字符串

643
00:32:49,570 --> 0:32:51,939
还有比开始更糟糕的

644
00:32:52,005 --> 0:32:53,640
你看一下这张截图

645
00:32:53,707 --> 0:32:59,112
这些字符串

646
00:32:59,179 --> 0:33:05,819
所以 plist文件的

647
00:32:59,179 --> 0:33:05,819
所以 plist文件的

648
00:33:05,886 --> 0:33:08,222
这就是合并的plist文件

649
00:33:08,288 --> 0:33:11,792
它包含所有字符串的帧信息

650
00:33:11,859 --> 0:33:15,529
截取了整个组的屏幕

651
00:33:16,463 --> 0:33:20,167
所以 它们非常好用因为

652
00:33:20,234 --> 0:33:23,770
我打开我最喜欢的本地化工具目录

653
00:33:25,372 --> 0:33:30,811
现在 我能预览字符串在哪出现

654
00:33:35,782 --> 0:33:39,987
我不仅能看到一个地方的字符出现了

655
00:33:40,053 --> 0:33:41,221
它还会向我展示

656
00:33:41,288 --> 0:33:44,291
截取到图片中的所有已知字符串

657
00:33:46,660 --> 0:33:49,196
所以 我的本地化工具将会很开心

658
00:33:52,366 --> 0:33:54,034
好的 我们来总结一下

659
00:33:55,669 --> 0:34:00,374
今天我们看见了

660
00:33:55,669 --> 0:34:00,374
今天我们看见了

661
00:34:00,440 --> 0:34:03,577
运行和系统不一样的语言

662
00:34:04,178 --> 0:34:09,216
我们了解了Xcode中

663
00:34:09,283 --> 0:34:13,286
包括更快地导出界面构建器文件

664
00:34:13,353 --> 0:34:15,155
一则新的

665
00:34:15,222 --> 0:34:17,925
本地化你的设置包是多么简单

666
00:34:17,991 --> 0:34:19,293
以及 当然

667
00:34:19,359 --> 0:34:22,329
如何在你的资产目录下本地化图片

668
00:34:23,397 --> 0:34:28,467
以及如何在测试中

669
00:34:28,534 --> 0:34:30,070
创建本地化截图

670
00:34:30,137 --> 0:34:33,072
和一些截图的用途

671
00:34:35,375 --> 0:34:36,543
了解更多的信息

672
00:34:36,610 --> 0:34:39,813
请在developer.apple.com

673
00:34:39,880 --> 0:34:44,051
如果你有任何疑问

674
00:34:44,117 --> 0:34:46,320
谢谢大家
