1
00:00:06,640 --> 0:00:11,011
（为网页开发者设计的新东西）

2
00:00:15,549 --> 0:00:16,717
大家早上好

3
00:00:16,884 --> 0:00:17,918
我是Devin

4
00:00:17,985 --> 0:00:20,287
我非常激动 今天能在这和大家

5
00:00:20,354 --> 0:00:22,656
聊一下WebKit的新功能

6
00:00:23,123 --> 0:00:24,458
我今天要讲的有很多

7
00:00:24,525 --> 0:00:25,959
我们直接进入主题吧

8
00:00:26,293 --> 0:00:29,897
今年 有很多专为网页平台

9
00:00:29,963 --> 0:00:31,698
设计的令人激动的新东西

10
00:00:32,098 --> 0:00:35,269
今天我们会了解很多不同的主题内容

11
00:00:35,335 --> 0:00:38,071
从网页特殊的API

12
00:00:38,138 --> 0:00:40,841
到你能提供更原生的网页内容

13
00:00:40,908 --> 0:00:42,442
体验的新方式

14
00:00:43,410 --> 0:00:44,645
我们会讨论很多

15
00:00:44,711 --> 0:00:47,581
那我们开始吧 从深色模式开始

16
00:00:48,715 --> 0:00:52,386
系统的深色模式首次在

17
00:00:52,452 --> 0:00:56,823
但今年 iOS 13上也支持了

18
00:00:57,824 --> 0:01:01,795
这意味着桌面和移动端

19
00:00:57,824 --> 0:01:01,795
这意味着桌面和移动端

20
00:01:01,862 --> 0:01:03,830
现在都可以适配深色模式

21
00:01:04,397 --> 0:01:07,334
但不要担心 它并不复杂

22
00:01:07,401 --> 0:01:11,438
让你的网页内容适配深色模式

23
00:01:11,839 --> 0:01:12,840
我们来看一下

24
00:01:13,807 --> 0:01:18,912
首先 添加一个带有深色值的

25
00:01:18,979 --> 0:01:20,647
到任意CSS根规则中

26
00:01:21,014 --> 0:01:24,885
它将会告知WebKit

27
00:01:25,352 --> 0:01:26,720
当处于深色模式时

28
00:01:26,787 --> 0:01:29,189
默认文字 背景颜色

29
00:01:29,256 --> 0:01:30,824
和表单控件

30
00:01:30,891 --> 0:01:34,161
都会自动更新适配深色主题

31
00:01:34,661 --> 0:01:37,931
但如你所见 自定义样式并不会改变

32
00:01:38,131 --> 0:01:40,200
所以 你还要自己来更新它们

33
00:01:40,667 --> 0:01:41,902
你可以使用一个你喜欢的

34
00:01:41,969 --> 0:01:45,806
暗色方案CSS媒体查询

35
00:01:46,573 --> 0:01:49,643
它和其他任何CSS媒体查询

36
00:01:49,710 --> 0:01:51,378
意味着它包含的样式

37
00:01:51,445 --> 0:01:53,914
只会在系统的深色模式中

38
00:01:55,182 --> 0:01:58,352
你能使用它来改变任何其他

39
00:01:58,418 --> 0:02:00,420
比如CSS图片和其他颜色

40
00:01:58,418 --> 0:02:00,420
比如CSS图片和其他颜色

41
00:02:00,487 --> 0:02:02,689
来在页面中和其他深色主题保持一致

42
00:02:03,023 --> 0:02:05,259
但是 对于不在CSS中的图片

43
00:02:05,325 --> 0:02:08,595
你可以通过使用HTML的图片元素

44
00:02:09,062 --> 0:02:11,331
来使用完全一样的媒体查询

45
00:02:11,398 --> 0:02:15,068
当用户启用深色模式时

46
00:02:15,135 --> 0:02:17,638
它会让两张图片自动切换

47
00:02:18,172 --> 0:02:19,506
就是这么简单

48
00:02:20,674 --> 0:02:22,609
显然地 对于其他内容

49
00:02:22,676 --> 0:02:26,079
你能一直使用

50
00:02:26,146 --> 0:02:28,549
使用同样的媒体查询

51
00:02:28,615 --> 0:02:30,651
来处理其他动态内容

52
00:02:31,818 --> 0:02:32,986
所有的这些技术

53
00:02:33,053 --> 0:02:36,056
都能让你很简单的适配深色模式

54
00:02:36,123 --> 0:02:37,958
来支持你网页剩下的内容

55
00:02:38,025 --> 0:02:41,261
我们非常期待你的超级酷炫

56
00:02:42,362 --> 0:02:44,064
了解相关更多信息

57
00:02:44,131 --> 0:02:46,099
WebKit博客里

58
00:02:46,166 --> 0:02:48,669
WWDC app里

59
00:02:48,735 --> 0:02:52,105
介绍在网页内容中支持深色模式

60
00:02:52,172 --> 0:02:53,307
你一定要看看

61
00:02:55,809 --> 0:02:57,211
我们非常快速的介绍了

62
00:02:57,277 --> 0:02:59,746
如何在网页内容中支持深色模式

63
00:02:59,813 --> 0:03:00,814
它非常简单

64
00:02:59,813 --> 0:03:00,814
它非常简单

65
00:03:02,282 --> 0:03:07,154
下面我们聊聊你能使用的很简单的

66
00:03:07,221 --> 0:03:09,690
它允许你在网页内容中

67
00:03:09,756 --> 0:03:11,091
加入原生的分享表单

68
00:03:12,326 --> 0:03:14,628
它符合通用标准规范

69
00:03:14,695 --> 0:03:18,398
在Safari或是

70
00:03:18,966 --> 0:03:21,201
特别棒的是 今年的iOS

71
00:03:21,268 --> 0:03:23,804
改进了所有的原生分享表单

72
00:03:25,472 --> 0:03:28,375
就像调用

73
00:03:28,442 --> 0:03:29,810
处理相关的数据那么简单

74
00:03:30,110 --> 0:03:33,881
如果一个分享动作完成了

75
00:03:33,947 --> 0:03:36,283
或一个拒绝 如果分享表单消失了

76
00:03:36,683 --> 0:03:37,718
但请留意

77
00:03:37,784 --> 0:03:41,655
这个API的调用被

78
00:03:41,722 --> 0:03:42,623
比如一个点击

79
00:03:43,724 --> 0:03:46,827
所以 如果不是对应的场景

80
00:03:47,995 --> 0:03:49,730
最酷的事情是 你已经看到

81
00:03:49,796 --> 0:03:51,632
运作中的网页分享

82
00:03:51,698 --> 0:03:54,334
已适配了绝大多数的网页

83
00:03:55,169 --> 0:03:56,970
一个很好的例子是Twitter

84
00:03:57,037 --> 0:03:59,740
它已经对深色模式做了非常大的支持

85
00:04:00,541 --> 0:04:03,076
点击页面上的任意分享图标

86
00:04:03,143 --> 0:04:06,647
就会打开原生的分享表单

87
00:04:07,080 --> 0:04:10,250
在iOS 12.2或以后的版本

88
00:04:12,286 --> 0:04:13,754
这就是网页分享API

89
00:04:13,820 --> 0:04:15,155
一个在你网页中

90
00:04:15,222 --> 0:04:18,325
引入原生功能性非常简单的方式

91
00:04:20,560 --> 0:04:23,764
现在 我们来看一下新媒体功能

92
00:04:24,331 --> 0:04:25,666
如果你想要在你开发的网站

93
00:04:25,732 --> 0:04:30,370
能在用户的设备上

94
00:04:30,671 --> 0:04:33,774
你现在可以使用新的

95
00:04:33,841 --> 0:04:36,543
来判定视频的编解码器是否支持

96
00:04:36,610 --> 0:04:38,478
又或是视频的编解码器

97
00:04:38,545 --> 0:04:40,948
能很快地终止任意帧

98
00:04:41,014 --> 0:04:43,250
或者在回放过程中非常高效

99
00:04:44,117 --> 0:04:47,087
这能让你做出更明智的决定

100
00:04:47,154 --> 0:04:49,623
来展示你想要的内容类型

101
00:04:50,624 --> 0:04:52,326
提到视频内容

102
00:04:52,392 --> 0:04:55,028
macOS Catalina

103
00:04:55,095 --> 0:04:58,065
也能支持alpha通道的视频了

104
00:04:58,932 --> 0:05:02,870
alpha通道视频支持

105
00:04:58,932 --> 0:05:02,870
alpha通道视频支持

106
00:05:02,936 --> 0:05:04,705
的视频内容

107
00:05:05,005 --> 0:05:07,107
一个非常好的用户案例是

108
00:05:07,174 --> 0:05:08,942
当用户选择深色模式时

109
00:05:09,009 --> 0:05:11,712
它允许你的视频

110
00:05:11,778 --> 0:05:13,580
能无缝衔接至周围内容中

111
00:05:14,515 --> 0:05:16,416
不像创建两个分开的视频

112
00:05:16,483 --> 0:05:19,186
一个用作浅色模式

113
00:05:19,253 --> 0:05:21,955
一个有着透明背景的视频

114
00:05:22,022 --> 0:05:23,557
适用于两种模式

115
00:05:24,057 --> 0:05:26,493
alpha通道视频如今

116
00:05:26,560 --> 0:05:28,195
能在任何地方使用

117
00:05:28,262 --> 0:05:31,398
它没有特殊的语法和MIME类型

118
00:05:31,465 --> 0:05:32,866
它都能运行

119
00:05:33,934 --> 0:05:35,469
但在你使用它之前

120
00:05:35,536 --> 0:05:38,205
你想知道alpha通道视频

121
00:05:38,272 --> 0:05:40,807
是否能在例如旧的

122
00:05:40,874 --> 0:05:44,011
在使用

123
00:05:44,077 --> 0:05:46,180
你可以在功能对象上

124
00:05:46,246 --> 0:05:48,682
添加一个alpha通道关键字

125
00:05:51,251 --> 0:05:53,854
如果你想要了解alpha通道视频

126
00:05:53,921 --> 0:05:56,957
包括如何在macOS Catalina

127
00:05:57,024 --> 0:06:01,028
你一定要看看使用alpha

128
00:05:57,024 --> 0:06:01,028
你一定要看看使用alpha

129
00:06:03,230 --> 0:06:06,767
但如果你是一个开发

130
00:06:06,834 --> 0:06:09,002
点对点聊天功能网站的开发者

131
00:06:09,069 --> 0:06:11,405
也想支持屏幕截图

132
00:06:11,471 --> 0:06:15,242
你现在能使用Safari 13的

133
00:06:15,943 --> 0:06:18,145
调用它获得一个许可

134
00:06:18,212 --> 0:06:21,582
然后立刻通知用户启用截图权限

135
00:06:22,282 --> 0:06:24,418
如果权限被通过

136
00:06:24,484 --> 0:06:27,154
这个许可回返回一个标准的

137
00:06:27,221 --> 0:06:30,224
包含了Safari窗口的流媒体

138
00:06:31,124 --> 0:06:32,092
返回的流媒体像

139
00:06:32,159 --> 0:06:35,028
其他的标准的流媒体表现一样

140
00:06:35,095 --> 0:06:37,297
意味着它能与WebRTC一起使用

141
00:06:37,364 --> 0:06:39,366
分享你的屏幕给他人

142
00:06:41,735 --> 0:06:43,637
这些就是

143
00:06:43,704 --> 0:06:47,808
iOS 13和Safari 13

144
00:06:49,710 --> 0:06:52,846
现在 我们来聊一些新工具

145
00:06:52,913 --> 0:06:56,483
它们可以让你的网页内容

146
00:06:56,550 --> 0:06:59,887
在所有平台中更灵活的布局

147
00:07:00,821 --> 0:07:02,256
作为一个网页开发者

148
00:07:02,322 --> 0:07:03,724
我们工作的一部分

149
00:07:03,790 --> 0:07:06,193
就是要确保我们要

150
00:07:06,260 --> 0:07:08,262
提供一个低耗电

151
00:07:08,328 --> 0:07:10,597
或减少不必要的性能损耗的体验

152
00:07:11,665 --> 0:07:15,269
为了帮你更好地了解可能发生的事情

153
00:07:15,335 --> 0:07:18,539
网页检查器上加入了新的

154
00:07:18,972 --> 0:07:22,442
这个界面包含了可执行信息

155
00:07:22,743 --> 0:07:25,412
我们希望你能高效使用它

156
00:07:25,479 --> 0:07:27,948
所以 我们在WebKit博客

157
00:07:28,015 --> 0:07:30,083
以及在WWDC app里

158
00:07:30,150 --> 0:07:33,387
都是关于了解网页检查器的

159
00:07:33,587 --> 0:07:34,721
你一定要看看

160
00:07:34,788 --> 0:07:36,523
它会让你的网站产生奇迹

161
00:07:38,325 --> 0:07:40,727
iOS引入了WebDriver

162
00:07:41,295 --> 0:07:46,366
升级至iOS 13的所有设备

163
00:07:46,433 --> 0:07:49,736
和回归测试的标准测试形式

164
00:07:50,137 --> 0:07:51,305
你可以用WebDriver

165
00:07:51,371 --> 0:07:54,741
来为你的网页内容

166
00:07:54,808 --> 0:07:58,345
确保你支持的所有平台

167
00:07:58,412 --> 0:08:00,414
不论是桌面端还是移动端

168
00:07:58,412 --> 0:08:00,414
不论是桌面端还是移动端

169
00:08:00,480 --> 0:08:02,883
都能像你期待的那样运行良好

170
00:08:03,383 --> 0:08:06,920
iOS上的WebDriver

171
00:08:06,987 --> 0:08:08,856
developer.apple.com

172
00:08:08,922 --> 0:08:10,457
上有很棒的文档说明

173
00:08:10,524 --> 0:08:13,260
我们未来也会有相关的文档说明

174
00:08:15,495 --> 0:08:17,297
现在 我们来聊聊

175
00:08:17,364 --> 0:08:20,467
如何在网页内容中存储结构化的数据

176
00:08:21,935 --> 0:08:24,371
过去 我们主要有两种方法

177
00:08:24,438 --> 0:08:26,173
IndexedDB和WebSQL

178
00:08:26,240 --> 0:08:30,377
在Safari 13上

179
00:08:31,245 --> 0:08:35,782
所有的现代网页浏览器

180
00:08:35,849 --> 0:08:37,049
过去几年

181
00:08:37,116 --> 0:08:40,254
我们一直在努力让它更加标准化

182
00:08:40,654 --> 0:08:42,089
所以 如果你还不确定是否

183
00:08:42,155 --> 0:08:46,026
要尽快过渡使用IndexedDB

184
00:08:48,595 --> 0:08:51,431
最后 我们来聊一下

185
00:08:51,498 --> 0:08:54,468
在网页上最简单地接受付款的方式

186
00:08:54,701 --> 0:08:56,970
我们主要会讲两件事

187
00:08:57,204 --> 0:08:59,907
首先 Apple Pay

188
00:08:59,973 --> 0:09:02,843
Payment Request API

189
00:08:59,973 --> 0:09:02,843
Payment Request API

190
00:09:02,910 --> 0:09:04,778
已经完全支持所有的功能

191
00:09:05,479 --> 0:09:09,950
它具备Apple Pay JS的

192
00:09:10,017 --> 0:09:11,451
以及为你的网页内容带来了一个

193
00:09:11,518 --> 0:09:14,221
更为标准的流线型体验

194
00:09:14,521 --> 0:09:17,758
我们非常建议你转换使用

195
00:09:17,824 --> 0:09:20,561
它支持Apple Pay JS

196
00:09:20,627 --> 0:09:22,563
同时它也在不断被改进

197
00:09:23,096 --> 0:09:27,401
想要深入了解如何在Apple Pay使用

198
00:09:27,467 --> 0:09:30,470
今天晚些时候将有相关博文发布

199
00:09:30,537 --> 0:09:32,906
会深入分析这些新提升的功能

200
00:09:33,507 --> 0:09:34,875
第二

201
00:09:36,076 --> 0:09:40,013
在iOS 13 你现能在WKWebView

202
00:09:41,014 --> 0:09:41,849
是的

203
00:09:46,053 --> 0:09:49,423
这意味着你能在更多app上使用

204
00:09:49,790 --> 0:09:51,725
但你还要注意一些事情

205
00:09:52,059 --> 0:09:55,295
当一个用户尝试通过

206
00:09:55,596 --> 0:09:58,799
他们需要在网页内通讯

207
00:09:58,866 --> 0:10:01,335
而不是网页浏览器或app

208
00:09:58,866 --> 0:10:01,335
而不是网页浏览器或app

209
00:10:01,802 --> 0:10:05,939
在交易期间 用户和网页之间

210
00:10:06,006 --> 0:10:07,407
不应该有其他阻碍

211
00:10:07,474 --> 0:10:08,942
甚至在开始前就要

212
00:10:09,343 --> 0:10:11,645
所以 这意味着

213
00:10:11,712 --> 0:10:14,848
使用Apple Pay时

214
00:10:14,915 --> 0:10:18,051
当你在WKWebView

215
00:10:18,452 --> 0:10:19,686
它是这样工作的

216
00:10:20,587 --> 0:10:21,989
如果当前页面的

217
00:10:22,055 --> 0:10:25,659
被插入过脚本

218
00:10:25,726 --> 0:10:27,628
我们将不被允许使用

219
00:10:28,929 --> 0:10:32,299
如果当前页面已经通过

220
00:10:32,366 --> 0:10:34,268
canMakePayments

221
00:10:34,334 --> 0:10:36,737
我们以后将不能插入脚本

222
00:10:36,803 --> 0:10:38,572
它们将会被一个错误阻止

223
00:10:39,773 --> 0:10:43,143
但是 所有的这些限制只在

224
00:10:43,210 --> 0:10:46,513
所以 一些高级别的导航

225
00:10:47,681 --> 0:10:49,183
所以 这是什么意思呢？

226
00:10:50,450 --> 0:10:51,752
如果你是一个网页开发者

227
00:10:51,818 --> 0:10:55,289
你一定要在尝试展示

228
00:10:55,355 --> 0:10:58,258
调用

229
00:10:58,325 --> 0:11:00,694
或甚至在使用任何和

230
00:10:58,325 --> 0:11:00,694
或甚至在使用任何和

231
00:11:01,195 --> 0:11:04,431
这样 你的用户就不会遇到

232
00:11:04,498 --> 0:11:06,400
看见了一个Apple Pay按钮

233
00:11:06,466 --> 0:11:09,469
然后点击却无反应

234
00:11:10,704 --> 0:11:12,739
相反的 如果你是一个app开发者

235
00:11:13,307 --> 0:11:16,743
请认真思考是否需要通过 例如

236
00:11:16,810 --> 0:11:19,179
WKUserScript API

237
00:11:19,246 --> 0:11:21,982
或是调用completionHandler

238
00:11:22,382 --> 0:11:26,153
我们已经看过过去一些App

239
00:11:26,220 --> 0:11:29,756
WebKit API

240
00:11:29,823 --> 0:11:31,091
那样做没有原因

241
00:11:31,892 --> 0:11:32,960
通过加入脚本

242
00:11:33,026 --> 0:11:36,263
你会妨碍已经加载的网页内容

243
00:11:36,330 --> 0:11:38,165
提供它最好的用户体验

244
00:11:38,232 --> 0:11:40,501
（尽可能使用WebKit API

245
00:11:40,567 --> 0:11:42,302
Apple Pay

246
00:11:43,770 --> 0:11:47,574
这是一个今年为网页开发者

247
00:11:47,641 --> 0:11:49,810
提供新功能的快速展示

248
00:11:50,744 --> 0:11:52,679
你也会想参加

249
00:11:52,746 --> 0:11:55,749
iPad上的桌面类浏览的演讲

250
00:11:55,949 --> 0:11:59,086
它将会介绍如何

251
00:11:59,152 --> 0:12:02,122
比如指针事件让你桌面端的网页

252
00:11:59,152 --> 0:12:02,122
比如指针事件让你桌面端的网页

253
00:12:02,189 --> 0:12:04,124
使用起来像是在家里玩iPad一样

254
00:12:05,392 --> 0:12:07,528
我非常希望你能喜欢

255
00:12:07,594 --> 0:12:09,263
为网页开发者提供的新功能

256
00:12:09,530 --> 0:12:11,932
我们很期待你能

257
00:12:11,999 --> 0:12:13,667
使用这些新功能和新工具

258
00:12:13,734 --> 0:12:16,703
来设计优质和全新的体验

259
00:12:16,770 --> 0:12:17,905
祝你们度过愉快的一天
