1
00:00:00,506 --> 0:00:04,500
[ Music ]

2
00:00:09,016 --> 0:00:10,636
[ Applause ]

3
00:00:10,636 --> 0:00:11,076
&gt;&gt; Good afternoon.

4
00:00:11,076 --> 0:00:14,466
And welcome to Integrating with

5
00:00:14,466 --> 0:00:15,626
Siri Event Suggestions.

6
00:00:16,245 --> 0:00:17,576
My name is Sofiane, and I'm an

7
00:00:17,576 --> 0:00:18,706
Engineer, working on Siri

8
00:00:18,706 --> 0:00:19,626
frameworks here at Apple.

9
00:00:20,436 --> 0:00:21,666
And today, I'll be joined by my

10
00:00:21,666 --> 0:00:22,496
colleague, Magnus.

11
00:00:23,236 --> 0:00:24,746
We're really thrilled to be here

12
00:00:24,746 --> 0:00:26,646
today to tell you all about how

13
00:00:26,646 --> 0:00:28,416
to integrate your apps with Siri

14
00:00:28,416 --> 0:00:29,206
Event Suggestions.

15
00:00:30,976 --> 0:00:32,766
Siri is the virtual assistant we

16
00:00:32,766 --> 0:00:34,606
all know and love, and with

17
00:00:34,606 --> 0:00:36,746
SiriKit, your app can work with

18
00:00:36,746 --> 0:00:38,806
Siri, for things like sending

19
00:00:38,806 --> 0:00:40,946
messages, requesting rides, as

20
00:00:40,946 --> 0:00:41,986
well as expose the key

21
00:00:41,986 --> 0:00:43,816
capabilities of your app using

22
00:00:43,816 --> 0:00:44,336
shortcuts.

23
00:00:45,696 --> 0:00:47,516
Siri is also deeply integrated

24
00:00:47,766 --> 0:00:49,576
across our platforms, adding

25
00:00:49,576 --> 0:00:51,256
on-device intelligence to the

26
00:00:51,256 --> 0:00:53,296
apps you use every day.

27
00:00:53,486 --> 0:00:55,756
In Calendar, Siri is personal

28
00:00:55,756 --> 0:00:56,756
and knows about your

29
00:00:56,756 --> 0:00:58,096
reservations to help you get

30
00:00:58,096 --> 0:01:00,446
organized, and Siri can then use

31
00:00:58,096 --> 0:01:00,446
organized, and Siri can then use

32
00:01:00,446 --> 0:01:01,906
that information about your

33
00:01:01,906 --> 0:01:03,716
reservations to make proactive

34
00:01:03,716 --> 0:01:04,926
suggestions throughout the

35
00:01:04,926 --> 0:01:05,406
system.

36
00:01:06,356 --> 0:01:08,606
So, on the lock screen, Siri

37
00:01:08,606 --> 0:01:09,936
notifies you when it's time to

38
00:01:09,936 --> 0:01:11,006
leave, based on traffic

39
00:01:11,006 --> 0:01:11,556
conditions.

40
00:01:12,126 --> 0:01:14,196
And when you open Maps, you get

41
00:01:14,196 --> 0:01:15,756
Siri suggestions, which make it

42
00:01:15,826 --> 0:01:17,446
super convenient to get

43
00:01:17,446 --> 0:01:18,646
directions right to your

44
00:01:18,646 --> 0:01:20,696
destination with just one tap.

45
00:01:21,536 --> 0:01:23,326
Now, when you get there, Siri

46
00:01:23,326 --> 0:01:24,826
can proactively suggest to turn

47
00:01:24,826 --> 0:01:26,466
on Do Not Disturb and help you

48
00:01:26,466 --> 0:01:27,816
stay focused on what matters.

49
00:01:28,206 --> 0:01:30,606
And all of that starts with the

50
00:01:30,606 --> 0:01:31,896
system knowing about your

51
00:01:31,896 --> 0:01:33,666
reservations, wherever they come

52
00:01:33,666 --> 0:01:36,076
from, whether it's in the car

53
00:01:36,076 --> 0:01:38,286
rental reservation in mail, a

54
00:01:38,286 --> 0:01:39,646
restaurant reservation in

55
00:01:39,646 --> 0:01:41,756
messages, or even when you're

56
00:01:41,756 --> 0:01:43,396
booking a flight directly in

57
00:01:43,396 --> 0:01:43,796
Safari.

58
00:01:44,786 --> 0:01:47,556
Now, in iOS 13, we're really

59
00:01:47,556 --> 0:01:49,556
excited to introduce new APIs

60
00:01:49,776 --> 0:01:51,316
for your apps, to integrate

61
00:01:51,316 --> 0:01:52,756
directly with this ecosystem.

62
00:01:53,516 --> 0:01:57,776
[ Applause ]

63
00:01:58,276 --> 0:02:00,166
So for example, when you view

64
00:01:58,276 --> 0:02:00,166
So for example, when you view

65
00:02:00,166 --> 0:02:01,846
your flight reservation inside

66
00:02:01,846 --> 0:02:03,876
the American Airline app, the

67
00:02:03,876 --> 0:02:05,286
app donates that information to

68
00:02:05,286 --> 0:02:05,766
the system.

69
00:02:06,706 --> 0:02:08,026
Siri can then use it to

70
00:02:08,026 --> 0:02:09,106
automatically show a

71
00:02:09,106 --> 0:02:11,026
notification and add that flight

72
00:02:11,026 --> 0:02:12,306
to your calendar.

73
00:02:12,866 --> 0:02:14,366
Siri will then go on to make

74
00:02:14,366 --> 0:02:15,976
proactive suggestions for that

75
00:02:15,976 --> 0:02:17,596
flight, at the right time, in

76
00:02:17,596 --> 0:02:18,416
all of the places that I

77
00:02:18,416 --> 0:02:19,116
mentioned before.

78
00:02:20,086 --> 0:02:21,146
And all of that intelligence

79
00:02:21,376 --> 0:02:23,496
happens directly on the device.

80
00:02:24,476 --> 0:02:25,816
But we didn't want to stop here.

81
00:02:26,366 --> 0:02:28,426
This year, we wanted to extend

82
00:02:28,426 --> 0:02:30,506
that deep system integration and

83
00:02:30,506 --> 0:02:32,046
promote your app in even more

84
00:02:32,046 --> 0:02:33,036
places in the system.

85
00:02:34,326 --> 0:02:36,346
So, in iOS 13, if your app

86
00:02:36,346 --> 0:02:38,056
supports check-in, it can get

87
00:02:38,056 --> 0:02:39,576
promoted right on the lock

88
00:02:39,576 --> 0:02:41,596
screen, taking users directly

89
00:02:41,596 --> 0:02:44,616
into your app at the right time.

90
00:02:44,756 --> 0:02:46,596
Also new in iOS 13, with maps,

91
00:02:47,246 --> 0:02:48,396
when the time is right, when a

92
00:02:48,396 --> 0:02:50,206
user goes into maps, they can

93
00:02:50,206 --> 0:02:52,016
get up to date information about

94
00:02:52,016 --> 0:02:53,306
their flight, and even get

95
00:02:53,446 --> 0:02:55,456
directions, indoor directions

96
00:02:55,526 --> 0:02:58,276
directly to their gate.

97
00:02:58,476 --> 0:02:59,826
So Siri is there to help at

98
00:02:59,976 --> 0:03:02,096
every step of the way, from the

99
00:02:59,976 --> 0:03:02,096
every step of the way, from the

100
00:03:02,096 --> 0:03:03,426
moment you make your reservation

101
00:03:03,696 --> 0:03:04,706
to the moment you walk in.

102
00:03:05,616 --> 0:03:07,326
So, by now, I hope you're all

103
00:03:07,326 --> 0:03:09,186
thinking that is pretty cool,

104
00:03:09,316 --> 0:03:09,746
hopefully.

105
00:03:10,546 --> 0:03:11,776
But how does that all work?

106
00:03:12,266 --> 0:03:14,776
Well, the API is built as part

107
00:03:14,776 --> 0:03:16,466
of SiriKit which allow you to do

108
00:03:16,466 --> 0:03:17,876
many things, like setting up

109
00:03:17,876 --> 0:03:19,616
shortcuts, sending payments, and

110
00:03:19,616 --> 0:03:20,156
much more.

111
00:03:20,876 --> 0:03:21,836
And more specifically,

112
00:03:22,316 --> 0:03:23,186
everything we will talk about

113
00:03:23,186 --> 0:03:24,796
today is exposed as part of the

114
00:03:24,796 --> 0:03:25,606
intense framework.

115
00:03:26,076 --> 0:03:28,496
We support reservations across

116
00:03:28,496 --> 0:03:30,086
many categories, ranging from

117
00:03:30,086 --> 0:03:31,736
restaurants to ticketed events,

118
00:03:31,866 --> 0:03:34,136
to various forms of transit, and

119
00:03:34,136 --> 0:03:35,846
this year, we're introducing new

120
00:03:35,846 --> 0:03:37,736
classes in the intense framework

121
00:03:38,156 --> 0:03:39,926
to represent details for all of

122
00:03:39,926 --> 0:03:41,186
these reservation categories.

123
00:03:42,016 --> 0:03:43,026
Now, all of these classes

124
00:03:43,026 --> 0:03:44,276
inherit from the new IN

125
00:03:44,276 --> 0:03:45,026
Reservation Class.

126
00:03:45,536 --> 0:03:47,096
So, for instance, to represent a

127
00:03:47,096 --> 0:03:48,786
restaurant reservation, you can

128
00:03:48,786 --> 0:03:49,476
create an

129
00:03:49,476 --> 0:03:50,996
INRestaurantReservation object.

130
00:03:52,676 --> 0:03:53,916
Those of you familiar with

131
00:03:53,916 --> 0:03:55,546
SiriKit will recognize the

132
00:03:55,546 --> 0:03:57,266
INInteraction API, which is also

133
00:03:57,266 --> 0:03:58,796
used for shortcut donations.

134
00:03:58,796 --> 0:04:00,756
So when a user views a

135
00:03:58,796 --> 0:04:00,756
So when a user views a

136
00:04:00,756 --> 0:04:02,556
reservation inside your app,

137
00:04:02,776 --> 0:04:05,016
your app creates an interaction

138
00:04:05,016 --> 0:04:06,116
and donate to the system.

139
00:04:07,016 --> 0:04:08,416
Interactions are made up of an

140
00:04:08,416 --> 0:04:09,766
intent, an intent response,

141
00:04:10,156 --> 0:04:11,436
which together represent a full

142
00:04:11,436 --> 0:04:13,406
user interaction.

143
00:04:15,056 --> 0:04:16,146
Now, this year, we're

144
00:04:16,146 --> 0:04:17,146
introducing the new

145
00:04:17,286 --> 0:04:18,946
INGetReservationDetailsIntent,

146
00:04:19,185 --> 0:04:20,856
an intent response that are

147
00:04:20,856 --> 0:04:22,996
intended to capture details that

148
00:04:23,026 --> 0:04:24,636
pertain to user's reservations.

149
00:04:25,016 --> 0:04:26,646
This provides a way for your app

150
00:04:27,066 --> 0:04:28,076
to share those details with

151
00:04:28,076 --> 0:04:28,376
Siri.

152
00:04:28,916 --> 0:04:31,036
Now, the intent response takes a

153
00:04:31,036 --> 0:04:32,626
list of INReservation objects,

154
00:04:32,626 --> 0:04:34,506
as we just saw previously, which

155
00:04:34,506 --> 0:04:35,486
represent your specific

156
00:04:35,486 --> 0:04:36,146
reservations.

157
00:04:36,736 --> 0:04:38,416
So here, for example, we are

158
00:04:38,416 --> 0:04:40,106
creating an INLodgingReservation

159
00:04:40,106 --> 0:04:41,306
and attaching it to the intent

160
00:04:41,306 --> 0:04:42,756
response to represent the

161
00:04:42,756 --> 0:04:43,876
details of a hotel state.

162
00:04:43,876 --> 0:04:46,446
Now, all that is left for you is

163
00:04:46,446 --> 0:04:47,966
to donate that interaction to

164
00:04:47,966 --> 0:04:50,076
the system, so that Siri can use

165
00:04:50,076 --> 0:04:51,566
it in places like Siri event

166
00:04:51,566 --> 0:04:53,366
suggestions, or Siri shortcuts,

167
00:04:53,366 --> 0:04:54,056
for example.

168
00:04:55,266 --> 0:04:57,226
Okay, now, let's move on and

169
00:04:57,226 --> 0:04:58,686
talk about the three easy steps

170
00:04:58,986 --> 0:05:00,756
that your app should follow to

171
00:04:58,986 --> 0:05:00,756
that your app should follow to

172
00:05:00,756 --> 0:05:02,166
take advantage of all these

173
00:05:02,166 --> 0:05:02,766
great features.

174
00:05:03,546 --> 0:05:05,396
And first, we will talk about

175
00:05:05,396 --> 0:05:06,776
how to create and donate good

176
00:05:06,776 --> 0:05:07,636
interactions.

177
00:05:08,486 --> 0:05:10,116
Next, we will look into how to

178
00:05:10,116 --> 0:05:11,556
adopt the new reservation

179
00:05:11,556 --> 0:05:13,306
actions API, so your app can

180
00:05:13,306 --> 0:05:14,666
benefit from the new check-in

181
00:05:14,666 --> 0:05:15,386
shortcut feature.

182
00:05:16,296 --> 0:05:17,846
And finally, your app may be

183
00:05:17,846 --> 0:05:18,946
launched with a reservation that

184
00:05:18,946 --> 0:05:20,006
you previously donated.

185
00:05:20,696 --> 0:05:22,146
So we will talk about various

186
00:05:22,146 --> 0:05:23,326
launch scenarios that you should

187
00:05:23,326 --> 0:05:24,026
handle.

188
00:05:24,986 --> 0:05:26,736
And now, I'd like to invite my

189
00:05:26,736 --> 0:05:28,366
colleague, Magnus, up to tell us

190
00:05:28,366 --> 0:05:29,026
all about the API.

191
00:05:29,026 --> 0:05:29,886
Magnus?

192
00:05:30,516 --> 0:05:34,286
[ Cheers and Applause ]

193
00:05:34,786 --> 0:05:36,186
&gt;&gt; Thank you, Sofiane.

194
00:05:36,796 --> 0:05:37,636
Hey, everyone.

195
00:05:37,916 --> 0:05:38,846
My name is Magnus.

196
00:05:39,446 --> 0:05:40,786
I'm excited to be here today to

197
00:05:40,786 --> 0:05:42,416
talk to you about Siri event

198
00:05:42,416 --> 0:05:43,136
suggestions.

199
00:05:44,256 --> 0:05:45,766
First, I'll show you a demo of

200
00:05:45,766 --> 0:05:47,666
how to use the API, and then we

201
00:05:47,666 --> 0:05:48,626
will talk a little bit about the

202
00:05:48,666 --> 0:05:49,766
details later on.

203
00:05:50,596 --> 0:05:55,426
Let's jump into the demo.

204
00:05:55,616 --> 0:05:56,636
So, I'm working on this flight

205
00:05:56,636 --> 0:05:58,036
app called My Flights.

206
00:05:58,746 --> 0:06:00,046
Let's open it, and see what it

207
00:05:58,746 --> 0:06:00,046
Let's open it, and see what it

208
00:06:00,126 --> 0:06:01,046
looks like.

209
00:06:02,016 --> 0:06:03,696
So it displays a list of all my

210
00:06:03,746 --> 0:06:04,676
flight reservations.

211
00:06:05,716 --> 0:06:07,336
If I tap one, I can see more

212
00:06:07,336 --> 0:06:08,706
details about the reservation.

213
00:06:09,166 --> 0:06:11,646
I want to take advantage of the

214
00:06:11,646 --> 0:06:13,106
Siri event suggestions API, and

215
00:06:13,386 --> 0:06:14,786
donate the reservation details

216
00:06:14,786 --> 0:06:15,746
when it is displayed to the

217
00:06:15,746 --> 0:06:15,956
user.

218
00:06:18,616 --> 0:06:21,996
Let's switch over to Xcode.

219
00:06:22,136 --> 0:06:23,706
Now, my app consists of some

220
00:06:23,706 --> 0:06:25,246
view controllers and a server,

221
00:06:25,246 --> 0:06:26,276
where I get my reservation

222
00:06:26,276 --> 0:06:27,116
details from.

223
00:06:27,776 --> 0:06:28,566
Since I want to donate the

224
00:06:28,566 --> 0:06:30,546
reservation details when they're

225
00:06:30,546 --> 0:06:31,926
displayed to the user, let's

226
00:06:31,926 --> 0:06:32,496
take a look at my

227
00:06:32,496 --> 0:06:33,466
ReservationDetails

228
00:06:33,466 --> 0:06:34,066
ViewController.

229
00:06:34,616 --> 0:06:38,446
The view controller gets the

230
00:06:38,446 --> 0:06:39,746
reservations from the server.

231
00:06:39,746 --> 0:06:42,096
For the purposes of this demo,

232
00:06:42,176 --> 0:06:43,546
the server returns

233
00:06:43,546 --> 0:06:45,216
INReservations SiriKit objects.

234
00:06:46,446 --> 0:06:47,416
I started doing some work on

235
00:06:47,416 --> 0:06:48,636
this already, but there is still

236
00:06:48,636 --> 0:06:49,776
some missing code here, marked

237
00:06:49,776 --> 0:06:50,486
by to-dos.

238
00:06:50,986 --> 0:06:53,686
Let's go to the server, and see

239
00:06:53,686 --> 0:06:55,286
what makes up the INReservation

240
00:06:55,286 --> 0:06:55,606
object.

241
00:06:59,136 --> 0:07:00,456
In my server code, I have a

242
00:06:59,136 --> 0:07:00,456
In my server code, I have a

243
00:07:00,456 --> 0:07:01,066
method called

244
00:07:01,066 --> 0:07:02,696
createFlightReservation, to

245
00:07:02,696 --> 0:07:04,086
create and save the reservation

246
00:07:04,306 --> 0:07:05,506
so I can access it from my view

247
00:07:05,506 --> 0:07:05,946
controller.

248
00:07:07,386 --> 0:07:07,946
I'll create the

249
00:07:07,946 --> 0:07:08,976
INFlightReservation object here.

250
00:07:17,046 --> 0:07:18,106
Now, this method creates an

251
00:07:18,106 --> 0:07:19,206
INFlightReservation object.

252
00:07:19,856 --> 0:07:21,116
This object contains all the

253
00:07:21,116 --> 0:07:22,506
reservation details about the

254
00:07:22,536 --> 0:07:22,766
flight.

255
00:07:23,466 --> 0:07:25,636
Let's take a look at some of the

256
00:07:25,636 --> 0:07:26,096
properties.

257
00:07:26,756 --> 0:07:31,116
First up is the itemReference.

258
00:07:31,966 --> 0:07:33,646
This is a unique identifier for

259
00:07:33,646 --> 0:07:34,546
this reservation item.

260
00:07:34,646 --> 0:07:36,576
It will be used when the system

261
00:07:36,576 --> 0:07:38,426
launches my app to tell it which

262
00:07:38,426 --> 0:07:39,746
specific reservation item to

263
00:07:39,746 --> 0:07:39,976
show.

264
00:07:41,756 --> 0:07:43,506
In my app, the reservationNumber

265
00:07:43,506 --> 0:07:44,546
is unique for this flight.

266
00:07:44,546 --> 0:07:46,076
So I will use that for the

267
00:07:46,076 --> 0:07:47,546
vocabulary identifier.

268
00:07:47,546 --> 0:07:50,846
I also said a spoken phrase that

269
00:07:51,166 --> 0:07:52,376
can be displayed to the user.

270
00:07:53,466 --> 0:07:55,886
I'm using Flight XX815, which is

271
00:07:55,886 --> 0:07:57,626
short, and descriptive.

272
00:08:00,596 --> 0:08:02,046
Here are some common properties

273
00:08:03,336 --> 0:08:04,496
that are shared among all

274
00:08:04,496 --> 0:08:05,456
reservation types.

275
00:08:05,856 --> 0:08:07,146
Like the reservationNumber, and

276
00:08:07,146 --> 0:08:07,686
the name of the

277
00:08:07,686 --> 0:08:08,506
reservationHolder.

278
00:08:12,136 --> 0:08:13,206
We also want to capture

279
00:08:13,206 --> 0:08:14,426
information about the flight.

280
00:08:15,656 --> 0:08:16,916
It's created here in a separate

281
00:08:16,916 --> 0:08:18,086
method called createFlight.

282
00:08:18,886 --> 0:08:19,446
Let's jump to the

283
00:08:19,446 --> 0:08:19,976
implementation.

284
00:08:28,046 --> 0:08:29,726
Here, I'm creating an INFlight

285
00:08:29,726 --> 0:08:30,176
object.

286
00:08:30,826 --> 0:08:32,166
This represents all the details

287
00:08:32,166 --> 0:08:33,716
about the flight, such as the

288
00:08:33,716 --> 0:08:35,306
flight number, the airline,

289
00:08:35,936 --> 0:08:36,996
along with the information about

290
00:08:36,996 --> 0:08:37,946
departure and arrival.

291
00:08:37,946 --> 0:08:40,756
I still have some to-dos here,

292
00:08:41,135 --> 0:08:42,246
so let's go ahead and fix that

293
00:08:42,506 --> 0:08:43,966
starting with the airline and

294
00:08:43,966 --> 0:08:44,976
airport information.

295
00:08:54,046 --> 0:08:54,946
These objects represent the

296
00:08:54,946 --> 0:08:56,386
airline, and information about

297
00:08:56,386 --> 0:08:57,486
the flight departure and

298
00:08:57,486 --> 0:08:57,866
arrival.

299
00:08:58,866 --> 0:09:00,156
In this case, the flight is from

300
00:08:58,866 --> 0:09:00,156
In this case, the flight is from

301
00:09:00,156 --> 0:09:01,656
San Francisco to Paris.

302
00:09:03,226 --> 0:09:04,676
Both airlines and airports are

303
00:09:04,676 --> 0:09:06,206
identified using either an IATA

304
00:09:06,246 --> 0:09:07,456
or ICAO code.

305
00:09:08,456 --> 0:09:10,086
For airports, this is also used

306
00:09:11,016 --> 0:09:12,246
to determine the physical

307
00:09:12,246 --> 0:09:13,406
location of the airport.

308
00:09:14,016 --> 0:09:17,396
I'm adding gate and terminal

309
00:09:17,396 --> 0:09:19,346
information for departure, since

310
00:09:19,346 --> 0:09:20,616
it's already known at this time.

311
00:09:21,586 --> 0:09:22,426
I don't know the gate

312
00:09:22,426 --> 0:09:23,726
information for the arrival, so

313
00:09:23,726 --> 0:09:24,616
I set that nil.

314
00:09:29,056 --> 0:09:30,696
Next, I also need to specify the

315
00:09:30,696 --> 0:09:31,596
departure and arrival time for

316
00:09:31,596 --> 0:09:31,976
my flight.

317
00:09:37,276 --> 0:09:38,176
We are using the

318
00:09:38,176 --> 0:09:39,786
INDateComponentsRangeClass to

319
00:09:39,786 --> 0:09:40,976
represent the departure and

320
00:09:40,976 --> 0:09:41,586
arrival time.

321
00:09:41,586 --> 0:09:43,876
For the best user experience,

322
00:09:44,586 --> 0:09:45,786
I'm also setting the local time

323
00:09:45,786 --> 0:09:48,136
zone, sorry, I'm also setting

324
00:09:48,136 --> 0:09:49,936
the local time zone for the

325
00:09:49,936 --> 0:09:51,576
departure and arrival airports.

326
00:09:52,116 --> 0:09:54,736
Okay. So we set all the

327
00:09:54,736 --> 0:09:56,496
information we need to represent

328
00:09:56,496 --> 0:09:56,816
the flight.

329
00:09:57,616 --> 0:09:58,896
Let's go back and look at the

330
00:09:58,966 --> 0:09:59,976
rest of the reservation.

331
00:10:07,316 --> 0:10:08,746
I want to provide my users with

332
00:10:08,746 --> 0:10:10,616
a great check-in experience, so

333
00:10:10,616 --> 0:10:12,436
I want to take advantage of the

334
00:10:12,436 --> 0:10:13,316
new check-in shortcut.

335
00:10:14,606 --> 0:10:16,766
To do that, I need to create a

336
00:10:16,766 --> 0:10:17,496
check-in action.

337
00:10:18,316 --> 0:10:19,026
Let's jump to my

338
00:10:19,026 --> 0:10:19,976
createCheckInAction method.

339
00:10:27,386 --> 0:10:28,506
This method creates an

340
00:10:28,506 --> 0:10:30,566
INReservation action, which

341
00:10:30,566 --> 0:10:32,266
consists of a type, a valid

342
00:10:32,266 --> 0:10:33,876
duration, and a user activity.

343
00:10:35,276 --> 0:10:36,446
In my case, the type is

344
00:10:36,446 --> 0:10:38,606
Check-In, and the valid duration

345
00:10:38,606 --> 0:10:40,586
is the time when the user can

346
00:10:40,586 --> 0:10:41,276
check-in online.

347
00:10:41,876 --> 0:10:44,126
During this time, the user

348
00:10:44,126 --> 0:10:46,136
activity I specify will be

349
00:10:46,136 --> 0:10:47,326
displayed as a suggested

350
00:10:47,326 --> 0:10:47,706
shortcut.

351
00:10:50,016 --> 0:10:50,556
I'll start by creating the

352
00:10:50,556 --> 0:10:50,966
NSUserActivity.

353
00:11:03,046 --> 0:11:04,366
I'm creating the NSUserActivity

354
00:11:04,366 --> 0:11:05,876
with an activityType that lets

355
00:11:05,876 --> 0:11:07,466
my app know that this is a

356
00:11:07,466 --> 0:11:09,076
check-in activity when it is

357
00:11:09,546 --> 0:11:09,706
launched.

358
00:11:10,496 --> 0:11:12,586
I set the title to Check-In for

359
00:11:12,586 --> 0:11:13,456
Flight XX815.

360
00:11:13,516 --> 0:11:16,366
This is displayed to the user in

361
00:11:16,366 --> 0:11:17,936
the shortcut, so make sure it's

362
00:11:17,936 --> 0:11:22,536
short and descriptive.

363
00:11:22,536 --> 0:11:24,186
Next, I'm adding the details I

364
00:11:24,186 --> 0:11:25,756
need to know to start the

365
00:11:25,756 --> 0:11:27,156
check-in process when my app is

366
00:11:27,156 --> 0:11:27,556
launched.

367
00:11:27,986 --> 0:11:29,496
I add them to both the user info

368
00:11:29,496 --> 0:11:30,796
under requiredUserInfoKeys

369
00:11:30,796 --> 0:11:31,436
properties.

370
00:11:34,956 --> 0:11:37,026
I also add a webpage URL value.

371
00:11:38,306 --> 0:11:39,856
So the check-in process can be

372
00:11:39,856 --> 0:11:41,086
used even if my app is not

373
00:11:41,086 --> 0:11:41,676
installed.

374
00:11:43,116 --> 0:11:44,256
So I'm pretty happy with this

375
00:11:44,256 --> 0:11:46,016
user activity, but I also need

376
00:11:46,016 --> 0:11:46,976
to specify the valid duration.

377
00:11:53,626 --> 0:11:54,866
We're using EndDateComponents

378
00:11:54,866 --> 0:11:55,526
range again here.

379
00:11:56,116 --> 0:11:57,596
This time, to represent a start

380
00:11:57,596 --> 0:11:58,926
and end time for the valid

381
00:11:58,926 --> 0:11:59,346
duration.

382
00:12:00,306 --> 0:12:02,526
In this case check-in starts 24

383
00:12:02,526 --> 0:12:04,466
hours before departure, and ends

384
00:12:04,466 --> 0:12:06,356
one hour before departure, so

385
00:12:06,356 --> 0:12:07,526
that will be my valid duration.

386
00:12:08,066 --> 0:12:10,336
That's really all we need to

387
00:12:10,336 --> 0:12:11,076
create the great check-in

388
00:12:11,076 --> 0:12:11,726
shortcut.

389
00:12:12,226 --> 0:12:13,856
Let's go back and summarize what

390
00:12:13,856 --> 0:12:14,926
the reservation we created.

391
00:12:21,046 --> 0:12:22,126
Now, we have all the information

392
00:12:22,126 --> 0:12:23,126
we need including the

393
00:12:23,126 --> 0:12:24,996
reservation details, the flight

394
00:12:24,996 --> 0:12:26,536
information, and the check-in

395
00:12:26,536 --> 0:12:26,936
action.

396
00:12:28,016 --> 0:12:28,916
Let's go back to the

397
00:12:28,916 --> 0:12:29,816
ReservationDetails

398
00:12:30,616 --> 0:12:32,626
ViewController, to add the

399
00:12:32,626 --> 0:12:33,946
donation code.

400
00:12:34,836 --> 0:12:36,456
So, our view controller already

401
00:12:36,456 --> 0:12:37,626
knows about the reservation we

402
00:12:37,626 --> 0:12:38,266
just created.

403
00:12:38,916 --> 0:12:40,716
I set up a method here to donate

404
00:12:40,716 --> 0:12:41,346
the reservation.

405
00:12:42,156 --> 0:12:42,976
So let's add the donation code.

406
00:12:56,056 --> 0:12:57,486
Let me just remove the

407
00:12:57,486 --> 0:12:58,526
navigator, so you can see

408
00:12:58,526 --> 0:12:58,806
better.

409
00:12:59,466 --> 0:13:03,036
So I'm starting by creating the

410
00:12:59,466 --> 0:13:03,036
So I'm starting by creating the

411
00:13:03,036 --> 0:13:03,386
intent.

412
00:13:04,116 --> 0:13:05,616
The intent tells Siri which

413
00:13:05,616 --> 0:13:07,006
reservation was displayed to the

414
00:13:07,006 --> 0:13:07,396
user.

415
00:13:08,516 --> 0:13:10,326
It takes two parameters, the

416
00:13:10,326 --> 0:13:11,696
ContainerReference, and the

417
00:13:11,696 --> 0:13:12,356
ItemReference.

418
00:13:13,596 --> 0:13:14,876
The ContainerReference uniquely

419
00:13:14,876 --> 0:13:16,586
identifies the reservation as a

420
00:13:16,586 --> 0:13:16,976
whole.

421
00:13:18,086 --> 0:13:19,176
In this case, I only have a

422
00:13:19,176 --> 0:13:20,906
single reservation item, the

423
00:13:20,906 --> 0:13:21,156
flight.

424
00:13:21,156 --> 0:13:23,486
So I will use the ItemReference

425
00:13:23,486 --> 0:13:25,376
I set on the ReservationItem, as

426
00:13:25,376 --> 0:13:26,366
the ContainerReference.

427
00:13:27,486 --> 0:13:28,206
If I have multiple

428
00:13:28,206 --> 0:13:30,316
ReservationItems, such as a

429
00:13:30,316 --> 0:13:32,236
hotel and a flight, I would

430
00:13:32,236 --> 0:13:33,636
create a new ContainerReference

431
00:13:33,916 --> 0:13:36,566
to represent that reservation as

432
00:13:36,566 --> 0:13:37,046
a whole.

433
00:13:39,226 --> 0:13:39,546
I'll set the

434
00:13:39,546 --> 0:13:40,686
ReservationItemReference as

435
00:13:40,686 --> 0:13:41,536
property to nil.

436
00:13:42,326 --> 0:13:44,246
This is populated by the system

437
00:13:44,246 --> 0:13:45,646
when launching my app.

438
00:13:48,176 --> 0:13:49,986
In addition to the Intent, I

439
00:13:49,986 --> 0:13:51,606
also specify an intentResponse,

440
00:13:51,786 --> 0:13:53,076
and add my reservation to it.

441
00:13:53,976 --> 0:13:55,386
This informs Siri about what

442
00:13:55,386 --> 0:13:57,446
reservation details I display to

443
00:13:57,996 --> 0:13:58,856
the user.

444
00:13:58,996 --> 0:14:00,856
Finally, I'll add the intent and

445
00:13:58,996 --> 0:14:00,856
Finally, I'll add the intent and

446
00:14:00,856 --> 0:14:02,076
intentResponse to an

447
00:14:02,166 --> 0:14:03,936
INInteraction, and donate that

448
00:14:03,936 --> 0:14:04,586
to the system.

449
00:14:05,166 --> 0:14:07,296
So, now we've written all the

450
00:14:07,296 --> 0:14:08,566
code we need to donate this

451
00:14:08,566 --> 0:14:10,046
reservation, but there is one

452
00:14:10,046 --> 0:14:10,876
more thing we need to check

453
00:14:11,126 --> 0:14:11,976
before we can launch the app.

454
00:14:18,266 --> 0:14:19,106
I need to add

455
00:14:19,106 --> 0:14:20,656
INGetReservationDetailsIntent,

456
00:14:20,656 --> 0:14:22,466
and my custom CheckInActivity to

457
00:14:22,466 --> 0:14:23,816
the list of supported activity

458
00:14:23,816 --> 0:14:25,276
types in my info.plist.

459
00:14:26,116 --> 0:14:27,616
Luckily, I already did this

460
00:14:27,616 --> 0:14:28,936
earlier, so we're good to go.

461
00:14:34,156 --> 0:14:35,786
First, let's recap.

462
00:14:37,066 --> 0:14:38,406
We created and donated an

463
00:14:38,496 --> 0:14:39,846
INFlightReservation that

464
00:14:39,846 --> 0:14:41,076
contains all the information

465
00:14:41,326 --> 0:14:42,226
about the reservation.

466
00:14:43,666 --> 0:14:44,676
Now, Siri knows about the

467
00:14:44,676 --> 0:14:46,436
reservation, and can provide

468
00:14:46,436 --> 0:14:48,396
proactive suggestions throughout

469
00:14:49,096 --> 0:14:49,986
the system.

470
00:14:50,126 --> 0:14:51,486
We also added an INReservation

471
00:14:51,486 --> 0:14:52,886
action, to provide a great

472
00:14:52,886 --> 0:14:54,136
check-in experience, with a

473
00:14:54,136 --> 0:14:55,646
shortcut that is displayed to

474
00:14:55,646 --> 0:14:57,206
the user, and takes them

475
00:14:57,206 --> 0:14:58,636
directly into the check-in flow

476
00:14:58,636 --> 0:14:59,326
at the right time.

477
00:15:00,676 --> 0:15:02,316
Let's see this in action.

478
00:15:06,266 --> 0:15:07,226
So, I'm back in my app.

479
00:15:07,636 --> 0:15:08,806
Let's view the flight to Paris

480
00:15:08,806 --> 0:15:10,356
reservation like we did before.

481
00:15:10,356 --> 0:15:14,156
When I view the reservation this

482
00:15:14,156 --> 0:15:15,676
time, I see a notification

483
00:15:16,296 --> 0:15:17,326
telling me Siri found an event

484
00:15:17,326 --> 0:15:17,976
and put it in my calendar.

485
00:15:18,016 --> 0:15:19,766
[ Applause ]

486
00:15:19,766 --> 0:15:19,976
Thank you.

487
00:15:20,516 --> 0:15:22,846
[ Applause ]

488
00:15:23,346 --> 0:15:24,656
I'll tap the notification and

489
00:15:24,656 --> 0:15:26,086
see what it looks like.

490
00:15:27,346 --> 0:15:28,896
So, as we can see, Siri used the

491
00:15:28,896 --> 0:15:30,916
information I donated to create

492
00:15:30,916 --> 0:15:32,396
an event in My Siri Suggestions

493
00:15:32,396 --> 0:15:32,836
Calendar.

494
00:15:32,836 --> 0:15:35,326
Now, there is also a link back

495
00:15:35,326 --> 0:15:35,896
to my app.

496
00:15:37,086 --> 0:15:38,786
When I tap it, I am brought

497
00:15:38,786 --> 0:15:40,196
right back into my app.

498
00:15:40,566 --> 0:15:41,156
So that's great.

499
00:15:42,056 --> 0:15:43,206
However, I don't see the

500
00:15:43,206 --> 0:15:44,616
reservation details about the

501
00:15:44,616 --> 0:15:45,396
event that I was viewing in

502
00:15:45,396 --> 0:15:47,216
Calendar, and I think we can do

503
00:15:47,216 --> 0:15:47,516
better.

504
00:15:47,956 --> 0:15:49,416
Let's go back to Xcode and see

505
00:15:49,416 --> 0:15:53,886
how to implement app launch.

506
00:15:54,076 --> 0:15:55,556
To handle app launch, I'm going

507
00:15:55,746 --> 0:15:59,006
to go to my AppDelegate.

508
00:15:59,006 --> 0:16:00,426
When Siri launches my app, it's

509
00:15:59,006 --> 0:16:00,426
When Siri launches my app, it's

510
00:16:00,426 --> 0:16:01,596
going to be launched using an

511
00:16:01,596 --> 0:16:02,486
NSUserActivity.

512
00:16:02,706 --> 0:16:03,646
So I need to implement the

513
00:16:03,646 --> 0:16:04,306
application

514
00:16:04,306 --> 0:16:05,996
ContinueUserActivity, Delegate

515
00:16:05,996 --> 0:16:06,316
Method.

516
00:16:10,356 --> 0:16:11,566
I'm adding support for two

517
00:16:11,566 --> 0:16:12,516
activity types here.

518
00:16:13,266 --> 0:16:14,396
The first is the

519
00:16:14,396 --> 0:16:15,846
INGetReservationDetailsIntent.

520
00:16:16,856 --> 0:16:18,526
This activity type indicates

521
00:16:18,586 --> 0:16:19,596
that a user wanted to see

522
00:16:19,876 --> 0:16:21,096
details about a specific

523
00:16:21,096 --> 0:16:22,276
reservation in my app.

524
00:16:22,916 --> 0:16:24,296
I'll call my

525
00:16:24,296 --> 0:16:25,846
handleShowReservation method,

526
00:16:26,246 --> 0:16:27,286
which will display the relevant

527
00:16:27,286 --> 0:16:27,976
reservation to the user.

528
00:16:35,316 --> 0:16:37,876
The second one is the activity

529
00:16:37,876 --> 0:16:39,116
type I define for the check-in

530
00:16:39,116 --> 0:16:39,636
shortcut.

531
00:16:40,236 --> 0:16:41,576
This is used when the user taps

532
00:16:41,576 --> 0:16:42,906
the check-in shortcut on the

533
00:16:42,906 --> 0:16:44,196
lock screen or in search.

534
00:16:44,746 --> 0:16:46,876
I'll call my handleCheckIn

535
00:16:46,876 --> 0:16:48,136
method when this happens, to

536
00:16:48,136 --> 0:16:49,366
start the check-in process.

537
00:16:51,586 --> 0:16:53,056
So, now handling both cases,

538
00:16:53,606 --> 0:16:54,826
let's launch the app and see

539
00:16:54,826 --> 0:16:55,976
this in action.

540
00:17:02,066 --> 0:17:04,046
First, let's go back to

541
00:17:04,046 --> 0:17:06,026
Calendar, and tap the show in My

542
00:17:06,026 --> 0:17:06,986
Flights button again.

543
00:17:07,576 --> 0:17:10,896
As you can see, my app now

544
00:17:10,896 --> 0:17:12,076
launches directly into the

545
00:17:12,076 --> 0:17:13,226
reservation details for this

546
00:17:13,226 --> 0:17:13,536
event.

547
00:17:14,096 --> 0:17:15,246
Now, this is a much better user

548
00:17:15,246 --> 0:17:15,856
experience.

549
00:17:16,516 --> 0:17:20,786
[ Applause ]

550
00:17:21,286 --> 0:17:22,386
I also added support for the

551
00:17:22,386 --> 0:17:24,626
check-in shortcut, and my flight

552
00:17:24,626 --> 0:17:26,876
leaves tomorrow at 2:50 PM, so

553
00:17:26,876 --> 0:17:28,205
check-in should already be open.

554
00:17:29,406 --> 0:17:30,306
Let's see how that works.

555
00:17:31,756 --> 0:17:32,756
Now, the check-in shortcut

556
00:17:32,756 --> 0:17:34,136
appears both on the lock screen

557
00:17:34,646 --> 0:17:35,386
and in the Search UI.

558
00:17:35,386 --> 0:17:38,246
When I tap it, I'm launched

559
00:17:38,246 --> 0:17:39,706
directly into the check-in flow

560
00:17:39,706 --> 0:17:40,126
of my app.

561
00:17:40,126 --> 0:17:40,956
That's pretty awesome.

562
00:17:41,516 --> 0:17:47,416
[ Applause ]

563
00:17:47,916 --> 0:17:48,936
So let's recap.

564
00:17:49,746 --> 0:17:51,136
We created and donated a

565
00:17:51,136 --> 0:17:51,746
reservation.

566
00:17:53,106 --> 0:17:54,496
We provided a check-in action,

567
00:17:55,546 --> 0:17:56,866
and we made sure to handle app

568
00:17:56,866 --> 0:17:57,136
launch.

569
00:17:58,646 --> 0:17:59,686
This is how we see it, is to

570
00:17:59,686 --> 0:18:01,206
take advantage of the Siri Event

571
00:17:59,686 --> 0:18:01,206
take advantage of the Siri Event

572
00:18:01,206 --> 0:18:03,026
Suggestions API, to provide deep

573
00:18:03,026 --> 0:18:04,806
system integration and the great

574
00:18:04,806 --> 0:18:05,766
user experience.

575
00:18:06,446 --> 0:18:07,776
Now, I would like to tell you

576
00:18:07,776 --> 0:18:11,366
more about the API.

577
00:18:11,606 --> 0:18:12,986
We'll begin with Donations, and

578
00:18:12,986 --> 0:18:14,126
talk about how Siri used the

579
00:18:14,126 --> 0:18:16,126
information you donate in places

580
00:18:16,126 --> 0:18:18,356
like Shortcut Suggestions, and

581
00:18:18,356 --> 0:18:18,776
Calendar.

582
00:18:20,486 --> 0:18:22,336
As we saw in the demo, your app

583
00:18:22,336 --> 0:18:23,656
is front and center in the

584
00:18:23,656 --> 0:18:24,486
check-in shortcut.

585
00:18:24,486 --> 0:18:26,596
We display your app name and

586
00:18:26,596 --> 0:18:28,026
icon along with the information

587
00:18:28,026 --> 0:18:28,966
about the reservation.

588
00:18:30,266 --> 0:18:32,046
Again, we use the title you set

589
00:18:32,046 --> 0:18:33,766
on the NSUserActivity in the

590
00:18:33,766 --> 0:18:34,316
shortcut.

591
00:18:34,936 --> 0:18:36,386
So, make sure you use a string

592
00:18:36,386 --> 0:18:37,616
that is accurate and

593
00:18:37,616 --> 0:18:38,826
descriptive.

594
00:18:40,576 --> 0:18:42,026
Now, Siri automatically

595
00:18:42,026 --> 0:18:43,066
synchronized the reservation

596
00:18:43,066 --> 0:18:44,236
details across the user's

597
00:18:44,286 --> 0:18:45,846
devices using end-to-end

598
00:18:45,846 --> 0:18:46,306
encryption.

599
00:18:46,536 --> 0:18:48,136
So the user might see the

600
00:18:48,136 --> 0:18:49,576
check-in shortcut on the device

601
00:18:49,576 --> 0:18:50,716
where your app is not installed.

602
00:18:51,296 --> 0:18:52,616
In this case, an iPad.

603
00:18:54,056 --> 0:18:55,556
When this happens, we'll use the

604
00:18:55,556 --> 0:18:57,486
web page URL property you set on

605
00:18:57,486 --> 0:18:59,476
the NSUserActivity to provide a

606
00:18:59,476 --> 0:19:01,056
web base check-in flow using

607
00:18:59,476 --> 0:19:01,056
web base check-in flow using

608
00:19:01,056 --> 0:19:01,506
Safari.

609
00:19:02,176 --> 0:19:04,236
So that is a check-in shortcut.

610
00:19:04,776 --> 0:19:07,476
Let's take a look at Calendar.

611
00:19:07,566 --> 0:19:09,076
Now, first up is the Title.

612
00:19:10,016 --> 0:19:11,376
The title is auto-generated by

613
00:19:11,376 --> 0:19:13,726
Siri using the reservation

614
00:19:13,726 --> 0:19:14,836
details you provided.

615
00:19:15,846 --> 0:19:17,376
As you can see, Siri adds a

616
00:19:17,376 --> 0:19:19,086
localized reservation type to

617
00:19:19,086 --> 0:19:20,186
the title.

618
00:19:20,696 --> 0:19:22,046
Depending on the reservation

619
00:19:22,046 --> 0:19:23,436
type, different parts of the

620
00:19:23,436 --> 0:19:24,656
information may be used to

621
00:19:24,656 --> 0:19:25,476
generate the title.

622
00:19:26,286 --> 0:19:27,416
So make sure you provide all

623
00:19:27,416 --> 0:19:30,306
details as is, and do not

624
00:19:30,516 --> 0:19:30,956
prepend or append anything for display

625
00:19:30,956 --> 0:19:31,606
purposes.

626
00:19:32,066 --> 0:19:34,646
Next is Location.

627
00:19:35,756 --> 0:19:37,236
Location is a key component to

628
00:19:37,236 --> 0:19:39,106
the user experience, and it

629
00:19:39,376 --> 0:19:41,006
drives system integrations such

630
00:19:41,006 --> 0:19:42,516
as a time-to-leave notification

631
00:19:42,516 --> 0:19:43,606
and Maps integration.

632
00:19:44,666 --> 0:19:46,046
For most reservation types,

633
00:19:46,256 --> 0:19:47,846
SiriKit uses the CLPlacemark

634
00:19:47,846 --> 0:19:49,406
class to represent locations.

635
00:19:50,806 --> 0:19:52,046
You can create the CLPlacemark

636
00:19:52,046 --> 0:19:53,666
object yourself, or if your app

637
00:19:53,666 --> 0:19:55,366
uses MapKit, you can get it off

638
00:19:55,366 --> 0:19:56,116
the MapKit item.

639
00:19:56,486 --> 0:19:59,346
If you do create a CLPlacemark

640
00:19:59,346 --> 0:20:01,106
object yourself, be sure to

641
00:19:59,346 --> 0:20:01,106
object yourself, be sure to

642
00:20:01,106 --> 0:20:02,996
include both location and postal

643
00:20:02,996 --> 0:20:04,986
address if you have both.

644
00:20:05,956 --> 0:20:07,076
If you do not know the

645
00:20:07,076 --> 0:20:09,066
coordinates, set them to 00.

646
00:20:09,746 --> 0:20:11,106
This will let Siri know to use

647
00:20:11,106 --> 0:20:12,216
only the postal address.

648
00:20:12,666 --> 0:20:15,996
Next step is the start and end

649
00:20:15,996 --> 0:20:17,106
time of the reservation.

650
00:20:18,466 --> 0:20:19,916
As you can see, the event

651
00:20:20,306 --> 0:20:22,006
displays both the start and end

652
00:20:22,006 --> 0:20:23,746
time using the user's current

653
00:20:23,746 --> 0:20:25,506
time zone, and the time zone of

654
00:20:25,556 --> 0:20:26,836
the reservation.

655
00:20:27,636 --> 0:20:29,416
So, make sure you set the local

656
00:20:29,416 --> 0:20:31,486
time zone for the reservation or

657
00:20:31,486 --> 0:20:33,176
use UTC if you don't have that

658
00:20:33,176 --> 0:20:35,646
available in your app.

659
00:20:35,916 --> 0:20:37,106
Some reservation types have a

660
00:20:37,106 --> 0:20:38,316
clear start and end time.

661
00:20:39,286 --> 0:20:41,026
For instance, for a flight, use

662
00:20:41,026 --> 0:20:42,836
the scheduled departure and the

663
00:20:42,836 --> 0:20:43,876
scheduled arrival time.

664
00:20:45,146 --> 0:20:46,856
For reservations like lodging

665
00:20:46,856 --> 0:20:49,056
and car rental, use the check-in

666
00:20:49,056 --> 0:20:51,526
and check-out time.

667
00:20:51,736 --> 0:20:52,776
If your reservation doesn't have

668
00:20:52,776 --> 0:20:54,526
a specific end time, set at nil,

669
00:20:55,466 --> 0:20:56,796
that way Siri will use the

670
00:20:56,796 --> 0:20:58,486
de-filterization based on the

671
00:20:58,486 --> 0:20:59,626
reservation type.

672
00:21:00,116 --> 0:21:03,366
Next is the Notes section.

673
00:21:04,086 --> 0:21:05,996
Siri uses the Notes section to

674
00:21:05,996 --> 0:21:07,096
populate it with more

675
00:21:07,096 --> 0:21:08,096
information from your

676
00:21:08,096 --> 0:21:09,586
reservation details that might

677
00:21:09,586 --> 0:21:11,406
be useful to the user, such as

678
00:21:11,406 --> 0:21:12,626
the reservation number or

679
00:21:12,626 --> 0:21:13,496
seating information.

680
00:21:14,706 --> 0:21:15,856
Be sure you populate all the

681
00:21:15,856 --> 0:21:17,096
reservation details for which

682
00:21:17,096 --> 0:21:18,716
you have information, as it may

683
00:21:18,716 --> 0:21:20,356
be displayed to the user.

684
00:21:21,816 --> 0:21:24,166
Finally, Siri provides a link

685
00:21:24,166 --> 0:21:25,596
directly from Calendar into your

686
00:21:25,596 --> 0:21:25,766
app.

687
00:21:26,786 --> 0:21:28,566
Tapping on it launches your app,

688
00:21:28,676 --> 0:21:30,146
so it can display more details

689
00:21:30,416 --> 0:21:31,356
about the reservation.

690
00:21:31,356 --> 0:21:33,776
So, let's take a look at what

691
00:21:33,776 --> 0:21:35,196
you need to know to handle this

692
00:21:35,196 --> 0:21:36,406
in your app.

693
00:21:38,156 --> 0:21:40,316
To understand app launch, let's

694
00:21:40,316 --> 0:21:42,736
take a step back and look at

695
00:21:42,736 --> 0:21:43,696
what we're donating.

696
00:21:44,636 --> 0:21:46,586
Earlier in the demo, we donated

697
00:21:46,586 --> 0:21:47,866
a single reservation item.

698
00:21:48,426 --> 0:21:50,486
But let's consider a case when

699
00:21:50,486 --> 0:21:51,616
there are multiple reservation

700
00:21:51,616 --> 0:21:52,066
items.

701
00:21:52,796 --> 0:21:53,906
For instance, a round trip

702
00:21:53,906 --> 0:21:54,196
flight.

703
00:21:54,916 --> 0:21:57,096
In that case, we have two

704
00:21:57,096 --> 0:21:58,436
reservation items that might

705
00:21:58,436 --> 0:21:59,426
share the same reservation

706
00:21:59,426 --> 0:21:59,776
number.

707
00:22:01,206 --> 0:22:02,876
As such, the reservation number

708
00:22:02,876 --> 0:22:04,466
can be used to uniquely identify

709
00:22:04,466 --> 0:22:07,656
a specific reservation item.

710
00:22:08,046 --> 0:22:09,186
For this reason, your app must

711
00:22:09,256 --> 0:22:10,716
always provide an additional

712
00:22:10,716 --> 0:22:12,356
identifier called the

713
00:22:12,356 --> 0:22:13,086
itemReference.

714
00:22:13,596 --> 0:22:16,346
The itemReference must be unique

715
00:22:16,396 --> 0:22:18,086
for every reservation item in

716
00:22:18,086 --> 0:22:19,326
your app.

717
00:22:19,606 --> 0:22:20,536
How you structure the

718
00:22:20,536 --> 0:22:21,836
itemReference is really up to

719
00:22:21,836 --> 0:22:23,416
you, as long as you're able to

720
00:22:23,416 --> 0:22:24,896
reason about which reservation

721
00:22:24,896 --> 0:22:25,876
it belongs to later on.

722
00:22:27,306 --> 0:22:29,206
In this example, we're creating

723
00:22:29,206 --> 0:22:30,656
a reservation item by combining

724
00:22:30,656 --> 0:22:31,906
the shared reservation number

725
00:22:32,276 --> 0:22:33,716
and the specific flight number.

726
00:22:37,896 --> 0:22:39,526
Next, we add the two reservation

727
00:22:39,526 --> 0:22:40,376
items to an

728
00:22:40,456 --> 0:22:41,906
INGetReservationDetailsIntent

729
00:22:41,906 --> 0:22:43,816
response, and to complete our

730
00:22:43,816 --> 0:22:45,466
donation, we also need to create

731
00:22:45,466 --> 0:22:45,636
the

732
00:22:45,636 --> 0:22:47,186
INGetReservationDetailsIntent.

733
00:22:50,046 --> 0:22:51,606
When creating the intent, we

734
00:22:51,606 --> 0:22:52,856
need to tell Siri which

735
00:22:52,856 --> 0:22:54,236
reservation the user was

736
00:22:54,236 --> 0:22:54,606
viewing.

737
00:22:55,106 --> 0:22:57,166
This is represented by the

738
00:22:57,166 --> 0:22:58,126
ContainerReference.

739
00:22:58,676 --> 0:23:01,186
In this example, we're donating

740
00:22:58,676 --> 0:23:01,186
In this example, we're donating

741
00:23:01,186 --> 0:23:02,806
two flights that are part of the

742
00:23:02,806 --> 0:23:03,776
same reservation.

743
00:23:04,566 --> 0:23:05,136
So we are setting the

744
00:23:05,136 --> 0:23:06,736
ContainerReference to the shared

745
00:23:06,736 --> 0:23:08,436
reservation number, since it

746
00:23:08,436 --> 0:23:09,596
uniquely identifies the

747
00:23:09,596 --> 0:23:10,676
reservation as a whole.

748
00:23:12,616 --> 0:23:13,996
Finally, we are setting the

749
00:23:13,996 --> 0:23:15,766
Reservation Item References area

750
00:23:15,766 --> 0:23:16,186
to nil.

751
00:23:16,856 --> 0:23:18,046
This is only used when launching

752
00:23:18,046 --> 0:23:19,396
your app, to let it know which

753
00:23:19,396 --> 0:23:21,056
specific reservation the user

754
00:23:21,056 --> 0:23:22,406
wants to see.

755
00:23:23,866 --> 0:23:24,756
So that's our donation.

756
00:23:25,306 --> 0:23:27,486
Let's take a look at how this

757
00:23:27,486 --> 0:23:28,836
information is used when

758
00:23:28,836 --> 0:23:30,126
launching your app.

759
00:23:31,676 --> 0:23:33,556
When your app is launched to

760
00:23:33,556 --> 0:23:34,756
show reservation details, it

761
00:23:35,026 --> 0:23:36,016
will be launched using an

762
00:23:36,106 --> 0:23:37,586
INGetReservationDetailsIntent.

763
00:23:39,056 --> 0:23:40,796
This represents what reservation

764
00:23:40,796 --> 0:23:41,976
the user wants to see details

765
00:23:41,976 --> 0:23:42,326
about.

766
00:23:43,216 --> 0:23:45,296
In this example, we're launching

767
00:23:45,296 --> 0:23:46,596
the app with an intent saying

768
00:23:46,596 --> 0:23:47,976
the user wants detail about a

769
00:23:47,976 --> 0:23:49,976
reservation identified as B9C8.

770
00:23:51,666 --> 0:23:52,706
If the reservation item

771
00:23:52,706 --> 0:23:54,306
reference array is set to nil,

772
00:23:54,756 --> 0:23:55,896
your app should show a UI

773
00:23:55,896 --> 0:23:57,376
displaying this reservation as a

774
00:23:57,376 --> 0:23:57,876
whole.

775
00:23:58,816 --> 0:24:00,216
In our previous example, that

776
00:23:58,816 --> 0:24:00,216
In our previous example, that

777
00:24:00,216 --> 0:24:01,466
would mean showing both flights.

778
00:24:02,956 --> 0:24:05,266
The user might also want to see

779
00:24:05,476 --> 0:24:06,596
details about a specific

780
00:24:06,596 --> 0:24:08,456
reservation, such as one of the

781
00:24:08,456 --> 0:24:09,756
flights from our previous

782
00:24:09,756 --> 0:24:10,166
example.

783
00:24:11,426 --> 0:24:13,056
In that case, your app will be

784
00:24:13,056 --> 0:24:14,776
launched with a Reservation Item

785
00:24:14,776 --> 0:24:16,426
References Array populated with

786
00:24:16,426 --> 0:24:17,156
a single item.

787
00:24:18,336 --> 0:24:19,736
This will be the item reference

788
00:24:19,736 --> 0:24:21,236
you set on the INReservation

789
00:24:21,236 --> 0:24:22,546
object for this reservation.

790
00:24:23,906 --> 0:24:24,976
In that case, your app should

791
00:24:24,976 --> 0:24:26,706
show a UI displaying details

792
00:24:26,706 --> 0:24:27,756
about only the specific

793
00:24:27,756 --> 0:24:28,386
reservation.

794
00:24:31,496 --> 0:24:33,066
Before launching your app, we

795
00:24:33,066 --> 0:24:34,096
wrap the intent in an

796
00:24:34,166 --> 0:24:35,956
INInteraction and NSUserActivity

797
00:24:35,956 --> 0:24:36,316
object.

798
00:24:36,936 --> 0:24:38,276
With the activity type, set the

799
00:24:38,276 --> 0:24:40,016
name of the Intent and launch

800
00:24:40,016 --> 0:24:41,646
your app using that, like we saw

801
00:24:41,646 --> 0:24:41,976
in the demo.

802
00:24:45,646 --> 0:24:46,826
So, we looked at how Siri uses

803
00:24:46,826 --> 0:24:47,976
the reservation details you

804
00:24:47,976 --> 0:24:49,576
donate, and how that information

805
00:24:49,576 --> 0:24:51,246
is used later on to launch your

806
00:24:51,956 --> 0:24:52,026
app.

807
00:24:52,656 --> 0:24:54,906
But as we know, life happens.

808
00:24:55,886 --> 0:24:57,136
A user might change or even

809
00:24:57,136 --> 0:24:58,896
cancel their reservation, and

810
00:24:58,896 --> 0:25:00,026
that can happen inside or

811
00:24:58,896 --> 0:25:00,026
that can happen inside or

812
00:25:00,026 --> 0:25:00,696
outside your app.

813
00:25:01,086 --> 0:25:02,556
For instance, from a web page.

814
00:25:03,916 --> 0:25:04,756
Let's take a look at how to

815
00:25:04,756 --> 0:25:06,096
handle some of those cases.

816
00:25:06,576 --> 0:25:09,916
First, let's talk about when is

817
00:25:09,916 --> 0:25:11,146
the right time for your app to

818
00:25:11,146 --> 0:25:11,516
donate.

819
00:25:12,056 --> 0:25:14,746
In this example, the user is

820
00:25:14,746 --> 0:25:15,766
looking at details for a

821
00:25:15,766 --> 0:25:16,736
specific reservation.

822
00:25:17,916 --> 0:25:19,256
Now, this is an excellent time

823
00:25:19,256 --> 0:25:21,116
for your app to donate, because

824
00:25:21,116 --> 0:25:23,016
like we saw earlier in the demo,

825
00:25:23,076 --> 0:25:24,256
we might show a notification to

826
00:25:24,256 --> 0:25:24,776
the user.

827
00:25:26,056 --> 0:25:27,736
Seeing the notification and the

828
00:25:27,736 --> 0:25:29,216
reservation details at the same

829
00:25:29,216 --> 0:25:31,046
time provides a great contextual

830
00:25:31,046 --> 0:25:32,006
user experience.

831
00:25:32,526 --> 0:25:34,996
But life also happens when your

832
00:25:34,996 --> 0:25:37,046
app is in the background, and

833
00:25:37,046 --> 0:25:38,386
users should always have up to

834
00:25:38,386 --> 0:25:39,186
date information.

835
00:25:40,056 --> 0:25:41,636
So a new or updated reservation

836
00:25:41,636 --> 0:25:43,206
information becomes available,

837
00:25:44,276 --> 0:25:45,416
donate that from the background.

838
00:25:46,826 --> 0:25:48,146
In that case, we won't show a

839
00:25:48,146 --> 0:25:49,366
notification to the user.

840
00:25:49,966 --> 0:25:52,446
So those are great times for

841
00:25:52,446 --> 0:25:53,956
your app to donate, while there

842
00:25:53,956 --> 0:25:55,106
are some not so great times for

843
00:25:55,106 --> 0:25:55,726
your app to donate.

844
00:25:56,296 --> 0:25:59,036
As we showed earlier in the

845
00:25:59,036 --> 0:26:01,116
demo, your app should not donate

846
00:25:59,036 --> 0:26:01,116
demo, your app should not donate

847
00:26:01,176 --> 0:26:02,716
when showing a list of unrelated

848
00:26:02,716 --> 0:26:03,516
reservations.

849
00:26:05,176 --> 0:26:06,396
Showing a notification at that

850
00:26:06,396 --> 0:26:08,456
point might surprise the user

851
00:26:08,626 --> 0:26:09,806
because of a lack of context.

852
00:26:10,376 --> 0:26:12,346
To provide a seamless

853
00:26:12,346 --> 0:26:14,016
experience, your app should not

854
00:26:14,016 --> 0:26:15,146
provide UI elements that

855
00:26:15,146 --> 0:26:16,606
explicitly donate to Siri.

856
00:26:17,216 --> 0:26:20,066
In this example, the app should

857
00:26:20,066 --> 0:26:21,246
donate when the reservation

858
00:26:21,246 --> 0:26:22,476
details are being displayed.

859
00:26:22,476 --> 0:26:26,436
Next, let's look at some changes

860
00:26:26,436 --> 0:26:27,726
that might happen to the

861
00:26:27,726 --> 0:26:28,306
reservation.

862
00:26:28,866 --> 0:26:31,736
Here, we use the example of a

863
00:26:31,736 --> 0:26:33,146
user selecting a seat for a

864
00:26:33,146 --> 0:26:33,446
flight.

865
00:26:35,016 --> 0:26:36,256
We previously donated this

866
00:26:36,256 --> 0:26:36,826
reservation.

867
00:26:37,346 --> 0:26:39,626
At the time, seating information

868
00:26:39,626 --> 0:26:41,146
was not available, so we set the

869
00:26:41,146 --> 0:26:42,176
seat property to nil.

870
00:26:43,366 --> 0:26:44,546
Now, the user has selected a

871
00:26:44,546 --> 0:26:46,826
seat, so we are going to donate

872
00:26:46,826 --> 0:26:48,126
the updated reservation details

873
00:26:48,626 --> 0:26:49,696
with the seating information

874
00:26:49,696 --> 0:26:50,066
set.

875
00:26:51,526 --> 0:26:52,906
Keep in mind that the item

876
00:26:52,906 --> 0:26:54,586
reference must remain the same

877
00:26:54,816 --> 0:26:55,906
throughout the reservation life

878
00:26:55,906 --> 0:26:56,286
cycle.

879
00:26:57,806 --> 0:26:59,176
Once donated, Siri will

880
00:26:59,176 --> 0:27:00,816
propagate this information to

881
00:26:59,176 --> 0:27:00,816
propagate this information to

882
00:27:00,816 --> 0:27:01,846
all the relevant places,

883
00:27:02,206 --> 0:27:02,976
including Calendar.

884
00:27:03,456 --> 0:27:05,636
Next, let's talk about

885
00:27:05,636 --> 0:27:06,396
cancellations.

886
00:27:07,836 --> 0:27:09,696
Cancellations are a special type

887
00:27:09,696 --> 0:27:10,546
of modification.

888
00:27:11,566 --> 0:27:13,246
In this example, we already

889
00:27:13,246 --> 0:27:15,636
donated this reservation with a

890
00:27:15,636 --> 0:27:16,786
status that confirmed.

891
00:27:17,886 --> 0:27:19,326
Unfortunately, the user had to

892
00:27:19,326 --> 0:27:20,456
cancel the reservation.

893
00:27:21,126 --> 0:27:22,106
So we are going to donate the

894
00:27:22,106 --> 0:27:23,776
updated reservation details with

895
00:27:23,776 --> 0:27:25,056
a status set to cancel.

896
00:27:25,476 --> 0:27:28,356
Like with all modifications, the

897
00:27:28,356 --> 0:27:29,786
itemReference must remain the

898
00:27:29,786 --> 0:27:30,146
same.

899
00:27:30,696 --> 0:27:32,786
So, that's how your app should

900
00:27:32,786 --> 0:27:33,976
handle some of the things that

901
00:27:33,976 --> 0:27:34,716
can happen during the

902
00:27:34,716 --> 0:27:35,776
reservation life cycle.

903
00:27:37,086 --> 0:27:38,496
Now, let's summarize what we

904
00:27:38,496 --> 0:27:39,896
talked about today.

905
00:27:41,336 --> 0:27:43,026
So, we've seen how easy it is to

906
00:27:43,026 --> 0:27:44,486
take advantage of the Siri Event

907
00:27:44,486 --> 0:27:46,156
Suggestions API, and how we

908
00:27:46,196 --> 0:27:47,836
provide a great user experience

909
00:27:47,996 --> 0:27:49,056
throughout the reservation life

910
00:27:49,056 --> 0:27:49,426
cycle.

911
00:27:50,516 --> 0:27:51,726
Here are the three main

912
00:27:51,726 --> 0:27:52,376
takeaways.

913
00:27:52,886 --> 0:27:55,086
Your app should donate

914
00:27:55,086 --> 0:27:56,386
reservation details when they

915
00:27:56,386 --> 0:27:58,336
are displayed to the user, or

916
00:27:58,336 --> 0:27:59,416
when they are received in the

917
00:27:59,416 --> 0:27:59,896
background.

918
00:28:02,056 --> 0:28:03,196
Make sure you keep your users up

919
00:28:03,196 --> 0:28:04,506
to date by donating when the

920
00:28:04,506 --> 0:28:05,756
reservation details change.

921
00:28:06,966 --> 0:28:09,206
And finally, remember to handle

922
00:28:09,206 --> 0:28:11,366
app launch, so the users can get

923
00:28:11,366 --> 0:28:13,206
back into your app at the right

924
00:28:13,206 --> 0:28:16,866
time, and the right place.

925
00:28:17,046 --> 0:28:18,406
For more information, and to get

926
00:28:18,406 --> 0:28:19,916
access to our sample code, you

927
00:28:19,916 --> 0:28:21,166
can visit our session link on

928
00:28:21,166 --> 0:28:22,026
the Developer Portal.

929
00:28:22,976 --> 0:28:24,026
We also have some related

930
00:28:24,026 --> 0:28:25,456
sessions from previous years

931
00:28:25,546 --> 0:28:26,666
that we encourage you to check

932
00:28:27,356 --> 0:28:27,426
out.

933
00:28:28,216 --> 0:28:29,776
Thank you, and I hope you had a

934
00:28:29,776 --> 0:28:30,616
great conference.

935
00:28:31,516 --> 0:28:38,460
[ Applause ]
