1
00:00:26,516 --> 00:00:31,136
[掌声]

2
00:00:31,636 --> 00:00:32,356
&gt;&gt; 好的

3
00:00:32,356 --> 00:00:33,956
大家晚上好

4
00:00:34,196 --> 00:00:35,066
我的名字是 Eugene

5
00:00:35,286 --> 00:00:37,206
我是 Messages 团队的工程师

6
00:00:37,206 --> 00:00:39,616
今晚我很高兴能来这里

7
00:00:39,616 --> 00:00:40,986
与大家聊聊

8
00:00:40,986 --> 00:00:43,496
iMessage 各类应用的

9
00:00:43,496 --> 00:00:43,916
新功能

10
00:00:45,016 --> 00:00:45,766
我们就直奔主题吧

11
00:00:46,076 --> 00:00:47,776
今晚我们计划向大家介绍

12
00:00:47,776 --> 00:00:48,726
几项内容

13
00:00:49,216 --> 00:00:51,366
首先 我们想向大家稍微炫耀一下

14
00:00:51,366 --> 00:00:52,546
iOS 11 中 iMessage App 领域的

15
00:00:52,646 --> 00:00:54,686
新功能

16
00:00:54,726 --> 00:00:55,646
除了大家在 Keynote 里看到的以外

17
00:00:55,646 --> 00:00:56,826
还有一些其他内容

18
00:00:58,196 --> 00:00:59,556
然后我们会向大家展示

19
00:00:59,556 --> 00:01:00,956
我们非常出色的

20
00:00:59,556 --> 00:01:00,956
我们非常出色的

21
00:01:00,956 --> 00:01:02,286
全新 Direct Send API

22
00:01:03,176 --> 00:01:06,896
在此之后 我的同事 Jay 和 Stephen

23
00:01:06,896 --> 00:01:07,946
会上台来

24
00:01:07,946 --> 00:01:09,846
跟大家聊聊

25
00:01:09,846 --> 00:01:11,246
我们全新的 Live Message Layouts

26
00:01:12,226 --> 00:01:13,386
最后 我们会跟大家分享

27
00:01:13,386 --> 00:01:15,246
几个关于 iMessage 各类应用的

28
00:01:15,246 --> 00:01:17,276
最佳操作技巧

29
00:01:17,276 --> 00:01:17,966
并结束今天的会议

30
00:01:21,136 --> 00:01:22,536
今年我们要讨论的很多功能

31
00:01:22,536 --> 00:01:24,336
都是依据我们去年

32
00:01:24,336 --> 00:01:26,036
使用 iOS 10

33
00:01:26,036 --> 00:01:27,796
并推出 Message 框架

34
00:01:27,796 --> 00:01:29,576
而建立的基础原则

35
00:01:29,576 --> 00:01:29,996
之上

36
00:01:30,526 --> 00:01:31,806
如果大家需要总体回顾一下

37
00:01:31,806 --> 00:01:32,966
Message 框架

38
00:01:32,966 --> 00:01:34,246
或是 iMessage 的各类应用

39
00:01:34,246 --> 00:01:36,906
我们强烈建议大家去看看

40
00:01:36,906 --> 00:01:39,026
我们去年的会议 

41
00:01:39,106 --> 00:01:41,356
“iMessage Apps and Stickers”第二场

42
00:01:41,386 --> 00:01:43,516
通过开发者门户网站

43
00:01:43,516 --> 00:01:43,896
就可以观看

44
00:01:44,286 --> 00:01:45,706
如果大家需要的话

45
00:01:45,706 --> 00:01:46,306
可以回顾一下

46
00:01:46,306 --> 00:01:49,816
现在我们就来深入了解一下

47
00:01:49,816 --> 00:01:50,206
这些炫酷的功能

48
00:01:50,556 --> 00:01:52,176
Message 应用领域里有哪些

49
00:01:52,176 --> 00:01:52,556
新功能

50
00:01:52,746 --> 00:01:54,646
就像大家在周一看到的那样

51
00:01:54,816 --> 00:01:56,756
我们对 iOS 11 里 Message 应用的用户界面

52
00:01:57,006 --> 00:01:59,436
进行了一些升级

53
00:02:00,036 --> 00:02:01,986
我在周一刚看到

54
00:02:01,986 --> 00:02:03,636
当用户在键入对话时

55
00:02:04,206 --> 00:02:06,436
所有 App 图标

56
00:02:06,476 --> 00:02:07,766
都被放在了屏幕底部

57
00:02:07,766 --> 00:02:09,006
这就使得用户在

58
00:02:09,006 --> 00:02:10,356
键入对话时

59
00:02:10,356 --> 00:02:12,296
能够更方便地启动

60
00:02:12,296 --> 00:02:13,056
启动应用程序

61
00:02:13,596 --> 00:02:18,166
与 iOS 10 的情况一样

62
00:02:18,166 --> 00:02:19,196
你的应用程序基本上

63
00:02:19,196 --> 00:02:21,246
存在于键盘区域

64
00:02:21,246 --> 00:02:22,596
但是我们在屏幕下方也放置了

65
00:02:22,596 --> 00:02:23,086
应用图标

66
00:02:24,336 --> 00:02:26,786
现在用户可以

67
00:02:26,786 --> 00:02:28,736
左右滚动应用列表

68
00:02:29,276 --> 00:02:30,666
快速找到他们

69
00:02:30,666 --> 00:02:31,266
想要启动的应用

70
00:02:32,526 --> 00:02:33,566
我们还把这条区域

71
00:02:33,566 --> 00:02:34,766
分割成了两块

72
00:02:34,766 --> 00:02:35,426
大家可以从大屏幕上看到

73
00:02:36,146 --> 00:02:37,856
左边区域是

74
00:02:37,856 --> 00:02:39,686
用户偏好的应用区域

75
00:02:39,766 --> 00:02:41,286
它是由用户进行排序的

76
00:02:41,286 --> 00:02:43,466
右边区域是

77
00:02:43,466 --> 00:02:45,076
最近使用过的应用程序

78
00:02:46,276 --> 00:02:48,946
这样用户可以重新整理一番  

79
00:02:48,946 --> 00:02:50,186
从最近使用区域里拿出来一部分应用

80
00:02:50,186 --> 00:02:51,436
放进偏好应用区域

81
00:02:51,436 --> 00:02:53,616
这样使用起来更方便

82
00:02:53,616 --> 00:02:55,286
在键入对话时

83
00:02:55,286 --> 00:02:56,346
也更容易接入

84
00:02:56,536 --> 00:02:57,746
我们认为对于用户来说

85
00:02:58,016 --> 00:02:59,156
这是一种很棒的键入对话方式

86
00:02:59,156 --> 00:03:00,726
只要轻点一下

87
00:02:59,156 --> 00:03:00,726
只要轻点一下

88
00:03:00,726 --> 00:03:02,926
自己想要使用的 App

89
00:03:02,926 --> 00:03:04,226
就可以马上使用它

90
00:03:04,846 --> 00:03:07,956
今年还有

91
00:03:07,956 --> 00:03:10,216
一个很酷的改变

92
00:03:10,216 --> 00:03:11,956
是有关我们对 App 安装的处理方法

93
00:03:12,476 --> 00:03:14,676
现在 在 iOS 11 里

94
00:03:14,676 --> 00:03:16,146
如果你从 iMessage App Store

95
00:03:16,146 --> 00:03:18,366
或是从我们原来的 App Store 里

96
00:03:18,366 --> 00:03:20,096
下载一个应用

97
00:03:20,096 --> 00:03:22,216
我们在默认状态下启用你的 App

98
00:03:22,216 --> 00:03:24,036
以及 Message 

99
00:03:24,036 --> 00:03:24,246
应用抽屉

100
00:03:25,036 --> 00:03:25,696
除此之外

101
00:03:26,516 --> 00:03:28,896
[掌声]

102
00:03:29,396 --> 00:03:30,626
除此之外  我们还会

103
00:03:30,626 --> 00:03:32,396
把你的应用图标

104
00:03:32,396 --> 00:03:34,186
归整排列到最近使用的应用

105
00:03:34,186 --> 00:03:35,916
的最前面 这样用户就可以

106
00:03:35,916 --> 00:03:37,876
更快找到  并且即刻启动

107
00:03:37,876 --> 00:03:39,356
这个应用

108
00:03:39,596 --> 00:03:41,236
以上就是我们对

109
00:03:41,286 --> 00:03:42,846
Messages App 用户界面做出的

110
00:03:42,846 --> 00:03:43,296
几个改变

111
00:03:43,406 --> 00:03:45,366
在座很多人已经用到了

112
00:03:45,696 --> 00:03:50,226
下面将为大家奉上我们全新的

113
00:03:50,226 --> 00:03:51,856
Direct Send API

114
00:03:51,976 --> 00:03:53,256
我们非常兴奋

115
00:03:53,256 --> 00:03:53,926
想和大家一起分享

116
00:03:54,486 --> 00:03:58,656
在 iOS 10 里  从 Message 应用

117
00:03:58,656 --> 00:03:59,706
向外分享内容的唯一办法

118
00:03:59,706 --> 00:04:01,666
就是调用一个 Insert API

119
00:03:59,706 --> 00:04:01,666
就是调用一个 Insert API

120
00:04:01,666 --> 00:04:03,816
这个 API 将把你的信息

121
00:04:03,816 --> 00:04:07,346
放入 Message 输入视图

122
00:04:07,346 --> 00:04:08,066
里面

123
00:04:08,846 --> 00:04:09,806
虽然这个方法

124
00:04:09,806 --> 00:04:11,466
对于很多应用程序都很好用

125
00:04:11,466 --> 00:04:12,956
但对于有些用户体验来说 比如这个游戏

126
00:04:13,396 --> 00:04:14,656
用户所说的话将使得

127
00:04:14,656 --> 00:04:16,856
这个游戏朝着下一个逻辑步骤发展

128
00:04:16,995 --> 00:04:18,606
情况很可能就是

129
00:04:18,745 --> 00:04:19,896
信息确实被发送

130
00:04:19,966 --> 00:04:21,266
而且被添加到输入视图 

131
00:04:21,266 --> 00:04:23,156
有些像是额外地

132
00:04:23,156 --> 00:04:23,496
点击了一次

133
00:04:23,616 --> 00:04:25,536
所以 今年我们想着

134
00:04:25,536 --> 00:04:26,776
怎么能让它简单一点

135
00:04:26,776 --> 00:04:28,386
如何能够让用户体验

136
00:04:28,386 --> 00:04:29,096
提升一下

137
00:04:29,596 --> 00:04:32,656
在以前的正常情况下  

138
00:04:32,656 --> 00:04:34,196
你会把消息从自己的应用程序里

139
00:04:34,326 --> 00:04:35,206
直接插入 Messages 的输入视图

140
00:04:35,206 --> 00:04:37,196
在 iOS 11 里 你可以直接发送

141
00:04:37,286 --> 00:04:38,066
任何这一类的消息

142
00:04:39,106 --> 00:04:39,906
这是如何实现的呢？

143
00:04:40,456 --> 00:04:44,076
在 iOS 10 中 我们引进了

144
00:04:44,076 --> 00:04:46,006
MS Conversation 它定义了

145
00:04:46,006 --> 00:04:47,336
定义了以下的 Insert API

146
00:04:47,726 --> 00:04:49,966
insertMessage insertSticker

147
00:04:50,506 --> 00:04:53,046
insertText 还有 insertAttachment

148
00:04:53,086 --> 00:04:54,086
insertAttachment 它们能支持我们任何

149
00:04:54,086 --> 00:04:55,316
标准化的 Messages 附件

150
00:04:55,316 --> 00:04:55,556
类型

151
00:04:56,856 --> 00:04:58,876
iOS 11 里有一个很简单的

152
00:04:59,456 --> 00:05:01,836
类比推理 API

153
00:04:59,456 --> 00:05:01,836
类比推理 API

154
00:05:01,836 --> 00:05:04,076
名为 Send Message Send Sticker

155
00:05:04,076 --> 00:05:05,886
Send Text 和 Send Attachment

156
00:05:06,416 --> 00:05:07,836
调用其中任何一个 API

157
00:05:07,836 --> 00:05:09,356
都会绕过 Message 输入视图

158
00:05:09,356 --> 00:05:11,686
并立即在会话中

159
00:05:11,686 --> 00:05:13,136
向你发送一条

160
00:05:13,136 --> 00:05:13,886
信息

161
00:05:14,306 --> 00:05:16,806
非常快捷好用的 API

162
00:05:17,516 --> 00:05:22,076
[掌声]

163
00:05:22,576 --> 00:05:24,986
你们可能会问哪个 API

164
00:05:25,176 --> 00:05:27,266
哪个项用户体验

165
00:05:27,426 --> 00:05:29,596
最适合我的应用

166
00:05:29,596 --> 00:05:32,356
Insert Draft 和 Send Message API

167
00:05:32,356 --> 00:05:34,496
都是 iOS 11 中的一等公民

168
00:05:34,816 --> 00:05:35,876
至于哪一个最适合

169
00:05:35,876 --> 00:05:36,646
你的应用

170
00:05:36,646 --> 00:05:37,186
这要由你来决定

171
00:05:37,826 --> 00:05:42,216
所以说  Insert Draft API 仍是

172
00:05:42,316 --> 00:05:43,746
在多数应用中推荐使用的 API

173
00:05:43,746 --> 00:05:45,596
因为它能带来更丰富的

174
00:05:45,596 --> 00:05:47,346
编写体验

175
00:05:47,446 --> 00:05:49,016
例如 用户可以插入一条信息

176
00:05:49,016 --> 00:05:50,776
然后 比如说 在信息末尾

177
00:05:50,776 --> 00:05:51,636
增加一句评价

178
00:05:51,636 --> 00:05:53,766
或是附送一个屏幕特效

179
00:05:53,766 --> 00:05:55,336
或全屏动态

180
00:05:55,906 --> 00:05:57,546
它真是一个很好的方法

181
00:05:57,546 --> 00:05:58,946
能让你原本要发送的信息

182
00:05:58,946 --> 00:05:59,936
内容更显丰富

183
00:06:00,146 --> 00:06:02,416
除此之外

184
00:06:02,416 --> 00:06:04,576
它让用户还有机会

185
00:06:04,576 --> 00:06:05,896
更正要发送的内容

186
00:06:05,896 --> 00:06:06,796
这一点非常重要

187
00:06:07,336 --> 00:06:10,816
另一方面 Direct Send API

188
00:06:10,816 --> 00:06:13,216
为大家提供了超级迅速和便捷的

189
00:06:13,216 --> 00:06:14,226
用户体验

190
00:06:14,286 --> 00:06:16,496
这非常适合类似于游戏或

191
00:06:16,496 --> 00:06:17,186
我们前面看到的那些东西

192
00:06:18,186 --> 00:06:19,766
在任何应用里

193
00:06:19,766 --> 00:06:22,676
插入流程里包含点击输入视图按钮

194
00:06:22,676 --> 00:06:25,076
这很不简单

195
00:06:25,076 --> 00:06:26,846
你可能感觉这是额外增加的步骤

196
00:06:26,846 --> 00:06:27,766
是你完全不需要的

197
00:06:29,156 --> 00:06:31,396
但是 在使用这个 API 时

198
00:06:31,396 --> 00:06:32,746
尤其重要的一点是

199
00:06:32,746 --> 00:06:34,036
保持用户对你的

200
00:06:34,036 --> 00:06:34,716
这个应用的信任

201
00:06:35,016 --> 00:06:36,656
所以 重要的是十分明确地提示用户

202
00:06:36,656 --> 00:06:38,126
究竟是要发送什么内容

203
00:06:38,436 --> 00:06:39,956
同时还应当

204
00:06:39,956 --> 00:06:42,226
清楚地向用户表明

205
00:06:42,226 --> 00:06:44,446
你这个 App 里究竟有

206
00:06:44,636 --> 00:06:46,366
什么样的用户交互或界面元素

207
00:06:46,366 --> 00:06:47,936
会在你的应用里

208
00:06:48,126 --> 00:06:49,236
触发发送

209
00:06:49,236 --> 00:06:52,066
所以 通过 Direct Send API Message

210
00:06:52,066 --> 00:06:53,116
来帮助用户大幅提升体验

211
00:06:53,116 --> 00:06:55,396
就给这类 API 的使用

212
00:06:55,396 --> 00:06:57,286
施加了几项要求

213
00:06:58,546 --> 00:07:00,596
首先 你的应用必须是

214
00:06:58,546 --> 00:07:00,596
首先 你的应用必须是

215
00:07:00,596 --> 00:07:02,476
屏幕上可见的

216
00:07:02,516 --> 00:07:03,016
Message 应用

217
00:07:03,016 --> 00:07:05,116
大家可能知道

218
00:07:05,116 --> 00:07:06,776
你们的 Message 应用扩展可能是

219
00:07:06,776 --> 00:07:08,396
在 Message 的后台运行

220
00:07:08,396 --> 00:07:10,296
而确实不在当前的

221
00:07:10,346 --> 00:07:11,336
前台应用

222
00:07:11,386 --> 00:07:13,266
所以第一项要求就是

223
00:07:13,266 --> 00:07:14,476
你的应用必须可见

224
00:07:15,776 --> 00:07:19,186
除此之外 对于这个功能

225
00:07:19,186 --> 00:07:20,776
我们的目标用户体验是

226
00:07:20,776 --> 00:07:22,956
是要让用户轻点屏幕

227
00:07:22,956 --> 00:07:24,206
或与你的应用交互

228
00:07:24,566 --> 00:07:25,536
然后触发发送

229
00:07:26,566 --> 00:07:28,696
为了让这种操作更为便利  Message

230
00:07:28,696 --> 00:07:30,706
还将探测用户

231
00:07:30,706 --> 00:07:32,436
在你 App 上的交互

232
00:07:32,526 --> 00:07:34,656
并在探测用户交互时

233
00:07:34,656 --> 00:07:36,156
允许调用一个直接发送的

234
00:07:36,156 --> 00:07:36,786
API

235
00:07:37,556 --> 00:07:39,116
后续的直接发送调用将失败

236
00:07:39,116 --> 00:07:40,836
直到我们探测到

237
00:07:40,916 --> 00:07:42,636
另一种用户交互

238
00:07:42,806 --> 00:07:44,956
某种程度上保持着一一对应

239
00:07:45,046 --> 00:07:46,186
用户按下屏幕上某处

240
00:07:46,186 --> 00:07:47,966
就会获准发送内容

241
00:07:48,896 --> 00:07:51,406
为了帮助在座的各位开发人员

242
00:07:51,406 --> 00:07:52,776
能够理解 发送 API 到底是

243
00:07:52,776 --> 00:07:54,806
怎样的情形

244
00:07:55,016 --> 00:07:57,976
我们要介绍两个新的 Air 代码

245
00:07:57,976 --> 00:07:58,346
MSMessage Air 代码

246
00:07:58,346 --> 00:07:58,696
我们现在有这两个代码

247
00:07:58,786 --> 00:08:00,606
一个是 sendwithoutRecentInteraction

248
00:07:58,786 --> 00:08:00,606
一个是 sendwithoutRecentInteraction

249
00:08:00,666 --> 00:08:02,286
另一个是 sendwhileNotVisible

250
00:08:02,566 --> 00:08:04,226
与往常一样 使用出色的 Air 处理方法

251
00:08:04,226 --> 00:08:06,666
这样可以使你的应用

252
00:08:06,666 --> 00:08:07,596
才能找准日期

253
00:08:10,046 --> 00:08:10,916
这就是 Direct Send

254
00:08:11,266 --> 00:08:12,036
非常简单

255
00:08:12,036 --> 00:08:13,186
我觉得它对于

256
00:08:13,186 --> 00:08:14,626
它自身适用的那些 App 来说

257
00:08:14,716 --> 00:08:15,626
这将是很棒的用户体验

258
00:08:15,626 --> 00:08:17,146
大家一定要考虑一下

259
00:08:17,146 --> 00:08:20,376
究竟是 Insert Draft 还是 Send

260
00:08:20,376 --> 00:08:21,436
最适合你的应用

261
00:08:21,436 --> 00:08:22,566
我们很高兴地期盼着大家使用它

262
00:08:22,566 --> 00:08:26,416
而构建的成果

263
00:08:26,676 --> 00:08:27,246
好了

264
00:08:27,386 --> 00:08:28,846
接下来我想邀请

265
00:08:28,846 --> 00:08:31,656
Stephen 上台

266
00:08:31,656 --> 00:08:32,926
介绍一下 Live Message Layouts

267
00:08:34,515 --> 00:08:38,916
[掌声]

268
00:08:39,416 --> 00:08:40,306
&gt;&gt; 嗨 大家好

269
00:08:41,086 --> 00:08:44,285
今天 我很开心能回到台上

270
00:08:44,285 --> 00:08:45,436
跟大家聊聊

271
00:08:45,436 --> 00:08:46,816
Live Message Layouts

272
00:08:47,566 --> 00:08:50,346
在 iOS 10 中

273
00:08:50,346 --> 00:08:51,346
我们引入了 Message 框架

274
00:08:51,346 --> 00:08:53,046
能让大家

275
00:08:53,046 --> 00:08:54,166
把 App 体验直接带入

276
00:08:54,166 --> 00:08:54,616
Message 当中

277
00:08:55,306 --> 00:08:58,556
当你想要构建你的

278
00:08:58,556 --> 00:09:01,166
iMessage 应用时

279
00:08:58,556 --> 00:09:01,166
iMessage 应用时

280
00:09:01,166 --> 00:09:02,936
你的 App 会在 Message 的

281
00:09:02,996 --> 00:09:04,616
键盘区域显示 或以全屏展示

282
00:09:04,616 --> 00:09:05,646
状态显示  这些可能是

283
00:09:05,646 --> 00:09:06,856
你能够使用的

284
00:09:06,856 --> 00:09:07,886
简洁和扩展型的

285
00:09:07,886 --> 00:09:08,236
展示风格

286
00:09:09,296 --> 00:09:10,226
接着 当你要发送信息时

287
00:09:10,226 --> 00:09:12,016
你的 App 会使用

288
00:09:12,016 --> 00:09:13,856
一个模板驱动  或者说  我们会使用

289
00:09:13,856 --> 00:09:15,016
一个模板驱动布局方法

290
00:09:15,016 --> 00:09:16,376
来用于你的 App 信息

291
00:09:16,926 --> 00:09:18,056
现在这个模板布局有

292
00:09:18,056 --> 00:09:20,546
自定义对象或选项

293
00:09:21,116 --> 00:09:23,296
比如图像

294
00:09:23,296 --> 00:09:25,736
和这里的文本属性

295
00:09:25,736 --> 00:09:27,116
它允许你提供一些优质

296
00:09:27,116 --> 00:09:29,586
而丰富的 App 信息

297
00:09:29,586 --> 00:09:30,546
不过它仍然还是受制于

298
00:09:30,546 --> 00:09:31,276
模板提供的内容

299
00:09:32,736 --> 00:09:33,996
现在我很高兴地向大家宣布  

300
00:09:33,996 --> 00:09:35,316
在 iOS 11 中 

301
00:09:35,586 --> 00:09:37,486
大家可以用这些 liveLayout

302
00:09:37,486 --> 00:09:39,256
来彻底地自定义

303
00:09:39,686 --> 00:09:40,566
你的 App 信息了

304
00:09:41,276 --> 00:09:43,896
这个视图其实就是 

305
00:09:43,896 --> 00:09:45,166
App 应用自身

306
00:09:45,166 --> 00:09:46,586
在 Message 文本里

307
00:09:46,586 --> 00:09:47,086
提供的

308
00:09:47,536 --> 00:09:50,156
这个 App 也可以驱动一个视图

309
00:09:50,356 --> 00:09:53,326
作为草稿信息

310
00:09:53,326 --> 00:09:55,106
它实际上可以提供自定义视图

311
00:09:55,186 --> 00:09:56,426
从而将多条信息

312
00:09:56,546 --> 00:09:57,456
同时呈现在

313
00:09:57,456 --> 00:09:57,936
文本里

314
00:09:58,446 --> 00:10:01,156
当然 在我们支持的所有情况下

315
00:09:58,446 --> 00:10:01,156
当然 在我们支持的所有情况下

316
00:10:01,156 --> 00:10:02,456
你的 App 可能并不是

317
00:10:02,456 --> 00:10:05,126
屏幕上唯一的 App  但我们真的

318
00:10:05,126 --> 00:10:06,106
只在意你的 App

319
00:10:06,546 --> 00:10:07,336
今天我们来这里就是要

320
00:10:07,336 --> 00:10:07,706
跟大家探讨这一点

321
00:10:10,516 --> 00:10:12,136
我想给大家快速演示一下

322
00:10:12,136 --> 00:10:14,536
它在运行中是什么样的

323
00:10:14,536 --> 00:10:14,916
状态

324
00:10:15,966 --> 00:10:18,126
现在我手里有一个简单的 iMessage 应用

325
00:10:18,126 --> 00:10:20,196
是我构建的  它名叫 Event Countdown

326
00:10:20,196 --> 00:10:22,196
这只是一个简单的列表

327
00:10:22,196 --> 00:10:23,716
罗列了近期要参加的活动

328
00:10:23,716 --> 00:10:25,586
都是我迫切想要参加

329
00:10:25,586 --> 00:10:26,686
还想通过我的 Message 

330
00:10:26,686 --> 00:10:27,146
与朋友分享的内容

331
00:10:27,846 --> 00:10:30,026
例如 如果我轻点这里的批处理

332
00:10:30,026 --> 00:10:32,836
你们会看到一个

333
00:10:32,836 --> 00:10:34,176
完全自定义的信息

334
00:10:34,296 --> 00:10:35,316
以草稿信息的形式呈现在

335
00:10:35,316 --> 00:10:35,796
这里

336
00:10:36,396 --> 00:10:37,666
它是实时更新  它拥有

337
00:10:37,666 --> 00:10:38,896
出色的倒计时功能

338
00:10:38,896 --> 00:10:40,226
让你对近期将要到来的活动

339
00:10:40,226 --> 00:10:40,566
充满期待

340
00:10:40,666 --> 00:10:42,916
我发送它的时候

341
00:10:42,916 --> 00:10:44,486
同样的视图会被置入

342
00:10:45,176 --> 00:10:46,066
传输另一端可以看到的

343
00:10:46,066 --> 00:10:46,386
文本里

344
00:10:46,846 --> 00:10:49,206
事实上 如果我们进入接收方

345
00:10:49,206 --> 00:10:51,616
或许可以看看

346
00:10:51,616 --> 00:10:53,316
接收方可能发送了什么

347
00:10:53,356 --> 00:10:56,656
或另一边可能发送了什么

348
00:10:56,656 --> 00:10:58,046
现在我有一份邀请

349
00:10:58,046 --> 00:10:58,476
它来自 Eugene

350
00:10:59,766 --> 00:11:00,976
这是一个相似的 App 信息

351
00:10:59,766 --> 00:11:00,976
这是一个相似的 App 信息

352
00:11:00,976 --> 00:11:02,746
但我的 iMessage 应用已经选择

353
00:11:03,176 --> 00:11:04,626
将一个完全不同的视图

354
00:11:04,626 --> 00:11:05,916
呈现在接收方一侧

355
00:11:06,746 --> 00:11:08,296
好 我马上要展示一个

356
00:11:08,296 --> 00:11:09,416
未被接受的邀请

357
00:11:10,696 --> 00:11:12,396
如果我轻点这里的 App 气泡

358
00:11:12,396 --> 00:11:15,286
我就把这个事件标记为“已接受”

359
00:11:15,286 --> 00:11:17,536
现在它切换到了

360
00:11:17,536 --> 00:11:19,106
实时倒计时模式

361
00:11:19,686 --> 00:11:21,596
在这种情况下

362
00:11:21,596 --> 00:11:23,406
我甚至不用启动 iMessage 应用

363
00:11:23,406 --> 00:11:24,946
就能完成所有这些操作

364
00:11:24,946 --> 00:11:28,556
现在右上方有一个

365
00:11:28,556 --> 00:11:29,556
小的 infoButton

366
00:11:30,426 --> 00:11:31,796
并不是所有的体验

367
00:11:31,796 --> 00:11:33,136
都适合用来塞进 App 信息

368
00:11:33,136 --> 00:11:33,836
里面的

369
00:11:35,276 --> 00:11:37,156
轻点这个 infoButton

370
00:11:37,156 --> 00:11:39,136
我就可以真正发出请求

371
00:11:39,136 --> 00:11:40,196
让我的 App 以一种

372
00:11:40,196 --> 00:11:42,326
不同的展示风格来显示

373
00:11:42,326 --> 00:11:44,126
这样可以看到我更多的活动信息

374
00:11:46,676 --> 00:11:48,396
我希望大家能在这里看到

375
00:11:48,446 --> 00:11:49,666
通过 Live Message Layouts

376
00:11:49,666 --> 00:11:51,526
你就可以构建

377
00:11:51,526 --> 00:11:53,166
真正精彩的用户体验

378
00:11:53,166 --> 00:11:54,616
交互和内容实时更新让它完满

379
00:11:54,616 --> 00:11:56,536
而且操作起来确实

380
00:11:56,876 --> 00:11:56,946
很简单

381
00:12:02,176 --> 00:12:03,116
那么我们来谈谈它的

382
00:12:03,116 --> 00:12:03,386
工作原理 

383
00:12:04,116 --> 00:12:07,366
当 iMessage 应用

384
00:12:07,366 --> 00:12:08,726
以简洁的展示风格而呈现时

385
00:12:08,776 --> 00:12:10,526
我们用一则实例进行了

386
00:12:10,526 --> 00:12:12,726
具体说明  这个例子是

387
00:12:12,766 --> 00:12:14,086
MSMessage App 视图控制器的子类

388
00:12:14,166 --> 00:12:15,926
我们把它配置为

389
00:12:15,926 --> 00:12:17,376
简洁型展示风格

390
00:12:17,376 --> 00:12:20,456
当带有一个 liveLayout 的 App 消息

391
00:12:20,456 --> 00:12:22,106
出现在屏幕时

392
00:12:22,816 --> 00:12:24,716
我们会提供同一基本类的

393
00:12:24,716 --> 00:12:26,746
另一个具体实例

394
00:12:27,536 --> 00:12:28,286
并将其配置为

395
00:12:28,286 --> 00:12:29,736
文本展示风格

396
00:12:30,316 --> 00:12:33,736
实际上 对于文本里

397
00:12:33,736 --> 00:12:35,156
展示的每一条信息

398
00:12:36,036 --> 00:12:37,696
我们都会从同一分类中

399
00:12:37,966 --> 00:12:40,026
举出新的实例

400
00:12:40,026 --> 00:12:41,256
然后再把它配置为

401
00:12:41,256 --> 00:12:41,566
文本展示风格

402
00:12:42,536 --> 00:12:44,006
这些实例

403
00:12:44,526 --> 00:12:46,196
以及它们展现在屏幕上的

404
00:12:46,196 --> 00:12:48,066
某条 App 信息之间

405
00:12:48,066 --> 00:12:51,346
存在着严格的逐一对应关系

406
00:12:51,586 --> 00:12:53,316
以上就是关于 Live Message Layouts

407
00:12:53,316 --> 00:12:54,246
一个快速的概述

408
00:12:55,036 --> 00:12:56,326
接下来我要带领大家了解更多

409
00:12:56,326 --> 00:12:57,726
关于 API 以及如何启用它的内容

410
00:12:57,726 --> 00:12:59,096
现在我想邀请 Jay 上台

411
00:13:00,516 --> 00:13:04,500
[掌声]

412
00:13:11,316 --> 00:13:12,316
谢谢 Stephen 的介绍

413
00:13:12,316 --> 00:13:12,956
非常感谢

414
00:13:13,356 --> 00:13:15,216
我是 Jay

415
00:13:15,216 --> 00:13:16,546
我想为大家介绍

416
00:13:16,546 --> 00:13:18,506
我们给 Live Message Layout

417
00:13:18,506 --> 00:13:19,156
添加的这些新 API

418
00:13:19,216 --> 00:13:21,706
那么我们就开始吧

419
00:13:26,046 --> 00:13:27,266
在座各位可能有人很清楚

420
00:13:27,826 --> 00:13:29,116
你们可以用

421
00:13:29,116 --> 00:13:30,196
MSMessageLayout

422
00:13:30,256 --> 00:13:31,246
自定义你的 App 气泡

423
00:13:32,296 --> 00:13:34,416
如果使用当前的 MSMessage 

424
00:13:34,416 --> 00:13:35,916
模板布局  你只能对有限的

425
00:13:35,916 --> 00:13:37,296
几组外观进行自定义

426
00:13:37,296 --> 00:13:39,896
例如标题

427
00:13:39,896 --> 00:13:40,366
还有图像

428
00:13:40,936 --> 00:13:44,716
在 iOS 11 中

429
00:13:44,716 --> 00:13:47,056
为了支持气泡的完全自定义功能

430
00:13:47,236 --> 00:13:48,166
我们添加了新的子类

431
00:13:49,996 --> 00:13:51,876
MSMessageLiveLayout

432
00:13:51,876 --> 00:13:54,676
让我们来快速地

433
00:13:54,676 --> 00:13:54,876
看一下

434
00:13:58,756 --> 00:14:00,676
大家可以看到  这里

435
00:13:58,756 --> 00:14:00,676
大家可以看到  这里

436
00:14:00,676 --> 00:14:02,486
要填写的东西并不多

437
00:14:02,486 --> 00:14:03,676
不像模板布局要求的

438
00:14:03,676 --> 00:14:04,056
那么多

439
00:14:05,546 --> 00:14:08,546
这是因为现在

440
00:14:08,576 --> 00:14:10,536
你可以充分表明

441
00:14:10,766 --> 00:14:11,846
你希望呈现怎样的 App 气泡

442
00:14:11,846 --> 00:14:12,906
外观

443
00:14:13,716 --> 00:14:15,606
尽管大家可能注意到了

444
00:14:15,676 --> 00:14:17,076
这里有一个属性 它的名称是 

445
00:14:17,076 --> 00:14:20,866
Alternate Layout 

446
00:14:22,996 --> 00:14:23,096
可这又是什么呢

447
00:14:23,306 --> 00:14:24,266
现在会有一些实例

448
00:14:24,266 --> 00:14:26,826
在这些例子里  你的 App 气泡

449
00:14:26,826 --> 00:14:28,086
在接收设备上

450
00:14:28,086 --> 00:14:29,056
不受支持

451
00:14:30,026 --> 00:14:32,336
原因可能是  接收设备并没有安装

452
00:14:32,336 --> 00:14:34,666
你的 Extension

453
00:14:34,666 --> 00:14:35,796
或它们只是运行在

454
00:14:35,866 --> 00:14:39,566
旧的 Apple iOS 版本 iOS macOS

455
00:14:39,566 --> 00:14:40,406
或 watchOS 上

456
00:14:41,636 --> 00:14:45,156
在这些场景里

457
00:14:45,216 --> 00:14:48,366
它们会将这个模板布局看作是

458
00:14:48,626 --> 00:14:51,166
一个备选表达法

459
00:14:51,356 --> 00:14:52,456
如果它们能真正

460
00:14:52,456 --> 00:14:54,856
支持它们的 Extension

461
00:14:54,856 --> 00:14:56,866
就会在右侧看见气泡

462
00:14:57,576 --> 00:15:01,716
那么我们如何使用这个 API 呢？

463
00:14:57,576 --> 00:15:01,716
那么我们如何使用这个 API 呢？

464
00:15:01,946 --> 00:15:04,016
其实这跟你在 iOS 10 中的操作

465
00:15:04,016 --> 00:15:04,836
很相似

466
00:15:05,716 --> 00:15:07,696
首先 要创建模板

467
00:15:07,696 --> 00:15:08,096
布局

468
00:15:09,316 --> 00:15:10,336
然后用模板布局

469
00:15:10,776 --> 00:15:11,486
去创建

470
00:15:11,606 --> 00:15:12,216
liveLayout

471
00:15:12,806 --> 00:15:17,496
有了 liveLayout

472
00:15:17,756 --> 00:15:19,576
比如说  有一条信息 然后发送

473
00:15:19,736 --> 00:15:21,616
这跟我们在 iOS 10 里的操作

474
00:15:21,616 --> 00:15:25,706
很相似

475
00:15:25,896 --> 00:15:28,216
这就是关于

476
00:15:28,396 --> 00:15:29,556
MSMessageLiveLayout 的内容

477
00:15:30,466 --> 00:15:31,796
我们把一些新的功能增添到了

478
00:15:31,916 --> 00:15:33,446
MSMessagesAppViewController

479
00:15:33,446 --> 00:15:36,806
大家有人可能很清楚

480
00:15:36,806 --> 00:15:42,236
这是扩展点中的

481
00:15:42,276 --> 00:15:43,406
主要类

482
00:15:44,386 --> 00:15:45,726
通过配置这个

483
00:15:45,726 --> 00:15:47,486
视图控制器

484
00:15:47,486 --> 00:15:49,436
你就能够自定义

485
00:15:49,916 --> 00:15:51,696
App 键盘区域

486
00:15:51,696 --> 00:15:52,356
在简洁模式下的外观

487
00:15:52,896 --> 00:15:56,056
文本里的气泡

488
00:15:56,056 --> 00:15:57,016
也受视图控制器的支持

489
00:15:57,016 --> 00:16:00,516
其实它们

490
00:15:57,016 --> 00:16:00,516
其实它们

491
00:16:00,746 --> 00:16:03,026
有同样的类

492
00:16:03,216 --> 00:16:04,746
好了 那么这意味着什么呢

493
00:16:06,026 --> 00:16:08,716
这意味着

494
00:16:08,716 --> 00:16:12,386
在底部的这个视图

495
00:16:12,386 --> 00:16:14,186
和在顶部的那个视图

496
00:16:14,186 --> 00:16:14,766
来自于同一个类

497
00:16:16,186 --> 00:16:18,306
为了区分这二者

498
00:16:18,306 --> 00:16:19,896
我们添加了新的

499
00:16:19,896 --> 00:16:23,366
展示风格文本

500
00:16:24,756 --> 00:16:26,836
一旦需要对这些

501
00:16:26,836 --> 00:16:27,676
视图控制器进行配置时

502
00:16:27,676 --> 00:16:30,476
你可以将

503
00:16:30,476 --> 00:16:32,716
presentationStyle

504
00:16:33,626 --> 00:16:35,946
和 selectedMessage 结合起来使用

505
00:16:36,246 --> 00:16:37,506
从而决定你想展示在

506
00:16:37,506 --> 00:16:38,116
视图控制器中的内容

507
00:16:39,656 --> 00:16:41,696
你可以遵循一个

508
00:16:41,696 --> 00:16:43,636
很简单的模式

509
00:16:43,636 --> 00:16:45,016
那就是在某种程度上遵循 Python 的工厂模式

510
00:16:45,016 --> 00:16:49,386
你可以根据这些属性的状态而决定

511
00:16:49,476 --> 00:16:50,266
在这一模式中

512
00:16:50,266 --> 00:16:52,586
返回适当的

513
00:16:52,586 --> 00:16:53,546
子视图控制器

514
00:16:53,546 --> 00:16:54,856
所以  你会将一个控制器用于文本风格

515
00:16:54,856 --> 00:16:58,916
另一个用于简洁模式

516
00:17:00,066 --> 00:17:01,486
如果你已经遵循了

517
00:17:01,486 --> 00:17:05,156
一个相似的模式并进行编码

518
00:17:05,156 --> 00:17:05,955
看起来就会像这样

519
00:17:07,165 --> 00:17:10,016
对于简洁的风格

520
00:17:10,016 --> 00:17:10,806
我们有一个辅助方法

521
00:17:11,806 --> 00:17:14,106
那就是 presentSummaryViewController

522
00:17:14,106 --> 00:17:16,106
有了这个辅助方法

523
00:17:16,106 --> 00:17:16,986
你就可以创建正确的

524
00:17:16,986 --> 00:17:18,965
子视图控制器

525
00:17:18,965 --> 00:17:20,136
并恰当地配置视图控制器

526
00:17:20,726 --> 00:17:24,126
至于扩展风格

527
00:17:24,126 --> 00:17:25,646
你会获得另一个辅助方法

528
00:17:26,596 --> 00:17:28,226
即 presentDetailViewController

529
00:17:28,465 --> 00:17:29,796
它的功能与你

530
00:17:29,796 --> 00:17:31,666
在简洁风格中的操作

531
00:17:31,666 --> 00:17:31,986
十分相似

532
00:17:33,126 --> 00:17:34,886
为了处理文本风格的另一种情况

533
00:17:34,886 --> 00:17:36,256
我们还有另外的一种

534
00:17:37,676 --> 00:17:39,536
辅助方法

535
00:17:39,536 --> 00:17:40,286
它是按照

536
00:17:40,686 --> 00:17:42,016
presentTranscriptViewController 来进行的

537
00:17:47,096 --> 00:17:47,956
以上就是关于

538
00:17:47,956 --> 00:17:50,596
展示风格的介绍

539
00:17:50,596 --> 00:17:51,716
其实我们还要分享另一项内容

540
00:17:51,716 --> 00:17:53,406
然后再跟大家聊一聊

541
00:17:53,406 --> 00:17:53,966
实时气泡

542
00:17:54,506 --> 00:17:56,616
我们现在要谈的  就是调整尺寸

543
00:17:58,066 --> 00:17:59,376
现在 视图控制器

544
00:17:59,376 --> 00:18:01,556
本意是要用于文本

545
00:17:59,376 --> 00:18:01,556
本意是要用于文本

546
00:18:02,046 --> 00:18:04,006
它将遵照一项新的协议

547
00:18:04,006 --> 00:18:07,076
协议名为

548
00:18:07,076 --> 00:18:07,846
MSMessagesAppTranscriptPresentation

549
00:18:08,806 --> 00:18:10,436
它有一个方法

550
00:18:11,146 --> 00:18:12,226
叫做 ContentSizeThatFits

551
00:18:12,766 --> 00:18:16,796
在这个功能里

552
00:18:17,366 --> 00:18:19,096
会返回一个最能代表

553
00:18:19,096 --> 00:18:19,796
你文本内视图的尺寸

554
00:18:21,096 --> 00:18:24,276
为了解释清楚  我们来

555
00:18:25,216 --> 00:18:25,536
举个例子

556
00:18:25,536 --> 00:18:30,206
现在 我们想让尺寸

557
00:18:30,286 --> 00:18:32,066
能一直完美地契合所有的 subView

558
00:18:32,286 --> 00:18:34,236
不会被剪切  或是有

559
00:18:34,236 --> 00:18:35,586
多余的底边  以及其他类似

560
00:18:36,266 --> 00:18:36,366
情况

561
00:18:37,126 --> 00:18:39,746
关于这个具体样例

562
00:18:39,746 --> 00:18:42,936
我们设有地图视图、计时器

563
00:18:43,516 --> 00:18:43,676
还有按钮

564
00:18:43,836 --> 00:18:45,246
我们决定只关注

565
00:18:45,246 --> 00:18:47,676
地图视图的大小

566
00:18:47,706 --> 00:18:49,986
或计时器的变化

567
00:18:50,146 --> 00:18:52,956
但我们想让按钮

568
00:18:52,956 --> 00:18:55,006
根据系统字体做出

569
00:18:55,006 --> 00:18:55,416
相应调整

570
00:18:56,586 --> 00:18:57,976
我们来给

571
00:18:57,976 --> 00:19:02,556
地图视图和计时器

572
00:18:57,976 --> 00:19:02,556
地图视图和计时器

573
00:19:02,556 --> 00:19:04,626
一个静态数字 217

574
00:19:04,626 --> 00:19:08,156
这里的行高就会成为

575
00:19:08,216 --> 00:19:09,936
按钮的尺寸

576
00:19:09,936 --> 00:19:11,906
并将系统字体考虑在内

577
00:19:12,476 --> 00:19:15,246
把这两个数字输入

578
00:19:15,296 --> 00:19:17,726
我们会得到正确的尺寸

579
00:19:17,726 --> 00:19:19,436
或正确的行高  其中包含了

580
00:19:19,496 --> 00:19:23,136
我们视图中所有的 subView

581
00:19:23,356 --> 00:19:26,426
根据这个配置

582
00:19:26,426 --> 00:19:29,016
我觉得高度应是

583
00:19:29,056 --> 00:19:29,456
235 点

584
00:19:30,046 --> 00:19:33,786
请大家记住

585
00:19:33,786 --> 00:19:34,846
如果文本尺寸

586
00:19:35,386 --> 00:19:37,386
场所和系统字体

587
00:19:37,756 --> 00:19:39,996
出现了变化

588
00:19:39,996 --> 00:19:42,386
这个功能将会再次被调用

589
00:19:43,416 --> 00:19:45,216
在上述情况下  这些功能

590
00:19:45,216 --> 00:19:47,026
将被再次调用  从而生成新的

591
00:19:48,006 --> 00:19:48,146
尺寸

592
00:19:48,936 --> 00:19:51,176
这里举一个系统字体

593
00:19:51,176 --> 00:19:52,176
发生改变的例子

594
00:19:52,226 --> 00:19:54,046
大家可以看到

595
00:19:54,046 --> 00:19:54,876
现在字体变大了一点

596
00:19:55,546 --> 00:19:59,136
这种情况 我们刚刚说过了

597
00:19:59,136 --> 00:20:00,656
我们关心的并不是地图视图

598
00:19:59,136 --> 00:20:00,656
我们关心的并不是地图视图

599
00:20:00,656 --> 00:20:02,236
或计时器的时长变化

600
00:20:02,236 --> 00:20:03,666
那么我们就看一下

601
00:20:03,666 --> 00:20:04,746
同样的 217

602
00:20:06,036 --> 00:20:07,226
然而  因为我们给按钮

603
00:20:07,226 --> 00:20:09,636
使用的是动态字体

604
00:20:09,636 --> 00:20:11,196
它便自动选择了一个尺寸

605
00:20:12,306 --> 00:20:14,756
有了这个配置  你就可以

606
00:20:14,756 --> 00:20:16,866
妥当地返回 244

607
00:20:18,476 --> 00:20:20,726
我们会接受这个值

608
00:20:20,726 --> 00:20:21,586
并相应地调整你的视图尺寸

609
00:20:25,616 --> 00:20:27,906
说了这么多

610
00:20:28,416 --> 00:20:30,416
我想用一个

611
00:20:30,416 --> 00:20:32,196
快速的编码演示

612
00:20:32,196 --> 00:20:33,056
来总结我刚才说的这些

613
00:20:33,826 --> 00:20:35,246
我知道你们当中有许多人

614
00:20:35,246 --> 00:20:37,626
非常期待参加聚会

615
00:20:37,756 --> 00:20:40,226
所以我们会创建一个样品 App

616
00:20:40,226 --> 00:20:42,736
用来显示聚会的倒数

617
00:20:42,736 --> 00:20:43,766
计时器

618
00:20:53,046 --> 00:20:53,556
好了 真不错

619
00:20:54,176 --> 00:20:58,216
这是我们很棒的 Xcode

620
00:20:58,396 --> 00:21:01,226
这是我现在放在

621
00:20:58,396 --> 00:21:01,226
这是我现在放在

622
00:21:01,226 --> 00:21:02,416
桌子上的设备

623
00:21:03,836 --> 00:21:05,786
在这个演示中 我要展示

624
00:21:05,786 --> 00:21:07,796
如何扩展现有的 iMessage 应用

625
00:21:07,876 --> 00:21:10,136
并开始使用我们的

626
00:21:10,136 --> 00:21:11,256
LiveMessageLayout

627
00:21:12,606 --> 00:21:14,226
如果你停留在 iMessage 应用

628
00:21:14,386 --> 00:21:15,386
它的界面就会呈现出

629
00:21:15,426 --> 00:21:15,896
这个样子

630
00:21:17,166 --> 00:21:18,156
那么  当你有一个 App

631
00:21:18,156 --> 00:21:20,616
处于简洁模式

632
00:21:20,616 --> 00:21:22,736
你尝试发送时

633
00:21:22,736 --> 00:21:24,066
它会显示一个模板布局

634
00:21:24,956 --> 00:21:26,726
我们不如开始采用

635
00:21:26,896 --> 00:21:27,836
LiveLayout

636
00:21:27,836 --> 00:21:29,436
而不是展架上的

637
00:21:29,436 --> 00:21:29,936
templateLayout

638
00:21:29,936 --> 00:21:33,226
让我们进入代码部分

639
00:21:33,866 --> 00:21:36,916
我现在

640
00:21:36,916 --> 00:21:40,166
在 MSMessagesAppViewController 的

641
00:21:41,836 --> 00:21:41,966
子类

642
00:21:42,156 --> 00:21:43,816
在这个代码的某处

643
00:21:43,816 --> 00:21:45,106
可能将要创建一个

644
00:21:45,106 --> 00:21:45,536
模板布局

645
00:21:45,576 --> 00:21:51,786
我们来找找看

646
00:21:52,006 --> 00:21:55,416
找到了 我们有这个辅助功能

647
00:21:55,416 --> 00:21:56,796
叫作 sendMessage

648
00:21:57,256 --> 00:21:58,386
看来我们要创建

649
00:21:58,386 --> 00:22:01,686
信息 对它进行配置

650
00:21:58,386 --> 00:22:01,686
信息 对它进行配置

651
00:22:01,816 --> 00:22:04,536
创建一个 templateLayout

652
00:22:04,536 --> 00:22:06,196
然后再将布局放入信息

653
00:22:06,686 --> 00:22:08,096
现在我们将它插入

654
00:22:08,096 --> 00:22:08,696
对话

655
00:22:10,066 --> 00:22:11,866
我觉得这个地方很适合

656
00:22:11,906 --> 00:22:13,696
启用我们的 liveLayout

657
00:22:13,906 --> 00:22:14,526
对象

658
00:22:15,666 --> 00:22:17,776
接下来我要继续

659
00:22:24,476 --> 00:22:25,496
创建一个 liveLayout

660
00:22:25,496 --> 00:22:27,496
这里是模板布局

661
00:22:27,496 --> 00:22:31,016
接下来我们可以把它设置为

662
00:22:31,016 --> 00:22:33,006
Message 布局属性

663
00:22:34,526 --> 00:22:37,296
看一下 好了

664
00:22:38,016 --> 00:22:41,646
在改动之后

665
00:22:41,646 --> 00:22:42,496
大家应该能看到一个 liveLayout

666
00:22:42,496 --> 00:22:44,746
这肯定是一个 liveLayout

667
00:22:44,746 --> 00:22:47,486
但看起来有些

668
00:22:47,486 --> 00:22:48,596
不太对劲

669
00:22:48,966 --> 00:22:50,086
这个看起来其实很像

670
00:22:50,086 --> 00:22:52,466
刚才在简洁模式中看到的

671
00:22:52,466 --> 00:22:52,736
那样

672
00:22:53,696 --> 00:22:54,386
哪里出问题了呢

673
00:22:55,846 --> 00:22:56,906
我们返回到代码

674
00:22:58,406 --> 00:22:59,806
试着找一找

675
00:22:59,806 --> 00:23:02,176
大家在简洁模式中见到过

676
00:22:59,806 --> 00:23:02,176
大家在简洁模式中见到过

677
00:23:02,176 --> 00:23:03,906
我们实际创建

678
00:23:03,906 --> 00:23:04,916
这个表视图控制器的地方

679
00:23:06,286 --> 00:23:08,816
现在有一个地方

680
00:23:08,816 --> 00:23:10,936
需要马上查看一下

681
00:23:10,936 --> 00:23:13,426
我要进入 willBecomeActive  好

682
00:23:13,606 --> 00:23:15,516
我看到了 updatePresentation

683
00:23:15,866 --> 00:23:16,916
看看它在做什么

684
00:23:18,476 --> 00:23:19,236
噢我看到了

685
00:23:19,296 --> 00:23:20,236
presentViewController

686
00:23:20,826 --> 00:23:26,776
这个看起来像是问题所在

687
00:23:26,776 --> 00:23:27,246
就是这里

688
00:23:28,256 --> 00:23:30,226
对于所有未展开的内容

689
00:23:30,226 --> 00:23:31,886
我们都会创建一个

690
00:23:31,886 --> 00:23:33,866
表格视图控制器

691
00:23:33,866 --> 00:23:36,256
正如先前提到的

692
00:23:36,256 --> 00:23:37,466
同一个视图控制器分类

693
00:23:37,466 --> 00:23:39,256
可以用来支持文本型 简洁型和

694
00:23:39,256 --> 00:23:41,396
扩展型风格 在这个案例中

695
00:23:41,396 --> 00:23:43,826
我们需要处理的是文本风格

696
00:23:43,826 --> 00:23:44,936
而现在 文本却并不支持这个代码

697
00:23:45,556 --> 00:23:47,556
我要让这个代码

698
00:23:47,556 --> 00:23:48,076
保持原样

699
00:23:48,076 --> 00:23:49,166
我要创建一个新函数

700
00:23:49,266 --> 00:23:51,726
这样 它们可以开始

701
00:23:51,726 --> 00:23:53,626
处理这个文本的案例

702
00:23:53,666 --> 00:23:55,056
所以我现在有了这个

703
00:23:57,756 --> 00:24:03,426
presentTranscriptView

704
00:23:57,756 --> 00:24:03,426
presentTranscriptView

705
00:24:03,426 --> 00:24:04,956
也有了代码 我必须要知道

706
00:24:05,096 --> 00:24:07,046
它是否要发给我 或是否有待发送

707
00:24:07,126 --> 00:24:09,076
因为我要决定

708
00:24:09,136 --> 00:24:10,576
我是否需要显示

709
00:24:10,576 --> 00:24:11,086
邀请按钮

710
00:24:12,496 --> 00:24:13,456
那么  我现在既然有了这个

711
00:24:13,456 --> 00:24:18,006
transcriptView

712
00:24:18,006 --> 00:24:20,356
就可以继续用 Auto Layout Magic

713
00:24:20,746 --> 00:24:21,616
把它添加到一个 subView 里

714
00:24:22,196 --> 00:24:25,766
然后  我要在某个地方调用这个方法

715
00:24:25,766 --> 00:24:26,746
所以 我打算回到

716
00:24:26,746 --> 00:24:27,926
updatePresentation

717
00:24:28,766 --> 00:24:29,266
它就在这里

718
00:24:29,916 --> 00:24:37,206
我可以在这里开始

719
00:24:37,206 --> 00:24:38,926
给文本配置

720
00:24:38,926 --> 00:24:39,496
这个 viewController

721
00:24:41,576 --> 00:24:43,936
TranscriptView 事件 对话

722
00:24:45,416 --> 00:24:48,016
还有其他所有内容

723
00:24:48,016 --> 00:24:50,456
我现在准备做

724
00:24:50,456 --> 00:24:52,596
我们为了支持简洁和扩展模式

725
00:24:52,596 --> 00:24:54,426
而一直在做的事情

726
00:24:55,176 --> 00:24:57,666
很好 我们来看看

727
00:24:57,666 --> 00:24:59,386
经过这次改动  会变成什么样

728
00:25:00,086 --> 00:25:01,556
在这次改动过后

729
00:25:01,556 --> 00:25:03,076
你应该一直能看到事件详情

730
00:25:03,076 --> 00:25:03,636
出现在 App 的气泡框里

731
00:25:04,226 --> 00:25:07,676
所以事情办成了

732
00:25:07,976 --> 00:25:13,216
我现在回到我们的设备

733
00:25:13,376 --> 00:25:14,846
好的 停

734
00:25:21,226 --> 00:25:22,866
很好 我现在看到了一些东西

735
00:25:23,606 --> 00:25:27,306
但它有点儿大

736
00:25:27,306 --> 00:25:28,196
我不知道地图视图去了哪里

737
00:25:28,786 --> 00:25:31,376
但我们已经达成目的

738
00:25:38,486 --> 00:25:39,936
你可以看到 这里有一块

739
00:25:39,936 --> 00:25:41,936
看起来很别扭的蓝色区域

740
00:25:42,346 --> 00:25:43,976
它比我预想的要

741
00:25:43,976 --> 00:25:44,566
大很多

742
00:25:44,776 --> 00:25:47,696
所以哪里又出问题了

743
00:25:47,696 --> 00:25:49,706
可能是我们没有执行

744
00:25:49,706 --> 00:25:52,516
符合这个 liveLayout 接受条件里

745
00:25:52,516 --> 00:25:53,766
最后一部分的内容尺寸

746
00:25:54,866 --> 00:25:56,206
所以我要赶快

747
00:25:57,286 --> 00:25:58,286
执行这个内容尺寸

748
00:26:02,596 --> 00:26:04,836
根据本次演示 根据幻灯片内容

749
00:26:04,836 --> 00:26:07,606
你原本想要把高度设置为 217

750
00:26:07,606 --> 00:26:14,666
至于标题按钮

751
00:26:14,666 --> 00:26:16,326
你想将其设置为动态的

752
00:26:16,326 --> 00:26:18,346
它先从 transcriptView.titleFont

753
00:26:21,456 --> 00:26:26,216
然后从 lineHeight

754
00:26:26,216 --> 00:26:26,996
获取而来

755
00:26:31,956 --> 00:26:33,456
我们想把宽度尽可能地设置为

756
00:26:33,456 --> 00:26:35,426
最大宽度

757
00:26:35,426 --> 00:26:37,796
即路径和尺寸的参数上限

758
00:26:37,796 --> 00:26:39,466
所以我们可以直接返回

759
00:26:39,466 --> 00:26:39,886
确切的值

760
00:26:40,366 --> 00:26:45,866
然后是高度

761
00:26:46,566 --> 00:26:47,636
我们可以添加这两个值

762
00:26:48,306 --> 00:26:53,286
这个尺寸刚好可以

763
00:26:53,286 --> 00:26:54,346
返回两条信息

764
00:26:55,496 --> 00:26:56,376
那么我们来看看现在

765
00:26:56,376 --> 00:26:56,566
成什么样了

766
00:27:03,156 --> 00:27:03,396
好了

767
00:27:13,556 --> 00:27:14,496
它加载好了

768
00:27:14,496 --> 00:27:15,476
好多了

769
00:27:17,296 --> 00:27:20,286
这就是我们在演示中看到的

770
00:27:20,776 --> 00:27:22,816
精巧的小尺寸 有事件

771
00:27:23,396 --> 00:27:24,756
还有计时器

772
00:27:24,846 --> 00:27:26,426
我们离聚会开始

773
00:27:26,426 --> 00:27:27,616
只有一小时二十分钟了

774
00:27:28,106 --> 00:27:28,646
请大家再坚持一下

775
00:27:29,266 --> 00:27:33,276
我现在要把这个发送出去

776
00:27:33,496 --> 00:27:34,066
发送

777
00:27:34,306 --> 00:27:36,666
这是在一个实时文本

778
00:27:36,666 --> 00:27:37,386
计时器正在运行

779
00:27:38,436 --> 00:27:40,356
以上就是关于如何使用 Live Message Layout 的

780
00:27:40,356 --> 00:27:42,696
快速演示的内容

781
00:27:43,256 --> 00:27:44,656
我们再来讲讲

782
00:27:44,656 --> 00:27:45,806
viewControlLifecycle 里的

783
00:27:45,806 --> 00:27:46,876
交互情况

784
00:27:47,606 --> 00:27:48,686
我很愿意邀请 Stephen

785
00:27:48,686 --> 00:27:50,596
回到台上来

786
00:27:50,596 --> 00:27:51,046
讲讲这一点

787
00:27:52,516 --> 00:27:56,500
[掌声]

788
00:28:03,216 --> 00:28:04,736
谢谢 Jay

789
00:28:08,476 --> 00:28:09,336
好的

790
00:28:10,536 --> 00:28:14,786
现在我们已经

791
00:28:14,786 --> 00:28:15,976
简单地了解过

792
00:28:15,976 --> 00:28:17,686
这个新 API 使用时的状况

793
00:28:17,846 --> 00:28:19,166
以及在 iMessage 应用里使用

794
00:28:19,166 --> 00:28:19,906
Live Message Layout 是什么情况

795
00:28:20,846 --> 00:28:22,266
如果你回想一下

796
00:28:22,266 --> 00:28:23,186
我在会议开始时做的演示

797
00:28:23,186 --> 00:28:25,106
我们当时已经看到了一些

798
00:28:25,546 --> 00:28:26,926
出现在 iMessage 应用气泡框里的

799
00:28:27,036 --> 00:28:27,466
交互元素

800
00:28:28,956 --> 00:28:30,196
所以我现在很想

801
00:28:30,196 --> 00:28:32,226
回到 Xcode 来说明

802
00:28:32,946 --> 00:28:33,046
这一点

803
00:28:34,196 --> 00:28:35,656
回到我的设备上

804
00:28:37,256 --> 00:28:38,436
我们要回到 Xcode 上

805
00:28:38,436 --> 00:28:39,286
回到我们之前离开的位置

806
00:28:39,956 --> 00:28:42,186
我要让我的设备

807
00:28:42,186 --> 00:28:45,276
进入演示准备状态

808
00:28:45,276 --> 00:28:45,796
很好

809
00:28:46,416 --> 00:28:49,056
好了 我们要做的第一件事就在这里

810
00:28:49,056 --> 00:28:50,656
现在我们有了这个

811
00:28:50,696 --> 00:28:52,576
EventCountdownTranscriptView

812
00:28:52,576 --> 00:28:53,416
这个视图

813
00:28:53,416 --> 00:28:55,686
嵌在这个应用信息的文本中

814
00:28:55,686 --> 00:28:57,926
所以我们要

815
00:28:57,926 --> 00:28:59,126
为这个视图配置一些

816
00:28:59,126 --> 00:28:59,636
内部活动

817
00:28:59,726 --> 00:29:01,986
我要直接开始

818
00:28:59,726 --> 00:29:01,986
我要直接开始

819
00:29:01,986 --> 00:29:03,086
跳到这个分类

820
00:29:03,166 --> 00:29:04,176
你会发现  我有很多

821
00:29:04,176 --> 00:29:05,586
已配置的属性  

822
00:29:05,586 --> 00:29:08,046
那么现在

823
00:29:08,046 --> 00:29:09,806
在这个 setupSubview 里

824
00:29:09,806 --> 00:29:11,596
我创建了一个 tapGestureRecognizer

825
00:29:11,596 --> 00:29:13,306
所以当用户轻点我的视图时

826
00:29:13,306 --> 00:29:15,346
userDidTap 方法

827
00:29:15,346 --> 00:29:15,786
就会被调用

828
00:29:15,786 --> 00:29:19,286
如果我直接跳至执行

829
00:29:19,786 --> 00:29:21,476
当然这个执行

830
00:29:21,476 --> 00:29:22,526
现在还是空白的

831
00:29:22,526 --> 00:29:23,726
正等着我们来添加内容

832
00:29:24,276 --> 00:29:27,496
我们首先要添加的

833
00:29:27,496 --> 00:29:29,236
内部活动是

834
00:29:29,236 --> 00:29:31,126
在应用信息显示

835
00:29:31,156 --> 00:29:32,726
一项未接受邀请时开始

836
00:29:33,836 --> 00:29:36,996
如果这个事件与我无关

837
00:29:36,996 --> 00:29:38,316
或应用信息不是给我的

838
00:29:38,316 --> 00:29:40,316
而且未被接受

839
00:29:40,316 --> 00:29:41,436
然后我们想给它添加

840
00:29:41,686 --> 00:29:42,306
交互元素

841
00:29:42,306 --> 00:29:44,446
首先我们要做的就是

842
00:29:44,446 --> 00:29:48,876
如果没有被接受

843
00:29:48,876 --> 00:29:51,196
且不是给我的

844
00:29:51,196 --> 00:29:52,656
我们就要把视图旗标改为

845
00:29:52,656 --> 00:29:54,716
让 isAccepted 等于 True

846
00:29:55,016 --> 00:29:57,706
我们要做的另一件事

847
00:29:57,706 --> 00:29:58,986
是更新我现在的这个

848
00:29:58,986 --> 00:29:59,646
模型

849
00:29:59,926 --> 00:30:02,536
通常我会使用正确的 MVC

850
00:29:59,926 --> 00:30:02,536
通常我会使用正确的 MVC

851
00:30:02,536 --> 00:30:04,506
可能还会更新我的设备

852
00:30:04,506 --> 00:30:05,696
以表明该事件

853
00:30:05,696 --> 00:30:06,606
已更新

854
00:30:06,606 --> 00:30:07,746
但为了便于演示

855
00:30:07,746 --> 00:30:08,446
我会在默认配置中直接对此

856
00:30:08,446 --> 00:30:08,876
进行标记

857
00:30:12,956 --> 00:30:14,476
很好 我已经更新了某个状态

858
00:30:14,476 --> 00:30:16,726
现在我需要更新我的视图状态

859
00:30:16,726 --> 00:30:19,276
我会在这里使用

860
00:30:19,276 --> 00:30:22,336
一个快速的动画块

861
00:30:22,566 --> 00:30:25,186
来调用已更新的视图状态

862
00:30:25,186 --> 00:30:27,306
然后我将触发一个布局

863
00:30:27,306 --> 00:30:27,626
传递

864
00:30:28,516 --> 00:30:30,186
现在再看这个 updateViewState

865
00:30:30,186 --> 00:30:31,086
它刚在我的视图上查看了

866
00:30:31,086 --> 00:30:32,566
不同的旗标和属性

867
00:30:32,566 --> 00:30:33,316
并正确地配置这个

868
00:30:33,316 --> 00:30:33,806
视图

869
00:30:34,376 --> 00:30:37,716
所以等我们的演示设备

870
00:30:37,716 --> 00:30:39,166
恢复正常 我会向大家展示

871
00:30:39,166 --> 00:30:39,786
实际情况

872
00:30:39,786 --> 00:30:40,156
是什么样的

873
00:30:40,806 --> 00:30:44,036
很好 现在我们

874
00:30:44,036 --> 00:30:45,226
在演示中

875
00:30:45,226 --> 00:30:47,556
展示了未接收的邀请

876
00:30:47,556 --> 00:30:48,976
我们已经准备好测试

877
00:30:48,976 --> 00:30:50,046
刚刚添加的交互

878
00:30:50,046 --> 00:30:51,756
大家看 当我轻点这条信息时

879
00:30:51,756 --> 00:30:53,986
状态就得到了更新

880
00:30:53,986 --> 00:30:55,216
我们可以看到实时的倒计时

881
00:30:55,216 --> 00:30:56,716
大家可以看到

882
00:30:56,716 --> 00:30:58,626
我剩下时间已经很少了

883
00:30:58,626 --> 00:31:00,466
所以我最好抓紧

884
00:30:58,626 --> 00:31:00,466
所以我最好抓紧

885
00:31:00,636 --> 00:31:01,486
现在 我们在这里

886
00:31:01,486 --> 00:31:03,526
遗漏了一样东西

887
00:31:03,526 --> 00:31:04,686
就是右上角那个漂亮的 infoButton

888
00:31:04,686 --> 00:31:06,166
这个按钮提供了大量

889
00:31:06,166 --> 00:31:07,256
有关此事的详情

890
00:31:07,256 --> 00:31:08,646
我不想也不需要把这些信息

891
00:31:08,646 --> 00:31:09,416
放在我的 App 信息里

892
00:31:10,806 --> 00:31:12,096
如果我回到代码

893
00:31:13,096 --> 00:31:14,396
大家会看到这个 infoButton

894
00:31:14,666 --> 00:31:15,936
正在等待

895
00:31:15,936 --> 00:31:16,526
执行

896
00:31:17,276 --> 00:31:18,356
但是在执行之前

897
00:31:18,356 --> 00:31:19,376
我们要把这个 infoButton 添加到

898
00:31:19,376 --> 00:31:19,996
视图层级里

899
00:31:20,576 --> 00:31:25,956
在这个 setupSubViews 里你可以

900
00:31:25,996 --> 00:31:27,466
看到我有这个 infoButton

901
00:31:27,516 --> 00:31:28,786
它已经配置好了

902
00:31:29,486 --> 00:31:30,396
还包括了我正好需要

903
00:31:30,396 --> 00:31:32,346
添加为 subView 的

904
00:31:32,346 --> 00:31:37,396
目标动作

905
00:31:37,576 --> 00:31:38,436
我还想添加一些约束

906
00:31:38,436 --> 00:31:39,936
比如使该视图布局

907
00:31:40,656 --> 00:31:41,026
合理化

908
00:31:45,316 --> 00:31:47,956
然后我们继续

909
00:31:47,956 --> 00:31:49,076
跳至

910
00:31:49,076 --> 00:31:52,026
infoButtonTapped 的执行并

911
00:31:52,026 --> 00:31:52,646
调用我们的委托代理

912
00:31:53,256 --> 00:31:58,446
现在这个视图的委托代理

913
00:31:58,446 --> 00:32:00,036
是我们的应用视图控制器

914
00:31:58,446 --> 00:32:00,036
是我们的应用视图控制器

915
00:32:00,036 --> 00:32:00,946
这个应用视图控制器

916
00:32:00,946 --> 00:32:02,366
是一个知道如何改变

917
00:32:02,366 --> 00:32:03,756
展示风格的对象

918
00:32:03,756 --> 00:32:04,466
所以我需要将其调出

919
00:32:05,176 --> 00:32:06,196
你会看到  这个方法

920
00:32:06,196 --> 00:32:07,486
尚未被执行

921
00:32:07,486 --> 00:32:07,966
但在我的委托代理当中

922
00:32:07,966 --> 00:32:10,066
所以我们要快速

923
00:32:10,066 --> 00:32:11,036
跳至这个委托代理

924
00:32:11,036 --> 00:32:14,996
这是一个委托协议声明

925
00:32:14,996 --> 00:32:17,116
我们可以看到

926
00:32:17,116 --> 00:32:18,136
这个方法尚未被定义

927
00:32:18,766 --> 00:32:19,536
所以我们直接添加上去

928
00:32:20,026 --> 00:32:22,476
然后我们跳转到

929
00:32:22,476 --> 00:32:23,346
这个协议执行的地方

930
00:32:23,346 --> 00:32:26,966
把我们刚刚添加的

931
00:32:26,966 --> 00:32:30,736
新方法添加进去

932
00:32:30,946 --> 00:32:33,406
现在我们所要做的就是

933
00:32:33,406 --> 00:32:35,766
请求这个新的展示风格

934
00:32:35,766 --> 00:32:36,236
就是这样

935
00:32:37,256 --> 00:32:38,466
我这样做的时候

936
00:32:38,466 --> 00:32:39,746
应用视图控制器会请求

937
00:32:39,746 --> 00:32:41,936
这个新的展示风格

938
00:32:41,936 --> 00:32:43,506
Message 应用会在扩展展示中

939
00:32:43,506 --> 00:32:45,306
把这个新的视图控制器

940
00:32:45,346 --> 00:32:45,986
充实进去

941
00:32:47,376 --> 00:32:49,636
这就是刚刚

942
00:32:49,636 --> 00:32:50,916
在代码中执行的同一种

943
00:32:51,276 --> 00:32:51,386
东西

944
00:32:51,566 --> 00:32:52,616
我们在右上角有了这个 infoButton

945
00:32:52,616 --> 00:32:54,646
当你轻点这个按钮时

946
00:32:54,716 --> 00:32:56,716
我们就可以得到漂亮的

947
00:32:56,716 --> 00:32:58,566
扩展展示和其他额外的

948
00:32:59,106 --> 00:32:59,326
内容

949
00:33:03,206 --> 00:33:03,626
就是这样

950
00:33:03,626 --> 00:33:04,806
我们给大家提供了

951
00:33:04,806 --> 00:33:05,616
一次完整的演示--谢谢

952
00:33:06,516 --> 00:33:10,196
[掌声]

953
00:33:10,696 --> 00:33:11,696
通过这一次完整的演示

954
00:33:11,786 --> 00:33:13,236
大家可以看到我们能够

955
00:33:13,236 --> 00:33:14,956
添加完整的自定义布局

956
00:33:14,996 --> 00:33:16,416
这确实可以让我们对文本的体验

957
00:33:16,416 --> 00:33:17,866
变得更加丰富

958
00:33:17,866 --> 00:33:19,646
包括它的内部活动和实时更新

959
00:33:19,646 --> 00:33:20,126
内容

960
00:33:24,056 --> 00:33:25,366
当我们想与这些

961
00:33:25,366 --> 00:33:28,066
实时信息布局

962
00:33:28,066 --> 00:33:29,656
进行交互时

963
00:33:29,656 --> 00:33:30,366
我们只希望保持一种简单

964
00:33:30,656 --> 00:33:32,996
继续使用简单的按钮触发和

965
00:33:32,996 --> 00:33:34,966
轻点手势  并且让我使用

966
00:33:35,006 --> 00:33:35,546
滚动视图

967
00:33:36,426 --> 00:33:37,616
这个 App 信息将被

968
00:33:37,616 --> 00:33:39,136
嵌入一个相当精巧的用户界面

969
00:33:39,136 --> 00:33:41,546
即 Message 文本里

970
00:33:41,546 --> 00:33:42,836
用户将会习惯于

971
00:33:42,836 --> 00:33:44,626
这些交互方式

972
00:33:44,626 --> 00:33:45,706
例如上下滚动文本

973
00:33:45,706 --> 00:33:46,786
左右滚动文本

974
00:33:47,176 --> 00:33:48,736
以及其他可用的手势

975
00:33:49,386 --> 00:33:50,366
如果你在其中添加了过多

976
00:33:50,366 --> 00:33:51,956
复杂的东西

977
00:33:51,956 --> 00:33:53,236
就会让用户感觉很混乱

978
00:33:54,606 --> 00:33:55,346
另外 要记住的一件事是

979
00:33:55,346 --> 00:33:56,326
这些应用信息视图

980
00:33:56,326 --> 00:33:57,856
并不采用键盘输入方式

981
00:33:57,856 --> 00:33:59,576
如果你想要

982
00:33:59,576 --> 00:34:01,066
使用键盘输入

983
00:33:59,576 --> 00:34:01,066
使用键盘输入

984
00:34:01,066 --> 00:34:02,346
就应该请求一个扩展展示风格

985
00:34:02,346 --> 00:34:04,036
这样你的 App 就能够使用

986
00:34:04,036 --> 00:34:04,406
键盘了

987
00:34:04,916 --> 00:34:07,576
出于某种原因

988
00:34:07,576 --> 00:34:08,396
这些实际上都是轻量级的视图

989
00:34:08,396 --> 00:34:09,606
大家想一想它们的

990
00:34:09,606 --> 00:34:11,536
生命周期

991
00:34:11,536 --> 00:34:13,096
它们只有在用户进入对话

992
00:34:13,096 --> 00:34:14,505
并进行查看时  才会充实具体

993
00:34:15,186 --> 00:34:15,295
内容

994
00:34:15,295 --> 00:34:16,235
只要用户离开对话

995
00:34:16,235 --> 00:34:17,686
或离开这个 App

996
00:34:18,396 --> 00:34:20,045
你的 iMessage 应用就会

997
00:34:20,045 --> 00:34:20,376
解除使用

998
00:34:20,656 --> 00:34:21,656
所以这些视图里不适合

999
00:34:21,656 --> 00:34:22,946
加入 3D 游戏引擎这样的

1000
00:34:22,946 --> 00:34:23,235
东西

1001
00:34:23,815 --> 00:34:27,856
如果你确实想这么做

1002
00:34:27,856 --> 00:34:29,226
你应该请求

1003
00:34:29,226 --> 00:34:30,956
扩展展示风格

1004
00:34:30,956 --> 00:34:32,616
让用户参与你的

1005
00:34:32,616 --> 00:34:33,146
扩展交互

1006
00:34:33,696 --> 00:34:36,585
现在我想再说一下这个问题

1007
00:34:36,585 --> 00:34:37,176
因为我觉得这

1008
00:34:37,176 --> 00:34:38,306
很重要

1009
00:34:38,956 --> 00:34:40,616
当你在请求

1010
00:34:40,616 --> 00:34:41,786
扩展展示风格时

1011
00:34:41,786 --> 00:34:43,196
你的文本应用视图控制器

1012
00:34:43,196 --> 00:34:44,626
并没有被重新配置成

1013
00:34:44,626 --> 00:34:46,286
新的展示风格

1014
00:34:46,286 --> 00:34:47,426
而只是留在了文本里

1015
00:34:48,636 --> 00:34:50,906
如果没有视图控制器

1016
00:34:50,906 --> 00:34:52,126
是以简洁或扩展

1017
00:34:52,126 --> 00:34:54,016
展示的风格存在

1018
00:34:54,016 --> 00:34:55,335
Message 会充实一个新的对象

1019
00:34:55,656 --> 00:34:56,835
并对它进行相应的配置

1020
00:34:57,136 --> 00:34:58,426
然后在这里添加它  展示它

1021
00:34:59,286 --> 00:35:01,176
如果这类风格的视图控制器确实已经存在

1022
00:34:59,286 --> 00:35:01,176
如果这类风格的视图控制器确实已经存在

1023
00:35:01,176 --> 00:35:02,276
Message 会将其重新配置为

1024
00:35:02,276 --> 00:35:03,236
新的展示风格

1025
00:35:03,996 --> 00:35:05,186
这是在某个简洁或

1026
00:35:05,186 --> 00:35:06,576
扩展风格的视图控制器确实存在时

1027
00:35:06,576 --> 00:35:07,166
一种特殊的对待方法

1028
00:35:07,166 --> 00:35:09,526
这样一来  这个视图控制器上的选中信息

1029
00:35:09,526 --> 00:35:11,006
就会发生变化

1030
00:35:11,256 --> 00:35:12,226
你可以把

1031
00:35:12,226 --> 00:35:13,886
在这个视图控制器上

1032
00:35:13,886 --> 00:35:14,456
调回未选中的信息调回

1033
00:35:14,996 --> 00:35:17,016
现在这个文本应用视图控制器

1034
00:35:17,016 --> 00:35:18,016
按照原样留在原位

1035
00:35:18,016 --> 00:35:20,156
或是处于静态选中信息的状态

1036
00:35:20,156 --> 00:35:21,466
因为它始终

1037
00:35:21,466 --> 00:35:23,006
在显示这个文本中的

1038
00:35:23,006 --> 00:35:23,516
信息

1039
00:35:23,936 --> 00:35:29,016
下面我们稍微谈一谈

1040
00:35:29,016 --> 00:35:31,976
iMessage 应用的生命周期问题

1041
00:35:31,976 --> 00:35:34,166
在 iOS 10 里 这些

1042
00:35:34,226 --> 00:35:35,546
MSMessagesAppViewController 的方法

1043
00:35:35,546 --> 00:35:38,596
将专门应用于

1044
00:35:38,596 --> 00:35:40,426
你的扩展生命周期

1045
00:35:40,426 --> 00:35:41,936
因为只有一个

1046
00:35:41,936 --> 00:35:43,136
视图控制器的实例得以创建

1047
00:35:43,276 --> 00:35:45,016
它与你的 iMessage App 的

1048
00:35:45,016 --> 00:35:46,306
生命周期紧密结合

1049
00:35:46,306 --> 00:35:47,396
所以你可以依靠它来

1050
00:35:47,396 --> 00:35:48,526
获得扩展生命周期的

1051
00:35:48,926 --> 00:35:49,816
通知

1052
00:35:51,046 --> 00:35:52,846
然而在 iOS 11 里

1053
00:35:52,846 --> 00:35:55,006
我们可以为你的主要分类

1054
00:35:55,006 --> 00:35:55,906
充实众多例证

1055
00:35:56,676 --> 00:35:58,336
这些方法确实和视图控制器的

1056
00:35:58,336 --> 00:35:59,886
生命周期关联更大

1057
00:35:59,886 --> 00:36:01,116
你需要从这个角度

1058
00:35:59,886 --> 00:36:01,116
你需要从这个角度

1059
00:36:01,116 --> 00:36:02,136
来进行思考

1060
00:36:03,536 --> 00:36:04,816
如果你需要关注

1061
00:36:04,816 --> 00:36:07,046
自己的 iMessage 应用里的

1062
00:36:07,046 --> 00:36:08,416
扩展生命周期事件

1063
00:36:08,416 --> 00:36:10,786
就应该遵循与 NSExtension 相关的

1064
00:36:10,786 --> 00:36:11,476
通知

1065
00:36:14,866 --> 00:36:16,586
现在 在一个已经创建的

1066
00:36:16,586 --> 00:36:17,616
文本应用视图控制器的

1067
00:36:17,616 --> 00:36:19,636
特定实例中

1068
00:36:19,636 --> 00:36:21,026
生命周期方法就是这样

1069
00:36:21,026 --> 00:36:21,226
展开的

1070
00:36:22,106 --> 00:36:23,266
首先 我们把视图控制器进行初始化

1071
00:36:23,266 --> 00:36:25,346
再调用 viewDidLoad

1072
00:36:25,346 --> 00:36:29,166
然后我们调用 willBecomeActive

1073
00:36:29,166 --> 00:36:30,046
和 didBecomeActive

1074
00:36:30,046 --> 00:36:31,446
并且把对话作为

1075
00:36:31,446 --> 00:36:32,866
Message API 合约的一部分

1076
00:36:33,366 --> 00:36:35,886
然后 当你的视图控制器

1077
00:36:35,886 --> 00:36:37,886
被嵌入视图层级并加以显示时 

1078
00:36:37,886 --> 00:36:38,936
视图显示方法

1079
00:36:38,936 --> 00:36:42,036
随即会被调用 

1080
00:36:42,166 --> 00:36:43,816
最后 contentSizeThatFits 将会

1081
00:36:43,816 --> 00:36:44,286
被调用

1082
00:36:44,906 --> 00:36:47,716
现在 当 willBecomeActive 

1083
00:36:47,716 --> 00:36:48,516
和 didBecomeActive

1084
00:36:48,516 --> 00:36:49,986
和对话一起被调用时

1085
00:36:49,986 --> 00:36:51,246
你将获得所需的全部信息

1086
00:36:51,246 --> 00:36:52,516
从而可以通过查看

1087
00:36:52,516 --> 00:36:53,936
视图控制器中的展示风格

1088
00:36:53,936 --> 00:36:55,276
和选定信息 

1089
00:36:55,326 --> 00:36:56,296
来正确地配置

1090
00:36:56,296 --> 00:36:56,616
你的视图控制器 

1091
00:36:59,156 --> 00:37:00,096
现在我们想一想

1092
00:36:59,156 --> 00:37:00,096
现在我们想一想

1093
00:37:00,096 --> 00:37:01,326
contentSizeThatFits 是

1094
00:37:01,326 --> 00:37:03,656
最后被调用的  原因在于

1095
00:37:03,656 --> 00:37:05,066
它可能会被多次调用

1096
00:37:05,816 --> 00:37:06,686
我们可以想一想  Message 应用程序

1097
00:37:06,686 --> 00:37:08,416
在一台 iPad 上 以分割视图模式

1098
00:37:08,416 --> 00:37:08,826
呈现出来的样子

1099
00:37:08,826 --> 00:37:11,616
当用户更改

1100
00:37:11,616 --> 00:37:13,626
Message 应用的尺寸时

1101
00:37:13,626 --> 00:37:15,076
Message 应用的衡量标准会改变

1102
00:37:15,076 --> 00:37:16,006
因此其文本也会随之

1103
00:37:16,006 --> 00:37:16,506
改变

1104
00:37:17,406 --> 00:37:18,486
然后我们

1105
00:37:18,486 --> 00:37:20,306
以更新的尺寸或最大的尺寸

1106
00:37:20,306 --> 00:37:22,566
来调用你的 contentSizeThatFits 方法

1107
00:37:23,486 --> 00:37:25,286
你要相应地更新

1108
00:37:25,336 --> 00:37:26,086
你的 App 尺寸

1109
00:37:29,136 --> 00:37:29,986
它当然也可以随着

1110
00:37:29,986 --> 00:37:31,566
动态文本尺寸更改和

1111
00:37:31,566 --> 00:37:32,646
区域更改而更新

1112
00:37:32,726 --> 00:37:36,976
最后我想说的问题是

1113
00:37:36,976 --> 00:37:37,896
待发送信息

1114
00:37:38,596 --> 00:37:41,406
请记住

1115
00:37:41,406 --> 00:37:42,766
你的视图控制器可以获得配置

1116
00:37:42,766 --> 00:37:44,546
并将呈现以某种文本展示风格

1117
00:37:44,546 --> 00:37:46,136
而呈现的 App 信息

1118
00:37:46,656 --> 00:37:48,306
既可以用于未发送信息

1119
00:37:48,306 --> 00:37:50,106
也可以用于已经在文本形式下

1120
00:37:50,106 --> 00:37:50,716
发送的信息

1121
00:37:50,716 --> 00:37:54,486
绝大多数时候

1122
00:37:54,486 --> 00:37:56,186
你要让同一个应用视图

1123
00:37:56,186 --> 00:37:57,906
同时保持这两种状态

1124
00:37:57,906 --> 00:37:59,206
因为用户确实会预览

1125
00:37:59,206 --> 00:38:00,096
将在这里发送的内容

1126
00:37:59,206 --> 00:38:00,096
将在这里发送的内容

1127
00:38:00,496 --> 00:38:01,206
但如果你确实需要

1128
00:38:01,206 --> 00:38:02,596
将两者区分开来

1129
00:38:03,936 --> 00:38:05,636
你可以查看 isPending 旗标

1130
00:38:05,846 --> 00:38:06,826
这是 MSMessage 上的一个新属性

1131
00:38:06,966 --> 00:38:09,156
它可以让你知道

1132
00:38:09,156 --> 00:38:10,336
这两种状态之间的

1133
00:38:11,076 --> 00:38:11,226
区别

1134
00:38:13,336 --> 00:38:14,796
以上就是今天为大家介绍的

1135
00:38:14,796 --> 00:38:16,336
Live Message Layout 的

1136
00:38:16,336 --> 00:38:16,706
全部内容

1137
00:38:18,156 --> 00:38:19,276
记住 这是以文本呈现的

1138
00:38:19,356 --> 00:38:20,956
各类交互性 iMessage 应用

1139
00:38:20,956 --> 00:38:22,306
我觉得这样做简直酷得要命

1140
00:38:22,306 --> 00:38:23,086
我很期待能看到大家对它

1141
00:38:23,086 --> 00:38:23,546
进行创建开发

1142
00:38:24,226 --> 00:38:25,896
我们使用的是同样的

1143
00:38:25,896 --> 00:38:27,066
MSMessage 应用视图控制器子类

1144
00:38:28,346 --> 00:38:29,656
以及新的布局

1145
00:38:29,656 --> 00:38:31,466
即拥有新展示风格的

1146
00:38:31,466 --> 00:38:35,076
MSMessagesLiveLayout

1147
00:38:35,076 --> 00:38:36,466
你可以以此作为工具

1148
00:38:36,466 --> 00:38:37,476
开发这些丰富的新体验

1149
00:38:38,826 --> 00:38:39,916
我真的非常期待看到

1150
00:38:39,916 --> 00:38:41,296
大家利用它来进行开发的成果

1151
00:38:41,296 --> 00:38:42,026
我认为你们会

1152
00:38:42,026 --> 00:38:42,836
遇到我们尚未

1153
00:38:42,836 --> 00:38:43,286
想明白的东西

1154
00:38:43,836 --> 00:38:44,986
为此 我想请

1155
00:38:44,986 --> 00:38:46,726
Eugene 来介绍一些

1156
00:38:46,726 --> 00:38:47,776
使用 Message 框架时的

1157
00:38:47,776 --> 00:38:48,846
最佳操作

1158
00:38:49,516 --> 00:38:53,500
[掌声]

1159
00:39:02,126 --> 00:39:02,926
&gt;&gt; 好的

1160
00:39:03,016 --> 00:39:04,166
谢谢 Stephen

1161
00:39:04,466 --> 00:39:06,226
Live Message Layout

1162
00:39:06,226 --> 00:39:06,656
超级激动人心

1163
00:39:07,676 --> 00:39:08,856
在今天讲座的最后

1164
00:39:08,856 --> 00:39:11,156
我们要分享几个

1165
00:39:11,156 --> 00:39:12,966
iMessage 应用的

1166
00:39:12,966 --> 00:39:14,616
最佳操作技巧

1167
00:39:14,616 --> 00:39:15,686
从而给大家的应用增加一点

1168
00:39:15,686 --> 00:39:17,166
额外的闪光点

1169
00:39:17,166 --> 00:39:18,026
我们认为这会让应用真正变得

1170
00:39:18,026 --> 00:39:18,346
很棒

1171
00:39:18,446 --> 00:39:19,826
所以 我们今天为大家

1172
00:39:19,826 --> 00:39:20,616
准备了几个小技巧

1173
00:39:21,366 --> 00:39:23,046
我们现在就开始吧

1174
00:39:23,456 --> 00:39:24,276
首先我想讲讲

1175
00:39:24,276 --> 00:39:26,376
iMessage 应用的

1176
00:39:26,376 --> 00:39:27,416
区域嵌入

1177
00:39:27,416 --> 00:39:29,086
看这个区域  它位于

1178
00:39:29,086 --> 00:39:32,126
屏幕底部

1179
00:39:32,216 --> 00:39:35,856
在应用条的下方

1180
00:39:35,856 --> 00:39:37,786
同时也位于扩展模式下的

1181
00:39:37,786 --> 00:39:38,116
屏幕底部

1182
00:39:38,496 --> 00:39:40,936
它跟同导航控制器很相似

1183
00:39:40,936 --> 00:39:43,476
Message UI 可以

1184
00:39:43,546 --> 00:39:45,776
包含你的应用所展示的区域

1185
00:39:45,776 --> 00:39:47,106
所以你可以

1186
00:39:47,106 --> 00:39:48,876
在滚动视图时

1187
00:39:48,876 --> 00:39:50,406
获得漂亮的模糊效果

1188
00:39:50,436 --> 00:39:52,986
要想确定你的应用区域嵌入

1189
00:39:52,986 --> 00:39:54,906
你可以查看

1190
00:39:54,906 --> 00:39:56,436
UIViewController 顶部及底部的 

1191
00:39:56,436 --> 00:39:58,866
布局指南 或在 iOS 11 的新功能中

1192
00:39:59,266 --> 00:40:02,036
查看 UIViewsafeAreaInsets

1193
00:39:59,266 --> 00:40:02,036
查看 UIViewsafeAreaInsets

1194
00:40:02,156 --> 00:40:04,096
这些东西将会界定你的

1195
00:40:04,096 --> 00:40:05,676
在 Message UI 里所有未被遮蔽的

1196
00:40:05,676 --> 00:40:07,076
应用视图区域

1197
00:40:07,886 --> 00:40:09,116
当然 你也可以一直

1198
00:40:09,116 --> 00:40:11,696
使用 Autolayout 来添加对

1199
00:40:11,696 --> 00:40:12,876
UIViewController 的顶部或

1200
00:40:12,876 --> 00:40:13,746
底部布局指南的约束

1201
00:40:14,596 --> 00:40:16,906
对于连接到 iOS 10 的应用

1202
00:40:17,126 --> 00:40:19,266
我们将继续使用

1203
00:40:19,266 --> 00:40:20,246
旧版的嵌入

1204
00:40:20,406 --> 00:40:22,106
但有一个很好的办法可以

1205
00:40:22,106 --> 00:40:23,766
跟进 UI Messages 的改变

1206
00:40:23,766 --> 00:40:25,356
并让你的应用进行合理调整

1207
00:40:25,356 --> 00:40:27,146
那就是适当地

1208
00:40:27,146 --> 00:40:28,366
采用

1209
00:40:28,366 --> 00:40:30,496
UIViewsafeAreaInsets 或

1210
00:40:30,496 --> 00:40:32,706
UIViewController 顶部和底部的

1211
00:40:32,706 --> 00:40:33,486
布局指南

1212
00:40:34,086 --> 00:40:37,756
下面我们介绍一下信息摘要

1213
00:40:37,756 --> 00:40:38,316
文本

1214
00:40:38,516 --> 00:40:41,086
iOS 10 推出了 MSMessage

1215
00:40:41,256 --> 00:40:42,466
以及它名为 summaryText

1216
00:40:42,466 --> 00:40:43,156
的属性

1217
00:40:43,856 --> 00:40:45,956
在 iOS 10 里  summaryText 被用于

1218
00:40:45,956 --> 00:40:49,166
附有 MS Session 的信息

1219
00:40:49,166 --> 00:40:50,076
这是一种

1220
00:40:50,076 --> 00:40:51,866
基于会话的信息传递

1221
00:40:51,866 --> 00:40:54,286
我们将插入一个简明扼要的摘要

1222
00:40:54,286 --> 00:40:56,226
来内联这个信息的

1223
00:40:56,226 --> 00:40:56,686
文本

1224
00:40:56,686 --> 00:40:59,636
在 iOS 11 中 我们

1225
00:40:59,636 --> 00:41:01,366
将 summaryText 属性的使用

1226
00:40:59,636 --> 00:41:01,366
将 summaryText 属性的使用

1227
00:41:01,626 --> 00:41:03,466
扩展到了所有已发送的 MSMessages

1228
00:41:03,846 --> 00:41:04,876
那么你可以在哪里

1229
00:41:04,876 --> 00:41:05,636
看到 summaryText 呢

1230
00:41:07,166 --> 00:41:08,926
MSMessage summaryText 现在将

1231
00:41:08,926 --> 00:41:10,606
用于对话列表预览

1232
00:41:10,606 --> 00:41:12,446
以及通知中心等领域

1233
00:41:12,626 --> 00:41:14,156
这样你就可以

1234
00:41:14,156 --> 00:41:15,726
把语境提供给

1235
00:41:15,726 --> 00:41:16,996
你应用程序的

1236
00:41:16,996 --> 00:41:17,746
信息通知

1237
00:41:17,956 --> 00:41:19,186
所以这是一个很好的方式

1238
00:41:19,336 --> 00:41:20,926
用户可以快速浏览

1239
00:41:20,926 --> 00:41:22,556
你在应用信息中

1240
00:41:22,556 --> 00:41:23,306
发送的内容

1241
00:41:23,786 --> 00:41:26,416
以上就是 iOS 11 中的 summaryText

1242
00:41:26,446 --> 00:41:27,846
和每一个单项内容  MSMessages

1243
00:41:28,386 --> 00:41:32,876
接下来介绍的是贴纸

1244
00:41:32,876 --> 00:41:34,016
自从 iOS 10 引入贴纸包后

1245
00:41:34,016 --> 00:41:36,346
我们见证了

1246
00:41:36,466 --> 00:41:37,426
无数贴纸的发布

1247
00:41:37,426 --> 00:41:38,656
我特别喜欢贴纸

1248
00:41:38,656 --> 00:41:39,466
每周都会下载一批新的

1249
00:41:39,876 --> 00:41:41,496
密切关注那些超赞的

1250
00:41:41,496 --> 00:41:42,106
贴纸包作品

1251
00:41:42,106 --> 00:41:42,486
我们喜爱它

1252
00:41:43,556 --> 00:41:44,876
我们想分享几条技巧

1253
00:41:44,956 --> 00:41:46,516
让大家的贴纸包

1254
00:41:46,626 --> 00:41:48,446
使用起来更快速 发送更便捷

1255
00:41:49,056 --> 00:41:50,996
总的来说

1256
00:41:50,996 --> 00:41:52,176
贴纸包的运行是

1257
00:41:52,176 --> 00:41:53,336
关于贴纸文件大小的函数

1258
00:41:53,846 --> 00:41:55,326
这个函数

1259
00:41:55,326 --> 00:41:57,486
是关于你的贴纸

1260
00:41:57,486 --> 00:41:59,366
像素大小以及帧率的

1261
00:41:59,366 --> 00:42:00,106
函数

1262
00:41:59,366 --> 00:42:00,106
函数

1263
00:42:00,616 --> 00:42:01,716
有一个非常好的资源

1264
00:42:01,716 --> 00:42:03,436
可以用来参考

1265
00:42:03,436 --> 00:42:04,696
它就是 Messages Human Interface Guidelines

1266
00:42:04,696 --> 00:42:05,606
这个可以在开发者门户网站获取

1267
00:42:05,606 --> 00:42:07,346
这个指南将会告诉你

1268
00:42:07,346 --> 00:42:08,926
我们所支持的

1269
00:42:08,926 --> 00:42:11,246
目标贴纸的尺寸

1270
00:42:11,246 --> 00:42:12,506
包括大中小尺寸的贴纸

1271
00:42:13,226 --> 00:42:15,156
另外 还有贴纸的

1272
00:42:15,156 --> 00:42:15,956
帧率也要考虑到

1273
00:42:16,566 --> 00:42:18,616
具有较高帧率

1274
00:42:18,766 --> 00:42:20,726
或循环时间较长的贴纸

1275
00:42:20,726 --> 00:42:22,556
会产生较大的内存开销

1276
00:42:22,556 --> 00:42:23,566
对贴纸应用的运行也会

1277
00:42:23,566 --> 00:42:24,636
产生负面影响

1278
00:42:24,636 --> 00:42:26,016
并对发送时间

1279
00:42:26,016 --> 00:42:27,916
产生负面影响

1280
00:42:28,426 --> 00:42:30,106
因此 为了快速发送贴纸

1281
00:42:30,106 --> 00:42:31,506
快速启动贴纸应用

1282
00:42:31,506 --> 00:42:33,056
请确保你的

1283
00:42:33,056 --> 00:42:35,476
贴纸尺寸正确

1284
00:42:35,606 --> 00:42:37,346
并使用短时间的循环  或是较低的

1285
00:42:37,416 --> 00:42:37,866
帧率

1286
00:42:38,426 --> 00:42:40,066
我非常期待见到

1287
00:42:40,066 --> 00:42:40,966
大家在 iOS 11 中设计的

1288
00:42:40,966 --> 00:42:45,626
新贴纸包

1289
00:42:45,736 --> 00:42:47,956
我们最后要讲的是

1290
00:42:47,996 --> 00:42:49,926
MFMessageComposeViewController

1291
00:42:50,286 --> 00:42:52,116
MFMessageComposeViewController 是

1292
00:42:52,436 --> 00:42:54,216
Message 的 Share Sheet

1293
00:42:54,216 --> 00:42:55,646
从你的父级应用程序里

1294
00:42:55,646 --> 00:42:56,376
即可调用

1295
00:42:57,426 --> 00:42:58,906
在 iOS 10 中 我们在 Share Sheet

1296
00:42:58,906 --> 00:43:00,256
添加了新属性

1297
00:42:58,906 --> 00:43:00,256
添加了新属性

1298
00:43:00,546 --> 00:43:01,956
它名为 Message

1299
00:43:02,146 --> 00:43:04,036
可以预先应用 MSMessage

1300
00:43:04,086 --> 00:43:04,636
实例

1301
00:43:05,366 --> 00:43:06,806
如果你已经有

1302
00:43:06,986 --> 00:43:09,036
一个 iMessage 应用

1303
00:43:09,036 --> 00:43:10,746
你的父级伴随 App 其实可以

1304
00:43:10,746 --> 00:43:12,486
发送同样的应用汽球框

1305
00:43:12,816 --> 00:43:14,206
或者是一个模板布局

1306
00:43:14,206 --> 00:43:16,126
或者是 liveLayout 你都可以

1307
00:43:16,126 --> 00:43:17,246
在 Message 应用里发送

1308
00:43:17,246 --> 00:43:18,376
这样你就会得到非常不错

1309
00:43:18,376 --> 00:43:19,916
而且连贯一致的分享体验

1310
00:43:20,326 --> 00:43:21,756
在你的父级应用

1311
00:43:21,946 --> 00:43:22,996
和 iMessage 应用之间进行分享

1312
00:43:24,856 --> 00:43:26,676
接收到的 App 汽球框

1313
00:43:26,996 --> 00:43:28,646
要么能够在

1314
00:43:28,646 --> 00:43:30,766
你的 iMessage 应用里打开

1315
00:43:30,806 --> 00:43:32,146
要么能够通过 open URL 命令

1316
00:43:32,146 --> 00:43:34,666
将用户弹至其父级应用

1317
00:43:34,666 --> 00:43:35,126
程序

1318
00:43:35,406 --> 00:43:37,496
所以一定要关注

1319
00:43:37,496 --> 00:43:39,096
MFMessageComposeViewController 中的

1320
00:43:39,346 --> 00:43:41,106
Message 属性

1321
00:43:41,696 --> 00:43:44,286
以上就是我们总结的

1322
00:43:44,286 --> 00:43:44,736
一些小技巧

1323
00:43:44,736 --> 00:43:46,036
有几件事

1324
00:43:46,036 --> 00:43:46,936
需要大家牢记在心

1325
00:43:47,846 --> 00:43:48,916
注意查看布局边距

1326
00:43:49,466 --> 00:43:50,906
在 iOS 11 的所有 MSMessage 上

1327
00:43:50,906 --> 00:43:52,356
设置 summaryText

1328
00:43:53,016 --> 00:43:55,116
注意贴纸的尺寸和帧率

1329
00:43:55,116 --> 00:43:56,666
以便让贴纸包更快速

1330
00:43:56,666 --> 00:43:57,716
同时也要继续设计

1331
00:43:57,716 --> 00:43:58,226
那些超赞的贴纸噢

1332
00:43:58,996 --> 00:44:01,556
最后 大家现在可以从

1333
00:43:58,996 --> 00:44:01,556
最后 大家现在可以从

1334
00:44:01,806 --> 00:44:03,246
MFMessageComposeViewController

1335
00:44:03,246 --> 00:44:04,756
发送 App 汽球框了

1336
00:44:04,756 --> 00:44:06,186
一定要试试这个

1337
00:44:06,186 --> 00:44:07,646
从而感受到连贯一致的用户体验

1338
00:44:07,736 --> 00:44:11,286
我们今天都了解到哪些事情了呢

1339
00:44:11,646 --> 00:44:13,076
我们了解到

1340
00:44:13,076 --> 00:44:14,206
MSMessages App UI 的一些新特性

1341
00:44:15,016 --> 00:44:16,966
我们了解到 Direct Send API

1342
00:44:16,966 --> 00:44:17,866
可以在你的 iMessage 应用里

1343
00:44:17,866 --> 00:44:18,936
进行超赞的全新设置

1344
00:44:20,546 --> 00:44:22,216
Stephen 和 Jay 带着大家

1345
00:44:22,456 --> 00:44:23,516
了解到了 Live Message Layout

1346
00:44:23,516 --> 00:44:25,126
我极其期待看到

1347
00:44:25,126 --> 00:44:25,786
大家的相关开发成果

1348
00:44:26,566 --> 00:44:28,446
最后是几条

1349
00:44:28,486 --> 00:44:32,126
最佳操作技巧

1350
00:44:32,256 --> 00:44:33,326
如果大家想了解更多信息

1351
00:44:33,706 --> 00:44:36,106
可以访问我们会议的网页

1352
00:44:36,106 --> 00:44:36,896
就是这个网址

1353
00:44:38,236 --> 00:44:39,526
除此之外  我们还有

1354
00:44:39,526 --> 00:44:40,556
几场相关会议

1355
00:44:40,556 --> 00:44:41,316
将在明天进行

1356
00:44:41,596 --> 00:44:44,426
上午 10:00 的一场 就在这个会议厅

1357
00:44:44,426 --> 00:44:46,136
主题是“介绍 Business Chat”

1358
00:44:46,136 --> 00:44:47,116
我觉得大家

1359
00:44:47,286 --> 00:44:48,666
可能都对它极度地

1360
00:44:49,236 --> 00:44:49,626
感兴趣

1361
00:44:49,626 --> 00:44:50,936
另外 在今年的会议中

1362
00:44:50,936 --> 00:44:52,076
我们非常荣幸地请来了

1363
00:44:52,076 --> 00:44:53,756
我们 Message 应用的 HI 设计者

1364
00:44:53,756 --> 00:44:56,016
明天上午 11:00 在行政宴会厅

1365
00:44:56,016 --> 00:44:57,876
他将简短地演示一下

1366
00:44:57,876 --> 00:44:58,256
设计过程

1367
00:44:58,996 --> 00:45:00,076
谢谢大家的参与

1368
00:44:58,996 --> 00:45:00,076
谢谢大家的参与

1369
00:45:00,346 --> 00:45:01,626
祝大家聚会愉快

1370
00:45:02,156 --> 00:45:02,436
谢谢
