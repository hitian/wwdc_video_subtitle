1
00:00:20,316 --> 00:00:21,676
&gt;&gt; 早上好

2
00:00:22,516 --> 00:00:25,166
[掌声]

3
00:00:25,666 --> 00:00:27,306
欢迎来到 tvOS 的新性能板块

4
00:00:27,886 --> 00:00:29,356
我是 Hans  tvOS 团队的

5
00:00:29,356 --> 00:00:30,156
一名工程师

6
00:00:30,796 --> 00:00:32,316
今天早上  我将和我的同事

7
00:00:32,316 --> 00:00:33,766
Marshall 一起

8
00:00:33,766 --> 00:00:34,436
和大家介绍一下

9
00:00:34,436 --> 00:00:35,986
tvOS 的优化和

10
00:00:35,986 --> 00:00:36,316
新的 API

11
00:00:36,316 --> 00:00:38,476
我们的演讲将分为两部分

12
00:00:38,476 --> 00:00:41,786
首先我们将介绍 SDK 整体的

13
00:00:41,786 --> 00:00:42,986
更新

14
00:00:42,986 --> 00:00:44,666
我们先会介绍系统层面的

15
00:00:44,666 --> 00:00:46,306
改善

16
00:00:46,306 --> 00:00:47,746
接着我们将讲述一些

17
00:00:47,746 --> 00:00:48,176
个别的小工具

18
00:00:48,896 --> 00:00:50,656
之后 Marshall 会和你们介绍

19
00:00:50,656 --> 00:00:52,256
一些关于视图控制器方面的

20
00:00:52,256 --> 00:00:53,486
最新的 API

21
00:00:54,526 --> 00:00:55,386
我们的内容很多

22
00:00:55,386 --> 00:00:56,696
所以现在演讲开始

23
00:00:58,076 --> 00:01:00,256
首先要讲的是 ODR

24
00:00:58,076 --> 00:01:00,256
首先要讲的是 ODR

25
00:01:00,256 --> 00:01:00,876
也就是按需资源

26
00:01:01,076 --> 00:01:03,406
你们中的某些人对这个词可能比较陌生

27
00:01:03,406 --> 00:01:04,666
ODR 使你们的 app 在 App 商店中

28
00:01:04,666 --> 00:01:05,966
保存自己的资源

29
00:01:05,966 --> 00:01:07,166
而不是被包含在

30
00:01:07,166 --> 00:01:07,496
App Bundle 中

31
00:01:08,266 --> 00:01:09,686
之后你的 app 可以在需要的时候

32
00:01:09,686 --> 00:01:10,776
下载这些资源

33
00:01:11,746 --> 00:01:13,506
它们可以使你的 app 下载速度更快

34
00:01:13,506 --> 00:01:16,336
安装快捷

35
00:01:16,336 --> 00:01:17,306
同时为用户

36
00:01:17,306 --> 00:01:18,346
提供高质量的

37
00:01:18,346 --> 00:01:18,866
内容

38
00:01:19,276 --> 00:01:20,876
而这些操作

39
00:01:20,876 --> 00:01:22,356
在任何时候

40
00:01:22,356 --> 00:01:24,676
都不会占用用户设备的

41
00:01:25,996 --> 00:01:26,106
本地存储

42
00:01:26,456 --> 00:01:28,186
去年 App bundle 的

43
00:01:28,186 --> 00:01:30,986
最大容量为

44
00:01:30,986 --> 00:01:31,556
200MB

45
00:01:32,486 --> 00:01:33,766
这会使你的 app 变得很简洁

46
00:01:33,766 --> 00:01:35,396
最终 你的用户

47
00:01:35,396 --> 00:01:36,726
也可以更快速地

48
00:01:36,726 --> 00:01:38,116
使用你的 app

49
00:01:39,456 --> 00:01:40,666
但是自那之后

50
00:01:40,666 --> 00:01:42,776
也有很多人请求我们

51
00:01:42,776 --> 00:01:43,276
提升这个最大值

52
00:01:43,976 --> 00:01:46,396
所以在 tvOS 10.2 中  我们将最大值

53
00:01:46,396 --> 00:01:48,576
提升了 20 多倍至

54
00:01:48,576 --> 00:01:49,146
4G

55
00:01:49,806 --> 00:01:52,256
所以  如果你有一个项目

56
00:01:52,256 --> 00:01:53,446
是根据我们过去的最大值所制作的

57
00:01:53,446 --> 00:01:55,666
而你又想在 App bundle 中

58
00:01:55,666 --> 00:01:56,816
增加一些新的

59
00:01:56,816 --> 00:01:57,986
资源

60
00:01:57,986 --> 00:01:59,516
那我们新的最大值

61
00:01:59,516 --> 00:02:00,526
将为这一切提供可能

62
00:01:59,516 --> 00:02:00,526
将为这一切提供可能

63
00:02:01,656 --> 00:02:03,946
首先 前往 Asset Catalog

64
00:02:05,226 --> 00:02:06,316
选择你想要

65
00:02:06,316 --> 00:02:07,556
移回至 App bundle 中的

66
00:02:07,556 --> 00:02:07,866
资源

67
00:02:08,866 --> 00:02:10,406
在属性面板的底部

68
00:02:10,406 --> 00:02:12,146
删除

69
00:02:12,146 --> 00:02:12,636
标签

70
00:02:13,676 --> 00:02:15,216
现在  这些资源被捆绑了

71
00:02:15,846 --> 00:02:17,266
所以运行时间内

72
00:02:17,266 --> 00:02:18,896
你不需要先发出

73
00:02:18,896 --> 00:02:20,086
捆绑资源需求

74
00:02:20,086 --> 00:02:21,346
就可以直接使用这些资源

75
00:02:22,216 --> 00:02:24,036
当然了  这个最大值的增长

76
00:02:24,036 --> 00:02:25,546
并不会占用

77
00:02:25,996 --> 00:02:27,336
你剩余的

78
00:02:27,336 --> 00:02:29,576
资产包限额

79
00:02:29,926 --> 00:02:30,966
它们将会保持在

80
00:02:30,966 --> 00:02:31,596
20GB

81
00:02:31,756 --> 00:02:33,546
所以  现在你的 App bundle

82
00:02:33,546 --> 00:02:35,456
和内容的总量

83
00:02:35,456 --> 00:02:36,936
将最多可以达到 24GB

84
00:02:36,936 --> 00:02:39,226
而这个容量可以包含很多内容

85
00:02:39,886 --> 00:02:41,276
我们相信这会使

86
00:02:41,586 --> 00:02:43,106
你们 app 的用户体验

87
00:02:43,106 --> 00:02:44,176
比以前更丰富

88
00:02:45,246 --> 00:02:47,396
这就是 tvOS 中的 ODR

89
00:02:48,986 --> 00:02:50,956
接下来  我要说一件振奋人心的事情

90
00:02:50,956 --> 00:02:53,726
那就是 tvOS 11 将

91
00:02:53,726 --> 00:02:54,766
完全支持 RTL

92
00:02:54,766 --> 00:02:55,566
也就是从右至左的语言

93
00:02:57,086 --> 00:02:58,886
所以  如果你的 app 在英语里是这个样子

94
00:02:58,886 --> 00:03:00,966
那么在阿拉伯语中将是这个样子

95
00:02:58,886 --> 00:03:00,966
那么在阿拉伯语中将是这个样子

96
00:03:00,966 --> 00:03:04,036
在希伯来语中则是

97
00:03:04,036 --> 00:03:04,416
这个样子

98
00:03:05,056 --> 00:03:07,016
换句话说  你的文本

99
00:03:07,016 --> 00:03:09,946
将从右至左排列

100
00:03:09,946 --> 00:03:11,726
而你大部分的用户界面

101
00:03:11,726 --> 00:03:12,686
将会自动反向

102
00:03:13,596 --> 00:03:15,626
如果你在 iOS 或者 macOS 中

103
00:03:15,626 --> 00:03:18,016
已经习惯了 RTL 

104
00:03:18,016 --> 00:03:19,516
那么你应该会很高兴

105
00:03:19,516 --> 00:03:21,256
在 tvOS 中也有相同的

106
00:03:21,256 --> 00:03:21,786
功能

107
00:03:22,386 --> 00:03:24,426
不过如果你并不适应这个 我们也有

108
00:03:24,426 --> 00:03:25,196
相应的推荐

109
00:03:26,356 --> 00:03:28,246
首先是使用有基础的

110
00:03:28,246 --> 00:03:29,196
国际化

111
00:03:30,416 --> 00:03:31,956
基础国际化

112
00:03:32,296 --> 00:03:33,636
将文本本地化与

113
00:03:33,636 --> 00:03:35,366
UI 布局相分离

114
00:03:35,366 --> 00:03:36,376
当你致力于 UI 时

115
00:03:36,796 --> 00:03:38,416
本地化专家可以

116
00:03:38,416 --> 00:03:39,906
继续翻译字符串

117
00:03:39,906 --> 00:03:41,676
而不必担心

118
00:03:41,676 --> 00:03:42,116
影响布局

119
00:03:42,116 --> 00:03:45,006
所有通过基础国际化创作的

120
00:03:45,266 --> 00:03:47,256
新项目都会在默认情况下

121
00:03:47,256 --> 00:03:48,256
打开

122
00:03:48,676 --> 00:03:49,736
所以如果你正在开始一个新项目

123
00:03:50,146 --> 00:03:51,086
你已经可以使用这个功能了

124
00:03:51,406 --> 00:03:53,506
不过如果你已经有一个

125
00:03:53,506 --> 00:03:54,606
还没有采用这个功能的项目

126
00:03:54,606 --> 00:03:56,246
你可以前往 Project Info 

127
00:03:56,246 --> 00:03:57,916
查看

128
00:03:57,916 --> 00:03:59,286
Use Base Internationalization 的复选框

129
00:03:59,286 --> 00:04:02,086
来使用该功能

130
00:03:59,286 --> 00:04:02,086
来使用该功能

131
00:04:03,016 --> 00:04:04,926
接下来  就是使用自动布局

132
00:04:05,536 --> 00:04:07,136
尤其是在创作约束时的

133
00:04:07,136 --> 00:04:09,616
前段或后端属性

134
00:04:09,616 --> 00:04:11,046
而不是

135
00:04:11,046 --> 00:04:11,526
左或右

136
00:04:11,866 --> 00:04:13,926
当系统布局 UI 时

137
00:04:13,926 --> 00:04:16,046
它可以根据

138
00:04:16,046 --> 00:04:17,505
目前的语言方向

139
00:04:17,505 --> 00:04:18,866
来推测

140
00:04:18,866 --> 00:04:19,676
是向左还向右

141
00:04:20,206 --> 00:04:24,166
最终在开发中

142
00:04:24,166 --> 00:04:25,406
不断测试布局

143
00:04:26,296 --> 00:04:27,346
为了实现这个功能

144
00:04:27,696 --> 00:04:28,786
在 Scheme Settings 中

145
00:04:28,786 --> 00:04:29,986
有一个选项

146
00:04:29,986 --> 00:04:31,416
你可以暂时设置

147
00:04:31,416 --> 00:04:31,886
运用的语言

148
00:04:33,236 --> 00:04:34,326
如果你将其设置为阿拉伯语

149
00:04:35,226 --> 00:04:37,666
希伯来语  甚至是从右至左的

150
00:04:37,666 --> 00:04:39,036
虚构的语言

151
00:04:39,036 --> 00:04:40,216
它都可以在不改变源语言的情况下

152
00:04:40,216 --> 00:04:41,376
改变方向

153
00:04:42,766 --> 00:04:44,666
RTL 支持对于 tvOS 来说

154
00:04:44,666 --> 00:04:46,636
是今年新的技术

155
00:04:46,636 --> 00:04:48,826
但是在 iOS 和 macOS 中

156
00:04:48,826 --> 00:04:49,546
却已经运用了好几年

157
00:04:50,376 --> 00:04:51,616
前几年的大会

158
00:04:51,616 --> 00:04:52,866
对于 tvOS 对其的运用

159
00:04:52,866 --> 00:04:54,466
提供了很好的指导作用

160
00:04:54,466 --> 00:04:54,776
和实践经验

161
00:04:55,336 --> 00:04:56,416
所以  我们强烈推荐你们来

162
00:04:56,416 --> 00:04:56,966
试一试

163
00:04:57,416 --> 00:05:00,536
当然了  RTL 支持是

164
00:04:57,416 --> 00:05:00,536
当然了  RTL 支持是

165
00:05:00,536 --> 00:05:01,766
建立在 TVML 中的

166
00:05:01,766 --> 00:05:03,036
如果你在 app 中

167
00:05:03,036 --> 00:05:04,386
使用 TVML 样板

168
00:05:04,386 --> 00:05:05,516
你将免费获得所有的

169
00:05:05,516 --> 00:05:05,766
性能

170
00:05:06,316 --> 00:05:11,376
这就是 tvOS 中的 RTL 支持

171
00:05:11,466 --> 00:05:13,106
接下来  我们来讲讲 Safe Area

172
00:05:14,636 --> 00:05:17,076
很多电视在一些形状或形式中

173
00:05:17,076 --> 00:05:18,566
会使用 Over scan

174
00:05:18,566 --> 00:05:20,256
在这种情况下

175
00:05:20,256 --> 00:05:21,316
用户不能看到所有的

176
00:05:21,316 --> 00:05:21,726
像素

177
00:05:22,926 --> 00:05:24,316
在过去

178
00:05:24,316 --> 00:05:25,606
前面会建议你插入

179
00:05:25,606 --> 00:05:28,926
视图内容

180
00:05:29,046 --> 00:05:30,166
来进行手动的补偿

181
00:05:31,276 --> 00:05:33,386
而协助你完成这个的 API

182
00:05:33,786 --> 00:05:34,436
则是 UI scroll View

183
00:05:34,536 --> 00:05:36,176
Over scan Compensation Insets

184
00:05:36,856 --> 00:05:37,866
这些将为你提供

185
00:05:37,866 --> 00:05:39,836
可以插入

186
00:05:39,836 --> 00:05:40,756
你的视图或者

187
00:05:40,756 --> 00:05:42,846
视图控制器配置码的数值

188
00:05:44,496 --> 00:05:46,946
tvOS 11 会引入一个

189
00:05:46,946 --> 00:05:49,786
更稳固的框架

190
00:05:49,786 --> 00:05:51,336
来保证你的内容能够在更少的

191
00:05:51,336 --> 00:05:53,126
工作量的情况下  还在安全以内

192
00:05:54,116 --> 00:05:56,086
比如说

193
00:05:56,086 --> 00:05:57,356
有些性能已经

194
00:05:57,356 --> 00:05:57,516
自动为你更新

195
00:05:58,006 --> 00:06:00,976
你视图的 safe Area Insets

196
00:05:58,006 --> 00:06:00,976
你视图的 safe Area Insets

197
00:06:00,976 --> 00:06:02,936
在视图层级中移动的过程里

198
00:06:02,936 --> 00:06:03,776
自动更新了

199
00:06:04,886 --> 00:06:09,126
而随着 Safe Area Inset 的变化

200
00:06:09,736 --> 00:06:11,316
你视图中的 safe Layout Guide

201
00:06:11,316 --> 00:06:12,116
也自动更新了

202
00:06:13,396 --> 00:06:15,306
但是你还是可以

203
00:06:15,306 --> 00:06:18,236
通过使用 UI View Controller 的

204
00:06:18,236 --> 00:06:18,816
Additional Safe Area Insets

205
00:06:18,816 --> 00:06:20,376
进行自定义操作

206
00:06:21,106 --> 00:06:22,866
在计算 View Controller 的视图时

207
00:06:23,006 --> 00:06:24,816
你在这里列举的数值

208
00:06:24,816 --> 00:06:26,256
也将被

209
00:06:26,256 --> 00:06:27,016
计算在内

210
00:06:28,956 --> 00:06:31,076
现在如果你将自己的 app

211
00:06:31,076 --> 00:06:33,116
链接到 tvOS11 中

212
00:06:33,116 --> 00:06:34,486
你的 app 将受新性能支配

213
00:06:34,576 --> 00:06:36,556
我们建议大家抓住机会

214
00:06:36,556 --> 00:06:39,216
检查自己的 app

215
00:06:39,216 --> 00:06:41,106
并根据这些新的 API

216
00:06:41,106 --> 00:06:42,326
进行布局的调整

217
00:06:42,326 --> 00:06:45,246
昨天有一个会议主题是

218
00:06:45,736 --> 00:06:47,596
为 iOS 11 更新你的 app

219
00:06:47,936 --> 00:06:49,376
那个会议对这个话题

220
00:06:49,376 --> 00:06:49,706
进行了深入的分析

221
00:06:49,706 --> 00:06:52,286
所以我建议各位

222
00:06:53,966 --> 00:06:54,046
可以去看一看

223
00:06:54,286 --> 00:06:56,416
不过如果你已经有一个

224
00:06:56,416 --> 00:06:57,446
可以自动补偿 Overscan 的

225
00:06:57,446 --> 00:06:59,106
视图或者视图控制器

226
00:06:59,106 --> 00:07:01,366
而它们在这方面的运行又很良好

227
00:06:59,106 --> 00:07:01,366
而它们在这方面的运行又很良好

228
00:07:01,366 --> 00:07:02,666
如果你还在

229
00:07:02,666 --> 00:07:05,256
犹豫  你可以

230
00:07:05,256 --> 00:07:06,646
在视图或视图控制器基础中

231
00:07:06,646 --> 00:07:08,256
运用这些新性能

232
00:07:09,556 --> 00:07:13,036
要达到这一功效

233
00:07:13,036 --> 00:07:14,536
只需要在视图中

234
00:07:14,536 --> 00:07:18,356
输入 Insets Layout Margins from Safe Area

235
00:07:18,356 --> 00:07:19,816
在视图控制器中输入

236
00:07:19,816 --> 00:07:20,726
view respects system minimum layout margins

237
00:07:21,326 --> 00:07:24,336
根据我们的经验

238
00:07:24,336 --> 00:07:25,816
一般来说

239
00:07:25,816 --> 00:07:27,846
滚动视图需要

240
00:07:27,846 --> 00:07:28,476
多加注意

241
00:07:29,256 --> 00:07:31,696
对于滚动视图

242
00:07:32,146 --> 00:07:33,306
我们有

243
00:07:33,306 --> 00:07:33,786
Content Inset Adjustment Behavior

244
00:07:34,966 --> 00:07:36,596
通过把这个设置为 “Never”

245
00:07:36,596 --> 00:07:38,096
你可以有效地

246
00:07:38,096 --> 00:07:39,146
将你的滚动视图

247
00:07:39,146 --> 00:07:39,586
取消新性能

248
00:07:40,206 --> 00:07:42,246
这就是 Safe Area

249
00:07:44,296 --> 00:07:47,236
接下来我们来讲讲

250
00:07:47,266 --> 00:07:49,846
如何在后台更新你的 app 数据

251
00:07:49,846 --> 00:07:51,526
去年

252
00:07:51,526 --> 00:07:52,896
我们为 tvOS 采用了

253
00:07:52,896 --> 00:07:55,716
用户通知框架

254
00:07:55,716 --> 00:07:57,026
你可以发送远程或推送通知你的 app

255
00:07:57,026 --> 00:07:58,946
但是有一个值得注意的

256
00:07:58,946 --> 00:07:59,476
方面

257
00:08:00,456 --> 00:08:01,436
如果你的 app 没有运行

258
00:08:01,436 --> 00:08:02,676
而系统又收到了多条通知

259
00:08:02,676 --> 00:08:04,896
那么只有当用户

260
00:08:04,896 --> 00:08:06,606
明确地启动了你的 app 时

261
00:08:06,606 --> 00:08:08,736
系统才会发送

262
00:08:08,736 --> 00:08:09,656
最新的一条通知

263
00:08:10,876 --> 00:08:11,936
我们对这点进行了改善

264
00:08:12,866 --> 00:08:15,776
在 tvOS 11 中

265
00:08:15,776 --> 00:08:17,766
如果系统收到了一个通知

266
00:08:17,766 --> 00:08:19,436
系统将在后台唤醒你的 app

267
00:08:19,436 --> 00:08:21,496
并传送这个通知

268
00:08:22,566 --> 00:08:23,786
这就是进行

269
00:08:23,786 --> 00:08:25,776
无声通知的

270
00:08:25,776 --> 00:08:26,426
一种有效的方法

271
00:08:27,026 --> 00:08:30,046
无声通知指的是

272
00:08:30,046 --> 00:08:32,336
一个能在后台将 app 唤醒

273
00:08:32,336 --> 00:08:33,956
并且可以为用户

274
00:08:33,956 --> 00:08:35,306
透明地做一些任务的

275
00:08:35,306 --> 00:08:35,775
通知

276
00:08:36,246 --> 00:08:37,376
这就是“无声”的

277
00:08:37,376 --> 00:08:37,816
来源

278
00:08:39,265 --> 00:08:40,246
通过使用无声通知

279
00:08:40,246 --> 00:08:42,596
你可以定期

280
00:08:42,596 --> 00:08:43,866
下载新内容

281
00:08:43,866 --> 00:08:46,006
更新 app 数据

282
00:08:46,006 --> 00:08:48,086
或者在 app 进入前台时

283
00:08:48,086 --> 00:08:49,336
设置成

284
00:08:49,336 --> 00:08:50,406
可提醒用户

285
00:08:51,556 --> 00:08:53,266
因此，如果要将你的 app

286
00:08:53,266 --> 00:08:54,636
设置成无声通知

287
00:08:55,046 --> 00:08:57,566
首先要添加

288
00:08:57,566 --> 00:08:58,276
远程通知后台模式

289
00:08:59,576 --> 00:09:01,276
然后将你的 app

290
00:08:59,576 --> 00:09:01,276
然后将你的 app

291
00:09:01,276 --> 00:09:02,866
设置为 delegate 

292
00:09:02,866 --> 00:09:03,506
user notification center delegate

293
00:09:05,616 --> 00:09:07,156
同时 register 为

294
00:09:07,156 --> 00:09:07,856
接受远程通知

295
00:09:10,966 --> 00:09:11,936
中心接收

296
00:09:11,936 --> 00:09:14,216
completion handler 任务 完成工作

297
00:09:14,886 --> 00:09:17,496
这些通知是无声的

298
00:09:17,816 --> 00:09:20,846
第二个在后台更新 app 数据的

299
00:09:20,846 --> 00:09:22,396
方法就是

300
00:09:22,396 --> 00:09:23,776
通过一个叫 Background Fetch 的

301
00:09:23,896 --> 00:09:24,686
算法

302
00:09:26,196 --> 00:09:28,736
比如说

303
00:09:28,736 --> 00:09:30,756
你的 app 需要定期检查

304
00:09:30,756 --> 00:09:33,386
新内容  它就可以

305
00:09:33,386 --> 00:09:34,146
注册 Background Fetch

306
00:09:35,016 --> 00:09:36,756
之后系统如果认为

307
00:09:36,756 --> 00:09:38,316
有个适合你的机会出现了

308
00:09:39,556 --> 00:09:40,726
就会在后台将 app 唤醒

309
00:09:41,846 --> 00:09:43,486
你的 app 就会发起一个

310
00:09:43,486 --> 00:09:44,836
提取操作并完成相应指令

311
00:09:45,296 --> 00:09:48,136
要将你的 app 设置

312
00:09:48,136 --> 00:09:50,716
Background Fetch 首先需要

313
00:09:50,716 --> 00:09:51,816
添加  Background Fetch 后台模式

314
00:09:51,816 --> 00:09:54,406
其次  在 app 授权中

315
00:09:54,406 --> 00:09:55,856
注册

316
00:09:55,856 --> 00:09:56,646
Background Fetch

317
00:09:57,206 --> 00:10:00,426
最后  在应用设置中

318
00:09:57,206 --> 00:10:00,426
最后  在应用设置中

319
00:10:00,426 --> 00:10:01,646
输入 “perform Fetch with Completion

320
00:10:01,646 --> 00:10:03,866
Handler” 的指令  开始执行任务

321
00:10:03,866 --> 00:10:05,096
之后别忘了

322
00:10:05,096 --> 00:10:06,016
在获取结果的时候

323
00:10:06,016 --> 00:10:06,566
输入 Completion Handler

324
00:10:07,816 --> 00:10:09,196
这就是 Background Fetch

325
00:10:10,136 --> 00:10:12,166
正如你所见

326
00:10:12,166 --> 00:10:13,426
tvOS 11 在更新 app 数据方面

327
00:10:13,426 --> 00:10:14,736
提供了两种新的方法

328
00:10:15,856 --> 00:10:17,866
一般来说  你都可以准确地知道

329
00:10:17,866 --> 00:10:19,336
什么时候有适用于你的 app 的新数据

330
00:10:19,596 --> 00:10:21,626
这就是所谓的

331
00:10:21,626 --> 00:10:22,206
无声通知

332
00:10:23,596 --> 00:10:25,136
另一方面

333
00:10:25,136 --> 00:10:26,846
系统也会了解

334
00:10:26,846 --> 00:10:28,166
更新你的 app 的

335
00:10:28,166 --> 00:10:28,686
最佳时机

336
00:10:28,686 --> 00:10:30,896
这是因为它不仅

337
00:10:30,896 --> 00:10:32,086
会观察自身资源的

338
00:10:32,086 --> 00:10:34,136
可用性

339
00:10:34,136 --> 00:10:35,936
还会考虑用户行为

340
00:10:35,936 --> 00:10:38,086
比如用户使用最频繁的

341
00:10:38,086 --> 00:10:39,116
是什么 app

342
00:10:40,446 --> 00:10:41,756
所以  要想好好利用这个功能

343
00:10:42,666 --> 00:10:43,976
注册 Background Fetch

344
00:10:45,396 --> 00:10:46,956
我们希望各位能好好利用

345
00:10:46,956 --> 00:10:48,346
这些新方法

346
00:10:48,346 --> 00:10:50,296
让你们的 app 即便在进入前台之前

347
00:10:50,296 --> 00:10:51,616
也可保持最新状态

348
00:10:52,066 --> 00:10:54,976
这就是后台更新

349
00:10:56,516 --> 00:10:59,376
[ 掌声 ]

350
00:10:59,876 --> 00:11:01,716
接下来  我要介绍“滚动”

351
00:10:59,876 --> 00:11:01,716
接下来  我要介绍“滚动”

352
00:11:02,956 --> 00:11:04,356
如果一个滚动视图

353
00:11:04,356 --> 00:11:05,966
拥有大量内容

354
00:11:05,966 --> 00:11:07,446
那么要想将其全部翻阅完

355
00:11:07,446 --> 00:11:08,986
并找到你想要的东西

356
00:11:08,986 --> 00:11:10,376
其实是非常繁杂的

357
00:11:11,326 --> 00:11:14,016
因此  在 tvOS 10.2 中

358
00:11:14,016 --> 00:11:15,456
我们引用了“加速滚动”功能

359
00:11:15,456 --> 00:11:16,906
该功能可以帮助用户更有效率地滚动屏幕

360
00:11:17,536 --> 00:11:21,796
要想进入加速滚动模式

361
00:11:21,796 --> 00:11:24,196
只需要在触摸板上

362
00:11:24,196 --> 00:11:25,546
进行相同方向的

363
00:11:25,546 --> 00:11:27,846
几次大幅滑动

364
00:11:31,056 --> 00:11:33,496
另外  用户可以

365
00:11:33,496 --> 00:11:34,696
在触摸板的最右端

366
00:11:34,696 --> 00:11:36,366
进行滑动  以此来浏览

367
00:11:36,366 --> 00:11:37,026
整个目录

368
00:11:37,586 --> 00:11:40,746
对于开发者来说有个好消息就是

369
00:11:40,746 --> 00:11:42,126
我们不需要

370
00:11:42,126 --> 00:11:43,386
任何附加的工作

371
00:11:43,386 --> 00:11:44,496
就可以获得这个新性能

372
00:11:44,946 --> 00:11:47,386
实际上  包括表格视图

373
00:11:47,386 --> 00:11:49,376
集合视图在内的

374
00:11:49,376 --> 00:11:51,476
每一个滚动视图里都安装了这个功能

375
00:11:51,936 --> 00:11:55,016
这个功能会一直开着

376
00:11:55,016 --> 00:11:56,346
你无法将其关闭

377
00:11:57,086 --> 00:11:58,116
不过你可以做一些工作

378
00:11:58,116 --> 00:11:59,576
让你的滚动视图

379
00:11:59,576 --> 00:12:01,046
在你的设计内

380
00:11:59,576 --> 00:12:01,046
在你的设计内

381
00:12:01,046 --> 00:12:01,806
运行良好

382
00:12:04,256 --> 00:12:07,066
默认情况下

383
00:12:07,066 --> 00:12:08,686
当你进入加速滚动模式时

384
00:12:08,946 --> 00:12:10,236
就会出现指标栏

385
00:12:10,766 --> 00:12:12,196
但是你可以通过

386
00:12:12,666 --> 00:12:14,296
将 Index Display Mode 改为 Hidden

387
00:12:14,296 --> 00:12:18,136
来隐藏它

388
00:12:18,136 --> 00:12:19,566
另外  默认的

389
00:12:19,566 --> 00:12:21,026
滚动指示器

390
00:12:21,026 --> 00:12:22,496
运行地也很好

391
00:12:22,496 --> 00:12:24,606
因为它自调整视图控制器 不管是明亮

392
00:12:24,746 --> 00:12:26,036
还是深色的用户界面风格

393
00:12:26,036 --> 00:12:29,776
如果你的设计

394
00:12:29,776 --> 00:12:31,186
要求拥有一个明确的风格

395
00:12:31,186 --> 00:12:32,696
你可以将其改为

396
00:12:32,696 --> 00:12:35,626
黑色/白色

397
00:12:36,936 --> 00:12:39,356
另外  你可以

398
00:12:39,356 --> 00:12:40,776
使用两种

399
00:12:40,776 --> 00:12:42,266
数据来定制

400
00:12:42,306 --> 00:12:42,716
自己表格视图的索引标题

401
00:12:43,436 --> 00:12:45,126
首先  要获得索引名称的

402
00:12:45,126 --> 00:12:48,886
阵列  并为规定的索引名称

403
00:12:48,886 --> 00:12:51,436
获得索引

404
00:12:51,566 --> 00:12:53,086
与此相似的  对集合视图来说

405
00:12:54,296 --> 00:12:55,636
你可以获得索引名称的阵列

406
00:12:55,636 --> 00:12:57,846
并在指定的索引名称中

407
00:12:58,046 --> 00:12:58,996
获得索引路径

408
00:12:59,606 --> 00:13:02,096
这就是滚动视图的

409
00:12:59,606 --> 00:13:02,096
这就是滚动视图的

410
00:13:02,096 --> 00:13:02,416
功能更新

411
00:13:02,796 --> 00:13:06,546
接下来  我将介绍一个新的按钮类型

412
00:13:07,026 --> 00:13:08,056
UI Button Type Plain

413
00:13:08,846 --> 00:13:10,236
不过在开始之前

414
00:13:10,236 --> 00:13:11,216
我们先看一看系统按钮

415
00:13:12,516 --> 00:13:14,536
如果按钮是清晰的

416
00:13:14,786 --> 00:13:16,606
UI Button Type System 会提供

417
00:13:16,606 --> 00:13:18,546
交互式的聚焦效果

418
00:13:18,686 --> 00:13:19,956
如果按钮不清晰  背景则模糊

419
00:13:20,646 --> 00:13:22,836
当背景模糊时

420
00:13:22,996 --> 00:13:24,616
它将会提供按钮的可视线索

421
00:13:24,616 --> 00:13:26,516
同时也将增加标题的

422
00:13:26,516 --> 00:13:26,936
可识别性

423
00:13:28,456 --> 00:13:29,896
这是 tvOS 中

424
00:13:29,896 --> 00:13:31,866
使用最广泛的控件之一

425
00:13:31,866 --> 00:13:33,466
也许这也是为什么我们

426
00:13:33,466 --> 00:13:34,576
经常听到很多人提过想要

427
00:13:34,576 --> 00:13:35,576
对其进行自定义修改

428
00:13:35,576 --> 00:13:37,796
比如说

429
00:13:37,796 --> 00:13:38,396
增加背景色

430
00:13:39,466 --> 00:13:41,516
所以在 tvOS 11 中 我们将

431
00:13:41,516 --> 00:13:42,246
制作一个新的按钮类型

432
00:13:42,556 --> 00:13:43,586
UI Button Type Plain

433
00:13:44,166 --> 00:13:47,666
一个简单类型的按钮

434
00:13:47,666 --> 00:13:49,036
拥有系统按钮拥有的

435
00:13:49,036 --> 00:13:51,116
除了背景模糊之外的

436
00:13:51,116 --> 00:13:52,876
所有交互性聚焦效果

437
00:13:52,876 --> 00:13:54,466
这使其可以全定制

438
00:13:55,026 --> 00:13:57,866
使用简单类型的按钮

439
00:13:57,866 --> 00:13:58,666
很容易

440
00:13:59,196 --> 00:14:02,986
首先  用 UI Button Type Plain

441
00:13:59,196 --> 00:14:02,986
首先  用 UI Button Type Plain

442
00:14:02,986 --> 00:14:05,266
创造按钮

443
00:14:05,266 --> 00:14:06,486
接着对其进行定制

444
00:14:07,296 --> 00:14:09,466
这就是简单类型的

445
00:14:10,716 --> 00:14:10,906
按钮

446
00:14:11,316 --> 00:14:11,876
谢谢

447
00:14:12,516 --> 00:14:14,546
[ 掌声 ]

448
00:14:15,046 --> 00:14:16,826
第一部分要讲的最后一个优化

449
00:14:16,826 --> 00:14:18,796
是关于

450
00:14:19,006 --> 00:14:19,826
UI Image View 的

451
00:14:21,656 --> 00:14:24,256
在 tvOS 中

452
00:14:24,256 --> 00:14:25,156
交互性聚焦特效是项重要的

453
00:14:25,156 --> 00:14:25,606
技术

454
00:14:26,246 --> 00:14:28,206
这会让你的用户感受到

455
00:14:28,206 --> 00:14:28,886
他们与屏幕相连

456
00:14:28,886 --> 00:14:30,706
同时也能告诉他们

457
00:14:30,706 --> 00:14:32,126
自己的焦点在哪里

458
00:14:32,676 --> 00:14:34,766
很多时候  我们会使用

459
00:14:34,766 --> 00:14:36,156
漂浮或者分层图像来将效果

460
00:14:36,156 --> 00:14:36,516
最大化

461
00:14:38,216 --> 00:14:39,666
在我们初次引进这个功能时

462
00:14:40,186 --> 00:14:41,696
你们很多人都询问

463
00:14:41,696 --> 00:14:43,726
要如何进一步将其自定义化

464
00:14:43,726 --> 00:14:45,426
通过在运行时增加你们自己的内容

465
00:14:45,426 --> 00:14:46,976
这样它们就可以

466
00:14:46,976 --> 00:14:47,826
采用聚焦特效

467
00:14:49,216 --> 00:14:51,236
在 tvOS 11中

468
00:14:51,236 --> 00:14:52,436
我们引进了一个简单安全的方法

469
00:14:52,436 --> 00:14:53,586
那就是 Image Overlay

470
00:14:55,216 --> 00:14:57,196
Image Overlay 使用了一个名为

471
00:14:57,196 --> 00:14:58,866
Overlay Content View 的新性能

472
00:14:59,686 --> 00:15:00,956
这个性能在概念上与

473
00:14:59,686 --> 00:15:00,956
这个性能在概念上与

474
00:15:00,956 --> 00:15:02,706
图表视图或集合视图中的

475
00:15:02,706 --> 00:15:04,076
内容视图比较相似

476
00:15:04,076 --> 00:15:05,516
在这里你将把你的内容作为

477
00:15:05,516 --> 00:15:06,576
子视图进行添加

478
00:15:07,136 --> 00:15:10,586
在默认条件下  叠加内容视图将把

479
00:15:10,586 --> 00:15:12,116
子视图添加到

480
00:15:12,116 --> 00:15:15,026
image views 的 bounds 中

481
00:15:15,026 --> 00:15:16,446
不过你可以将其推翻 并通过

482
00:15:16,446 --> 00:15:17,966
把 overlay content view 中的

483
00:15:17,966 --> 00:15:19,706
clips to bounds 这一条目设置为 “false”

484
00:15:19,706 --> 00:15:20,796
来将其拖出

485
00:15:22,836 --> 00:15:24,136
另外一个 UI Image View 的优化

486
00:15:24,136 --> 00:15:25,846
就是 Alpha Channel

487
00:15:25,846 --> 00:15:26,186
Support

488
00:15:27,436 --> 00:15:30,936
大家都知道  分层图像

489
00:15:30,936 --> 00:15:32,356
需要拥有不透明的

490
00:15:32,356 --> 00:15:32,896
背景

491
00:15:34,196 --> 00:15:36,266
即便是悬浮的—平面的单层图像

492
00:15:36,266 --> 00:15:37,816
为了拥有悬浮效果

493
00:15:37,816 --> 00:15:39,796
也需要拥有

494
00:15:39,796 --> 00:15:40,976
不透明的背景

495
00:15:41,566 --> 00:15:45,036
在 tvOS 11中  情况就

496
00:15:45,036 --> 00:15:45,506
不一样了

497
00:15:46,336 --> 00:15:48,206
你们现在将拥有

498
00:15:48,206 --> 00:15:50,096
不透明的 alpha-channel

499
00:15:50,096 --> 00:15:51,366
也许你们当中有些人

500
00:15:52,226 --> 00:15:53,586
想要非矩形阴影

501
00:15:54,296 --> 00:15:55,216
口说无凭

502
00:15:55,216 --> 00:15:56,966
我想让我的同事 Paul

503
00:15:56,966 --> 00:15:58,146
通过一个 demo 来向大家

504
00:15:58,146 --> 00:15:58,436
展示

505
00:15:58,776 --> 00:15:59,256
Paul

506
00:16:00,516 --> 00:16:03,836
[掌声]

507
00:16:04,336 --> 00:16:07,756
&gt;&gt; 好的  我会通过一个 demo

508
00:16:09,006 --> 00:16:11,886
来展示一下 tvOS 11中

509
00:16:11,886 --> 00:16:13,656
UI Image View 的新特点

510
00:16:14,356 --> 00:16:15,716
我一直都致力于研究这个简单的

511
00:16:15,716 --> 00:16:16,976
视频播放 app

512
00:16:16,976 --> 00:16:18,196
我很喜欢这些

513
00:16:18,196 --> 00:16:18,696
新功能

514
00:16:19,396 --> 00:16:21,086
我想做的第一件事就是

515
00:16:21,086 --> 00:16:22,496
在海报上增加一个图标

516
00:16:22,496 --> 00:16:23,476
让其变得更加明显

517
00:16:23,476 --> 00:16:24,926
这样当你选择一个海报时

518
00:16:24,926 --> 00:16:25,636
视频就会开始播放

519
00:16:26,216 --> 00:16:26,936
我还想在我已经开始

520
00:16:26,936 --> 00:16:29,106
观看的视频的海报上

521
00:16:29,106 --> 00:16:29,956
增加一个

522
00:16:29,956 --> 00:16:30,296
进度栏

523
00:16:30,296 --> 00:16:31,976
这样  我就可以快速地

524
00:16:32,086 --> 00:16:33,446
知道我看到了哪个位置

525
00:16:33,546 --> 00:16:35,416
所以  为了实现这个 UI

526
00:16:35,416 --> 00:16:37,346
我要为海报的图像视图

527
00:16:37,346 --> 00:16:39,766
增加一些视图

528
00:16:41,036 --> 00:16:43,256
诚如各位所见

529
00:16:43,256 --> 00:16:44,536
UI 出现了  但是

530
00:16:44,536 --> 00:16:45,946
它与后面移动的图像好像

531
00:16:45,946 --> 00:16:46,816
是相互分离的

532
00:16:47,496 --> 00:16:49,506
我希望让 UI

533
00:16:49,506 --> 00:16:52,236
可以和图像一起移动

534
00:16:52,466 --> 00:16:54,106
幸运的是  在 tvOS 11中

535
00:16:54,106 --> 00:16:54,886
这很简单

536
00:16:55,846 --> 00:16:57,456
我可以直接把这些视图加入

537
00:16:57,456 --> 00:16:58,856
image view 中的 overlay content view 里

538
00:16:58,856 --> 00:16:59,806
而不用加入

539
00:16:59,866 --> 00:17:00,756
我的 image view 中

540
00:16:59,866 --> 00:17:00,756
我的 image view 中

541
00:17:01,376 --> 00:17:03,556
我们来看看最终的

542
00:17:04,236 --> 00:17:04,356
效果

543
00:17:06,336 --> 00:17:07,616
这就是我想要的

544
00:17:07,616 --> 00:17:08,306
效果

545
00:17:09,516 --> 00:17:13,925
[ 掌声 ]

546
00:17:14,425 --> 00:17:16,246
UI 可以和图像一起移动

547
00:17:16,246 --> 00:17:17,656
就好比它已经成为分层图像中的

548
00:17:17,656 --> 00:17:18,945
一层了

549
00:17:19,756 --> 00:17:21,286
接下来

550
00:17:21,286 --> 00:17:22,606
我要为这些海报

551
00:17:22,606 --> 00:17:24,396
增加一些小玩意

552
00:17:24,396 --> 00:17:25,796
这样我就可以为用户

553
00:17:25,796 --> 00:17:26,826
标记一些新的或者有趣的

554
00:17:26,826 --> 00:17:27,185
视频

555
00:17:27,996 --> 00:17:29,086
我将为这个 app

556
00:17:29,086 --> 00:17:30,136
增加一个触摸按钮

557
00:17:30,136 --> 00:17:31,306
这样我就能控制这些标记的开关

558
00:17:31,306 --> 00:17:33,576
以此让 UI 根据我的

559
00:17:33,576 --> 00:17:35,346
想法来运行

560
00:17:36,396 --> 00:17:38,066
要制作触摸按钮

561
00:17:38,066 --> 00:17:40,016
我首先要设置一个类型是自定义的

562
00:17:40,146 --> 00:17:41,836
按钮  这样我就不必像

563
00:17:41,836 --> 00:17:42,786
你们一般设置按钮时那样

564
00:17:42,786 --> 00:17:43,886
配备一个系统浏览器

565
00:17:44,726 --> 00:17:45,596
之后我将把按钮的 image view

566
00:17:45,596 --> 00:17:48,176
设置为

567
00:17:48,176 --> 00:17:49,996
“当原型聚焦时  调整图像”

568
00:17:49,996 --> 00:17:50,976
完成这些操作后

569
00:17:50,976 --> 00:17:52,196
当按钮对准时  就会产生

570
00:17:52,196 --> 00:17:53,026
良好的漂浮效果

571
00:17:53,556 --> 00:17:54,556
我将会为按钮

572
00:17:54,556 --> 00:17:55,796
和实际的图标

573
00:17:55,796 --> 00:17:57,976
使用相同的

574
00:17:57,976 --> 00:17:58,476
图像

575
00:17:58,836 --> 00:18:00,916
图标拥有

576
00:17:58,836 --> 00:18:00,916
图标拥有

577
00:18:00,916 --> 00:18:02,016
循环式阿尔法通道

578
00:18:02,726 --> 00:18:05,216
在 tvOS 11 中

579
00:18:05,216 --> 00:18:06,576
阴影的悬浮效果以及

580
00:18:06,576 --> 00:18:07,726
聚光灯会让一切

581
00:18:08,306 --> 00:18:09,046
都按照你预期的想法

582
00:18:09,046 --> 00:18:09,416
运行

583
00:18:09,416 --> 00:18:11,496
当我轻触按钮时

584
00:18:12,086 --> 00:18:13,656
我将为那些海报的

585
00:18:13,656 --> 00:18:14,816
overlay content view 增添

586
00:18:14,816 --> 00:18:15,286
图标

587
00:18:15,696 --> 00:18:16,496
我们来看看效果

588
00:18:17,116 --> 00:18:19,006
我们会发现这里有一个

589
00:18:19,006 --> 00:18:19,736
问题

590
00:18:19,736 --> 00:18:20,696
图标在左上角

591
00:18:20,696 --> 00:18:22,386
但是它却夹在

592
00:18:22,386 --> 00:18:24,156
图像视图中变换的图像

593
00:18:24,286 --> 00:18:24,956
里面

594
00:18:25,646 --> 00:18:26,726
一般来说

595
00:18:26,726 --> 00:18:27,846
这就是大家想要的分层效果

596
00:18:28,276 --> 00:18:29,366
但是这却不是

597
00:18:29,366 --> 00:18:29,656
我想要的

598
00:18:30,306 --> 00:18:31,296
幸运的是  我听了 Hans 的演讲

599
00:18:31,336 --> 00:18:32,636
他让我知道了

600
00:18:32,636 --> 00:18:33,356
如何将其修复

601
00:18:34,356 --> 00:18:35,436
我只需要在 overlay content view 中

602
00:18:35,436 --> 00:18:36,976
将 clips To Bounds 设置成 false

603
00:18:36,976 --> 00:18:37,636
即可

604
00:18:37,636 --> 00:18:40,286
我们再试一次

605
00:18:42,536 --> 00:18:44,146
我把图标打开

606
00:18:44,146 --> 00:18:45,526
这就是我想要的

607
00:18:45,526 --> 00:18:45,826
效果

608
00:18:46,306 --> 00:18:47,356
现在图标的拖拽方式

609
00:18:47,356 --> 00:18:48,046
就是我想要的

610
00:18:48,416 --> 00:18:49,556
它们将与剩下的 UI

611
00:18:49,556 --> 00:18:50,816
和图像

612
00:18:50,816 --> 00:18:50,976
一起移动

613
00:18:51,516 --> 00:18:56,586
[ 掌声 ]

614
00:18:57,086 --> 00:18:58,486
这就是关于 tvOS 11 中

615
00:18:58,486 --> 00:18:59,636
UI Image View 的新功能的

616
00:18:59,636 --> 00:19:01,616
简单介绍

617
00:18:59,636 --> 00:19:01,616
简单介绍

618
00:19:01,786 --> 00:19:03,036
把时间再次交给 Hans

619
00:19:04,031 --> 00:19:06,031
[ 掌声 ]

620
00:19:06,046 --> 00:19:06,496
&gt;&gt;  谢谢 Paul

621
00:19:07,586 --> 00:19:08,736
很棒的展示

622
00:19:09,256 --> 00:19:10,926
这就是 UI Image View 的

623
00:19:10,926 --> 00:19:11,596
优化

624
00:19:13,066 --> 00:19:16,466
我们已经讲了 tvOS 中的

625
00:19:16,536 --> 00:19:17,606
七个优化

626
00:19:17,606 --> 00:19:19,466
但是还有很多 iOS 中的优化

627
00:19:19,466 --> 00:19:21,286
现在也可以应用在

628
00:19:21,286 --> 00:19:22,666
tvOS 中

629
00:19:23,516 --> 00:19:25,546
其中有一个

630
00:19:25,546 --> 00:19:26,966
特别值得我们的关注

631
00:19:27,086 --> 00:19:28,726
为此  我邀请了媒体框架团队的

632
00:19:28,726 --> 00:19:30,046
Dan 来为我们

633
00:19:30,046 --> 00:19:32,096
介绍这个功能

634
00:19:33,516 --> 00:19:36,736
[掌声]

635
00:19:37,236 --> 00:19:38,646
&gt;&gt;  谢谢 Hans

636
00:19:39,696 --> 00:19:43,426
好了  我将花几分钟的时间

637
00:19:43,426 --> 00:19:45,016
来讲一讲 tvOS 11 中

638
00:19:45,106 --> 00:19:50,216
AVKit 的新功能

639
00:19:50,216 --> 00:19:52,696
AVkit 为 tvOS 上所有的 app

640
00:19:52,696 --> 00:19:55,236
提供标准的

641
00:19:55,566 --> 00:19:58,386
交互视频回放

642
00:19:58,916 --> 00:20:00,746
包括删除  跳过

643
00:19:58,916 --> 00:20:00,746
包括删除  跳过

644
00:20:01,486 --> 00:20:04,116
浏览  以及

645
00:20:04,116 --> 00:20:05,006
插页广告  内容建议等

646
00:20:05,206 --> 00:20:06,456
先进的

647
00:20:06,456 --> 00:20:07,166
功能

648
00:20:08,396 --> 00:20:09,556
我们去年讨论了

649
00:20:09,556 --> 00:20:10,916
一些基本的东西  如果

650
00:20:10,916 --> 00:20:12,406
你们想要了解一下

651
00:20:12,406 --> 00:20:15,236
可以观看去年 “关于 tvOS 中的 AVKit” 这个

652
00:20:15,236 --> 00:20:15,396
场次

653
00:20:16,386 --> 00:20:17,616
我们这里

654
00:20:17,966 --> 00:20:21,866
提供标准视频回放

655
00:20:21,906 --> 00:20:23,196
也就是观看清除数据的

656
00:20:23,196 --> 00:20:24,156
AVP layer View Controller

657
00:20:24,796 --> 00:20:29,416
还有一些包括

658
00:20:29,686 --> 00:20:31,056
我们去年介绍的定制内容推荐等

659
00:20:31,056 --> 00:20:32,236
高级功能

660
00:20:32,726 --> 00:20:35,796
现在  让我们来介绍一下 tvOS 11 的

661
00:20:35,976 --> 00:20:36,986
新功能

662
00:20:37,666 --> 00:20:40,826
如果你想播放

663
00:20:40,826 --> 00:20:42,996
如图表  提示或者其他

664
00:20:42,996 --> 00:20:45,326
在你视频之上  但是却在

665
00:20:45,326 --> 00:20:46,436
播放控制器之下的

666
00:20:46,436 --> 00:20:48,876
静态图片  你可以使用

667
00:20:48,876 --> 00:20:50,326
分层视图

668
00:20:50,746 --> 00:20:54,596
在 tvOS 11 中  我们引进了

669
00:20:54,596 --> 00:20:57,376
一个全新的布局指南

670
00:20:57,376 --> 00:21:00,556
Unobscure Content Guide

671
00:20:57,376 --> 00:21:00,556
Unobscure Content Guide

672
00:21:00,556 --> 00:21:01,776
这个指南会告诉你静态内容

673
00:21:01,776 --> 00:21:04,426
在你的屏幕上所占的比重

674
00:21:04,426 --> 00:21:06,986
而不必覆盖播放控制面板

675
00:21:06,986 --> 00:21:08,486
或提示

676
00:21:10,726 --> 00:21:12,856
这就是 Unobscure Content Guide

677
00:21:12,856 --> 00:21:14,326
所在的外置

678
00:21:14,326 --> 00:21:15,996
我们可以看到

679
00:21:15,996 --> 00:21:17,136
下滑展示更多信息的提示

680
00:21:17,136 --> 00:21:18,466
在这个之上

681
00:21:18,466 --> 00:21:20,056
而指南的底部

682
00:21:20,056 --> 00:21:21,886
正对着

683
00:21:21,886 --> 00:21:23,046
传输栏

684
00:21:23,816 --> 00:21:25,846
但是我们也会注意到

685
00:21:25,846 --> 00:21:27,726
清除缩略图

686
00:21:27,726 --> 00:21:29,906
并不包含在

687
00:21:29,906 --> 00:21:30,346
禁区内

688
00:21:31,156 --> 00:21:34,226
如果你的内容在

689
00:21:34,226 --> 00:21:35,266
分层视图中

690
00:21:35,266 --> 00:21:36,906
它将会出现在

691
00:21:36,906 --> 00:21:37,206
清除缩略图下

692
00:21:37,206 --> 00:21:42,726
接下来  让我们介绍一下

693
00:21:42,726 --> 00:21:43,516
传输栏

694
00:21:44,756 --> 00:21:46,536
当传输栏可见时

695
00:21:46,536 --> 00:21:48,316
你们可能想要展示一些内容

696
00:21:48,316 --> 00:21:49,876
或图标

697
00:21:52,616 --> 00:21:54,016
或者当播放控制可见时

698
00:21:54,016 --> 00:21:55,216
你可能希望隐藏

699
00:21:55,216 --> 00:21:56,536
包括频道图标

700
00:21:56,536 --> 00:21:57,836
在内的

701
00:21:57,836 --> 00:21:58,386
一些东西

702
00:21:58,536 --> 00:22:01,556
通过 Transport Bar Animation Coordinator

703
00:21:58,536 --> 00:22:01,556
通过 Transport Bar Animation Coordinator

704
00:22:01,556 --> 00:22:02,776
你可以同时实现

705
00:22:02,776 --> 00:22:03,336
这两个功能

706
00:22:03,556 --> 00:22:05,156
你只需要采用

707
00:22:05,716 --> 00:22:06,596
Delegate 方法

708
00:22:06,626 --> 00:22:07,776
将 Player View Controller 写成

709
00:22:07,776 --> 00:22:09,096
“协调完成

710
00:22:09,096 --> 00:22:10,536
传输栏的可见性”

711
00:22:11,606 --> 00:22:13,286
加入你的动画

712
00:22:13,666 --> 00:22:18,886
在这个例子中

713
00:22:18,886 --> 00:22:20,156
我们可以通过传输栏

714
00:22:20,156 --> 00:22:21,596
来对我们的图标图像视图

715
00:22:21,926 --> 00:22:23,876
进行隐藏或展示

716
00:22:25,776 --> 00:22:27,756
现在  你不必局限

717
00:22:27,756 --> 00:22:28,286
于此

718
00:22:28,286 --> 00:22:29,246
你可以撤销可见性

719
00:22:29,246 --> 00:22:30,516
把展示改为

720
00:22:30,516 --> 00:22:31,246
隐藏

721
00:22:31,716 --> 00:22:33,316
你还可以增加动画

722
00:22:33,316 --> 00:22:35,846
比如让你的视图

723
00:22:35,846 --> 00:22:37,126
从一边滑过来

724
00:22:37,326 --> 00:22:38,996
或者任何其他你想要的动画

725
00:22:40,026 --> 00:22:42,106
接下来  我们将介绍

726
00:22:42,106 --> 00:22:43,616
三个新的委托方法

727
00:22:44,146 --> 00:22:47,296
来更好地

728
00:22:47,296 --> 00:22:48,266
控制撤销

729
00:22:49,136 --> 00:22:51,646
这里输入播放器视图控制器

730
00:22:51,646 --> 00:22:54,976
应该撤销这个指令之后  就会开始

731
00:22:54,976 --> 00:22:57,426
撤销转换

732
00:22:57,496 --> 00:22:59,766
最后终止撤销转换

733
00:23:01,076 --> 00:23:03,376
在很多情况下 Player View

734
00:23:03,376 --> 00:23:04,776
Controller 在展示或撤销时

735
00:23:04,776 --> 00:23:06,346
会自动

736
00:23:06,346 --> 00:23:08,016
进行转换

737
00:23:08,156 --> 00:23:10,746
如果你只是简单的展示或撤销

738
00:23:10,746 --> 00:23:12,786
它将淡入和淡出

739
00:23:13,246 --> 00:23:15,536
如果你把这个视图

740
00:23:15,536 --> 00:23:17,486
作为缩略图放在你自己的视图中

741
00:23:17,486 --> 00:23:19,766
它就会自动缩小

742
00:23:19,766 --> 00:23:21,286
在撤销时

743
00:23:21,286 --> 00:23:22,806
又自动变回来

744
00:23:23,726 --> 00:23:25,666
然而在一些情况下

745
00:23:25,666 --> 00:23:26,886
可能有一些自定义展示

746
00:23:26,886 --> 00:23:29,966
AVKit 不能为其

747
00:23:29,966 --> 00:23:31,186
提供合理的转换

748
00:23:31,186 --> 00:23:32,946
这时候你可能就需要

749
00:23:32,946 --> 00:23:34,056
自己动手了

750
00:23:34,056 --> 00:23:35,576
你操作的方法是

751
00:23:35,576 --> 00:23:37,136
通过运行

752
00:23:37,136 --> 00:23:40,076
Should Dismiss 指令

753
00:23:40,076 --> 00:23:41,886
使你的转换生效

754
00:23:41,886 --> 00:23:45,686
接着返回为 False

755
00:23:45,686 --> 00:23:47,536
来指示 AVKit

756
00:23:47,536 --> 00:23:49,466
不用提供标准的转换

757
00:23:51,196 --> 00:23:53,186
如果 AVKit 已经提供了转换

758
00:23:53,186 --> 00:23:55,146
就会调用

759
00:23:55,146 --> 00:23:57,526
Will Begin Dismissal 和

760
00:23:57,526 --> 00:23:58,686
Did End Dismissal 转换

761
00:23:58,686 --> 00:23:59,166
这两个方法

762
00:23:59,566 --> 00:24:01,266
所以在动画的开端

763
00:23:59,566 --> 00:24:01,266
所以在动画的开端

764
00:24:01,266 --> 00:24:02,366
和结尾

765
00:24:02,366 --> 00:24:03,356
你可以执行

766
00:24:03,356 --> 00:24:04,786
任何你想要的操作

767
00:24:05,406 --> 00:24:07,446
比如说控制

768
00:24:07,446 --> 00:24:08,116
回放速度

769
00:24:09,056 --> 00:24:11,956
当视频回放时

770
00:24:11,956 --> 00:24:13,696
用户可以通过下滑

771
00:24:13,696 --> 00:24:14,466
看到信息视图

772
00:24:15,436 --> 00:24:16,796
标准的信息视图会提供

773
00:24:16,796 --> 00:24:20,016
包括元数据

774
00:24:20,016 --> 00:24:22,166
导航标 字幕控制

775
00:24:22,166 --> 00:24:24,426
以及音频选择等信息

776
00:24:24,426 --> 00:24:26,216
你们现在所看到的

777
00:24:26,216 --> 00:24:26,946
有趣的东西

778
00:24:27,966 --> 00:24:30,296
你们很多人现在可能

779
00:24:30,296 --> 00:24:32,176
想要在这里加入你们自己的操纵模块

780
00:24:32,176 --> 00:24:33,466
所以 我很高兴地告诉大家

781
00:24:33,466 --> 00:24:35,426
我们现在可以

782
00:24:35,426 --> 00:24:36,206
自定义信息视图

783
00:24:36,466 --> 00:24:38,036
在 tvOS 11 中

784
00:24:38,036 --> 00:24:39,256
你可以像这个例子中所呈现的一样

785
00:24:39,256 --> 00:24:39,976
提供一个自定义信息视图

786
00:24:40,516 --> 00:24:44,806
[ 掌声 ]

787
00:24:45,306 --> 00:24:47,206
你们所需要的

788
00:24:47,206 --> 00:24:48,826
只是创造你们自己的 UI View Controller

789
00:24:49,536 --> 00:24:50,606
你需要决定它的

790
00:24:50,606 --> 00:24:50,896
内容

791
00:24:52,366 --> 00:24:53,516
为你的 Player View Controller

792
00:24:53,516 --> 00:24:54,656
设置自定义的 Info View Controller

793
00:24:54,656 --> 00:24:56,946
性能

794
00:24:57,706 --> 00:24:58,786
就这么简单

795
00:24:58,786 --> 00:25:01,306
你们需要将风格

796
00:24:58,786 --> 00:25:01,306
你们需要将风格

797
00:25:01,306 --> 00:25:02,686
与其他的信息视图

798
00:25:02,846 --> 00:25:04,166
统一

799
00:25:04,166 --> 00:25:07,216
这样用户才不会感到违和

800
00:25:07,216 --> 00:25:07,886
或者困惑

801
00:25:07,886 --> 00:25:08,916
对于这一点  我们有几个

802
00:25:08,916 --> 00:25:09,536
建议

803
00:25:10,806 --> 00:25:13,426
首先  使用标准的字体

804
00:25:13,426 --> 00:25:14,096
风格

805
00:25:14,726 --> 00:25:17,246
第二  保持你的视图背景

806
00:25:17,246 --> 00:25:19,306
为透明色

807
00:25:19,306 --> 00:25:20,276
这样效果的视图就能

808
00:25:20,276 --> 00:25:20,616
显示出来

809
00:25:21,846 --> 00:25:23,016
你可以指示

810
00:25:23,016 --> 00:25:24,676
你信息视图的预期高度

811
00:25:24,676 --> 00:25:26,166
而最好的方法就是使用

812
00:25:26,166 --> 00:25:26,676
自动布局

813
00:25:26,676 --> 00:25:27,966
不过如果你喜欢的话

814
00:25:27,966 --> 00:25:29,606
也可以在视图控制器上

815
00:25:29,606 --> 00:25:31,546
使用内容尺寸优先选项

816
00:25:33,506 --> 00:25:34,696
除了这些之外

817
00:25:34,696 --> 00:25:37,196
你的内容也不能

818
00:25:37,436 --> 00:25:39,106
超过屏幕高度的一半

819
00:25:39,106 --> 00:25:41,286
因为你并不需要

820
00:25:41,286 --> 00:25:42,276
使用整个屏幕

821
00:25:43,106 --> 00:25:44,746
你还可以使用任何

822
00:25:44,746 --> 00:25:46,446
你想要的控件

823
00:25:46,446 --> 00:25:47,986
不过我们建议你不要使用

824
00:25:47,986 --> 00:25:49,166
诸如文本框

825
00:25:49,166 --> 00:25:50,466
还有按钮

826
00:25:50,596 --> 00:25:53,056
这些具有违和感的东西

827
00:25:53,056 --> 00:25:54,566
最好使用集合或者图表视图

828
00:25:56,106 --> 00:25:58,016
好了  最后我想来讲一下

829
00:25:58,016 --> 00:25:59,766
直播流媒体

830
00:26:00,456 --> 00:26:04,966
在 tvOS 11 中  我们增加了

831
00:26:04,966 --> 00:26:07,296
四个新的元数据标识符

832
00:26:07,296 --> 00:26:09,626
你可以在你的直播

833
00:26:09,706 --> 00:26:11,306
或事件流中指定

834
00:26:11,306 --> 00:26:12,686
开始和结束的时间

835
00:26:14,896 --> 00:26:19,576
举个例子

836
00:26:19,576 --> 00:26:20,926
有个节目你想要

837
00:26:20,926 --> 00:26:23,166
使用确切的结束日期

838
00:26:23,326 --> 00:26:25,096
和传统的播放流媒体一样

839
00:26:25,096 --> 00:26:26,366
你可能需要把

840
00:26:26,366 --> 00:26:27,876
直播流媒体按照

841
00:26:27,876 --> 00:26:29,886
30分钟或者60分钟的容量

842
00:26:29,886 --> 00:26:31,736
分成好几部分

843
00:26:32,616 --> 00:26:34,166
在那种情况下

844
00:26:34,166 --> 00:26:35,686
你就可以使用明确的开始和结束

845
00:26:35,686 --> 00:26:37,886
时间来指明

846
00:26:37,886 --> 00:26:39,146
你现在正在收看的节目

847
00:26:39,146 --> 00:26:39,606
属于哪个部分

848
00:26:39,606 --> 00:26:43,526
那么近似结束时间

849
00:26:43,526 --> 00:26:43,806
又是怎么样的呢

850
00:26:43,896 --> 00:26:45,586
最简单的例子就是

851
00:26:45,586 --> 00:26:46,876
比如说有一个

852
00:26:46,876 --> 00:26:49,906
体育比赛

853
00:26:49,906 --> 00:26:51,276
你知道它可能会进行三个小时

854
00:26:51,276 --> 00:26:52,636
但是你实在不知道

855
00:26:52,636 --> 00:26:54,526
它实际会

856
00:26:54,526 --> 00:26:56,346
进行多久

857
00:26:56,346 --> 00:26:57,096
它可能结束地早

858
00:26:57,096 --> 00:26:57,816
可能结束地晚

859
00:26:57,816 --> 00:26:59,916
在这种情况下  你就可以使用

860
00:26:59,916 --> 00:27:00,896
近似结束时间

861
00:26:59,916 --> 00:27:00,896
近似结束时间

862
00:27:00,896 --> 00:27:03,416
在这些情况中

863
00:27:03,416 --> 00:27:05,336
时标的变化都会显示

864
00:27:05,336 --> 00:27:05,906
这些时间

865
00:27:06,216 --> 00:27:08,076
它要么显示更多时间

866
00:27:08,076 --> 00:27:08,936
要么显示更少时间

867
00:27:10,146 --> 00:27:12,276
当你提供具体数值时

868
00:27:12,346 --> 00:27:13,286
在传输栏上会展示

869
00:27:13,286 --> 00:27:14,936
一个时钟的时间

870
00:27:15,206 --> 00:27:16,876
而近似数值则不会显示

871
00:27:16,876 --> 00:27:17,846
所以这样就

872
00:27:17,846 --> 00:27:19,416
不会误导用户

873
00:27:19,416 --> 00:27:20,976
节目会正好在结束时间

874
00:27:20,976 --> 00:27:22,926
结束

875
00:27:23,766 --> 00:27:25,006
这也会帮助用户

876
00:27:25,006 --> 00:27:26,256
了解他们观看节目的

877
00:27:26,256 --> 00:27:26,626
进度

878
00:27:26,626 --> 00:27:27,846
他们错过了多少

879
00:27:27,846 --> 00:27:31,096
节目还会持续

880
00:27:31,876 --> 00:27:33,736
多长时间

881
00:27:34,406 --> 00:27:38,576
形象一点来说

882
00:27:38,576 --> 00:27:41,426
在你有直播流的

883
00:27:41,426 --> 00:27:42,726
情况下

884
00:27:42,726 --> 00:27:44,656
你没有指定开始和结束时间

885
00:27:44,656 --> 00:27:45,726
那么一切都是

886
00:27:45,726 --> 00:27:47,286
默认或遗留状态

887
00:27:47,426 --> 00:27:50,676
这与我们在

888
00:27:50,676 --> 00:27:52,036
tvOS 10 中有点不太一样

889
00:27:52,036 --> 00:27:53,356
因为在过去

890
00:27:53,356 --> 00:27:55,286
我们会显示开始和结束

891
00:27:55,386 --> 00:27:56,096
时间

892
00:27:56,706 --> 00:27:57,696
我们不再这样做了

893
00:27:57,696 --> 00:27:58,686
因为它们都是近似值

894
00:27:59,646 --> 00:28:00,866
但是你可以有一个 30 分钟的

895
00:27:59,646 --> 00:28:00,866
但是你可以有一个 30 分钟的

896
00:28:00,866 --> 00:28:01,326
窗口

897
00:28:01,516 --> 00:28:03,396
在这个例子中

898
00:28:03,396 --> 00:28:05,896
它会从 11 点播放到 11:30

899
00:28:05,896 --> 00:28:08,246
所以 11:28 这个标记接近结束时间

900
00:28:09,536 --> 00:28:11,316
如果你的节目是从 11 点

901
00:28:11,316 --> 00:28:12,646
播放到 11 点半 

902
00:28:12,646 --> 00:28:14,066
那么一切正常  但是如果不是呢

903
00:28:14,066 --> 00:28:14,986
如果你正在

904
00:28:14,986 --> 00:28:16,656
观看一个三小时的

905
00:28:16,656 --> 00:28:17,326
棒球赛或者其他好看的节目呢

906
00:28:18,086 --> 00:28:20,346
好了  现在有一个

907
00:28:20,346 --> 00:28:22,236
拥有确切开始和结束时间的例子

908
00:28:22,236 --> 00:28:23,706
在这个例子中  节目从 10 点播放到 13 点

909
00:28:23,706 --> 00:28:25,926
你可以看到 11:28 大致在

910
00:28:25,926 --> 00:28:28,376
中间位置

911
00:28:28,376 --> 00:28:29,526
而比例也相应进行了调整

912
00:28:30,086 --> 00:28:31,556
当然了  我们可以

913
00:28:31,556 --> 00:28:33,426
设置一个近似的结束日期

914
00:28:33,426 --> 00:28:35,106
这样结束的时间就会

915
00:28:35,106 --> 00:28:35,546
消失不见

916
00:28:36,016 --> 00:28:40,466
不过它的比例还是一样的

917
00:28:40,656 --> 00:28:42,106
现在我们来简单看看

918
00:28:42,106 --> 00:28:43,046
它的代码

919
00:28:43,146 --> 00:28:44,376
如果你看了去年的会议

920
00:28:44,376 --> 00:28:47,706
那么这个新的元数据项目

921
00:28:47,706 --> 00:28:48,606
助手功能可能对你来说

922
00:28:48,606 --> 00:28:49,096
比较熟悉

923
00:28:50,106 --> 00:28:50,896
我们要做的就是

924
00:28:50,896 --> 00:28:52,686
创造我们的开始时间

925
00:28:53,416 --> 00:28:54,816
我们将为之创造一个

926
00:28:54,816 --> 00:28:56,466
元数据项目

927
00:28:57,036 --> 00:28:58,596
对于结束时间也需要

928
00:28:58,596 --> 00:28:59,636
重复此操作

929
00:29:00,476 --> 00:29:02,936
最终  我们将为

930
00:29:02,936 --> 00:29:04,826
我们的播放器项目

931
00:29:04,826 --> 00:29:06,696
增加两个元数据项目

932
00:29:06,696 --> 00:29:07,626
以此获得外部元数据性能

933
00:29:08,226 --> 00:29:12,276
好了  现在我们来看一个

934
00:29:12,596 --> 00:29:13,296
简单的展示

935
00:29:13,986 --> 00:29:15,366
我现在只能展示少数几个

936
00:29:15,366 --> 00:29:15,646
东西

937
00:29:16,816 --> 00:29:21,746
首先  这是我们的

938
00:29:21,746 --> 00:29:22,446
Unobscured Content Guide

939
00:29:24,326 --> 00:29:28,146
如果我们让它淡出

940
00:29:28,146 --> 00:29:29,586
它会这样消失

941
00:29:29,586 --> 00:29:30,526
因为我正在使用传输栏

942
00:29:30,526 --> 00:29:30,976
动画协调器

943
00:29:31,996 --> 00:29:32,976
所以  它消失得非常快

944
00:29:33,836 --> 00:29:36,976
我感觉我应该向自己

945
00:29:36,976 --> 00:29:37,566
挥挥手

946
00:29:40,256 --> 00:29:42,446
这些就是自定义的信息

947
00:29:42,446 --> 00:29:42,736
视图

948
00:29:43,436 --> 00:29:47,756
这些是我们之前看过的

949
00:29:47,756 --> 00:29:49,716
我们可以来回转换

950
00:29:49,776 --> 00:29:51,576
选中“确切时间”

951
00:29:52,366 --> 00:29:52,946
好了

952
00:29:57,516 --> 00:29:59,846
[ 掌声 ]

953
00:30:00,346 --> 00:30:01,286
好消息是这个会议

954
00:30:01,286 --> 00:30:02,516
并不会持续

955
00:30:02,516 --> 00:30:03,136
三个小时

956
00:30:03,766 --> 00:30:07,146
我这样设置是因为

957
00:30:07,146 --> 00:30:09,536
如果我设置了真实的结束时间

958
00:30:09,536 --> 00:30:10,566
现在的时间和结束时间会太接近

959
00:30:10,566 --> 00:30:12,636
这样的话

960
00:30:12,636 --> 00:30:13,606
事件时间将被隐藏

961
00:30:13,606 --> 00:30:14,756
因为它们会相互

962
00:30:14,756 --> 00:30:15,186
重叠

963
00:30:15,186 --> 00:30:17,636
再来看一下我们的

964
00:30:17,636 --> 00:30:17,846
代码

965
00:30:17,846 --> 00:30:19,256
人们在家里

966
00:30:19,256 --> 00:30:20,056
看到你刚刚突然的出现

967
00:30:20,056 --> 00:30:21,226
都会感到困惑

968
00:30:21,226 --> 00:30:22,916
因为音轨

969
00:30:22,916 --> 00:30:26,026
似乎有点脱离视频

970
00:30:26,176 --> 00:30:28,846
好了  这就是我们的展示

971
00:30:29,236 --> 00:30:31,236
[ 掌声 ]

972
00:30:31,456 --> 00:30:36,476
回到我们的幻灯片

973
00:30:36,896 --> 00:30:37,696
我们介绍了

974
00:30:37,696 --> 00:30:38,586
AVKit 中的

975
00:30:38,586 --> 00:30:39,936
几个新性能

976
00:30:39,936 --> 00:30:40,816
但是还有很多

977
00:30:40,816 --> 00:30:43,426
我没有讲到  不过我讲的

978
00:30:43,426 --> 00:30:44,396
都是其中最重要的

979
00:30:45,186 --> 00:30:47,236
想要了解更多在 tvOS 中

980
00:30:47,236 --> 00:30:49,546
使用 AVKit 的信息  可以观看

981
00:30:49,546 --> 00:30:50,056
去年的会议

982
00:30:50,726 --> 00:30:52,536
同时还可以在这场会议结束后的 11 点

983
00:30:52,536 --> 00:30:54,436
到1点前

984
00:30:54,436 --> 00:30:57,206
在 tech lab F 中

985
00:30:57,206 --> 00:30:57,856
加入 AVKit lab

986
00:30:58,576 --> 00:30:59,726
并告诉我们你的问题

987
00:31:00,586 --> 00:31:02,046
现在  我想有请

988
00:31:02,046 --> 00:31:03,596
Marshall 上台

989
00:31:03,596 --> 00:31:04,336
来介绍 View Controller 的

990
00:31:04,336 --> 00:31:04,946
优化

991
00:31:06,516 --> 00:31:10,126
[ 掌声 ]

992
00:31:10,626 --> 00:31:12,736
&gt;&gt;  谢谢 Dan

993
00:31:13,166 --> 00:31:14,546
我是 Marshall  今天

994
00:31:14,546 --> 00:31:15,826
我将介绍

995
00:31:15,826 --> 00:31:17,256
tvOS 11中 view controller 的

996
00:31:17,256 --> 00:31:17,566
优化

997
00:31:17,566 --> 00:31:18,366
我们直接开始吧

998
00:31:18,616 --> 00:31:20,696
首先  我们来看一看

999
00:31:20,696 --> 00:31:22,176
模态演示

1000
00:31:22,406 --> 00:31:24,206
如果你曾经使用过 UI Alert Controller

1001
00:31:24,206 --> 00:31:25,696
或者曾将你的 Apple TV 设成睡眠状态

1002
00:31:25,696 --> 00:31:27,566
你可能会对这个转换

1003
00:31:27,566 --> 00:31:28,776
比较熟悉

1004
00:31:28,776 --> 00:31:30,246
我们会逐渐将内容模糊

1005
00:31:30,596 --> 00:31:31,526
并在 View Controller 中

1006
00:31:31,526 --> 00:31:32,006
使用动画

1007
00:31:32,446 --> 00:31:35,026
在 tvOS 11 中

1008
00:31:35,026 --> 00:31:36,056
你可以在自己的应用中

1009
00:31:36,056 --> 00:31:37,816
使用这个名为

1010
00:31:37,816 --> 00:31:39,346
Blur Over Full Screen 的

1011
00:31:39,346 --> 00:31:40,756
模态演示风格

1012
00:31:42,086 --> 00:31:43,356
它将把展示的视图控制器中的

1013
00:31:43,356 --> 00:31:44,626
内容逐渐变模糊

1014
00:31:44,626 --> 00:31:46,796
这个所使用的

1015
00:31:46,796 --> 00:31:48,186
是和 UI Alert Controller 中一样的

1016
00:31:48,186 --> 00:31:49,496
动画和定时器

1017
00:31:50,696 --> 00:31:51,906
设置这个也很简单

1018
00:31:52,696 --> 00:31:54,096
将模块演示风格

1019
00:31:54,096 --> 00:31:55,826
设置为全屏模糊

1020
00:31:55,826 --> 00:31:56,546
将你的视图控制器

1021
00:31:56,546 --> 00:31:57,736
设置的和平常

1022
00:31:57,736 --> 00:31:57,966
一样

1023
00:31:58,546 --> 00:32:02,486
接下来  我们要讨论一些优化

1024
00:31:58,546 --> 00:32:02,486
接下来  我们要讨论一些优化

1025
00:32:02,486 --> 00:32:03,986
那就是 UI Split

1026
00:32:03,986 --> 00:32:04,636
View Controller

1027
00:32:05,146 --> 00:32:06,636
如果你曾经在应用中

1028
00:32:06,636 --> 00:32:08,076
使用过分屏视图控制器

1029
00:32:08,076 --> 00:32:11,706
那你应该知道

1030
00:32:11,706 --> 00:32:12,986
主控制器在左边

1031
00:32:12,986 --> 00:32:13,956
详细控制器

1032
00:32:13,956 --> 00:32:14,756
则在右边

1033
00:32:15,696 --> 00:32:17,176
在 tvOS 11 中

1034
00:32:17,176 --> 00:32:18,256
我们有一个新的性能

1035
00:32:18,256 --> 00:32:19,126
可以让你改变

1036
00:32:19,126 --> 00:32:19,546
这个布局

1037
00:32:19,886 --> 00:32:22,806
为了支撑这个功能

1038
00:32:22,806 --> 00:32:24,666
我们有一个拥有

1039
00:32:24,666 --> 00:32:26,076
Leading 和 trailing 两个数值的

1040
00:32:26,076 --> 00:32:27,886
UI Split View Controller 

1041
00:32:27,886 --> 00:32:28,396
Primary Edge 的新枚举

1042
00:32:29,216 --> 00:32:30,856
还有一个你可以设置 primary edge 的

1043
00:32:30,856 --> 00:32:32,186
性能

1044
00:32:32,956 --> 00:32:34,136
这些名词现在很重要

1045
00:32:34,176 --> 00:32:35,516
因为我们刚刚也听到了

1046
00:32:35,516 --> 00:32:37,346
tvOS 现在支持 RTL 语言了

1047
00:32:37,826 --> 00:32:38,966
所以  在这种情况下

1048
00:32:38,966 --> 00:32:40,336
如果你使用了从左至右的语言

1049
00:32:40,336 --> 00:32:41,146
并且使用 leading

1050
00:32:41,146 --> 00:32:42,336
那么主控制器就会在左边

1051
00:32:42,606 --> 00:32:44,106
而如果使用 trailing

1052
00:32:44,106 --> 00:32:44,926
主控制器则会在右边

1053
00:32:45,686 --> 00:32:47,706
不过在 RTL 语言中

1054
00:32:47,706 --> 00:32:48,996
这一切就反过来了

1055
00:32:48,996 --> 00:32:49,906
主控制器会在右边

1056
00:32:49,906 --> 00:32:57,576
对 trailing 来说

1057
00:32:57,716 --> 00:32:57,836
则是左边

1058
00:32:57,836 --> 00:32:59,326
去年 我们宣布将使用

1059
00:32:59,326 --> 00:33:01,736
一个功能让

1060
00:32:59,326 --> 00:33:01,736
一个功能让

1061
00:33:01,736 --> 00:33:02,676
用户可以把系统外观

1062
00:33:02,676 --> 00:33:03,616
调暗

1063
00:33:03,756 --> 00:33:05,676
这样如果用户的 Apple TV

1064
00:33:05,676 --> 00:33:07,526
是在影音室内

1065
00:33:07,526 --> 00:33:09,186
或者用户想在晚上使用它

1066
00:33:09,186 --> 00:33:09,786
那他们将有更好的体验

1067
00:33:10,336 --> 00:33:11,516
今年开始

1068
00:33:11,516 --> 00:33:13,436
我们有另一个名为自动化的

1069
00:33:13,436 --> 00:33:13,936
模式

1070
00:33:14,206 --> 00:33:15,866
它的功能就是

1071
00:33:15,866 --> 00:33:17,346
根据它所处的位置

1072
00:33:17,346 --> 00:33:20,356
将用户的系统外观

1073
00:33:20,356 --> 00:33:22,016
在晚上时自动调暗

1074
00:33:22,016 --> 00:33:23,366
在白天时则自动

1075
00:33:23,366 --> 00:33:23,906
调亮

1076
00:33:24,746 --> 00:33:25,776
为了提供最优质的用户体验

1077
00:33:25,776 --> 00:33:27,226
保证 app 能调节明暗

1078
00:33:27,226 --> 00:33:28,176
比以往来说要更

1079
00:33:28,176 --> 00:33:29,686
重要

1080
00:33:30,516 --> 00:33:31,546
为了支撑该功能

1081
00:33:31,546 --> 00:33:32,746
我们增加了一些新的 API

1082
00:33:33,166 --> 00:33:34,296
首先  我们来看一下

1083
00:33:34,296 --> 00:33:34,776
Top Shelf

1084
00:33:36,836 --> 00:33:38,846
如果你曾经提供过 Top shelf extension

1085
00:33:38,846 --> 00:33:39,796
那你应该知道

1086
00:33:39,796 --> 00:33:42,036
你可以通过提供图片网址

1087
00:33:42,226 --> 00:33:43,726
把图片放在 top shelf 上

1088
00:33:44,666 --> 00:33:46,546
我们现在有新的 API

1089
00:33:46,656 --> 00:33:48,436
可以提供一个暗图

1090
00:33:48,436 --> 00:33:49,436
系统会根据系统外观

1091
00:33:49,436 --> 00:33:50,716
自动选择

1092
00:33:50,716 --> 00:33:51,696
合适的素材

1093
00:33:51,696 --> 00:33:52,536
来展示

1094
00:33:53,816 --> 00:33:55,116
如果你曾经浏览过这些

1095
00:33:55,116 --> 00:33:56,506
你会有一个 TV 内容条目

1096
00:33:56,506 --> 00:33:58,316
然后是设置图像

1097
00:33:58,316 --> 00:33:59,016
URL

1098
00:33:59,766 --> 00:34:02,356
在 tvOS 11 中 你可以

1099
00:33:59,766 --> 00:34:02,356
在 tvOS 11 中 你可以

1100
00:34:02,356 --> 00:34:05,056
将 Set Image URL 设为 for traits

1101
00:34:05,056 --> 00:34:06,436
并分别提供一个 light trait 和

1102
00:34:06,436 --> 00:34:07,536
dark trait 来创作

1103
00:34:07,536 --> 00:34:08,056
图片素材

1104
00:34:08,616 --> 00:34:09,746
如果你想使用相同的图片

1105
00:34:09,746 --> 00:34:11,536
你可以在这些方法调用中

1106
00:34:11,536 --> 00:34:12,826
提供相同的

1107
00:34:12,826 --> 00:34:13,926
图像地址

1108
00:34:16,516 --> 00:34:17,746
最后 我们将介绍

1109
00:34:17,746 --> 00:34:18,985
如何使你的 app 外观

1110
00:34:18,985 --> 00:34:20,096
融合到

1111
00:34:20,096 --> 00:34:20,585
内容中

1112
00:34:21,436 --> 00:34:22,866
我们的 app 就做到了这一点

1113
00:34:22,866 --> 00:34:25,235
比如说在我们的电影中 如果

1114
00:34:25,235 --> 00:34:26,956
有一个电影插图是亮色的

1115
00:34:26,956 --> 00:34:28,716
我们就会展示合适的控件

1116
00:34:28,716 --> 00:34:30,126
如果插图是暗色的

1117
00:34:30,126 --> 00:34:31,926
我们也会展示看上去最合适的控件

1118
00:34:32,706 --> 00:34:33,476
为了让开发者

1119
00:34:33,476 --> 00:34:35,235
更简单地实现这个性能

1120
00:34:35,235 --> 00:34:36,896
我们在 UI View Controller 中

1121
00:34:36,896 --> 00:34:38,056
有一个名为 Preferred

1122
00:34:38,056 --> 00:34:38,956
User Interface Style 的新性能

1123
00:34:39,356 --> 00:34:40,536
如果你们曾经使用

1124
00:34:40,536 --> 00:34:42,176
preferred status bar style

1125
00:34:42,176 --> 00:34:43,456
这个对你们来说可能比较眼熟

1126
00:34:44,096 --> 00:34:45,795
它的作用是

1127
00:34:45,795 --> 00:34:47,166
在视图控制器上

1128
00:34:47,166 --> 00:34:48,466
指定特定的 UI User Interface Style

1129
00:34:49,076 --> 00:34:50,146
它会通过更新

1130
00:34:50,146 --> 00:34:51,686
特征集合和系统墙纸

1131
00:34:51,686 --> 00:34:53,466
来自定义

1132
00:34:53,466 --> 00:34:54,346
外观

1133
00:34:54,996 --> 00:34:56,196
我们来看看最终的

1134
00:34:56,196 --> 00:34:56,616
效果

1135
00:34:57,276 --> 00:34:59,106
我有一个 Tab—R 控制器

1136
00:34:59,106 --> 00:35:00,266
这里第一个视图控制器

1137
00:34:59,106 --> 00:35:00,266
这里第一个视图控制器

1138
00:35:00,266 --> 00:35:01,926
指定的是偏好

1139
00:35:01,926 --> 00:35:03,406
亮色风格

1140
00:35:03,556 --> 00:35:05,266
第二个则指定的

1141
00:35:05,266 --> 00:35:06,216
是偏好暗色风格

1142
00:35:06,586 --> 00:35:07,996
当我们转换标签时

1143
00:35:07,996 --> 00:35:08,876
可以看到

1144
00:35:08,876 --> 00:35:09,906
应用的特征集合

1145
00:35:09,906 --> 00:35:11,636
和系统墙纸

1146
00:35:11,636 --> 00:35:12,166
都自动更新了

1147
00:35:14,076 --> 00:35:15,656
所以  我们有三个新的 API 方法

1148
00:35:15,656 --> 00:35:16,836
可以让各位把其应用在

1149
00:35:16,836 --> 00:35:17,586
自己的 app 中

1150
00:35:17,946 --> 00:35:19,736
首先  在你们的视图控制器中

1151
00:35:19,736 --> 00:35:21,446
改写一个名为

1152
00:35:21,446 --> 00:35:22,426
优先用户界面风格

1153
00:35:22,526 --> 00:35:23,436
的

1154
00:35:23,436 --> 00:35:23,916
只读性能

1155
00:35:24,216 --> 00:35:25,746
在这里  你可以将用户

1156
00:35:25,746 --> 00:35:28,066
界面风格设为浅黑色

1157
00:35:28,206 --> 00:35:29,586
或者未定义

1158
00:35:29,586 --> 00:35:30,766
也就是遵循系统风格

1159
00:35:31,566 --> 00:35:33,056
对于大多数人来说

1160
00:35:33,056 --> 00:35:34,736
这也许就能满足他们的

1161
00:35:34,736 --> 00:35:35,066
需要

1162
00:35:35,526 --> 00:35:36,966
不过如果你使用的是

1163
00:35:36,966 --> 00:35:38,316
自定义视图控制器

1164
00:35:38,316 --> 00:35:39,306
并使用了包含子视图控制器

1165
00:35:39,586 --> 00:35:40,606
这里有两个方法

1166
00:35:40,606 --> 00:35:41,556
你可以使用

1167
00:35:41,616 --> 00:35:43,406
第一个就是用以用户界面风格设置

1168
00:35:43,406 --> 00:35:44,546
的子视图控制器

1169
00:35:44,546 --> 00:35:45,896
你可以将这个决定委托给

1170
00:35:45,896 --> 00:35:46,626
review controller

1171
00:35:47,006 --> 00:35:48,516
在选项栏控制器中

1172
00:35:48,516 --> 00:35:50,456
目前选择的

1173
00:35:50,456 --> 00:35:51,806
选项栏视图控制器

1174
00:35:51,806 --> 00:35:52,566
或者目前选择的视图控制器

1175
00:35:52,566 --> 00:35:54,136
会在这里回归

1176
00:35:55,156 --> 00:35:56,476
然后 当发生变化时

1177
00:35:56,476 --> 00:35:58,126
你需要调用 Set

1178
00:35:58,126 --> 00:35:59,766
需要用户界面外观

1179
00:35:59,766 --> 00:36:00,166
升级

1180
00:35:59,766 --> 00:36:00,166
升级

1181
00:36:00,526 --> 00:36:01,736
这会告知系统

1182
00:36:01,736 --> 00:36:03,026
有变化发生

1183
00:36:03,026 --> 00:36:04,326
我们会重新找到

1184
00:36:04,326 --> 00:36:05,376
你应用的偏好风格

1185
00:36:05,376 --> 00:36:05,976
是什么

1186
00:36:09,296 --> 00:36:11,086
这就是我们今天要讲的

1187
00:36:11,086 --> 00:36:12,336
视图控制器的优化

1188
00:36:12,906 --> 00:36:14,456
我们可以最后来看看

1189
00:36:14,456 --> 00:36:14,876
今天所讲的内容

1190
00:36:15,416 --> 00:36:17,106
首先  我们认识到

1191
00:36:17,106 --> 00:36:18,486
ODR bundle 的最大值

1192
00:36:18,486 --> 00:36:19,896
从 200MB 上升到

1193
00:36:19,896 --> 00:36:21,266
4GB 从而让你在

1194
00:36:21,266 --> 00:36:22,526
安装应用时

1195
00:36:22,526 --> 00:36:23,866
可以包含更多的内容

1196
00:36:24,816 --> 00:36:26,696
我们了解到 tvOS

1197
00:36:26,696 --> 00:36:28,346
现在支持 RTL 语言

1198
00:36:28,346 --> 00:36:29,586
所以请记得使用

1199
00:36:29,586 --> 00:36:31,896
我们为那些语言设计的

1200
00:36:31,896 --> 00:36:32,396
测试你们布局的工具

1201
00:36:32,966 --> 00:36:35,406
我们还了解了一些新方法

1202
00:36:35,406 --> 00:36:36,536
可以在用户使用

1203
00:36:36,536 --> 00:36:37,866
你们的应用时

1204
00:36:37,866 --> 00:36:39,226
在后台运作

1205
00:36:39,226 --> 00:36:39,766
让内容时刻

1206
00:36:39,766 --> 00:36:40,386
保持更新

1207
00:36:41,916 --> 00:36:43,486
我们还讨论了包括

1208
00:36:43,486 --> 00:36:44,576
定制信息视图在内的

1209
00:36:44,576 --> 00:36:45,796
新的 AVKit 优化

1210
00:36:47,336 --> 00:36:49,046
我们同时还看到了

1211
00:36:49,046 --> 00:36:50,566
Image View 上新的 API

1212
00:36:50,566 --> 00:36:52,686
可以让你的内容对用户来说

1213
00:36:52,686 --> 00:36:53,016
更有交互性

1214
00:36:54,896 --> 00:36:56,446
最后  我们还讨论了

1215
00:36:56,446 --> 00:36:58,286
如何使用你偏好的

1216
00:36:58,286 --> 00:36:59,506
用户界面风格

1217
00:36:59,506 --> 00:37:00,986
将你的内容和应用外观

1218
00:36:59,506 --> 00:37:00,986
将你的内容和应用外观

1219
00:37:00,986 --> 00:37:01,676
适用到你的内容中去

1220
00:37:02,236 --> 00:37:04,186
如果你想要了解

1221
00:37:04,186 --> 00:37:05,846
更多资讯

1222
00:37:05,846 --> 00:37:06,546
请登录

1223
00:37:06,546 --> 00:37:08,036
developer.apple.com

1224
00:37:08,996 --> 00:37:10,276
如果你想要了解关于这些话题的

1225
00:37:10,276 --> 00:37:11,246
更详细的内容

1226
00:37:11,246 --> 00:37:12,426
我们还有很多包括

1227
00:37:12,426 --> 00:37:13,796
今年的一些视频的

1228
00:37:13,796 --> 00:37:13,986
相关场次

1229
00:37:14,936 --> 00:37:16,066
感谢你们的聆听

1230
00:37:16,066 --> 00:37:16,716
希望你们能在

1231
00:37:16,716 --> 00:37:16,976
接下来的会议度过愉快的时光

1232
00:37:17,508 --> 00:37:19,508
[ 掌声 ]
