1
00:00:24,516 --> 00:00:28,746
[ 掌声 ]

2
00:00:29,246 --> 00:00:32,226
&gt;&gt; 大家好 欢迎来到  WWDC

3
00:00:32,226 --> 00:00:33,716
我是  Brad Jensen

4
00:00:33,716 --> 00:00:35,026
今天我们要说说

5
00:00:35,026 --> 00:00:36,766
定位技术的新功能

6
00:00:37,286 --> 00:00:39,726
我们今天主要谈论

7
00:00:39,726 --> 00:00:40,586
三个话题

8
00:00:41,356 --> 00:00:42,916
首先我们要说说

9
00:00:42,956 --> 00:00:44,166
我们做的各种各样

10
00:00:44,256 --> 00:00:45,296
API  的改进

11
00:00:46,196 --> 00:00:47,586
然后我们将会说到

12
00:00:47,586 --> 00:00:49,506
今年的大变化

13
00:00:49,506 --> 00:00:51,406
我们如何修改了授权

14
00:00:51,406 --> 00:00:53,596
以及用户报告

15
00:00:53,596 --> 00:00:54,576
在演讲过程中

16
00:00:54,576 --> 00:00:55,946
我们还会根据今年所做的改变

17
00:00:55,946 --> 00:00:57,336
讲一下最佳案例 

18
00:00:57,336 --> 00:00:58,046
的实践

19
00:00:58,496 --> 00:01:00,996
现在我提醒一下

20
00:00:58,496 --> 00:01:00,996
现在我提醒一下

21
00:01:01,276 --> 00:01:02,746
这个演讲主要针对于

22
00:01:02,746 --> 00:01:03,796
已经对  Core Location

23
00:01:03,796 --> 00:01:05,355
很熟悉的开发者

24
00:01:05,355 --> 00:01:07,856
所以如果你刚接触

25
00:01:07,856 --> 00:01:09,196
我们的框架 我们建议你

26
00:01:09,196 --> 00:01:10,376
回头看下我们的

27
00:01:10,376 --> 00:01:11,036
资料

28
00:01:11,916 --> 00:01:13,696
此外 我们去年的会议

29
00:01:13,696 --> 00:01:14,926
有很多针对新人的

30
00:01:14,926 --> 00:01:15,856
实用建议

31
00:01:16,766 --> 00:01:17,946
好我们开始吧

32
00:01:19,686 --> 00:01:21,406
对于 geocoding API 的用户

33
00:01:21,956 --> 00:01:23,176
我们为你们准备了一些令人兴奋的

34
00:01:23,176 --> 00:01:23,456
更新

35
00:01:24,276 --> 00:01:25,446
我们为 Contacts 框架

36
00:01:25,446 --> 00:01:27,376
增加了互通性的

37
00:01:27,376 --> 00:01:27,796
支持

38
00:01:28,816 --> 00:01:31,296
所以现在你可以向 geocode 发送

39
00:01:31,396 --> 00:01:32,486
CNPostalAddress

40
00:01:33,376 --> 00:01:34,756
并且当你得到了

41
00:01:34,846 --> 00:01:37,016
CLPlacemark 结果后 你可以从

42
00:01:37,016 --> 00:01:38,676
那个 placemark 得到一个

43
00:01:38,676 --> 00:01:39,176
CNPostalAddress

44
00:01:40,576 --> 00:01:41,606
现在  这用来

45
00:01:41,606 --> 00:01:43,226
替代对以前的 Address Book 

46
00:01:43,226 --> 00:01:44,466
框架的

47
00:01:44,466 --> 00:01:44,916
支持

48
00:01:45,486 --> 00:01:47,236
更具体讲 你可以 geocode

49
00:01:47,236 --> 00:01:49,356
一个地址簿

50
00:01:49,426 --> 00:01:50,446
并从 placemark 得到

51
00:01:50,446 --> 00:01:50,896
地址簿

52
00:01:51,876 --> 00:01:53,696
在 Contacts 框架

53
00:01:53,696 --> 00:01:54,846
可用的平台上

54
00:01:54,846 --> 00:01:56,266
我们在弃用那些

55
00:01:56,266 --> 00:01:57,676
地址簿 API

56
00:01:58,296 --> 00:02:00,846
但是在 tvOS 上

57
00:01:58,296 --> 00:02:00,846
但是在 tvOS 上

58
00:02:00,846 --> 00:02:02,386
Contacts 框架不可用

59
00:02:02,386 --> 00:02:04,206
所以你可以继续使用

60
00:02:04,206 --> 00:02:06,306
那些地址簿 API

61
00:02:08,196 --> 00:02:09,666
我们还为有

62
00:02:09,696 --> 00:02:11,586
偏好语言区的 geocoding 增加了

63
00:02:11,586 --> 00:02:12,156
支持

64
00:02:13,756 --> 00:02:15,916
这不会影响你得到的结果

65
00:02:15,916 --> 00:02:17,726
只会影响到

66
00:02:17,726 --> 00:02:18,816
他们返回的语言

67
00:02:19,816 --> 00:02:21,036
值得注意的是

68
00:02:21,036 --> 00:02:22,566
Core Location 的 geocoder 

69
00:02:22,566 --> 00:02:24,796
的默认行为一直是

70
00:02:24,866 --> 00:02:26,606
使用用户的偏好语言

71
00:02:26,606 --> 00:02:28,356
来返回结果

72
00:02:29,166 --> 00:02:30,486
如果你指定了偏好语言区

73
00:02:30,486 --> 00:02:32,286
你就重写了

74
00:02:32,286 --> 00:02:34,246
用户选定的

75
00:02:34,246 --> 00:02:34,826
语言偏好

76
00:02:36,126 --> 00:02:37,296
这听起来似乎很糟糕

77
00:02:37,296 --> 00:02:38,226
但实际上很多时候却

78
00:02:38,226 --> 00:02:38,906
很有用

79
00:02:40,036 --> 00:02:41,306
比如你在做一个

80
00:02:41,306 --> 00:02:43,516
旅行指南 你可能想要

81
00:02:43,516 --> 00:02:45,406
在你的 App 中添加文本

82
00:02:45,406 --> 00:02:47,006
并且跟用户在实际生活中

83
00:02:47,006 --> 00:02:48,196
看到的文本相符

84
00:02:48,776 --> 00:02:49,906
在这种情况下你

85
00:02:49,936 --> 00:02:51,436
向 geocoder 提供

86
00:02:51,436 --> 00:02:53,776
一个偏好语言区

87
00:02:53,776 --> 00:02:55,246
产生一个适于顾客

88
00:02:55,246 --> 00:02:56,606
访问区域的结果

89
00:02:57,156 --> 00:03:00,886
我们同样花时间改进了

90
00:02:57,156 --> 00:03:00,886
我们同样花时间改进了

91
00:03:00,926 --> 00:03:02,786
我们的 heading 更新 API

92
00:03:03,396 --> 00:03:04,536
在这之前让我们

93
00:03:04,626 --> 00:03:05,916
确保我们都懂得了

94
00:03:05,916 --> 00:03:06,416
这些术语

95
00:03:07,996 --> 00:03:09,996
Heading 是指你

96
00:03:09,996 --> 00:03:13,496
面朝的方向

97
00:03:13,856 --> 00:03:15,096
而 course 是你实际上行动的

98
00:03:15,096 --> 00:03:15,586
方向

99
00:03:16,406 --> 00:03:17,966
对于船和飞机来说

100
00:03:17,966 --> 00:03:19,576
你可能会看到因为

101
00:03:19,576 --> 00:03:21,646
风和洋流作用 heading 和

102
00:03:21,646 --> 00:03:23,386
course 不一样

103
00:03:25,666 --> 00:03:27,266
另一方面对于汽车来说

104
00:03:27,696 --> 00:03:28,756
你几乎从未看见

105
00:03:28,756 --> 00:03:29,916
heading 和 course 之间

106
00:03:29,916 --> 00:03:30,836
有显著差异

107
00:03:32,366 --> 00:03:33,986
即使有非常猛烈的

108
00:03:33,986 --> 00:03:35,466
风将汽车吹向一边

109
00:03:35,466 --> 00:03:37,086
司机会试图

110
00:03:37,086 --> 00:03:38,126
矫正它

111
00:03:38,536 --> 00:03:39,786
他们不想被风力推出

112
00:03:39,786 --> 00:03:40,836
他们的车道 更坏的情况是

113
00:03:40,836 --> 00:03:41,826
脱离道路

114
00:03:42,736 --> 00:03:44,276
这是一个非常便捷的

115
00:03:44,276 --> 00:03:46,646
观察结果因为当我们在

116
00:03:46,646 --> 00:03:49,086
计算 GPS 大概位置时

117
00:03:49,086 --> 00:03:50,536
我们很有可能对设备

118
00:03:50,536 --> 00:03:52,436
的 course 有个良好的计量

119
00:03:52,906 --> 00:03:54,146
但有时计算 heading

120
00:03:54,146 --> 00:03:54,826
可能会比较

121
00:03:54,826 --> 00:03:54,976
棘手

122
00:03:59,276 --> 00:04:01,386
即使我们能正确

123
00:03:59,276 --> 00:04:01,386
即使我们能正确

124
00:04:01,386 --> 00:04:02,586
测量设备的 heading

125
00:04:02,586 --> 00:04:04,256
这也有可能不是

126
00:04:04,316 --> 00:04:04,986
正确的 heading

127
00:04:06,246 --> 00:04:08,416
比如让我们假设

128
00:04:08,416 --> 00:04:10,116
用户在车里导航

129
00:04:10,206 --> 00:04:11,806
他们把他们的 iPhone 放在了

130
00:04:11,806 --> 00:04:12,636
他们的仪表盘上

131
00:04:13,216 --> 00:04:14,316
很有可能

132
00:04:14,316 --> 00:04:15,696
他们把他们的 iPhone

133
00:04:15,696 --> 00:04:17,456
朝向了自己

134
00:04:17,456 --> 00:04:18,656
当他们这么做时 他们引入了

135
00:04:18,656 --> 00:04:20,096
他们汽车的 heading

136
00:04:20,096 --> 00:04:21,866
与他们 iPhone 的 heading

137
00:04:21,866 --> 00:04:24,206
之间的误差 但他们导航时

138
00:04:24,206 --> 00:04:25,376
他们希望看到

139
00:04:25,376 --> 00:04:26,956
他们汽车的 heading

140
00:04:29,336 --> 00:04:31,816
幸运的是我们找到了

141
00:04:31,816 --> 00:04:33,286
一个计算汽车 heading

142
00:04:33,286 --> 00:04:33,846
的绝佳方式

143
00:04:33,926 --> 00:04:37,906
我们可以使用 iPhone 的

144
00:04:38,126 --> 00:04:38,526
course

145
00:04:38,526 --> 00:04:41,116
所以在 iOS 11 中 Core Location 

146
00:04:41,116 --> 00:04:42,616
现在可以自动检测

147
00:04:42,616 --> 00:04:44,236
heading 和 course

148
00:04:44,236 --> 00:04:46,036
应该一致的情况

149
00:04:46,036 --> 00:04:47,836
它会权衡

150
00:04:47,916 --> 00:04:49,776
course 信息来提供

151
00:04:49,776 --> 00:04:51,336
更准确的 heading 更新

152
00:04:51,876 --> 00:04:54,366
很重要的一点是当你使用

153
00:04:54,366 --> 00:04:56,286
Core Location 的 heading API 时

154
00:04:56,386 --> 00:04:57,976
这个行为是完全自动的

155
00:04:57,976 --> 00:04:59,046
且一直开启

156
00:05:00,246 --> 00:05:01,986
所以如果你在为飞机

157
00:05:03,166 --> 00:05:05,416
或轮船或 AR 开发 App

158
00:05:05,416 --> 00:05:08,046
那么或许你应该

159
00:05:08,046 --> 00:05:09,346
选择使用 Core Motion 的

160
00:05:09,736 --> 00:05:12,166
CMDeviceMotion API

161
00:05:13,576 --> 00:05:15,166
我们的检测机制非常优秀

162
00:05:15,166 --> 00:05:16,786
但不是完美的

163
00:05:16,816 --> 00:05:17,966
有时候它也

164
00:05:17,966 --> 00:05:19,166
会犯错

165
00:05:19,686 --> 00:05:20,956
如果你想了解更多

166
00:05:20,956 --> 00:05:22,046
他们的 API 他们今年

167
00:05:22,046 --> 00:05:22,846
还有个大会

168
00:05:23,206 --> 00:05:24,646
我觉得非常值得

169
00:05:24,646 --> 00:05:25,786
参加

170
00:05:28,036 --> 00:05:29,596
我们还花了很多时间

171
00:05:29,596 --> 00:05:31,126
改进我们的室内

172
00:05:31,126 --> 00:05:31,576
定位系统

173
00:05:32,236 --> 00:05:34,226
正如你在 Keynote 看到的那样

174
00:05:34,226 --> 00:05:36,516
Maps 现在会在世界内很多

175
00:05:36,516 --> 00:05:38,026
室内场馆显示

176
00:05:38,026 --> 00:05:38,496
楼层指引

177
00:05:40,376 --> 00:05:42,106
在这些场馆中所有请求

178
00:05:42,106 --> 00:05:44,306
最准确位置的 App

179
00:05:44,596 --> 00:05:46,486
都会自动接收我们的

180
00:05:46,486 --> 00:05:48,476
高精确度室内位置

181
00:05:48,476 --> 00:05:49,086
数据

182
00:05:49,796 --> 00:05:50,896
今天我还想

183
00:05:50,896 --> 00:05:52,236
和大家分享四点

184
00:05:52,236 --> 00:05:54,366
令人兴奋的改进

185
00:05:54,536 --> 00:05:56,516
首先我们提升了

186
00:05:56,596 --> 00:05:58,286
测量的精确度

187
00:05:59,336 --> 00:06:01,366
我们的测量达到了 GPS 级别

188
00:05:59,336 --> 00:06:01,366
我们的测量达到了 GPS 级别

189
00:06:01,366 --> 00:06:01,766
甚至更好

190
00:06:03,136 --> 00:06:04,896
第二 我们提高了

191
00:06:04,896 --> 00:06:07,566
我们室内定位系统

192
00:06:07,566 --> 00:06:08,436
的响应能力

193
00:06:08,916 --> 00:06:10,446
当用户刚进入一个

194
00:06:10,446 --> 00:06:12,396
场馆后你就会开始接收

195
00:06:12,396 --> 00:06:13,886
那些室内计量数据

196
00:06:13,886 --> 00:06:15,646
比 iOS 10 快的多

197
00:06:16,766 --> 00:06:18,056
我们还提高了我们

198
00:06:18,146 --> 00:06:19,916
检测楼层变化的速度

199
00:06:21,296 --> 00:06:22,666
你得到新楼层

200
00:06:22,666 --> 00:06:24,306
的通知会比 iOS 10

201
00:06:24,306 --> 00:06:27,516
快很多

202
00:06:27,726 --> 00:06:29,376
我们还优化了可用性

203
00:06:29,656 --> 00:06:31,006
我不仅仅是指

204
00:06:31,006 --> 00:06:32,926
Core Location 支持的

205
00:06:32,926 --> 00:06:33,506
场馆数

206
00:06:33,786 --> 00:06:35,466
如果用户走进了

207
00:06:35,516 --> 00:06:36,716
一片未经勘测的

208
00:06:36,716 --> 00:06:38,766
场馆区域

209
00:06:38,766 --> 00:06:40,546
你还是会通过 Core Location

210
00:06:40,546 --> 00:06:41,936
得到高质量的室内测量数据

211
00:06:42,536 --> 00:06:45,686
我们还提高了

212
00:06:45,806 --> 00:06:48,436
室内定位系统和

213
00:06:48,436 --> 00:06:50,626
无线配件之间的

214
00:06:50,626 --> 00:06:51,206
互通性

215
00:06:51,976 --> 00:06:54,156
所以假设用户即使

216
00:06:54,156 --> 00:06:55,926
在通过他们的 AirPod

217
00:06:55,996 --> 00:06:58,266
播放 Beats 1 你还是会

218
00:06:58,376 --> 00:06:59,686
接收到高质量的室内

219
00:06:59,686 --> 00:06:59,976
位置数据

220
00:07:05,076 --> 00:07:07,176
对于 watchOS 我们在推进

221
00:07:07,176 --> 00:07:08,776
持续的后台位置 API 的

222
00:07:08,776 --> 00:07:09,826
可用性

223
00:07:10,856 --> 00:07:12,186
你可能已经听说过

224
00:07:12,186 --> 00:07:13,636
这个 API 了 但万一你没有

225
00:07:13,636 --> 00:07:16,236
这个 API 允许你的 App

226
00:07:16,306 --> 00:07:18,346
即使在进入后台时

227
00:07:18,346 --> 00:07:19,776
也能接收位置更新

228
00:07:21,506 --> 00:07:23,436
现在在 watchOS 3 中

229
00:07:23,436 --> 00:07:24,786
也可以通过同时使用

230
00:07:24,786 --> 00:07:26,196
Core Location 和

231
00:07:26,196 --> 00:07:27,696
HealthKit 来实现相似的

232
00:07:27,696 --> 00:07:28,196
功能了

233
00:07:29,206 --> 00:07:31,536
一个 HKWorkoutSession 会允许

234
00:07:31,536 --> 00:07:32,956
你的 App 即使在后台时

235
00:07:32,956 --> 00:07:36,546
也能持续接收

236
00:07:36,546 --> 00:07:37,816
位置信息更新

237
00:07:39,136 --> 00:07:41,166
但是我们希望

238
00:07:41,166 --> 00:07:42,806
让你为顾客创造

239
00:07:42,806 --> 00:07:43,796
基于位置的新体验

240
00:07:43,796 --> 00:07:45,806
不一定和健身锻炼有关

241
00:07:45,806 --> 00:07:46,906
所以我们在把我们通用的

242
00:07:46,946 --> 00:07:48,576
持续后台位置 API

243
00:07:48,576 --> 00:07:50,616
带到 watchOS 中

244
00:07:51,156 --> 00:07:54,886
我们通常的指导

245
00:07:54,886 --> 00:07:55,476
仍然适用

246
00:07:56,256 --> 00:07:58,266
这是一个相当强大但代价高昂的

247
00:07:58,266 --> 00:08:00,006
API 所以在使用它之前

248
00:07:58,266 --> 00:08:00,006
API 所以在使用它之前

249
00:08:00,006 --> 00:08:02,426
你应该仔细考虑

250
00:08:02,426 --> 00:08:04,156
但是如果你要创建一个

251
00:08:04,156 --> 00:08:06,376
比如说 导航 App 或健身类 App

252
00:08:07,266 --> 00:08:08,446
那么持续后台位置

253
00:08:08,446 --> 00:08:10,116
绝对就是

254
00:08:10,116 --> 00:08:10,956
你所需要的

255
00:08:11,556 --> 00:08:14,416
我们想确保

256
00:08:14,416 --> 00:08:15,806
这个功能只能

257
00:08:15,806 --> 00:08:18,986
在一处使用 所以在

258
00:08:18,986 --> 00:08:22,246
watchOS 4 中 HKWorkoutSessions

259
00:08:22,246 --> 00:08:24,846
不会再给予你的 App 

260
00:08:24,846 --> 00:08:27,556
在后台获取位置的权限

261
00:08:28,396 --> 00:08:29,576
旧版的 App 仍然能运作

262
00:08:29,576 --> 00:08:30,966
但当你连接到

263
00:08:30,966 --> 00:08:33,515
watchOS 4 SDK 时

264
00:08:33,515 --> 00:08:34,936
你必须采用持续后台位置

265
00:08:34,936 --> 00:08:35,765
API

266
00:08:36,946 --> 00:08:38,176
否则你的 App

267
00:08:38,176 --> 00:08:39,616
将不能获取用户的

268
00:08:39,616 --> 00:08:40,096
位置

269
00:08:41,586 --> 00:08:43,726
幸运的是 采用我们的 API

270
00:08:43,726 --> 00:08:43,996
非常简单

271
00:08:43,996 --> 00:08:45,536
只需要简单的

272
00:08:45,536 --> 00:08:46,076
三步

273
00:08:46,956 --> 00:08:49,146
首先在后台模式下

274
00:08:49,146 --> 00:08:50,976
开启位置更新

275
00:08:51,406 --> 00:08:52,856
在 Xcode 中切换到

276
00:08:52,856 --> 00:08:54,316
Capabilities 标签

277
00:08:54,696 --> 00:08:55,896
下滑至 Background Modes

278
00:08:55,896 --> 00:08:57,226
并在 Location Updates 框

279
00:08:57,226 --> 00:08:57,636
打钩

280
00:08:58,106 --> 00:09:01,726
第二你需要在

281
00:08:58,106 --> 00:09:01,726
第二你需要在

282
00:09:01,726 --> 00:09:03,396
Location Manager 中

283
00:09:03,456 --> 00:09:05,246
将 allowsBackgroundLocationUpdates

284
00:09:05,246 --> 00:09:06,016
属性设为 True

285
00:09:07,496 --> 00:09:09,156
我们建议你仅在

286
00:09:09,496 --> 00:09:10,886
用户进行了某项操作后

287
00:09:10,886 --> 00:09:12,696
进行这一步而这要求

288
00:09:13,676 --> 00:09:13,926
抱歉

289
00:09:13,966 --> 00:09:14,576
我讲快了

290
00:09:15,226 --> 00:09:16,866
我们建议你仅在

291
00:09:16,866 --> 00:09:20,316
用户开始锻炼

292
00:09:20,316 --> 00:09:21,186
或者导航时

293
00:09:21,186 --> 00:09:22,106
进行这一步

294
00:09:22,436 --> 00:09:23,756
这样你就不会

295
00:09:23,756 --> 00:09:25,176
在你打算开始之前

296
00:09:25,176 --> 00:09:26,266
启动了持续后台位置

297
00:09:26,266 --> 00:09:28,296
进程

298
00:09:28,986 --> 00:09:30,806
最后你只需要

299
00:09:30,806 --> 00:09:32,326
当你的 App 在前台运行时

300
00:09:32,326 --> 00:09:33,166
调出 startUpdatingLocation

301
00:09:33,996 --> 00:09:35,016
当你的 App 进入后台时

302
00:09:35,016 --> 00:09:36,616
Core Location 会让

303
00:09:36,616 --> 00:09:37,756
你的 App 保持运行

304
00:09:37,756 --> 00:09:39,026
然后持续发送

305
00:09:39,026 --> 00:09:39,506
位置更新

306
00:09:40,026 --> 00:09:43,096
当我们在讨论

307
00:09:43,206 --> 00:09:44,616
健身类 App 时

308
00:09:44,616 --> 00:09:45,676
我们有一些建议能帮你

309
00:09:45,676 --> 00:09:47,176
为你的用户创造可能是最好的

310
00:09:47,176 --> 00:09:47,986
体验

311
00:09:49,916 --> 00:09:53,136
首先我们建议你

312
00:09:53,136 --> 00:09:54,876
继续使用 HealthKit

313
00:09:54,996 --> 00:09:57,156
即使创建一个不使用

314
00:09:57,336 --> 00:09:58,796
HealthKit 或 HKWorkoutSession

315
00:09:58,796 --> 00:10:00,756
的健身 App 也是可能的

316
00:09:58,796 --> 00:10:00,756
的健身 App 也是可能的

317
00:10:01,666 --> 00:10:03,686
但这样做会让你的 App

318
00:10:03,686 --> 00:10:05,826
不能用上我们在 Core Location 

319
00:10:05,916 --> 00:10:07,286
中为健身场景设计的很多

320
00:10:07,286 --> 00:10:08,436
调整

321
00:10:09,626 --> 00:10:11,596
所以请继续使用 HealthKit 和

322
00:10:11,646 --> 00:10:12,816
HKWorkoutSession

323
00:10:13,296 --> 00:10:16,826
第二 如果你知道你的

324
00:10:16,826 --> 00:10:18,856
用户正在徒步锻炼

325
00:10:19,756 --> 00:10:21,936
我们推荐你使用 CMPedometer

326
00:10:21,936 --> 00:10:24,006
来测算这个用户的行进

327
00:10:24,006 --> 00:10:24,376
距离

328
00:10:25,946 --> 00:10:27,226
在某些环境下

329
00:10:27,226 --> 00:10:28,806
要准确计算用户的

330
00:10:28,806 --> 00:10:30,266
位置会非常困难

331
00:10:31,176 --> 00:10:32,666
如果用户在

332
00:10:32,696 --> 00:10:33,666
这些环境中奔跑

333
00:10:33,666 --> 00:10:35,226
你会发现

334
00:10:35,286 --> 00:10:37,096
准确计算用户的

335
00:10:37,096 --> 00:10:38,496
行进距离更加困难

336
00:10:39,896 --> 00:10:40,956
但如果你知道

337
00:10:40,956 --> 00:10:42,386
他们在徒步锻炼

338
00:10:42,386 --> 00:10:44,246
且你使用了 CMPedometer

339
00:10:44,246 --> 00:10:44,976
你的 App 就不会被影响

340
00:10:49,146 --> 00:10:51,666
好了 这些是零零碎碎

341
00:10:51,666 --> 00:10:52,036
的事情

342
00:10:52,646 --> 00:10:53,636
让我们来说重点

343
00:10:54,176 --> 00:10:55,576
授权以及报告的

344
00:10:55,576 --> 00:10:56,086
使用

345
00:10:56,696 --> 00:10:58,516
我们花了很多时间来更迭

346
00:10:58,666 --> 00:11:00,136
Core Location 的授权

347
00:10:58,666 --> 00:11:00,136
Core Location 的授权

348
00:11:00,206 --> 00:11:01,266
和使用报告的工作方式

349
00:11:01,266 --> 00:11:03,206
我们尝试了一些

350
00:11:03,206 --> 00:11:04,536
令人兴奋的改变

351
00:11:04,536 --> 00:11:06,316
我们觉得你的用户会

352
00:11:06,316 --> 00:11:06,656
喜欢

353
00:11:08,856 --> 00:11:11,046
首先让我们快速看一下

354
00:11:11,046 --> 00:11:11,776
它怎么工作的

355
00:11:12,716 --> 00:11:14,486
Core Location 支持两种

356
00:11:14,606 --> 00:11:17,106
授权模式：WhenInUse

357
00:11:17,446 --> 00:11:18,226
和 Always

358
00:11:19,596 --> 00:11:21,586
Always 授权允许你的 App

359
00:11:21,586 --> 00:11:23,096
能在 App 运行的

360
00:11:23,096 --> 00:11:25,286
任何时候获取用户的

361
00:11:25,286 --> 00:11:25,646
位置

362
00:11:26,956 --> 00:11:28,856
此外 Always 授权的 App

363
00:11:28,856 --> 00:11:30,396
可以使用我们的后台

364
00:11:30,396 --> 00:11:31,476
监视 API

365
00:11:32,436 --> 00:11:33,656
这些可以让你的

366
00:11:33,656 --> 00:11:35,356
App 运行起来 并在有多个

367
00:11:35,356 --> 00:11:37,086
基于位置的事件进行时

368
00:11:37,086 --> 00:11:37,826
接收信息

369
00:11:38,606 --> 00:11:40,036
例如 每当用户

370
00:11:40,036 --> 00:11:41,656
进入或离开了

371
00:11:41,656 --> 00:11:43,896
你指定的区域

372
00:11:43,966 --> 00:11:46,276
区域监测 API 就会启动

373
00:11:46,276 --> 00:11:46,706
你的 App

374
00:11:49,316 --> 00:11:51,466
WhenInUse 授权模式

375
00:11:51,606 --> 00:11:53,516
允许你的 App

376
00:11:53,516 --> 00:11:56,226
在被使用的任何时候

377
00:11:56,226 --> 00:11:58,006
获取用户的位置

378
00:11:59,316 --> 00:12:00,886
通常如果你的 App 在使用期间

379
00:11:59,316 --> 00:12:00,886
通常如果你的 App 在使用期间

380
00:12:00,916 --> 00:12:01,666
意味着它处于

381
00:12:01,666 --> 00:12:03,436
前台但情况并不

382
00:12:03,476 --> 00:12:04,346
总是这样

383
00:12:05,216 --> 00:12:07,276
例如 如果你在使用

384
00:12:07,276 --> 00:12:08,446
持续后台位置 API

385
00:12:08,446 --> 00:12:11,616
在 iOS 中 Core Location

386
00:12:11,616 --> 00:12:13,306
会绘制一条蓝色的状态栏

387
00:12:13,306 --> 00:12:14,786
在屏幕上方的两倍高度的

388
00:12:14,786 --> 00:12:16,606
蓝色状态栏 提醒用户

389
00:12:16,606 --> 00:12:18,316
这个 App 仍在

390
00:12:18,316 --> 00:12:19,596
运行并且仍在获取

391
00:12:19,596 --> 00:12:21,246
他们的位置 这样

392
00:12:21,246 --> 00:12:23,256
你的 App 就会被认作在使用

393
00:12:23,956 --> 00:12:24,106
中

394
00:12:24,676 --> 00:12:26,736
我们引入了 WhenInUse

395
00:12:26,736 --> 00:12:27,996
授权模式 因为我们

396
00:12:27,996 --> 00:12:30,466
想要让用户拥有

397
00:12:30,466 --> 00:12:32,596
对 App 如何获取他们的隐私数据

398
00:12:32,626 --> 00:12:33,856
的更高控制权

399
00:12:34,936 --> 00:12:35,966
并且用户喜欢这样

400
00:12:36,486 --> 00:12:37,806
他们喜欢知道 App

401
00:12:37,806 --> 00:12:39,466
只有在他们想的时候

402
00:12:39,466 --> 00:12:40,726
才能获取他们的位置

403
00:12:41,756 --> 00:12:43,206
我们觉得这代表了

404
00:12:43,206 --> 00:12:47,666
用户能控制你的 App

405
00:12:47,666 --> 00:12:49,386
如何获取他们位置

406
00:12:49,386 --> 00:12:51,556
与你能为用户创造

407
00:12:51,556 --> 00:12:53,226
具有吸引力的 App 体验

408
00:12:53,226 --> 00:12:54,696
之间的良好平衡

409
00:12:55,686 --> 00:12:57,106
自从我们引入了

410
00:12:57,106 --> 00:12:58,716
WhenInUse 授权模式后

411
00:12:58,716 --> 00:13:00,266
得到了热烈响应

412
00:12:58,716 --> 00:13:00,266
得到了热烈响应

413
00:13:01,166 --> 00:13:03,266
iOS 中几乎百分之八十

414
00:13:03,266 --> 00:13:05,326
使用位置的 App

415
00:13:05,636 --> 00:13:07,426
支持 WhenInUse 授权

416
00:13:08,306 --> 00:13:11,226
只有 百分之二十一 选择

417
00:13:11,226 --> 00:13:13,136
从用户那里获取

418
00:13:13,136 --> 00:13:15,536
Always 授权

419
00:13:15,666 --> 00:13:17,016
用户们喜欢 WhenInUse

420
00:13:17,016 --> 00:13:18,486
授权模式

421
00:13:18,486 --> 00:13:19,886
多亏了你们的努力

422
00:13:19,886 --> 00:13:20,996
他们几乎一直拥有

423
00:13:20,996 --> 00:13:21,226
选择权

424
00:13:21,946 --> 00:13:24,766
我们认为这非常棒

425
00:13:24,766 --> 00:13:25,946
但是我们想知道我们能不能

426
00:13:25,946 --> 00:13:26,306
做的更好

427
00:13:27,156 --> 00:13:28,346
现在让我们看看

428
00:13:28,346 --> 00:13:30,166
一个 App 可能选择获取

429
00:13:30,166 --> 00:13:31,876
Always 授权的一些原因

430
00:13:32,416 --> 00:13:36,386
我们认为其中一个常见

431
00:13:36,386 --> 00:13:38,546
原因是开发者只是

432
00:13:38,856 --> 00:13:39,946
感到困惑

433
00:13:40,516 --> 00:13:43,056
事实证明许多

434
00:13:43,056 --> 00:13:44,156
要求 Always 授权

435
00:13:44,156 --> 00:13:46,436
的 App 实际上并未使用

436
00:13:46,586 --> 00:13:48,156
我们的任何一个后台监测

437
00:13:48,256 --> 00:13:48,646
API

438
00:13:50,026 --> 00:13:51,756
很有可能这些 App

439
00:13:51,756 --> 00:13:53,556
会继续正常运作

440
00:13:53,556 --> 00:13:54,956
即使他们获得的是

441
00:13:54,956 --> 00:13:56,756
WhenInUse 授权

442
00:13:58,776 --> 00:14:00,306
但当用户遇到一个

443
00:13:58,776 --> 00:14:00,306
但当用户遇到一个

444
00:14:00,306 --> 00:14:02,056
这样的 App 时 他们并不知道

445
00:14:02,056 --> 00:14:02,366
这点

446
00:14:03,196 --> 00:14:04,646
他们不能看见 App 的

447
00:14:04,646 --> 00:14:05,016
源代码

448
00:14:06,046 --> 00:14:07,326
他们不知道

449
00:14:07,326 --> 00:14:10,356
它并不会监测他们一整天

450
00:14:10,356 --> 00:14:11,646
所以他们只能当做它会

451
00:14:11,646 --> 00:14:13,376
来对待 而这带来了

452
00:14:13,376 --> 00:14:14,686
非常差的用户体验

453
00:14:15,286 --> 00:14:19,016
我们认为很多开发者

454
00:14:19,016 --> 00:14:20,546
选择请求 Always 授权

455
00:14:20,546 --> 00:14:22,206
的第二个原因是

456
00:14:22,206 --> 00:14:23,156
他们只是想给

457
00:14:23,156 --> 00:14:24,316
他们的用户最好的

458
00:14:24,316 --> 00:14:25,056
体验

459
00:14:26,476 --> 00:14:29,056
看 并不是所有功能

460
00:14:29,056 --> 00:14:30,416
都能恰当地用

461
00:14:30,416 --> 00:14:31,556
WhenInUse 授权实现

462
00:14:31,876 --> 00:14:33,986
有些功能就是需要

463
00:14:33,986 --> 00:14:36,066
Always 授权

464
00:14:36,066 --> 00:14:37,846
我们认为这些开发者只是

465
00:14:37,846 --> 00:14:39,306
想确保他们的用户

466
00:14:39,436 --> 00:14:40,946
能得到 App 提供的

467
00:14:40,946 --> 00:14:44,666
最佳体验 但是这对

468
00:14:44,666 --> 00:14:46,456
那些不希望给予

469
00:14:46,456 --> 00:14:48,236
App Always 授权

470
00:14:48,336 --> 00:14:49,486
的用户带来了非常差

471
00:14:49,486 --> 00:14:50,546
的用户体验

472
00:14:51,516 --> 00:14:52,726
他们被迫

473
00:14:52,726 --> 00:14:54,806
在授予 App Always

474
00:14:55,026 --> 00:14:56,716
和和授予其 Never 中作出选择

475
00:14:56,716 --> 00:14:58,946
就像在这里例子中 他们并不想这样

476
00:15:01,356 --> 00:15:02,566
Never 意味着他们不能

477
00:15:02,566 --> 00:15:03,986
从 App 中任何基于位置的功能中

478
00:15:03,986 --> 00:15:04,486
受益

479
00:15:05,026 --> 00:15:06,356
他们最后授予其

480
00:15:06,356 --> 00:15:08,046
Always 然后在使用完

481
00:15:08,086 --> 00:15:09,916
这个 App 后就撤销了

482
00:15:09,916 --> 00:15:10,786
这个授权

483
00:15:12,116 --> 00:15:14,286
无论如何用户都没有

484
00:15:14,286 --> 00:15:16,346
和这个 App 相处得

485
00:15:18,326 --> 00:15:18,406
很好

486
00:15:18,676 --> 00:15:22,256
所以在 iOS 11 中我们要求所有

487
00:15:22,256 --> 00:15:24,136
拥有请求 Always 的 App

488
00:15:24,606 --> 00:15:27,166
的开发者额外支持

489
00:15:27,166 --> 00:15:28,956
WhenInUse

490
00:15:28,956 --> 00:15:30,766
授权模式

491
00:15:31,956 --> 00:15:34,176
这个变化既具有回溯性

492
00:15:34,336 --> 00:15:36,236
又具有前瞻性

493
00:15:36,236 --> 00:15:39,026
所以当用户升级至 iOS 11 后

494
00:15:39,026 --> 00:15:40,506
他们可以向任何

495
00:15:40,506 --> 00:15:42,096
请求 Always 授权的

496
00:15:42,096 --> 00:15:44,056
App 给予 WhenInUse

497
00:15:44,106 --> 00:15:44,976
授权模式

498
00:15:49,296 --> 00:15:51,566
如果你连接至 iOS 11 SDK

499
00:15:51,566 --> 00:15:54,326
你必须提供

500
00:15:54,326 --> 00:15:56,256
WhenInUseUsageDescription

501
00:15:56,726 --> 00:15:58,146
否则你的 App

502
00:15:58,186 --> 00:15:59,586
将不能请求 Always

503
00:15:59,586 --> 00:16:00,336
授权

504
00:15:59,586 --> 00:16:00,336
授权

505
00:16:02,576 --> 00:16:04,806
此外当你的 App

506
00:16:04,806 --> 00:16:06,216
请求 Always 授权时

507
00:16:06,686 --> 00:16:09,096
我们会额外显示

508
00:16:09,096 --> 00:16:10,206
一个选项来给予你 App

509
00:16:10,376 --> 00:16:12,236
WhenInUse 的授权

510
00:16:12,786 --> 00:16:15,586
有了这三个新的选项

511
00:16:15,586 --> 00:16:17,176
提示我们还有个新的

512
00:16:17,176 --> 00:16:19,096
UsageDescription 字符串

513
00:16:20,316 --> 00:16:21,766
你的 App 需要提供一个

514
00:16:21,896 --> 00:16:23,246
AlwaysAndWhenInUse

515
00:16:23,426 --> 00:16:24,456
UsageDescription

516
00:16:25,426 --> 00:16:26,846
因为这是一个不同的 Key

517
00:16:27,626 --> 00:16:29,536
当你连接至新的 iOS 11

518
00:16:29,536 --> 00:16:31,326
SDK 时你的 App 必须

519
00:16:31,456 --> 00:16:31,856
提供它

520
00:16:32,876 --> 00:16:34,746
对于连接到 iOS 11 和之后

521
00:16:34,746 --> 00:16:36,466
版本的 App Core Location 

522
00:16:36,646 --> 00:16:40,256
不会使用旧的 NSLocationAlways

523
00:16:40,256 --> 00:16:40,976
UsageDescription Key

524
00:16:45,226 --> 00:16:46,806
让我们谈一下最佳实践案例

525
00:16:46,806 --> 00:16:48,156
看看这个是怎么

526
00:16:48,156 --> 00:16:48,636
做出改变的

527
00:16:50,166 --> 00:16:51,406
对于想要 Always 授权

528
00:16:51,406 --> 00:16:53,726
的 App 我们推荐你

529
00:16:53,726 --> 00:16:55,786
提供所有三个 Key

530
00:16:55,966 --> 00:16:57,606
包括 不会再用的NSLocationAlways

531
00:16:57,706 --> 00:16:59,016
UsageDescription

532
00:16:59,016 --> 00:17:00,376
这个我刚说过

533
00:16:59,016 --> 00:17:00,376
这个我刚说过

534
00:17:01,316 --> 00:17:04,066
因为如果你想

535
00:17:04,066 --> 00:17:05,715
在一个运行 iOS 10 或

536
00:17:06,165 --> 00:17:08,116
更早版本的设备上部署你的 App

537
00:17:08,116 --> 00:17:09,786
你需要提供它能

538
00:17:09,786 --> 00:17:11,286
读懂的字符串

539
00:17:11,726 --> 00:17:13,006
所以你应该继续

540
00:17:13,006 --> 00:17:14,955
提供 NSLocationAlways

541
00:17:15,076 --> 00:17:16,026
UsageDescription

542
00:17:18,496 --> 00:17:22,945
第二你的 AlwaysAndWhenInUse

543
00:17:22,945 --> 00:17:24,346
UsageDescription 应该帮助

544
00:17:24,346 --> 00:17:26,945
用户选择 Always 还是

545
00:17:27,156 --> 00:17:27,915
WhenInUse

546
00:17:28,096 --> 00:17:29,476
在有两个选项呈现

547
00:17:29,476 --> 00:17:30,796
给用户的情况下

548
00:17:30,796 --> 00:17:31,776
我们会用到它

549
00:17:33,246 --> 00:17:35,266
所以你的描述应该

550
00:17:35,266 --> 00:17:37,086
向用户解释

551
00:17:37,156 --> 00:17:38,946
如果他们选择了 WhenInUse 授权

552
00:17:38,946 --> 00:17:40,426
会开放什么功能

553
00:17:40,676 --> 00:17:41,936
以及如果他们

554
00:17:41,936 --> 00:17:43,996
给予了你的 App Always 授权

555
00:17:43,996 --> 00:17:45,526
他们会得到什么额外的

556
00:17:45,526 --> 00:17:46,196
功能

557
00:17:47,236 --> 00:17:49,936
对于所有 App 我们建议你

558
00:17:49,936 --> 00:17:52,036
只在你真正需要的时候

559
00:17:52,326 --> 00:17:54,446
请求授权

560
00:17:55,056 --> 00:17:56,386
如果你在等待请求

561
00:17:56,386 --> 00:17:58,026
授权直到用户进行了

562
00:17:58,026 --> 00:17:59,726
某些操作要求

563
00:17:59,726 --> 00:18:01,646
获取位置

564
00:17:59,726 --> 00:18:01,646
获取位置

565
00:18:02,296 --> 00:18:04,016
那么当提示出现时

566
00:18:04,096 --> 00:18:05,226
用户有了他们需要的

567
00:18:05,256 --> 00:18:07,356
使用背景以及直观的理解

568
00:18:07,356 --> 00:18:09,296
就能知道为什么

569
00:18:09,296 --> 00:18:11,216
你的 App 想要

570
00:18:11,436 --> 00:18:12,696
获取他们的位置

571
00:18:13,756 --> 00:18:15,166
这让他们给予

572
00:18:15,166 --> 00:18:16,576
你的 App 授权变得

573
00:18:16,576 --> 00:18:17,596
更有可能

574
00:18:17,776 --> 00:18:21,446
对于申请 Always 授权

575
00:18:21,446 --> 00:18:22,936
的 App 还有一点点

576
00:18:22,936 --> 00:18:23,826
要说一下

577
00:18:24,796 --> 00:18:26,376
我们建议你先

578
00:18:26,376 --> 00:18:28,216
申请 WhenInUse 授权

579
00:18:30,216 --> 00:18:31,416
申请 WhenInUse

580
00:18:31,416 --> 00:18:32,496
授权更容易一点

581
00:18:32,526 --> 00:18:34,156
从用户那里要求

582
00:18:34,156 --> 00:18:36,086
尽可能少 除此以外

583
00:18:36,086 --> 00:18:37,616
还有

584
00:18:37,986 --> 00:18:39,566
我们认为你的 App 应该让

585
00:18:39,566 --> 00:18:41,656
WhenInUse 成为基本的体验

586
00:18:41,696 --> 00:18:43,526
这是用户首先会遇到的体验

587
00:18:44,126 --> 00:18:45,606
然后在用户已经深度

588
00:18:45,606 --> 00:18:47,046
体验了你的 App 

589
00:18:47,046 --> 00:18:48,536
并且了解了所有功能之后

590
00:18:49,546 --> 00:18:50,816
当他们发现其中

591
00:18:50,816 --> 00:18:52,476
一个功能需要 Always 时

592
00:18:52,476 --> 00:18:54,476
他们会试着打开 而在那时

593
00:18:54,476 --> 00:18:55,576
你的 App 可以显示

594
00:18:55,576 --> 00:18:57,556
转换提示申请用

595
00:18:57,626 --> 00:18:59,226
Always 授权覆盖你

596
00:18:59,226 --> 00:19:00,486
已经拥有的 WhenInUse

597
00:18:59,226 --> 00:19:00,486
已经拥有的 WhenInUse

598
00:19:00,486 --> 00:19:01,226
授权

599
00:19:02,486 --> 00:19:04,216
当这个提示出现时

600
00:19:04,216 --> 00:19:05,906
用户会再一次有了他们

601
00:19:05,906 --> 00:19:08,316
需要的直观使用背景

602
00:19:08,316 --> 00:19:09,926
来理解为什么你的 App

603
00:19:09,926 --> 00:19:12,346
要申请 Always 授权

604
00:19:12,346 --> 00:19:14,786
他们就会更有可能将它

605
00:19:16,516 --> 00:19:16,706
授予你

606
00:19:16,826 --> 00:19:18,216
让我们看看它是如何工作的

607
00:19:18,846 --> 00:19:21,056
所以当用户第一次启动

608
00:19:21,056 --> 00:19:23,686
你的 App 你会处于

609
00:19:23,746 --> 00:19:25,106
一个未决定的授权

610
00:19:25,106 --> 00:19:25,426
状态

611
00:19:26,696 --> 00:19:28,866
在这里你可以申请

612
00:19:28,986 --> 00:19:30,896
WhenInUse 授权或

613
00:19:30,956 --> 00:19:31,926
Always 授权

614
00:19:33,466 --> 00:19:34,366
让我们看看如果你申请

615
00:19:34,366 --> 00:19:35,776
Always 授权会发生什么

616
00:19:36,996 --> 00:19:38,676
Core Location 会显示我们的

617
00:19:39,286 --> 00:19:40,966
WhenInUse 授权提示

618
00:19:40,966 --> 00:19:41,626
在提示的

619
00:19:41,916 --> 00:19:43,966
主体上 使用的是你的

620
00:19:43,966 --> 00:19:44,786
WhenInUseUsageDescription

621
00:19:46,256 --> 00:19:47,686
根据用户的选择

622
00:19:47,686 --> 00:19:48,846
你会获得

623
00:19:48,936 --> 00:19:50,686
WhenInUse 授权或

624
00:19:50,686 --> 00:19:51,806
没有任何授权

625
00:19:52,506 --> 00:19:53,816
在这之后用户可以

626
00:19:53,816 --> 00:19:55,346
随意到设置中调整

627
00:19:55,346 --> 00:19:56,686
你 App 的授权 达到

628
00:19:56,686 --> 00:19:57,686
他们想要的值

629
00:19:58,516 --> 00:20:00,216
但是如果用户选择给予

630
00:19:58,516 --> 00:20:00,216
但是如果用户选择给予

631
00:20:00,216 --> 00:20:01,456
你的 App WhenInUse 授权

632
00:20:01,456 --> 00:20:02,916
其实他们很有可能

633
00:20:02,916 --> 00:20:03,976
会这么做 如果你按照

634
00:20:03,976 --> 00:20:05,456
我们的最佳实践做的话

635
00:20:06,916 --> 00:20:08,296
你还可以额外申请

636
00:20:08,376 --> 00:20:09,356
Always 授权

637
00:20:10,526 --> 00:20:12,106
此时 Core Location

638
00:20:12,106 --> 00:20:13,826
会显示转换提示

639
00:20:14,626 --> 00:20:15,686
并会使用新的

640
00:20:15,686 --> 00:20:16,876
AlwaysAndWhenInUse

641
00:20:16,996 --> 00:20:18,216
UsageDescription 字符串

642
00:20:18,976 --> 00:20:20,496
从这里用户可以给予

643
00:20:20,916 --> 00:20:22,266
你的 App Always

644
00:20:22,266 --> 00:20:24,076
授权或使其保持

645
00:20:24,076 --> 00:20:25,516
当前的 WhenInUse 值

646
00:20:25,516 --> 00:20:29,336
当你的 App 申请

647
00:20:29,336 --> 00:20:30,836
Always 授权之后它将不能

648
00:20:30,836 --> 00:20:32,516
再申请任何其他的

649
00:20:32,516 --> 00:20:33,026
提示

650
00:20:34,136 --> 00:20:36,116
让我们回到一开始

651
00:20:36,116 --> 00:20:37,926
如果你已经在一开始

652
00:20:37,926 --> 00:20:39,456
比如当你的 App 启动时

653
00:20:39,456 --> 00:20:41,176
就已经申请了

654
00:20:41,176 --> 00:20:42,086
Always 授权了呢

655
00:20:43,136 --> 00:20:44,946
用户会看到这个提示

656
00:20:45,636 --> 00:20:48,526
他们会看到一个 WhenInUse 选项

657
00:20:48,846 --> 00:20:50,046
会看到一个 Always 选项

658
00:20:50,496 --> 00:20:52,016
还会看到一个 Don't Allow

659
00:20:52,016 --> 00:20:52,376
选项

660
00:20:53,236 --> 00:20:54,996
如果用户不能理解

661
00:20:55,106 --> 00:20:56,876
为什么你的 App

662
00:20:56,876 --> 00:20:58,786
要一直获取位置

663
00:20:58,786 --> 00:21:00,586
如果他们没有

664
00:20:58,786 --> 00:21:00,586
如果他们没有

665
00:21:00,586 --> 00:21:01,986
我们建议你提供的背景信息

666
00:21:03,136 --> 00:21:04,506
那么很有可能他们会

667
00:21:04,506 --> 00:21:05,896
给予你的 App WhenInUse

668
00:21:05,896 --> 00:21:08,116
授权 如果这发生了

669
00:21:08,116 --> 00:21:10,056
你将不能在之后

670
00:21:10,056 --> 00:21:11,736
发起授权转换

671
00:21:11,736 --> 00:21:12,436
提示了

672
00:21:13,856 --> 00:21:15,716
对了 这个提示也使用

673
00:21:15,716 --> 00:21:17,186
那个新合成的

674
00:21:17,186 --> 00:21:18,176
UsageDescription Key

675
00:21:19,526 --> 00:21:22,486
好了 在我们从授权讲到

676
00:21:22,486 --> 00:21:24,426
下一个话题前 我很高兴地

677
00:21:24,426 --> 00:21:26,666
宣布在 watchOS 4 上

678
00:21:26,666 --> 00:21:28,376
Core Location 能支持

679
00:21:28,376 --> 00:21:30,186
直接在表上显示

680
00:21:30,186 --> 00:21:31,076
授权的提示

681
00:21:32,096 --> 00:21:32,956
之前

682
00:21:33,516 --> 00:21:36,016
[ 掌声 ]

683
00:21:36,516 --> 00:21:38,146
之前如果你想

684
00:21:38,146 --> 00:21:40,536
申请授权

685
00:21:40,536 --> 00:21:41,626
watchOS 会提醒用户

686
00:21:41,626 --> 00:21:42,616
在他们手机上有个

687
00:21:42,616 --> 00:21:43,916
提示等待他们处理

688
00:21:43,916 --> 00:21:44,716
他们必须到手机上

689
00:21:44,716 --> 00:21:47,256
在那里作出回应

690
00:21:47,866 --> 00:21:49,696
我们还没有完成所有的

691
00:21:49,696 --> 00:21:49,886
更新

692
00:21:49,946 --> 00:21:51,356
这不在你们这周早些时候

693
00:21:51,356 --> 00:21:53,006
收到的随机数种子里但是

694
00:21:53,006 --> 00:21:54,206
我们预计会把它放到

695
00:21:54,206 --> 00:21:54,906
未来的种子里

696
00:21:56,076 --> 00:21:57,736
弄好后你需要做的

697
00:21:57,786 --> 00:21:59,686
只是重新构建你的 App

698
00:21:59,686 --> 00:22:00,746
下一次你安装时

699
00:21:59,686 --> 00:22:00,746
下一次你安装时

700
00:22:00,746 --> 00:22:01,836
你应该能开始看到这些

701
00:22:01,836 --> 00:22:02,966
独立的提示了

702
00:22:03,906 --> 00:22:04,886
这是授权部分

703
00:22:05,486 --> 00:22:07,876
让我们来谈谈

704
00:22:07,876 --> 00:22:08,286
使用报告

705
00:22:08,886 --> 00:22:12,146
但首先我们说说它如何

706
00:22:12,176 --> 00:22:15,026
在 iOS 10 上工作

707
00:22:15,226 --> 00:22:16,856
Core Location 会基于

708
00:22:16,856 --> 00:22:18,956
你正使用的什么服务

709
00:22:18,956 --> 00:22:20,356
来报告你 App 的位置使用

710
00:22:20,356 --> 00:22:20,806
情况

711
00:22:21,356 --> 00:22:24,286
大多数服务会让你的

712
00:22:24,286 --> 00:22:26,046
App 在状态栏和

713
00:22:26,126 --> 00:22:28,286
设置里显示一个实心的

714
00:22:28,356 --> 00:22:28,696
箭头

715
00:22:30,856 --> 00:22:31,866
如果你使用了区域

716
00:22:31,866 --> 00:22:33,236
监测服务 相反你会

717
00:22:33,236 --> 00:22:34,746
得到一个空心的箭头

718
00:22:35,326 --> 00:22:37,826
最后 如果你是一个

719
00:22:37,826 --> 00:22:40,196
WhenInUse 授权的 App

720
00:22:40,196 --> 00:22:41,296
然后你请求了

721
00:22:41,296 --> 00:22:42,976
持续后台位置服务

722
00:22:42,976 --> 00:22:44,166
我们会画出

723
00:22:44,166 --> 00:22:45,226
双层高度的蓝色状态栏

724
00:22:45,226 --> 00:22:45,956
这个我已经提到了很多次

725
00:22:50,046 --> 00:22:51,236
我们觉得这个系统

726
00:22:51,236 --> 00:22:51,496
非常好

727
00:22:51,566 --> 00:22:52,966
它为我们服务了

728
00:22:52,966 --> 00:22:55,296
很久但我们觉得

729
00:22:55,366 --> 00:22:56,376
还有提升空间

730
00:22:58,436 --> 00:23:00,576
这个系统有力地代表了

731
00:22:58,436 --> 00:23:00,576
这个系统有力地代表了

732
00:23:00,646 --> 00:23:02,306
我们一些 API 的

733
00:23:02,306 --> 00:23:02,946
隐私暴露

734
00:23:03,896 --> 00:23:05,376
让我们比较两个 App

735
00:23:05,376 --> 00:23:07,936
其中一个使用

736
00:23:07,936 --> 00:23:09,276
显著位置变化监测服务

737
00:23:09,276 --> 00:23:11,076
而另一个使用我们的

738
00:23:11,166 --> 00:23:12,436
持续后台位置

739
00:23:12,436 --> 00:23:13,266
服务

740
00:23:14,756 --> 00:23:16,016
这两个 App 都会持续

741
00:23:16,016 --> 00:23:18,116
显示实心的箭头

742
00:23:18,776 --> 00:23:20,276
但是使用

743
00:23:20,356 --> 00:23:21,586
显著位置变化监测

744
00:23:21,586 --> 00:23:23,426
的 App 相比于使用

745
00:23:23,586 --> 00:23:25,246
持续后台位置的 App

746
00:23:25,296 --> 00:23:26,776
会接收更少的

747
00:23:26,806 --> 00:23:27,676
位置信息

748
00:23:28,216 --> 00:23:30,906
使用显著位置

749
00:23:30,906 --> 00:23:32,126
变化监测的 App 

750
00:23:32,126 --> 00:23:34,446
只有在设备移动了

751
00:23:34,446 --> 00:23:36,156
一段显著距离时

752
00:23:36,156 --> 00:23:37,836
才会收到更新 即使这样

753
00:23:37,836 --> 00:23:39,996
在这之上还有速率

754
00:23:39,996 --> 00:23:40,406
限制

755
00:23:41,146 --> 00:23:44,146
所以接收

756
00:23:44,146 --> 00:23:45,296
持续后台位置的 App

757
00:23:45,296 --> 00:23:46,436
会得到更多的

758
00:23:46,436 --> 00:23:48,306
位置信息 但他们

759
00:23:48,306 --> 00:23:49,936
有完全一样的使用

760
00:23:49,936 --> 00:23:50,466
报告

761
00:23:51,756 --> 00:23:54,436
此外 我们觉得

762
00:23:54,586 --> 00:23:55,886
Always 授权的 App

763
00:23:55,886 --> 00:23:57,836
错过了蓝色状态栏的

764
00:23:57,936 --> 00:23:58,246
功能

765
00:23:58,986 --> 00:24:00,566
假设你有一个

766
00:23:58,986 --> 00:24:00,566
假设你有一个

767
00:24:00,566 --> 00:24:02,566
获得了 Always 授权的

768
00:24:02,566 --> 00:24:03,226
App

769
00:24:03,966 --> 00:24:05,606
如果用户正在导航

770
00:24:05,606 --> 00:24:07,296
他们很有可能

771
00:24:07,296 --> 00:24:08,596
想要在草草地使用完

772
00:24:08,636 --> 00:24:10,366
另一个 App 后快速返回

773
00:24:10,366 --> 00:24:12,846
但是在 iOS 10 中

774
00:24:13,186 --> 00:24:14,696
Always 授权的 App

775
00:24:14,806 --> 00:24:16,186
没有这个两倍高度的蓝色 

776
00:24:16,186 --> 00:24:16,456
状态栏

777
00:24:17,176 --> 00:24:21,366
我们觉得这些问题

778
00:24:21,366 --> 00:24:22,786
让用户很难

779
00:24:22,816 --> 00:24:25,036
正确理解 App 是如何

780
00:24:25,036 --> 00:24:26,226
使用他们的位置的

781
00:24:27,326 --> 00:24:28,526
例如 让我们再

782
00:24:28,526 --> 00:24:29,876
看看这两个 App

783
00:24:29,936 --> 00:24:31,176
持续后台位置

784
00:24:31,206 --> 00:24:32,326
和显著位置改变

785
00:24:32,326 --> 00:24:33,306
监测 App

786
00:24:34,606 --> 00:24:37,036
假设用户用

787
00:24:37,186 --> 00:24:38,246
持续后台位置 App

788
00:24:38,246 --> 00:24:38,806
去跑步

789
00:24:39,496 --> 00:24:41,316
他们去跑步

790
00:24:41,316 --> 00:24:42,446
他们回来 他们会一直

791
00:24:42,446 --> 00:24:43,506
看到实心的箭头

792
00:24:43,506 --> 00:24:44,386
当他们看地图时

793
00:24:44,386 --> 00:24:45,726
就会发现他们每一步的

794
00:24:45,726 --> 00:24:46,036
轨迹

795
00:24:46,806 --> 00:24:48,046
当他们安装了使用

796
00:24:48,046 --> 00:24:49,596
显著位置变化监测的 App

797
00:24:49,596 --> 00:24:51,066
他们会看到同样的东西

798
00:24:51,066 --> 00:24:53,326
也就是一个实心箭头

799
00:24:54,066 --> 00:24:55,866
就用户所知

800
00:24:56,196 --> 00:24:57,896
这个 App 可能和他们的

801
00:24:57,896 --> 00:24:59,526
跑步轨迹 App 接收了

802
00:24:59,596 --> 00:25:01,286
同样多的信息量

803
00:24:59,596 --> 00:25:01,286
同样多的信息量

804
00:25:02,696 --> 00:25:05,196
所以如果用户理解错了

805
00:25:05,196 --> 00:25:06,706
我们的标志 我们决定

806
00:25:06,706 --> 00:25:08,556
最好的解决方法就是

807
00:25:08,556 --> 00:25:09,976
对我们如何指示位置使用的方式做出调整

808
00:25:14,136 --> 00:25:15,656
我们有一个新政策

809
00:25:15,656 --> 00:25:16,686
我们觉得你们会喜欢

810
00:25:17,596 --> 00:25:18,876
我们改变了箭头的

811
00:25:18,876 --> 00:25:19,316
运作方式

812
00:25:20,506 --> 00:25:22,476
当你的 App 从 Core Location

813
00:25:22,476 --> 00:25:24,186
请求位置信息时

814
00:25:24,626 --> 00:25:26,376
显示空心箭头

815
00:25:26,986 --> 00:25:30,296
当你实际上接收

816
00:25:30,296 --> 00:25:32,446
位置信息时

817
00:25:32,446 --> 00:25:34,416
我们将它变成一个实心箭头

818
00:25:34,416 --> 00:25:35,086
持续几秒

819
00:25:36,486 --> 00:25:37,856
我们待会儿会

820
00:25:37,856 --> 00:25:39,156
演示一个例子来说明

821
00:25:39,156 --> 00:25:39,776
实际情况如何

822
00:25:40,906 --> 00:25:43,206
并且你可能已经猜到了

823
00:25:43,206 --> 00:25:44,446
我们将双倍高度的

824
00:25:44,446 --> 00:25:46,216
蓝色状态栏带进了

825
00:25:46,216 --> 00:25:48,056
使用持续后台位置

826
00:25:48,056 --> 00:25:49,106
服务的 Always 授权

827
00:25:49,106 --> 00:25:50,166
App

828
00:25:50,746 --> 00:25:54,456
现在我们期望这个

829
00:25:54,456 --> 00:25:56,606
新政策会帮助用户

830
00:25:56,676 --> 00:25:58,986
更好地理解 App 的

831
00:25:58,986 --> 00:26:00,976
位置使用

832
00:25:58,986 --> 00:26:00,976
位置使用

833
00:26:03,036 --> 00:26:06,346
所以让我们敬请期待吧

834
00:26:06,796 --> 00:26:08,556
之前我们有那个

835
00:26:08,556 --> 00:26:11,586
空心箭头行为 于是用户

836
00:26:11,586 --> 00:26:13,996
知道了空心箭头意味着

837
00:26:14,036 --> 00:26:16,646
一个 App 正在后台

838
00:26:16,646 --> 00:26:18,486
使用位置服务 但是

839
00:26:18,486 --> 00:26:20,156
它没有持续接收

840
00:26:20,156 --> 00:26:20,536
更新信息

841
00:26:20,536 --> 00:26:21,856
它可能在

842
00:26:21,956 --> 00:26:23,826
断断续续地接收更新

843
00:26:24,226 --> 00:26:25,646
或只有当特定的事件

844
00:26:25,646 --> 00:26:27,266
发生时 这样他们就知道

845
00:26:27,266 --> 00:26:28,686
这个箭头代表

846
00:26:28,956 --> 00:26:30,166
低功耗的后台

847
00:26:30,166 --> 00:26:30,746
监测

848
00:26:31,846 --> 00:26:33,886
我们现在 将

849
00:26:33,886 --> 00:26:35,816
这个理解延伸至

850
00:26:35,816 --> 00:26:38,866
Core Location 的所有 API

851
00:26:38,866 --> 00:26:40,646
我们觉得这对

852
00:26:40,696 --> 00:26:42,566
开发者你们好多了

853
00:26:42,566 --> 00:26:44,446
因为用户现在可以看到

854
00:26:44,446 --> 00:26:46,836
当你的 App 在后台

855
00:26:46,836 --> 00:26:48,576
运行时实际上

856
00:26:48,576 --> 00:26:50,136
接收了很多

857
00:26:50,136 --> 00:26:50,876
或某些情况下

858
00:26:50,876 --> 00:26:51,476
很少的信息

859
00:26:52,246 --> 00:26:53,476
如果你使用我们的后台

860
00:26:53,476 --> 00:26:55,246
监测 API 你会发现

861
00:26:55,246 --> 00:26:56,556
你会多一个空心箭头

862
00:26:56,556 --> 00:26:59,396
少一个实心箭头

863
00:26:59,396 --> 00:27:01,036
我们认为这会帮助

864
00:26:59,396 --> 00:27:01,036
我们认为这会帮助

865
00:27:01,036 --> 00:27:02,826
用户理解你的 App

866
00:27:02,876 --> 00:27:04,916
实际上并没有每一天都在

867
00:27:04,916 --> 00:27:06,446
接收每一小步改变或者

868
00:27:06,446 --> 00:27:06,956
每一次大转折这样的信息

869
00:27:11,346 --> 00:27:12,986
OK 让我们看看在实践中

870
00:27:13,026 --> 00:27:14,396
箭头是如何工作的

871
00:27:15,376 --> 00:27:17,576
这里我们有一部测试 iPhone

872
00:27:17,576 --> 00:27:20,536
它现在在 AT&T 服务系统中

873
00:27:20,666 --> 00:27:22,026
让我们假设一个 App 正在

874
00:27:22,026 --> 00:27:23,276
使用 Visit 监测服务

875
00:27:23,876 --> 00:27:25,106
设备在此处静止了

876
00:27:25,106 --> 00:27:27,386
很长一段时间

877
00:27:27,606 --> 00:27:29,346
所以我们在状态栏

878
00:27:29,476 --> 00:27:30,896
显示了一个空心箭头

879
00:27:30,896 --> 00:27:33,196
因为 Core Location 没有

880
00:27:33,196 --> 00:27:35,626
向 App 发送新信息

881
00:27:35,886 --> 00:27:38,056
但是一旦用户起身

882
00:27:38,056 --> 00:27:40,046
并开始朝向

883
00:27:40,046 --> 00:27:41,826
Ferry Building方向移动

884
00:27:41,826 --> 00:27:43,246
Core Location 会检测到

885
00:27:43,246 --> 00:27:44,576
这个离开行为并通知

886
00:27:44,576 --> 00:27:44,836
App

887
00:27:45,716 --> 00:27:48,046
这会导致一个实心

888
00:27:48,046 --> 00:27:49,666
箭头在状态栏

889
00:27:49,666 --> 00:27:51,046
显示几秒

890
00:27:51,746 --> 00:27:53,146
当用户继续移动时

891
00:27:53,146 --> 00:27:56,056
这个箭头会回归

892
00:27:56,056 --> 00:27:58,716
空心状态并且它会

893
00:27:58,716 --> 00:28:00,676
继续保持空心直到

894
00:27:58,716 --> 00:28:00,676
继续保持空心直到

895
00:28:00,676 --> 00:28:02,486
Core Location 检测到用户已经到达

896
00:28:03,586 --> 00:28:05,176
在它检测到这个之后

897
00:28:05,176 --> 00:28:07,476
它会再次启动 App

898
00:28:07,476 --> 00:28:09,116
这个 App 会接收到

899
00:28:09,116 --> 00:28:11,566
一个实心箭头并停留

900
00:28:11,566 --> 00:28:13,166
几秒钟然后

901
00:28:13,166 --> 00:28:15,016
之后它就会保持空心

902
00:28:15,436 --> 00:28:17,086
直到用户从那个位置

903
00:28:17,086 --> 00:28:17,646
离开

904
00:28:18,636 --> 00:28:19,656
我们真的希望这个

905
00:28:19,656 --> 00:28:21,166
新政策能帮助用户

906
00:28:21,166 --> 00:28:23,766
更好地了解你的 App

907
00:28:23,766 --> 00:28:24,856
何时以及如何获取

908
00:28:24,856 --> 00:28:26,956
他们的位置信息 我们认为

909
00:28:26,956 --> 00:28:29,386
这会使用户不再因为

910
00:28:29,386 --> 00:28:31,096
你的 App 实际没做的事

911
00:28:31,096 --> 00:28:32,136
而责怪它

912
00:28:35,436 --> 00:28:36,926
这就是今天我们要讲的内容

913
00:28:37,126 --> 00:28:38,456
回顾一下 我希望

914
00:28:38,696 --> 00:28:40,906
你们记住重要的

915
00:28:40,906 --> 00:28:41,566
三点

916
00:28:42,756 --> 00:28:45,976
首先 用户对于你的 App

917
00:28:46,226 --> 00:28:48,616
获取他们的位置拥有更多

918
00:28:48,616 --> 00:28:49,196
控制权

919
00:28:49,816 --> 00:28:52,346
具体来说 如果你请求的是Always 授权

920
00:28:52,346 --> 00:28:53,586
用户现可以给予你的 App WhenInUse

921
00:28:53,586 --> 00:28:55,246
授权 

922
00:28:55,246 --> 00:28:56,186


923
00:28:56,766 --> 00:29:00,226
我们一直建议你

924
00:28:56,766 --> 00:29:00,226
我们一直建议你

925
00:29:00,226 --> 00:29:01,456
和用户沟通并

926
00:29:01,456 --> 00:29:02,996
帮助他们理解为什么

927
00:29:02,996 --> 00:29:04,036
你的 App 想要

928
00:29:04,036 --> 00:29:06,326
获取位置 但是请求

929
00:29:06,326 --> 00:29:07,886
Always 授权的 App

930
00:29:07,916 --> 00:29:09,776
有更大的责任

931
00:29:10,476 --> 00:29:11,956
如果用户不明白

932
00:29:11,956 --> 00:29:13,576
为什么你的 App 想要

933
00:29:13,576 --> 00:29:15,606
Always 授权 那么

934
00:29:15,606 --> 00:29:16,866
他们有可能不会

935
00:29:16,866 --> 00:29:17,136
给你这个授权

936
00:29:17,336 --> 00:29:18,276
他们反而很有可能

937
00:29:18,276 --> 00:29:20,076
给你 WhenInUse 授权

938
00:29:21,876 --> 00:29:23,886
所以如果你想要

939
00:29:23,886 --> 00:29:25,506
Always 授权那么

940
00:29:25,506 --> 00:29:26,926
你就承担了更大责任

941
00:29:27,276 --> 00:29:29,246
我们觉得你和用户沟通的最佳办法是

942
00:29:29,246 --> 00:29:30,376
帮助他们理解为什么

943
00:29:30,376 --> 00:29:32,456
你要 Always 授权

944
00:29:33,356 --> 00:29:34,916
要最大限度地提高

945
00:29:34,916 --> 00:29:36,856
你从用户那里获得

946
00:29:36,856 --> 00:29:38,296
Always 授权的机会

947
00:29:38,296 --> 00:29:40,166
就是给他们

948
00:29:40,166 --> 00:29:41,966
一个我之前谈到过的

949
00:29:41,966 --> 00:29:42,376
背景信息

950
00:29:42,906 --> 00:29:45,946
让他们直观地

951
00:29:45,946 --> 00:29:46,596
理解

952
00:29:46,596 --> 00:29:48,136
让他们用 WhenInUse 授权

953
00:29:48,136 --> 00:29:50,136
探索你的 App

954
00:29:50,136 --> 00:29:51,826
然后当他们试图

955
00:29:51,826 --> 00:29:53,226
启用需要 Always

956
00:29:53,226 --> 00:29:55,276
授权的功能时

957
00:29:55,276 --> 00:29:57,106
然后你就发起转换提示

958
00:29:57,106 --> 00:29:58,596
他们在那时就几乎

959
00:29:58,596 --> 00:29:59,976
一定会给予你的 App

960
00:29:59,976 --> 00:30:00,466
授权

961
00:29:59,976 --> 00:30:00,466
授权

962
00:30:01,386 --> 00:30:02,226
感谢你们参与

963
00:30:02,276 --> 00:30:03,696
如果你们想了解更多

964
00:30:03,696 --> 00:30:04,996
我们在网上有一些补充

965
00:30:04,996 --> 00:30:05,436
资料

966
00:30:05,756 --> 00:30:07,576
比如我们更新了 PotLoc App

967
00:30:07,656 --> 00:30:09,616
所以你会发现

968
00:30:09,996 --> 00:30:11,246
有一些新的好东西

969
00:30:11,246 --> 00:30:11,386
和你分享

970
00:30:13,436 --> 00:30:14,576
我们还建议你看看

971
00:30:14,576 --> 00:30:15,506
这些相关会议

972
00:30:15,506 --> 00:30:16,816
我刚刚已经提到了

973
00:30:16,816 --> 00:30:19,626
Core Motion one 但是

974
00:30:19,626 --> 00:30:21,226
这周早些时候的隐私会议

975
00:30:21,536 --> 00:30:22,826
同样非常棒 并且它有

976
00:30:22,826 --> 00:30:24,196
很好的建议来帮助你

977
00:30:24,196 --> 00:30:25,626
构建一个尊重用户隐私

978
00:30:25,626 --> 00:30:26,526
的 App

979
00:30:27,676 --> 00:30:28,896
感谢你们的时间

980
00:30:28,896 --> 00:30:29,976
我希望你们开心度过接下来的 WWDC 
