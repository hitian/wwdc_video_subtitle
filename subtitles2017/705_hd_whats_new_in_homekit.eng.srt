1
00:00:00,506 --> 00:00:26,576
[ Applause ]

2
00:00:27,076 --> 00:00:27,486
&gt;&gt; Thank you.

3
00:00:27,766 --> 00:00:29,226
Welcome everybody.

4
00:00:29,776 --> 00:00:30,606
Good morning.

5
00:00:31,036 --> 00:00:31,466
It's early.

6
00:00:31,556 --> 00:00:32,386
I hope you had your coffee.

7
00:00:32,386 --> 00:00:33,496
We have a lot to talk about

8
00:00:33,496 --> 00:00:33,736
today.

9
00:00:34,686 --> 00:00:35,546
Welcome to what's new in

10
00:00:35,546 --> 00:00:35,986
HomeKit.

11
00:00:35,986 --> 00:00:39,456
In iOS 11, watchOS 4 and tvvOS

12
00:00:39,456 --> 00:00:39,886
11.

13
00:00:40,326 --> 00:00:42,476
We have a ton of great features

14
00:00:42,476 --> 00:00:43,346
and enhancements we'd like to

15
00:00:43,346 --> 00:00:45,226
talk to you today about.

16
00:00:46,276 --> 00:00:47,876
First, we will be providing an

17
00:00:47,876 --> 00:00:49,706
overview of HomeKit as a

18
00:00:49,706 --> 00:00:50,176
framework.

19
00:00:50,716 --> 00:00:53,166
Second, we're going to be

20
00:00:53,166 --> 00:00:53,866
talking about some of the

21
00:00:53,866 --> 00:00:55,106
updates and enhancements to the

22
00:00:55,106 --> 00:00:56,886
HomeKit framework in iOS 11.

23
00:00:57,436 --> 00:01:00,376
And Praveen will be sharing some

24
00:00:57,436 --> 00:01:00,376
And Praveen will be sharing some

25
00:01:00,376 --> 00:01:01,826
exciting news about our

26
00:01:01,826 --> 00:01:02,716
accessory ecosystem.

27
00:01:08,046 --> 00:01:10,076
The HomeKit framework allows

28
00:01:10,076 --> 00:01:12,216
your apps to easily set up and

29
00:01:12,216 --> 00:01:14,146
control your HomeKit

30
00:01:14,146 --> 00:01:14,886
accessories.

31
00:01:15,866 --> 00:01:17,886
HomeKit provides a central store

32
00:01:18,356 --> 00:01:19,746
for the configuration of your

33
00:01:19,746 --> 00:01:21,956
home, including rooms,

34
00:01:22,486 --> 00:01:24,926
accessories, automations and

35
00:01:24,926 --> 00:01:25,136
more.

36
00:01:25,696 --> 00:01:27,866
This configuration is

37
00:01:27,866 --> 00:01:29,096
synchronized across all of your

38
00:01:29,096 --> 00:01:30,816
apps and devices.

39
00:01:32,086 --> 00:01:33,946
And HomeKit is deeply integrated

40
00:01:34,306 --> 00:01:36,976
in iOS, Watch OS and TV OS.

41
00:01:46,096 --> 00:01:47,846
You can control your accessories

42
00:01:48,226 --> 00:01:49,916
and scenes directly with your

43
00:01:49,916 --> 00:01:54,466
voice, using Siri, or using the

44
00:01:55,426 --> 00:01:57,776
Home app, you can control all of

45
00:01:57,776 --> 00:02:00,726
your accessories from any of

46
00:01:57,776 --> 00:02:00,726
your accessories from any of

47
00:02:00,726 --> 00:02:01,406
your devices.

48
00:02:01,936 --> 00:02:08,026
And with just a swipe and a tap,

49
00:02:08,026 --> 00:02:09,256
you can control your favorite

50
00:02:09,256 --> 00:02:11,396
scenes and accessories right

51
00:02:11,396 --> 00:02:12,986
from Control Center, and it has

52
00:02:13,086 --> 00:02:15,106
really never been easier for you

53
00:02:15,106 --> 00:02:16,976
to control your home.

54
00:02:19,196 --> 00:02:21,906
And with an Apple TV or iPad as

55
00:02:21,906 --> 00:02:23,816
your Home Hub, you can control

56
00:02:23,816 --> 00:02:25,396
your accessories from just about

57
00:02:25,396 --> 00:02:26,746
anywhere in the world.

58
00:02:27,686 --> 00:02:29,506
And we are happy to say that in

59
00:02:29,506 --> 00:02:30,906
addition to being a fantastic

60
00:02:30,906 --> 00:02:33,156
speaker, the Home Pod will also

61
00:02:33,156 --> 00:02:34,786
be added as a Home Hub later

62
00:02:34,866 --> 00:02:35,396
this year.

63
00:02:36,016 --> 00:02:39,316
And with a compatible home hub,

64
00:02:40,146 --> 00:02:42,396
your home can be automated via

65
00:02:42,436 --> 00:02:44,106
time and event-based triggers.

66
00:02:44,646 --> 00:02:47,806
And with over 70 accessory

67
00:02:47,806 --> 00:02:50,136
manufacturers, either bringing

68
00:02:50,136 --> 00:02:51,846
accessories to market or already

69
00:02:51,846 --> 00:02:52,906
have accessories on the market,

70
00:02:53,416 --> 00:02:54,556
the number of HomeKit

71
00:02:54,556 --> 00:02:56,006
accessories continues to grow

72
00:02:56,406 --> 00:02:57,036
month over month.

73
00:02:57,506 --> 00:02:58,566
It is super exciting.

74
00:03:00,056 --> 00:03:05,436
We have a number of new features

75
00:03:05,436 --> 00:03:07,786
to talk about in iOS 11 and

76
00:03:07,786 --> 00:03:09,666
today we are going to focus on

77
00:03:09,666 --> 00:03:10,536
event triggers.

78
00:03:11,096 --> 00:03:14,716
Today, I'm happy to say that we

79
00:03:14,716 --> 00:03:18,316
are introducing New Events, New

80
00:03:19,396 --> 00:03:23,186
Conditions, support for End

81
00:03:24,156 --> 00:03:27,016
Events, and Recurrences.

82
00:03:28,506 --> 00:03:30,446
And finally we are talking about

83
00:03:30,676 --> 00:03:33,176
the enhancement for Mutable

84
00:03:33,306 --> 00:03:33,806
Events.

85
00:03:35,316 --> 00:03:36,336
But before we dive into what is

86
00:03:36,336 --> 00:03:38,196
new, I'd like to do a quick

87
00:03:38,196 --> 00:03:39,916
overview of Event Triggers.

88
00:03:40,426 --> 00:03:45,826
Event Triggers center around

89
00:03:45,826 --> 00:03:46,406
events.

90
00:03:47,666 --> 00:03:49,656
When an event fires, it

91
00:03:49,656 --> 00:03:51,746
activates a trigger, and you can

92
00:03:51,746 --> 00:03:53,306
have one or more events

93
00:03:53,306 --> 00:03:54,866
associated to an event trigger.

94
00:03:55,946 --> 00:03:57,856
We support two different types

95
00:03:57,886 --> 00:03:59,086
of events today.

96
00:03:59,726 --> 00:04:01,666
The first, when the state of an

97
00:03:59,726 --> 00:04:01,666
The first, when the state of an

98
00:04:01,666 --> 00:04:03,506
accessory changes, such as

99
00:04:03,586 --> 00:04:05,646
opening of a door, or turning on

100
00:04:06,206 --> 00:04:07,706
a light.

101
00:04:07,966 --> 00:04:09,526
Second, we support when a device

102
00:04:09,526 --> 00:04:11,596
enters or leaves a geo region.

103
00:04:14,076 --> 00:04:19,396
And when an event fires, and the

104
00:04:19,396 --> 00:04:21,185
event trigger activates, it

105
00:04:21,185 --> 00:04:23,056
executes one or more scenes.

106
00:04:23,756 --> 00:04:25,606
And a scene is comprised of one

107
00:04:25,606 --> 00:04:27,356
or more actions, such as

108
00:04:28,036 --> 00:04:30,186
unlocking my door, or turning on

109
00:04:30,186 --> 00:04:30,786
my lights.

110
00:04:34,816 --> 00:04:37,266
And you can gate the execution

111
00:04:37,526 --> 00:04:39,436
of a scene when a trigger is

112
00:04:39,436 --> 00:04:41,486
activated via conditions.

113
00:04:42,346 --> 00:04:43,886
And we support a number of

114
00:04:43,886 --> 00:04:45,306
different types of conditions.

115
00:04:46,146 --> 00:04:49,606
First, based on the current

116
00:04:50,336 --> 00:04:50,446
time.

117
00:04:53,116 --> 00:04:55,646
Second, based on the current

118
00:04:55,696 --> 00:04:57,126
state of an accessory.

119
00:04:57,536 --> 00:04:59,746
Excuse me.

120
00:04:59,976 --> 00:05:04,586
And last, based on the relative

121
00:04:59,976 --> 00:05:04,586
And last, based on the relative

122
00:05:04,676 --> 00:05:07,876
time to significant events, such

123
00:05:07,876 --> 00:05:13,026
as sunrise and sunset.

124
00:05:13,706 --> 00:05:20,366
Now, as an example, When we

125
00:05:21,286 --> 00:05:26,076
arrive home and we open our

126
00:05:26,076 --> 00:05:27,856
door, and in this case, opening

127
00:05:27,856 --> 00:05:29,356
the door is our event.

128
00:05:29,726 --> 00:05:33,816
And after dark, this is our

129
00:05:33,816 --> 00:05:34,336
condition.

130
00:05:34,896 --> 00:05:37,226
And it is based on a significant

131
00:05:37,226 --> 00:05:38,266
event of sunset.

132
00:05:39,446 --> 00:05:41,506
We want to say execute our

133
00:05:41,506 --> 00:05:43,156
arrive home scene.

134
00:05:44,486 --> 00:05:45,996
And that is an event trigger.

135
00:05:46,536 --> 00:05:49,926
And we have a number of

136
00:05:49,926 --> 00:05:51,856
enhancements and new features

137
00:05:51,856 --> 00:05:52,626
for event triggers.

138
00:05:53,176 --> 00:05:55,206
The first of which is support

139
00:05:55,206 --> 00:05:57,886
for date-based events, via

140
00:05:57,886 --> 00:05:58,716
HMCalendarEvent.

141
00:05:59,826 --> 00:06:01,766
This provides an improved

142
00:05:59,826 --> 00:06:01,766
This provides an improved

143
00:06:01,886 --> 00:06:03,846
scheduling capability over HM

144
00:06:03,846 --> 00:06:04,666
timer triggers.

145
00:06:05,236 --> 00:06:06,616
You can now take advantage of

146
00:06:06,616 --> 00:06:07,526
all the features of the

147
00:06:07,576 --> 00:06:09,936
triggers, such as conditions,

148
00:06:10,266 --> 00:06:11,176
and some of the other features

149
00:06:11,176 --> 00:06:12,366
we are going to be talking about

150
00:06:12,366 --> 00:06:12,726
shortly.

151
00:06:13,616 --> 00:06:16,476
And we support dates based on

152
00:06:16,506 --> 00:06:19,876
year, month, day, and hour

153
00:06:19,996 --> 00:06:20,846
minute combination.

154
00:06:21,386 --> 00:06:24,316
Now, as an example, let's go

155
00:06:24,316 --> 00:06:25,586
ahead and create an event

156
00:06:25,586 --> 00:06:27,916
trigger which executes at 5:30

157
00:06:27,916 --> 00:06:29,316
p.m. every day.

158
00:06:29,866 --> 00:06:32,786
First, we are going to create

159
00:06:32,786 --> 00:06:33,806
our date component.

160
00:06:34,696 --> 00:06:35,586
In this case, we are going to

161
00:06:35,586 --> 00:06:37,896
set two properties, the hour

162
00:06:37,896 --> 00:06:40,756
property to 17, indicates 5:00

163
00:06:40,856 --> 00:06:43,376
p.m. Second, we are going to set

164
00:06:43,376 --> 00:06:45,046
the minute property to 30, and

165
00:06:45,316 --> 00:06:47,416
this indicates 30 minutes after

166
00:06:47,416 --> 00:06:52,566
5:00 p.m. We then simply create

167
00:06:52,566 --> 00:06:56,206
our HMCalendarEvent, and we

168
00:06:56,386 --> 00:06:58,106
specify our recently created

169
00:06:58,376 --> 00:06:59,116
date component.

170
00:06:59,746 --> 00:07:02,256
Now, we have just created an

171
00:06:59,746 --> 00:07:02,256
Now, we have just created an

172
00:07:02,256 --> 00:07:05,466
event which will fire at 5:30

173
00:07:05,906 --> 00:07:06,376
every day.

174
00:07:07,406 --> 00:07:09,196
We then simply create our

175
00:07:09,196 --> 00:07:14,606
HMEventTrigger, and we're going

176
00:07:14,606 --> 00:07:15,596
to give it a friendly name.

177
00:07:15,596 --> 00:07:17,066
In this case, we are going to

178
00:07:17,066 --> 00:07:19,046
call it Every day at 5:30 p.m.,

179
00:07:19,046 --> 00:07:21,346
and then we specify our

180
00:07:21,346 --> 00:07:22,926
collection of events.

181
00:07:23,036 --> 00:07:24,316
In this case, a single event,

182
00:07:24,656 --> 00:07:26,086
our HMCalendarEvent.

183
00:07:26,736 --> 00:07:29,226
And now, in iOS 11, it is that

184
00:07:29,226 --> 00:07:30,556
easy to create event-based

185
00:07:30,556 --> 00:07:32,366
triggers based on times of the

186
00:07:32,366 --> 00:07:34,226
day or specific dates.

187
00:07:34,986 --> 00:07:36,716
We have also added support for

188
00:07:36,716 --> 00:07:38,986
significant time events, via

189
00:07:38,986 --> 00:07:40,446
HMSignificantTimeEvent.

190
00:07:40,916 --> 00:07:44,036
This activates on significant

191
00:07:44,266 --> 00:07:48,816
events, such as sunrise, and

192
00:07:48,816 --> 00:07:49,186
sunset.

193
00:07:49,796 --> 00:07:52,726
And we support a relative time

194
00:07:52,726 --> 00:07:53,846
offset to these significant

195
00:07:53,846 --> 00:07:56,276
events, both positive and

196
00:07:56,276 --> 00:07:56,626
negative.

197
00:07:57,296 --> 00:08:00,266
And this means you can schedule

198
00:07:57,296 --> 00:08:00,266
And this means you can schedule

199
00:08:00,266 --> 00:08:02,396
events to fire, say one hour

200
00:08:02,866 --> 00:08:03,806
after sunrise.

201
00:08:03,806 --> 00:08:06,376
Now, let's go ahead and create

202
00:08:06,516 --> 00:08:07,546
another event trigger.

203
00:08:07,596 --> 00:08:10,266
This time, we want it to fire at

204
00:08:10,646 --> 00:08:13,876
sunrise every day.

205
00:08:19,046 --> 00:08:19,396
There we go.

206
00:08:20,076 --> 00:08:21,326
First, we create our

207
00:08:21,326 --> 00:08:23,556
HMSignificantTimeEvent, and we

208
00:08:23,556 --> 00:08:25,586
are going to specify sunrise as

209
00:08:25,586 --> 00:08:27,236
our significant event.

210
00:08:27,876 --> 00:08:31,416
And we also specify our offset

211
00:08:31,806 --> 00:08:32,206
to be nil.

212
00:08:34,506 --> 00:08:36,035
Now, this indicates that we want

213
00:08:36,035 --> 00:08:38,616
our event to fire at sunrise,

214
00:08:38,726 --> 00:08:40,666
not before, and not after.

215
00:08:41,525 --> 00:08:42,716
We then simply create our

216
00:08:42,716 --> 00:08:44,516
HMEventTrigger, same as we did

217
00:08:44,516 --> 00:08:47,406
before, and we specify this time

218
00:08:47,406 --> 00:08:49,166
our sunrise event as a single

219
00:08:49,396 --> 00:08:50,366
firing event.

220
00:08:54,256 --> 00:08:58,196
We've also added a convenience

221
00:08:58,726 --> 00:09:01,636
to iOS 11 to allow you to easily

222
00:08:58,726 --> 00:09:01,636
to iOS 11 to allow you to easily

223
00:09:01,636 --> 00:09:03,696
create a condition which is

224
00:09:03,696 --> 00:09:05,606
between two significant events,

225
00:09:06,446 --> 00:09:08,306
and note, that because these

226
00:09:08,306 --> 00:09:09,426
take significant events, they

227
00:09:09,426 --> 00:09:10,966
support a relative time offset.

228
00:09:11,896 --> 00:09:14,166
So, for instance, I can create a

229
00:09:14,166 --> 00:09:15,686
condition which gates the

230
00:09:15,686 --> 00:09:18,776
execution of my scene from say

231
00:09:19,076 --> 00:09:21,336
one hour after sunset, to one

232
00:09:21,336 --> 00:09:22,756
hour before sunrise.

233
00:09:23,896 --> 00:09:25,136
This is available on

234
00:09:25,136 --> 00:09:27,906
HMEventTrigger via predicate for

235
00:09:27,906 --> 00:09:29,486
evaluating trigger occurring

236
00:09:29,486 --> 00:09:31,686
between significant events.

237
00:09:33,436 --> 00:09:37,596
In iOS 11, we have also added

238
00:09:37,596 --> 00:09:40,676
support for creating a event

239
00:09:41,076 --> 00:09:42,056
which executes when a

240
00:09:42,316 --> 00:09:44,586
characteristic value crosses a

241
00:09:44,676 --> 00:09:46,266
threshold value.

242
00:09:46,946 --> 00:09:50,836
Now, for example, we could

243
00:09:50,836 --> 00:09:52,756
execute when the temperature

244
00:09:52,956 --> 00:09:55,956
rises above 76 degrees in our

245
00:09:57,226 --> 00:09:57,326
home.

246
00:09:58,776 --> 00:10:00,856
We could also execute when the

247
00:09:58,776 --> 00:10:00,856
We could also execute when the

248
00:10:00,856 --> 00:10:03,396
temperature drops below 68

249
00:10:03,836 --> 00:10:05,636
degrees in our home.

250
00:10:06,256 --> 00:10:08,166
And finally, we could execute

251
00:10:08,166 --> 00:10:10,146
when the temperature is between

252
00:10:10,306 --> 00:10:12,756
68 and say 76 degrees in our

253
00:10:12,756 --> 00:10:12,976
home.

254
00:10:12,976 --> 00:10:15,856
Now, let's go ahead and build an

255
00:10:15,856 --> 00:10:16,296
example.

256
00:10:16,776 --> 00:10:18,736
We want to create an event

257
00:10:18,736 --> 00:10:20,546
trigger which executes when the

258
00:10:20,546 --> 00:10:21,886
temperature in our home rises

259
00:10:21,886 --> 00:10:23,666
above 76 degrees.

260
00:10:24,256 --> 00:10:27,306
To do this, we first create an

261
00:10:27,306 --> 00:10:28,116
HMNumberRange.

262
00:10:28,666 --> 00:10:31,156
Now, note, HMNumberRange is what

263
00:10:31,156 --> 00:10:32,516
specifies our range between a

264
00:10:32,516 --> 00:10:34,216
minimum and maximum value.

265
00:10:34,216 --> 00:10:36,056
And we have provided two

266
00:10:36,056 --> 00:10:37,786
convenience initializers for you

267
00:10:37,786 --> 00:10:38,996
to create a range within a

268
00:10:38,996 --> 00:10:41,736
minimum or a maximum value only.

269
00:10:42,706 --> 00:10:44,426
In this case, we are providing

270
00:10:44,426 --> 00:10:46,846
the minimum value to be 76.

271
00:10:47,876 --> 00:10:49,076
And our maximum value in this

272
00:10:49,076 --> 00:10:50,806
case is an arbitrary large

273
00:10:50,806 --> 00:10:52,326
number, let's say it is positive

274
00:10:52,326 --> 00:10:52,756
infinity.

275
00:10:53,316 --> 00:10:55,646
We then create our HM

276
00:10:55,646 --> 00:10:57,156
Characteristic Threshold Range

277
00:10:57,156 --> 00:10:57,526
Event.

278
00:10:58,476 --> 00:10:59,486
And we specify our target

279
00:10:59,486 --> 00:11:00,216
characteristic.

280
00:10:59,486 --> 00:11:00,216
characteristic.

281
00:11:01,066 --> 00:11:02,276
In this case, it is a

282
00:11:02,386 --> 00:11:03,426
temperature characteristic,

283
00:11:03,426 --> 00:11:04,876
which can be a temperature

284
00:11:04,876 --> 00:11:06,386
sensor, or it can be a

285
00:11:06,386 --> 00:11:06,906
thermostat.

286
00:11:08,556 --> 00:11:09,906
We then simply provide our

287
00:11:09,906 --> 00:11:11,456
threshold range, which was our

288
00:11:11,456 --> 00:11:13,606
recently created range of 76

289
00:11:13,736 --> 00:11:14,266
degrees.

290
00:11:14,776 --> 00:11:17,686
We then, as we've done before,

291
00:11:17,966 --> 00:11:20,036
create our HMEventTrigger, and

292
00:11:20,036 --> 00:11:22,946
this time, we specify our single

293
00:11:22,946 --> 00:11:24,936
firing event, which is our

294
00:11:25,876 --> 00:11:28,076
characteristic threshold range

295
00:11:28,076 --> 00:11:28,396
event.

296
00:11:28,836 --> 00:11:32,146
There we go.

297
00:11:32,996 --> 00:11:36,296
Now, the state of our homes are

298
00:11:36,326 --> 00:11:37,826
often tied to whether or not

299
00:11:37,826 --> 00:11:39,626
users are in or out of the home.

300
00:11:41,136 --> 00:11:42,856
For instance, I don't like to

301
00:11:42,856 --> 00:11:44,536
run my air conditioning or have

302
00:11:44,536 --> 00:11:47,326
lights on in my home when no one

303
00:11:47,326 --> 00:11:47,926
is home.

304
00:11:48,966 --> 00:11:50,286
I am happy to say that in iOS

305
00:11:50,286 --> 00:11:52,396
11, this is now supported via

306
00:11:52,396 --> 00:11:53,566
HMPresenceEvent [applause].

307
00:11:54,676 --> 00:11:57,816
It is super cool.

308
00:11:57,906 --> 00:11:58,526
You are going to love it.

309
00:11:59,556 --> 00:12:01,216
We support a number of different

310
00:11:59,556 --> 00:12:01,216
We support a number of different

311
00:12:01,216 --> 00:12:01,966
types of events.

312
00:12:02,366 --> 00:12:05,436
Excuse me.

313
00:12:05,916 --> 00:12:07,806
There we go.

314
00:12:08,486 --> 00:12:10,396
First, when the current user,

315
00:12:10,856 --> 00:12:12,996
that is the device that we are

316
00:12:13,936 --> 00:12:16,396
talking about, arrives home.

317
00:12:16,936 --> 00:12:23,186
On the other hand, we can also

318
00:12:23,186 --> 00:12:24,466
support when the current user

319
00:12:25,496 --> 00:12:25,956
leaves home.

320
00:12:27,546 --> 00:12:29,786
Now, these two replace, or don't

321
00:12:29,786 --> 00:12:31,576
replace, but they augment

322
00:12:31,576 --> 00:12:33,546
HMLocationEvents, but instead of

323
00:12:33,546 --> 00:12:35,236
tracking a single device, they

324
00:12:35,236 --> 00:12:36,356
now track a user.

325
00:12:37,796 --> 00:12:40,286
We've also added support for

326
00:12:40,286 --> 00:12:41,586
multiple users of the home, in

327
00:12:41,586 --> 00:12:42,776
fact, all users of the home.

328
00:12:43,676 --> 00:12:45,876
For instance, we support when

329
00:12:45,876 --> 00:12:47,576
the last user leaves home.

330
00:12:48,606 --> 00:12:50,496
Now note, this indicates that

331
00:12:50,496 --> 00:12:52,106
your home is now unoccupied.

332
00:12:52,976 --> 00:12:54,126
It is a good time to do things

333
00:12:54,126 --> 00:12:55,756
such as turn off the lights,

334
00:12:56,286 --> 00:12:57,526
turn down the air conditioning,

335
00:12:58,586 --> 00:12:59,586
even lock the doors.

336
00:13:00,096 --> 00:13:03,926
And finally, of course, we

337
00:13:03,926 --> 00:13:05,316
support when the first user

338
00:13:05,316 --> 00:13:05,996
arrives home.

339
00:13:06,726 --> 00:13:07,676
And this indicates that your

340
00:13:07,676 --> 00:13:09,936
home is now occupied, and in

341
00:13:09,936 --> 00:13:11,396
this case, it may be good for

342
00:13:11,396 --> 00:13:13,026
you to do things like turn down

343
00:13:13,026 --> 00:13:14,606
the air conditioning, turn on

344
00:13:14,606 --> 00:13:16,506
some lights, unlock the doors.

345
00:13:16,506 --> 00:13:18,936
Now, let's go ahead and build

346
00:13:18,936 --> 00:13:20,336
this last example, where we

347
00:13:20,336 --> 00:13:21,916
create an event trigger which

348
00:13:21,916 --> 00:13:23,286
executes when the first user

349
00:13:23,286 --> 00:13:23,956
arrives home.

350
00:13:26,416 --> 00:13:28,286
First, we create our

351
00:13:28,286 --> 00:13:30,696
HMPresenceEvent, and we are

352
00:13:30,696 --> 00:13:31,906
going to specify our presence

353
00:13:31,906 --> 00:13:34,466
type to be any user at home.

354
00:13:35,416 --> 00:13:36,726
Now, this indicates that we want

355
00:13:36,726 --> 00:13:40,526
our event to fire when the first

356
00:13:40,526 --> 00:13:41,826
user arrives home.

357
00:13:42,376 --> 00:13:44,816
We then, just as we have done

358
00:13:44,816 --> 00:13:46,686
before, create an

359
00:13:47,106 --> 00:13:48,886
HMEventTrigger, and we specify

360
00:13:48,886 --> 00:13:50,446
our single firing event, in this

361
00:13:50,446 --> 00:13:52,346
case, which is our presence

362
00:13:52,386 --> 00:13:52,786
event.

363
00:13:53,396 --> 00:13:55,716
And you probably know what I am

364
00:13:55,716 --> 00:13:57,076
going to say, but it really is

365
00:13:57,076 --> 00:14:00,116
that easy in iOS 11 to create

366
00:13:57,076 --> 00:14:00,116
that easy in iOS 11 to create

367
00:14:00,116 --> 00:14:02,236
user presence based automations,

368
00:14:02,266 --> 00:14:03,946
and it is super cool, and we are

369
00:14:03,946 --> 00:14:05,306
super excited for you to try it

370
00:14:05,306 --> 00:14:06,826
out, and provide some enhanced

371
00:14:06,826 --> 00:14:08,366
features to your client, or your

372
00:14:08,366 --> 00:14:11,416
app users, excuse me.

373
00:14:12,226 --> 00:14:13,796
Now, we didn't stop there.

374
00:14:14,716 --> 00:14:17,216
We have also added support for

375
00:14:17,436 --> 00:14:19,656
user presence conditions.

376
00:14:20,956 --> 00:14:23,676
Now, for example, let's say that

377
00:14:23,676 --> 00:14:25,986
normally we want to execute our

378
00:14:25,986 --> 00:14:27,876
good morning scene when we wake

379
00:14:27,876 --> 00:14:29,716
up, or when the sun rises.

380
00:14:30,226 --> 00:14:34,316
But it doesn't make sense for us

381
00:14:34,316 --> 00:14:35,816
to execute this if no one is

382
00:14:35,816 --> 00:14:36,016
home.

383
00:14:36,586 --> 00:14:39,726
In iOS 11, you can now gate the

384
00:14:39,726 --> 00:14:41,806
execution of scenes based on

385
00:14:41,806 --> 00:14:44,106
user presence via user presence

386
00:14:44,106 --> 00:14:44,806
conditions.

387
00:14:48,516 --> 00:14:49,856
This is available on

388
00:14:50,496 --> 00:14:53,516
HMEventTrigger via predicate for

389
00:14:53,516 --> 00:14:55,146
evaluating trigger with

390
00:14:55,266 --> 00:14:55,836
presence.

391
00:14:56,666 --> 00:14:58,066
And note that it takes a

392
00:14:58,116 --> 00:14:58,876
presence event.

393
00:14:59,516 --> 00:15:05,006
Now, let's go ahead and add a

394
00:14:59,516 --> 00:15:05,006
Now, let's go ahead and add a

395
00:15:05,136 --> 00:15:07,006
presence condition to our

396
00:15:07,006 --> 00:15:08,996
previous sunrise event trigger

397
00:15:09,366 --> 00:15:11,776
and take a look at what it looks

398
00:15:14,876 --> 00:15:14,986
like.

399
00:15:15,836 --> 00:15:18,236
First, we are going to create

400
00:15:18,576 --> 00:15:20,276
our significant time event,

401
00:15:20,496 --> 00:15:21,596
which is our sunrise event,

402
00:15:22,006 --> 00:15:24,326
specifying no offset, same as we

403
00:15:24,326 --> 00:15:24,846
did before.

404
00:15:25,376 --> 00:15:27,106
We then create our

405
00:15:27,106 --> 00:15:30,576
HMPresenceEvent, again same as

406
00:15:30,576 --> 00:15:32,756
we did before, specifying any

407
00:15:32,756 --> 00:15:33,826
user at home.

408
00:15:34,396 --> 00:15:37,626
We then create our condition via

409
00:15:38,026 --> 00:15:41,356
HMEventTrigger, predicate for

410
00:15:41,356 --> 00:15:43,376
evaluating trigger with

411
00:15:43,406 --> 00:15:45,206
presence, and we specify our

412
00:15:45,206 --> 00:15:46,066
presenceEvent.

413
00:15:47,416 --> 00:15:49,046
And then we create our

414
00:15:49,046 --> 00:15:49,626
HMEventTrigger.

415
00:15:50,676 --> 00:15:52,976
Now, this time, we are going to

416
00:15:52,976 --> 00:15:55,176
specify our condition as the

417
00:15:55,176 --> 00:15:57,006
predicate for the event trigger.

418
00:15:59,206 --> 00:16:05,746
And now, and now we have just

419
00:15:59,206 --> 00:16:05,746
And now, and now we have just

420
00:16:05,746 --> 00:16:07,586
created an event trigger which

421
00:16:07,586 --> 00:16:09,916
will fire every day at sunrise,

422
00:16:10,216 --> 00:16:11,556
but will only execute the

423
00:16:11,556 --> 00:16:13,336
associated scenes when there is

424
00:16:13,336 --> 00:16:14,526
a user at home.

425
00:16:19,696 --> 00:16:22,156
If you're like me, we often want

426
00:16:22,156 --> 00:16:23,926
to execute a trigger, but only

427
00:16:23,926 --> 00:16:24,606
temporarily.

428
00:16:26,036 --> 00:16:29,516
For instance, when I open my

429
00:16:29,516 --> 00:16:32,846
patio door at night, I want my

430
00:16:32,846 --> 00:16:36,266
patio light to turn on, but

431
00:16:36,266 --> 00:16:38,866
after say 10 minutes, I want my

432
00:16:38,866 --> 00:16:40,436
patio light to turn off

433
00:16:41,016 --> 00:16:41,686
automatically.

434
00:16:42,466 --> 00:16:46,016
And this is now possible in iOS

435
00:16:46,016 --> 00:16:49,626
11 via EndEvents

436
00:16:49,689 --> 00:16:51,689
[ Applause ]

437
00:16:51,752 --> 00:16:53,752
.

438
00:16:53,816 --> 00:16:54,936
EndEvents are available on

439
00:16:54,936 --> 00:16:57,726
HMEventTrigger, and they return

440
00:16:57,726 --> 00:16:59,666
a collection of HMEvents.

441
00:17:00,226 --> 00:17:04,736
And you can update the existing

442
00:17:04,736 --> 00:17:07,866
events or EndEvents for an event

443
00:17:07,866 --> 00:17:10,036
trigger via update end events

444
00:17:10,096 --> 00:17:10,945
with completionHandler.

445
00:17:21,046 --> 00:17:22,675
Now, we have added a new event

446
00:17:23,336 --> 00:17:24,195
for EndEvents.

447
00:17:24,665 --> 00:17:25,866
HMDurationEvent.

448
00:17:26,516 --> 00:17:27,896
This allows you to specify a

449
00:17:27,896 --> 00:17:29,976
time interval from the trigger's

450
00:17:30,056 --> 00:17:32,406
execution time, at which point

451
00:17:32,406 --> 00:17:36,116
to end the event.

452
00:17:37,156 --> 00:17:39,646
Now, on a similar note, we often

453
00:17:39,646 --> 00:17:41,596
want a trigger to execute only

454
00:17:41,596 --> 00:17:44,656
on certain days of the week, and

455
00:17:44,656 --> 00:17:46,086
this is now possible via

456
00:17:46,186 --> 00:17:47,366
Recurrences.

457
00:17:49,096 --> 00:17:50,576
Recurrences are available on

458
00:17:50,646 --> 00:17:53,676
HMEventTrigger, and they return

459
00:17:53,856 --> 00:17:55,516
an optional collection of date

460
00:17:55,516 --> 00:17:57,246
components which specify the

461
00:17:57,246 --> 00:17:58,786
days of the week for which the

462
00:17:58,786 --> 00:18:00,136
trigger is active.

463
00:17:58,786 --> 00:18:00,136
trigger is active.

464
00:18:01,336 --> 00:18:03,256
And you can update an existing

465
00:18:03,256 --> 00:18:04,896
event trigger with new

466
00:18:04,896 --> 00:18:06,246
occurrences via Update

467
00:18:06,246 --> 00:18:08,066
Recurrences with

468
00:18:08,106 --> 00:18:08,976
completionHandler.

469
00:18:09,376 --> 00:18:13,606
Now, as an example, I like to

470
00:18:13,606 --> 00:18:15,016
get up just a little later on

471
00:18:15,016 --> 00:18:16,126
the weekends, as I'm sure many

472
00:18:16,126 --> 00:18:16,866
of you do.

473
00:18:17,246 --> 00:18:18,756
So I don't want my Good Morning

474
00:18:18,876 --> 00:18:20,616
Scene to automatically execute

475
00:18:20,966 --> 00:18:22,146
an hour after sunrise.

476
00:18:22,926 --> 00:18:25,606
Instead, I'd like to use Siri to

477
00:18:25,606 --> 00:18:26,756
go ahead and say, "Good

478
00:18:26,756 --> 00:18:27,066
morning."

479
00:18:27,826 --> 00:18:29,376
So let's go ahead and gate our

480
00:18:29,446 --> 00:18:31,386
previous sunrise event trigger

481
00:18:31,786 --> 00:18:34,856
to only execute during the week,

482
00:18:35,116 --> 00:18:36,516
Monday through Friday.

483
00:18:37,166 --> 00:18:41,546
To do this, we create our

484
00:18:41,546 --> 00:18:43,826
HMSignificantTimeEvent, same as

485
00:18:43,826 --> 00:18:44,486
we did before.

486
00:18:46,456 --> 00:18:51,176
Then we create our collection of

487
00:18:51,176 --> 00:18:52,106
DateComponents.

488
00:18:52,586 --> 00:18:53,616
We are going to call these

489
00:18:53,616 --> 00:18:57,656
weekdays, then for each day of

490
00:18:57,656 --> 00:18:59,826
the week, Monday through Friday,

491
00:19:00,416 --> 00:19:02,016
we create a new DateComponent,

492
00:19:02,176 --> 00:19:03,306
and we specify the weekday

493
00:19:03,386 --> 00:19:04,786
property to be the current day

494
00:19:04,786 --> 00:19:06,696
of the week, then we simply add

495
00:19:06,696 --> 00:19:08,476
this to our weekdays collection.

496
00:19:08,956 --> 00:19:12,566
And then when we create our

497
00:19:12,566 --> 00:19:15,666
HmeventTrigger, we specify our

498
00:19:15,666 --> 00:19:17,956
collection of recurrences, which

499
00:19:17,956 --> 00:19:19,676
are date components, as

500
00:19:19,676 --> 00:19:21,526
recurrences are of our

501
00:19:21,526 --> 00:19:22,066
EventTrigger.

502
00:19:23,316 --> 00:19:25,386
And this allows us to restrict

503
00:19:25,386 --> 00:19:28,076
the execution of event triggers

504
00:19:28,366 --> 00:19:34,506
based on the day of the week.

505
00:19:34,506 --> 00:19:36,826
But furthermore, we also

506
00:19:37,316 --> 00:19:38,586
sometimes want to create an

507
00:19:38,586 --> 00:19:40,326
event trigger which only

508
00:19:40,356 --> 00:19:42,336
executes once, and then auto

509
00:19:42,336 --> 00:19:43,206
disables itself.

510
00:19:45,216 --> 00:19:48,896
This is now possible via Execute

511
00:19:48,896 --> 00:19:49,266
Once.

512
00:19:49,936 --> 00:19:54,286
As an example, you may want to

513
00:19:54,416 --> 00:19:57,096
create an event trigger that

514
00:19:57,096 --> 00:19:58,826
executes tomorrow at sunset, but

515
00:19:59,816 --> 00:20:00,946
you don't want it to repeat.

516
00:19:59,816 --> 00:20:00,946
you don't want it to repeat.

517
00:20:01,636 --> 00:20:04,336
It is a great feature, and we

518
00:20:04,336 --> 00:20:05,266
are excited for you to try it

519
00:20:05,266 --> 00:20:05,416
out.

520
00:20:06,166 --> 00:20:07,426
This is available on

521
00:20:07,426 --> 00:20:10,916
HMEventTrigger via the Execute

522
00:20:10,916 --> 00:20:12,456
Once property, and you can

523
00:20:12,456 --> 00:20:16,106
update an existing or new event

524
00:20:16,106 --> 00:20:18,076
trigger to only execute one time

525
00:20:18,476 --> 00:20:20,436
via update executeOnce with

526
00:20:20,436 --> 00:20:21,296
completionHandler.

527
00:20:24,836 --> 00:20:28,086
The last, we've heard your

528
00:20:28,086 --> 00:20:29,966
feedback and we understand how

529
00:20:30,096 --> 00:20:31,766
difficult it currently is to

530
00:20:31,766 --> 00:20:34,556
update existing events on an

531
00:20:34,556 --> 00:20:35,216
event trigger.

532
00:20:36,586 --> 00:20:37,816
Let's take an example.

533
00:20:38,576 --> 00:20:39,676
If you were building an app and

534
00:20:39,676 --> 00:20:42,066
updating a single event, you

535
00:20:42,176 --> 00:20:43,826
first had to copy the properties

536
00:20:43,826 --> 00:20:45,146
of that event in your

537
00:20:45,146 --> 00:20:47,646
application, then you had to

538
00:20:47,646 --> 00:20:49,016
allow the user to modify that

539
00:20:49,016 --> 00:20:49,346
event.

540
00:20:50,686 --> 00:20:51,866
Once the user completed their

541
00:20:51,866 --> 00:20:53,766
changes, you had to create a

542
00:20:53,766 --> 00:20:56,456
brand new HMEvent with the new

543
00:20:56,456 --> 00:20:59,816
properties then you had to

544
00:20:59,816 --> 00:21:01,926
remove the existing event, via

545
00:20:59,816 --> 00:21:01,926
remove the existing event, via

546
00:21:01,926 --> 00:21:02,906
removeEvent with

547
00:21:02,906 --> 00:21:03,756
completionHandler.

548
00:21:04,436 --> 00:21:06,286
And then add the new event via

549
00:21:06,626 --> 00:21:08,346
addEvent with completionHandler.

550
00:21:08,946 --> 00:21:10,406
And this is a number of steps to

551
00:21:10,406 --> 00:21:11,816
update just one single event.

552
00:21:12,316 --> 00:21:15,256
And so in iOS 11 we have made it

553
00:21:15,296 --> 00:21:17,246
simpler via a single method

554
00:21:17,526 --> 00:21:18,446
updateEvents with

555
00:21:18,446 --> 00:21:19,256
completionHandler.

556
00:21:19,906 --> 00:21:21,576
Now this takes a collection of

557
00:21:21,576 --> 00:21:23,576
HMEvents which represent the new

558
00:21:23,576 --> 00:21:25,086
events for an event trigger.

559
00:21:25,176 --> 00:21:28,916
And we have also added support

560
00:21:29,186 --> 00:21:32,696
for all defined HMEvents for

561
00:21:32,696 --> 00:21:33,596
mutable copies.

562
00:21:34,766 --> 00:21:36,666
So what does this mean?

563
00:21:36,696 --> 00:21:37,786
You can now simply take a

564
00:21:37,786 --> 00:21:39,646
mutable copy of an existing

565
00:21:39,646 --> 00:21:42,556
event, make any changes the user

566
00:21:42,556 --> 00:21:44,576
has requested, and then commit

567
00:21:44,576 --> 00:21:46,326
those changes via updateOnce

568
00:21:46,706 --> 00:21:47,616
with completionHandler.

569
00:21:48,876 --> 00:21:50,026
Let's go ahead and see an

570
00:21:50,026 --> 00:21:51,616
example of updating our previous

571
00:21:51,676 --> 00:21:54,056
sunrise event trigger to execute

572
00:21:54,226 --> 00:21:56,696
30 minutes after sunrise.

573
00:22:00,476 --> 00:22:02,436
First, we get our existing

574
00:22:02,436 --> 00:22:03,286
HMEvent.

575
00:22:04,266 --> 00:22:05,736
We are going to-this will return

576
00:22:05,736 --> 00:22:07,386
an object of type

577
00:22:07,386 --> 00:22:08,626
HMSignificantTimeEvent.

578
00:22:10,196 --> 00:22:14,036
We then simply create a

579
00:22:14,036 --> 00:22:16,016
mutableCopy, which will return

580
00:22:16,016 --> 00:22:16,776
an object of type

581
00:22:16,776 --> 00:22:18,796
HMMutableSignificantTimeEvent.

582
00:22:19,396 --> 00:22:23,336
We can then update the offset of

583
00:22:23,336 --> 00:22:26,066
our sunrise event, by creating a

584
00:22:26,066 --> 00:22:26,896
new Date Component.

585
00:22:27,796 --> 00:22:29,026
We specify the minute property

586
00:22:29,026 --> 00:22:30,516
to 30, to indicated 30 minutes

587
00:22:30,516 --> 00:22:32,436
after the significant event, and

588
00:22:32,776 --> 00:22:34,796
then simply update the offset of

589
00:22:34,796 --> 00:22:37,386
our mutableSunriseEvent to our

590
00:22:37,386 --> 00:22:38,136
new date component.

591
00:22:38,976 --> 00:22:41,626
Now note, we haven't actually

592
00:22:41,626 --> 00:22:42,806
changed our event trigger yet.

593
00:22:42,806 --> 00:22:45,716
It will still execute at

594
00:22:46,016 --> 00:22:46,646
sunrise.

595
00:22:48,536 --> 00:22:50,856
So move our event trigger to 30

596
00:22:50,856 --> 00:22:52,176
minutes after sunrise, we simply

597
00:22:52,176 --> 00:22:54,576
need to call UpdateEvents, with

598
00:22:54,616 --> 00:22:56,136
completionHandler, providing a

599
00:22:56,136 --> 00:22:57,676
collection of new events.

600
00:22:58,386 --> 00:23:00,106
In this case, we simply pass our

601
00:22:58,386 --> 00:23:00,106
In this case, we simply pass our

602
00:23:00,106 --> 00:23:01,796
single mutableSunriseEvent.

603
00:23:02,556 --> 00:23:04,936
And now in iOS 11, it is that

604
00:23:04,986 --> 00:23:06,686
easy for your apps to update

605
00:23:06,686 --> 00:23:08,256
existing events on an

606
00:23:08,256 --> 00:23:08,976
HMEventTrigger.

607
00:23:17,056 --> 00:23:17,906
We've covered a tone of new

608
00:23:17,946 --> 00:23:19,706
topics and enhancements to

609
00:23:20,126 --> 00:23:21,246
HMEventTriggers.

610
00:23:21,896 --> 00:23:23,846
First, we have added support for

611
00:23:23,846 --> 00:23:26,756
new events, supporting dates.

612
00:23:27,706 --> 00:23:28,866
Significant events,

613
00:23:29,956 --> 00:23:31,806
characteristic threshold range,

614
00:23:32,196 --> 00:23:33,596
and user presence.

615
00:23:35,046 --> 00:23:36,586
We have added new conditions,

616
00:23:37,076 --> 00:23:38,526
supporting significant time

617
00:23:38,616 --> 00:23:41,316
ranges and user presence.

618
00:23:41,856 --> 00:23:47,776
We have added support, excuse

619
00:23:47,776 --> 00:23:50,566
me, for end events, which allow

620
00:23:50,566 --> 00:23:53,466
you to specify temporary event

621
00:23:53,466 --> 00:23:54,536
triggers which can

622
00:23:54,536 --> 00:23:56,046
auto-deactivate after a

623
00:23:56,046 --> 00:23:58,996
specified amount of time.

624
00:23:59,146 --> 00:24:00,486
We've added support for

625
00:23:59,146 --> 00:24:00,486
We've added support for

626
00:24:00,486 --> 00:24:03,086
recurrences which allow you to

627
00:24:03,086 --> 00:24:04,936
specify when your event trigger

628
00:24:06,226 --> 00:24:09,256
will be active and finally, we

629
00:24:09,256 --> 00:24:10,646
have added support for mutable

630
00:24:11,236 --> 00:24:13,136
events for all defined event

631
00:24:13,136 --> 00:24:15,986
types, which makes it easier for

632
00:24:15,986 --> 00:24:17,896
your applications in iOS 11 to

633
00:24:18,046 --> 00:24:20,506
update existing HMEventTriggers.

634
00:24:21,736 --> 00:24:25,066
And now, I'd like to hand it off

635
00:24:25,066 --> 00:24:26,416
to Praveen, to give you some

636
00:24:26,776 --> 00:24:28,146
exciting updates about our

637
00:24:28,146 --> 00:24:28,996
accessory ecosystem.

638
00:24:29,866 --> 00:24:30,166
Praveen?

639
00:24:31,516 --> 00:24:37,566
[ Applause ]

640
00:24:38,066 --> 00:24:38,766
&gt;&gt; Thanks Matt.

641
00:24:38,766 --> 00:24:39,596
Good morning everyone.

642
00:24:39,946 --> 00:24:41,796
My name is Praveen Chegondi, and

643
00:24:41,796 --> 00:24:43,686
I am here to share with you new

644
00:24:43,686 --> 00:24:45,146
protocol features and

645
00:24:45,146 --> 00:24:47,196
enhancements that are in iOS 11.

646
00:24:47,606 --> 00:24:49,466
I have a few exciting topics to

647
00:24:49,466 --> 00:24:49,976
talk about today.

648
00:24:58,046 --> 00:24:58,876
I am going to be sharing some

649
00:24:58,876 --> 00:25:00,546
great news about what we are

650
00:24:58,876 --> 00:25:00,546
great news about what we are

651
00:25:00,546 --> 00:25:02,666
doing with the HomeKit accessory

652
00:25:02,736 --> 00:25:03,896
protocol specification.

653
00:25:04,086 --> 00:25:06,276
I am also going to be talking

654
00:25:06,276 --> 00:25:10,846
about enhancement to the HomeKit

655
00:25:12,426 --> 00:25:15,416
accessory protocol.

656
00:25:15,976 --> 00:25:17,036
Supportive new accessory

657
00:25:17,036 --> 00:25:18,346
categories in iOS 11.

658
00:25:20,096 --> 00:25:21,356
Addition to the authentication

659
00:25:21,356 --> 00:25:23,396
process for HomeKit accessories.

660
00:25:24,276 --> 00:25:27,866
And finally, we will be rounding

661
00:25:27,866 --> 00:25:29,666
up with improvements to the

662
00:25:29,666 --> 00:25:31,686
self-certification process for

663
00:25:31,686 --> 00:25:32,866
our MFi licensees.

664
00:25:40,046 --> 00:25:41,376
Let's start off with a quick

665
00:25:41,426 --> 00:25:42,916
overview of the HomeKit

666
00:25:42,996 --> 00:25:43,856
Accessory Protocol

667
00:25:43,906 --> 00:25:44,596
Specification.

668
00:25:52,066 --> 00:25:53,256
The HomeKit Accessory Protocol

669
00:25:53,256 --> 00:25:56,076
Specification describes how a

670
00:25:56,076 --> 00:25:57,466
controller, which is an Apple

671
00:25:57,466 --> 00:25:59,286
device, communicates with an

672
00:25:59,286 --> 00:26:00,896
accessory, along with the

673
00:25:59,286 --> 00:26:00,896
accessory, along with the

674
00:26:00,896 --> 00:26:02,006
security requirements.

675
00:26:03,646 --> 00:26:06,896
All sessions between Apple

676
00:26:06,896 --> 00:26:08,636
devices and accessories over

677
00:26:09,036 --> 00:26:11,286
HomeKit are end-to-end encrypted

678
00:26:11,286 --> 00:26:12,876
and mutually authenticated.

679
00:26:14,526 --> 00:26:16,876
The specification provides

680
00:26:16,876 --> 00:26:19,176
implementation details for both

681
00:26:19,326 --> 00:26:21,946
IP and Bluetooth LE accessories.

682
00:26:23,436 --> 00:26:25,716
And you can also get details on

683
00:26:25,716 --> 00:26:27,506
how to describe each of the

684
00:26:27,506 --> 00:26:29,496
accessory categories that are

685
00:26:29,496 --> 00:26:31,506
supported in HomeKit, such as a

686
00:26:31,506 --> 00:26:33,876
light bulb, fan, thermostat, and

687
00:26:33,876 --> 00:26:34,576
many, many more.

688
00:26:35,886 --> 00:26:38,066
For complete overview of the

689
00:26:38,066 --> 00:26:40,126
HomeKit accessory protocol, you

690
00:26:40,126 --> 00:26:42,186
can refer to the 2014 session,

691
00:26:42,586 --> 00:26:44,776
Designing Accessories for iOS

692
00:26:44,996 --> 00:26:45,766
and OS X.

693
00:26:52,046 --> 00:26:55,466
Until now, the specification was

694
00:26:55,466 --> 00:26:57,536
available to MFi licensees,

695
00:26:58,066 --> 00:27:00,426
whose accessories carried the

696
00:26:58,066 --> 00:27:00,426
whose accessories carried the

697
00:27:00,426 --> 00:27:02,836
logo "works with Apple HomeKit"

698
00:27:03,366 --> 00:27:04,236
after completing

699
00:27:04,236 --> 00:27:05,096
self-certification.

700
00:27:06,556 --> 00:27:11,876
Starting today, we are also

701
00:27:11,876 --> 00:27:15,226
making a version of the HomeKit

702
00:27:15,226 --> 00:27:16,966
Accessory Protocol Specification

703
00:27:17,426 --> 00:27:19,396
available to anyone with a

704
00:27:19,396 --> 00:27:19,976
developer license

705
00:27:20,516 --> 00:27:23,651
[ Applause ]

706
00:27:24,151 --> 00:27:27,286
.

707
00:27:27,786 --> 00:27:29,326
So, if you are a student

708
00:27:29,546 --> 00:27:31,276
developer, or even a hobbyist,

709
00:27:31,276 --> 00:27:33,606
and want to learn about HomeKit

710
00:27:33,606 --> 00:27:35,486
protocol and want to create

711
00:27:35,656 --> 00:27:36,906
accessories for your personal

712
00:27:36,906 --> 00:27:37,976
use, you can now do that

713
00:27:38,516 --> 00:27:44,606
[applause].

714
00:27:45,106 --> 00:27:46,796
The HomeKit developer page has

715
00:27:46,796 --> 00:27:48,806
been updated with the

716
00:27:48,806 --> 00:27:50,416
specification, and also you will

717
00:27:50,416 --> 00:27:52,226
find other useful information,

718
00:27:52,556 --> 00:27:53,666
such as frequently asked

719
00:27:53,666 --> 00:27:55,696
questions, and guidelines to

720
00:27:55,696 --> 00:27:57,656
building your HomeKit apps.

721
00:27:58,176 --> 00:28:00,476
Because the specification has

722
00:27:58,176 --> 00:28:00,476
Because the specification has

723
00:28:00,546 --> 00:28:02,396
Apple's proprietary information,

724
00:28:02,976 --> 00:28:04,256
you will need to agree to a

725
00:28:04,256 --> 00:28:05,826
click-through license before

726
00:28:05,826 --> 00:28:06,606
downloading it.

727
00:28:07,216 --> 00:28:08,566
And with all this information,

728
00:28:08,886 --> 00:28:09,966
we are looking forward to seeing

729
00:28:10,046 --> 00:28:12,186
what new ideas you're going to

730
00:28:12,186 --> 00:28:13,776
come up with.

731
00:28:14,086 --> 00:28:16,516
And let's say you come up with a

732
00:28:16,546 --> 00:28:18,056
really cool prototype?

733
00:28:19,286 --> 00:28:20,946
And now, you want to develop a

734
00:28:20,946 --> 00:28:23,356
HomeKit accessory for commercial

735
00:28:23,356 --> 00:28:23,646
sale.

736
00:28:24,566 --> 00:28:26,636
You need to join the Apple MFi

737
00:28:26,716 --> 00:28:27,266
Program.

738
00:28:28,526 --> 00:28:31,146
You need to join the Apple MFi

739
00:28:31,146 --> 00:28:32,646
Program and go through

740
00:28:32,646 --> 00:28:35,006
self-certification before you

741
00:28:35,006 --> 00:28:36,976
can begin your manufacturing or

742
00:28:36,976 --> 00:28:38,086
sale of your accessories.

743
00:28:38,836 --> 00:28:41,386
And this is really exciting.

744
00:28:42,316 --> 00:28:44,846
And I recommend that you check

745
00:28:44,846 --> 00:28:46,536
the developer page often for the

746
00:28:46,536 --> 00:28:49,156
latest updates, as we continue

747
00:28:49,156 --> 00:28:50,766
to introduce new features and

748
00:28:50,766 --> 00:28:51,806
enhancements to the

749
00:28:51,806 --> 00:28:52,596
Specification.

750
00:28:54,416 --> 00:28:55,976
Talking about enhancements.

751
00:29:02,046 --> 00:29:04,436
In iOS 11, we made some great

752
00:29:04,436 --> 00:29:05,896
enhancements to the HomeKit

753
00:29:05,896 --> 00:29:06,856
Accessory Protocol.

754
00:29:08,106 --> 00:29:12,546
Now, let's see how a user with

755
00:29:12,546 --> 00:29:15,356
iOS 10 sets up a HomeKit

756
00:29:15,356 --> 00:29:17,346
Accessory, such as a light bulb.

757
00:29:17,896 --> 00:29:20,666
These of course on the

758
00:29:20,666 --> 00:29:24,506
accessory, by putting the light

759
00:29:24,506 --> 00:29:26,076
bulb in the socket, chooses the

760
00:29:26,076 --> 00:29:27,846
accessory from the add accessory

761
00:29:27,846 --> 00:29:29,496
option in the Home, and scans

762
00:29:29,496 --> 00:29:30,746
the eight digit setup code.

763
00:29:31,526 --> 00:29:34,206
In three easy steps, the user is

764
00:29:34,266 --> 00:29:35,366
able to set up a HomeKit

765
00:29:35,366 --> 00:29:37,286
Accessory that is simple and

766
00:29:37,286 --> 00:29:37,626
great.

767
00:29:38,146 --> 00:29:40,926
A couple of things to note in

768
00:29:40,926 --> 00:29:41,556
this process.

769
00:29:42,346 --> 00:29:44,736
The accessory must be powered on

770
00:29:45,026 --> 00:29:45,966
for it to show up.

771
00:29:46,946 --> 00:29:49,986
Secondly, the setup code is used

772
00:29:49,986 --> 00:29:51,326
for the initial HomeKit pairing

773
00:29:51,326 --> 00:29:53,906
only, and this is to ensure that

774
00:29:53,906 --> 00:29:55,666
you and only you are setting up

775
00:29:55,666 --> 00:29:56,406
the accessory.

776
00:29:58,896 --> 00:30:01,356
For many accessories that are

777
00:29:58,896 --> 00:30:01,356
For many accessories that are

778
00:30:01,356 --> 00:30:02,746
installed in hard to reach

779
00:30:02,826 --> 00:30:05,536
places, such as a light bulb, or

780
00:30:05,536 --> 00:30:06,846
have set up codes printed on the

781
00:30:06,846 --> 00:30:09,166
back of the product, it makes it

782
00:30:09,166 --> 00:30:10,926
difficult to scan the setup code

783
00:30:11,436 --> 00:30:12,336
when it is powered on.

784
00:30:13,686 --> 00:30:15,716
Or even choosing an accessory

785
00:30:15,716 --> 00:30:16,896
when you are setting up multiple

786
00:30:16,896 --> 00:30:18,256
accessories of the same model

787
00:30:18,466 --> 00:30:19,386
becomes challenging.

788
00:30:20,886 --> 00:30:23,766
In iOS 11, we are introducing

789
00:30:24,126 --> 00:30:25,996
enhanced set of process to

790
00:30:26,106 --> 00:30:27,506
further simplify accessory

791
00:30:27,506 --> 00:30:27,856
setup.

792
00:30:28,336 --> 00:30:31,546
With the enhanced setup, users

793
00:30:31,606 --> 00:30:34,296
can now scan the setup code, and

794
00:30:34,296 --> 00:30:35,456
then power on the accessory.

795
00:30:36,106 --> 00:30:38,286
To achieve this, we are

796
00:30:38,286 --> 00:30:40,156
enhancing the setup payload to

797
00:30:40,156 --> 00:30:42,926
include setup ID in addition to

798
00:30:42,926 --> 00:30:44,646
the setup code.

799
00:30:44,646 --> 00:30:46,746
iOS 11 uses the setup ID to

800
00:30:46,746 --> 00:30:48,286
start the pairing process with

801
00:30:48,286 --> 00:30:50,136
the accessory when the setup

802
00:30:50,136 --> 00:30:53,026
code is scanned, and matches to

803
00:30:53,026 --> 00:30:54,396
the accessory when it is powered

804
00:30:54,396 --> 00:30:54,576
on.

805
00:30:54,956 --> 00:30:55,796
It is that simple.

806
00:30:57,296 --> 00:30:59,016
To deliver the enhanced setup

807
00:30:59,016 --> 00:31:03,096
code, we are now supporting

808
00:30:59,016 --> 00:31:03,096
code, we are now supporting

809
00:31:03,096 --> 00:31:05,416
scanning of QR codes for setting

810
00:31:05,416 --> 00:31:06,366
up HomeKit accessories

811
00:31:08,016 --> 00:31:09,766
[ Applause ]

812
00:31:09,766 --> 00:31:11,516
.

813
00:31:11,516 --> 00:31:13,996
The QR code is standards based

814
00:31:14,276 --> 00:31:18,806
and can be as small as 10 by 10

815
00:31:18,806 --> 00:31:19,336
millimeters.

816
00:31:19,996 --> 00:31:20,976
That is pretty small.

817
00:31:32,046 --> 00:31:34,866
The small form factor of the QR

818
00:31:34,866 --> 00:31:36,226
code will help a lot of

819
00:31:36,226 --> 00:31:38,616
manufacturers to put the QR code

820
00:31:39,036 --> 00:31:42,126
on the smaller accessories, and

821
00:31:42,126 --> 00:31:42,996
this is really great.

822
00:31:43,926 --> 00:31:44,956
But we didn't stop there.

823
00:31:46,816 --> 00:31:49,816
We took one step further, and in

824
00:31:49,816 --> 00:31:51,386
addition to supporting QR code,

825
00:31:52,346 --> 00:31:55,866
we also added support for NFC

826
00:31:55,866 --> 00:31:56,296
tags.

827
00:31:57,516 --> 00:31:59,576
[ Applause ]

828
00:32:00,076 --> 00:32:01,166
&gt;&gt; And we are really excited

829
00:32:01,166 --> 00:32:01,646
about this.

830
00:32:02,846 --> 00:32:04,126
With NFC tags that are

831
00:32:04,126 --> 00:32:05,266
programmed with the Enhanced

832
00:32:05,266 --> 00:32:07,386
Setup Code, we can now deliver

833
00:32:07,386 --> 00:32:09,026
even more seamless user

834
00:32:09,026 --> 00:32:11,136
experience for setting up

835
00:32:11,136 --> 00:32:11,656
accessories.

836
00:32:11,896 --> 00:32:14,016
The user needs to just tap to

837
00:32:14,016 --> 00:32:16,096
pair and it is that simple, and

838
00:32:16,226 --> 00:32:18,666
it is fantastic.

839
00:32:19,776 --> 00:32:22,046
The whole experience in setting

840
00:32:22,046 --> 00:32:23,726
up accessories in iOS 11 with

841
00:32:23,726 --> 00:32:25,866
the support of QR code or NFC

842
00:32:25,866 --> 00:32:28,576
tag for HomeKit Accessories is

843
00:32:28,626 --> 00:32:29,326
just fantastic.

844
00:32:30,036 --> 00:32:33,526
Now, let's talk about Bluetooth.

845
00:32:34,186 --> 00:32:38,796
Over the last few years, we have

846
00:32:38,796 --> 00:32:40,946
seen an influx of Bluetooth LE

847
00:32:40,946 --> 00:32:42,046
HomeKit Accessories.

848
00:32:43,066 --> 00:32:44,876
This is because Bluetooth LE

849
00:32:44,876 --> 00:32:46,246
Accessories offer a lot of

850
00:32:46,246 --> 00:32:47,076
advantages.

851
00:32:48,326 --> 00:32:50,426
They are small, they are

852
00:32:50,426 --> 00:32:52,456
extremely low power, and many

853
00:32:52,456 --> 00:32:54,276
are battery operated, such as a

854
00:32:54,276 --> 00:32:55,756
contact sensor, motion sensor,

855
00:32:55,756 --> 00:32:57,596
and many more, and users use

856
00:32:57,596 --> 00:32:59,486
these to trigger events when a

857
00:32:59,486 --> 00:33:00,956
certain action takes place.

858
00:32:59,486 --> 00:33:00,956
certain action takes place.

859
00:33:00,956 --> 00:33:03,266
And this is really great.

860
00:33:04,276 --> 00:33:10,176
Now, let's see how Bluetooth

861
00:33:10,176 --> 00:33:12,806
notifications work in iOS 10.

862
00:33:13,566 --> 00:33:16,496
In iOS 10, when an accessory

863
00:33:16,496 --> 00:33:18,646
state changes, it triggers a

864
00:33:18,646 --> 00:33:20,296
state change notification.

865
00:33:20,676 --> 00:33:23,736
The home of apple TV in this

866
00:33:23,736 --> 00:33:25,556
case picks up the state change,

867
00:33:25,916 --> 00:33:27,936
and then establishes a

868
00:33:27,936 --> 00:33:30,136
communication, a secure

869
00:33:30,136 --> 00:33:32,336
communication with the accessory

870
00:33:32,506 --> 00:33:33,886
to determine what state has

871
00:33:33,886 --> 00:33:36,226
changed, and then triggers the

872
00:33:36,226 --> 00:33:36,786
automation.

873
00:33:38,296 --> 00:33:41,856
The whole process results in a

874
00:33:41,856 --> 00:33:44,906
few seconds of latency for the

875
00:33:44,906 --> 00:33:45,986
automation to be executed.

876
00:33:47,206 --> 00:33:49,516
In iOS 11, we changed the

877
00:33:49,516 --> 00:33:51,396
mechanism completely to

878
00:33:51,396 --> 00:33:53,196
significantly reduce latency,

879
00:33:54,136 --> 00:33:56,416
and we are doing this by what we

880
00:33:56,416 --> 00:33:58,736
call Secure Broadcast Session to

881
00:33:58,736 --> 00:33:59,706
send the notification.

882
00:34:01,276 --> 00:34:02,966
Here, the iOS controller

883
00:34:03,516 --> 00:34:04,926
configures the accessory with an

884
00:34:04,976 --> 00:34:07,056
encryption key, and the

885
00:34:07,126 --> 00:34:08,866
interested characteristics that

886
00:34:08,866 --> 00:34:10,326
can be included in the secure

887
00:34:10,326 --> 00:34:11,565
broadcast notifications.

888
00:34:12,456 --> 00:34:15,876
Now, when a characteristic

889
00:34:20,025 --> 00:34:21,406
changes, the accessory encrypts

890
00:34:21,406 --> 00:34:23,216
the state change, and then sends

891
00:34:23,216 --> 00:34:24,976
a notification to the Home app,

892
00:34:24,976 --> 00:34:26,335
which will then immediately

893
00:34:26,726 --> 00:34:28,156
execute the automation.

894
00:34:28,626 --> 00:34:33,306
With this enhancement, we are

895
00:34:33,306 --> 00:34:35,056
seeing a number of accessories

896
00:34:35,315 --> 00:34:36,606
where the latency has gone from

897
00:34:36,646 --> 00:34:38,275
a few seconds to under a second

898
00:34:38,275 --> 00:34:39,326
for the events to be triggered.

899
00:34:40,396 --> 00:34:41,795
And the best part about this

900
00:34:41,795 --> 00:34:44,906
enhancement is that you just

901
00:34:44,906 --> 00:34:46,826
need to upgrade to iOS 11 and

902
00:34:46,826 --> 00:34:48,596
get new form ware for your

903
00:34:48,596 --> 00:34:50,496
accessories to ensure faster,

904
00:34:50,496 --> 00:34:51,476
because you don't need to buy

905
00:34:51,476 --> 00:34:52,146
new products

906
00:34:53,482 --> 00:34:55,483
[ Applause ]

907
00:34:55,949 --> 00:34:57,950
.

908
00:34:58,416 --> 00:34:59,646
And with the new event triggers

909
00:34:59,646 --> 00:35:01,636
Matt talked about earlier, and

910
00:34:59,646 --> 00:35:01,636
Matt talked about earlier, and

911
00:35:01,636 --> 00:35:03,266
with secure broadcast

912
00:35:03,266 --> 00:35:04,616
notifications for Bluetooth LE

913
00:35:04,616 --> 00:35:07,166
accessories, it's just

914
00:35:07,166 --> 00:35:09,006
incredible how home automation

915
00:35:09,006 --> 00:35:12,316
is going to be defined now.

916
00:35:12,316 --> 00:35:17,386
Coming to accessory categories.

917
00:35:18,036 --> 00:35:20,266
HomeKit supports a wide range of

918
00:35:20,366 --> 00:35:23,486
accessory types from sensors, to

919
00:35:23,516 --> 00:35:24,826
cameras and many more.

920
00:35:25,226 --> 00:35:28,196
Every year, we continue to add

921
00:35:28,246 --> 00:35:29,626
supportive new accessory

922
00:35:29,626 --> 00:35:30,156
categories.

923
00:35:31,476 --> 00:35:35,636
This year, in iOS 11, we are now

924
00:35:35,636 --> 00:35:39,056
adding support for sprinklers

925
00:35:39,056 --> 00:35:39,746
and faucets

926
00:35:41,026 --> 00:35:43,026
[ Applause ]

927
00:35:43,036 --> 00:35:45,036
.

928
00:35:45,046 --> 00:35:46,256
With the support of sprinklers

929
00:35:46,256 --> 00:35:48,076
in HomeKit, users can now

930
00:35:48,076 --> 00:35:50,306
control watering the garden by

931
00:35:50,306 --> 00:35:50,676
Siri.

932
00:35:53,206 --> 00:35:54,916
Somewhat in a similar accessory

933
00:35:54,916 --> 00:35:56,916
category type, which is water

934
00:35:56,916 --> 00:35:59,646
related, let's talk about

935
00:36:00,296 --> 00:36:00,506
faucets.

936
00:36:01,556 --> 00:36:04,136
For many users, it is a daily

937
00:36:04,136 --> 00:36:06,736
ritual to turn on the shower,

938
00:36:07,226 --> 00:36:10,036
let the water run, and wait for

939
00:36:10,036 --> 00:36:11,976
the water to turn to the right

940
00:36:12,036 --> 00:36:13,586
temperature before you get in

941
00:36:13,586 --> 00:36:13,976
the shower.

942
00:36:15,866 --> 00:36:18,466
Now, while having your morning

943
00:36:18,466 --> 00:36:20,656
cup of coffee, you can let Siri

944
00:36:20,656 --> 00:36:23,986
know it's bath time, and by the

945
00:36:24,036 --> 00:36:25,026
time you finish your cup of

946
00:36:25,026 --> 00:36:28,056
coffee, the water temperature is

947
00:36:28,056 --> 00:36:29,196
just right to your desired

948
00:36:29,296 --> 00:36:30,696
setting, and this can be

949
00:36:30,696 --> 00:36:32,366
achieved with the faucets

950
00:36:32,366 --> 00:36:33,316
accessory category.

951
00:36:33,866 --> 00:36:35,966
That's pretty neat

952
00:36:36,516 --> 00:36:39,346
[ Applause ]

953
00:36:39,846 --> 00:36:42,676
.

954
00:36:43,176 --> 00:36:44,656
Let's talk about authentication

955
00:36:44,656 --> 00:36:44,916
now.

956
00:36:46,846 --> 00:36:50,216
At Apple, security and quality

957
00:36:50,266 --> 00:36:54,346
is of utmost importance to us.

958
00:36:54,746 --> 00:36:57,786
Our customers trust that their

959
00:36:57,786 --> 00:36:58,896
accessories are tested

960
00:36:59,016 --> 00:37:01,256
thoroughly by MFi licenses and

961
00:36:59,016 --> 00:37:01,256
thoroughly by MFi licenses and

962
00:37:01,256 --> 00:37:02,276
audited by Apple.

963
00:37:03,806 --> 00:37:05,676
To ensure accessories are

964
00:37:05,676 --> 00:37:08,056
trusted and self-certified, we

965
00:37:08,056 --> 00:37:09,956
have adopted hardware-based

966
00:37:09,956 --> 00:37:10,606
authentication.

967
00:37:12,796 --> 00:37:16,526
Starting with iOS 11, we are now

968
00:37:16,526 --> 00:37:18,766
introducing an alternate method

969
00:37:18,766 --> 00:37:19,796
to authenticate HomeKit

970
00:37:19,796 --> 00:37:20,336
Accessories.

971
00:37:21,066 --> 00:37:22,996
Now, accessories can be

972
00:37:22,996 --> 00:37:25,296
authenticated by software

973
00:37:26,029 --> 00:37:28,029
[ Applause ]

974
00:37:28,042 --> 00:37:30,042
.

975
00:37:30,056 --> 00:37:32,156
This provides a great option to

976
00:37:32,156 --> 00:37:33,786
enable HomeKit and shipping

977
00:37:33,786 --> 00:37:35,846
accessories that can be upgraded

978
00:37:35,846 --> 00:37:36,356
to HomeKit.

979
00:37:38,096 --> 00:37:40,896
For our MFi licensees, we will

980
00:37:40,896 --> 00:37:42,606
be sharing more information

981
00:37:42,776 --> 00:37:45,076
about the implementation later.

982
00:37:45,756 --> 00:37:47,396
Continuing on the topic of

983
00:37:47,656 --> 00:37:49,986
accessory quality, we now have

984
00:37:49,986 --> 00:37:52,316
new and improved process and

985
00:37:52,376 --> 00:37:55,196
tools to help MFi licensees

986
00:37:55,246 --> 00:37:57,196
access the launch of HomeKit

987
00:37:57,196 --> 00:37:57,776
Accessories.

988
00:38:00,366 --> 00:38:02,606
We now have automated tools to

989
00:38:02,606 --> 00:38:04,246
test your accessory and continue

990
00:38:04,246 --> 00:38:05,966
to automate more and more test

991
00:38:05,966 --> 00:38:08,256
cases, and we urge all MFi

992
00:38:08,256 --> 00:38:10,206
licensees to always get the

993
00:38:10,206 --> 00:38:12,236
latest tools before you begin

994
00:38:12,236 --> 00:38:12,776
your testing.

995
00:38:14,396 --> 00:38:16,646
Also, we are glad to announce

996
00:38:16,646 --> 00:38:18,996
that we now have two Apple

997
00:38:18,996 --> 00:38:20,726
authorized third-party labs here

998
00:38:20,726 --> 00:38:22,526
in the United States, and

999
00:38:22,826 --> 00:38:24,466
authorizing more third-party

1000
00:38:24,466 --> 00:38:26,846
labs in China, and UK next

1001
00:38:26,846 --> 00:38:26,976
month.

1002
00:38:27,516 --> 00:38:31,546
[ Applause ]

1003
00:38:32,046 --> 00:38:32,876
&gt;&gt; And this should help a lot of

1004
00:38:32,876 --> 00:38:34,766
MFi licensees to launch the

1005
00:38:34,766 --> 00:38:36,066
accessories sooner.

1006
00:38:38,636 --> 00:38:42,046
To recap the session, this year,

1007
00:38:42,236 --> 00:38:44,326
we introduced many compelling

1008
00:38:44,516 --> 00:38:46,366
and useful HomeKit features.

1009
00:38:47,446 --> 00:38:48,716
Matt talked about the great

1010
00:38:48,716 --> 00:38:50,136
enhancements to event triggers,

1011
00:38:50,536 --> 00:38:52,436
and introduced new APS you can

1012
00:38:52,436 --> 00:38:54,616
adopt in your apps to redefine

1013
00:38:54,616 --> 00:38:55,446
home automation.

1014
00:38:56,936 --> 00:38:58,386
I shared news about HomeKit

1015
00:38:58,386 --> 00:38:59,176
Accessory Protocol

1016
00:38:59,176 --> 00:39:00,706
Specifications being made

1017
00:38:59,176 --> 00:39:00,706
Specifications being made

1018
00:39:00,706 --> 00:39:02,226
available to all developers.

1019
00:39:03,246 --> 00:39:05,776
And enhanced accessory setup

1020
00:39:06,016 --> 00:39:07,486
process makes it even better

1021
00:39:07,776 --> 00:39:08,966
than what it was before.

1022
00:39:09,836 --> 00:39:11,406
An interruption of secure

1023
00:39:11,406 --> 00:39:12,816
broadcast notifications for

1024
00:39:12,816 --> 00:39:14,126
Bluetooth LE accessories will

1025
00:39:14,366 --> 00:39:15,706
make the event triggers go

1026
00:39:15,746 --> 00:39:16,166
faster.

1027
00:39:17,226 --> 00:39:18,876
And introduced new accessory

1028
00:39:18,876 --> 00:39:20,166
categories, Sprinklers and

1029
00:39:20,166 --> 00:39:20,706
Faucets.

1030
00:39:21,566 --> 00:39:23,886
And finally, we provided an

1031
00:39:23,886 --> 00:39:25,826
update on automation tools for

1032
00:39:25,896 --> 00:39:27,386
self-certification and

1033
00:39:27,386 --> 00:39:28,716
authorizing third party labs

1034
00:39:28,756 --> 00:39:30,466
around the world to accelerate

1035
00:39:30,466 --> 00:39:31,386
the launch of HomeKit

1036
00:39:31,386 --> 00:39:31,906
Accessories.

1037
00:39:40,046 --> 00:39:42,176
We at Apple are really excited

1038
00:39:42,176 --> 00:39:43,966
about all these features, and we

1039
00:39:43,966 --> 00:39:45,266
can't wait to see what you are

1040
00:39:45,266 --> 00:39:47,966
going to do with them.

1041
00:39:48,296 --> 00:39:49,946
A couple of important things

1042
00:39:49,946 --> 00:39:51,186
before we close the session.

1043
00:39:51,496 --> 00:39:56,166
We have two HomeKit labs for you

1044
00:39:56,166 --> 00:39:58,756
this week, where you can chat

1045
00:39:58,756 --> 00:40:00,136
with a number of HomeKit

1046
00:39:58,756 --> 00:40:00,136
with a number of HomeKit

1047
00:40:00,136 --> 00:40:02,196
engineers, who will be happy to

1048
00:40:02,196 --> 00:40:03,496
answer any questions that you

1049
00:40:03,496 --> 00:40:04,636
have with regards to your apps

1050
00:40:04,726 --> 00:40:05,646
and/or accessories.

1051
00:40:06,556 --> 00:40:08,026
We will also be demonstrating

1052
00:40:08,026 --> 00:40:09,146
some of the new features and

1053
00:40:09,146 --> 00:40:10,906
enhancements that we just talked

1054
00:40:10,906 --> 00:40:12,746
about that are introduced in iOS

1055
00:40:12,746 --> 00:40:13,096
11.

1056
00:40:13,096 --> 00:40:16,106
The first lab is right after

1057
00:40:16,106 --> 00:40:17,916
this session in Technology Lab

1058
00:40:17,916 --> 00:40:18,146
J.

1059
00:40:19,666 --> 00:40:21,246
Thank you very much for coming,

1060
00:40:21,476 --> 00:40:22,386
and enjoy the rest of your

1061
00:40:22,386 --> 00:40:22,886
conference.

1062
00:40:23,516 --> 00:40:25,556
[ Applause ]

1063
00:40:26,056 --> 00:40:27,396
&gt;&gt; See you in the lab.
