1
00:00:17,551 --> 00:00:19,987
<c.magenta>（watchOS新特性）</c>

2
00:00:20,187 --> 00:00:21,021
<c.magenta>早上好</c>

3
00:00:21,288 --> 00:00:22,523
<c.magenta>感谢大家的参与</c>

4
00:00:23,090 --> 00:00:24,358
<c.magenta>我是伊恩·帕克斯</c>

5
00:00:25,659 --> 00:00:26,493
<c.magenta>谢谢大家</c>

6
00:00:29,062 --> 00:00:31,832
<c.magenta>我是伊恩·帕克斯</c>

7
00:00:32,064 --> 00:00:35,035
<c.magenta>我很激动地要跟大家</c>

8
00:00:35,135 --> 00:00:38,038
<c.magenta>以及此次更新对于开发者的意义</c>

9
00:00:38,138 --> 00:00:41,642
<c.magenta>以便你们可以继续</c>

10
00:00:42,309 --> 00:00:45,212
<c.magenta>距离我们首次发布</c>

11
00:00:45,345 --> 00:00:47,214
<c.magenta>这个平台却已经取得了很大的进展</c>

12
00:00:47,648 --> 00:00:49,583
<c.magenta>我们将继续从用户那儿学习</c>

13
00:00:49,816 --> 00:00:53,187
<c.magenta>并了解Apple Watch如何</c>

14
00:00:53,554 --> 00:00:57,157
<c.magenta>今年 我们在watchOS 4中</c>

15
00:00:58,492 --> 00:01:01,328
<c.magenta>比如 新闻应用</c>

16
00:00:58,492 --> 00:01:01,328
<c.magenta>比如 新闻应用</c>

17
00:01:01,428 --> 00:01:03,230
<c.magenta>并标记稍后想要阅读的标题</c>

18
00:01:03,864 --> 00:01:08,302
<c.magenta>全新设计的音乐体验</c>

19
00:01:08,502 --> 00:01:11,872
<c.magenta>并且拥有新界面既有趣又简单易用</c>

20
00:01:11,939 --> 00:01:13,974
<c.magenta>（音乐群星专辑50首）</c>

21
00:01:16,143 --> 00:01:19,513
<c.magenta>我们还尝试让整个进程更加高效</c>

22
00:01:19,947 --> 00:01:22,049
<c.magenta>比如可以直接在锻炼界面内</c>

23
00:01:22,115 --> 00:01:23,817
<c.magenta>获取正在播放的音乐界面</c>

24
00:01:26,353 --> 00:01:30,023
<c.magenta>以及从新的Siri表盘中</c>

25
00:01:30,524 --> 00:01:32,292
<c.magenta>整理和显示一天中的重要信息</c>

26
00:01:33,994 --> 00:01:37,931
<c.magenta>当然了 我们为开发者</c>

27
00:01:38,031 --> 00:01:40,667
<c.magenta>以便你们可以</c>

28
00:01:41,335 --> 00:01:44,371
<c.magenta>那么 去年我们</c>

29
00:01:44,471 --> 00:01:46,874
<c.magenta>引入了三条指导原则</c>

30
00:01:47,074 --> 00:01:50,143
<c.magenta>并且我们会在系统应用中</c>

31
00:01:50,210 --> 00:01:52,579
<c.magenta>继续遵从这三条原则</c>

32
00:01:53,580 --> 00:01:55,115
<c.magenta>让我们回顾一下</c>

33
00:01:55,182 --> 00:01:58,785
<c.magenta>看它们在watchOS中</c>

34
00:02:00,721 --> 00:02:02,990
<c.magenta>首先是使我们的应用精简了</c>

35
00:02:03,390 --> 00:02:05,959
<c.magenta>Apple Watch上的</c>

36
00:02:06,193 --> 00:02:09,463
<c.magenta>屏幕尺寸比其它平台上的更小</c>

37
00:02:09,696 --> 00:02:13,867
<c.magenta>因此我们需要仔细考虑</c>

38
00:02:14,301 --> 00:02:16,603
<c.magenta>并确保这些信息构思巧妙</c>

39
00:02:16,670 --> 00:02:20,741
<c.magenta>因此用户可以迅速了解并响应该信息</c>

40
00:02:20,974 --> 00:02:22,976
<c.magenta>（精简化）</c>

41
00:02:27,347 --> 00:02:30,217
<c.magenta>第二条是让信息变得可操作</c>

42
00:02:30,484 --> 00:02:35,322
<c.magenta>意思是将用户所能响应的东西</c>

43
00:02:35,422 --> 00:02:38,725
<c.magenta>要么放在应用内部 比如更换曲目</c>

44
00:02:39,293 --> 00:02:41,628
<c.magenta>要么放在当前环境中</c>

45
00:02:41,762 --> 00:02:43,897
<c.magenta>在我出门时</c>

46
00:02:43,997 --> 00:02:46,099
<c.magenta>快速地瞥一眼天气状况</c>

47
00:02:46,200 --> 00:02:47,401
<c.magenta>让我了解是否需要带伞</c>

48
00:02:48,035 --> 00:02:51,605
<c.magenta>但可操作的信息还可以是音频形式</c>

49
00:02:52,139 --> 00:02:56,210
<c.magenta>例如 在我锻炼时</c>

50
00:02:56,276 --> 00:02:58,545
<c.magenta>当我跟不上训练的步伐时提醒我</c>

51
00:02:59,780 --> 00:03:01,381
<c.magenta>最后一条是可响应</c>

52
00:02:59,780 --> 00:03:01,381
<c.magenta>最后一条是可响应</c>

53
00:03:02,015 --> 00:03:05,586
<c.magenta>性能对于watchOS应用来说</c>

54
00:03:05,719 --> 00:03:07,955
<c.magenta>当我们说可响应时</c>

55
00:03:08,121 --> 00:03:12,759
<c.magenta>它还意味着确保一直保持更新</c>

56
00:03:13,293 --> 00:03:14,828
<c.magenta>它会考虑</c>

57
00:03:14,895 --> 00:03:18,165
<c.magenta>用户在应用内</c>

58
00:03:18,765 --> 00:03:20,234
<c.magenta>让我们看几个例子</c>

59
00:03:20,334 --> 00:03:23,437
<c.magenta>关于这些是如何</c>

60
00:03:28,175 --> 00:03:31,278
<c.magenta>去年我们引入了快速启动锻炼功能</c>

61
00:03:31,578 --> 00:03:36,550
<c.magenta>可以让你非常迅速地开始日常锻炼</c>

62
00:03:37,284 --> 00:03:40,921
<c.magenta>理念是你将反复使用同一种锻炼类型</c>

63
00:03:41,154 --> 00:03:44,157
<c.magenta>因此 你也可以使用</c>

64
00:03:44,224 --> 00:03:46,226
<c.magenta>在几秒钟内就可以开始</c>

65
00:03:46,627 --> 00:03:48,929
<c.magenta>但如果你轮流做一组锻炼</c>

66
00:03:48,996 --> 00:03:50,664
<c.magenta>比如一天跑步</c>

67
00:03:50,831 --> 00:03:52,533
<c.magenta>但隔天就游泳</c>

68
00:03:52,599 --> 00:03:54,501
<c.magenta>再是骑车？</c>

69
00:03:54,601 --> 00:03:57,771
<c.magenta>首先 恭喜你</c>

70
00:03:58,172 --> 00:04:02,309
<c.magenta>但你每次都要进行一个</c>

71
00:03:58,172 --> 00:04:02,309
<c.magenta>但你每次都要进行一个</c>

72
00:04:03,010 --> 00:04:06,146
<c.magenta>因此在watchOS 4中</c>

73
00:04:06,513 --> 00:04:07,881
<c.magenta>每次锻炼都将追踪</c>

74
00:04:07,981 --> 00:04:11,185
<c.magenta>你之前为该种锻炼类型所设定的目标</c>

75
00:04:11,552 --> 00:04:14,555
<c.magenta>并且如果你没有设定目标</c>

76
00:04:14,655 --> 00:04:17,891
<c.magenta>那意味着每种锻炼类型</c>

77
00:04:18,291 --> 00:04:19,358
<c.magenta>这是一个</c>

78
00:04:19,426 --> 00:04:22,462
<c.magenta>将用户可能会采取的最常见的操作</c>

79
00:04:22,529 --> 00:04:24,064
<c.magenta>变得最简单的不错的例子</c>

80
00:04:25,165 --> 00:04:28,635
<c.magenta>它允许他们瞥一眼用户界面</c>

81
00:04:30,304 --> 00:04:32,039
<c.magenta>当你处于锻炼界面时</c>

82
00:04:32,139 --> 00:04:34,975
<c.magenta>你可以在日常锻炼中</c>

83
00:04:35,108 --> 00:04:38,445
<c.magenta>比如我想从高强度的间歇训练开始</c>

84
00:04:38,912 --> 00:04:40,747
<c.magenta>并以快跑结束</c>

85
00:04:41,381 --> 00:04:43,450
<c.magenta>以前需要好几个步骤</c>

86
00:04:43,517 --> 00:04:45,385
<c.magenta>才能完成这次锻炼</c>

87
00:04:45,485 --> 00:04:46,320
<c.magenta>保存</c>

88
00:04:46,653 --> 00:04:48,555
<c.magenta>返回锻炼列表</c>

89
00:04:48,789 --> 00:04:50,457
<c.magenta>找到下一个要进行的锻炼类型</c>

90
00:04:50,524 --> 00:04:53,393
<c.magenta>很可能不是快速启动锻炼</c>

91
00:04:53,627 --> 00:04:56,163
<c.magenta>我需要设定一个目标然后再继续</c>

92
00:04:56,530 --> 00:05:00,000
<c.magenta>现在 只需要一次快速地轻触</c>

93
00:05:00,100 --> 00:05:01,668
<c.magenta>再轻触一次就能快速启动它</c>

94
00:05:02,436 --> 00:05:05,772
<c.magenta>这是一个创建可响应的</c>

95
00:05:06,373 --> 00:05:09,443
<c.magenta>不仅是在用户界面中更新数据</c>

96
00:05:09,510 --> 00:05:12,713
<c.magenta>也是思考用户在应用内的下一步操作</c>

97
00:05:12,880 --> 00:05:14,414
<c.magenta>基于你已经了解的信息</c>

98
00:05:19,186 --> 00:05:23,757
<c.magenta>现在 停靠栏是显示来自</c>

99
00:05:24,157 --> 00:05:26,894
<c.magenta>正如你在主要话题</c>

100
00:05:26,960 --> 00:05:28,862
<c.magenta>我们将停靠栏从横向滚动</c>

101
00:05:28,929 --> 00:05:30,397
<c.magenta>改成了垂直滚动</c>

102
00:05:31,131 --> 00:05:34,201
<c.magenta>稍后你将在WatchKit的</c>

103
00:05:34,568 --> 00:05:35,569
<c.magenta>应用应分别考虑</c>

104
00:05:35,636 --> 00:05:40,307
<c.magenta>哪种导航以及哪种过渡是最自然的</c>

105
00:05:40,407 --> 00:05:42,342
<c.magenta>从而可以很简便地在应用内导航</c>

106
00:05:42,409 --> 00:05:45,546
<c.magenta>通过滑动或滚动信息</c>

107
00:05:45,612 --> 00:05:47,581
<c.magenta>（提醒锻炼）</c>

108
00:05:47,648 --> 00:05:49,650
<c.magenta>（户外散步开启目标）</c>

109
00:05:50,918 --> 00:05:54,021
<c.magenta>除了改为垂直定向</c>

110
00:05:54,454 --> 00:05:57,124
<c.magenta>现在 停靠栏还拥有两种操作模式</c>

111
00:05:57,257 --> 00:05:59,760
<c.magenta>分别是收藏夹模式和最近使用模式</c>

112
00:06:00,194 --> 00:06:01,828
<c.magenta>我们很熟悉收藏夹模式</c>

113
00:06:01,895 --> 00:06:04,665
<c.magenta>它的操作</c>

114
00:06:05,032 --> 00:06:07,234
<c.magenta>用户可以选择并添加某个应用</c>

115
00:06:07,301 --> 00:06:10,103
<c.magenta>并能定义这些应用</c>

116
00:06:10,237 --> 00:06:14,141
<c.magenta>以及用户所使用的最后一个</c>

117
00:06:14,675 --> 00:06:18,745
<c.magenta>最近使用模式看起来</c>

118
00:06:18,812 --> 00:06:22,516
<c.magenta>你每天使用应用时</c>

119
00:06:22,716 --> 00:06:25,652
<c.magenta>那意味着你更希望</c>

120
00:06:25,719 --> 00:06:28,522
<c.magenta>在用户的停靠栏中</c>

121
00:06:29,990 --> 00:06:31,992
<c.magenta>意思是更新快照</c>

122
00:06:32,059 --> 00:06:33,927
<c.magenta>变得更加重要</c>

123
00:06:33,994 --> 00:06:38,098
<c.magenta>通过我们去年在watchOS 3中</c>

124
00:06:38,599 --> 00:06:40,934
<c.magenta>我们也增强了这个API的性能</c>

125
00:06:41,068 --> 00:06:46,540
<c.magenta>比如 你现在可以</c>

126
00:06:46,607 --> 00:06:49,843
<c.magenta>告诉你快照是否是你所希望得到的</c>

127
00:06:50,110 --> 00:06:52,746
<c.magenta>还是自动提供的</c>

128
00:06:52,846 --> 00:06:54,548
<c.magenta>但那是由系统触发的</c>

129
00:06:55,582 --> 00:06:59,820
<c.magenta>同时请谨记 那些同时打开</c>

130
00:06:59,887 --> 00:07:03,323
<c.magenta>是在后台启动的 是被挂起的</c>

131
00:06:59,887 --> 00:07:03,323
<c.magenta>是在后台启动的 是被挂起的</c>

132
00:07:03,390 --> 00:07:05,492
<c.magenta>因此打开这些应用的速度很快</c>

133
00:07:07,294 --> 00:07:09,062
<c.magenta>接下来的时间</c>

134
00:07:09,129 --> 00:07:12,366
<c.magenta>我们将谈谈关于WatchSTK的</c>

135
00:07:12,466 --> 00:07:13,800
<c.magenta>三个主要话题</c>

136
00:07:14,801 --> 00:07:17,871
<c.magenta>第一个话题是界面灵活性</c>

137
00:07:19,106 --> 00:07:23,143
<c.magenta>可以让你有更多的选择</c>

138
00:07:24,311 --> 00:07:26,113
<c.magenta>第二个话题是性能</c>

139
00:07:26,413 --> 00:07:29,383
<c.magenta>以便应用会一直尽可能地保持响应</c>

140
00:07:31,652 --> 00:07:33,987
<c.magenta>（用户界面的灵活性性能）</c>

141
00:07:34,121 --> 00:07:36,156
<c.magenta>最后一个话题是后台处理</c>

142
00:07:36,523 --> 00:07:41,195
<c.magenta>以便用户可以参与</c>

143
00:07:41,595 --> 00:07:45,032
<c.magenta>无论应用是处于停靠栏中</c>

144
00:07:45,299 --> 00:07:47,367
<c.magenta>或者是持续进行的任务应用</c>

145
00:07:51,438 --> 00:07:53,540
<c.magenta>让我们看一下用户界面的灵活性</c>

146
00:07:53,941 --> 00:07:56,877
<c.magenta>WatchKit提供一系列的</c>

147
00:07:57,144 --> 00:07:59,313
<c.magenta>并已针对表屏幕进行了优化</c>

148
00:07:59,546 --> 00:08:01,615
<c.magenta>但我们希望它们足够灵活</c>

149
00:07:59,546 --> 00:08:01,615
<c.magenta>但我们希望它们足够灵活</c>

150
00:08:01,748 --> 00:08:06,253
<c.magenta>以便你创建符合你的</c>

151
00:08:07,688 --> 00:08:10,057
<c.magenta>如果你已创建了表应用</c>

152
00:08:10,190 --> 00:08:12,092
<c.magenta>或者你是这个平台上的开发新人</c>

153
00:08:12,192 --> 00:08:13,861
<c.magenta>你一定会爱上如此简单地</c>

154
00:08:13,927 --> 00:08:17,264
<c.magenta>在watchOS 4中使用</c>

155
00:08:17,764 --> 00:08:20,834
<c.magenta>如果你是父亲或母亲</c>

156
00:08:20,901 --> 00:08:23,470
<c.magenta>你在家里已经</c>

157
00:08:23,537 --> 00:08:25,072
<c.magenta>稍后我们再详细介绍</c>

158
00:08:26,673 --> 00:08:28,876
<c.magenta>我家有两个孩子</c>

159
00:08:28,976 --> 00:08:32,412
<c.magenta>时间总是在工作和带孩子之间逝去</c>

160
00:08:32,513 --> 00:08:35,782
<c.magenta>我几乎没有时间进行常规锻炼</c>

161
00:08:36,183 --> 00:08:40,486
<c.magenta>但说实话 我现正在做的事</c>

162
00:08:40,554 --> 00:08:43,090
<c.magenta>无论是用肩膀驮着孩子</c>

163
00:08:43,289 --> 00:08:44,858
<c.magenta>所以我创建了一个新应用</c>

164
00:08:45,025 --> 00:08:47,928
<c.magenta>可以让我追踪</c>

165
00:08:48,095 --> 00:08:49,897
<c.magenta>我们可以用这个应用做例子</c>

166
00:08:49,963 --> 00:08:53,233
<c.magenta>来了解watchOS 4中的</c>

167
00:08:55,135 --> 00:08:58,071
<c.magenta>那么在这里 我们有一个</c>

168
00:08:58,238 --> 00:09:00,407
<c.magenta>屏幕中间显示了一个卡路里计数器</c>

169
00:08:58,238 --> 00:09:00,407
<c.magenta>屏幕中间显示了一个卡路里计数器</c>

170
00:09:00,474 --> 00:09:03,377
<c.magenta>以及一个时间标签</c>

171
00:09:03,443 --> 00:09:05,946
<c.magenta>是父母正在追逐孩子</c>

172
00:09:07,181 --> 00:09:10,184
<c.magenta>这个界面在watchOS中</c>

173
00:09:10,250 --> 00:09:12,719
<c.magenta>因为你不能叠加界面元素</c>

174
00:09:12,986 --> 00:09:14,955
<c.magenta>那么让我们看看这里都有什么功能</c>

175
00:09:15,389 --> 00:09:17,391
<c.magenta>（捉迷藏）</c>

176
00:09:21,428 --> 00:09:24,965
<c.magenta>在这里 在上层有一个群</c>

177
00:09:25,032 --> 00:09:27,100
<c.magenta>位于SpriteKit场景的上一层</c>

178
00:09:27,467 --> 00:09:30,904
<c.magenta>你可能正在想 我刚说过</c>

179
00:09:31,271 --> 00:09:34,174
<c.magenta>在watchOS 4中</c>

180
00:09:34,274 --> 00:09:36,610
<c.magenta>可以允许你实现类似这样的效果</c>

181
00:09:36,944 --> 00:09:39,813
<c.magenta>让我们看一下界面创建器</c>

182
00:09:42,482 --> 00:09:44,718
<c.magenta>针对群添加了一个新选项</c>

183
00:09:44,785 --> 00:09:47,421
<c.magenta>除了垂直和横向布局</c>

184
00:09:47,521 --> 00:09:48,989
<c.magenta>你现在还可以选择叠加</c>

185
00:09:49,723 --> 00:09:52,759
<c.magenta>选择叠加后</c>

186
00:09:52,826 --> 00:09:54,494
<c.magenta>独立的元素计算型值</c>

187
00:09:54,728 --> 00:09:57,865
<c.magenta>相反 你可以选择它们各自的布局</c>

188
00:09:57,931 --> 00:10:00,868
<c.magenta>比如上、中、下或左、中、右</c>

189
00:09:57,931 --> 00:10:00,868
<c.magenta>比如上、中、下或左、中、右</c>

190
00:10:01,335 --> 00:10:03,437
<c.magenta>群内的元素是按</c>

191
00:10:03,504 --> 00:10:05,873
<c.magenta>绝对的时尚设计的</c>

192
00:10:07,574 --> 00:10:10,344
<c.magenta>并且你还可以让群互相嵌套</c>

193
00:10:10,544 --> 00:10:12,412
<c.magenta>就像我用度量群实现的一样</c>

194
00:10:12,513 --> 00:10:15,182
<c.magenta>度量群包含我的标签</c>

195
00:10:15,682 --> 00:10:19,520
<c.magenta>你还可以使用[听不清]和间距</c>

196
00:10:19,686 --> 00:10:22,322
<c.magenta>来微调群内的布局</c>

197
00:10:23,290 --> 00:10:25,425
<c.magenta>你还可以指定c-order</c>

198
00:10:25,526 --> 00:10:28,462
<c.magenta>通过元素在大纲视图中出现的顺序</c>

199
00:10:28,562 --> 00:10:29,463
<c.magenta>请看这里</c>

200
00:10:30,464 --> 00:10:32,833
<c.magenta>这将使创建自定义</c>

201
00:10:32,900 --> 00:10:34,968
<c.magenta>与之前相比 简直是天壤之别</c>

202
00:10:35,035 --> 00:10:37,137
<c.magenta>（锻炼状态场景 锻炼状态）</c>

203
00:10:39,573 --> 00:10:42,376
<c.magenta>在我的锻炼控制屏幕中</c>

204
00:10:43,010 --> 00:10:45,245
<c.magenta>我已经添加了一个水锁按钮</c>

205
00:10:45,612 --> 00:10:47,181
<c.magenta>水锁按钮可以</c>

206
00:10:47,247 --> 00:10:50,884
<c.magenta>防止由于水在屏幕上滚动</c>

207
00:10:51,251 --> 00:10:54,521
<c.magenta>那么我家的情况是因为</c>

208
00:10:55,756 --> 00:10:59,660
<c.magenta>但之前在第三方的锻炼应用中</c>

209
00:10:59,893 --> 00:11:03,397
<c.magenta>要启动水锁得先启动锻炼</c>

210
00:10:59,893 --> 00:11:03,397
<c.magenta>要启动水锁得先启动锻炼</c>

211
00:11:03,463 --> 00:11:07,067
<c.magenta>然后退出并返回到表盘</c>

212
00:11:07,134 --> 00:11:08,635
<c.magenta>然后启动水锁</c>

213
00:11:08,836 --> 00:11:12,739
<c.magenta>你下一次抬起手腕时</c>

214
00:11:13,006 --> 00:11:15,042
<c.magenta>我们将在watchOS 4中</c>

215
00:11:15,108 --> 00:11:19,012
<c.magenta>现在你可以在自己的</c>

216
00:11:19,079 --> 00:11:21,048
<c.magenta>使其符合你的应用的特色</c>

217
00:11:22,583 --> 00:11:26,753
<c.magenta>现在水锁只能由开发人员启动</c>

218
00:11:27,187 --> 00:11:29,256
<c.magenta>用户得能自己实现</c>

219
00:11:30,891 --> 00:11:34,127
<c.magenta>当他们与侧边按钮</c>

220
00:11:34,194 --> 00:11:36,897
<c.magenta>将出现一个叠加层</c>

221
00:11:36,964 --> 00:11:39,600
<c.magenta>与系统当前所使用的一样</c>

222
00:11:40,334 --> 00:11:42,636
<c.magenta>它会告诉他们如何禁用水锁</c>

223
00:11:43,437 --> 00:11:45,405
<c.magenta>可以在锻炼应用中启用水锁</c>

224
00:11:45,472 --> 00:11:47,808
<c.magenta>在另一个基于会话的活动中</c>

225
00:11:47,875 --> 00:11:50,711
<c.magenta>我们可以在简单的显示中实现</c>

226
00:11:51,211 --> 00:11:52,513
<c.magenta>原因是</c>

227
00:11:52,613 --> 00:11:55,315
<c.magenta>对于不在锻炼会话中的应用来说</c>

228
00:11:55,415 --> 00:11:58,652
<c.magenta>一段时间以后 当手腕落下时</c>

229
00:11:58,719 --> 00:12:00,787
<c.magenta>应用将会在后台被挂起</c>

230
00:11:58,719 --> 00:12:00,787
<c.magenta>应用将会在后台被挂起</c>

231
00:12:00,854 --> 00:12:02,356
<c.magenta>当用户抬起手腕时</c>

232
00:12:02,656 --> 00:12:04,358
<c.magenta>他们将不再看到那个应用</c>

233
00:12:04,424 --> 00:12:06,994
<c.magenta>因为屏幕被锁定了</c>

234
00:12:07,494 --> 00:12:10,864
<c.magenta>但在锻炼应用中</c>

235
00:12:10,931 --> 00:12:12,466
<c.magenta>会一直显示应用</c>

236
00:12:13,433 --> 00:12:15,302
<c.magenta>因此当我正在锻炼时</c>

237
00:12:15,369 --> 00:12:17,871
<c.magenta>我可以从锻炼应用中</c>

238
00:12:18,906 --> 00:12:20,474
<c.magenta>即使屏幕是锁定状态</c>

239
00:12:20,941 --> 00:12:23,277
<c.magenta>让我们看看如何在代码中实现</c>

240
00:12:28,782 --> 00:12:30,651
<c.magenta>非常简单</c>

241
00:12:30,717 --> 00:12:33,387
<c.magenta>是对共享扩展对象的一次调用</c>

242
00:12:33,987 --> 00:12:38,892
<c.magenta>现在需要注意的最后一点是</c>

243
00:12:38,959 --> 00:12:40,527
<c.magenta>只能在当应用处于前台时启用水锁</c>

244
00:12:40,594 --> 00:12:43,263
<c.magenta>用户总是能了解正在发生什么</c>

245
00:12:45,632 --> 00:12:48,969
<c.magenta>请看 我的应用</c>

246
00:12:49,102 --> 00:12:51,138
<c.magenta>庆祝我找到了一种将锻炼</c>

247
00:12:51,205 --> 00:12:53,140
<c.magenta>与父亲的职责结合在一起的方式</c>

248
00:12:53,640 --> 00:12:56,743
<c.magenta>这就是我要展示给大家看的东西</c>

249
00:12:57,044 --> 00:12:59,446
<c.magenta>但这个仅限于watchOS平台</c>

250
00:12:59,513 --> 00:13:02,216
<c.magenta>当我脱掉手表时</c>

251
00:12:59,513 --> 00:13:02,216
<c.magenta>当我脱掉手表时</c>

252
00:13:02,282 --> 00:13:03,951
<c.magenta>我可以通过手势</c>

253
00:13:04,084 --> 00:13:06,520
<c.magenta>或把表反过来轻触屏幕实现</c>

254
00:13:06,653 --> 00:13:08,655
<c.magenta>但内容就上下颠倒了</c>

255
00:13:09,389 --> 00:13:13,794
<c.magenta>在watchOS 4中</c>

256
00:13:14,328 --> 00:13:18,165
<c.magenta>启用后 手腕的移动将不会关闭屏幕</c>

257
00:13:18,232 --> 00:13:21,969
<c.magenta>当你的手腕远离你时</c>

258
00:13:23,070 --> 00:13:25,472
<c.magenta>这将不会无限期保持屏幕开启</c>

259
00:13:25,873 --> 00:13:27,941
<c.magenta>闲置计时器将休眠显示器</c>

260
00:13:28,008 --> 00:13:29,810
<c.magenta>在休止一段时间后</c>

261
00:13:29,877 --> 00:13:31,078
<c.magenta>但你有时间</c>

262
00:13:31,144 --> 00:13:33,647
<c.magenta>向其他人展示内容</c>

263
00:13:34,681 --> 00:13:36,183
<c.magenta>让我们来看看属性</c>

264
00:13:37,584 --> 00:13:39,520
<c.magenta>你从这里可以看到一个主题</c>

265
00:13:39,586 --> 00:13:40,787
<c.magenta>就是你不必做大量的工作</c>

266
00:13:40,854 --> 00:13:42,789
<c.magenta>来利用我们在watchOS 4中</c>

267
00:13:42,856 --> 00:13:44,791
<c.magenta>所增加的用户界面功能</c>

268
00:13:46,026 --> 00:13:47,528
<c.magenta>这个的应用范围很广</c>

269
00:13:47,594 --> 00:13:49,496
<c.magenta>让我们来看几个例子</c>

270
00:13:50,330 --> 00:13:53,634
<c.magenta>Proloquo4Text是一个</c>

271
00:13:53,967 --> 00:13:56,637
<c.magenta>可以让识字的儿童、青少年和成年人</c>

272
00:13:57,404 --> 00:13:59,673
<c.magenta>不需要说话就能表达信息</c>

273
00:14:00,374 --> 00:14:03,844
<c.magenta>应用允许用户轻触一些</c>

274
00:14:03,911 --> 00:14:08,182
<c.magenta>并将手腕展示给其他人</c>

275
00:14:08,682 --> 00:14:10,851
<c.magenta>我下了一个咖啡订单</c>

276
00:14:11,418 --> 00:14:13,220
<c.magenta>通过将手腕展示给收银员看</c>

277
00:14:13,287 --> 00:14:15,856
<c.magenta>当手腕远离我时</c>

278
00:14:15,923 --> 00:14:17,558
<c.magenta>并且文本的显示方向正确</c>

279
00:14:19,126 --> 00:14:21,762
<c.magenta>我可以通过</c>

280
00:14:23,030 --> 00:14:26,700
<c.magenta>Starbucks可以让我打开</c>

281
00:14:26,800 --> 00:14:28,235
<c.magenta>并在屏幕上显示</c>

282
00:14:29,303 --> 00:14:32,072
<c.magenta>我可以将条形码</c>

283
00:14:32,372 --> 00:14:34,808
<c.magenta>并让它保持在屏幕上</c>

284
00:14:35,876 --> 00:14:38,078
<c.magenta>此外还有许多不同的应用</c>

285
00:14:38,145 --> 00:14:41,448
<c.magenta>你应该考虑在你的应用中</c>

286
00:14:43,717 --> 00:14:46,653
<c.magenta>接下来 页面视图</c>

287
00:14:46,720 --> 00:14:47,855
<c.magenta>一种垂直页面视图</c>

288
00:14:49,790 --> 00:14:51,859
<c.magenta>我本可以将其作为滚动视图来实现</c>

289
00:14:51,925 --> 00:14:54,294
<c.magenta>但实际上这是两种不同的页面</c>

290
00:14:54,361 --> 00:14:56,797
<c.magenta>并且它们对屏幕的咬合非常棒</c>

291
00:14:56,930 --> 00:14:59,933
<c.magenta>并且在数码表冠中的使用也非常自然</c>

292
00:15:00,534 --> 00:15:02,703
<c.magenta>页面之间的动画</c>

293
00:15:02,870 --> 00:15:07,407
<c.magenta>类似于去年引入的</c>

294
00:15:07,474 --> 00:15:09,543
<c.magenta>表格行之间的换行</c>

295
00:15:10,110 --> 00:15:13,380
<c.magenta>但现在你不再需要</c>

296
00:15:16,416 --> 00:15:18,652
<c.magenta>让我们看看如何在界面中实施</c>

297
00:15:20,187 --> 00:15:22,389
<c.magenta>我们用一种引入新信息中的</c>

298
00:15:22,456 --> 00:15:26,193
<c.magenta>替换了重新加载根控制器的方法</c>

299
00:15:26,493 --> 00:15:29,296
<c.magenta>第一个要素是设置方向的功能</c>

300
00:15:29,396 --> 00:15:30,597
<c.magenta>无论是应用在横向</c>

301
00:15:30,664 --> 00:15:33,200
<c.magenta>或是垂直页面视图中</c>

302
00:15:33,267 --> 00:15:34,835
<c.magenta>方法都一样</c>

303
00:15:35,802 --> 00:15:39,006
<c.magenta>关于第二点 我们得到了很多反馈</c>

304
00:15:39,106 --> 00:15:41,475
<c.magenta>很高兴能在watchOS 4中</c>

305
00:15:41,575 --> 00:15:44,444
<c.magenta>即设置初始页面索引功能</c>

306
00:15:45,012 --> 00:15:46,947
<c.magenta>这对于像锻炼应用</c>

307
00:15:47,014 --> 00:15:49,183
<c.magenta>因为你想得到一个主界面</c>

308
00:15:51,418 --> 00:15:53,754
<c.magenta>我知道我们见过许多雷达</c>

309
00:15:55,088 --> 00:15:56,890
<c.magenta>你想在中心偏左的位置</c>

310
00:15:56,990 --> 00:15:59,860
<c.magenta>但你想直接加载到主界面</c>

311
00:16:00,093 --> 00:16:02,563
<c.magenta>那么这个功能就允许你</c>

312
00:16:02,629 --> 00:16:04,231
<c.magenta>并在那里加载</c>

313
00:16:08,035 --> 00:16:09,603
<c.magenta>这是一个历史视图</c>

314
00:16:10,237 --> 00:16:13,774
<c.magenta>处理像这样拥有上百条记录的界面时</c>

315
00:16:13,841 --> 00:16:16,009
<c.magenta>你需要注意几点要素</c>

316
00:16:16,176 --> 00:16:17,778
<c.magenta>第一点是存储</c>

317
00:16:17,945 --> 00:16:22,216
<c.magenta>我很可能不想将我在表上</c>

318
00:16:22,316 --> 00:16:23,584
<c.magenta>但我可以加载它们</c>

319
00:16:23,817 --> 00:16:26,887
<c.magenta>通过手机或服务器中的表连通性</c>

320
00:16:28,255 --> 00:16:29,556
<c.magenta>第二点是性能</c>

321
00:16:30,057 --> 00:16:32,192
<c.magenta>一次加载太多表格行</c>

322
00:16:32,326 --> 00:16:35,195
<c.magenta>可以导致性能降低</c>

323
00:16:35,262 --> 00:16:36,830
<c.magenta>和表加载时间过长</c>

324
00:16:42,336 --> 00:16:45,372
<c.magenta>那么在这里</c>

325
00:16:45,439 --> 00:16:47,774
<c.magenta>当用户滚动到屏幕底部</c>

326
00:16:47,841 --> 00:16:48,942
<c.magenta>或屏幕顶部时</c>

327
00:16:49,042 --> 00:16:52,613
<c.magenta>因此你可以实现类似这样的功能</c>

328
00:16:52,679 --> 00:16:54,982
<c.magenta>我把它放在一个加载指示器上</c>

329
00:16:55,048 --> 00:16:57,184
<c.magenta>然后我从手机上加载数据</c>

330
00:16:59,319 --> 00:17:02,022
<c.magenta>让我们看看如何实现回调</c>

331
00:16:59,319 --> 00:17:02,022
<c.magenta>让我们看看如何实现回调</c>

332
00:17:02,089 --> 00:17:04,090
<c.magenta>（历史）</c>

333
00:17:06,560 --> 00:17:09,863
<c.magenta>首先 这是我在上一个</c>

334
00:17:10,063 --> 00:17:12,065
<c.magenta>InterfaceOffsetDidScrollToTop</c>

335
00:17:12,366 --> 00:17:14,568
<c.magenta>当动画完成</c>

336
00:17:14,635 --> 00:17:17,604
<c.magenta>用户滚动到屏幕底部时会调用它</c>

337
00:17:18,172 --> 00:17:19,839
<c.magenta>然后是一个相反的函数</c>

338
00:17:19,906 --> 00:17:21,775
<c.magenta>interfaceOffsetDidScrollToTop</c>

339
00:17:22,041 --> 00:17:24,243
<c.magenta>当用户滚动到屏幕顶部时调用</c>

340
00:17:24,877 --> 00:17:27,013
<c.magenta>最后一个是</c>

341
00:17:27,079 --> 00:17:29,850
<c.magenta>当用户轻触状态栏时调用</c>

342
00:17:29,950 --> 00:17:32,085
<c.magenta>这将滚动到界面顶部</c>

343
00:17:32,786 --> 00:17:34,855
<c.magenta>我们还包含了一个滚动函数</c>

344
00:17:34,955 --> 00:17:37,958
<c.magenta>可以让你传递一个界面元素</c>

345
00:17:38,125 --> 00:17:42,462
<c.magenta>并滚动它使它</c>

346
00:17:42,829 --> 00:17:46,099
<c.magenta>我把它用在历史视图中</c>

347
00:17:46,500 --> 00:17:48,902
<c.magenta>当加载包含动画的群之后</c>

348
00:17:48,969 --> 00:17:50,237
<c.magenta>它会给屏幕造成负载</c>

349
00:17:50,304 --> 00:17:52,406
<c.magenta>所以我就把它传给滚动方法</c>

350
00:17:52,472 --> 00:17:55,209
<c.magenta>并设置为显示屏幕底部</c>

351
00:17:58,312 --> 00:17:59,146
<c.magenta>好了</c>

352
00:17:59,213 --> 00:18:03,016
<c.magenta>在这里 有一个重新设计的</c>

353
00:17:59,213 --> 00:18:03,016
<c.magenta>在这里 有一个重新设计的</c>

354
00:18:03,083 --> 00:18:05,986
<c.magenta>我们将其重新设计为全屏动画</c>

355
00:18:06,520 --> 00:18:09,857
<c.magenta>在watchOS 4的</c>

356
00:18:09,957 --> 00:18:12,626
<c.magenta>你现在可以使用整个显示屏了</c>

357
00:18:13,660 --> 00:18:15,229
<c.magenta>但它仍然是块表</c>

358
00:18:15,295 --> 00:18:18,765
<c.magenta>所以我们总是会在右上角显示时间</c>

359
00:18:18,832 --> 00:18:22,402
<c.magenta>它的背景是一个渐变</c>

360
00:18:22,469 --> 00:18:24,705
<c.magenta>而无论内容是什么颜色的</c>

361
00:18:26,807 --> 00:18:28,976
<c.magenta>在watchOS 4中</c>

362
00:18:29,042 --> 00:18:31,645
<c.magenta>有许多新变化</c>

363
00:18:32,312 --> 00:18:34,982
<c.magenta>你可以稍后参加本周的一场演讲</c>

364
00:18:36,316 --> 00:18:39,453
<c.magenta>关于设计一个了不起的表体验</c>

365
00:18:39,586 --> 00:18:42,422
<c.magenta>就是规划</c>

366
00:18:42,489 --> 00:18:43,624
<c.magenta>你在表上所进行的交互</c>

367
00:18:43,690 --> 00:18:45,859
<c.magenta>以及应用的设计</c>

368
00:18:46,727 --> 00:18:49,162
<c.magenta>接下来 让我们来看看性能</c>

369
00:18:49,897 --> 00:18:52,399
<c.magenta>之前我们所说的表上的交互时间</c>

370
00:18:52,466 --> 00:18:54,234
<c.magenta>是短暂的 但可以有许多次交互</c>

371
00:18:54,501 --> 00:18:57,371
<c.magenta>我们想确保提前做好准备</c>

372
00:18:57,437 --> 00:18:59,239
<c.magenta>但也要尽可能地保持响应</c>

373
00:19:00,874 --> 00:19:01,742
<c.magenta>为了这个目的</c>

374
00:19:01,808 --> 00:19:05,746
<c.magenta>我们在watchOS 2中</c>

375
00:19:05,812 --> 00:19:07,114
<c.magenta>挪到了表上</c>

376
00:19:07,247 --> 00:19:08,916
<c.magenta>那的确很有帮助</c>

377
00:19:09,016 --> 00:19:12,286
<c.magenta>它意味着你可以在手机</c>

378
00:19:13,053 --> 00:19:15,722
<c.magenta>但也意味着延迟时间长 通讯质量差</c>

379
00:19:16,356 --> 00:19:17,758
<c.magenta>但在后台</c>

380
00:19:19,359 --> 00:19:22,496
<c.magenta>应用和扩展在各自的进程中运行</c>

381
00:19:22,563 --> 00:19:24,665
<c.magenta>你的代码正在尝试进行更新</c>

382
00:19:24,731 --> 00:19:26,166
<c.magenta>并且你也正在对事件做出响应</c>

383
00:19:26,266 --> 00:19:28,035
<c.magenta>这里存在</c>

384
00:19:28,101 --> 00:19:30,170
<c.magenta>两者之间的内部进程通讯延迟</c>

385
00:19:31,138 --> 00:19:33,240
<c.magenta>在watchOS 4中</c>

386
00:19:33,307 --> 00:19:36,844
<c.magenta>在运行时</c>

387
00:19:36,944 --> 00:19:38,478
<c.magenta>加载到同一个进程中</c>

388
00:19:38,946 --> 00:19:42,216
<c.magenta>这将使应用的性能得到很大的提升</c>

389
00:19:42,316 --> 00:19:44,885
<c.magenta>当与设备交互时 你将发现</c>

390
00:19:44,952 --> 00:19:46,587
<c.magenta>视图加载速度变快</c>

391
00:19:46,653 --> 00:19:49,656
<c.magenta>帧频变高</c>

392
00:19:50,224 --> 00:19:52,726
<c.magenta>最棒的是你不必做任何事</c>

393
00:19:52,793 --> 00:19:54,595
<c.magenta>就能让用户获得此种体验</c>

394
00:19:54,795 --> 00:19:59,533
<c.magenta>这对于watchOS 2及以上的全部</c>

395
00:19:59,967 --> 00:20:01,668
<c.magenta>那意味着无需更新</c>

396
00:19:59,967 --> 00:20:01,668
<c.magenta>那意味着无需更新</c>

397
00:20:02,169 --> 00:20:03,403
<c.magenta>无需重新编译</c>

398
00:20:04,671 --> 00:20:05,739
<c.magenta>全部现存应用</c>

399
00:20:05,806 --> 00:20:08,141
<c.magenta>无论是用户设备上的应用</c>

400
00:20:08,208 --> 00:20:10,978
<c.magenta>都将在watchOS 4中</c>

401
00:20:11,879 --> 00:20:14,982
<c.magenta>这将产生很大的影响</c>

402
00:20:16,884 --> 00:20:17,885
<c.magenta>我说跑题了</c>

403
00:20:18,485 --> 00:20:21,555
<c.magenta>最后让我们来看看后台进程</c>

404
00:20:22,122 --> 00:20:25,692
<c.magenta>正如我所说的</c>

405
00:20:26,093 --> 00:20:28,328
<c.magenta>提前准备</c>

406
00:20:28,395 --> 00:20:30,597
<c.magenta>并保持应用数据更新非常重要</c>

407
00:20:30,898 --> 00:20:34,168
<c.magenta>它的实现是通过结合后台运行模式</c>

408
00:20:34,234 --> 00:20:37,171
<c.magenta>表盘控件的使用、快照API</c>

409
00:20:37,271 --> 00:20:39,606
<c.magenta>以及今年我们所实现的更新</c>

410
00:20:39,673 --> 00:20:42,142
<c.magenta>叫作Frontmost App State</c>

411
00:20:42,409 --> 00:20:44,211
<c.magenta>稍后我们会详细讲这个</c>

412
00:20:45,979 --> 00:20:49,583
<c.magenta>去年 我们引入了锻炼进程后台模式</c>

413
00:20:49,683 --> 00:20:52,252
<c.magenta>允许第三方应用在后台运行</c>

414
00:20:52,352 --> 00:20:55,756
<c.magenta>并当用户抬起手腕时 使应用可用</c>

415
00:20:56,356 --> 00:20:59,426
<c.magenta>今年我们将继续改善这些API</c>

416
00:20:59,526 --> 00:21:01,295
<c.magenta>我们添加了一些新附件</c>

417
00:20:59,526 --> 00:21:01,295
<c.magenta>我们添加了一些新附件</c>

418
00:21:01,862 --> 00:21:05,032
<c.magenta>第一个是硬件休止和恢复API</c>

419
00:21:05,432 --> 00:21:08,869
<c.magenta>当用户同时按下侧边按钮</c>

420
00:21:10,003 --> 00:21:13,340
<c.magenta>将生成一个事件</c>

421
00:21:14,508 --> 00:21:16,577
<c.magenta>因此你可以根据会话所处的状态</c>

422
00:21:16,643 --> 00:21:18,946
<c.magenta>暂停和恢复锻炼</c>

423
00:21:21,448 --> 00:21:23,650
<c.magenta>第二个是锻炼片段</c>

424
00:21:23,884 --> 00:21:24,818
<c.magenta>这可以允许你…</c>

425
00:21:24,885 --> 00:21:27,921
<c.magenta>它是HKWorkout事件…</c>

426
00:21:28,288 --> 00:21:31,225
<c.magenta>允许你在锻炼应用内</c>

427
00:21:31,291 --> 00:21:32,492
<c.magenta>标记重要的时间段</c>

428
00:21:32,893 --> 00:21:35,596
<c.magenta>可以用于 比如标记</c>

429
00:21:35,662 --> 00:21:37,631
<c.magenta>间歇训练中的不同部分</c>

430
00:21:38,866 --> 00:21:41,368
<c.magenta>去年我们就开始通过</c>

431
00:21:41,435 --> 00:21:44,938
<c.magenta>追踪指定锻炼类型的锻炼路径</c>

432
00:21:45,506 --> 00:21:49,343
<c.magenta>获得用户许可后</c>

433
00:21:49,409 --> 00:21:51,078
<c.magenta>也可以创建自己的路径</c>

434
00:21:52,079 --> 00:21:55,048
<c.magenta>现在 如果你有一个锻炼应用</c>

435
00:21:55,382 --> 00:21:58,285
<c.magenta>你可以稍后参加</c>

436
00:21:58,385 --> 00:22:00,487
<c.magenta>是关于如何使用API</c>

437
00:21:58,385 --> 00:22:00,487
<c.magenta>是关于如何使用API</c>

438
00:22:00,554 --> 00:22:03,757
<c.magenta>以及HealthKit中的</c>

439
00:22:05,292 --> 00:22:08,929
<c.magenta>我们今年还在WatchKit中</c>

440
00:22:09,296 --> 00:22:11,665
<c.magenta>首先是地理位置背景模式</c>

441
00:22:11,999 --> 00:22:14,668
<c.magenta>对于基于地理位置的游戏</c>

442
00:22:14,735 --> 00:22:17,037
<c.magenta>和路线规划导航应用来说很有用</c>

443
00:22:17,971 --> 00:22:20,607
<c.magenta>比如锻炼应用</c>

444
00:22:20,674 --> 00:22:22,709
<c.magenta>总是能在用户抬起手腕时可用</c>

445
00:22:24,144 --> 00:22:26,113
<c.magenta>如果你需要警示用户</c>

446
00:22:26,180 --> 00:22:27,714
<c.magenta>比如拐错弯了</c>

447
00:22:27,781 --> 00:22:30,184
<c.magenta>你可以通过来自后台的音频和力触觉</c>

448
00:22:30,250 --> 00:22:31,718
<c.magenta>引起他们的注意</c>

449
00:22:33,754 --> 00:22:34,788
<c.magenta>正如我刚提到过的</c>

450
00:22:34,855 --> 00:22:39,159
<c.magenta>可以跟水锁同时使用的</c>

451
00:22:39,226 --> 00:22:40,994
<c.magenta>即地理位置模式</c>

452
00:22:41,061 --> 00:22:44,031
<c.magenta>你可以在与水相关的活动中结合使用</c>

453
00:22:45,499 --> 00:22:50,404
<c.magenta>然而为了保存电量</c>

454
00:22:50,537 --> 00:22:53,140
<c.magenta>你需要监控后台要实现哪些功能</c>

455
00:22:53,207 --> 00:22:55,042
<c.magenta>以及稍后可以保存哪些数据</c>

456
00:22:57,511 --> 00:23:01,815
<c.magenta>最后 你必须从前台</c>

457
00:22:57,511 --> 00:23:01,815
<c.magenta>最后 你必须从前台</c>

458
00:23:01,882 --> 00:23:03,050
<c.magenta>就像锻炼会话一样</c>

459
00:23:03,283 --> 00:23:06,119
<c.magenta>因此用户总能了解正在发生什么</c>

460
00:23:06,320 --> 00:23:08,055
<c.magenta>当你获取地理位置时</c>

461
00:23:08,155 --> 00:23:10,991
<c.magenta>会有一个状态指示器和控制中心</c>

462
00:23:11,091 --> 00:23:13,594
<c.magenta>因此用户总能监控他们的隐私权</c>

463
00:23:16,163 --> 00:23:20,234
<c.magenta>我们还增加了内嵌音频</c>

464
00:23:21,435 --> 00:23:23,670
<c.magenta>录音功能</c>

465
00:23:24,104 --> 00:23:27,875
<c.magenta>但只能在模式形式中使用</c>

466
00:23:27,941 --> 00:23:30,110
<c.magenta>返回给你一个文件</c>

467
00:23:30,544 --> 00:23:33,614
<c.magenta>当用户放下手腕时</c>

468
00:23:33,714 --> 00:23:36,183
<c.magenta>但在整个过程中</c>

469
00:23:36,617 --> 00:23:39,853
<c.magenta>在watchOS 4中</c>

470
00:23:39,920 --> 00:23:41,722
<c.magenta>来解决这些问题</c>

471
00:23:43,090 --> 00:23:46,159
<c.magenta>首先 不再局限于模式形式</c>

472
00:23:46,226 --> 00:23:48,762
<c.magenta>因此你可以创建自己的</c>

473
00:23:48,862 --> 00:23:50,697
<c.magenta>匹配你的应用的用户界面</c>

474
00:23:51,465 --> 00:23:53,467
<c.magenta>你还可以实现内嵌音频录制功能</c>

475
00:23:53,700 --> 00:23:56,370
<c.magenta>因此 如果你想在音频中</c>

476
00:23:56,770 --> 00:24:00,174
<c.magenta>或如果你想在表上</c>

477
00:23:56,770 --> 00:24:00,174
<c.magenta>或如果你想在表上</c>

478
00:24:01,608 --> 00:24:04,545
<c.magenta>当用户放下手腕时</c>

479
00:24:04,645 --> 00:24:06,580
<c.magenta>但现在是完全的后台模式</c>

480
00:24:06,680 --> 00:24:09,049
<c.magenta>你不需要浪费额外的电量</c>

481
00:24:09,116 --> 00:24:10,484
<c.magenta>让屏幕一直亮着</c>

482
00:24:11,418 --> 00:24:13,253
<c.magenta>想象一下 走进教室</c>

483
00:24:13,320 --> 00:24:15,989
<c.magenta>并通过手腕上的表</c>

484
00:24:17,558 --> 00:24:20,160
<c.magenta>跟watchOS上的</c>

485
00:24:20,861 --> 00:24:23,830
<c.magenta>当用户抬起手腕时 会显示应用</c>

486
00:24:24,298 --> 00:24:27,267
<c.magenta>CPU是受限的 应用必须开始…</c>

487
00:24:27,334 --> 00:24:29,603
<c.magenta>会话必须从前台开始</c>

488
00:24:30,070 --> 00:24:32,372
<c.magenta>当你录音时</c>

489
00:24:32,472 --> 00:24:34,741
<c.magenta>表盘上会显示一个指示器</c>

490
00:24:34,808 --> 00:24:37,411
<c.magenta>用户可以轻触返回应用</c>

491
00:24:40,581 --> 00:24:42,950
<c.magenta>在watchOS 4中</c>

492
00:24:43,016 --> 00:24:45,519
<c.magenta>这些模式将起到很大的作用</c>

493
00:24:48,088 --> 00:24:48,922
<c.magenta>好了</c>

494
00:24:49,790 --> 00:24:53,594
<c.magenta>在watchOS 4中</c>

495
00:24:53,827 --> 00:24:54,661
<c.magenta>这个…</c>

496
00:24:57,564 --> 00:25:00,968
<c.magenta>这意味着你可以</c>

497
00:24:57,564 --> 00:25:00,968
<c.magenta>这意味着你可以</c>

498
00:25:02,069 --> 00:25:04,404
<c.magenta>并获得更新的数据</c>

499
00:25:04,471 --> 00:25:08,475
<c.magenta>并且当手机不在身边时</c>

500
00:25:08,742 --> 00:25:12,379
<c.magenta>以前 对于蓝牙设备来说</c>

501
00:25:12,479 --> 00:25:15,048
<c.magenta>然后再通过表连通性迁移数据</c>

502
00:25:15,249 --> 00:25:17,317
<c.magenta>数据更新速度要更快才行</c>

503
00:25:17,584 --> 00:25:21,455
<c.magenta>通过表上的Core Bluetooth</c>

504
00:25:21,922 --> 00:25:25,292
<c.magenta>我们只支持中心模式</c>

505
00:25:25,359 --> 00:25:27,194
<c.magenta>你可以连接到其它设备</c>

506
00:25:27,261 --> 00:25:30,264
<c.magenta>但表自身不能作为外部设备使用</c>

507
00:25:31,565 --> 00:25:33,133
<c.magenta>在前台</c>

508
00:25:33,200 --> 00:25:36,603
<c.magenta>样本之间有一个最小时间</c>

509
00:25:36,837 --> 00:25:39,540
<c.magenta>当与后台模式同时使用时</c>

510
00:25:39,940 --> 00:25:43,177
<c.magenta>那个时间就被限制为120毫秒</c>

511
00:25:45,312 --> 00:25:47,748
<c.magenta>当你与后台模式同时使用时</c>

512
00:25:47,981 --> 00:25:50,584
<c.magenta>后台运行的应用只能连接不能扫描</c>

513
00:25:50,651 --> 00:25:53,187
<c.magenta>当应用处于前台时</c>

514
00:25:53,253 --> 00:25:55,189
<c.magenta>你需要进行搜索和配对</c>

515
00:25:58,458 --> 00:26:01,128
<c.magenta>现在 当应用被挂起时</c>

516
00:25:58,458 --> 00:26:01,128
<c.magenta>现在 当应用被挂起时</c>

517
00:26:01,228 --> 00:26:03,263
<c.magenta>外部设备将自动断开连接</c>

518
00:26:03,330 --> 00:26:06,366
<c.magenta>即便有公告</c>

519
00:26:06,733 --> 00:26:08,302
<c.magenta>如果你需要持续更新</c>

520
00:26:08,368 --> 00:26:10,838
<c.magenta>你必须在后台模式中使用</c>

521
00:26:13,040 --> 00:26:14,174
<c.magenta>要了解更多信息</c>

522
00:26:14,241 --> 00:26:17,511
<c.magenta>稍后请参加本周的</c>

523
00:26:18,045 --> 00:26:21,815
<c.magenta>但让我们先来看一个</c>

524
00:26:23,383 --> 00:26:26,019
<c.magenta>那么ReSound Smart 3D</c>

525
00:26:26,086 --> 00:26:29,623
<c.magenta>可以让你连接到蓝牙耳机</c>

526
00:26:29,723 --> 00:26:33,126
<c.magenta>从而根据你所在的环境</c>

527
00:26:33,560 --> 00:26:35,829
<c.magenta>我可以从户外聆听环境改为</c>

528
00:26:35,896 --> 00:26:39,066
<c.magenta>餐厅环境</c>

529
00:26:39,233 --> 00:26:40,868
<c.magenta>只需要轻触手腕上的表即可</c>

530
00:26:41,301 --> 00:26:45,038
<c.magenta>并且通过watchOS 4</c>

531
00:26:45,172 --> 00:26:49,343
<c.magenta>因此可以快速更新</c>

532
00:26:49,409 --> 00:26:50,911
<c.magenta>继续使用设备</c>

533
00:26:52,112 --> 00:26:53,447
<c.magenta>这就是Core Bluetooth</c>

534
00:26:59,052 --> 00:27:02,556
<c.magenta>我提到过一个</c>

535
00:26:59,052 --> 00:27:02,556
<c.magenta>我提到过一个</c>

536
00:27:02,756 --> 00:27:04,825
<c.magenta>对于这个东西</c>

537
00:27:04,892 --> 00:27:08,462
<c.magenta>因为它将改变我们思考</c>

538
00:27:09,029 --> 00:27:10,931
<c.magenta>使用表应用的体验</c>

539
00:27:10,998 --> 00:27:13,934
<c.magenta>与其它平台上的不同</c>

540
00:27:14,234 --> 00:27:17,070
<c.magenta>当我使用iPhone应用时</c>

541
00:27:17,137 --> 00:27:20,841
<c.magenta>使用一段时间 最后按主键</c>

542
00:27:20,908 --> 00:27:22,476
<c.magenta>关闭它</c>

543
00:27:23,443 --> 00:27:26,013
<c.magenta>然而在表应用中 我可能只使用</c>

544
00:27:26,079 --> 00:27:27,881
<c.magenta>很短的时间</c>

545
00:27:27,948 --> 00:27:29,883
<c.magenta>也许只有几秒钟</c>

546
00:27:30,717 --> 00:27:35,622
<c.magenta>但我可能会在单一会话中</c>

547
00:27:36,089 --> 00:27:41,028
<c.magenta>比如 我可能会在小卖部</c>

548
00:27:41,295 --> 00:27:43,664
<c.magenta>在将商品放到购物车中时核对物品</c>

549
00:27:44,064 --> 00:27:47,367
<c.magenta>每次将商品放入购物车中时</c>

550
00:27:47,434 --> 00:27:49,603
<c.magenta>然后就能看到应用</c>

551
00:27:49,670 --> 00:27:54,174
<c.magenta>这使找到要核对的物品变得</c>

552
00:27:54,708 --> 00:27:56,310
<c.magenta>然后就可以继续购物</c>

553
00:27:57,277 --> 00:28:01,181
<c.magenta>我们恢复应用而不是表盘的过程</c>

554
00:27:57,277 --> 00:28:01,181
<c.magenta>我们恢复应用而不是表盘的过程</c>

555
00:28:01,582 --> 00:28:03,784
<c.magenta>叫作Frontmost App State</c>

556
00:28:05,085 --> 00:28:10,023
<c.magenta>在watchOS 3中那段时间是</c>

557
00:28:10,891 --> 00:28:13,427
<c.magenta>这对于用户来说太久了</c>

558
00:28:13,493 --> 00:28:17,431
<c.magenta>并且最后在用户结束使用应用</c>

559
00:28:17,998 --> 00:28:22,369
<c.magenta>所以在watchOS 3.2中</c>

560
00:28:25,105 --> 00:28:27,441
<c.magenta>会在每次抬起手腕时发生</c>

561
00:28:27,574 --> 00:28:31,812
<c.magenta>那么在大多数情况下</c>

562
00:28:31,879 --> 00:28:33,914
<c.magenta>整个时段内保持在前台</c>

563
00:28:36,116 --> 00:28:38,252
<c.magenta>但我们知道有时候</c>

564
00:28:38,318 --> 00:28:40,554
<c.magenta>每次手腕抬起之间的时间间隔</c>

565
00:28:40,621 --> 00:28:42,022
<c.magenta>需要更长</c>

566
00:28:42,756 --> 00:28:47,160
<c.magenta>为此 我们允许你指定</c>

567
00:28:48,829 --> 00:28:52,699
<c.magenta>那将会把时间从两分钟</c>

568
00:28:52,766 --> 00:28:55,068
<c.magenta>让我们看一下如何用代码实现</c>

569
00:28:56,503 --> 00:28:58,472
<c.magenta>跟我们今天所讲的其它东西一样</c>

570
00:28:58,572 --> 00:29:00,541
<c.magenta>这是一个共享扩展的调用</c>

571
00:28:58,572 --> 00:29:00,541
<c.magenta>这是一个共享扩展的调用</c>

572
00:29:00,607 --> 00:29:01,875
<c.magenta>是一个简单的属性</c>

573
00:29:01,975 --> 00:29:02,843
<c.magenta>你可以设为真</c>

574
00:29:02,910 --> 00:29:05,179
<c.magenta>当你需要延伸</c>

575
00:29:08,048 --> 00:29:10,017
<c.magenta>但你必须做出明智的判断</c>

576
00:29:10,083 --> 00:29:13,153
<c.magenta>因为我们不想在用户</c>

577
00:29:13,220 --> 00:29:15,722
<c.magenta>还继续留在应用中</c>

578
00:29:16,990 --> 00:29:19,993
<c.magenta>让我们返回去看</c>

579
00:29:20,727 --> 00:29:23,463
<c.magenta>当我打开…当我打开购物列表时</c>

580
00:29:23,530 --> 00:29:26,433
<c.magenta>我很可能想开启</c>

581
00:29:26,667 --> 00:29:31,305
<c.magenta>因此 如果两条通道之间</c>

582
00:29:31,371 --> 00:29:34,007
<c.magenta>我就不必再返回打开应用了</c>

583
00:29:34,675 --> 00:29:37,878
<c.magenta>一旦完成购物列表中的项目</c>

584
00:29:37,945 --> 00:29:41,548
<c.magenta>就是关闭</c>

585
00:29:41,648 --> 00:29:44,551
<c.magenta>应用将在后台自动关闭</c>

586
00:29:44,618 --> 00:29:46,787
<c.magenta>而无需用户进行任何操作</c>

587
00:29:47,921 --> 00:29:52,059
<c.magenta>除了在处于前台时</c>

588
00:29:52,159 --> 00:29:55,395
<c.magenta>我们还修改了API的某些行为</c>

589
00:29:55,562 --> 00:29:58,498
<c.magenta>从而拥有最新的更新信息</c>

590
00:29:58,565 --> 00:30:00,834
<c.magenta>并实现用户的预期</c>

591
00:29:58,565 --> 00:30:00,834
<c.magenta>并实现用户的预期</c>

592
00:30:04,104 --> 00:30:07,441
<c.magenta>你已经可以通过</c>

593
00:30:07,608 --> 00:30:11,478
<c.magenta>将运行时间延长至30秒了</c>

594
00:30:12,112 --> 00:30:15,382
<c.magenta>这是进行网络任务的绝佳时机</c>

595
00:30:15,549 --> 00:30:18,519
<c.magenta>我们在watchOS 4中</c>

596
00:30:18,785 --> 00:30:21,722
<c.magenta>因此你可以在请求时做更多事</c>

597
00:30:25,025 --> 00:30:29,129
<c.magenta>并且当你处于frontmost</c>

598
00:30:29,530 --> 00:30:31,164
<c.magenta>或URL会话数据</c>

599
00:30:31,231 --> 00:30:33,367
<c.magenta>我们将立即恢复你的应用</c>

600
00:30:33,500 --> 00:30:37,204
<c.magenta>并且在大多数情况下</c>

601
00:30:39,039 --> 00:30:40,541
<c.magenta>当你处于frontmost状态时</c>

602
00:30:40,641 --> 00:30:44,244
<c.magenta>如果你注意到</c>

603
00:30:44,311 --> 00:30:48,215
<c.magenta>如果你有运行时间</c>

604
00:30:49,750 --> 00:30:53,053
<c.magenta>如果你在该状态时</c>

605
00:30:53,120 --> 00:30:56,190
<c.magenta>你可以通过</c>

606
00:30:56,256 --> 00:30:58,659
<c.magenta>就像应用处于前台时一样</c>

607
00:30:59,593 --> 00:31:03,463
<c.magenta>让我们看一个把这些功能</c>

608
00:30:59,593 --> 00:31:03,463
<c.magenta>让我们看一个把这些功能</c>

609
00:31:05,566 --> 00:31:08,001
<c.magenta>这是一个简单的拼车应用</c>

610
00:31:08,335 --> 00:31:11,405
<c.magenta>它显示我有五分钟的等候时间</c>

611
00:31:12,873 --> 00:31:15,843
<c.magenta>这种情况就需要</c>

612
00:31:16,009 --> 00:31:17,778
<c.magenta>因为我知道很可能</c>

613
00:31:17,845 --> 00:31:20,814
<c.magenta>用户需要的时间</c>

614
00:31:21,849 --> 00:31:23,083
<c.magenta>这需要等候</c>

615
00:31:23,183 --> 00:31:25,919
<c.magenta>而且我不想一直抬着手腕</c>

616
00:31:25,986 --> 00:31:29,623
<c.magenta>所以我就轻触请求拼车按钮</c>

617
00:31:30,757 --> 00:31:33,794
<c.magenta>现在屏幕关了</c>

618
00:31:33,927 --> 00:31:35,662
<c.magenta>因为我还在等待拼车</c>

619
00:31:36,196 --> 00:31:39,266
<c.magenta>在某一时刻</c>

620
00:31:39,366 --> 00:31:41,335
<c.magenta>并转发到我的手表上</c>

621
00:31:41,835 --> 00:31:44,972
<c.magenta>那时 应用会处理通知</c>

622
00:31:45,038 --> 00:31:47,207
<c.magenta>识别是否为重要信息</c>

623
00:31:47,307 --> 00:31:49,443
<c.magenta>然后通过力触觉警示我</c>

624
00:31:50,310 --> 00:31:53,213
<c.magenta>当我抬起手腕时</c>

625
00:31:53,280 --> 00:31:56,483
<c.magenta>显示出重要信息</c>

626
00:31:56,550 --> 00:31:59,152
<c.magenta>以及司机的姓名和星级评分</c>

627
00:31:59,253 --> 00:32:00,954
<c.magenta>我甚至还可以呼叫他</c>

628
00:31:59,253 --> 00:32:00,954
<c.magenta>我甚至还可以呼叫他</c>

629
00:32:02,523 --> 00:32:05,259
<c.magenta>然后我会停止</c>

630
00:32:05,325 --> 00:32:08,729
<c.magenta>因为用户现在很可能</c>

631
00:32:09,496 --> 00:32:13,567
<c.magenta>获得正确的frontmost状态信息</c>

632
00:32:13,901 --> 00:32:16,403
<c.magenta>了解用户何时完成使用应用</c>

633
00:32:16,470 --> 00:32:18,805
<c.magenta>以及何时需要更长的时间</c>

634
00:32:19,273 --> 00:32:22,209
<c.magenta>一定要确保</c>

635
00:32:22,276 --> 00:32:24,344
<c.magenta>并在用户下一次使用应用时</c>

636
00:32:24,411 --> 00:32:26,580
<c.magenta>显示他们想要查看的信息</c>

637
00:32:27,214 --> 00:32:30,584
<c.magenta>我特别推荐你们参加</c>

638
00:32:31,051 --> 00:32:32,786
<c.magenta>内容是watchOS应用的生命周期</c>

639
00:32:33,053 --> 00:32:36,690
<c.magenta>这场演讲将详细讲述</c>

640
00:32:36,757 --> 00:32:40,427
<c.magenta>frontmost状态、后台模式的利用</c>

641
00:32:40,494 --> 00:32:42,429
<c.magenta>实现更棒的表体验</c>

642
00:32:44,631 --> 00:32:47,467
<c.magenta>总结一下</c>

643
00:32:47,534 --> 00:32:50,704
<c.magenta>添加了一堆新功能</c>

644
00:32:50,771 --> 00:32:55,075
<c.magenta>创建自定义用户界面</c>

645
00:32:56,276 --> 00:32:58,078
<c.magenta>以及自动旋转模式</c>

646
00:33:00,380 --> 00:33:04,551
<c.magenta>我们修改了表应用的架构</c>

647
00:33:04,618 --> 00:33:08,222
<c.magenta>通过在运行时将扩展</c>

648
00:33:09,389 --> 00:33:12,893
<c.magenta>我们还增加了新的</c>

649
00:33:13,227 --> 00:33:16,530
<c.magenta>并且我们刚了解了</c>

650
00:33:16,663 --> 00:33:20,334
<c.magenta>这些使得保持应用数据更新</c>

651
00:33:22,002 --> 00:33:25,038
<c.magenta>我提到了本周的几场演讲</c>

652
00:33:25,138 --> 00:33:27,741
<c.magenta>你可以了解关于</c>

653
00:33:28,675 --> 00:33:30,377
<c.magenta>如果你想了解更多信息</c>

654
00:33:30,444 --> 00:33:34,081
<c.magenta>比如演讲视频链接以及其它资源</c>

655
00:33:34,181 --> 00:33:36,583
<c.magenta>请访问 developer.apple.com</c>

656
00:33:37,117 --> 00:33:39,686
<c.magenta>感谢大家参加</c>

657
00:33:39,753 --> 00:33:41,889
<c.magenta>我迫不及待地等待大家</c>
