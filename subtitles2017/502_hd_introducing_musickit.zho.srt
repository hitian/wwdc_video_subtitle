1
00:00:25,066 --> 00:00:30,226
&gt;&gt; 大家好 我们都喜欢 Apple 的音乐

2
00:00:31,036 --> 00:00:32,375
正如 Tim 昨天在

3
00:00:32,375 --> 00:00:34,666
Keynote 里面提到的那样 

4
00:00:34,666 --> 00:00:35,466
它是我们 DNA 中最基本的组成部分

5
00:00:36,356 --> 00:00:38,306
我也叫 Tim 今天我在这里

6
00:00:38,306 --> 00:00:40,166
要向大家介绍的是

7
00:00:40,166 --> 00:00:43,426
MusicKit 

8
00:00:43,426 --> 00:00:45,526
有了它 大家就可以流式播放

9
00:00:45,526 --> 00:00:46,816
Apple Music 上的内容

10
00:00:48,206 --> 00:00:49,616
通过 MusicKit  你可以

11
00:00:49,616 --> 00:00:55,126
访问艺人 专辑 歌曲

12
00:00:55,126 --> 00:01:00,686
歌单 活动

13
00:00:55,126 --> 00:01:00,686
歌单 活动

14
00:01:00,686 --> 00:01:01,396
以及音乐向导

15
00:01:02,346 --> 00:01:04,316
我们还提供

16
00:01:04,316 --> 00:01:09,856
探索性操作 比如搜索和

17
00:01:09,856 --> 00:01:13,386
图表 如果用户

18
00:01:13,386 --> 00:01:14,386
对你的 App 进行了授权

19
00:01:15,246 --> 00:01:16,856
那么我们还会提供个性化推荐

20
00:01:16,856 --> 00:01:18,256
这些推荐

21
00:01:18,256 --> 00:01:18,976
都是根据用户的品味和活动而量身打造的

22
00:01:24,156 --> 00:01:28,006
MusicKit 实际上是两样东西

23
00:01:28,796 --> 00:01:33,076
一方面 它是 iOS SDK 里客户端 API 的

24
00:01:34,026 --> 00:01:39,086
一个集合 另一方面 它还是一套网页

25
00:01:39,086 --> 00:01:40,776
服务 为顾客提供

26
00:01:40,776 --> 00:01:41,726
个性化以及目录式的

27
00:01:41,726 --> 00:01:41,976
内容

28
00:01:47,266 --> 00:01:49,076
我将会讲一讲有关网页

29
00:01:49,076 --> 00:01:51,366
服务的部分 我们将这一部分称作

30
00:01:51,806 --> 00:01:52,866
Apple Music API

31
00:01:52,906 --> 00:01:57,246
这些是

32
00:01:57,246 --> 00:01:58,036
我要讨论的主题

33
00:01:58,666 --> 00:02:00,006
我会讲一下如何

34
00:01:58,666 --> 00:02:00,006
我会讲一下如何

35
00:02:00,006 --> 00:02:02,316
排版请求 如何

36
00:02:02,316 --> 00:02:03,626
通过资源和关系来

37
00:02:03,626 --> 00:02:05,346
展现内容

38
00:02:06,586 --> 00:02:08,026
以及一些和限制和分页相关

39
00:02:08,026 --> 00:02:08,866
的细节

40
00:02:10,086 --> 00:02:11,376
我的同事 Joel 会做一个

41
00:02:11,376 --> 00:02:11,946
简单的演示

42
00:02:13,416 --> 00:02:14,516
我还会谈及个性化

43
00:02:14,516 --> 00:02:17,786
服务 最后讲一讲

44
00:02:17,786 --> 00:02:19,246
如何访问 Apple

45
00:02:19,246 --> 00:02:22,696
Music API

46
00:02:22,926 --> 00:02:24,716
要讲网页服务 API 的话

47
00:02:24,896 --> 00:02:26,616
就必须要

48
00:02:26,616 --> 00:02:28,986
讲一讲 URL 结构

49
00:02:29,916 --> 00:02:32,316
Apple Music API 只支持

50
00:02:32,316 --> 00:02:35,016
安全的 HTTPS Scheme

51
00:02:35,016 --> 00:02:36,146
而且它是由

52
00:02:36,146 --> 00:02:39,126
api.music.apple.com 托管的

53
00:02:40,286 --> 00:02:42,226
URL 路径的第一个元素是

54
00:02:42,226 --> 00:02:44,166
版本

55
00:02:44,696 --> 00:02:46,596
当前版本是 V1

56
00:02:47,286 --> 00:02:48,606
如果我们作出了显著的

57
00:02:48,606 --> 00:02:49,776
改进 或者修复了

58
00:02:49,776 --> 00:02:50,706
向后不兼容的问题 我们将会替换

59
00:02:50,736 --> 00:02:50,976
当前的版本

60
00:02:56,216 --> 00:02:57,376
URL 路径的第二个部分是

61
00:02:57,376 --> 00:02:59,506
目录 它会指示

62
00:02:59,506 --> 00:03:00,796
这是 Apple 乐流

63
00:02:59,506 --> 00:03:00,796
这是 Apple 乐流

64
00:03:00,796 --> 00:03:04,006
内容目录 

65
00:03:04,006 --> 00:03:08,406
但是要注意的是 并不是世界上所有区域或地区

66
00:03:08,406 --> 00:03:10,316
都会提供全部的内容

67
00:03:10,316 --> 00:03:12,516
因此我们将会在路径中

68
00:03:12,516 --> 00:03:13,546
引入一个概念

69
00:03:13,546 --> 00:03:15,106
叫做“店面”

70
00:03:16,146 --> 00:03:18,406
“店面”

71
00:03:18,406 --> 00:03:20,676
会将目录调整到提供内容的区域或地区

72
00:03:20,676 --> 00:03:22,576
这样一来 

73
00:03:22,576 --> 00:03:24,196
你就可以向你的用户提供相关的

74
00:03:24,196 --> 00:03:24,976
和可以播放的音乐了

75
00:03:30,796 --> 00:03:33,266
下一个部分是 API

76
00:03:33,536 --> 00:03:34,926
这一部分会指示

77
00:03:34,926 --> 00:03:36,186
你想要请求的资源 或是

78
00:03:36,186 --> 00:03:37,196
你想要执行的

79
00:03:37,196 --> 00:03:37,746
操作

80
00:03:39,076 --> 00:03:41,366
最后 我们有一系列

81
00:03:41,366 --> 00:03:43,396
参数 你可以用它来

82
00:03:43,396 --> 00:03:45,886
过滤和拓展请求

83
00:03:49,526 --> 00:03:51,406
我们的 API 是本地化的

84
00:03:52,566 --> 00:03:54,476
我们支持很多种本地化

85
00:03:55,156 --> 00:03:56,896
但是并不是所有“店面”

86
00:03:56,896 --> 00:03:58,276
都支持这些本地化

87
00:03:59,286 --> 00:04:00,726
我们为你提供了一个机制

88
00:03:59,286 --> 00:04:00,726
我们为你提供了一个机制

89
00:04:00,726 --> 00:04:03,286
可以帮助你了解哪些“店面”支持

90
00:04:03,286 --> 00:04:04,586
哪些本地化

91
00:04:06,336 --> 00:04:08,476
API 支持限制和

92
00:04:08,476 --> 00:04:09,866
分页 稍后我会在

93
00:04:09,866 --> 00:04:10,906
我的展示中详细讲一讲

94
00:04:10,906 --> 00:04:12,506
这是怎么

95
00:04:12,506 --> 00:04:13,076
工作的

96
00:04:14,276 --> 00:04:16,625
最后

97
00:04:16,625 --> 00:04:18,206
对 Apple Music API 的每个请求都

98
00:04:18,206 --> 00:04:18,946
都需要开发人员令牌

99
00:04:25,736 --> 00:04:27,406
数据表示对于

100
00:04:27,406 --> 00:04:29,136
任何 API 来说都是很重要的

101
00:04:29,136 --> 00:04:29,516
一个考量

102
00:04:30,926 --> 00:04:32,316
我们依据大量经验

103
00:04:32,316 --> 00:04:36,036
为大家打造的 Apple Music App

104
00:04:36,036 --> 00:04:38,036
为你提供这样一个 API  

105
00:04:38,036 --> 00:04:39,796
它同时考量了易用性

106
00:04:40,246 --> 00:04:42,496
灵活性和性能

107
00:04:44,346 --> 00:04:47,006
这里是第一个

108
00:04:47,006 --> 00:04:48,646
资源的表示

109
00:04:48,646 --> 00:04:50,166
我们将其称为“身份”形式

110
00:04:50,946 --> 00:04:53,776
它包含 ID Type

111
00:04:53,776 --> 00:04:57,446
和 Href

112
00:04:57,446 --> 00:04:58,806
Href 是指目录中的位置

113
00:04:58,806 --> 00:05:00,026
也就是你可以

114
00:04:58,806 --> 00:05:00,026
也就是你可以

115
00:05:00,026 --> 00:05:00,676
找到这一内容地方

116
00:05:01,836 --> 00:05:03,266
这对于展示来说

117
00:05:03,266 --> 00:05:05,576
不是很有帮助 这也是为什么我们

118
00:05:05,576 --> 00:05:07,206
还有这一种类型 这是一个

119
00:05:07,206 --> 00:05:08,086
“属性”形式

120
00:05:08,616 --> 00:05:11,206
它包含了身份

121
00:05:11,206 --> 00:05:12,696
和属性列表 

122
00:05:12,696 --> 00:05:14,236
你可以用它们展示

123
00:05:14,236 --> 00:05:15,576
内容的相关信息

124
00:05:16,176 --> 00:05:17,236
包括

125
00:05:17,236 --> 00:05:19,406
插图 名字和

126
00:05:19,406 --> 00:05:21,276
描述 如果内容

127
00:05:21,276 --> 00:05:23,036
是可以播放的 还会有一个

128
00:05:23,036 --> 00:05:24,166
属性叫做播放

129
00:05:24,166 --> 00:05:24,826
参数

130
00:05:27,076 --> 00:05:29,006
最后 我们还有一个“默认”

131
00:05:29,006 --> 00:05:29,356
形式

132
00:05:29,536 --> 00:05:31,816
如果你向 Apple Music API

133
00:05:31,816 --> 00:05:33,436
要一个合集 

134
00:05:33,436 --> 00:05:34,736
这就是你会默认得到的

135
00:05:34,736 --> 00:05:35,006
东西

136
00:05:35,526 --> 00:05:36,536
它是一种体现属性和

137
00:05:36,536 --> 00:05:37,516
关系的形式

138
00:05:38,236 --> 00:05:39,526
是需要展示的

139
00:05:39,526 --> 00:05:41,746
所有属性以及

140
00:05:41,746 --> 00:05:43,486
内容合集 

141
00:05:43,486 --> 00:05:44,846
它与某一具体的资源

142
00:05:44,846 --> 00:05:45,456
相关

143
00:05:45,996 --> 00:05:49,086
我们来讨论一下

144
00:05:49,086 --> 00:05:49,946
关系

145
00:05:51,756 --> 00:05:53,366
这是一张专辑资源

146
00:05:54,536 --> 00:05:56,116
它有三种关系

147
00:05:57,586 --> 00:05:59,126
第一个是和 

148
00:05:59,126 --> 00:05:59,716
曲目的关系

149
00:06:00,166 --> 00:06:01,446
即这张专辑

150
00:06:01,446 --> 00:06:02,686
的歌曲和

151
00:06:02,686 --> 00:06:03,046
音乐视频

152
00:06:04,376 --> 00:06:06,726
第二个是和艺人的关系 当然

153
00:06:06,796 --> 00:06:08,156
是指

154
00:06:08,526 --> 00:06:10,296
创作歌曲 专辑

155
00:06:11,606 --> 00:06:12,296
和类型的艺人

156
00:06:12,996 --> 00:06:14,736
类型是指

157
00:06:15,136 --> 00:06:16,626
这张专辑所属的

158
00:06:16,626 --> 00:06:16,796
类别

159
00:06:17,476 --> 00:06:18,896
这些关系

160
00:06:18,896 --> 00:06:19,756
都属于不同种类

161
00:06:20,976 --> 00:06:23,706
第一种和曲目的关系是

162
00:06:23,706 --> 00:06:25,206
属性包含关系

163
00:06:26,236 --> 00:06:27,646
这是指 如果你想要这张

164
00:06:27,646 --> 00:06:29,656
专辑 它将会返回

165
00:06:29,656 --> 00:06:31,546
所有曲目和它们的

166
00:06:31,546 --> 00:06:32,576
所有属性

167
00:06:32,866 --> 00:06:34,636
这意味着 如果你想要

168
00:06:34,636 --> 00:06:36,056
一张专辑 你可以获得

169
00:06:36,056 --> 00:06:37,496
专辑所有歌曲和属性的

170
00:06:37,496 --> 00:06:38,126
数据

171
00:06:39,526 --> 00:06:41,796
第二个种类 艺人

172
00:06:41,796 --> 00:06:42,706
仅仅是一种标识符

173
00:06:42,906 --> 00:06:44,416
它意味着只会返回

174
00:06:44,416 --> 00:06:46,746
标识符形式 定位

175
00:06:46,746 --> 00:06:48,116
和类型 以及在目录中的

176
00:06:48,116 --> 00:06:49,416
位置

177
00:06:50,396 --> 00:06:52,876
最后是默认

178
00:06:52,876 --> 00:06:53,536
不显示

179
00:06:54,236 --> 00:06:56,006
这一部分不会展示在

180
00:06:56,006 --> 00:06:58,136
默认表示中 虽然

181
00:06:58,136 --> 00:06:59,606
这种关系依旧存在

182
00:07:00,526 --> 00:07:01,326
那么我们来看看这是怎么

183
00:07:01,326 --> 00:07:01,806
操作的

184
00:07:03,226 --> 00:07:05,586
这里是一张专辑的 URL 

185
00:07:06,676 --> 00:07:08,366
你可以看到在一个 JSON 

186
00:07:08,396 --> 00:07:10,616
响应中 曲目中有

187
00:07:10,616 --> 00:07:14,266
一些不显示的属性 艺人是以

188
00:07:14,266 --> 00:07:15,316
标识符的形式存在

189
00:07:16,216 --> 00:07:17,426
那么 当我想要

190
00:07:17,426 --> 00:07:19,086
单次调用并获得

191
00:07:19,086 --> 00:07:22,006
艺人属性时要怎么办

192
00:07:22,006 --> 00:07:23,216
我只需要添加一条 Query

193
00:07:23,216 --> 00:07:26,176
参数 包含并具体说明

194
00:07:26,176 --> 00:07:27,406
关系的名称

195
00:07:27,686 --> 00:07:28,926
这个关系正是符合我想要的

196
00:07:28,926 --> 00:07:29,826
属性的

197
00:07:31,456 --> 00:07:33,596
而且你可以看到我们在这里

198
00:07:33,596 --> 00:07:34,806
省略了艺人的

199
00:07:34,806 --> 00:07:36,216
属性 以及

200
00:07:36,216 --> 00:07:37,816
曲目的属性

201
00:07:39,066 --> 00:07:40,146
你可以看到在这一响应中

202
00:07:40,146 --> 00:07:41,426
不包含类型

203
00:07:42,026 --> 00:07:43,016
那么我们要如何包含

204
00:07:43,016 --> 00:07:44,386
类型的属性呢

205
00:07:45,726 --> 00:07:47,356
你只需要添加类型到

206
00:07:47,356 --> 00:07:51,076
包含的 Query 参数

207
00:07:51,076 --> 00:07:52,526
你可以看到类型在

208
00:07:52,526 --> 00:07:54,566
属性格式中不显示

209
00:07:55,086 --> 00:07:57,466
这就是有关

210
00:07:57,466 --> 00:07:58,656
资源和关系的一些介绍

211
00:07:58,656 --> 00:08:00,126
下面我要讲讲

212
00:07:58,656 --> 00:08:00,126
下面我要讲讲

213
00:08:00,126 --> 00:08:01,226
限制和分页

214
00:08:02,556 --> 00:08:04,056
这里我有一个

215
00:08:04,056 --> 00:08:05,276
针对某一专辑曲目资源的

216
00:08:05,276 --> 00:08:05,566
请求

217
00:08:05,846 --> 00:08:07,776
它会给我一个

218
00:08:08,946 --> 00:08:11,416
此张专辑歌曲的合集

219
00:08:12,076 --> 00:08:13,566
这张专辑刚好有 9 首歌

220
00:08:14,566 --> 00:08:15,996
如果我想要限制

221
00:08:15,996 --> 00:08:17,336
我所获得得曲目数量

222
00:08:17,816 --> 00:08:19,746
我仅需要添加

223
00:08:19,746 --> 00:08:22,916
Query 参数 比如我

224
00:08:22,916 --> 00:08:24,276
想将页码限制为 2

225
00:08:25,676 --> 00:08:27,026
它就会展示给我

226
00:08:27,026 --> 00:08:30,236
此张专辑的前两首歌 然后它有一个

227
00:08:30,236 --> 00:08:35,096
Next 键

228
00:08:35,096 --> 00:08:36,876
来指示剩余

229
00:08:36,876 --> 00:08:37,716
曲目的位置

230
00:08:39,296 --> 00:08:44,096
如果我继续追踪这个 Next 键的链接

231
00:08:44,265 --> 00:08:46,446
我将会看到这张专辑剩下的曲目

232
00:08:46,446 --> 00:08:48,036
从第 3 首到

233
00:08:48,036 --> 00:08:48,346
第 9 首

234
00:08:49,776 --> 00:08:51,516
如果我想要实现

235
00:08:51,516 --> 00:08:55,556
页数限制为 2 我只再次需要添加

236
00:08:55,556 --> 00:08:57,076
limit ＝ 2

237
00:08:57,726 --> 00:08:59,726
它会向我展示第 3 和第 4 首歌

238
00:09:01,086 --> 00:09:03,376
它会再一次出现 Next 的提示 和一个

239
00:09:03,376 --> 00:09:04,006
URL  来指示

240
00:09:04,006 --> 00:09:04,976
剩余部分专辑的数据的位置

241
00:09:09,236 --> 00:09:10,566
那么这在

242
00:09:10,566 --> 00:09:10,976
操作中是怎么样的呢

243
00:09:11,736 --> 00:09:12,466
就像这样

244
00:09:12,546 --> 00:09:14,446
你可以看到 Next 

245
00:09:14,446 --> 00:09:16,626
这一提示是

246
00:09:16,626 --> 00:09:17,826
这些曲目数据合集的

247
00:09:17,826 --> 00:09:19,806
“兄弟”

248
00:09:21,126 --> 00:09:22,226
我已经讲了一些关于资源的

249
00:09:22,656 --> 00:09:24,956
内容

250
00:09:25,046 --> 00:09:27,916
关系和分页的一些问题

251
00:09:28,306 --> 00:09:31,986
下面我们来看一个操作

252
00:09:33,476 --> 00:09:35,756
我们的绝大多数操作获得的是

253
00:09:35,756 --> 00:09:38,416
一个资源合集

254
00:09:38,416 --> 00:09:39,726
这个合集是根据它们的种类分组

255
00:09:39,726 --> 00:09:40,256
得来的

256
00:09:40,756 --> 00:09:43,346
例如 搜索 Khalid

257
00:09:43,526 --> 00:09:45,106
会得到专辑

258
00:09:45,666 --> 00:09:47,906
艺人 歌曲和播放列表

259
00:09:48,526 --> 00:09:50,146
如果我想要限制

260
00:09:50,146 --> 00:09:51,656
搜索获得的内容种类

261
00:09:51,656 --> 00:09:53,526
我只需要添加

262
00:09:53,526 --> 00:09:55,156
类型 Query 参数并且

263
00:09:55,156 --> 00:09:57,906
详细说明我想要的

264
00:09:57,906 --> 00:09:58,796
种类

265
00:09:59,486 --> 00:10:02,086
这里我想要的是专辑

266
00:09:59,486 --> 00:10:02,086
这里我想要的是专辑

267
00:10:02,086 --> 00:10:03,576
当我调用它 我会得到一个

268
00:10:03,576 --> 00:10:04,666
专辑合集

269
00:10:06,916 --> 00:10:08,286
现在 我要欢迎我的

270
00:10:08,286 --> 00:10:09,796
同事 Joel 来到舞台上

271
00:10:09,796 --> 00:10:11,636
像我们快速演示一下 如何进行 Playground

272
00:10:11,636 --> 00:10:11,976
搜索请求

273
00:10:12,516 --> 00:10:15,416
[掌声]

274
00:10:15,916 --> 00:10:18,716
&gt;&gt; 谢谢你 Tim

275
00:10:18,936 --> 00:10:20,216
大家后 我是 Joel 下面我

276
00:10:20,216 --> 00:10:21,546
要向大家展示一下

277
00:10:21,546 --> 00:10:23,906
从 Apple Music 获取内容来丰富你

278
00:10:23,906 --> 00:10:26,046
Swift 中的 App

279
00:10:26,506 --> 00:10:27,166
是多么简单

280
00:10:28,876 --> 00:10:30,546
我会先向你展示

281
00:10:30,546 --> 00:10:32,216
如何从

282
00:10:32,216 --> 00:10:33,616
这个目录搜索终端中获取内容

283
00:10:34,196 --> 00:10:35,746
现在我门来搜一下

284
00:10:35,916 --> 00:10:37,206
Khalid 的专辑

285
00:10:38,236 --> 00:10:40,796
我们只需要为这个搜索请求

286
00:10:40,876 --> 00:10:42,616
使用 URL 成分

287
00:10:42,616 --> 00:10:44,636
构建一个 URL 

288
00:10:44,926 --> 00:10:46,156
很重要的一点是

289
00:10:46,156 --> 00:10:49,526
包含在“店面”国家代码中的

290
00:10:49,526 --> 00:10:51,036
路径中的 URL 

291
00:10:51,526 --> 00:10:52,706
与用户相符

292
00:10:54,836 --> 00:10:56,276
然后你需要添加一些

293
00:10:56,276 --> 00:10:58,016
Query 参数到这个

294
00:10:58,016 --> 00:11:00,116
请求中 我们可以

295
00:10:58,016 --> 00:11:00,116
请求中 我们可以

296
00:11:00,336 --> 00:11:02,166
通过 Query 项目来做到这一点 我们

297
00:11:02,166 --> 00:11:04,876
只需要将“term”改成“Khalid”

298
00:11:04,876 --> 00:11:05,916
将“types”改成“2 albums”

299
00:11:09,646 --> 00:11:10,746
这样 你就可以

300
00:11:10,746 --> 00:11:12,266
构建一个格式完整的 URL 

301
00:11:12,896 --> 00:11:14,406
以及基于它的一个

302
00:11:14,406 --> 00:11:14,696
URL 请求

303
00:11:15,766 --> 00:11:18,066
然后 你需要在这个 URL 请求中

304
00:11:18,066 --> 00:11:19,856
包含一个 HTTP 标头

305
00:11:19,856 --> 00:11:20,636
这是一个

306
00:11:20,726 --> 00:11:23,216
授权标头 它对于

307
00:11:23,216 --> 00:11:25,136
用 Apple Music API 来验证你的 App 

308
00:11:25,136 --> 00:11:26,186
很有用

309
00:11:27,666 --> 00:11:28,786
现在我们要使用

310
00:11:28,786 --> 00:11:30,936
开发人员令牌与载体前缀

311
00:11:30,936 --> 00:11:32,906
共同作为

312
00:11:33,166 --> 00:11:34,316
这个 HTTP 标头值的一部分

313
00:11:34,786 --> 00:11:38,466
下一步 我们可以通过

314
00:11:38,746 --> 00:11:42,086
使用 URL 部分加载数据 通过这个

315
00:11:42,086 --> 00:11:44,336
原始 JSON 数据 我们只需要使用

316
00:11:44,336 --> 00:11:46,766
Swift 4 中的新 JSON 解码器

317
00:11:47,296 --> 00:11:48,956
来解析数据 

318
00:11:48,956 --> 00:11:50,446
这使得将

319
00:11:50,446 --> 00:11:52,556
JSON 数据转换成高度类型化的

320
00:11:52,866 --> 00:11:53,836
Swift 结构变得很简单

321
00:11:54,156 --> 00:11:56,166
你仅需要定义一些

322
00:11:56,166 --> 00:11:57,856
遵循可编码协议的

323
00:11:57,856 --> 00:12:00,786
Swift 结构 然后

324
00:11:57,856 --> 00:12:00,786
Swift 结构 然后

325
00:12:00,996 --> 00:12:03,166
你就可以将这些结构输送到

326
00:12:03,166 --> 00:12:04,046
JSON 解码器

327
00:12:04,046 --> 00:12:05,356
在这个例子中 我会将

328
00:12:05,356 --> 00:12:06,676
CatalogSearchResults 结构

329
00:12:07,046 --> 00:12:09,116
传递到 JSON 解码器中

330
00:12:09,236 --> 00:12:10,486
通过搜索数据 

331
00:12:10,876 --> 00:12:12,516
我可以看一眼

332
00:12:12,516 --> 00:12:13,116
结果

333
00:12:13,776 --> 00:12:15,246
现在 我要寻找

334
00:12:15,246 --> 00:12:16,646
这些结果中的第一张专辑

335
00:12:16,646 --> 00:12:18,436
让我们来看一下

336
00:12:18,436 --> 00:12:21,456
我们获得的属性

337
00:12:21,646 --> 00:12:23,516
显然我们得到的是 Khalid 的

338
00:12:23,516 --> 00:12:26,006
《American Teen》这张专辑 以及

339
00:12:26,006 --> 00:12:28,126
其他相关属性

340
00:12:29,026 --> 00:12:30,506
如你所见 我们还有

341
00:12:30,506 --> 00:12:31,336
一些关于

342
00:12:31,336 --> 00:12:33,616
图案的信息 它有一个

343
00:12:33,616 --> 00:12:35,056
URL 但是你仔细

344
00:12:35,056 --> 00:12:36,696
看一下这个 URL  就会发现它不仅仅是一个

345
00:12:36,696 --> 00:12:38,046
URL 格式字符串 因为它

346
00:12:38,046 --> 00:12:40,506
可以让你替换

347
00:12:40,556 --> 00:12:42,486
URL 最后的宽度和高度标志

348
00:12:42,486 --> 00:12:44,756
选择理想的宽度

349
00:12:44,756 --> 00:12:46,356
和高度来配合

350
00:12:46,356 --> 00:12:48,016
你 App 中的用户界面

351
00:12:48,516 --> 00:12:51,246
所以 要想获得

352
00:12:51,246 --> 00:12:53,976
这张专辑的图案 我只需要在

353
00:12:53,976 --> 00:12:55,726
这个图案结构上创建一个 Helper 方法

354
00:12:55,726 --> 00:12:57,546
这真的

355
00:12:57,546 --> 00:12:58,226
很简单

356
00:12:58,366 --> 00:12:59,736
我们将替换宽度

357
00:12:59,736 --> 00:13:02,536
令牌 大括号 w 大括号

358
00:12:59,736 --> 00:13:02,536
令牌 大括号 w 大括号

359
00:13:02,536 --> 00:13:04,606
“with” 理想的宽度

360
00:13:05,056 --> 00:13:07,806
好了 下面我们以同样的方式调整

361
00:13:07,806 --> 00:13:08,186
高度

362
00:13:08,396 --> 00:13:10,206
由于绝大多数

363
00:13:10,206 --> 00:13:11,456
音乐内容的图案都是

364
00:13:11,456 --> 00:13:12,386
正方形 所以我们只需要使用

365
00:13:12,386 --> 00:13:13,126
同样的宽度和高度

366
00:13:13,126 --> 00:13:15,836
这样一来你就有了一个结构完整的

367
00:13:15,836 --> 00:13:16,486
URL 

368
00:13:17,676 --> 00:13:20,366
所以 这里 我刚刚

369
00:13:20,366 --> 00:13:24,156
为这张专辑构建了一个 URL 

370
00:13:24,156 --> 00:13:26,256
宽 1200 像素 让我们来

371
00:13:26,256 --> 00:13:26,976
看看我们得到了什么

372
00:13:31,446 --> 00:13:32,256
在这里

373
00:13:32,326 --> 00:13:33,586
这是一张专辑封面

374
00:13:33,586 --> 00:13:34,916
Khalid 的《American Teen》

375
00:13:34,916 --> 00:13:35,346
《American Teen》

376
00:13:35,726 --> 00:13:38,936
所以我们看到

377
00:13:38,936 --> 00:13:40,246
从 Apple Music 获取内容是多么容易

378
00:13:40,446 --> 00:13:41,666
现在我要把 Tim 继续请到台上来

379
00:13:41,666 --> 00:13:43,246
他会告诉你所有

380
00:13:43,246 --> 00:13:44,606
关于个性化请求的东西

381
00:13:44,606 --> 00:13:44,806
谢谢

382
00:13:45,516 --> 00:13:48,836
[掌声]

383
00:13:49,336 --> 00:13:49,916
&gt;&gt; 谢谢 Joel

384
00:13:50,176 --> 00:13:53,996
那么下面我要讲一讲

385
00:13:53,996 --> 00:13:55,486
关于 Apple Music API

386
00:13:55,756 --> 00:13:57,046
个性化请求的问题

387
00:13:58,416 --> 00:13:59,446
URL 只是有

388
00:13:59,446 --> 00:14:00,266
一些不同

389
00:13:59,446 --> 00:14:00,266
一些不同

390
00:14:00,786 --> 00:14:03,036
在版本号后面你可以看到

391
00:14:03,036 --> 00:14:04,666
所有的个性化调用都是

392
00:14:04,956 --> 00:14:05,806
以“me”开始的

393
00:14:06,016 --> 00:14:07,416
这里我有一个 URL  它可以

394
00:14:07,416 --> 00:14:08,576
向我提供

395
00:14:08,576 --> 00:14:12,236
用户账号最近播放的项目

396
00:14:13,876 --> 00:14:16,176
你还可以看到

397
00:14:16,176 --> 00:14:18,726
路径的“店面”部分

398
00:14:18,726 --> 00:14:19,136
缺失了

399
00:14:19,856 --> 00:14:22,176
那是因为用户帐号

400
00:14:22,276 --> 00:14:24,426
绑定了“店面” 所以

401
00:14:24,426 --> 00:14:26,126
他们只能播放

402
00:14:26,126 --> 00:14:27,406
“店面”提供的内容

403
00:14:27,406 --> 00:14:28,866
在这一“店面”中 他们的帐号

404
00:14:28,866 --> 00:14:30,266
合法可用

405
00:14:31,616 --> 00:14:34,216
那么 你需要什么来进行播放

406
00:14:34,386 --> 00:14:35,156
你需要怎么样获得

407
00:14:35,156 --> 00:14:36,066
个性化的数据

408
00:14:36,166 --> 00:14:37,976
用户必须订阅 Apple

409
00:14:37,976 --> 00:14:40,396
Music 而且

410
00:14:40,396 --> 00:14:41,936
所有个性化请求的调用

411
00:14:41,936 --> 00:14:44,076
都需要两样东西 

412
00:14:44,076 --> 00:14:46,316
开发人员标志和音乐

413
00:14:46,316 --> 00:14:47,906
用户标志 Joel 会在后半部分的展示中

414
00:14:47,906 --> 00:14:49,036
告诉你

415
00:14:49,036 --> 00:14:50,166
如何获取它们

416
00:14:50,286 --> 00:14:54,196
那么 我要怎样访问

417
00:14:55,926 --> 00:14:56,066
API 呢

418
00:14:56,276 --> 00:14:58,426
第一点 你必须是

419
00:14:58,426 --> 00:14:59,736
Apple 开发人员计划的的成员

420
00:15:01,796 --> 00:15:03,786
第二点 你需要一个

421
00:15:03,786 --> 00:15:06,286
MusicKit 密钥

422
00:15:06,516 --> 00:15:07,916
你可以在

423
00:15:07,916 --> 00:15:09,646
Apple 开发人员门户网站的帐户部分

424
00:15:09,646 --> 00:15:11,266
找到 MusicKit 密钥

425
00:15:11,266 --> 00:15:13,386
位于 Certificates and Identities（凭证和身份）

426
00:15:13,386 --> 00:15:13,656
部分

427
00:15:13,656 --> 00:15:15,766
一旦你有了这个 MusicKit 密钥

428
00:15:15,766 --> 00:15:17,766
就可以用它来签署

429
00:15:17,856 --> 00:15:18,846
开发人员令牌

430
00:15:19,366 --> 00:15:21,196
开发人员令牌以 JSON

431
00:15:21,196 --> 00:15:23,726
网页令牌形式存在

432
00:15:23,726 --> 00:15:26,716
和 APNS 令牌很像 而且

433
00:15:26,716 --> 00:15:29,116
正如我前面提到的 

434
00:15:29,116 --> 00:15:30,746
对于所有 Apple Music API 请求的标头来说

435
00:15:30,746 --> 00:15:33,136
它都是必要的

436
00:15:35,526 --> 00:15:37,436
这里是一个关于安全性的提醒

437
00:15:38,356 --> 00:15:39,876
请保证你 MusicKit 密钥

438
00:15:39,876 --> 00:15:40,286
的安全

439
00:15:40,766 --> 00:15:42,656
不要将它嵌入

440
00:15:42,656 --> 00:15:44,096
你应用的二进制文件中

441
00:15:44,546 --> 00:15:46,166
我们建议你

442
00:15:46,166 --> 00:15:47,936
动态生成自己的

443
00:15:47,936 --> 00:15:50,216
开发人员令牌 最好是在

444
00:15:50,216 --> 00:15:51,286
一个

445
00:15:51,286 --> 00:15:52,376
你既能控制又有

446
00:15:52,376 --> 00:15:52,976
访问权限的服务器上进行

447
00:15:57,336 --> 00:15:59,576
我想说一些关于开发人员令牌格式的

448
00:15:59,626 --> 00:16:00,596
注意事项

449
00:15:59,626 --> 00:16:00,596
注意事项

450
00:16:01,996 --> 00:16:03,696
开发人员标志有两部分

451
00:16:05,206 --> 00:16:08,356
必要的标头 也就是

452
00:16:08,356 --> 00:16:09,356
加密算法

453
00:16:09,706 --> 00:16:11,876
我们仅支持 ES256 作为我们的

454
00:16:11,876 --> 00:16:13,536
编码算法 以及

455
00:16:13,536 --> 00:16:14,426
一个密钥标识符

456
00:16:14,796 --> 00:16:16,506
当你下载你的 MusicKit

457
00:16:16,506 --> 00:16:18,166
密钥时 你可以

458
00:16:18,166 --> 00:16:19,706
在下载的某一部分找到它

459
00:16:21,576 --> 00:16:23,616
第二部分是一些必要的

460
00:16:23,616 --> 00:16:24,226
声明

461
00:16:24,286 --> 00:16:26,016
我们有三条必要的声明

462
00:16:26,306 --> 00:16:30,046
一个发行人 ID 也就是团队

463
00:16:30,046 --> 00:16:31,296
ID 你可以在

464
00:16:31,296 --> 00:16:32,736
Apple 开发人员门户网站的“Membership（会员）”部分

465
00:16:32,736 --> 00:16:33,526
找到它

466
00:16:34,556 --> 00:16:36,076
第二个是

467
00:16:36,076 --> 00:16:37,796
这个开发人员令牌的发行时间 它是

468
00:16:37,796 --> 00:16:41,606
UNIX 格式的 第三个是

469
00:16:41,606 --> 00:16:42,596
有效日期

470
00:16:44,726 --> 00:16:46,906
只能生成

471
00:16:46,906 --> 00:16:49,366
从即日起 6 个月失效的令牌

472
00:16:50,766 --> 00:16:53,936
那么 我会把

473
00:16:53,936 --> 00:16:54,476
接下来的

474
00:16:54,476 --> 00:16:55,506
展示交给我的同事

475
00:16:55,506 --> 00:16:56,166
Joel 他会告诉你

476
00:16:56,166 --> 00:16:57,566
如何在 iOS 系统上使用

477
00:16:57,566 --> 00:16:57,976
MusicKit

478
00:16:58,516 --> 00:17:02,476
[掌声]

479
00:16:58,516 --> 00:17:02,476
[掌声]

480
00:17:02,976 --> 00:17:03,496
&gt;&gt; 谢谢 Tim

481
00:17:05,675 --> 00:17:07,786
大家好 又是我 那么我要来告诉大家

482
00:17:07,786 --> 00:17:09,036
你们怎样才能

483
00:17:09,036 --> 00:17:10,685
让你 iOS 系统上的 App 最大程度地利用

484
00:17:10,685 --> 00:17:11,796
MusicKit

485
00:17:12,596 --> 00:17:14,536
首先我会

486
00:17:14,536 --> 00:17:16,036
告诉你更多关于如何

487
00:17:16,036 --> 00:17:17,476
完全访问 Apple

488
00:17:17,476 --> 00:17:18,046
Music API 的信息

489
00:17:19,195 --> 00:17:21,195
然后我会告诉你

490
00:17:21,195 --> 00:17:22,296
当我们在面对一位

491
00:17:22,296 --> 00:17:23,306
现在不知道

492
00:17:23,306 --> 00:17:24,386
Apple Music 订阅的存在的用户时

493
00:17:24,386 --> 00:17:25,046
需要做什么

494
00:17:25,726 --> 00:17:26,816
最后我会告诉你如何

495
00:17:26,816 --> 00:17:29,246
使用 iOS SDK 来

496
00:17:29,716 --> 00:17:31,996
启动和控制订阅

497
00:17:32,196 --> 00:17:33,116
以及资料库

498
00:17:33,116 --> 00:17:33,636
的播放

499
00:17:33,636 --> 00:17:36,726
那么先来讲一讲如何

500
00:17:36,726 --> 00:17:38,156
完全访问 Apple Music API

501
00:17:39,116 --> 00:17:40,876
也许你想到的第一件事

502
00:17:40,876 --> 00:17:43,216
是验证 但是

503
00:17:43,216 --> 00:17:45,146
事实上 绝大多数用户

504
00:17:45,146 --> 00:17:46,966
都已经在他们的 iOS 设备上注册了 iTunes

505
00:17:46,966 --> 00:17:48,676
Store 帐户

506
00:17:48,676 --> 00:17:50,406
因此 你

507
00:17:50,406 --> 00:17:51,606
真的不需要担心

508
00:17:51,726 --> 00:17:53,626
去提醒用户获得该资格

509
00:17:54,736 --> 00:17:56,286
然而 鉴于在 iOS 系统上

510
00:17:56,286 --> 00:17:58,396
隐私是非常重要的考量 

511
00:17:58,396 --> 00:18:00,276
你真的需要在我们允许你的 App 

512
00:17:58,396 --> 00:18:00,276
你真的需要在我们允许你的 App 

513
00:18:00,276 --> 00:18:02,516
访问 Apple Music 之前获得

514
00:18:02,516 --> 00:18:04,046
用户的许可

515
00:18:05,756 --> 00:18:07,736
这个用户许可

516
00:18:07,736 --> 00:18:09,206
类似于你

517
00:18:09,206 --> 00:18:11,186
在访问用户位置或

518
00:18:11,456 --> 00:18:13,346
用户联系人信息时

519
00:18:13,346 --> 00:18:15,436
请求许可

520
00:18:16,996 --> 00:18:18,706
这对于

521
00:18:18,706 --> 00:18:21,036
每一个应用

522
00:18:21,036 --> 00:18:22,366
每一台 iOS 设备都是必要的

523
00:18:22,366 --> 00:18:24,796
因此 如果你的 App 

524
00:18:24,796 --> 00:18:26,066
在同一个用户的 iPhone 和 iPad 

525
00:18:26,066 --> 00:18:27,596
上运行 请确保

526
00:18:27,596 --> 00:18:29,016
分别请求用户许可

527
00:18:30,716 --> 00:18:32,666
这就是用户许可

528
00:18:32,666 --> 00:18:36,306
对话框在 Nike

529
00:18:36,306 --> 00:18:39,736
Plus Run Club App 里的样子 这就是

530
00:18:39,806 --> 00:18:41,816
标准的保护隐私的

531
00:18:41,816 --> 00:18:42,396
用户许可对话框

532
00:18:43,346 --> 00:18:44,536
一个重要的部分是

533
00:18:44,536 --> 00:18:46,306
副标题

534
00:18:46,306 --> 00:18:47,716
第三方 App 开发人员

535
00:18:47,716 --> 00:18:49,526
须在这里通知用户

536
00:18:49,526 --> 00:18:51,706
为什么要访问

537
00:18:51,706 --> 00:18:52,976
用户的 Apple Music 数据

538
00:18:57,276 --> 00:18:59,606
请求用户许可

539
00:18:59,606 --> 00:19:01,516
对于访问

540
00:18:59,606 --> 00:19:01,516
对于访问

541
00:19:01,516 --> 00:19:03,526
设备资料库和 

542
00:19:03,526 --> 00:19:04,596
音乐用户令牌都是必需的

543
00:19:05,116 --> 00:19:07,346
你可以读取你 App 当前的

544
00:19:07,346 --> 00:19:09,216
授权状态

545
00:19:09,216 --> 00:19:10,046
来确认你是否

546
00:19:10,046 --> 00:19:11,786
已经获得该用户许可

547
00:19:12,356 --> 00:19:13,926
这不会通过

548
00:19:13,926 --> 00:19:15,616
刚才我展示的对话框

549
00:19:15,616 --> 00:19:16,096
来通知用户

550
00:19:16,396 --> 00:19:17,496
然而 你也可以直接

551
00:19:17,496 --> 00:19:19,996
请求授权 这会

552
00:19:19,996 --> 00:19:21,826
通知用户 除非你的

553
00:19:21,826 --> 00:19:23,236
App 已经获得

554
00:19:24,016 --> 00:19:24,706
授权

555
00:19:25,296 --> 00:19:28,336
为了做到这一点 你可以使用一个类

556
00:19:28,336 --> 00:19:29,476
和 StoreKit 框架

557
00:19:29,756 --> 00:19:30,156
它叫作

558
00:19:30,456 --> 00:19:32,756
SKCloudServiceController

559
00:19:32,756 --> 00:19:34,156
你可以调用其中的一个

560
00:19:34,156 --> 00:19:35,346
名为 RequestAuthorization

561
00:19:35,626 --> 00:19:36,926
的类方法

562
00:19:38,106 --> 00:19:39,006
我们会通过

563
00:19:39,006 --> 00:19:40,736
一个状态码来调用你的 Completion Handler

564
00:19:40,736 --> 00:19:42,346
如果你获得了授权状态码

565
00:19:42,546 --> 00:19:44,586
就可以继续调用

566
00:19:44,586 --> 00:19:46,826
Apple Music API

567
00:19:48,056 --> 00:19:49,806
此外 你必须

568
00:19:49,806 --> 00:19:51,706
在你的 Info.plist 中设置

569
00:19:51,706 --> 00:19:53,406
NSAppleMusicUsage 描述字段

570
00:19:53,456 --> 00:19:55,476
来填充

571
00:19:55,706 --> 00:19:57,136
用户许可对话框的副标题

572
00:19:57,656 --> 00:20:01,156
下一个重要的步骤是

573
00:19:57,656 --> 00:20:01,156
下一个重要的步骤是

574
00:20:01,156 --> 00:20:03,136
获得订阅状态

575
00:20:03,136 --> 00:20:04,416
来确定用户是否

576
00:20:04,416 --> 00:20:05,676
真的订阅了 Apple

577
00:20:05,676 --> 00:20:07,686
Music 这对于

578
00:20:07,686 --> 00:20:10,086
发布个性化请求以

579
00:20:10,116 --> 00:20:11,906
获得数据 例如近期

580
00:20:11,906 --> 00:20:13,626
播放或是重点循环播放

581
00:20:13,626 --> 00:20:14,036
非常重要

582
00:20:15,046 --> 00:20:17,696
然而 这未必是

583
00:20:17,756 --> 00:20:19,616
一个简单的“是”或“否”

584
00:20:19,616 --> 00:20:20,166
的问题

585
00:20:20,636 --> 00:20:22,016
订阅状态有可能是

586
00:20:22,016 --> 00:20:24,706
很复杂的 因为用户

587
00:20:24,706 --> 00:20:25,806
成为 Apple Music 的订阅者

588
00:20:25,806 --> 00:20:28,096
只是因为他们支付

589
00:20:28,096 --> 00:20:29,816
每月的费用 

590
00:20:29,816 --> 00:20:32,346
用户也可能通过运营商而成为了

591
00:20:32,346 --> 00:20:33,356
订阅者

592
00:20:34,606 --> 00:20:36,536
此外 有一些用户可能

593
00:20:36,536 --> 00:20:37,926
播放为 Apple Music 提供的订阅内容

594
00:20:37,926 --> 00:20:39,816
而你的 App 却不能

595
00:20:39,816 --> 00:20:42,166
添加内容到

596
00:20:42,166 --> 00:20:44,396
那些用户的音乐资料库

597
00:20:45,526 --> 00:20:47,096
这是由于 iCloud

598
00:20:47,096 --> 00:20:49,186
音乐资料库的功能必须

599
00:20:49,186 --> 00:20:50,026
另外启动的

600
00:20:51,376 --> 00:20:53,696
最后 你很有可能

601
00:20:53,696 --> 00:20:54,936
没办法建议所有的

602
00:20:54,936 --> 00:20:56,476
用户成为 Apple Music

603
00:20:56,476 --> 00:20:58,296
订阅者 因为我们

604
00:20:58,296 --> 00:20:59,756
并不是在每一个国家都提供

605
00:20:59,756 --> 00:21:01,526
Apple Music  甚至在

606
00:20:59,756 --> 00:21:01,526
Apple Music  甚至在

607
00:21:01,526 --> 00:21:02,686
一些我们提供 Apple Music 

608
00:21:02,686 --> 00:21:05,146
的国家 也会有一些设置

609
00:21:05,146 --> 00:21:06,936
比如教育设置或是

610
00:21:06,936 --> 00:21:08,726
企业设置 在这样的情况下

611
00:21:08,726 --> 00:21:09,576
要想成为 Apple Music

612
00:21:09,576 --> 00:21:10,886
的订阅者实际上是

613
00:21:10,886 --> 00:21:11,376
受限制的

614
00:21:12,336 --> 00:21:13,716
因此 基于这个原因 我们会展示

615
00:21:13,886 --> 00:21:15,356
三个你可以询问的

616
00:21:15,356 --> 00:21:15,946
独立 Capability 

617
00:21:16,586 --> 00:21:17,866
“音乐目录播放”

618
00:21:17,866 --> 00:21:20,236
“添加到 iCloud 音乐资料库”

619
00:21:20,236 --> 00:21:22,436
以及

620
00:21:22,606 --> 00:21:23,696
你可以区分用户是否

621
00:21:23,696 --> 00:21:24,746
“能够成为订阅者”

622
00:21:25,716 --> 00:21:27,416
因此在你要采取

623
00:21:27,416 --> 00:21:28,836
和 Apple Music 相关的措施之前

624
00:21:28,836 --> 00:21:31,536
在你的 App 上

625
00:21:31,536 --> 00:21:33,086
检查这些独立的 Capability 

626
00:21:33,086 --> 00:21:33,716
是很重要的

627
00:21:33,916 --> 00:21:35,596
比如你想要

628
00:21:35,596 --> 00:21:36,936
在你的 App 上有一个“播放”按钮

629
00:21:36,996 --> 00:21:38,556
来预览来自

630
00:21:38,556 --> 00:21:39,896
Apple Music 的内容 请确保

631
00:21:39,896 --> 00:21:41,416
你检查了音乐目录播放

632
00:21:41,416 --> 00:21:41,946
Capability 

633
00:21:42,586 --> 00:21:44,306
相反地 如果你想要

634
00:21:44,306 --> 00:21:46,296
一个“添加”按钮来从用户的资料库

635
00:21:46,296 --> 00:21:48,816
添加某一首歌到播放列表

636
00:21:48,816 --> 00:21:50,806
请确保

637
00:21:50,806 --> 00:21:52,176
添加到 iCloud 音乐资料库

638
00:21:52,406 --> 00:21:53,786
这一 Capability 可用

639
00:21:54,226 --> 00:21:57,566
获取订阅状态

640
00:21:57,566 --> 00:21:59,536
信息需要用户

641
00:21:59,536 --> 00:22:01,986
许可 同样你可以使用

642
00:21:59,536 --> 00:22:01,986
许可 同样你可以使用

643
00:22:01,986 --> 00:22:03,326
代码做到这一点

644
00:22:03,326 --> 00:22:04,726
使用 SKCloudServiceController

645
00:22:05,396 --> 00:22:06,646
这里我们会调用一个

646
00:22:06,646 --> 00:22:08,276
叫作 requestCapabilities

647
00:22:08,326 --> 00:22:11,366
的实例方法

648
00:22:11,366 --> 00:22:12,666
然后

649
00:22:13,036 --> 00:22:14,016
会通过一个 Capability 设置组

650
00:22:14,016 --> 00:22:14,896
调用你的 Completion Handler

651
00:22:16,056 --> 00:22:17,186
你可以检查

652
00:22:17,186 --> 00:22:19,256
那个设置组中的

653
00:22:19,426 --> 00:22:20,796
“音乐目录播放“

654
00:22:20,986 --> 00:22:22,356
来检查用户是否

655
00:22:22,356 --> 00:22:24,646
可以播放订阅内容 或者检查

656
00:22:24,646 --> 00:22:27,136
“添加到 iCloud

657
00:22:27,136 --> 00:22:28,836
音乐资料库性”来查看你的 App 是否

658
00:22:28,836 --> 00:22:30,336
可以添加歌曲到该用户的

659
00:22:30,336 --> 00:22:31,316
iCloud 资料库

660
00:22:31,776 --> 00:22:35,466
下一步 你也许需要

661
00:22:35,466 --> 00:22:37,016
知道“店面国家

662
00:22:37,016 --> 00:22:37,266
代码”

663
00:22:37,266 --> 00:22:38,616
这对于

664
00:22:38,616 --> 00:22:41,646
向 Apple Music API

665
00:22:41,646 --> 00:22:43,256
的目录端点请求允许很重要

666
00:22:43,256 --> 00:22:45,226
因为 如你所见

667
00:22:45,226 --> 00:22:47,226
“店面国家代码”

668
00:22:47,226 --> 00:22:49,306
对那些 URL 路径来说

669
00:22:49,436 --> 00:22:50,376
是很重要的部分

670
00:22:51,366 --> 00:22:52,576
为了获取“店面国家

671
00:22:52,576 --> 00:22:54,306
代码“ 你将可以使用

672
00:22:54,306 --> 00:22:55,836
SKCloudServiceController

673
00:22:55,836 --> 00:22:57,296
的另一种方法

674
00:22:58,136 --> 00:22:59,296
这次叫作

675
00:22:59,296 --> 00:23:00,966
requestStorefrontCountryCode

676
00:22:59,296 --> 00:23:00,966
requestStorefrontCountryCode

677
00:23:01,876 --> 00:23:03,606
我们将会唤醒你的 Completion

678
00:23:03,606 --> 00:23:05,406
Handler 通过一个两个字母组成的

679
00:23:05,406 --> 00:23:07,806
国家代码 之后你可以

680
00:23:07,806 --> 00:23:10,036
用它为你的目录端点请求

681
00:23:10,036 --> 00:23:12,826
构建 URL 

682
00:23:12,826 --> 00:23:13,786
在这个例子中 我们正试图

683
00:23:13,786 --> 00:23:16,316
构建一个歌曲排行 URL 

684
00:23:16,316 --> 00:23:18,696
这一行与我们

685
00:23:18,696 --> 00:23:20,226
在哪里使用

686
00:23:20,226 --> 00:23:21,496
“店面国家代码”相关 它位于

687
00:23:21,496 --> 00:23:26,836
这个 URL 路径的中间

688
00:23:26,836 --> 00:23:28,256
最后 想要解锁

689
00:23:28,256 --> 00:23:30,416
Apple Music API 的所有东西 你

690
00:23:30,416 --> 00:23:32,336
需要获得音乐用户

691
00:23:32,336 --> 00:23:34,006
令牌 这对于

692
00:23:34,226 --> 00:23:35,266
为个性化内容发布请求

693
00:23:35,266 --> 00:23:37,406
很重要 例如

694
00:23:37,596 --> 00:23:39,376
近期播放或是重点

695
00:23:39,376 --> 00:23:39,976
循环播放

696
00:23:40,646 --> 00:23:41,776
这是由你的

697
00:23:41,776 --> 00:23:44,446
开发人员令牌所衍生的 因为

698
00:23:44,446 --> 00:23:45,836
获取音乐用户令牌是

699
00:23:45,836 --> 00:23:47,306
一项比较昂贵的操作

700
00:23:47,726 --> 00:23:49,126
我们建议你

701
00:23:49,126 --> 00:23:50,426
一旦获取了音乐用户

702
00:23:50,426 --> 00:23:50,656
令牌 就将其缓存

703
00:23:50,766 --> 00:23:52,636
例如你可以通过用户

704
00:23:52,636 --> 00:23:54,926
默认设置做到这一点 但是请

705
00:23:54,926 --> 00:23:56,326
确保不要跨设备转移

706
00:23:56,326 --> 00:23:57,806
音乐用户令牌

707
00:23:58,246 --> 00:24:00,606
因为这样做的话你很有可能破坏了

708
00:23:58,246 --> 00:24:00,606
因为这样做的话你很有可能破坏了

709
00:24:00,606 --> 00:24:03,336
用户许可

710
00:24:03,556 --> 00:24:04,916
由于你会缓存这个

711
00:24:04,916 --> 00:24:06,786
音乐用户令牌 你还应该

712
00:24:06,786 --> 00:24:09,236
注意你需要在什么时候

713
00:24:09,236 --> 00:24:10,756
将它作废并再次获取

714
00:24:10,756 --> 00:24:12,256
音乐用户令牌 而且

715
00:24:12,256 --> 00:24:13,336
这是很典型的 当你何时

716
00:24:13,446 --> 00:24:15,466
从 Apple Music API 的任何端点

717
00:24:15,466 --> 00:24:16,866
获得一个禁止状态代码

718
00:24:17,006 --> 00:24:19,096
也就是

719
00:24:19,096 --> 00:24:21,046
403 HTTP 状态代码

720
00:24:21,446 --> 00:24:22,566
这可能发生在很多种

721
00:24:22,566 --> 00:24:24,326
情况下 例如 用户

722
00:24:24,566 --> 00:24:25,696
有可能更改了

723
00:24:25,696 --> 00:24:27,076
和 iTunes store 帐户相关联的密码

724
00:24:27,076 --> 00:24:29,626
或者用户可能

725
00:24:29,626 --> 00:24:30,946
决定取消

726
00:24:30,946 --> 00:24:32,476
与你的 App 相关联的用户令牌

727
00:24:32,826 --> 00:24:34,736
或者 用户令牌

728
00:24:34,736 --> 00:24:35,816
可能自然过期失效

729
00:24:37,236 --> 00:24:38,876
在所有的这些情况下 请确保

730
00:24:38,876 --> 00:24:40,656
再一次检查过 Capability 之后再次

731
00:24:40,766 --> 00:24:42,816
获取音乐用户令牌

732
00:24:42,816 --> 00:24:44,846
同时为了防止活跃的

733
00:24:44,846 --> 00:24:45,846
iTunes Store 帐户发生

734
00:24:45,846 --> 00:24:47,526
改变

735
00:24:48,086 --> 00:24:50,396
因此 为了获取音乐用户

736
00:24:50,396 --> 00:24:51,896
令牌 我们将会再一次使用

737
00:24:52,046 --> 00:24:52,836
StoreKit 的

738
00:24:52,836 --> 00:24:54,576
SKCloudServiceController 

739
00:24:54,576 --> 00:24:54,826
方法

740
00:24:55,716 --> 00:24:57,016
这里 我们还有其他方法 

741
00:24:57,496 --> 00:24:58,856
也就是 requestUserToken

742
00:24:58,856 --> 00:25:00,146
和 forDeveloperToken

743
00:24:58,856 --> 00:25:00,146
和 forDeveloperToken

744
00:25:00,386 --> 00:25:01,856
你需要把开发人员标志

745
00:25:02,216 --> 00:25:03,946
作为一个参数传递过去 然后就可以

746
00:25:03,946 --> 00:25:05,376
调用我们的 Completion Handler

747
00:25:05,646 --> 00:25:07,116
并且处理我们的音乐用户

748
00:25:07,116 --> 00:25:07,786
令牌

749
00:25:08,536 --> 00:25:10,386
然后你可以使用它来

750
00:25:10,776 --> 00:25:12,376
合理填充 URL 请求中的

751
00:25:12,376 --> 00:25:14,576
HTTP 标头

752
00:25:15,076 --> 00:25:17,586
尤其是音乐令牌

753
00:25:17,876 --> 00:25:18,896
HTTP 标头

754
00:25:19,246 --> 00:25:22,836
一旦你获得了用户令牌

755
00:25:22,836 --> 00:25:25,636
用户许可 你就拥有了

756
00:25:25,636 --> 00:25:27,346
访问 Apple Music API 的完整权限

757
00:25:27,346 --> 00:25:28,986
因而可以继续

758
00:25:29,326 --> 00:25:30,676
为 App 构建很棒的

759
00:25:30,676 --> 00:25:32,636
用户体验

760
00:25:32,636 --> 00:25:33,306
以增加用户粘性

761
00:25:33,826 --> 00:25:35,066
但是有时候你可能会

762
00:25:35,066 --> 00:25:36,816
面临另一个极端的情况

763
00:25:37,246 --> 00:25:38,786
那就是当用户还不是

764
00:25:38,786 --> 00:25:39,776
Apple Music 的订阅者时

765
00:25:40,296 --> 00:25:42,956
这样的情况发生时 你也许

766
00:25:43,006 --> 00:25:45,276
想要通过展示订阅视图

767
00:25:45,946 --> 00:25:50,346
来建议用户加入

768
00:25:50,346 --> 00:25:52,616
Apple Music 这样的话他们就可以

769
00:25:52,706 --> 00:25:55,066
参与我们的试用计划 可以

770
00:25:55,066 --> 00:25:57,276
访问超过 4000 万歌曲

771
00:25:57,756 --> 00:25:58,826
还可以解锁

772
00:25:58,826 --> 00:26:00,806
你 App 的所有潜力

773
00:25:58,826 --> 00:26:00,806
你 App 的所有潜力

774
00:26:01,576 --> 00:26:03,016
此外 作为一名开发人员

775
00:26:03,016 --> 00:26:04,706
这与你非常相关

776
00:26:04,706 --> 00:26:06,176
因为你可以通过

777
00:26:06,176 --> 00:26:07,176
增加 Apple Music

778
00:26:07,176 --> 00:26:08,906
订阅者来获得回报 只需要参加

779
00:26:08,906 --> 00:26:09,936
我们的“合作伙伴计划”

780
00:26:10,456 --> 00:26:14,496
那么 什么时候你

781
00:26:14,496 --> 00:26:15,276
才应该展示

782
00:26:15,276 --> 00:26:16,046
订阅视图呢

783
00:26:16,456 --> 00:26:17,896
应该是在你

784
00:26:17,896 --> 00:26:19,056
发现用户

785
00:26:19,136 --> 00:26:20,656
当前无法播放订阅

786
00:26:20,656 --> 00:26:21,176
内容

787
00:26:22,136 --> 00:26:23,766
但是用户可以成为 Apple

788
00:26:23,766 --> 00:26:24,596
Music 的订阅者

789
00:26:25,166 --> 00:26:26,536
在 Capability 方面 

790
00:26:26,536 --> 00:26:28,186
正如我们之前讨论过的 

791
00:26:28,186 --> 00:26:28,906
你需要确保

792
00:26:28,906 --> 00:26:30,686
musicCatalogPlayback Capability

793
00:26:31,016 --> 00:26:33,206
当前被禁用而

794
00:26:33,206 --> 00:26:35,016
musicCatalogSubscriptionEligible

795
00:26:35,066 --> 00:26:36,966
这个 Capability 被启用

796
00:26:37,526 --> 00:26:40,826
注意 在很罕见

797
00:26:40,826 --> 00:26:42,536
的情况下 用户在此设备上没有

798
00:26:42,536 --> 00:26:43,716
一个有效的 iTunes Store

799
00:26:43,716 --> 00:26:46,006
帐户 这时你将会看到

800
00:26:46,006 --> 00:26:47,786
那个状态也会以

801
00:26:47,786 --> 00:26:49,816
同样的方式报告 我们需要

802
00:26:49,816 --> 00:26:51,086
加入一个“登录”按钮

803
00:26:51,086 --> 00:26:51,886
来作为订阅视图的

804
00:26:51,886 --> 00:26:51,976
一部分

805
00:26:56,276 --> 00:26:57,646
订阅视图是

806
00:26:57,646 --> 00:27:00,376
可配置的 也就是说你

807
00:26:57,646 --> 00:27:00,376
可配置的 也就是说你

808
00:27:00,376 --> 00:27:01,866
可以选择

809
00:27:01,866 --> 00:27:02,796
传递给用户的主要信息

810
00:27:03,196 --> 00:27:04,986
默认地 我们会让用户

811
00:27:04,986 --> 00:27:05,926
订阅 Apple Music

812
00:27:06,676 --> 00:27:08,196
但是通过传递一个可选的

813
00:27:08,196 --> 00:27:10,206
信息标识符 你可以

814
00:27:10,206 --> 00:27:11,816
选择一种更加合适的信息

815
00:27:12,066 --> 00:27:13,206
这个信息基于接下来

816
00:27:13,206 --> 00:27:15,276
你想要在 App 中进行的操作

817
00:27:16,106 --> 00:27:17,776
所以 我们有其他

818
00:27:17,776 --> 00:27:18,696
信息标识符的值

819
00:27:18,696 --> 00:27:21,916
可供选择 比如“连接” 

820
00:27:21,916 --> 00:27:23,416
我们会让用户连接到

821
00:27:23,416 --> 00:27:23,956
Apple Music

822
00:27:24,656 --> 00:27:27,776
我们还有“添加音乐” 

823
00:27:27,776 --> 00:27:29,856
很好地提醒用户添加想要的

824
00:27:29,856 --> 00:27:30,286
音乐

825
00:27:30,926 --> 00:27:33,306
最后我们还有“播放音乐”

826
00:27:34,736 --> 00:27:36,976
所以你要确保选择最合适的

827
00:27:36,976 --> 00:27:37,986
信息标识符

828
00:27:37,986 --> 00:27:39,286
以响应你想在 App 中

829
00:27:39,286 --> 00:27:41,106
进行的下一步操作

830
00:27:41,106 --> 00:27:42,516
这样我们就能选择

831
00:27:42,516 --> 00:27:43,746
对于用户来说

832
00:27:43,746 --> 00:27:44,176
最有合理的信息

833
00:27:44,716 --> 00:27:47,456
你也可以将

834
00:27:47,456 --> 00:27:49,576
订阅视图文本化

835
00:27:49,576 --> 00:27:50,866
这可以通过高亮某一具体内容

836
00:27:50,866 --> 00:27:53,676
比如一首歌 专辑

837
00:27:53,946 --> 00:27:55,866
播放列表或是电台

838
00:27:56,346 --> 00:27:58,476
你可以通过传递一个

839
00:27:58,506 --> 00:28:00,676
iTunes 项目标识符选项来实现

840
00:27:58,506 --> 00:28:00,676
iTunes 项目标识符选项来实现

841
00:28:01,476 --> 00:28:03,806
它需要一个类型字符串的值

842
00:28:03,806 --> 00:28:05,786
并且和 Apple Music API 资源的

843
00:28:05,786 --> 00:28:07,626
JSON 表示形式中的

844
00:28:07,626 --> 00:28:09,246
ID 字段

845
00:28:09,436 --> 00:28:10,576
相呼应

846
00:28:12,756 --> 00:28:14,326
对于这个订阅视图

847
00:28:14,326 --> 00:28:15,226
你还有更多的选项

848
00:28:15,226 --> 00:28:15,986
需要注意

849
00:28:15,986 --> 00:28:18,006
你需要设定订阅

850
00:28:18,056 --> 00:28:20,126
操作 而且你可以

851
00:28:20,126 --> 00:28:22,616
传递可选的合作伙伴令牌

852
00:28:22,616 --> 00:28:24,016
和营销令牌 

853
00:28:24,016 --> 00:28:25,946
如果你加入了

854
00:28:25,946 --> 00:28:26,926
我们的“合作伙伴计划”

855
00:28:27,896 --> 00:28:30,546
将这些串联在一起你就会知道

856
00:28:30,546 --> 00:28:31,276
如何展示

857
00:28:31,276 --> 00:28:32,676
“订阅视图”了

858
00:28:33,496 --> 00:28:35,996
我们还会实例化一个

859
00:28:35,996 --> 00:28:37,536
StoreKit 中的 View Controller

860
00:28:40,856 --> 00:28:42,526
也就是

861
00:28:42,526 --> 00:28:45,096
SKCloudServiceSetupViewController

862
00:28:45,096 --> 00:28:46,666
你可以将自己设成

863
00:28:46,666 --> 00:28:47,416
这个 View Controller 的委托

864
00:28:48,266 --> 00:28:50,146
然后你需要构建一个

865
00:28:50,146 --> 00:28:52,056
我们刚刚讨论过的选项列表

866
00:28:52,666 --> 00:28:53,966
在这个例子中 我们会将

867
00:28:53,966 --> 00:28:56,536
“action”设置成”subscribe” 将

868
00:28:56,536 --> 00:28:58,616
“messageIdentifier”设置成“playMusic”

869
00:28:59,516 --> 00:29:02,466
然后你需要调用含有 load(options:) 方法

870
00:28:59,516 --> 00:29:02,466
然后你需要调用含有 load(options:) 方法

871
00:29:02,466 --> 00:29:04,666
来加载所有

872
00:29:04,666 --> 00:29:06,186
订阅视图里的

873
00:29:06,186 --> 00:29:06,346
内容

874
00:29:06,346 --> 00:29:07,446
这是因为它是一个

875
00:29:07,446 --> 00:29:08,966
服务器驱动的视图需要我们

876
00:29:08,966 --> 00:29:10,396
加载一定数量的

877
00:29:10,396 --> 00:29:10,786
内容

878
00:29:12,326 --> 00:29:13,266
由于这一过程是

879
00:29:13,266 --> 00:29:15,636
异步的 我们推荐你

880
00:29:15,636 --> 00:29:17,416
在 App 中展示一个下拉列表 

881
00:29:17,416 --> 00:29:18,816
同时我们在加载这个内容

882
00:29:18,816 --> 00:29:19,996
你也可以通过使用

883
00:29:19,996 --> 00:29:21,496
UIActivityIndicatorView 来这样做

884
00:29:22,826 --> 00:29:23,846
一旦我们完成加载所有

885
00:29:23,846 --> 00:29:25,556
内容 我们就会唤醒

886
00:29:25,556 --> 00:29:27,326
完成处理器 你可以

887
00:29:27,326 --> 00:29:28,656
继续展示订阅

888
00:29:28,656 --> 00:29:30,896
景象如果“didSucceed Boolean”

889
00:29:30,896 --> 00:29:33,516
被设定为“true” 只需要通过调用

890
00:29:33,516 --> 00:29:34,766
UIKit 中的 PresentViewController

891
00:29:34,766 --> 00:29:35,546
方法

892
00:29:36,126 --> 00:29:39,506
这就是你如何展示

893
00:29:39,926 --> 00:29:40,746
“订阅景象”

894
00:29:40,746 --> 00:29:41,816
此外 如果用户

895
00:29:41,816 --> 00:29:43,426
因此而决定成为订阅者

896
00:29:43,426 --> 00:29:44,736
你可以

897
00:29:45,186 --> 00:29:46,836
通过观察发现

898
00:29:46,836 --> 00:29:48,176
性能将

899
00:29:48,176 --> 00:29:49,196
SKCloudServiceController 变成了

900
00:29:49,196 --> 00:29:51,336
通知 而且

901
00:29:51,336 --> 00:29:52,836
你还可以通过相关代理方法

902
00:29:52,836 --> 00:29:54,336
发现

903
00:29:54,336 --> 00:29:55,926
订阅景象

904
00:29:55,926 --> 00:29:56,306
消失了

905
00:29:56,856 --> 00:30:01,916
有了它 你就拥有了所有

906
00:29:56,856 --> 00:30:01,916
有了它 你就拥有了所有

907
00:30:01,916 --> 00:30:03,956
你需要的标志来点击 Apple

908
00:30:03,956 --> 00:30:05,886
Music API 获取 Apple Music

909
00:30:05,886 --> 00:30:07,316
内容 而且你也确保了

910
00:30:07,316 --> 00:30:07,976
用户是一名订阅者

911
00:30:08,426 --> 00:30:10,356
那么我们就可以做一些有趣的事了

912
00:30:10,826 --> 00:30:12,836
事实上就是播放

913
00:30:12,836 --> 00:30:14,476
订阅或者是资料库的内容

914
00:30:15,436 --> 00:30:17,086
为此 我们将要转换一下

915
00:30:17,086 --> 00:30:18,356
方向 看一下

916
00:30:18,356 --> 00:30:19,836
iOS SDK 里的另一个框架

917
00:30:19,836 --> 00:30:21,956
也就是 MediaPlayer 框架

918
00:30:24,516 --> 00:30:25,716
你会发现 MediaPlayer

919
00:30:25,716 --> 00:30:27,326
框架的一个类叫作

920
00:30:27,476 --> 00:30:29,686
MPMusicPlayerController 

921
00:30:29,766 --> 00:30:32,536
它提供两个不同的播放器

922
00:30:32,536 --> 00:30:34,816
在一定使用情况下

923
00:30:34,846 --> 00:30:36,806
你可以控制两种不同用例下的

924
00:30:36,806 --> 00:30:37,666
音乐播放

925
00:30:37,896 --> 00:30:39,546
为了强调这一点 让我们来

926
00:30:39,546 --> 00:30:40,866
看一个例子

927
00:30:41,726 --> 00:30:43,416
假定你在构建一个

928
00:30:43,416 --> 00:30:44,396
社交网络 App

929
00:30:44,966 --> 00:30:45,956
你希望你的用户

930
00:30:45,956 --> 00:30:47,486
可以更简单地分享音乐

931
00:30:47,486 --> 00:30:49,366
内容给他们的朋友 

932
00:30:49,366 --> 00:30:50,356
所以作为

933
00:30:50,356 --> 00:30:51,596
收到这一内容的朋友

934
00:30:51,596 --> 00:30:55,336
能够在你的 App 上预览

935
00:30:55,396 --> 00:30:58,206
歌曲和专辑是很重要的

936
00:30:58,266 --> 00:31:00,556
然而 你应该确保

937
00:30:58,266 --> 00:31:00,556
然而 你应该确保

938
00:31:00,556 --> 00:31:01,776
收到这一内容的朋友

939
00:31:01,776 --> 00:31:02,816
可以享受

940
00:31:02,876 --> 00:31:04,226
完整的音乐 App 功能

941
00:31:04,226 --> 00:31:06,336
允许

942
00:31:06,336 --> 00:31:07,606
朋友返回

943
00:31:07,606 --> 00:31:10,036
音乐 App 并且也许可以把

944
00:31:10,036 --> 00:31:12,906
歌曲分享给别人 通过使用 Connect 或是

945
00:31:12,906 --> 00:31:13,306
AirDrop

946
00:31:15,176 --> 00:31:16,756
对于这样的应用来说

947
00:31:16,756 --> 00:31:18,316
systemMusicPlayer 也许是

948
00:31:18,316 --> 00:31:19,526
很好的选择

949
00:31:20,096 --> 00:31:22,146
然而 如果你需要

950
00:31:22,146 --> 00:31:23,656
对播放体验有更多的控制

951
00:31:23,656 --> 00:31:25,516
你也许会想要

952
00:31:25,516 --> 00:31:26,066
看一眼

953
00:31:26,066 --> 00:31:27,576
applicationQueuePlayer

954
00:31:27,576 --> 00:31:28,686
健身 App 在这里可能是一个很好的

955
00:31:28,686 --> 00:31:29,626
例子

956
00:31:30,526 --> 00:31:32,286
你可能希望

957
00:31:32,286 --> 00:31:33,526
你的用户在户外跑步时

958
00:31:33,526 --> 00:31:36,666
可以播放一些

959
00:31:36,806 --> 00:31:40,386
背景音乐 所以你

960
00:31:40,386 --> 00:31:42,226
可能想要确保

961
00:31:42,346 --> 00:31:43,966
音乐和跑步的节奏

962
00:31:43,966 --> 00:31:44,356
相适应

963
00:31:45,496 --> 00:31:46,866
你也许还想要在

964
00:31:46,916 --> 00:31:47,936
播放列表的中间插入一首

965
00:31:47,936 --> 00:31:49,696
很有力量的歌 来实现你

966
00:31:49,696 --> 00:31:51,246
定制的播放控制

967
00:31:51,776 --> 00:31:54,416
applicationQueuePlayer

968
00:31:54,416 --> 00:31:56,466
能使你实现

969
00:31:57,076 --> 00:31:57,206
这些功能

970
00:31:57,396 --> 00:31:58,726
这两个播放器会

971
00:31:58,726 --> 00:32:00,326
自动为你做很多事情

972
00:31:58,726 --> 00:32:00,326
自动为你做很多事情

973
00:32:00,646 --> 00:32:02,076
他们会确保

974
00:32:02,076 --> 00:32:03,286
在锁屏时填充

975
00:32:03,286 --> 00:32:03,716
控制中心

976
00:32:04,886 --> 00:32:06,756
但是 

977
00:32:06,756 --> 00:32:07,806
根据你选择的播放器

978
00:32:07,806 --> 00:32:09,526
情况也会有所不同 因为

979
00:32:09,526 --> 00:32:10,906
使用 systemMusicPlayer 的音乐类 App 会通过

980
00:32:10,906 --> 00:32:12,046
“正在播放” App 进行播放

981
00:32:12,046 --> 00:32:13,676
然而如果你选择

982
00:32:13,676 --> 00:32:15,086
applicationQueuePlayer 的话

983
00:32:15,086 --> 00:32:16,356
则将会通过

984
00:32:16,356 --> 00:32:17,536
你的 App 来播放

985
00:32:18,046 --> 00:32:20,526
这是因为使用

986
00:32:20,526 --> 00:32:22,706
systemMusicPlayer 时 

987
00:32:22,766 --> 00:32:24,116
你的 App 相当于一个音乐 App

988
00:32:24,116 --> 00:32:25,496
的遥控器

989
00:32:26,306 --> 00:32:27,126
然而 如果你使用的是

990
00:32:27,126 --> 00:32:29,326
applicationQueuePlayer 你的 App

991
00:32:29,516 --> 00:32:31,056
可以拥有自己的播放队列

992
00:32:31,266 --> 00:32:33,476
并完全独立于

993
00:32:33,476 --> 00:32:34,586
音乐 App

994
00:32:36,536 --> 00:32:38,166
这两个播放器都可以使你

995
00:32:38,166 --> 00:32:39,506
通过简单操作来

996
00:32:39,506 --> 00:32:42,106
控制播放队列 比如

997
00:32:42,196 --> 00:32:43,246
通过“Set Queue”命令

998
00:32:43,246 --> 00:32:44,476
来完全取代播放队列

999
00:32:44,476 --> 00:32:47,126
你还可以通过

1000
00:32:47,126 --> 00:32:48,936
设置内容为

1001
00:32:49,306 --> 00:32:51,726
“接下来播放”或“稍后播放”

1002
00:32:51,726 --> 00:32:52,236
来使用即将播放功能

1003
00:32:52,726 --> 00:32:54,786
但是通过

1004
00:32:54,786 --> 00:32:56,696
applicationQueuePlayer 你可以

1005
00:32:56,696 --> 00:32:59,256
更进一步 通过在

1006
00:32:59,256 --> 00:33:00,416
播放队列的中间

1007
00:32:59,256 --> 00:33:00,416
播放队列的中间

1008
00:33:00,416 --> 00:33:02,856
插入项目

1009
00:33:02,856 --> 00:33:04,156
而移走原本已经在播放队列中的

1010
00:33:04,626 --> 00:33:04,816
歌曲

1011
00:33:06,136 --> 00:33:07,436
为了实现

1012
00:33:07,436 --> 00:33:08,506
那些播放列表的操控

1013
00:33:08,506 --> 00:33:10,686
任务 你将要使用到的是

1014
00:33:10,686 --> 00:33:12,136
我们称之为“队列描述符”这一概念

1015
00:33:12,606 --> 00:33:13,886
依据你要处理的

1016
00:33:13,886 --> 00:33:15,316
内容种类

1017
00:33:15,316 --> 00:33:16,796
我们提供三种

1018
00:33:16,796 --> 00:33:17,306
队列描述符

1019
00:33:18,366 --> 00:33:20,476
第一种是媒体项目

1020
00:33:20,706 --> 00:33:22,766
队列描述符 这一种

1021
00:33:22,766 --> 00:33:25,166
很有用 如果你有一个

1022
00:33:25,196 --> 00:33:26,686
MPMediaItem 或

1023
00:33:26,686 --> 00:33:28,676
MPMediaItemCollection 的实例的话 

1024
00:33:28,676 --> 00:33:30,136
你也会愿意从它开始

1025
00:33:30,216 --> 00:33:30,386
播放

1026
00:33:30,766 --> 00:33:32,816
典型情况下 你会有很多

1027
00:33:32,816 --> 00:33:35,576
这样的实例 通过使用 MPMediaQuery

1028
00:33:35,726 --> 00:33:37,046
制定设备资料库询问

1029
00:33:37,046 --> 00:33:40,216
或是通过展现

1030
00:33:40,216 --> 00:33:41,516
媒体挑选器来允许

1031
00:33:41,516 --> 00:33:43,156
用户挑选

1032
00:33:43,156 --> 00:33:44,726
他资料库里的一项内容

1033
00:33:45,226 --> 00:33:48,786
就目录播放来说 我么还有

1034
00:33:48,786 --> 00:33:50,476
商店队列描述符

1035
00:33:50,696 --> 00:33:53,476
使用商店队列描述符

1036
00:33:53,476 --> 00:33:54,616
你需要的数据是

1037
00:33:54,616 --> 00:33:56,396
一个商店 ID 那是和

1038
00:33:56,396 --> 00:33:57,926
Apple Music API 资源中的

1039
00:33:57,926 --> 00:33:59,456
JSON 表现形式的 ID 字段

1040
00:33:59,456 --> 00:34:00,826
相呼应的

1041
00:33:59,456 --> 00:34:00,826
相呼应的

1042
00:34:00,826 --> 00:34:01,826
字符串

1043
00:34:02,956 --> 00:34:04,316
它通常对于

1044
00:34:04,316 --> 00:34:05,996
目录内容很有用 比如

1045
00:34:05,996 --> 00:34:06,946
目录搜索

1046
00:34:08,795 --> 00:34:10,735
我们还有一个新的队列

1047
00:34:10,735 --> 00:34:12,216
描述符 就是播放

1048
00:34:12,216 --> 00:34:13,085
播放参数队列

1049
00:34:13,085 --> 00:34:16,866
描述符 它可以完成

1050
00:34:16,946 --> 00:34:17,896
所有商店队列描述符

1051
00:34:17,896 --> 00:34:20,525
可以完成的任务 而且

1052
00:34:20,585 --> 00:34:22,196
可以处理个性化的内容

1053
00:34:22,386 --> 00:34:24,016
比如最近

1054
00:34:24,016 --> 00:34:27,275
播放或是高度循环播放的内容

1055
00:34:27,275 --> 00:34:28,766
它还支持播放广播

1056
00:34:28,766 --> 00:34:29,416
电台

1057
00:34:30,156 --> 00:34:31,596
在这里 播放参数队列描述符

1058
00:34:31,596 --> 00:34:32,966
需要使用的数据

1059
00:34:32,966 --> 00:34:35,226
是与

1060
00:34:35,226 --> 00:34:36,746
Apple Music API 资源中的

1061
00:34:37,216 --> 00:34:39,496
JSON 表现形式的

1062
00:34:39,576 --> 00:34:41,206
播放参数字段相关的值

1063
00:34:43,815 --> 00:34:45,216
那么 让我们来看一看你是如何

1064
00:34:45,216 --> 00:34:46,576
使用这些队列描述符

1065
00:34:46,576 --> 00:34:48,406
来控制你 App 的

1066
00:34:48,406 --> 00:34:48,706
播放的

1067
00:34:49,315 --> 00:34:50,456
这里 我们会进行一些简单的

1068
00:34:50,456 --> 00:34:52,166
播放列表操纵

1069
00:34:52,166 --> 00:34:53,646
任务 我们会选择使用

1070
00:34:53,646 --> 00:34:54,626
systemMusicPlayer

1071
00:34:56,556 --> 00:34:58,796
两个播放器都支持简单的

1072
00:34:58,996 --> 00:35:01,716
播放微调 你可以进行设置它们

1073
00:34:58,996 --> 00:35:01,716
播放微调 你可以进行设置它们

1074
00:35:01,716 --> 00:35:03,466
比如都设成循环

1075
00:35:03,466 --> 00:35:04,046
模式

1076
00:35:04,046 --> 00:35:05,346
还是你还可以改变

1077
00:35:05,346 --> 00:35:06,246
随机模式 只要你喜欢

1078
00:35:07,796 --> 00:35:09,776
我们要做的第一件事就是

1079
00:35:10,246 --> 00:35:11,456
改变播放队列

1080
00:35:11,456 --> 00:35:12,856
用一个以 MPMediaItemCollection 表示的

1081
00:35:12,856 --> 00:35:15,556
的本地专辑

1082
00:35:15,556 --> 00:35:16,756
完全取代它

1083
00:35:17,846 --> 00:35:19,376
因为那是我们

1084
00:35:19,376 --> 00:35:21,376
有的数据 我们还会使用

1085
00:35:21,376 --> 00:35:23,666
MPMediaItem 抱歉 是

1086
00:35:23,666 --> 00:35:24,776
MediaItemQueueDescriptor

1087
00:35:26,436 --> 00:35:28,106
你还可以决定

1088
00:35:28,176 --> 00:35:29,616
从专辑的第 4 首歌开始听

1089
00:35:29,616 --> 00:35:31,106
只需要将

1090
00:35:31,156 --> 00:35:33,496
专辑的第 4 首歌设置在开始

1091
00:35:33,496 --> 00:35:33,886
选项

1092
00:35:34,356 --> 00:35:37,816
你还可以用它调用播放器上的

1093
00:35:37,816 --> 00:35:38,976
setQueue 方法

1094
00:35:42,976 --> 00:35:45,696
你还可以使用使用播放器的预方法

1095
00:35:45,696 --> 00:35:47,506
来使用即将播放功能

1096
00:35:47,506 --> 00:35:49,476
也就是把一首歌添加到“接下来播放”

1097
00:35:50,586 --> 00:35:52,476
现在 我们正试图将一首

1098
00:35:52,476 --> 00:35:54,236
目录歌曲添加到“接下来播放”

1099
00:35:54,586 --> 00:35:55,806
它通过一个“商店

1100
00:35:55,806 --> 00:35:57,796
ID”呈现 为此我们必须

1101
00:35:57,836 --> 00:35:58,856
使用商店队列

1102
00:35:58,856 --> 00:35:59,396
描述符

1103
00:35:59,936 --> 00:36:04,636
但是你还可以从

1104
00:35:59,936 --> 00:36:04,636
但是你还可以从

1105
00:36:04,636 --> 00:36:06,566
最近播放中添加歌曲 例如添加到

1106
00:36:06,566 --> 00:36:08,676
队列 通常它们

1107
00:36:08,676 --> 00:36:09,976
会通过播放

1108
00:36:09,976 --> 00:36:11,206
参数呈现 你可以在

1109
00:36:11,206 --> 00:36:12,526
Apple Music API 资源的

1110
00:36:12,526 --> 00:36:13,756
JSON 表现形式中找到

1111
00:36:14,296 --> 00:36:16,206
由于那是我们拥有的数据

1112
00:36:16,206 --> 00:36:17,466
我们将会使用

1113
00:36:17,466 --> 00:36:18,536
播放参数队列描述符

1114
00:36:19,006 --> 00:36:22,066
然后 在这个例子中 我们将选择

1115
00:36:22,116 --> 00:36:23,706
使用它和附加方法

1116
00:36:23,926 --> 00:36:25,946
来添加这首歌到

1117
00:36:25,946 --> 00:36:26,826
“稍后播放”

1118
00:36:26,826 --> 00:36:30,536
如果你的 App 需要

1119
00:36:30,536 --> 00:36:31,886
更多对于播放队列的控制

1120
00:36:31,886 --> 00:36:34,466
你可以转换到

1121
00:36:34,466 --> 00:36:36,506
applicationQueuePlayer 来解锁

1122
00:36:36,506 --> 00:36:37,436
更多功能

1123
00:36:38,936 --> 00:36:40,946
主要来说 你可以在 applicationQueuePlayer

1124
00:36:41,456 --> 00:36:43,126
上调用操作

1125
00:36:43,126 --> 00:36:44,216
队列交易方法

1126
00:36:44,256 --> 00:36:47,246
它需要两个闭包作为

1127
00:36:47,246 --> 00:36:47,966
参数

1128
00:36:48,556 --> 00:36:49,516
第一个是队列

1129
00:36:49,516 --> 00:36:50,236
交易

1130
00:36:51,316 --> 00:36:53,456
我们将会传递一个可变的队列

1131
00:36:54,316 --> 00:36:55,746
目标 它描述的是

1132
00:36:55,746 --> 00:36:56,976
播放对列表的当前

1133
00:36:56,976 --> 00:36:57,196
状态

1134
00:36:58,116 --> 00:36:59,666
你可以在这个可变的队列上调用

1135
00:36:59,666 --> 00:37:00,946
一些方法 比如

1136
00:36:59,666 --> 00:37:00,946
一些方法 比如

1137
00:37:00,946 --> 00:37:02,806
移除方法 将当前的

1138
00:37:02,806 --> 00:37:04,956
第 3 个项目从播放列表

1139
00:37:04,956 --> 00:37:05,566
移除

1140
00:37:06,096 --> 00:37:08,556
你还可以调用向后

1141
00:37:08,676 --> 00:37:11,056
插入方法 我们现在

1142
00:37:11,056 --> 00:37:12,466
正调用它在播放列表的

1143
00:37:12,466 --> 00:37:14,246
第 5 个项目后面

1144
00:37:14,246 --> 00:37:14,796
插入一个项目

1145
00:37:15,796 --> 00:37:17,946
一旦我们完成了应用

1146
00:37:17,946 --> 00:37:19,146
所有那些对播放列表的

1147
00:37:19,146 --> 00:37:20,326
修改 我们会调用

1148
00:37:20,326 --> 00:37:22,246
你的 Completion Handler 来

1149
00:37:22,246 --> 00:37:22,506
告知你

1150
00:37:23,086 --> 00:37:26,036
那就是所有你可以在

1151
00:37:26,036 --> 00:37:27,236
Apple Music 的播放队列进行操作

1152
00:37:27,236 --> 00:37:28,966
的一个概况

1153
00:37:29,476 --> 00:37:30,706
我们迫不及待地想看看

1154
00:37:30,706 --> 00:37:32,466
你们在你们的 App 中将会构建怎么样的

1155
00:37:32,466 --> 00:37:32,756
体验

1156
00:37:33,866 --> 00:37:35,376
接下来我们来讲一讲时间范围

1157
00:37:35,996 --> 00:37:37,446
你何时可以使用你 App 中的

1158
00:37:37,446 --> 00:37:38,056
这些 API

1159
00:37:38,586 --> 00:37:41,326
就现在来看 很多这些

1160
00:37:41,326 --> 00:37:43,126
API 在几次发布中都慢慢

1161
00:37:43,126 --> 00:37:44,926
释出 它们中

1162
00:37:44,926 --> 00:37:46,956
有很多现在都已在 iOS 10.3 可用

1163
00:37:47,206 --> 00:37:48,866
带有一些预告

1164
00:37:49,546 --> 00:37:51,226
在今年的秋天 我们会开始为

1165
00:37:51,226 --> 00:37:53,496
iOS 10.3 设备

1166
00:37:53,566 --> 00:37:54,346
生成音乐用户令牌

1167
00:37:55,266 --> 00:37:56,696
你将需要一个

1168
00:37:56,696 --> 00:37:58,596
替换方法来活的

1169
00:37:58,596 --> 00:38:01,026
店面国家代码 比如

1170
00:37:58,596 --> 00:38:01,026
店面国家代码 比如

1171
00:38:01,026 --> 00:38:02,506
你可以使用

1172
00:38:02,506 --> 00:38:04,476
当前定位的地区代码作为

1173
00:38:04,476 --> 00:38:05,376
一个近似值

1174
00:38:06,616 --> 00:38:08,036
然而 你将可以在 iOS 10.3

1175
00:38:08,036 --> 00:38:09,516
使用商店队列描述符

1176
00:38:09,516 --> 00:38:11,216
通过目录内容

1177
00:38:11,216 --> 00:38:15,236
来开启播放

1178
00:38:15,446 --> 00:38:17,276
在 iOS 11 上 通过

1179
00:38:17,276 --> 00:38:18,726
你现在已有的 Beta 版 你可以

1180
00:38:18,726 --> 00:38:19,776
做一切我们刚刚

1181
00:38:19,776 --> 00:38:21,976
以播放参数 队列描述符

1182
00:38:21,976 --> 00:38:23,536
为例子来谈论的

1183
00:38:23,536 --> 00:38:25,116
事情 这些会在

1184
00:38:25,116 --> 00:38:25,826
之后的 Beta 版中实现

1185
00:38:26,366 --> 00:38:29,216
由于播放参数和

1186
00:38:29,216 --> 00:38:30,556
队列描述符支持

1187
00:38:30,556 --> 00:38:31,346
商店队列

1188
00:38:31,346 --> 00:38:32,836
描述符支持的一切东西 此外

1189
00:38:32,836 --> 00:38:34,026
还包括广播电台和

1190
00:38:34,026 --> 00:38:35,556
个性化内容 如果你的

1191
00:38:35,556 --> 00:38:37,176
目标是 iOS 11 或之后的系统 那么

1192
00:38:37,176 --> 00:38:38,646
你真应该主要使用那一个

1193
00:38:38,646 --> 00:38:39,376
而不是商店队列

1194
00:38:39,376 --> 00:38:39,846
描述符

1195
00:38:43,396 --> 00:38:46,256
总结来说 Apple Music

1196
00:38:46,306 --> 00:38:48,066
提供海量内容

1197
00:38:48,066 --> 00:38:50,206
超过 4000 万首歌曲

1198
00:38:50,486 --> 00:38:51,826
并为你的用户提供个性化

1199
00:38:51,826 --> 00:38:53,736
推荐 你还可以使用

1200
00:38:53,736 --> 00:38:55,796
它 通过发挥它的作用来

1201
00:38:55,796 --> 00:38:57,066
为你的 App 创造广阔的体验

1202
00:38:57,066 --> 00:38:58,506
来使得的用户更加具有

1203
00:38:58,666 --> 00:38:59,286
参与性

1204
00:38:59,986 --> 00:39:02,606
为此你必须要使用

1205
00:38:59,986 --> 00:39:02,606
为此你必须要使用

1206
00:39:02,906 --> 00:39:04,176
StoreKit 框架来获取

1207
00:39:04,176 --> 00:39:06,916
用户许可 使用音乐

1208
00:39:06,916 --> 00:39:09,436
用户令牌来解锁

1209
00:39:09,436 --> 00:39:10,936
Apple Music API 的全部功能

1210
00:39:12,116 --> 00:39:13,376
你可以调用 Apple Music

1211
00:39:13,376 --> 00:39:15,616
API 来获取相关数据

1212
00:39:15,966 --> 00:39:18,816
从 JSON 进行解析 还可以使用

1213
00:39:18,816 --> 00:39:20,676
MediaPlayer 框架来控制

1214
00:39:20,676 --> 00:39:22,116
这一内容的

1215
00:39:22,146 --> 00:39:22,586
播放

1216
00:39:24,536 --> 00:39:26,096
更多有关

1217
00:39:26,096 --> 00:39:27,586
MusicKit 的信息 请使用这个 URL 

1218
00:39:27,586 --> 00:39:28,906
自行查看我们的开发人员

1219
00:39:28,906 --> 00:39:29,526
门户网站

1220
00:39:30,056 --> 00:39:31,266
你还可以看到一些相关的

1221
00:39:31,266 --> 00:39:31,766
会议

1222
00:39:31,766 --> 00:39:33,366
有在这个房间进行的“What's New in Audio（音频新动态）”

1223
00:39:33,366 --> 00:39:35,376
会议

1224
00:39:35,706 --> 00:39:37,016
明天早上我们还会有

1225
00:39:37,016 --> 00:39:37,936
“What's New in Foundation（基建新动态）”这一会议

1226
00:39:37,936 --> 00:39:39,156
从中我们可以了解到

1227
00:39:39,266 --> 00:39:40,726
有关使用 Swift 4 中的 JSON

1228
00:39:40,726 --> 00:39:44,256
解码器的一切

1229
00:39:44,256 --> 00:39:45,456
周四 你还可以了解有关

1230
00:39:45,456 --> 00:39:46,516
AirPlay 2 的内容

1231
00:39:46,516 --> 00:39:47,366
非常感谢 希望大家享受

1232
00:39:47,366 --> 00:39:47,976
接下来的大会
