1
00:00:07,516 --> 00:00:16,500
[背景音乐]

2
00:00:23,516 --> 00:00:25,696
[掌声]

3
00:00:26,196 --> 00:00:27,106
&gt;&gt; 大家好

4
00:00:27,946 --> 00:00:30,926
我的名字是 Georgios Kontaxis

5
00:00:30,926 --> 00:00:32,695
和我一起的是 Katie Skinner

6
00:00:32,695 --> 00:00:34,746
我们非常激动今天能来到这里

7
00:00:34,746 --> 00:00:36,816
为大家讲述关于你的 App 和隐私

8
00:00:36,816 --> 00:00:37,636
的话题

9
00:00:38,296 --> 00:00:39,726
我们是 Apple 隐私工程的

10
00:00:39,726 --> 00:00:40,736
成员

11
00:00:41,316 --> 00:00:42,516
我们和整个公司的团队合作

12
00:00:42,516 --> 00:00:44,516
来保护我们产品的

13
00:00:44,576 --> 00:00:45,556
隐私

14
00:00:45,966 --> 00:00:47,046
在 Apple 我们关心

15
00:00:47,046 --> 00:00:47,466
隐私

16
00:00:48,126 --> 00:00:49,936
以下这句话引用自 Tim Cook

17
00:00:50,196 --> 00:00:51,216
来反映我们理念

18
00:00:52,536 --> 00:00:55,446
我们相信隐私是一个

19
00:00:56,266 --> 00:00:59,406
优秀的 App 生态系统的

20
00:00:59,406 --> 00:01:00,566
基础

21
00:00:59,406 --> 00:01:00,566
基础

22
00:01:01,816 --> 00:01:03,436
我们认为优秀的 App 应该

23
00:01:03,436 --> 00:01:05,266
提供最好的用户体验

24
00:01:05,886 --> 00:01:07,486
并且尊重用户的隐私

25
00:01:08,286 --> 00:01:10,276
所以  今天你将听到一些

26
00:01:10,276 --> 00:01:12,586
很好的方式来设计你的 App

27
00:01:12,586 --> 00:01:14,156
同时保护你的隐私

28
00:01:15,126 --> 00:01:16,896
如果你有已经上架的 App

29
00:01:16,896 --> 00:01:18,446
你将会对我们平台

30
00:01:18,446 --> 00:01:20,376
的更新感兴趣

31
00:01:20,376 --> 00:01:21,106
这可能会影响到你

32
00:01:21,406 --> 00:01:23,006
同时你将了解到一些

33
00:01:23,006 --> 00:01:25,136
Apple 今年将要发布的

34
00:01:25,246 --> 00:01:26,506
令人激动的

35
00:01:26,546 --> 00:01:27,000
新的隐私功能

36
00:01:28,626 --> 00:01:31,286
我们明白  你的 App 可能依靠

37
00:01:31,286 --> 00:01:33,016
用户数据来实现

38
00:01:33,046 --> 00:01:33,526
优秀的功能

39
00:01:34,256 --> 00:01:36,216
所以  非常重要的一点是

40
00:01:36,216 --> 00:01:38,676
你需要向你的用户解释

41
00:01:38,676 --> 00:01:40,446
你是如何使用他们的数据

42
00:01:40,446 --> 00:01:42,626
让他们明白发生了什么

43
00:01:42,626 --> 00:01:44,496
让他们为使用你的 App

44
00:01:44,496 --> 00:01:45,266
感到舒适

45
00:01:46,406 --> 00:01:47,836
同时  你需要在正确的情况下

46
00:01:47,836 --> 00:01:49,856
取得他们的许可

47
00:01:50,286 --> 00:01:52,296
例如  当他们准备使用一项

48
00:01:52,296 --> 00:01:54,156
需要他们数据

49
00:01:54,156 --> 00:01:56,096
的功能时

50
00:01:56,096 --> 00:01:59,216
iOS 有针对信息透明

51
00:01:59,216 --> 00:02:01,806
和用户许可的

52
00:01:59,216 --> 00:02:01,806
和用户许可的

53
00:02:01,806 --> 00:02:02,156
内建调解机制

54
00:02:03,316 --> 00:02:05,716
同时你应该考虑

55
00:02:05,966 --> 00:02:09,626
怎样最好的利用它们

56
00:02:09,675 --> 00:02:12,216
iOS 同时提供了用户

57
00:02:12,216 --> 00:02:12,856
对于他们隐私的控制权

58
00:02:13,546 --> 00:02:16,176
所以  你的 App 需要应对

59
00:02:16,226 --> 00:02:19,076
基于用户可能决定的不同隐私设置

60
00:02:19,076 --> 00:02:20,796
而产生的各种情况

61
00:02:21,166 --> 00:02:23,946
比如在某一时间

62
00:02:23,946 --> 00:02:26,536
改变了主意

63
00:02:26,716 --> 00:02:28,806
这里有一个例子  关于“地图”如何

64
00:02:28,946 --> 00:02:30,796
使用 iOS 内建

65
00:02:30,796 --> 00:02:33,226
的机制来

66
00:02:33,226 --> 00:02:34,036
提示用户的位置

67
00:02:34,806 --> 00:02:36,306
你可以看到  当出现提示时

68
00:02:36,566 --> 00:02:38,516
“地图”将清楚的解释

69
00:02:38,516 --> 00:02:41,516
使用场景  导航

70
00:02:41,516 --> 00:02:43,736
附近的搜索结果  以及预计

71
00:02:43,736 --> 00:02:44,426
行程时间

72
00:02:45,396 --> 00:02:48,306
同时  如果用户选择

73
00:02:48,306 --> 00:02:49,856
不授权使用位置信息

74
00:02:50,146 --> 00:02:51,796
“地图”也能够从容地应对

75
00:02:51,866 --> 00:02:53,986
并提供一个它的

76
00:02:54,036 --> 00:02:54,876
功能子集

77
00:02:55,376 --> 00:02:58,556
如果用户允许“地图”使用位置信息

78
00:02:58,556 --> 00:03:01,146
他们将会在每次使用时

79
00:02:58,556 --> 00:03:01,146
他们将会在每次使用时

80
00:03:01,366 --> 00:03:03,506
被提示

81
00:03:03,506 --> 00:03:05,506
因为 iOS 状态栏有一个指示器

82
00:03:05,626 --> 00:03:07,266
告知他们

83
00:03:08,076 --> 00:03:09,246
同时他们可以随时进入

84
00:03:09,246 --> 00:03:11,296
设置  隐私  定位服务

85
00:03:11,406 --> 00:03:13,976
看见“地图”正在使用

86
00:03:13,976 --> 00:03:16,016
他们的位置

87
00:03:16,316 --> 00:03:17,446
并可以修改他们的决定

88
00:03:19,236 --> 00:03:22,256
我们也知道你的 App 可能依赖

89
00:03:22,256 --> 00:03:23,316
标识符

90
00:03:23,646 --> 00:03:25,146
比如  为了私人化用户经验

91
00:03:25,146 --> 00:03:27,316
或者保持对反馈信息

92
00:03:27,316 --> 00:03:28,096
的追踪

93
00:03:29,606 --> 00:03:31,626
同时  你的用户

94
00:03:31,626 --> 00:03:32,786
想知道他们在你的 App 上的操作

95
00:03:32,866 --> 00:03:35,426
是会捆绑到设备

96
00:03:35,426 --> 00:03:36,556
还是捆绑到

97
00:03:36,616 --> 00:03:36,976
个人

98
00:03:38,096 --> 00:03:40,576
幸运的是  这里有一些很好的方法

99
00:03:40,576 --> 00:03:42,946
来提供隐私友好的选择

100
00:03:43,306 --> 00:03:44,676
因此用户在使用你的 App

101
00:03:44,676 --> 00:03:46,136
时感到舒适

102
00:03:47,006 --> 00:03:49,736
值得一提的是  标识符可以是随机的

103
00:03:49,736 --> 00:03:51,686
他们可以是匿名的

104
00:03:52,186 --> 00:03:53,276
可以是暂时的  并且

105
00:03:53,376 --> 00:03:55,386
他们可以被轻易重置

106
00:03:56,206 --> 00:04:00,396
同时 iOS 提供了内建的 API

107
00:03:56,206 --> 00:04:00,396
同时 iOS 提供了内建的 API

108
00:04:00,396 --> 00:04:02,326
让你能够生成这些

109
00:04:02,326 --> 00:04:03,216
标识符

110
00:04:03,646 --> 00:04:05,126
所以  你应该利用这些

111
00:04:05,356 --> 00:04:07,126
而不是打造自己的

112
00:04:07,686 --> 00:04:10,216
例如  考虑使用

113
00:04:10,216 --> 00:04:12,356
通用唯一标识符

114
00:04:13,026 --> 00:04:16,206
这是一个随机的 128 位的值

115
00:04:16,616 --> 00:04:18,346
你可以使用这里展示的 Swift 代码

116
00:04:18,346 --> 00:04:19,706
来生成它

117
00:04:19,706 --> 00:04:22,576
如你所见

118
00:04:22,826 --> 00:04:24,636
使用这个 API 进行三次连续的调用

119
00:04:24,636 --> 00:04:27,686
将会返回三个随机的

120
00:04:28,186 --> 00:04:29,136
不相关的值

121
00:04:29,926 --> 00:04:31,376
作为示例  你可以

122
00:04:31,376 --> 00:04:33,556
利用 UUID 来生成

123
00:04:33,906 --> 00:04:35,406
暂时的身份标识符

124
00:04:35,906 --> 00:04:38,396
例如  你可以把你的 App 

125
00:04:38,396 --> 00:04:41,176
的每次会话关联上

126
00:04:41,176 --> 00:04:43,056
一个新的 UUID

127
00:04:43,056 --> 00:04:45,606
另一个例子是

128
00:04:45,606 --> 00:04:46,206
供应商标识符

129
00:04:46,206 --> 00:04:48,736
这是一个更稳定的标识符

130
00:04:49,196 --> 00:04:51,456
因为它在与同一团队

131
00:04:51,456 --> 00:04:53,556
所关联的所有 App 中

132
00:04:53,726 --> 00:04:54,366
都是一致的

133
00:04:54,936 --> 00:04:57,416
如你在这个示例表格中

134
00:04:57,416 --> 00:05:00,516
看到的

135
00:04:57,416 --> 00:05:00,516
看到的

136
00:05:00,516 --> 00:05:02,236
两个属于同一个团队的 App 

137
00:05:02,236 --> 00:05:04,316
将生成同样的

138
00:05:04,316 --> 00:05:07,016
供应商标识符  而第三个

139
00:05:07,726 --> 00:05:08,956
属于不同的团队

140
00:05:09,256 --> 00:05:10,056
将有它自己的标识符

141
00:05:11,166 --> 00:05:14,336
同时请记住

142
00:05:14,476 --> 00:05:16,236
所有属于一个团队的 App 

143
00:05:16,236 --> 00:05:18,186
如果被用户卸载

144
00:05:18,186 --> 00:05:19,896
之后重新安装

145
00:05:19,896 --> 00:05:22,466
它们将会获得一个新的

146
00:05:22,466 --> 00:05:22,996
标识符

147
00:05:22,996 --> 00:05:26,636
现在  让我们谈谈通过收集数据

148
00:05:26,986 --> 00:05:28,926
来启用你的功能

149
00:05:29,766 --> 00:05:31,666
收集数据可以带来好处

150
00:05:31,666 --> 00:05:34,056
但同时也携带风险

151
00:05:35,176 --> 00:05:38,976
因此用户可能不愿意

152
00:05:39,856 --> 00:05:41,986
透漏太多的数据

153
00:05:41,986 --> 00:05:43,476
如果你不能充分的说明

154
00:05:43,476 --> 00:05:44,296
你的用途

155
00:05:44,996 --> 00:05:47,146
同时  请考虑管理所有数据

156
00:05:47,146 --> 00:05:49,846
并保护数据安全

157
00:05:50,036 --> 00:05:51,656
的负担

158
00:05:51,906 --> 00:05:53,266
所以你应该考虑

159
00:05:53,736 --> 00:05:55,866
聚合数并整理

160
00:05:55,866 --> 00:05:55,956
数据

161
00:05:56,306 --> 00:05:57,426
此外  请仅提取

162
00:05:57,426 --> 00:05:59,126
你需要的信息

163
00:05:59,686 --> 00:06:02,216
作为替代方式

164
00:05:59,686 --> 00:06:02,216
作为替代方式

165
00:06:02,216 --> 00:06:03,856
请考虑是否一个数据样本就足够了

166
00:06:03,856 --> 00:06:06,926
或者你是否可以

167
00:06:08,166 --> 00:06:09,576
在设备上处理数据

168
00:06:10,526 --> 00:06:12,006
而不将它们的值

169
00:06:12,006 --> 00:06:13,546
发送到你的服务器

170
00:06:14,406 --> 00:06:16,056
接下来  你将听到

171
00:06:16,056 --> 00:06:17,656
一些很好的新方式

172
00:06:18,026 --> 00:06:20,426
来通过使用 iOS 硬件和软件

173
00:06:20,476 --> 00:06:23,966
在设备上处理数据

174
00:06:24,046 --> 00:06:25,966
收集原始数据可能会泄露

175
00:06:26,386 --> 00:06:27,756
用户额外的

176
00:06:27,756 --> 00:06:28,356
信息

177
00:06:28,766 --> 00:06:30,526
正如之前所提到的

178
00:06:30,526 --> 00:06:32,526
你的用户

179
00:06:32,526 --> 00:06:34,266
和你都不想

180
00:06:34,266 --> 00:06:34,546
这些信息存在

181
00:06:34,676 --> 00:06:36,786
比如你的 App

182
00:06:37,246 --> 00:06:39,036
有了一项新功能

183
00:06:39,036 --> 00:06:40,236
而你需要收集反馈信息

184
00:06:40,236 --> 00:06:41,706
来观察它是否成功

185
00:06:42,356 --> 00:06:44,766
所以  你可以使你的 App

186
00:06:44,766 --> 00:06:47,576
在每次用户使用新功能时

187
00:06:47,576 --> 00:06:49,636
发回一个

188
00:06:49,636 --> 00:06:50,656
时间戳

189
00:06:51,626 --> 00:06:53,726
然后你的 App

190
00:06:53,726 --> 00:06:54,886
就会给你发送你想要的信息

191
00:06:55,206 --> 00:06:56,966
但是如果你想要通过数据

192
00:06:57,046 --> 00:06:59,146
画出一个时间线图

193
00:06:59,146 --> 00:07:01,316
你将知道用户 1

194
00:06:59,146 --> 00:07:01,316
你将知道用户 1

195
00:07:01,316 --> 00:07:03,376
是一个在上午活跃的人

196
00:07:03,376 --> 00:07:04,776
因为他的所有时间戳

197
00:07:04,776 --> 00:07:05,206
都是在早上

198
00:07:05,586 --> 00:07:07,656
而用户 3 则在晚上

199
00:07:07,696 --> 00:07:07,936
才使用你的 App

200
00:07:09,276 --> 00:07:11,656
另外一种

201
00:07:11,656 --> 00:07:12,976
收集信息的方式是

202
00:07:12,976 --> 00:07:15,996
让我的 App

203
00:07:16,666 --> 00:07:19,536
计算一个特定的用户

204
00:07:19,536 --> 00:07:21,236
使用我新功能的全部时间

205
00:07:21,326 --> 00:07:23,186
然后一天一次的

206
00:07:23,226 --> 00:07:24,876
发送回我的服务器

207
00:07:26,026 --> 00:07:28,136
这种方式同样可以获得

208
00:07:28,196 --> 00:07:30,366
关于新功能信息

209
00:07:30,366 --> 00:07:31,586
但无论是否成功

210
00:07:32,246 --> 00:07:34,046
它都更保护用户的隐私

211
00:07:34,896 --> 00:07:36,426
但是如果你注意的话

212
00:07:36,426 --> 00:07:37,996
你可能会意识到

213
00:07:37,996 --> 00:07:40,956
用户 1 在你所有的用户中

214
00:07:40,956 --> 00:07:44,386
最喜欢你的功能

215
00:07:44,816 --> 00:07:46,416
但这不是你想要

216
00:07:46,416 --> 00:07:47,296
知道的事情

217
00:07:48,236 --> 00:07:50,436
如果你重新阐述这个问题为

218
00:07:50,726 --> 00:07:53,506
多少用户每天使用我的功能

219
00:07:53,606 --> 00:07:55,336
超过 10 次

220
00:07:55,336 --> 00:07:57,386
你可以让你的 App

221
00:07:57,876 --> 00:07:59,236
发回一个布尔旗标

222
00:07:59,236 --> 00:08:02,076
到你的服务器

223
00:07:59,236 --> 00:08:02,076
到你的服务器

224
00:08:02,076 --> 00:08:03,706
来指示这个用户

225
00:08:03,706 --> 00:08:04,746
是否超过了一天的阈值

226
00:08:06,056 --> 00:08:08,056
在你的端口 在服务器上

227
00:08:08,456 --> 00:08:10,476
你可以计算

228
00:08:10,476 --> 00:08:12,206
超过阈值用户

229
00:08:12,206 --> 00:08:13,716
的百分比

230
00:08:13,716 --> 00:08:15,866
在这个例子中是 66%

231
00:08:16,706 --> 00:08:18,396
请把这个百分比记录在

232
00:08:18,396 --> 00:08:18,846
你的服务器上

233
00:08:19,196 --> 00:08:20,506
随着时间变化追踪它

234
00:08:20,506 --> 00:08:22,476
来了解你的功能表现如何

235
00:08:22,526 --> 00:08:26,596
并抛弃任何

236
00:08:26,596 --> 00:08:29,576
用户的特定数据

237
00:08:29,756 --> 00:08:31,516
现在让我们来了解一些更新

238
00:08:31,516 --> 00:08:33,746
这可能会影响到

239
00:08:33,926 --> 00:08:34,176
你的 App

240
00:08:35,186 --> 00:08:37,385
我之前提到过

241
00:08:37,515 --> 00:08:39,736
当 App 需要使用用户数据时

242
00:08:40,346 --> 00:08:43,126
iOS 将会请求

243
00:08:43,126 --> 00:08:43,616
用户许可

244
00:08:44,656 --> 00:08:46,216
许多情况下

245
00:08:46,216 --> 00:08:48,946
我们认为用户需要

246
00:08:48,946 --> 00:08:50,956
尽可能多的信息

247
00:08:51,036 --> 00:08:51,656
来做出决定

248
00:08:52,466 --> 00:08:55,056
而你的 App 有责任

249
00:08:55,056 --> 00:08:56,146
提供这些额外的

250
00:08:56,176 --> 00:08:56,706
信息

251
00:08:57,646 --> 00:08:59,316
这些额外的信息

252
00:08:59,316 --> 00:09:00,646
使用目的字符串的形式

253
00:08:59,316 --> 00:09:00,646
使用目的字符串的形式

254
00:09:00,926 --> 00:09:01,936
而这些目的字符串

255
00:09:01,936 --> 00:09:03,966
包含在 iOS 提供给用户的

256
00:09:03,966 --> 00:09:05,216
提示中

257
00:09:06,116 --> 00:09:07,456
目的字符串作为 Key

258
00:09:07,616 --> 00:09:10,046
定义在你的 App 下的

259
00:09:10,046 --> 00:09:10,456
info.plist 文件中

260
00:09:12,016 --> 00:09:15,116
你可以在 Xcode 中定义这些 Key

261
00:09:15,116 --> 00:09:15,976
像这样

262
00:09:16,526 --> 00:09:20,066
需要记住这些 Key 是

263
00:09:20,396 --> 00:09:21,106
强制性的

264
00:09:21,766 --> 00:09:24,466
所以  如果你的 App 缺少一个目的字符串

265
00:09:24,526 --> 00:09:26,186
并试图访问相关数据

266
00:09:26,186 --> 00:09:29,586
它将终断程序

267
00:09:29,586 --> 00:09:31,686
并返回一个错误信息

268
00:09:31,686 --> 00:09:33,816
提示某个 Key 缺失

269
00:09:34,396 --> 00:09:38,076
在 iOS 10 中的这些情况下

270
00:09:38,076 --> 00:09:39,026
目的字符串是

271
00:09:39,026 --> 00:09:39,456
必填的

272
00:09:40,426 --> 00:09:42,956
而在 iOS 11 中

273
00:09:42,956 --> 00:09:46,196
我们将对位置和图片做出改变

274
00:09:46,196 --> 00:09:47,406
同时我们为 CoreNFC 添加了

275
00:09:47,496 --> 00:09:49,166
一个目的字符串

276
00:09:50,456 --> 00:09:54,026
CoreLocation 为你的 App

277
00:09:54,126 --> 00:09:55,296
开启了很好的功能

278
00:09:55,876 --> 00:09:59,706
用户希望能够通过他们的 iOS 设备

279
00:09:59,706 --> 00:10:03,706
探索这个世界

280
00:09:59,706 --> 00:10:03,706
探索这个世界

281
00:10:03,706 --> 00:10:05,566
并发现有趣的

282
00:10:05,606 --> 00:10:06,436
地方

283
00:10:07,076 --> 00:10:10,296
同时  我们想要用户

284
00:10:10,296 --> 00:10:12,076
总是对他们的隐私

285
00:10:12,076 --> 00:10:12,556
掌握控制权

286
00:10:13,636 --> 00:10:18,346
所以在 iOS 10 中

287
00:10:18,546 --> 00:10:20,456
App 可以请求在任何时候

288
00:10:20,456 --> 00:10:22,986
或者在 App 运行时

289
00:10:22,986 --> 00:10:24,146
获得用户的位置信息

290
00:10:24,836 --> 00:10:29,526
在 iOS 11 中  用户将能够

291
00:10:29,576 --> 00:10:32,486
随时选择什么时间来使用

292
00:10:32,486 --> 00:10:33,156
这个选择

293
00:10:34,516 --> 00:10:41,236
[掌声]

294
00:10:41,736 --> 00:10:43,246
这对你来说意味着

295
00:10:44,276 --> 00:10:47,006
你的 App 将不得不考虑到

296
00:10:47,126 --> 00:10:49,076
当用户的位置信息

297
00:10:49,076 --> 00:10:51,116
对你来说不可用

298
00:10:51,116 --> 00:10:51,276
的情况

299
00:10:51,716 --> 00:10:52,926
而你需要

300
00:10:52,976 --> 00:10:54,556
额外的目的字符串

301
00:10:54,556 --> 00:10:55,466
来定义何时提供选项

302
00:10:56,696 --> 00:10:59,306
作为提醒  当请求获得用户信息时

303
00:10:59,306 --> 00:11:01,226
确保你的做法

304
00:10:59,306 --> 00:11:01,226
确保你的做法

305
00:11:01,226 --> 00:11:02,446
是有意义的

306
00:11:03,306 --> 00:11:06,106
确保你的提示

307
00:11:06,106 --> 00:11:07,416
在用户使用这个

308
00:11:07,506 --> 00:11:08,566
需要位置信息的功能之后弹出

309
00:11:08,566 --> 00:11:10,796
这样他们就能够理解

310
00:11:10,796 --> 00:11:11,626
为什么他们被请求获得

311
00:11:11,626 --> 00:11:12,126
定位信息

312
00:11:13,106 --> 00:11:14,406
当你发送提示时

313
00:11:14,406 --> 00:11:16,546
确保你的目的字符串提供了

314
00:11:16,546 --> 00:11:18,406
必要的信息

315
00:11:18,406 --> 00:11:20,436
以供用户做出正确的选择

316
00:11:21,406 --> 00:11:24,336
可能的话  请试着在用户

317
00:11:24,576 --> 00:11:26,776
体验过一段时间你的功能之后

318
00:11:26,776 --> 00:11:29,126
从“使用期间”

319
00:11:29,126 --> 00:11:31,586
逐渐升级到“始终”

320
00:11:32,126 --> 00:11:36,996
如果你的 iOS 10 App

321
00:11:37,076 --> 00:11:39,416
不支持“使用期间”

322
00:11:39,416 --> 00:11:41,546
的选项

323
00:11:41,546 --> 00:11:43,986
这就是当用户升级到 iOS 11 之后

324
00:11:43,986 --> 00:11:45,566
会看到的提示

325
00:11:46,366 --> 00:11:48,526
如你所见  他们可以选择

326
00:11:48,526 --> 00:11:50,656
“使用期间”的选项

327
00:11:50,656 --> 00:11:51,966
但是这里有一个

328
00:11:51,966 --> 00:11:54,526
App 可能不会支持的警告

329
00:11:57,376 --> 00:11:59,556
如果你的 iOS 10 App

330
00:11:59,866 --> 00:12:01,996
同时支持“使用期间”

331
00:11:59,866 --> 00:12:01,996
同时支持“使用期间”

332
00:12:01,996 --> 00:12:03,876
和“始终”选项

333
00:12:04,486 --> 00:12:05,946
这就是你会看到的提示

334
00:12:06,636 --> 00:12:08,236
两个目的字符串将会

335
00:12:08,236 --> 00:12:09,886
包括在提示中

336
00:12:09,886 --> 00:12:10,346
并展示给用户

337
00:12:11,196 --> 00:12:12,886
你应将你的 App 升级到

338
00:12:12,956 --> 00:12:14,336
支持单个目的字符串的功能

339
00:12:14,746 --> 00:12:17,696
你可以通过在你的 info.pflist 文件中

340
00:12:17,696 --> 00:12:19,946
定义一个单独的 Key

341
00:12:20,156 --> 00:12:20,506
来实现

342
00:12:20,636 --> 00:12:22,576
那就是“始终”

343
00:12:22,696 --> 00:12:24,936
和“使用期间” Key

344
00:12:25,176 --> 00:12:27,106
现在 让我们来谈谈照

345
00:12:28,176 --> 00:12:29,366
用户的照片库

346
00:12:29,656 --> 00:12:30,986
包含了很多信息

347
00:12:31,586 --> 00:12:33,976
我们希望你能

348
00:12:33,976 --> 00:12:35,506
利用这些信息

349
00:12:35,506 --> 00:12:36,516
来提供很好的功能

350
00:12:37,456 --> 00:12:38,716
同时  我们希望

351
00:12:38,716 --> 00:12:40,266
能够高度保护

352
00:12:40,306 --> 00:12:40,796
用户的隐私

353
00:12:41,386 --> 00:12:43,816
所以  今年我们将为你的 App 添加

354
00:12:43,816 --> 00:12:46,076
两个新方式

355
00:12:46,076 --> 00:12:47,526
来与照片库

356
00:12:47,526 --> 00:12:47,976
交互

357
00:12:49,066 --> 00:12:51,356
尤其是  用户将能够

358
00:12:51,356 --> 00:12:53,986
在你的 App 中打开一张照片

359
00:12:54,256 --> 00:12:55,516
而不需要你请求

360
00:12:55,516 --> 00:12:57,296
接入他们的

361
00:12:57,296 --> 00:12:59,116
整个照片库

362
00:12:59,546 --> 00:13:02,956
这样会让他们在使用你的 App 时

363
00:12:59,546 --> 00:13:02,956
这样会让他们在使用你的 App 时

364
00:13:02,956 --> 00:13:04,706
感到更加舒适

365
00:13:05,326 --> 00:13:06,886
因为他们对自己的数据

366
00:13:06,886 --> 00:13:08,406
有了更好的控制

367
00:13:09,526 --> 00:13:12,456
我们同时在照片库中

368
00:13:12,606 --> 00:13:14,476
添加了一个只准写入许可

369
00:13:15,286 --> 00:13:16,916
例如  如果这里

370
00:13:16,916 --> 00:13:18,376
有一个游戏想要保存

371
00:13:18,376 --> 00:13:20,016
用户成就的屏幕快照

372
00:13:20,016 --> 00:13:22,236
他可以提示

373
00:13:22,236 --> 00:13:24,906
请求写入照片库而不是读取

374
00:13:24,906 --> 00:13:25,736
照片库

375
00:13:26,496 --> 00:13:28,456
而用户可能更愿意许可

376
00:13:28,456 --> 00:13:29,566
这个请求

377
00:13:30,986 --> 00:13:32,176
由于这些变化

378
00:13:32,926 --> 00:13:37,136
当用户升级他们的设备到

379
00:13:37,416 --> 00:13:39,916
iOS 11 时  已安装的 App 将

380
00:13:39,916 --> 00:13:41,966
重新请求接入

381
00:13:41,966 --> 00:13:42,646
照片库

382
00:13:43,386 --> 00:13:44,376
如果你想要你的用户

383
00:13:44,376 --> 00:13:46,506
能够充分利用这个功能

384
00:13:46,506 --> 00:13:48,896
以在你的 App 中打开照片

385
00:13:48,896 --> 00:13:52,336
而不需要提示

386
00:13:52,336 --> 00:13:54,246
你可以采用已添加的 Image Picker 过程

387
00:13:54,416 --> 00:13:56,376
若要获得更多信息

388
00:13:56,376 --> 00:13:58,496
请访问

389
00:13:58,496 --> 00:13:58,906
关于照片的会议

390
00:13:59,326 --> 00:14:03,576
这是一个很好的方式

391
00:13:59,326 --> 00:14:03,576
这是一个很好的方式

392
00:14:03,666 --> 00:14:06,476
向用户资料添加照片

393
00:14:06,856 --> 00:14:08,016
或者让你的 App 在极少数情况下

394
00:14:08,016 --> 00:14:08,816
使用照片

395
00:14:08,916 --> 00:14:11,956
现在  这里是一个只准写入的

396
00:14:11,956 --> 00:14:12,366
例子

397
00:14:13,846 --> 00:14:15,556
这里有一个提示和一个

398
00:14:15,556 --> 00:14:15,826
目的字符串

399
00:14:15,936 --> 00:14:17,776
所以  如果你想要采用这种方法

400
00:14:17,926 --> 00:14:18,896
你需要声明目的字符串

401
00:14:18,896 --> 00:14:22,266
并确保你给用户提供了

402
00:14:23,106 --> 00:14:24,756
足够的信息

403
00:14:24,756 --> 00:14:27,216
以供他们决定是否使用

404
00:14:27,376 --> 00:14:28,186
这项功能

405
00:14:28,186 --> 00:14:31,516
现在  让我们来谈谈 CoreNFC

406
00:14:32,186 --> 00:14:34,196
CoreNFC 是一个新的令人激动的

407
00:14:34,436 --> 00:14:36,876
iOS 11 框架

408
00:14:36,876 --> 00:14:39,646
它允许你的 App 使用 NFC Reader 模式

409
00:14:40,136 --> 00:14:42,536
来和附近的 NFC Tag

410
00:14:42,636 --> 00:14:42,886
进行交互

411
00:14:43,576 --> 00:14:45,576
所以  现在你可以在你的 App 中

412
00:14:45,576 --> 00:14:47,366
以一种新奇而有趣的方式

413
00:14:47,366 --> 00:14:48,306
使用 NFC tag 了

414
00:14:48,836 --> 00:14:52,306
为了使用 CoreNFC 你需要

415
00:14:52,306 --> 00:14:54,116
声明相应的目的字符串

416
00:14:54,116 --> 00:14:55,926
并提供必要的

417
00:14:55,926 --> 00:14:56,916
信息

418
00:14:57,716 --> 00:14:59,776
这个目的字符串将会包括在提示中

419
00:14:59,776 --> 00:15:01,386
并在每次你的 App

420
00:14:59,776 --> 00:15:01,386
并在每次你的 App

421
00:15:01,386 --> 00:15:03,826
调用 CoreNFC 时

422
00:15:04,186 --> 00:15:05,276
提示用户

423
00:15:05,276 --> 00:15:08,536
现在  让我们来谈一谈 Apple Watch

424
00:15:09,636 --> 00:15:10,876
我们希望你的 App 能够

425
00:15:10,876 --> 00:15:12,136
更多地和 Apple Watch 互动

426
00:15:12,546 --> 00:15:15,126
所以  今年我们将扩展

427
00:15:15,426 --> 00:15:16,496
话筒的使用

428
00:15:17,636 --> 00:15:21,466
现在  在 iOS 10 中

429
00:15:21,466 --> 00:15:24,036
你的 App 能够请求话筒接入

430
00:15:24,156 --> 00:15:26,136
在得到用户许可之后

431
00:15:26,136 --> 00:15:28,756
它可以开始在前台 

432
00:15:28,756 --> 00:15:29,536
记录音频

433
00:15:30,376 --> 00:15:32,736
在新版的 watchOS 中

434
00:15:32,736 --> 00:15:34,886
你可以在后台

435
00:15:35,336 --> 00:15:36,296
保持录音

436
00:15:37,046 --> 00:15:37,986
如果你停留在前台

437
00:15:38,046 --> 00:15:40,536
你将可以使用

438
00:15:40,806 --> 00:15:43,116
一个新的 API 来记录音频

439
00:15:43,406 --> 00:15:47,706
而不展示内建 UI

440
00:15:47,886 --> 00:15:49,436
因为我们想要用户总是

441
00:15:49,436 --> 00:15:51,056
意识到他们的话筒是激活的

442
00:15:51,056 --> 00:15:53,646
如果你的 App 在后台

443
00:15:53,646 --> 00:15:55,356
在 Apple Watch 的表盘

444
00:15:55,356 --> 00:15:56,856
将会有一个指示器

445
00:15:57,046 --> 00:15:58,826
而如果用户点按指示器

446
00:15:58,826 --> 00:16:00,796
你的 App 将会回到

447
00:15:58,826 --> 00:16:00,796
你的 App 将会回到

448
00:16:00,796 --> 00:16:01,286
前台

449
00:16:01,866 --> 00:16:04,886
让我们来谈一谈“音乐”

450
00:16:06,496 --> 00:16:09,576
我们希望你的 App 能够

451
00:16:09,576 --> 00:16:11,396
利用“音乐”

452
00:16:11,396 --> 00:16:12,956
并创造很棒的功能

453
00:16:14,026 --> 00:16:16,936
所以  一部分经验是

454
00:16:17,456 --> 00:16:19,826
通过一种平滑的方式

455
00:16:19,826 --> 00:16:21,746
来验证用户

456
00:16:21,746 --> 00:16:22,806
同时尊重他们的隐私

457
00:16:23,436 --> 00:16:24,786
例如  如果一个 App

458
00:16:24,786 --> 00:16:26,536
询问用户“音乐”的密码

459
00:16:26,686 --> 00:16:28,486
那将会是

460
00:16:28,486 --> 00:16:29,376
一个隐私问题

461
00:16:30,756 --> 00:16:33,676
相反 App 应该利用

462
00:16:33,676 --> 00:16:35,106
用户已经在 iOS 的

463
00:16:35,106 --> 00:16:37,326
Music 上登陆的

464
00:16:37,326 --> 00:16:37,776
事实

465
00:16:38,326 --> 00:16:43,906
iOS 有一个内置的调解机制

466
00:16:43,906 --> 00:16:46,336
来给予你的 App 令牌

467
00:16:46,376 --> 00:16:48,376
来接入“音乐”

468
00:16:49,386 --> 00:16:51,546
在用户许可之后

469
00:16:51,546 --> 00:16:53,606
你将会得到令牌

470
00:16:53,606 --> 00:16:58,756
并使用它访问输出 API

471
00:16:59,656 --> 00:17:02,636
来取得私人的

472
00:16:59,656 --> 00:17:02,636
来取得私人的

473
00:17:02,636 --> 00:17:04,116
或者非私人的信息

474
00:17:04,486 --> 00:17:07,215
例如  搜索 iTunes 目录

475
00:17:07,215 --> 00:17:09,715
或者取得关于

476
00:17:09,715 --> 00:17:10,846
用户资料库的信息

477
00:17:11,336 --> 00:17:14,556
请记住  因为你能够控制

478
00:17:14,556 --> 00:17:17,286
哪一个 App 能得到这个令牌

479
00:17:17,286 --> 00:17:21,006
请在目的字符串中向用户提供

480
00:17:21,006 --> 00:17:22,526
足够的解释

481
00:17:22,596 --> 00:17:23,766
让他们明白

482
00:17:23,766 --> 00:17:25,586
你将会如何

483
00:17:25,586 --> 00:17:26,685
利用它

484
00:17:28,126 --> 00:17:29,676
现在  让我们来谈谈

485
00:17:29,676 --> 00:17:30,136
Safari Controller

486
00:17:30,816 --> 00:17:32,766
Safari Controller 是一个很棒的方式

487
00:17:32,856 --> 00:17:34,246
来让用户在你的 App 上

488
00:17:34,246 --> 00:17:34,976
浏览网页

489
00:17:36,116 --> 00:17:39,986
在 iOS 10 中

490
00:17:40,296 --> 00:17:42,616
Safari 的 Cookies 以及网站数据

491
00:17:42,646 --> 00:17:44,086
都可以在 SVC 实例中使用

492
00:17:44,166 --> 00:17:46,086
我们曾经考虑 Safari 对您的 App 中

493
00:17:46,486 --> 00:17:47,236
实例的影响

494
00:17:48,286 --> 00:17:49,446
这将会改变

495
00:17:50,386 --> 00:17:52,996
现在  在 iOS 11 中

496
00:17:52,996 --> 00:17:56,566
用户将能够在你的 App 中

497
00:17:56,566 --> 00:17:57,826
使用帐号登陆网站

498
00:17:58,416 --> 00:18:00,016
而如果他们愿意的话

499
00:17:58,416 --> 00:18:00,016
而如果他们愿意的话

500
00:18:00,016 --> 00:18:01,806
可以使用一个不同的帐号

501
00:18:01,806 --> 00:18:03,466
在 Safari 或者其他的 App 中

502
00:18:03,796 --> 00:18:04,626
登陆同样的网站

503
00:18:05,936 --> 00:18:07,456
我们认为这将提供给用户

504
00:18:07,456 --> 00:18:08,196
更多的控制权

505
00:18:08,966 --> 00:18:10,486
具体而言  这意味着

506
00:18:10,486 --> 00:18:12,806
在 Safari 中

507
00:18:12,806 --> 00:18:14,846
你需要考虑使用实例

508
00:18:14,846 --> 00:18:17,496
这将使得 Cookies 和其他的网页数据的储存

509
00:18:17,716 --> 00:18:18,736
分隔开来

510
00:18:19,816 --> 00:18:21,186
而这对你和你的用户来说

511
00:18:21,186 --> 00:18:22,866
意味着他们仍然能够

512
00:18:22,866 --> 00:18:24,936
像从前一样

513
00:18:24,986 --> 00:18:26,496
在你的 App 中浏览网页

514
00:18:26,496 --> 00:18:29,476
但是他们可能在访问一些

515
00:18:29,476 --> 00:18:31,336
曾经访问过的网站时

516
00:18:31,416 --> 00:18:32,446
需要重新登录

517
00:18:34,596 --> 00:18:36,486
这就是它看上去的样子

518
00:18:37,016 --> 00:18:39,276
例如  我在 Safari 中

519
00:18:39,346 --> 00:18:41,566
有 Apple.com 的 Cookies 

520
00:18:41,566 --> 00:18:44,006
而我在你的 App 中有不同的

521
00:18:44,276 --> 00:18:44,416
Cookies 

522
00:18:45,436 --> 00:18:48,226
所以  以上就是更新的总结

523
00:18:48,586 --> 00:18:50,246
现在  我想

524
00:18:50,246 --> 00:18:52,146
邀请 Katie 来到台上

525
00:18:52,146 --> 00:18:53,716
来告诉你一些 Apple 今年发布的

526
00:18:53,716 --> 00:18:55,546
全新的  令人激动的

527
00:18:55,546 --> 00:18:56,266
隐私新功能

528
00:18:56,936 --> 00:18:57,206
Katie

529
00:18:58,516 --> 00:19:02,626
[掌声]

530
00:18:58,516 --> 00:19:02,626
[掌声]

531
00:19:03,126 --> 00:19:04,186
&gt;&gt; 谢谢 Georgios

532
00:19:05,486 --> 00:19:06,656
现在  我要集中介绍一些

533
00:19:06,656 --> 00:19:08,756
新的隐私功能

534
00:19:08,756 --> 00:19:09,906
并提供一点针对

535
00:19:09,906 --> 00:19:11,736
去年我们介绍的差别隐私

536
00:19:11,736 --> 00:19:12,826
的更新

537
00:19:12,826 --> 00:19:15,026
我准备从设备上处理

538
00:19:15,026 --> 00:19:16,126
开始介绍

539
00:19:16,886 --> 00:19:18,516
现在  设备上处理

540
00:19:18,516 --> 00:19:19,916
有很多的优点

541
00:19:20,056 --> 00:19:21,456
其中之一就是

542
00:19:21,456 --> 00:19:23,696
它能够从功能上

543
00:19:23,696 --> 00:19:25,586
在任何你的用户所在的地方运行

544
00:19:26,056 --> 00:19:27,136
无论他们是在海滩

545
00:19:27,206 --> 00:19:29,326
像这样  或者在一架飞机上

546
00:19:29,326 --> 00:19:31,706
甚至在蜂窝数据信号

547
00:19:31,706 --> 00:19:33,226
不好的地方

548
00:19:34,496 --> 00:19:36,636
它同时避免了网络延迟

549
00:19:36,636 --> 00:19:38,986
由于它取决于你的用户的位置

550
00:19:38,986 --> 00:19:41,186
这可能比你想要完成的

551
00:19:41,186 --> 00:19:42,786
实际处理过程

552
00:19:42,786 --> 00:19:43,836
花费更长的时间

553
00:19:44,376 --> 00:19:47,126
我们设备的速度

554
00:19:47,316 --> 00:19:49,506
我们的 iPhone 和 iPad

555
00:19:49,506 --> 00:19:51,256
它的性能变得越来越强大

556
00:19:52,526 --> 00:19:56,916
iPhone 7 的处理能力

557
00:19:56,916 --> 00:19:58,916
比最初的 iPhone 提高了

558
00:19:58,916 --> 00:19:59,336
120 倍

559
00:20:00,746 --> 00:20:03,046
所以  想想那些你曾经认为

560
00:20:03,046 --> 00:20:04,566
不可能在设备上完成的

561
00:20:04,566 --> 00:20:06,986
不同的任务

562
00:20:06,986 --> 00:20:07,876
你现在应该重新考虑一下了

563
00:20:08,416 --> 00:20:11,136
现在  由于这个会议的主题是“隐私”

564
00:20:11,136 --> 00:20:12,776
我准备谈论一些

565
00:20:12,776 --> 00:20:13,856
设备上处理

566
00:20:13,966 --> 00:20:16,166
在隐私方面上的

567
00:20:16,166 --> 00:20:17,116
好处

568
00:20:17,116 --> 00:20:20,636
其中第一个是能够访问

569
00:20:20,636 --> 00:20:21,256
用户数据

570
00:20:21,846 --> 00:20:23,546
设备上有许多

571
00:20:23,546 --> 00:20:24,896
不同类型的

572
00:20:24,896 --> 00:20:25,356
敏感数据

573
00:20:26,016 --> 00:20:27,226
当你对用户解释清楚

574
00:20:27,226 --> 00:20:29,556
你准备怎样使用他们的数据时

575
00:20:29,556 --> 00:20:32,626
举个例子

576
00:20:32,626 --> 00:20:34,486
如果你告诉你的用户

577
00:20:34,486 --> 00:20:36,656
你放上一个漂亮的光环  或者一个过滤器

578
00:20:36,656 --> 00:20:38,896
那么你打算使用的照片

579
00:20:38,896 --> 00:20:40,916
将会停留在他们的设备上

580
00:20:40,916 --> 00:20:43,446
直到他们选择

581
00:20:43,446 --> 00:20:45,276
分享给其他的用户

582
00:20:45,276 --> 00:20:46,566
或者备份给你

583
00:20:47,616 --> 00:20:49,046
那么用户将会

584
00:20:49,046 --> 00:20:51,396
更愿意给予你

585
00:20:51,396 --> 00:20:52,476
访问他们数据的许可

586
00:20:52,726 --> 00:20:54,216
并为此感到更加的

587
00:20:55,476 --> 00:20:55,596
舒适

588
00:20:55,976 --> 00:20:57,536
在设备上  你也可以

589
00:20:57,536 --> 00:20:59,316
利用各种不同的

590
00:20:59,356 --> 00:21:01,426
集成在我们平台上的

591
00:20:59,356 --> 00:21:01,426
集成在我们平台上的

592
00:21:01,426 --> 00:21:02,596
安全功能

593
00:21:03,756 --> 00:21:05,566
这些功能类似数据保护

594
00:21:05,566 --> 00:21:08,196
就像一个钥匙串

595
00:21:08,196 --> 00:21:10,736
允许你更安全的

596
00:21:10,736 --> 00:21:12,926
使用用户数据

597
00:21:12,926 --> 00:21:14,456
而不需要自己去考虑它

598
00:21:14,456 --> 00:21:17,796
在过去的开发者大会上

599
00:21:18,186 --> 00:21:19,736
有很多的优秀资源

600
00:21:19,736 --> 00:21:22,026
供你去学习这些

601
00:21:22,026 --> 00:21:23,026
安全功能

602
00:21:23,586 --> 00:21:25,106
我会建议你

603
00:21:25,106 --> 00:21:27,076
去查看 

604
00:21:27,076 --> 00:21:27,786
“Proteting Sevrets With The Keychain（使用钥匙串保护秘密）”

605
00:21:27,846 --> 00:21:29,206
这是一个很好的入门视频

606
00:21:30,866 --> 00:21:33,036
现在  当你在设备上

607
00:21:33,036 --> 00:21:34,976
使用并保存数据时

608
00:21:34,976 --> 00:21:36,516
这意味着你不必写代码

609
00:21:36,676 --> 00:21:39,786
来把数据发送到

610
00:21:39,786 --> 00:21:40,326
你的服务器

611
00:21:41,396 --> 00:21:43,306
你不必写代码

612
00:21:43,306 --> 00:21:45,916
来管理并确保

613
00:21:45,916 --> 00:21:47,946
在你的服务器上的数据

614
00:21:47,946 --> 00:21:48,456
是安全的

615
00:21:49,286 --> 00:21:51,786
现在你需要写的代码

616
00:21:51,786 --> 00:21:54,086
变得更少

617
00:21:54,196 --> 00:21:54,846
这意味着更少的 Bug

618
00:21:55,366 --> 00:21:58,116
而更少的 Bug 意味着

619
00:21:58,116 --> 00:21:59,336
攻击者能够利用的 Bug 也

620
00:21:59,336 --> 00:22:00,086
变少了

621
00:21:59,336 --> 00:22:00,086
变少了

622
00:22:00,826 --> 00:22:02,776
因为数据破坏是

623
00:22:02,836 --> 00:22:03,226
非常严重的事情

624
00:22:03,226 --> 00:22:04,056
它会造成很多的

625
00:22:04,056 --> 00:22:05,096
后果

626
00:22:05,496 --> 00:22:07,436
而这些后果之一是

627
00:22:07,436 --> 00:22:09,346
失去用户的信任

628
00:22:10,916 --> 00:22:13,416
现在  这些技术同样可以

629
00:22:13,596 --> 00:22:15,566
帮助你避免那样的情况

630
00:22:15,566 --> 00:22:18,876
接下来  我将要介绍四个

631
00:22:19,016 --> 00:22:21,736
新的框架

632
00:22:21,736 --> 00:22:24,376
它们允许你在设备上执行一些

633
00:22:24,376 --> 00:22:24,826
常见的任务

634
00:22:25,546 --> 00:22:27,436
现在  任何在你的 App 内

635
00:22:27,436 --> 00:22:29,926
执行的处理操作

636
00:22:29,926 --> 00:22:30,956
你都可以只在设备上完成

637
00:22:31,516 --> 00:22:32,666
但是这里有四个框架

638
00:22:32,716 --> 00:22:33,656
可以让它更加容易

639
00:22:34,316 --> 00:22:36,536
第一个是 CoreML

640
00:22:36,536 --> 00:22:37,336
Core Machine Learning（Core 机器学习）

641
00:22:38,136 --> 00:22:40,296
现在  它允许你使用简单的交互

642
00:22:40,376 --> 00:22:42,216
来加载并运行

643
00:22:42,366 --> 00:22:43,306
预训练模型

644
00:22:44,096 --> 00:22:44,976
这里有许多它支持的

645
00:22:44,976 --> 00:22:47,246
不同的模型

646
00:22:47,246 --> 00:22:48,396
比如  神经网络

647
00:22:48,696 --> 00:22:50,836
第二个我准备介绍的框架

648
00:22:50,836 --> 00:22:52,106
叫做 VisionKit

649
00:22:53,346 --> 00:22:54,756
现在 VisionKit 允许你在一张照片上

650
00:22:54,756 --> 00:22:58,286
识别出面部

651
00:22:58,286 --> 00:23:00,216
并同样能够根据

652
00:22:58,286 --> 00:23:00,216
并同样能够根据

653
00:23:01,156 --> 00:23:03,966
场景和时间的不同

654
00:23:03,966 --> 00:23:05,276
进行场景分类

655
00:23:05,556 --> 00:23:08,316
在这些框架之中

656
00:23:08,316 --> 00:23:09,986
我最为之感到兴奋的是 ARKit

657
00:23:10,196 --> 00:23:12,246
我认为增强现实

658
00:23:12,246 --> 00:23:13,326
是一个能产生很多激动人心的东西

659
00:23:13,326 --> 00:23:14,496
的领域

660
00:23:14,496 --> 00:23:16,046
我已经等不及将它放入

661
00:23:16,126 --> 00:23:17,916
你们的手中

662
00:23:17,916 --> 00:23:19,396
期待你们能为用户创造出

663
00:23:19,716 --> 00:23:20,726
什么样的体验

664
00:23:21,896 --> 00:23:24,306
现在 ARKit 允许你

665
00:23:24,306 --> 00:23:26,666
定位设备的位置

666
00:23:26,666 --> 00:23:27,966
以及现实世界中物品的位置

667
00:23:28,556 --> 00:23:29,926
然后它允许你

668
00:23:29,976 --> 00:23:31,966
在相机流的顶层

669
00:23:32,026 --> 00:23:32,556
进行扩充

670
00:23:33,846 --> 00:23:36,626
最后  我们有 NLP

671
00:23:36,626 --> 00:23:37,766
Natural Language Processing（自然语言处理）

672
00:23:38,286 --> 00:23:39,856
它允许你识别出

673
00:23:39,856 --> 00:23:42,316
顾客正在输入的

674
00:23:42,316 --> 00:23:43,236
可能是什么语言

675
00:23:43,286 --> 00:23:45,486
它同时允许你进行

676
00:23:45,486 --> 00:23:47,586
词语切分  也叫做

677
00:23:47,586 --> 00:23:49,096
命名实体识别

678
00:23:49,866 --> 00:23:51,666
现在  我推荐你

679
00:23:51,666 --> 00:23:53,616
关注今天下午晚些时候会进行的

680
00:23:53,616 --> 00:23:56,566
“Introducing CoreML（介绍 CoreML）” 的会议

681
00:23:57,326 --> 00:23:59,416
它会给你提供一个

682
00:23:59,416 --> 00:24:02,126
可以在设备上利用的

683
00:23:59,416 --> 00:24:02,126
可以在设备上利用的

684
00:24:02,126 --> 00:24:03,466
不同功能的

685
00:24:03,556 --> 00:24:04,106
概览

686
00:24:04,726 --> 00:24:07,976
接下来  我准备介绍

687
00:24:07,976 --> 00:24:11,516
一个可以在 iOS 以及 Apple TVOS 上使用的

688
00:24:11,746 --> 00:24:12,126
新框架

689
00:24:12,996 --> 00:24:13,986
它叫做 DeviceCheck

690
00:24:15,016 --> 00:24:16,856
现在  有许多的开发者

691
00:24:17,116 --> 00:24:18,546
正在使用不同的技术

692
00:24:18,546 --> 00:24:20,676
试图去

693
00:24:20,676 --> 00:24:21,876
识别设备

694
00:24:22,996 --> 00:24:24,386
现在  他们可能试图去

695
00:24:24,386 --> 00:24:26,226
认识并回答

696
00:24:26,226 --> 00:24:28,716
这样的问题

697
00:24:28,716 --> 00:24:29,376
这个设备接收过免费试用吗

698
00:24:30,236 --> 00:24:32,466
这个设备参与过

699
00:24:32,466 --> 00:24:33,686
不正当活动吗

700
00:24:34,326 --> 00:24:36,846
或者  这个设备

701
00:24:36,846 --> 00:24:38,316
是否做过一些违反

702
00:24:38,316 --> 00:24:40,116
你的 App 开发者准则的事情

703
00:24:41,326 --> 00:24:43,926
现在  为了实现那些目标

704
00:24:43,926 --> 00:24:46,156
很多的开发者试图搜集

705
00:24:46,156 --> 00:24:47,386
很多的信息

706
00:24:47,776 --> 00:24:49,986
为了将这些状态和设备

707
00:24:49,986 --> 00:24:51,336
联系在一起

708
00:24:51,336 --> 00:24:54,676
当然我确信房间中的各位

709
00:24:54,676 --> 00:24:55,046
没有参加过这样的活动

710
00:24:55,046 --> 00:24:58,256
为了实现这样的目标

711
00:24:58,256 --> 00:24:59,696
他们可能收集很多的信息

712
00:24:59,696 --> 00:25:01,596
例如这个设备是怎样设置的

713
00:24:59,696 --> 00:25:01,596
例如这个设备是怎样设置的

714
00:25:02,856 --> 00:25:04,266
什么样的信息

715
00:25:05,916 --> 00:25:05,986
存储在里面

716
00:25:05,986 --> 00:25:07,496
而这些开发者可能

717
00:25:07,496 --> 00:25:08,756
不想要这个层面的

718
00:25:08,756 --> 00:25:09,536
信息

719
00:25:10,696 --> 00:25:12,266
他们仅仅想要

720
00:25:12,266 --> 00:25:13,926
将一些状态和特定的设备

721
00:25:13,926 --> 00:25:14,516
联系起来

722
00:25:16,626 --> 00:25:18,806
现在 DeviceCheck 允许你将状态

723
00:25:18,806 --> 00:25:20,626
和设备联系在一起

724
00:25:21,266 --> 00:25:22,866
而且是通过一种

725
00:25:22,936 --> 00:25:24,766
隐私友好的方式

726
00:25:24,766 --> 00:25:26,186
你可以通过不触及非必要信息的方式

727
00:25:26,286 --> 00:25:27,996
来实现它

728
00:25:29,326 --> 00:25:30,676
DeviceCheck 允许你

729
00:25:30,676 --> 00:25:33,006
存储 2 位的信息

730
00:25:33,006 --> 00:25:35,046
同时将时间戳和设备

731
00:25:35,046 --> 00:25:36,046
联系在一起

732
00:25:36,566 --> 00:25:38,356
2 位是对每个团队 ID 而言的

733
00:25:39,286 --> 00:25:45,396
你可以存储 00 01 10

734
00:25:45,396 --> 00:25:45,816
或者 11

735
00:25:46,656 --> 00:25:49,076
这取决于你的考虑

736
00:25:49,077 --> 00:25:52,966
这对你的应用来说意味着什么

737
00:25:53,056 --> 00:25:56,896
以及你的 App 逻辑

738
00:25:57,046 --> 00:25:59,856
现在  这些信息将

739
00:25:59,856 --> 00:26:02,886
一直被 Apple 保存

740
00:25:59,856 --> 00:26:02,886
一直被 Apple 保存

741
00:26:03,246 --> 00:26:05,646
直到你重置它

742
00:26:05,646 --> 00:26:06,526
或者你更新了状态

743
00:26:07,236 --> 00:26:08,766
所以  这意味着

744
00:26:08,766 --> 00:26:10,796
它将被 Apple 一直保存

745
00:26:11,406 --> 00:26:13,116
无论你删除了

746
00:26:13,116 --> 00:26:15,256
重新安装了 App

747
00:26:15,256 --> 00:26:17,606
抹去了内容和设定

748
00:26:18,166 --> 00:26:20,046
还是设备在用户之间

749
00:26:20,116 --> 00:26:20,946
转手

750
00:26:21,596 --> 00:26:23,436
我们知道用户会将设备

751
00:26:23,436 --> 00:26:23,906
卖给其他人

752
00:26:24,256 --> 00:26:25,946
我们知道他们会将它们转手给

753
00:26:25,946 --> 00:26:27,496
他们的兄弟姐妹

754
00:26:27,496 --> 00:26:27,956
或者其他认识的人

755
00:26:28,366 --> 00:26:29,756
这个信息在这些过程后

756
00:26:29,756 --> 00:26:30,776
也会保持下来

757
00:26:32,466 --> 00:26:34,046
现在  正如我之前提到过的

758
00:26:34,046 --> 00:26:36,286
这需要你去想明白

759
00:26:36,286 --> 00:26:37,246
这些状态对于你意味着什么

760
00:26:37,246 --> 00:26:40,686
例如  对于 App A

761
00:26:40,686 --> 00:26:42,536
如果用户完成了免费试用

762
00:26:42,616 --> 00:26:44,566
他们会被分配到一个

763
00:26:44,566 --> 00:26:46,126
状态 01

764
00:26:47,186 --> 00:26:48,606
现在你可以有另外一个 App

765
00:26:48,816 --> 00:26:50,686
App B 同样的信息

766
00:26:50,746 --> 00:26:52,376
同样的状态

767
00:26:52,376 --> 00:26:53,426
免费试用已经分配过

768
00:26:53,426 --> 00:26:55,516
或者完成过了

769
00:26:55,516 --> 00:26:56,596
可以被分配状态 11

770
00:26:57,556 --> 00:26:58,646
这需要你来做出

771
00:26:58,646 --> 00:26:59,126
这个决定

772
00:26:59,126 --> 00:27:01,786
现在  我想要演示一下整个流程

773
00:26:59,126 --> 00:27:01,786
现在  我想要演示一下整个流程

774
00:27:01,786 --> 00:27:02,946
并确保你们明白

775
00:27:02,946 --> 00:27:05,466
这些在实践中

776
00:27:05,466 --> 00:27:06,096
是怎样工作的

777
00:27:07,026 --> 00:27:07,946
假如这里有一个 App

778
00:27:08,356 --> 00:27:09,486
那是一个新闻 App

779
00:27:09,486 --> 00:27:11,346
正如我之前说到的

780
00:27:11,346 --> 00:27:12,766
它有一个 7 天的免费试用

781
00:27:13,516 --> 00:27:15,856
所以  当我的免费试用完成时

782
00:27:15,896 --> 00:27:18,116
App 想要将我的状态

783
00:27:18,296 --> 00:27:19,896
设置为 01

784
00:27:20,556 --> 00:27:21,756
所以  第一件发生的事情

785
00:27:21,756 --> 00:27:23,286
是发送请求以检查

786
00:27:23,386 --> 00:27:24,226
设备上的令牌

787
00:27:25,256 --> 00:27:27,406
将它发送到 App 服务器

788
00:27:27,406 --> 00:27:28,576
通过服务器对服务器的交流

789
00:27:28,576 --> 00:27:30,726
设置状态

790
00:27:30,726 --> 00:27:31,406
并将它发送给 Apple

791
00:27:32,026 --> 00:27:33,556
所以  发送令牌

792
00:27:33,556 --> 00:27:36,916
以及想要设置的状态

793
00:27:36,916 --> 00:27:40,226
然后我意识到

794
00:27:40,226 --> 00:27:41,506
可能我不是非常喜欢

795
00:27:41,506 --> 00:27:41,846
这个新闻 App

796
00:27:42,426 --> 00:27:44,106
我想要删除它

797
00:27:44,386 --> 00:27:46,296
但是几周后

798
00:27:46,296 --> 00:27:47,946
我又想念它了

799
00:27:48,056 --> 00:27:49,946
我决定把这个 App 安装回来

800
00:27:50,046 --> 00:27:52,026
启动时  这个 App 考虑

801
00:27:52,026 --> 00:27:54,726
是否应该给这个用户

802
00:27:54,726 --> 00:27:56,596
或者这个设备

803
00:27:56,596 --> 00:27:57,586
另外一次免费试用

804
00:27:58,686 --> 00:28:01,236
所以  请询问请求令牌

805
00:27:58,686 --> 00:28:01,236
所以  请询问请求令牌

806
00:28:01,236 --> 00:28:02,766
用同样的方法将它发送到 App 服务器

807
00:28:02,766 --> 00:28:04,546
这一次  询问这个设备

808
00:28:04,546 --> 00:28:05,346
的状态

809
00:28:06,326 --> 00:28:10,446
然后  由于这个设备

810
00:28:10,446 --> 00:28:12,856
已经被设置为01

811
00:28:12,856 --> 00:28:13,816
它将被发送回 App 服务器

812
00:28:13,926 --> 00:28:15,456
这个时候

813
00:28:15,456 --> 00:28:17,046
就是 App 任务来决定接下来

814
00:28:17,046 --> 00:28:17,266
应该怎么做

815
00:28:18,326 --> 00:28:19,936
这个设备是否应该被给予

816
00:28:19,936 --> 00:28:20,906
另外一次免费试用

817
00:28:21,756 --> 00:28:23,826
还是设备是否应该被给予

818
00:28:23,826 --> 00:28:26,046
一个短一些的试用

819
00:28:26,046 --> 00:28:26,666
或者不给予试用

820
00:28:27,016 --> 00:28:29,386
这需要你

821
00:28:31,316 --> 00:28:31,556
来做出决定

822
00:28:31,646 --> 00:28:34,126
所以  正如我之前所说

823
00:28:34,126 --> 00:28:35,576
设备可以在用户之间转手

824
00:28:36,316 --> 00:28:37,776
假设  我将我的设备

825
00:28:37,776 --> 00:28:38,866
卖给了 Georgios

826
00:28:38,866 --> 00:28:39,316
因为我想要换一个手机

827
00:28:39,856 --> 00:28:41,776
这一次我想要一个金色的

828
00:28:42,496 --> 00:28:45,126
Gergios 想要

829
00:28:45,126 --> 00:28:46,036
安装同一个 App

830
00:28:46,036 --> 00:28:47,306
他喜欢同一个新闻 App

831
00:28:47,796 --> 00:28:49,086
所以  它也将用同样的方式

832
00:28:49,086 --> 00:28:51,036
询问令牌并将它

833
00:28:51,036 --> 00:28:51,816
发送回 App 服务器

834
00:28:52,476 --> 00:28:54,146
然后将询问它的状态

835
00:28:55,076 --> 00:28:57,426
同样的 01 将会被返回

836
00:28:58,366 --> 00:29:00,526
而这种情况下

837
00:28:58,366 --> 00:29:00,526
而这种情况下

838
00:29:00,526 --> 00:29:01,896
Georgios 还没有购买免费试用

839
00:29:02,176 --> 00:29:03,366
所以  你需要考虑

840
00:29:03,366 --> 00:29:04,836
如何解决这些情况

841
00:29:06,006 --> 00:29:08,486
现在  你要确保

842
00:29:08,486 --> 00:29:09,926
用户有和你联系的方式

843
00:29:09,926 --> 00:29:12,676
或者如果他们有这方面的问题

844
00:29:12,676 --> 00:29:14,236
可以进行升级

845
00:29:14,236 --> 00:29:16,026
他们需要来联系你

846
00:29:16,026 --> 00:29:18,406
因为 Apple

847
00:29:18,406 --> 00:29:20,576
并不知道这些状态

848
00:29:20,576 --> 00:29:21,756
对应的是什么

849
00:29:21,956 --> 00:29:25,346
现在  我将要快速的展示一下

850
00:29:25,346 --> 00:29:26,636
一个询问的例子

851
00:29:26,636 --> 00:29:26,956
看起来是什么样的

852
00:29:28,086 --> 00:29:29,026
如你所见

853
00:29:29,026 --> 00:29:31,236
这是一个设备令牌

854
00:29:31,236 --> 00:29:33,336
你生成的交易 ID

855
00:29:33,336 --> 00:29:33,996
以及一个时间戳

856
00:29:35,086 --> 00:29:36,736
然后  这里是 Apple

857
00:29:36,736 --> 00:29:37,906
反馈的状态

858
00:29:38,606 --> 00:29:41,416
然后  如果你想要升级状态

859
00:29:41,416 --> 00:29:42,966
同样

860
00:29:42,966 --> 00:29:46,346
请获取设备令牌

861
00:29:46,346 --> 00:29:48,226
生成的交易 ID

862
00:29:48,226 --> 00:29:49,306
以及时间戳

863
00:29:49,306 --> 00:29:51,756
和你想设置的状态

864
00:29:51,986 --> 00:29:53,346
当你使用 DeviceCheck 时

865
00:29:53,626 --> 00:29:55,096
确保考虑到这些

866
00:29:55,096 --> 00:29:55,926
实际情况

867
00:29:57,136 --> 00:29:58,646
确保你能解决

868
00:29:58,856 --> 00:30:00,306
设备在用户之间转手

869
00:29:58,856 --> 00:30:00,306
设备在用户之间转手

870
00:30:00,406 --> 00:30:01,096
的情况

871
00:30:02,056 --> 00:30:04,696
一个设备的行为

872
00:30:04,696 --> 00:30:05,376
可能随着时间变化

873
00:30:06,846 --> 00:30:08,046
此外

874
00:30:08,046 --> 00:30:09,056
请考虑数据的更新

875
00:30:10,166 --> 00:30:11,886
如果这个数据是一年前设置的

876
00:30:12,526 --> 00:30:13,516
与它是在这个月设置的

877
00:30:13,516 --> 00:30:15,196
可能会有

878
00:30:15,196 --> 00:30:15,816
不同的意义

879
00:30:17,466 --> 00:30:18,936
它们应该组成你的 App 逻辑的一部分

880
00:30:18,936 --> 00:30:21,106
而不仅仅是资源

881
00:30:21,826 --> 00:30:23,486
此外  请考虑如何将这个状态

882
00:30:23,486 --> 00:30:24,396
展现在 UI 上

883
00:30:25,436 --> 00:30:26,796
当 Georgios 第一次启动这个 App 时

884
00:30:26,796 --> 00:30:28,296
你会想要给他

885
00:30:28,296 --> 00:30:29,686
留下一些崭新的

886
00:30:29,686 --> 00:30:29,976
印象

887
00:30:30,796 --> 00:30:31,786
所以  确保你考虑到

888
00:30:32,436 --> 00:30:32,526
这些

889
00:30:33,306 --> 00:30:35,576
你应该使用

890
00:30:35,656 --> 00:30:37,856
平台支持的身份标识符

891
00:30:38,746 --> 00:30:39,876
这些是应用标识符

892
00:30:39,876 --> 00:30:41,576
供应商标识符

893
00:30:41,576 --> 00:30:43,116
以及

894
00:30:43,116 --> 00:30:44,456
广告标识符

895
00:30:45,676 --> 00:30:47,306
我们会继续将

896
00:30:47,406 --> 00:30:50,546
冗余从 App 沙箱中清除

897
00:30:50,906 --> 00:30:53,026
正如我们之前做的

898
00:30:53,026 --> 00:30:54,566
我们会继续锁定冗余区域

899
00:30:54,566 --> 00:30:57,486
并将他们交给

900
00:30:57,556 --> 00:30:59,146
用户控制或者

901
00:30:59,146 --> 00:30:59,436
直接移除

902
00:30:59,946 --> 00:31:03,896
接下来  我打算谈一谈

903
00:30:59,946 --> 00:31:03,896
接下来  我打算谈一谈

904
00:31:04,456 --> 00:31:06,076
智能追踪保护

905
00:31:07,006 --> 00:31:08,096
今年  我们致力于

906
00:31:08,096 --> 00:31:10,466
减少跨网络追踪

907
00:31:10,966 --> 00:31:14,156
现在 WebKit

908
00:31:14,156 --> 00:31:15,626
以及 Safari 已经成为

909
00:31:15,626 --> 00:31:16,516
用户隐私保护的领导者

910
00:31:17,746 --> 00:31:19,246
其中的一个例子是

911
00:31:19,246 --> 00:31:20,936
默认拦截第三方的 Cookies 

912
00:31:22,326 --> 00:31:23,756
现在  我想提出这个

913
00:31:23,756 --> 00:31:25,236
智能追踪保护

914
00:31:25,236 --> 00:31:26,796
不在于拦截

915
00:31:26,796 --> 00:31:27,226
内容

916
00:31:27,506 --> 00:31:28,796
那不是这个技术的

917
00:31:30,426 --> 00:31:30,536
关键

918
00:31:31,376 --> 00:31:33,016
它会自动的检测到

919
00:31:33,016 --> 00:31:34,916
通过用户访问网站的

920
00:31:34,916 --> 00:31:35,786
追踪

921
00:31:36,346 --> 00:31:37,786
然后通过使用一个

922
00:31:37,876 --> 00:31:39,756
设备上的分类器

923
00:31:39,756 --> 00:31:40,756
它将识别追踪域

924
00:31:41,386 --> 00:31:42,606
一旦追踪域被识别

925
00:31:42,606 --> 00:31:45,116
它将会隔绝

926
00:31:45,346 --> 00:31:47,246
第三方 Cookies 

927
00:31:47,246 --> 00:31:49,656
以及那个网站的

928
00:31:49,656 --> 00:31:49,966
网站数据

929
00:31:49,966 --> 00:31:52,456
然后数据将会周期性的

930
00:31:52,456 --> 00:31:53,376
被清洗

931
00:31:54,656 --> 00:31:56,306
值得一提的是  如果用户

932
00:31:56,306 --> 00:31:58,306
和那个网域有交互

933
00:31:58,346 --> 00:31:59,726
这将会被当作一个信号

934
00:31:59,726 --> 00:32:01,096
说明用户对那个网站感兴趣

935
00:31:59,726 --> 00:32:01,096
说明用户对那个网站感兴趣

936
00:32:01,556 --> 00:32:03,226
然后那个网站将会被列入

937
00:32:03,226 --> 00:32:03,686
白名单

938
00:32:04,656 --> 00:32:05,856
让我们回顾一个例子

939
00:32:06,856 --> 00:32:10,116
如果 example.com 被识别为

940
00:32:10,116 --> 00:32:11,746
一个追踪网站

941
00:32:11,746 --> 00:32:13,666
用户访问了网站 1

942
00:32:13,666 --> 00:32:16,046
网站 1 嵌入了 example.com

943
00:32:16,046 --> 00:32:16,986
example.com 将 Cookies 设置为 foo

944
00:32:18,036 --> 00:32:20,256
现在用户访问了网站 2

945
00:32:20,606 --> 00:32:22,386
网站 2 同样嵌入了 example.com

946
00:32:22,846 --> 00:32:25,066
但是这里 example.com 将

947
00:32:25,066 --> 00:32:26,176
没有权限设置 Cookies 为 foo

948
00:32:26,176 --> 00:32:28,666
所以它将设置 Cookies 为 bar

949
00:32:29,576 --> 00:32:31,596
过段时间之后

950
00:32:31,596 --> 00:32:34,186
这些 Cookies 将被清洗

951
00:32:35,366 --> 00:32:37,986
现在  第一个网站的 Cookies 

952
00:32:37,986 --> 00:32:39,526
将不会被删除掉

953
00:32:40,366 --> 00:32:41,496
此外  如果用户

954
00:32:41,496 --> 00:32:42,996
和你的网站有交互

955
00:32:42,996 --> 00:32:46,066
通过点击  点按的方式

956
00:32:46,656 --> 00:32:50,396
它将立刻进入白名单

957
00:32:50,646 --> 00:32:53,066
如果你的用户

958
00:32:53,696 --> 00:32:55,316
不与你的网站进行交互

959
00:32:55,386 --> 00:32:56,306
你就不应该依赖存储的方式

960
00:32:56,306 --> 00:32:59,456
理解这一点

961
00:32:59,456 --> 00:33:00,326
非常重要

962
00:32:59,456 --> 00:33:00,326
非常重要

963
00:33:00,746 --> 00:33:02,916
如果你的分析包依赖于

964
00:33:02,916 --> 00:33:06,066
第三方 Cookies 

965
00:33:06,066 --> 00:33:07,330
它们可能会受到影响

966
00:33:08,476 --> 00:33:10,296
所以  我们这里试图实现的是

967
00:33:10,296 --> 00:33:12,686
用户只有与他们

968
00:33:12,686 --> 00:33:14,606
真正产生交互的网站

969
00:33:14,986 --> 00:33:16,746
才保留有长期的追踪

970
00:33:16,746 --> 00:33:18,276
和 Cookies 

971
00:33:18,546 --> 00:33:21,126
真正产生交互的网站

972
00:33:21,126 --> 00:33:22,926
然后所有用户浏览的

973
00:33:23,096 --> 00:33:24,826
其他追踪网站

974
00:33:24,826 --> 00:33:27,116
将会主动的

975
00:33:27,666 --> 00:33:27,846
被移除

976
00:33:29,576 --> 00:33:31,846
最后  我们对于差别隐私

977
00:33:31,846 --> 00:33:33,036
有一个更新

978
00:33:33,646 --> 00:33:36,026
差别隐私于去年

979
00:33:36,026 --> 00:33:38,996
在 iOS 和 macOS 上

980
00:33:38,996 --> 00:33:39,116
发布

981
00:33:39,856 --> 00:33:42,176
从那以后 我们每天可以收集

982
00:33:42,176 --> 00:33:44,456
数百万捐赠的

983
00:33:44,456 --> 00:33:47,536
私人数据

984
00:33:47,576 --> 00:33:49,336
来建造用户隐私

985
00:33:49,366 --> 00:33:49,886
功能

986
00:33:49,886 --> 00:33:53,576
现在  我想介绍两种

987
00:33:53,576 --> 00:33:54,806
今年的新用途

988
00:33:55,606 --> 00:33:58,876
第一个用途是是收集

989
00:33:58,956 --> 00:34:00,856
通常储存在 HealthKit 中的是什么

990
00:33:58,956 --> 00:34:00,856
通常储存在 HealthKit 中的是什么

991
00:34:00,856 --> 00:34:01,376
数据

992
00:34:02,096 --> 00:34:04,216
其中一个研究敏感功能

993
00:34:04,216 --> 00:34:06,016
或者涉及敏感数据的功能

994
00:34:06,016 --> 00:34:07,376
的挑战

995
00:34:07,376 --> 00:34:09,565
是你想要理解这些功能

996
00:34:09,626 --> 00:34:10,936
是怎样

997
00:34:10,936 --> 00:34:11,396
被使用的

998
00:34:12,266 --> 00:34:13,536
你想要理解当用户

999
00:34:13,536 --> 00:34:15,136
产生失误操作

1000
00:34:15,136 --> 00:34:16,866
或者发生错误时

1001
00:34:16,866 --> 00:34:17,505
的感受

1002
00:34:17,936 --> 00:34:19,466
但是你知道

1003
00:34:19,466 --> 00:34:21,956
收集关于他们真正交互的信息

1004
00:34:21,956 --> 00:34:23,626
可能会包含

1005
00:34:23,626 --> 00:34:24,676
比你所需要的更多的

1006
00:34:24,676 --> 00:34:24,996
信息

1007
00:34:25,835 --> 00:34:28,076
这里有一个例子

1008
00:34:28,076 --> 00:34:30,295
如果你收集什么类型的数据

1009
00:34:30,295 --> 00:34:32,666
什么类型的数据存储在他们的设备上

1010
00:34:32,666 --> 00:34:34,716
例如

1011
00:34:34,716 --> 00:34:36,255
血糖

1012
00:34:36,326 --> 00:34:38,656
例如锻炼这些

1013
00:34:38,656 --> 00:34:40,686
可能包含更多的

1014
00:34:40,946 --> 00:34:43,235
关于他们健康的信息

1015
00:34:43,235 --> 00:34:44,686
这些信息也可能关于他们的身体条件

1016
00:34:44,686 --> 00:34:45,366
或者关于他们的活跃度

1017
00:34:45,366 --> 00:34:47,056
而我们并不真正需要

1018
00:34:47,056 --> 00:34:48,116
那个层面的信息

1019
00:34:48,835 --> 00:34:50,056
所以  这就是为什么

1020
00:34:50,056 --> 00:34:51,386
Apple 拥有差别隐私是令人激动的

1021
00:34:51,386 --> 00:34:53,735
因为我们仍然可以

1022
00:34:53,735 --> 00:34:55,246
得到足够的信息

1023
00:34:55,246 --> 00:34:57,246
来不断构造我们的功能

1024
00:34:57,526 --> 00:34:59,306
但同时尊重用户的隐私

1025
00:34:59,826 --> 00:35:02,806
所以  在去年隐私会议

1026
00:34:59,826 --> 00:35:02,806
所以  在去年隐私会议

1027
00:35:02,806 --> 00:35:04,056
和开发者大会上

1028
00:35:04,056 --> 00:35:05,866
Julian 在深入探究

1029
00:35:05,866 --> 00:35:07,476
差别隐私在 Apple

1030
00:35:07,476 --> 00:35:08,956
是如何工作上

1031
00:35:08,956 --> 00:35:09,236
完成的很好

1032
00:35:10,756 --> 00:35:13,406
基本上  我们收集了私有的捐赠

1033
00:35:13,406 --> 00:35:16,426
例如表情符号

1034
00:35:16,426 --> 00:35:18,116
随着更多的用户贡献

1035
00:35:18,116 --> 00:35:19,896
他们的私人表情符号

1036
00:35:19,896 --> 00:35:20,726
我们知道了什么是

1037
00:35:20,766 --> 00:35:22,666
最流行的表情符号

1038
00:35:23,656 --> 00:35:25,766
但是  关键点在于

1039
00:35:25,766 --> 00:35:26,776
我们并不知道

1040
00:35:26,886 --> 00:35:28,536
和个体用户相关的

1041
00:35:28,536 --> 00:35:28,956
信息

1042
00:35:29,966 --> 00:35:31,416
关于更多 Apple 的差别隐私

1043
00:35:31,416 --> 00:35:32,726
是如何工作的信息

1044
00:35:32,726 --> 00:35:34,146
我建议你们

1045
00:35:34,146 --> 00:35:36,346
去了解去年在开发者大会中

1046
00:35:36,346 --> 00:35:37,486
的会议

1047
00:35:39,066 --> 00:35:42,256
今年我们打算将

1048
00:35:42,256 --> 00:35:44,096
同样的过程放到

1049
00:35:44,096 --> 00:35:44,446
健康数据类型上

1050
00:35:45,096 --> 00:35:46,416
所以  我们将会了解

1051
00:35:46,416 --> 00:35:48,376
最流行的健康数据类型

1052
00:35:48,376 --> 00:35:49,606
而不获得个体用户的

1053
00:35:49,606 --> 00:35:50,696
信息

1054
00:35:51,296 --> 00:35:56,976
第二个情况是

1055
00:35:57,026 --> 00:35:59,826
去了解那些非常缓慢

1056
00:35:59,826 --> 00:36:02,356
或者占用了太多电池寿命的

1057
00:35:59,826 --> 00:36:02,356
或者占用了太多电池寿命的

1058
00:36:02,356 --> 00:36:03,216
网站

1059
00:36:03,966 --> 00:36:05,976
我们都想有一个快速的网站

1060
00:36:06,586 --> 00:36:08,646
但是我们不必要知道

1061
00:36:08,646 --> 00:36:11,456
用户浏览的一切

1062
00:36:11,456 --> 00:36:11,986
信息

1063
00:36:12,406 --> 00:36:13,886
那是很多关于用户的信息

1064
00:36:13,926 --> 00:36:15,596
取决于他们的

1065
00:36:15,696 --> 00:36:16,516
网络搜索

1066
00:36:17,276 --> 00:36:18,476
这是另外一个例子

1067
00:36:18,476 --> 00:36:19,786
我们使用了差别隐私

1068
00:36:19,786 --> 00:36:21,796
然后接触了那些

1069
00:36:21,796 --> 00:36:23,756
可能拥有这些问题

1070
00:36:23,756 --> 00:36:25,946
或者写了慢速网站的开发者

1071
00:36:25,946 --> 00:36:27,256
因此我们能够为每一个人

1072
00:36:27,256 --> 00:36:27,726
改善那些网站

1073
00:36:29,956 --> 00:36:33,666
现在  总结一下

1074
00:36:33,666 --> 00:36:36,256
我们今天在这里

1075
00:36:36,256 --> 00:36:37,726
或在在网络上参加会议

1076
00:36:37,726 --> 00:36:39,056
是为了给我们的用户提供

1077
00:36:39,056 --> 00:36:39,506
优秀的功能

1078
00:36:40,596 --> 00:36:41,736
创造一些我们的用户会喜欢的

1079
00:36:41,736 --> 00:36:42,256
东西

1080
00:36:42,786 --> 00:36:43,896
创造一些我们的用户会

1081
00:36:43,896 --> 00:36:45,846
认为有趣的东西

1082
00:36:45,846 --> 00:36:47,636
或者让他们生活的更便捷

1083
00:36:47,636 --> 00:36:47,986
让他们的工作更轻松

1084
00:36:47,986 --> 00:36:50,826
我想让你

1085
00:36:50,826 --> 00:36:52,666
在过去 40 分钟得到的

1086
00:36:52,666 --> 00:36:54,636
是一些可以使用到你的 App 中的

1087
00:36:54,756 --> 00:36:56,016
几项技术和

1088
00:36:56,056 --> 00:36:56,436
概念

1089
00:36:57,646 --> 00:36:59,526
第一个是用户许可和

1090
00:36:59,526 --> 00:37:00,366
信息透明

1091
00:36:59,526 --> 00:37:00,366
信息透明

1092
00:37:01,156 --> 00:37:02,816
确保考虑到

1093
00:37:02,816 --> 00:37:04,256
你想表达什么

1094
00:37:04,256 --> 00:37:04,566
以及你的目的字符串

1095
00:37:04,566 --> 00:37:05,856
请向你的用户清晰地解释一切

1096
00:37:06,606 --> 00:37:08,816
这同样适用于

1097
00:37:08,816 --> 00:37:09,486
需要使用定位信息时

1098
00:37:10,696 --> 00:37:12,496
我们可以一起建造出一个

1099
00:37:12,686 --> 00:37:14,736
健康的 App 生态系统

1100
00:37:14,736 --> 00:37:15,146
而 DeviceCheck 就是其中的一部分

1101
00:37:15,936 --> 00:37:18,676
我们想要为每一个人

1102
00:37:19,786 --> 00:37:20,606
建造出一个健康的网站环境

1103
00:37:20,896 --> 00:37:22,286
而智能追踪保护

1104
00:37:22,286 --> 00:37:24,586
就是其中的

1105
00:37:25,176 --> 00:37:25,276
一部分

1106
00:37:25,516 --> 00:37:27,326
有了差别隐私

1107
00:37:27,326 --> 00:37:29,016
我们将会开发新功能

1108
00:37:29,016 --> 00:37:30,326
并学习如何开发更好的功能

1109
00:37:30,326 --> 00:37:31,876
同时保护用户的隐私

1110
00:37:33,046 --> 00:37:34,356
现在 我在 Apple 工作的

1111
00:37:34,356 --> 00:37:36,826
最美好的部分之一

1112
00:37:36,826 --> 00:37:37,856
是能够和许多

1113
00:37:37,856 --> 00:37:40,206
不同的团队工作

1114
00:37:40,206 --> 00:37:41,286
并且每个人都在为你们创造

1115
00:37:41,286 --> 00:37:43,446
很棒的功能和 API 而努力工作

1116
00:37:43,446 --> 00:37:44,836
以使你们能够利用起来

1117
00:37:44,836 --> 00:37:47,446
这将让用户

1118
00:37:47,446 --> 00:37:48,026
感到开心

1119
00:37:48,926 --> 00:37:52,706
和这些优秀的人

1120
00:37:52,706 --> 00:37:54,936
一起工作的激情

1121
00:37:55,146 --> 00:37:56,956
也是我一开始决定

1122
00:37:56,956 --> 00:37:57,646
实现隐私保护的激情

1123
00:37:58,186 --> 00:37:59,756
确保我们都在

1124
00:37:59,756 --> 00:38:01,926
创造优秀的功能

1125
00:37:59,756 --> 00:38:01,926
创造优秀的功能

1126
00:38:02,006 --> 00:38:03,386
并且尊重了用户的隐私

1127
00:38:04,256 --> 00:38:05,796
然后  我想让你们

1128
00:38:05,796 --> 00:38:06,596
从这里得到的

1129
00:38:06,596 --> 00:38:07,416
是一点启发

1130
00:38:07,816 --> 00:38:09,416
回家吧  和你的团队一起工作

1131
00:38:09,416 --> 00:38:11,876
去创造让人为之惊讶

1132
00:38:11,876 --> 00:38:13,256
为之喜悦的优秀功能

1133
00:38:13,256 --> 00:38:16,036
但是记得尊重用户的隐私

1134
00:38:17,516 --> 00:38:25,546
[掌声]

1135
00:38:26,046 --> 00:38:27,316
要想了解更多的信息

1136
00:38:27,396 --> 00:38:28,566
请访问这个链接

1137
00:38:29,406 --> 00:38:31,026
我们在这次谈话中提到了

1138
00:38:31,026 --> 00:38:31,836
很多的话题

1139
00:38:32,176 --> 00:38:33,246
因此  我建议你们

1140
00:38:33,246 --> 00:38:34,546
去查看一些相关的会议

1141
00:38:34,546 --> 00:38:36,606
包括今天下午晚些时候

1142
00:38:36,606 --> 00:38:38,056
举办的与 CoreML 相关的会议

1143
00:38:39,236 --> 00:38:40,406
非常感谢各位到来

1144
00:38:40,406 --> 00:38:41,966
祝大家度过一个愉快的开发者大会

1145
00:38:42,508 --> 00:38:44,508
[掌声]
