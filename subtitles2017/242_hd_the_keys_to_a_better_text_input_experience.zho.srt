1
00:00:07,516 --> 00:00:16,500
[欢呼]

2
00:00:21,176 --> 00:00:23,500
[掌声]

3
00:00:24,766 --> 00:00:25,426
&gt;&gt; 好的 谢谢

4
00:00:25,956 --> 00:00:26,366
谢谢

5
00:00:26,826 --> 00:00:27,696
大家早上好

6
00:00:28,246 --> 00:00:29,096
我叫 Kasia

7
00:00:29,286 --> 00:00:30,366
我和我的同事

8
00:00:30,366 --> 00:00:31,246
Shuchen 和 James 一起

9
00:00:31,556 --> 00:00:32,555
为大家介绍在 App 中

10
00:00:32,555 --> 00:00:33,986
呈现更好的输入法体验

11
00:00:33,986 --> 00:00:35,156
的关键

12
00:00:35,246 --> 00:00:36,516
那么 让我们来看看 

13
00:00:36,516 --> 00:00:37,236
我们今天要讲的内容

14
00:00:37,506 --> 00:00:39,246
我们将从如何 

15
00:00:39,436 --> 00:00:40,686
将键盘整合到布局中 

16
00:00:40,686 --> 00:00:41,186
开始

17
00:00:41,596 --> 00:00:42,786
然后我们会谈到 

18
00:00:42,786 --> 00:00:44,266
怎样创造一个更加动态

19
00:00:44,266 --> 00:00:45,556
更加有趣的输入辅助

20
00:00:45,556 --> 00:00:45,856
视图

21
00:00:46,446 --> 00:00:47,876
我们还将讨论如何让你的 App 

22
00:00:48,316 --> 00:00:49,816
接触到多语言的用户群体

23
00:00:50,586 --> 00:00:52,056
利用 Trait 让你的

24
00:00:52,056 --> 00:00:54,796
App 的 QuickType 更智能

25
00:00:54,796 --> 00:00:56,026
硬件键盘支持

26
00:00:56,666 --> 00:00:58,166
创建自定义输入界面 

27
00:00:58,686 --> 00:01:00,076
最后 我们将给出关于 

28
00:00:58,686 --> 00:01:00,076
最后 我们将给出关于 

29
00:01:00,076 --> 00:01:01,146
键盘扩展的一些建议 

30
00:01:01,146 --> 00:01:01,736
和好的做法

31
00:01:02,346 --> 00:01:03,526
下面我先开始谈谈

32
00:01:03,526 --> 00:01:04,666
如何将键盘整合到 

33
00:01:04,666 --> 00:01:04,965
你的 App 的布局中

34
00:01:05,846 --> 00:01:06,816
为此 我要展示一个 

35
00:01:06,816 --> 00:01:08,286
我们专门为这个讨论

36
00:01:08,286 --> 00:01:10,296
所做的 App 的截图

37
00:01:10,296 --> 00:01:11,496
这个 App 叫 CatChat

38
00:01:11,496 --> 00:01:12,496
可以用它来跟你的宠物交流 

39
00:01:13,416 --> 00:01:14,926
不只是猫 但是对我来说

40
00:01:15,046 --> 00:01:16,446
只有猫

41
00:01:16,446 --> 00:01:18,436
我们也提供这个 App 的代码 

42
00:01:18,436 --> 00:01:19,616
作为一个例子 

43
00:01:19,616 --> 00:01:20,146
大家可以从我们的网站获取 

44
00:01:20,476 --> 00:01:21,726
但不包括猫的图片 

45
00:01:22,696 --> 00:01:25,026
好，那我们就从这里开始

46
00:01:25,026 --> 00:01:25,636
你在后面的讨论中还会

47
00:01:25,636 --> 00:01:26,246
看到很多次这个App

48
00:01:26,246 --> 00:01:27,786
我们就从 

49
00:01:27,786 --> 00:01:29,346
应对键盘高度的变化开始 

50
00:01:30,976 --> 00:01:32,706
键盘有不同的尺寸

51
00:01:34,216 --> 00:01:35,976
取决于用户 

52
00:01:35,976 --> 00:01:37,326
正在使用的语言 

53
00:01:37,326 --> 00:01:38,446
和他们启用的设置 

54
00:01:39,026 --> 00:01:40,076
你因此可能会在你使用的 App 中 

55
00:01:40,606 --> 00:01:41,916
看到不同高度的

56
00:01:41,916 --> 00:01:42,296
键盘

57
00:01:42,816 --> 00:01:44,626
英语键盘 

58
00:01:44,626 --> 00:01:46,716
因为有预测栏 是这样一个高度 

59
00:01:47,266 --> 00:01:48,876
然而波兰语键盘 

60
00:01:48,876 --> 00:01:51,246
就比较短，而中文的 10 键 

61
00:01:51,246 --> 00:01:53,126
拼音键盘 就比以上两者 

62
00:01:53,126 --> 00:01:53,726
都要高一些

63
00:01:54,716 --> 00:01:56,066
并且有一些第三方的 

64
00:01:56,066 --> 00:01:57,356
键盘 很多可能你们也 

65
00:01:57,356 --> 00:01:58,946
写过 那些键盘就没有 

66
00:01:58,946 --> 00:02:00,246
一个特定的高度要求 

67
00:01:58,946 --> 00:02:00,246
一个特定的高度要求 

68
00:02:01,496 --> 00:02:03,066
所以你永远无法确保 

69
00:02:03,066 --> 00:02:04,526
你的用户在你的 App 中使用 

70
00:02:04,526 --> 00:02:05,876
一个特定的键盘高度

71
00:02:05,876 --> 00:02:06,846


72
00:02:07,136 --> 00:02:08,216
那么 你要怎样应对呢 

73
00:02:09,256 --> 00:02:09,916
我们有一系列的 

74
00:02:09,916 --> 00:02:10,686
通知功能

75
00:02:11,586 --> 00:02:13,436
我们会通知你键盘出现 

76
00:02:13,436 --> 00:02:15,776
键盘隐藏和 

77
00:02:15,776 --> 00:02:16,596
框架改变 

78
00:02:17,136 --> 00:02:17,756
在每一个通知中 

79
00:02:17,756 --> 00:02:18,896
我们会告诉你 

80
00:02:18,896 --> 00:02:20,206
你将获取的键盘的

81
00:02:20,656 --> 00:02:21,916
最开始与最终的框架

82
00:02:22,876 --> 00:02:24,756
在我们进入如何使用 

83
00:02:24,756 --> 00:02:25,546
我们给你们的框架之前 

84
00:02:25,546 --> 00:02:26,846
我们不妨先来 

85
00:02:26,846 --> 00:02:28,386
看一个特殊例子 

86
00:02:28,386 --> 00:02:29,676
就是脱离式键盘

87
00:02:30,306 --> 00:02:33,106
在 iPad 中 用户实际上可以 

88
00:02:33,586 --> 00:02:34,786
从屏幕底部 

89
00:02:34,786 --> 00:02:36,216
把键盘拉起来

90
00:02:36,216 --> 00:02:37,586
并且来回移动

91
00:02:37,586 --> 00:02:37,946
同时把键盘拆分

92
00:02:38,996 --> 00:02:41,126
在这种情况下 你一般 

93
00:02:41,126 --> 00:02:42,736
不会想要你的 App 总是尝试 

94
00:02:42,736 --> 00:02:43,986
呆在键盘的上方 

95
00:02:43,986 --> 00:02:44,736
因为用户可能会把键盘

96
00:02:44,736 --> 00:02:45,476
挪到屏幕的最上方

97
00:02:45,526 --> 00:02:46,766
那样你的全部

98
00:02:46,766 --> 00:02:47,846
内容都会消失

99
00:02:47,846 --> 00:02:48,146
这可一点也不好玩

100
00:02:48,706 --> 00:02:50,266
因此 当键盘从屏幕底部脱离 

101
00:02:50,266 --> 00:02:51,596
我们会发送给你一个 

102
00:02:51,596 --> 00:02:53,316
“隐藏”通知 就像我们之前 

103
00:02:53,316 --> 00:02:54,816
在键盘被关闭时

104
00:02:54,816 --> 00:02:55,396
发送的一样

105
00:02:56,236 --> 00:02:58,066
大多数情况下 你们就要 

106
00:02:58,066 --> 00:02:58,986
这样处理 就像 

107
00:02:58,986 --> 00:03:00,086
键盘被关闭时一样

108
00:02:58,986 --> 00:03:00,086
键盘被关闭时一样

109
00:03:00,906 --> 00:03:01,956
如果你想做的很漂亮

110
00:03:01,956 --> 00:03:03,436
我们会继续发送 

111
00:03:03,436 --> 00:03:05,016
给你框架改变的通知 

112
00:03:05,776 --> 00:03:07,736
不过对于大部分人而言

113
00:03:07,736 --> 00:03:09,286
你要做的是追踪

114
00:03:09,286 --> 00:03:10,756
最近的一次隐藏或显示

115
00:03:11,576 --> 00:03:13,036
然后相应的处理键盘问题

116
00:03:13,036 --> 00:03:14,896
之后再处理任何 

117
00:03:14,896 --> 00:03:15,636
框架改变

118
00:03:16,896 --> 00:03:18,206
所以 脱离式键盘是一种

119
00:03:18,206 --> 00:03:19,066
这样的东西

120
00:03:19,066 --> 00:03:20,176
我们看到这个滚动界面

121
00:03:20,886 --> 00:03:22,306
然后当用户把键盘拉上去以后

122
00:03:22,486 --> 00:03:23,606
这个滚动界面会补上下面的空白

123
00:03:23,726 --> 00:03:25,296
当键盘脱离时 这个滚动界面

124
00:03:25,296 --> 00:03:26,226
会再次占满屏幕

125
00:03:26,806 --> 00:03:27,856
当用户重新把键盘放回底部时

126
00:03:27,856 --> 00:03:29,726
这个界面会恢复原状

127
00:03:29,726 --> 00:03:30,626
这样你就能看到整个

128
00:03:30,626 --> 00:03:32,376
你与你的猫的愉快

129
00:03:32,376 --> 00:03:33,856
的聊天记录 

130
00:03:33,856 --> 00:03:34,256
这可是件重要的事

131
00:03:35,166 --> 00:03:37,426
这就大概是我要说

132
00:03:37,426 --> 00:03:37,846
的特殊例子 

133
00:03:38,586 --> 00:03:40,086
那么 我们继续讨论 

134
00:03:40,116 --> 00:03:41,256
如何使用我们给你的 

135
00:03:41,256 --> 00:03:42,456
框架通知 

136
00:03:43,666 --> 00:03:44,306
首先

137
00:03:44,306 --> 00:03:45,616
键盘一直是

138
00:03:45,616 --> 00:03:45,976
全屏的 

139
00:03:46,226 --> 00:03:47,626
它一直是在全屏的 

140
00:03:47,626 --> 00:03:48,486
坐标空间的 

141
00:03:49,186 --> 00:03:51,146
因此 你要做的第一件事 

142
00:03:51,146 --> 00:03:52,306
当你从我们的通知中 

143
00:03:52,306 --> 00:03:53,856
得到一个键盘框架时 

144
00:03:53,856 --> 00:03:55,096
是把它从全屏坐标 

145
00:03:55,096 --> 00:03:56,196
转换到你的 

146
00:03:56,196 --> 00:03:57,656
本地坐标 然后你才能 

147
00:03:57,656 --> 00:03:58,576
开始处理其他

148
00:03:59,536 --> 00:03:59,636
事情

149
00:03:59,756 --> 00:04:01,636
由于键盘可以是全屏的 

150
00:03:59,756 --> 00:04:01,636
由于键盘可以是全屏的 

151
00:04:01,636 --> 00:04:03,476
而你的 App 可能不是 

152
00:04:03,476 --> 00:04:04,686
因为你知道 

153
00:04:04,686 --> 00:04:05,516
在很多有趣的 

154
00:04:05,516 --> 00:04:06,626
情况下 键盘会 

155
00:04:06,626 --> 00:04:07,186
上上下下地乱跑

156
00:04:07,506 --> 00:04:08,416
你一定要确保 

157
00:04:08,416 --> 00:04:09,236
先做这件事

158
00:04:09,236 --> 00:04:11,126
你不能依赖于 

159
00:04:11,126 --> 00:04:12,836
你所得到的框架恰好 

160
00:04:12,836 --> 00:04:13,476
符合你的 App 的本地框架 

161
00:04:13,846 --> 00:04:15,076
举个例子 想想多线程工作

162
00:04:16,736 --> 00:04:17,935
然后 如果你确实使用 

163
00:04:17,935 --> 00:04:19,086
我们给你的框架 

164
00:04:19,086 --> 00:04:19,836
当你转换了它之后 

165
00:04:19,836 --> 00:04:21,406
以及你的 

166
00:04:21,406 --> 00:04:24,056
想用的界面 你就可以 

167
00:04:24,056 --> 00:04:25,106
得到这两者之间的 

168
00:04:25,106 --> 00:04:26,386
高度的区别 或者是

169
00:04:26,386 --> 00:04:27,806
当键盘与你的界面重合时 

170
00:04:27,806 --> 00:04:29,746
它的高度 并且使用它 

171
00:04:29,746 --> 00:04:31,586
来使你的界面适应键盘

172
00:04:32,456 --> 00:04:33,446
那么 我们来看几种 

173
00:04:33,446 --> 00:04:34,646
不同的界面布局 

174
00:04:35,276 --> 00:04:36,576
我们从不会滚动的 

175
00:04:36,576 --> 00:04:37,206
界面开始

176
00:04:38,126 --> 00:04:40,496
静止的界面一般是 

177
00:04:40,496 --> 00:04:41,726
一些文字视图 或者是 

178
00:04:41,726 --> 00:04:43,536
一个按钮 用户不用 

179
00:04:43,536 --> 00:04:45,206
去移来移去就能 

180
00:04:45,206 --> 00:04:46,866
看到你的界面的

181
00:04:46,866 --> 00:04:47,136
全部内容 

182
00:04:47,636 --> 00:04:48,616
但你依然会希望它

183
00:04:48,616 --> 00:04:49,956
在任何键盘的情况下都看起来整洁 

184
00:04:50,836 --> 00:04:52,226
这种情况下 举个例子 

185
00:04:52,446 --> 00:04:54,716
我们有五个文本框 

186
00:04:54,716 --> 00:04:56,046
它们由 UI Layout Guides

187
00:04:56,046 --> 00:04:57,576
绑定在一起作为空格存在 

188
00:04:58,236 --> 00:04:59,246
在界面的顶部 

189
00:04:59,246 --> 00:05:01,116
使用了安全区域边界插入

190
00:04:59,246 --> 00:05:01,116
使用了安全区域边界插入

191
00:05:01,596 --> 00:05:03,206
而在底部

192
00:05:03,206 --> 00:05:04,776
我们等一下会谈到 

193
00:05:05,056 --> 00:05:06,446
这些空格会 

194
00:05:06,476 --> 00:05:08,156
因为不同键盘而改变大小 

195
00:05:08,156 --> 00:05:10,446
所以用户可以一直看到 

196
00:05:10,446 --> 00:05:11,816
全部的五个 

197
00:05:12,146 --> 00:05:12,706
文本框

198
00:05:13,876 --> 00:05:15,286
那么 我们是怎么做到的呢

199
00:05:15,676 --> 00:05:17,046
我们创建了一个自定义的

200
00:05:17,046 --> 00:05:18,676
有高度限制的 UILayoutGuide 

201
00:05:18,676 --> 00:05:20,446
保存下来 

202
00:05:20,446 --> 00:05:21,546
方便我们以后调整 

203
00:05:22,036 --> 00:05:25,676
这个 Layout Guide 与

204
00:05:25,676 --> 00:05:27,576
你的页面底部的 

205
00:05:27,576 --> 00:05:28,446
安全区域 Layout Guide 绑定

206
00:05:29,166 --> 00:05:31,026
然后当键盘出现的时候 

207
00:05:31,176 --> 00:05:32,556
这个 Layout Guide 的顶部应该和 

208
00:05:32,556 --> 00:05:34,316
你希望出现在键盘上方

209
00:05:34,316 --> 00:05:35,636
的空格或界面的底部

210
00:05:37,256 --> 00:05:37,696
绑定 

211
00:05:38,926 --> 00:05:40,176
当你完成了这些 

212
00:05:40,176 --> 00:05:41,746
你就可以在 

213
00:05:41,746 --> 00:05:42,656
确定键盘可见之后完成高度转换 

214
00:05:42,656 --> 00:05:44,626
简单地将 

215
00:05:44,626 --> 00:05:46,036
你所保存的高度限制 

216
00:05:46,366 --> 00:05:47,406
设定到键盘高度上

217
00:05:48,266 --> 00:05:49,426
如果把它放入 

218
00:05:49,426 --> 00:05:51,256
视图动画块 如果需要

219
00:05:51,256 --> 00:05:52,266
可以加上一个调用界面

220
00:05:52,266 --> 00:05:53,626
你就能在刚才看到的

221
00:05:53,626 --> 00:05:55,226
不同的键盘之间 获得一个酷炫的

222
00:05:55,226 --> 00:05:55,746
小动画

223
00:05:56,706 --> 00:05:58,516
然而 更常见的是

224
00:05:58,606 --> 00:05:59,626
滚动界面 

225
00:06:00,356 --> 00:06:01,666
你的布局嵌入在滚动 

226
00:06:01,666 --> 00:06:02,956
界面中 使得用户可以 

227
00:06:02,956 --> 00:06:04,556
在不同界面中移动

228
00:06:04,556 --> 00:06:05,336
来看到他们想看

229
00:06:05,336 --> 00:06:05,646
的内容 

230
00:06:06,536 --> 00:06:07,446
在我们的这个例子中 在我们的

231
00:06:07,526 --> 00:06:08,746
Cat Chat App 里 我们用到了 

232
00:06:08,746 --> 00:06:09,616
这个会话视图控制器

233
00:06:10,206 --> 00:06:11,076
我们希望确保 

234
00:06:11,076 --> 00:06:11,936
你能够在任何时候都可以滚动查看 

235
00:06:11,936 --> 00:06:13,746
整个对话 

236
00:06:14,536 --> 00:06:16,156
所以 我们就要保证 

237
00:06:16,156 --> 00:06:18,086
调整表格视图底部 

238
00:06:18,086 --> 00:06:21,056
使你能够看到整个的 

239
00:06:21,056 --> 00:06:22,296
对话内容 

240
00:06:23,246 --> 00:06:24,226
那么 要怎么做到呢 

241
00:06:24,906 --> 00:06:26,276
与刚才方法非常相似 

242
00:06:26,276 --> 00:06:27,316
但是不那么复杂

243
00:06:27,616 --> 00:06:28,326
你只需要保证 

244
00:06:28,326 --> 00:06:30,356
键盘可见 然后 

245
00:06:30,356 --> 00:06:31,666
调整框架 得到你的合适的 

246
00:06:31,666 --> 00:06:33,646
高度 之后把内容 

247
00:06:33,646 --> 00:06:34,976
正确地插入滚动界面就可以了

248
00:06:35,206 --> 00:06:36,666
这就是交叉部分的 

249
00:06:36,666 --> 00:06:38,096
有用之处 因为如果你的 

250
00:06:38,096 --> 00:06:39,356
滚动界面不会 

251
00:06:39,356 --> 00:06:40,976
占满整个屏幕 

252
00:06:40,976 --> 00:06:42,256
你只需要补上 

253
00:06:42,256 --> 00:06:43,266
键盘覆盖住的

254
00:06:43,266 --> 00:06:43,716
那部分 

255
00:06:44,766 --> 00:06:46,436
最后 在你调整了

256
00:06:46,536 --> 00:06:48,246
滚动插页之后

257
00:06:48,246 --> 00:06:49,296
你依然需要处理

258
00:06:49,296 --> 00:06:49,716
内容的滚动

259
00:06:50,766 --> 00:06:52,076
在刚才的例子中 我们 

260
00:06:52,076 --> 00:06:53,646
实际上使用了一个 UITableViewController

261
00:06:53,646 --> 00:06:55,806
它使整个过程更加容易 

262
00:06:56,436 --> 00:06:58,026
因为它实际上帮你设置了插入内容 

263
00:06:58,026 --> 00:06:59,886
而你所要做的就是 

264
00:06:59,886 --> 00:07:01,426
滚动内容 这样就 

265
00:06:59,886 --> 00:07:01,426
滚动内容 这样就 

266
00:07:01,426 --> 00:07:01,766
很方便了

267
00:07:01,766 --> 00:07:03,076
在这个例子中 我们有一个表格视图 

268
00:07:03,076 --> 00:07:05,256
而我们希望最新的 

269
00:07:05,256 --> 00:07:06,346
部分恰好出现在 

270
00:07:06,346 --> 00:07:06,866
键盘上方

271
00:07:07,236 --> 00:07:08,416
因此 我们把最下面的单元

272
00:07:08,796 --> 00:07:10,426
滚动到我们插入的

273
00:07:10,426 --> 00:07:10,636
界面的底部 

274
00:07:11,576 --> 00:07:13,396
这样就可以做出相应的调整 

275
00:07:13,396 --> 00:07:14,326
来适应界面中的键盘

276
00:07:14,806 --> 00:07:16,056
现在 我们要讨论一下如何 

277
00:07:16,056 --> 00:07:17,486
用一个输入辅助视图 

278
00:07:17,486 --> 00:07:18,196
扩展键盘 

279
00:07:19,016 --> 00:07:21,216
输入辅助视图是一个 

280
00:07:21,216 --> 00:07:22,386
在键盘上方的视图 

281
00:07:22,446 --> 00:07:24,086
这个例子中 它是一个文本视图

282
00:07:24,086 --> 00:07:24,436
和一个按钮 

283
00:07:25,126 --> 00:07:26,356
它也可以是一个工具栏 

284
00:07:26,356 --> 00:07:27,356
包括一些导航按钮

285
00:07:27,486 --> 00:07:28,976
它也可以是一排按钮

286
00:07:29,116 --> 00:07:31,046
它也可以是一些有趣的 

287
00:07:31,286 --> 00:07:32,346
小照片什么的 

288
00:07:32,346 --> 00:07:33,526
你可以把任何你想放的东西放上去

289
00:07:33,526 --> 00:07:35,056
因为它只是一个视图而已 

290
00:07:36,346 --> 00:07:37,576
那么如何把它加到

291
00:07:37,576 --> 00:07:38,066
键盘上呢 

292
00:07:38,276 --> 00:07:39,506
在我们的 

293
00:07:39,506 --> 00:07:41,296
对话视图控制器中 

294
00:07:41,346 --> 00:07:42,846
有一个输入辅助视图 

295
00:07:43,646 --> 00:07:45,306
想要在键盘上

296
00:07:45,306 --> 00:07:46,726
显示输入辅助

297
00:07:46,726 --> 00:07:47,576
视图的主视图

298
00:07:47,576 --> 00:07:48,396
控制器

299
00:07:49,226 --> 00:07:50,146
然后 我们通过在

300
00:07:50,146 --> 00:07:51,836
我们的对话视图控制器中 

301
00:07:51,836 --> 00:07:53,116
让 canBecomeFirstResponder 

302
00:07:53,116 --> 00:07:54,896
返回真 以使它成为响应链

303
00:07:54,896 --> 00:07:55,526
的一部分

304
00:07:56,446 --> 00:07:58,566
然后 使用一个自定义视图 

305
00:07:58,566 --> 00:08:00,116
或一个自定义视图控制器 

306
00:07:58,566 --> 00:08:00,116
或一个自定义视图控制器 

307
00:08:00,116 --> 00:08:01,376
取决于你想对这个视图做 

308
00:08:01,376 --> 00:08:03,276
什么操作 

309
00:08:03,276 --> 00:08:04,506
你覆盖掉相应的部分 

310
00:08:04,506 --> 00:08:06,006
如果你使用视图

311
00:08:06,006 --> 00:08:06,676
就覆盖 inputAccessoryView

312
00:08:07,106 --> 00:08:08,536
如果你使用视图控制器

313
00:08:08,686 --> 00:08:09,226
就覆盖

314
00:08:09,226 --> 00:08:09,666
inputAccessoryViewController

315
00:08:10,346 --> 00:08:12,926
这样你所添加的输入辅助视图 

316
00:08:12,926 --> 00:08:15,416
会被列入 

317
00:08:15,416 --> 00:08:16,886
框架更改通知的考虑范围 

318
00:08:17,306 --> 00:08:18,886
如果这个输入辅助视图的高度 

319
00:08:18,886 --> 00:08:20,846
有所改变 你就会收到 

320
00:08:20,846 --> 00:08:22,086
一个框架

321
00:08:22,086 --> 00:08:23,056
更改通知 

322
00:08:23,416 --> 00:08:24,716
这样 你就可以在 

323
00:08:24,716 --> 00:08:27,566
这个键盘所在的 App 中处理它 

324
00:08:27,956 --> 00:08:29,026
我们下面来聊一聊关于如何创造一个 

325
00:08:29,026 --> 00:08:30,586
动态的高度可变的 

326
00:08:30,586 --> 00:08:31,716
输入辅助视图 因为这是 

327
00:08:31,716 --> 00:08:32,566
很多人都想知道如何 

328
00:08:32,566 --> 00:08:33,905
去做的一件事 

329
00:08:34,446 --> 00:08:35,996
当你这样做的时候 

330
00:08:35,996 --> 00:08:37,275
这就会像一个可以自己调节大小的 

331
00:08:37,275 --> 00:08:38,546
表格视图 在其中你可以 

332
00:08:38,546 --> 00:08:39,635
应付任何种类的 

333
00:08:39,635 --> 00:08:41,456
可能变换大小的视图 并用它来 

334
00:08:41,456 --> 00:08:43,186
定义视图的高度

335
00:08:43,236 --> 00:08:44,526
你可以将这种方法用于 

336
00:08:44,526 --> 00:08:45,706
多种视图 但在这个例子中 

337
00:08:45,706 --> 00:08:48,856
我们将用一个 UI 文本界面来展示 

338
00:08:48,856 --> 00:08:50,186
要怎么做

339
00:08:50,646 --> 00:08:52,226
如果可以的话

340
00:08:52,226 --> 00:08:54,246
你可以把它固定在

341
00:08:55,316 --> 00:08:57,226
内容界面的顶部或者底部

342
00:08:57,226 --> 00:08:57,736
并且留出一些空间

343
00:08:58,296 --> 00:08:59,116
如果中间还有其他界面的话 

344
00:08:59,116 --> 00:09:00,446
只要高度被定义好了 

345
00:08:59,116 --> 00:09:00,446
只要高度被定义好了 

346
00:09:00,446 --> 00:09:01,596
其实没有太大问题

347
00:09:01,596 --> 00:09:02,616
它与可以自动调整大小的 

348
00:09:02,616 --> 00:09:04,036
表格视图单元很相似 

349
00:09:04,666 --> 00:09:07,716
此时 你需要使用 

350
00:09:07,716 --> 00:09:09,216
或是定义你的成长视图的

351
00:09:09,216 --> 00:09:10,826
intrinsicContentSize 这样

352
00:09:10,916 --> 00:09:12,296
你的输入辅助视图才会知道

353
00:09:12,296 --> 00:09:14,776
它需要什么高度

354
00:09:14,996 --> 00:09:16,486
在文本视图中

355
00:09:16,876 --> 00:09:18,016
为了使它有自己的 

356
00:09:18,016 --> 00:09:19,466
intrinsicContentSize 而使得

357
00:09:19,466 --> 00:09:21,366
你不用再去定义 

358
00:09:21,366 --> 00:09:22,696
你就需要告诉它的文本容器

359
00:09:22,696 --> 00:09:23,976
让它的高度跟着 

360
00:09:23,976 --> 00:09:24,546
文本视图而变化 

361
00:09:25,316 --> 00:09:26,976
同时你还需要禁用 

362
00:09:26,976 --> 00:09:27,586
滚动

363
00:09:28,146 --> 00:09:29,646
这样 文本视图就会依据

364
00:09:29,646 --> 00:09:30,516
视图中文本的多少而 

365
00:09:30,516 --> 00:09:32,966
定义它自己的内在的

366
00:09:32,966 --> 00:09:34,486
intrinsicContentSize

367
00:09:34,486 --> 00:09:36,266
你就会得到像这样

368
00:09:37,556 --> 00:09:37,796
的情况 

369
00:09:37,796 --> 00:09:39,546
所以 这是你 

370
00:09:39,546 --> 00:09:40,616
可能实际上需要 

371
00:09:40,616 --> 00:09:42,396
在输入辅助界面覆盖

372
00:09:42,396 --> 00:09:43,686
intrinsicContentSize 的几种情形之一

373
00:09:44,406 --> 00:09:45,826
为了完成这样的效果 

374
00:09:45,826 --> 00:09:47,056
你恐怕不想 

375
00:09:47,056 --> 00:09:48,026
把它弄的太过复杂 

376
00:09:48,026 --> 00:09:50,036
其实它并没有那么难 

377
00:09:50,036 --> 00:09:51,636
当键盘可见时 抓取它的边界值 

378
00:09:51,636 --> 00:09:52,556
这将是你的原始 

379
00:09:52,556 --> 00:09:53,526
边界 然后我们会确保 

380
00:09:53,526 --> 00:09:54,526
你的宽度值是正确的 

381
00:09:55,156 --> 00:09:56,086
而这个宽度值已经

382
00:09:56,086 --> 00:09:56,626
由系统给出了 

383
00:09:57,466 --> 00:09:58,886
对我来说 我一般习惯 

384
00:09:58,886 --> 00:10:00,086
确保视图有一个 

385
00:09:58,886 --> 00:10:00,086
确保视图有一个 

386
00:10:00,086 --> 00:10:02,276
最小高度 所以我先把它设置为 

387
00:10:02,276 --> 00:10:03,376
一个最小高度值 

388
00:10:03,376 --> 00:10:05,126
以防万一 一切其他 

389
00:10:05,126 --> 00:10:06,686
可能出现的情况都是“万一” 

390
00:10:07,236 --> 00:10:09,676
然后 如果我的扩展视图的

391
00:10:09,676 --> 00:10:11,096
高度是正确的 我就用

392
00:10:11,096 --> 00:10:12,496
这个高度加上 

393
00:10:12,496 --> 00:10:14,126
我之前定义的 kVerticalPadding 

394
00:10:14,126 --> 00:10:15,126
来定义视图的

395
00:10:15,126 --> 00:10:15,416
新高度 

396
00:10:16,216 --> 00:10:17,496
我同时会有一个最大高度 

397
00:10:17,496 --> 00:10:18,606
因为我每次 

398
00:10:18,606 --> 00:10:19,886
实际上给我的猫说的话 

399
00:10:19,886 --> 00:10:20,376
就那么多

400
00:10:20,886 --> 00:10:22,066
猫不会有很长的集中注意力

401
00:10:22,066 --> 00:10:22,526
的时间 

402
00:10:23,206 --> 00:10:26,126
所以 在某个时刻 我会停止

403
00:10:26,126 --> 00:10:27,556
在那个时候 你只需要返回 

404
00:10:27,866 --> 00:10:29,346
你的新的 intrinsicContentSize

405
00:10:29,576 --> 00:10:31,136
而你的输入辅助视图 

406
00:10:31,136 --> 00:10:31,576
将会随之变化 

407
00:10:33,086 --> 00:10:35,646
好的 那么我们已经讨论过了 

408
00:10:35,646 --> 00:10:36,786
如何将键盘整合到 

409
00:10:36,786 --> 00:10:38,326
你的布局中 以及如何添加 

410
00:10:38,326 --> 00:10:39,836
一个动态的输入辅助视图 

411
00:10:40,576 --> 00:10:41,976
现在 我们有了一个我可以用来 

412
00:10:41,976 --> 00:10:44,076
跟我的猫聊天的 App  并且我可以 

413
00:10:44,076 --> 00:10:45,226
一次说好几句话 

414
00:10:45,226 --> 00:10:46,216
这很棒 

415
00:10:46,866 --> 00:10:47,996
我的猫不需要很多很多词 

416
00:10:47,996 --> 00:10:50,216
它对我的要求也 

417
00:10:50,216 --> 00:10:50,836
非常明确 

418
00:10:51,436 --> 00:10:52,756
但是有很多很酷的事情 

419
00:10:52,756 --> 00:10:54,546
可以让我们把这个 App 

420
00:10:54,546 --> 00:10:56,216
变得更有趣

421
00:10:56,736 --> 00:10:57,696
现在让我把话筒 

422
00:10:57,696 --> 00:10:58,666
给 Shuchen 她将会 

423
00:10:58,666 --> 00:10:59,846
告诉你们如何 

424
00:10:59,846 --> 00:11:00,976
使你们的 App 变的更赞 

425
00:10:59,846 --> 00:11:00,976
使你们的 App 变的更赞 

426
00:11:01,516 --> 00:11:09,676
[掌声]

427
00:11:10,176 --> 00:11:12,276
&gt;&gt; 大家好

428
00:11:12,276 --> 00:11:14,676
在 iOS 中 我们提供了很多

429
00:11:14,756 --> 00:11:17,146
有趣的产品让你可以 

430
00:11:17,146 --> 00:11:18,776
提升用户的文本

431
00:11:18,776 --> 00:11:19,356
输入体验 

432
00:11:19,926 --> 00:11:20,916
我叫 Shuchen Li

433
00:11:21,536 --> 00:11:23,256
我将谈到它们其中的一些 

434
00:11:23,726 --> 00:11:26,056
我希望在这之后你们可以 

435
00:11:26,326 --> 00:11:28,526
运用它们 为你的 App 带来 

436
00:11:28,526 --> 00:11:29,666
更赞的使用体验 

437
00:11:30,226 --> 00:11:31,766
那我们就开始吧 

438
00:11:33,496 --> 00:11:35,106
首先 请允许我问

439
00:11:35,106 --> 00:11:35,576
一个问题 

440
00:11:35,636 --> 00:11:37,766
在座的有谁会说

441
00:11:37,766 --> 00:11:37,956
多种语言

442
00:11:38,566 --> 00:11:39,356
哦 我看到有一些 

443
00:11:40,246 --> 00:11:43,666
我也是 你们是否遇到过

444
00:11:43,666 --> 00:11:45,816
这样的情形 就是需要

445
00:11:45,816 --> 00:11:46,536
一直切换键盘

446
00:11:48,136 --> 00:11:49,276
我看到这边有一个 

447
00:11:49,276 --> 00:11:50,786
这边也有几个人

448
00:11:51,656 --> 00:11:53,696
很好 我也很头疼这个问题 

449
00:11:53,696 --> 00:11:56,446
我跟我的上司交谈需要用 

450
00:11:56,566 --> 00:11:57,236
一种键盘

451
00:11:57,666 --> 00:11:58,846
我跟我妈妈交流需要用

452
00:11:58,846 --> 00:11:59,256
另外一种键盘 

453
00:11:59,336 --> 00:12:00,776
我不得不一直在

454
00:11:59,336 --> 00:12:00,776
我不得不一直在

455
00:12:00,776 --> 00:12:00,996
两者之间切换 

456
00:12:01,636 --> 00:12:04,226
如果你的 App 知道你应该用 

457
00:12:04,226 --> 00:12:04,996
哪个键盘会怎么样呢 

458
00:12:05,706 --> 00:12:07,176
如果当你的键盘出现时 

459
00:12:07,356 --> 00:12:08,706
它就是你想要的

460
00:12:09,236 --> 00:12:09,306
那个键盘呢

461
00:12:10,036 --> 00:12:12,546
实际上 你可能听说过

462
00:12:12,976 --> 00:12:14,626
在我们的“信息” App 中 

463
00:12:14,626 --> 00:12:14,866
它就可以为你这样做

464
00:12:14,866 --> 00:12:17,786
我跟 John 交流时

465
00:12:17,786 --> 00:12:18,156
使用英文键盘 

466
00:12:19,196 --> 00:12:21,346
我跟 Vivian 交流时用的是 

467
00:12:21,346 --> 00:12:22,076
中文键盘 

468
00:12:23,066 --> 00:12:24,216
而“信息”知道我要用的是

469
00:12:24,216 --> 00:12:24,646
哪种键盘

470
00:12:25,616 --> 00:12:27,816
这是如何做到的

471
00:12:28,026 --> 00:12:32,676
在 iOS 中 我们可以把 

472
00:12:32,676 --> 00:12:34,626
一个特殊的标识符 叫做 

473
00:12:34,626 --> 00:12:37,086
文本输入上下文标识符 和你的

474
00:12:37,086 --> 00:12:38,216
文本视图联系在一起 

475
00:12:38,406 --> 00:12:40,106
事实上 我们可以把它和 

476
00:12:40,316 --> 00:12:41,846
所有你的 UI 响应器联系起来

477
00:12:42,196 --> 00:12:43,816
也就是说你也可以对 

478
00:12:43,816 --> 00:12:47,216
你的视图控制器这样做 

479
00:12:48,736 --> 00:12:50,576
这样 当我们看到你 

480
00:12:50,576 --> 00:12:52,906
设定了一个标识符时

481
00:12:53,146 --> 00:12:54,816
不管你是否是一个响应器

482
00:12:54,816 --> 00:12:56,116
我们都会把它 

483
00:12:56,116 --> 00:12:58,076
自动跟用户选择的键盘联系起来

484
00:12:58,076 --> 00:13:00,406
然后把它保存为

485
00:12:58,076 --> 00:13:00,406
然后把它保存为

486
00:13:00,406 --> 00:13:01,926
用户默认设置 

487
00:13:02,466 --> 00:13:04,306
下次 当你是一个 

488
00:13:04,306 --> 00:13:05,606
响应器的时候 或成为首次 

489
00:13:05,606 --> 00:13:07,566
响应器的时候 这个键盘将会被 

490
00:13:07,566 --> 00:13:08,606
自动检索出来 

491
00:13:09,366 --> 00:13:10,966
听起来很复杂 

492
00:13:11,736 --> 00:13:13,336
其实你所要担心的唯一的事情 

493
00:13:13,336 --> 00:13:15,046
就是去找到一个好的

494
00:13:15,046 --> 00:13:15,596
唯一标识符 

495
00:13:16,456 --> 00:13:17,196
什么算是好的

496
00:13:17,196 --> 00:13:17,846
唯一标识符呢

497
00:13:18,116 --> 00:13:21,076
比方说 你的用户 ID 

498
00:13:21,076 --> 00:13:23,116
对话 ID  群 ID

499
00:13:23,716 --> 00:13:28,776
都是很好的例子 

500
00:13:28,826 --> 00:13:31,726
那么 你或许会问 我把这些 

501
00:13:31,826 --> 00:13:33,626
唯一标识符放哪呢

502
00:13:33,916 --> 00:13:35,476
正如你提到的 没错 我可以在 

503
00:13:35,476 --> 00:13:36,606
任何 UI 响应器中定义它

504
00:13:36,606 --> 00:13:37,926
我能在任何地方定义它吗

505
00:13:37,926 --> 00:13:38,636
答案是不

506
00:13:39,426 --> 00:13:40,626
那么 让我们看看我们要怎么放置它 

507
00:13:41,406 --> 00:13:43,976
让我们回忆一下 CatChat App

508
00:13:44,196 --> 00:13:45,516
当我们拉出键盘时 

509
00:13:46,236 --> 00:13:48,036
文本视图成为了 

510
00:13:48,036 --> 00:13:48,486
第一个响应器

511
00:13:49,176 --> 00:13:50,546
然后在响应链中的下一环 

512
00:13:50,546 --> 00:13:52,576
就是我们的 

513
00:13:52,576 --> 00:13:53,926
对话视图控制器 

514
00:13:54,726 --> 00:13:56,086
然后是导航

515
00:13:56,086 --> 00:13:56,486
控制器 

516
00:13:57,036 --> 00:14:02,806
于是 在 iOS 中 当我们为你的 

517
00:13:57,036 --> 00:14:02,806
于是 在 iOS 中 当我们为你的 

518
00:14:02,806 --> 00:14:05,106
响应器寻找唯一标识符时

519
00:14:05,106 --> 00:14:07,186
我们会搜索 

520
00:14:07,186 --> 00:14:08,956
响应链来寻找 

521
00:14:08,956 --> 00:14:10,546
其中的第一环 

522
00:14:10,946 --> 00:14:13,466
在我们的这个 App 中 我们在 

523
00:14:13,466 --> 00:14:14,546
对话视图控制器中控制 

524
00:14:14,546 --> 00:14:15,606
全部的对话

525
00:14:16,186 --> 00:14:16,896
所以我们把标识符放在那里 

526
00:14:17,816 --> 00:14:19,966
这样 你就不必 

527
00:14:20,146 --> 00:14:22,206
想办法把你的标识符 

528
00:14:22,206 --> 00:14:24,646
传给你的文本界面或其他 

529
00:14:24,646 --> 00:14:25,956
你希望传到

530
00:14:25,956 --> 00:14:26,636
的地方

531
00:14:27,136 --> 00:14:28,296
你只要把它放在 

532
00:14:28,296 --> 00:14:29,526
你处理所有对话的地方 

533
00:14:30,646 --> 00:14:31,666
我们来看看如何把这些 

534
00:14:31,666 --> 00:14:32,376
翻译成代码 

535
00:14:32,886 --> 00:14:35,916
在我们的对话视图控制器中 

536
00:14:35,916 --> 00:14:37,856
我们把 Guider

537
00:14:37,856 --> 00:14:39,446
重写成了

538
00:14:39,446 --> 00:14:40,456
textInputContextIdentifier

539
00:14:41,016 --> 00:14:41,966
你可以看到这个方法

540
00:14:41,966 --> 00:14:42,586
非常简单

541
00:14:42,916 --> 00:14:44,116
它就会返回一个

542
00:14:44,116 --> 00:14:44,676
唯一标识符 

543
00:14:45,386 --> 00:14:48,076
在我们的这个例子中 我们返回 

544
00:14:48,076 --> 00:14:49,606
收件人 ID

545
00:14:51,016 --> 00:14:53,716
现在 Kasia 会为你们展示 

546
00:14:53,716 --> 00:14:55,786
一个 Demo 来看看我们是如何让我们的 

547
00:14:55,886 --> 00:14:56,796
App 拥有记忆的 

548
00:14:57,366 --> 00:14:57,706
Kasia

549
00:14:58,516 --> 00:15:03,306
[掌声]

550
00:14:58,516 --> 00:15:03,306
[掌声]

551
00:15:03,806 --> 00:15:04,686
&gt;&gt; 你们可能不记得我了

552
00:15:04,836 --> 00:15:05,646
离我上次见到你们已经 

553
00:15:05,696 --> 00:15:06,196
有一段时间了

554
00:15:06,726 --> 00:15:09,246
但 Kasia 还是在搞键盘

555
00:15:09,726 --> 00:15:13,896
好的 首先 这是我们的 

556
00:15:13,896 --> 00:15:15,006
CatChat App 就是我们

557
00:15:15,006 --> 00:15:15,746
今天看到的那个

558
00:15:16,416 --> 00:15:18,006
我有一些宠物 

559
00:15:18,006 --> 00:15:19,116
它们说不一样的语言 

560
00:15:19,416 --> 00:15:20,786
这是我的 Misiu

561
00:15:21,236 --> 00:15:22,316
它说波兰语 

562
00:15:22,316 --> 00:15:23,186
实际上我小时候听说 

563
00:15:23,186 --> 00:15:24,336
所有的猫说的

564
00:15:24,336 --> 00:15:24,796
都是波兰语 

565
00:15:24,796 --> 00:15:25,876
所以 对它们说 

566
00:15:25,876 --> 00:15:26,736
波兰语很重要

567
00:15:27,556 --> 00:15:29,256
但是 作为一个英语母语的人 

568
00:15:29,256 --> 00:15:30,666
我的默认键盘是英语 

569
00:15:31,196 --> 00:15:32,116
如果我直接把它换成 

570
00:15:32,116 --> 00:15:34,486
波兰语键盘然后说“你好” 

571
00:15:35,186 --> 00:15:36,306
然后看看会发生什么

572
00:15:36,536 --> 00:15:42,666
然后你看 它今天 

573
00:15:42,666 --> 00:15:43,106
过得怎么样 

574
00:15:43,106 --> 00:15:44,876
这是我在说“嘿 今天过得

575
00:15:44,876 --> 00:15:45,256
怎么样”

576
00:15:45,566 --> 00:15:46,796
它说要吃的

577
00:15:47,516 --> 00:15:48,466
这很让我惊讶 

578
00:15:49,476 --> 00:15:51,226
那么 我们来看看 

579
00:15:51,486 --> 00:15:53,106
Shuchen 的狗 Jiwang

580
00:15:54,546 --> 00:15:56,166
Jiwang 想现在出去 

581
00:15:56,166 --> 00:15:57,496
遛弯 但我 

582
00:15:57,496 --> 00:15:58,366
现在没空

583
00:15:58,816 --> 00:16:01,056
然而 它说中文 所以 

584
00:15:58,816 --> 00:16:01,056
然而 它说中文 所以 

585
00:16:01,056 --> 00:16:01,966
我要把键盘再次 

586
00:16:01,966 --> 00:16:03,206
更换成中文拼音 

587
00:16:03,206 --> 00:16:05,426
然后说“我现在

588
00:16:05,426 --> 00:16:05,976
没有时间 

589
00:16:06,676 --> 00:16:07,346
请耐心等待“

590
00:16:08,326 --> 00:16:10,146
狗狗的回复 

591
00:16:10,506 --> 00:16:11,946
有时候会比猫 

592
00:16:11,946 --> 00:16:12,826
友善一点 

593
00:16:13,236 --> 00:16:14,916
所以 现在 这是我第一次 

594
00:16:14,916 --> 00:16:16,086
使用这个 App 同时跟它们 

595
00:16:16,086 --> 00:16:16,426
两个交谈

596
00:16:16,926 --> 00:16:18,106
如果我回到与 Misiu 的 

597
00:16:18,106 --> 00:16:19,686
对话 波兰语 

598
00:16:19,686 --> 00:16:20,586
键盘还在 

599
00:16:20,966 --> 00:16:23,156
如果我回到这里 我还会 

600
00:16:23,156 --> 00:16:24,996
看到中文键盘 

601
00:16:25,326 --> 00:16:26,076
所以 我就不用一直 

602
00:16:26,136 --> 00:16:27,726
切换键盘 取决于 

603
00:16:27,726 --> 00:16:28,886
我在进行的是什么对话

604
00:16:29,306 --> 00:16:30,516
要实现这一点

605
00:16:30,516 --> 00:16:32,356
要做的事 就是 

606
00:16:32,566 --> 00:16:35,526
设置 textInputContextIdentifier

607
00:16:35,526 --> 00:16:37,316
正如 Shuchen 说的

608
00:16:37,316 --> 00:16:39,336
把它联系到每个对话的 

609
00:16:39,336 --> 00:16:40,116
唯一 ID 

610
00:16:40,516 --> 00:16:42,546
如果我现在切换语言 

611
00:16:42,546 --> 00:16:43,416
我的 App 无须知道我在用的 

612
00:16:43,416 --> 00:16:44,156
是什么语言 

613
00:16:44,476 --> 00:16:45,426
它只需要知道这是 

614
00:16:45,426 --> 00:16:47,166
哪一个对话 

615
00:16:47,166 --> 00:16:49,146
而我们会为你设置好 

616
00:16:49,146 --> 00:16:50,226
正确的键盘 

617
00:16:50,586 --> 00:16:50,653
就是这样

618
00:16:51,016 --> 00:16:53,000
[掌声]

619
00:16:59,426 --> 00:17:02,336
好的 有请 Shuchen

620
00:16:59,426 --> 00:17:02,336
好的 有请 Shuchen

621
00:17:03,776 --> 00:17:05,185
&gt;&gt; 谢谢 Kasia

622
00:17:06,116 --> 00:17:07,205
相当实用的功能 对吧 

623
00:17:07,376 --> 00:17:08,915
它会省却你 

624
00:17:08,915 --> 00:17:09,736
不少的麻烦

625
00:17:09,736 --> 00:17:10,205
我相信这一点

626
00:17:10,205 --> 00:17:14,046
所以 在整个过程中 

627
00:17:14,046 --> 00:17:16,136
你可能也注意到 你不需要 

628
00:17:16,136 --> 00:17:17,736
关心用户选择的

629
00:17:17,736 --> 00:17:18,546
是什么键盘 

630
00:17:18,945 --> 00:17:19,675
你不需要知道

631
00:17:20,116 --> 00:17:21,266
你需要担心的唯一一件事就是 

632
00:17:21,266 --> 00:17:23,116
你的唯一标识符 

633
00:17:23,175 --> 00:17:24,616
是否设置好了 

634
00:17:24,616 --> 00:17:26,516
现在你也许要问 如果你 

635
00:17:26,516 --> 00:17:28,316
想要知道用户在用的是什么语言 

636
00:17:28,386 --> 00:17:29,216
怎么办 

637
00:17:30,106 --> 00:17:31,836
如果你想为一个特定的语言 

638
00:17:31,836 --> 00:17:33,986
开发一个特别的

639
00:17:33,986 --> 00:17:34,466
功能呢

640
00:17:35,536 --> 00:17:37,616
现在你可能需要查看

641
00:17:37,616 --> 00:17:38,496
UITextInputMode

642
00:17:39,136 --> 00:17:40,896
在 UITextInputMode 中 你可以 

643
00:17:40,896 --> 00:17:42,726
轻松找到用户的 

644
00:17:42,726 --> 00:17:43,756
主要语言

645
00:17:44,956 --> 00:17:47,156
这样 你就可以 

646
00:17:47,156 --> 00:17:48,516
比如 开发你自己的语言的 

647
00:17:48,516 --> 00:17:52,456
拼写检查器 或者 

648
00:17:52,456 --> 00:17:54,136
你可以针对你希望 App 

649
00:17:54,136 --> 00:17:55,236
能够支持的某种语言 

650
00:17:55,236 --> 00:17:56,846
开发其他特别的功能

651
00:17:56,846 --> 00:17:57,886
或者我们以后 

652
00:17:57,886 --> 00:17:59,536
有可能会支持的

653
00:17:59,706 --> 00:18:01,316
语言 

654
00:17:59,706 --> 00:18:01,316
语言 

655
00:18:02,146 --> 00:18:05,936
下一步 我们已经为 

656
00:18:05,936 --> 00:18:08,916
准确快速输入文本而 

657
00:18:09,376 --> 00:18:10,726
做出了很多努力

658
00:18:11,646 --> 00:18:13,286
我们可以通过 

659
00:18:13,286 --> 00:18:14,786
语境滚动预测而使其进一步 

660
00:18:16,516 --> 00:18:19,516
同时 我们把用户的个性化信息

661
00:18:19,666 --> 00:18:21,506
考虑进来

662
00:18:23,016 --> 00:18:25,806
在 iOS 4 中 我们推出了 

663
00:18:26,046 --> 00:18:26,626
不同种类的键盘

664
00:18:27,566 --> 00:18:29,626
有了不同种类的键盘 

665
00:18:29,626 --> 00:18:31,786
比如电子邮件键盘

666
00:18:31,786 --> 00:18:32,216
和 URL 键盘

667
00:18:32,216 --> 00:18:33,436
如果你在输入一个邮件 

668
00:18:33,646 --> 00:18:36,116
地址 就会有 @ 和 .com 按钮

669
00:18:36,116 --> 00:18:38,186
使输入更简便

670
00:18:39,536 --> 00:18:42,586
去年 我们介绍了

671
00:18:43,306 --> 00:18:43,956
UITextContentTypes

672
00:18:44,416 --> 00:18:48,136
UITextContentTypes 是一个 

673
00:18:48,336 --> 00:18:49,706
你可以设置在你的

674
00:18:49,706 --> 00:18:49,926
文本界面中的标签

675
00:18:50,516 --> 00:18:55,056
它会通过这些标签提供 

676
00:18:55,056 --> 00:18:58,906
各种语境预测 

677
00:18:58,906 --> 00:19:02,166
我们来看一个例子

678
00:18:58,906 --> 00:19:02,166
我们来看一个例子

679
00:19:02,166 --> 00:19:04,986
现在  John 想把他的猫 

680
00:19:04,986 --> 00:19:07,606
Penny 加入我们的

681
00:19:07,606 --> 00:19:07,806
CatChat App

682
00:19:08,246 --> 00:19:09,906
这个是 John Appleseed 的猫

683
00:19:10,636 --> 00:19:12,996
从视频中 你可以看到 

684
00:19:13,056 --> 00:19:14,736
实际上 John 根本没有用 

685
00:19:14,736 --> 00:19:15,766
任何字母按钮打字

686
00:19:16,456 --> 00:19:18,426
他只在用 QuickType

687
00:19:18,426 --> 00:19:18,816
栏打字

688
00:19:19,616 --> 00:19:21,986
所有的信息都输入了

689
00:19:23,316 --> 00:19:24,926
现在 John 想要给猫

690
00:19:24,926 --> 00:19:26,056
输入 地址 

691
00:19:27,026 --> 00:19:28,556
这是 John Appleseed 的猫

692
00:19:28,806 --> 00:19:30,416
它就住在 它应该 

693
00:19:30,416 --> 00:19:31,686
住在一个 Apple Store

694
00:19:32,486 --> 00:19:33,046
哪一个

695
00:19:33,776 --> 00:19:35,056
Los Gatos 那个

696
00:19:41,696 --> 00:19:42,926
如果有人不知道的话 

697
00:19:42,926 --> 00:19:44,256
Los Gatos 在西班牙语中

698
00:19:44,256 --> 00:19:44,726
是“猫”的意思 

699
00:19:46,436 --> 00:19:48,006
于是 我们可以看到 John 打开了

700
00:19:49,136 --> 00:19:50,806
地图 搜索 Apple Store 

701
00:19:52,036 --> 00:19:53,246
查看地址

702
00:19:54,056 --> 00:19:55,216
然后回到我们的 

703
00:19:55,216 --> 00:19:55,856
CatChat App

704
00:19:57,176 --> 00:19:59,186
然后你就看到 哈

705
00:19:59,646 --> 00:20:00,356
地址神奇

706
00:19:59,646 --> 00:20:00,356
地址神奇

707
00:20:01,206 --> 00:20:01,786
地出现了

708
00:20:01,786 --> 00:20:03,836
通过用 QuickType 栏

709
00:20:03,836 --> 00:20:06,866
输入 你可以 谢谢

710
00:20:07,796 --> 00:20:08,806
如果我用 Quick Type 栏输入

711
00:20:09,226 --> 00:20:11,196
就可以直接

712
00:20:11,336 --> 00:20:11,816
输入整个地址 

713
00:20:12,626 --> 00:20:15,856
如果你仔细看 你可以看到 

714
00:20:16,226 --> 00:20:16,836
它的来源

715
00:20:17,276 --> 00:20:18,716
在这个例子中 它来自于“地图”

716
00:20:21,276 --> 00:20:24,886
在 iOS 中 我们会整体提取 

717
00:20:24,986 --> 00:20:27,226
所有的用户信息和 

718
00:20:27,226 --> 00:20:29,796
用户活动 并加上 

719
00:20:29,796 --> 00:20:32,036
数据来源 来提高 

720
00:20:32,036 --> 00:20:33,286
用户体验

721
00:20:34,436 --> 00:20:36,436
比如说 我们的个性化键盘 

722
00:20:36,436 --> 00:20:38,966
可以提取姓名 

723
00:20:38,966 --> 00:20:41,106
来构建键盘 

724
00:20:41,106 --> 00:20:42,766
的个性化词库 

725
00:20:44,956 --> 00:20:47,966
另外 还有一件事

726
00:20:47,966 --> 00:20:48,446
我想谈谈 

727
00:20:48,996 --> 00:20:52,046
在这个整个过程中 你的 App 

728
00:20:52,046 --> 00:20:54,086
并不只是一个被动的接收者 

729
00:20:54,986 --> 00:20:57,146
你的 App 可以是一个贡献者

730
00:20:58,326 --> 00:20:59,826
你的 App 可以通过 

731
00:20:59,826 --> 00:21:02,426
NSUserActivity API

732
00:20:59,826 --> 00:21:02,426
NSUserActivity API

733
00:21:02,426 --> 00:21:04,366
共享 App 活动

734
00:21:05,176 --> 00:21:08,316
比如 如果你在

735
00:21:08,396 --> 00:21:09,406
Yelp 上浏览你喜欢的餐厅 

736
00:21:09,406 --> 00:21:12,946
地址就会被 

737
00:21:13,146 --> 00:21:14,626
显示在 QuickType 栏上

738
00:21:14,906 --> 00:21:16,746
如果你正确设置了标签的话

739
00:21:17,286 --> 00:21:19,316
这是否激起了你的兴趣

740
00:21:20,366 --> 00:21:22,606
如果你想了解更多 

741
00:21:22,606 --> 00:21:24,686
不要忘记看去年的视频 

742
00:21:24,776 --> 00:21:27,066
叫做“Increase

743
00:21:27,066 --> 00:21:29,516
Usage of Your App Through

744
00:21:29,796 --> 00:21:31,836
Proactive Suggestion”

745
00:21:33,586 --> 00:21:35,856
今年 我们让它 

746
00:21:36,456 --> 00:21:36,596
更进一步

747
00:21:37,166 --> 00:21:38,726
我们为用户名和密码

748
00:21:38,726 --> 00:21:39,896
增加了一些新的标签 

749
00:21:40,366 --> 00:21:43,726
如果你正确标记了你的登录框的话 

750
00:21:43,726 --> 00:21:45,696
我们会自动地 

751
00:21:45,696 --> 00:21:48,306
为你的 App 建议

752
00:21:48,576 --> 00:21:49,956
用户名和密码 

753
00:21:49,956 --> 00:21:52,136
当然 会帮你填好 

754
00:21:54,536 --> 00:21:56,186
唯一你所要做的是 

755
00:21:56,396 --> 00:21:58,286
如果你正确的设置了标签

756
00:21:58,786 --> 00:22:01,366
这个 API 只有一行 非常简单 

757
00:21:58,786 --> 00:22:01,366
这个 API 只有一行 非常简单 

758
00:22:01,366 --> 00:22:03,546
它可以确保

759
00:22:03,546 --> 00:22:05,376
一些 QuickType

760
00:22:05,376 --> 00:22:06,596
建议能被显示出来

761
00:22:07,616 --> 00:22:10,186
不过这并不是

762
00:22:10,186 --> 00:22:10,496
全部

763
00:22:10,966 --> 00:22:12,776
如果你想确保 

764
00:22:12,776 --> 00:22:15,026
你的信息在你的 App 中 

765
00:22:15,026 --> 00:22:17,746
正确显示 

766
00:22:17,746 --> 00:22:18,916
因为你可能有一个网页 

767
00:22:18,916 --> 00:22:21,186
关联在你的 App 上

768
00:22:21,186 --> 00:22:22,616
你可以查看“Introducing

769
00:22:22,616 --> 00:22:23,836
Password Auto Fill for App”

770
00:22:24,126 --> 00:22:24,496
的视频

771
00:22:24,916 --> 00:22:29,446
下一步 我们要谈到一些 

772
00:22:29,446 --> 00:22:30,206
新的智能

773
00:22:30,256 --> 00:22:33,856
今年 我们为文本视图提出了 

774
00:22:33,856 --> 00:22:37,996
一些新的智能

775
00:22:38,236 --> 00:22:40,126
首先是 SmartQuote

776
00:22:41,176 --> 00:22:43,426
这些是打字机式的引号

777
00:22:44,516 --> 00:22:47,146
它们是直的 

778
00:22:48,406 --> 00:22:49,846
一些人不喜欢 

779
00:22:49,846 --> 00:22:51,776
我也不喜欢

780
00:22:53,436 --> 00:22:55,186
这些是印刷式引号

781
00:22:55,666 --> 00:22:56,136
我很喜欢 

782
00:22:56,206 --> 00:22:57,736
它们是弯的 

783
00:22:58,326 --> 00:22:59,136
更清晰 

784
00:22:59,866 --> 00:23:01,096
并且它们实际上 

785
00:22:59,866 --> 00:23:01,096
并且它们实际上 

786
00:23:01,096 --> 00:23:02,746
在语法上更正确 

787
00:23:02,746 --> 00:23:03,556
从语言的角度来说 

788
00:23:04,076 --> 00:23:06,246
今年 iOS 将 

789
00:23:06,386 --> 00:23:09,386
自动地把你的 

790
00:23:09,386 --> 00:23:11,456
打字机式的引号变成 

791
00:23:11,766 --> 00:23:12,976
印刷式引号

792
00:23:13,516 --> 00:23:19,986
[掌声]

793
00:23:20,486 --> 00:23:21,846
下一步是什么

794
00:23:22,396 --> 00:23:23,936
当你在打字打到一半时 

795
00:23:23,936 --> 00:23:26,956
有时候你在想 

796
00:23:26,956 --> 00:23:28,876
“好吧 一个连字符 一个短破折号

797
00:23:28,876 --> 00:23:30,286
再来一个长破折号” 

798
00:23:30,286 --> 00:23:30,466
这样要怎么做

799
00:23:31,266 --> 00:23:33,336
从今年开始 我们可以用一个破折号输入 

800
00:23:33,336 --> 00:23:34,386
一个连字符 

801
00:23:35,026 --> 00:23:36,476
我们会自动把 

802
00:23:36,476 --> 00:23:38,246
两个破折号转换成一个短破折号 

803
00:23:39,566 --> 00:23:41,336
然后三个破折号转换成 

804
00:23:41,336 --> 00:23:41,976
一个长破折号

805
00:23:42,516 --> 00:23:46,606
[掌声]

806
00:23:47,106 --> 00:23:49,916
并且 我们提出了

807
00:23:49,916 --> 00:23:51,036
Smart Insertion 和 Smart Deletion

808
00:23:51,576 --> 00:23:53,886
如果你之前使用过标签 

809
00:23:54,826 --> 00:23:57,036
你需要插入或者删除 

810
00:23:57,036 --> 00:23:59,206
一个段落或者一个短语 你就会知道 

811
00:23:59,206 --> 00:23:59,946
我在说什么

812
00:24:00,366 --> 00:24:01,846
就更不必提 

813
00:24:01,846 --> 00:24:02,826
标点符号带来的麻烦了 

814
00:24:03,206 --> 00:24:06,196
所以 举个例子 在我们的例子中

815
00:24:06,536 --> 00:24:08,136
Vivian 想带 Jiwang

816
00:24:08,136 --> 00:24:10,946
去参加聚会 但当时

817
00:24:11,066 --> 00:24:12,206
Jiwang 病了

818
00:24:12,536 --> 00:24:14,836
所以我需要去掉它

819
00:24:15,316 --> 00:24:18,006
在这个过程中 

820
00:24:18,046 --> 00:24:19,636
你不得不面对一个空格 

821
00:24:19,856 --> 00:24:20,506
这是个问题 

822
00:24:21,346 --> 00:24:22,086
是个麻烦 

823
00:24:23,596 --> 00:24:26,446
从今天开始 

824
00:24:26,446 --> 00:24:27,546
我们会替你解决这些 

825
00:24:28,166 --> 00:24:29,246
使用 Smart Insertion 和

826
00:24:29,246 --> 00:24:30,866
Deletion 我们会替你处理所有 

827
00:24:30,866 --> 00:24:32,826
字前和字后

828
00:24:32,826 --> 00:24:33,660
的空格 

829
00:24:35,516 --> 00:24:38,206
[掌声]

830
00:24:38,706 --> 00:24:40,836
同时 我想说 所有的这些

831
00:24:40,886 --> 00:24:41,976
我们提出的智能 

832
00:24:41,976 --> 00:24:43,106
包括我今天说的 

833
00:24:43,326 --> 00:24:44,426
都是默认设置的 

834
00:24:45,496 --> 00:24:47,786
但我希望你们知道 

835
00:24:47,786 --> 00:24:50,836
那些智能文本输入功能 

836
00:24:51,216 --> 00:24:52,426
它们有三个值 

837
00:24:52,736 --> 00:24:54,316
它们有“yes” “no” 

838
00:24:54,316 --> 00:24:54,986
以及“default”

839
00:24:55,866 --> 00:24:57,246
我们为你们全部设置了 

840
00:24:57,246 --> 00:24:58,916
默认值 

841
00:25:00,236 --> 00:25:01,936
我们会为你们自动 

842
00:25:01,936 --> 00:25:02,866
做好正确的选择 

843
00:25:03,156 --> 00:25:07,256
比如说 你有一个文本框 

844
00:25:07,336 --> 00:25:09,086
你把 securedTextEntry

845
00:25:09,086 --> 00:25:10,066
设置成“是”

846
00:25:10,736 --> 00:25:12,076
它可能是一个

847
00:25:12,076 --> 00:25:12,386
密码栏

848
00:25:12,626 --> 00:25:14,956
这种情况下 如果你把 

849
00:25:14,956 --> 00:25:17,756
智能功能设为默认 我们会 

850
00:25:17,756 --> 00:25:20,326
自动禁用 SmartQuote

851
00:25:20,326 --> 00:25:21,346
转换器 

852
00:25:21,456 --> 00:25:22,876
因为我们认为那可能 

853
00:25:22,876 --> 00:25:23,906
是用户密码 

854
00:25:24,046 --> 00:25:26,046
我们不想更改用户 

855
00:25:26,096 --> 00:25:27,976
在密码栏里的输入 

856
00:25:29,046 --> 00:25:31,796
如果你回忆一下 实际上我们可以 

857
00:25:31,796 --> 00:25:33,546
配置自动更正 

858
00:25:33,816 --> 00:25:34,776
可以配置 

859
00:25:34,776 --> 00:25:35,796
自动大写 

860
00:25:36,286 --> 00:25:39,006
我们在文本输入中 

861
00:25:39,006 --> 00:25:40,106
有很多很好的功能

862
00:25:40,106 --> 00:25:40,466
可以使用

863
00:25:41,436 --> 00:25:43,276
他们全部都有 

864
00:25:43,276 --> 00:25:43,566
默认值

865
00:25:44,526 --> 00:25:46,076
我在此想要强调的是

866
00:25:46,076 --> 00:25:48,616
在你使用任何

867
00:25:48,616 --> 00:25:51,466
这些功能之前 你一定要明白

868
00:25:51,716 --> 00:25:53,036
你的标签会是什么

869
00:25:54,136 --> 00:25:56,256
也要明白你期待

870
00:25:56,556 --> 00:25:57,786
用户会输入什么样的

871
00:25:57,786 --> 00:25:58,166
标签

872
00:25:58,806 --> 00:26:00,876
现在让我再问一个问题

873
00:25:58,806 --> 00:26:00,876
现在让我再问一个问题

874
00:26:00,876 --> 00:26:04,096
有谁为了 WWDC 飞到圣何塞的 

875
00:26:04,096 --> 00:26:05,306
好的 欢迎

876
00:26:06,456 --> 00:26:10,166
我也是 其实这次我是开玩笑的

877
00:26:10,376 --> 00:26:12,986
如果你需要一个文本输入框

878
00:26:12,986 --> 00:26:17,366
只采用航班号作为输入

879
00:26:17,366 --> 00:26:18,776
这种情况下 你可能需要

880
00:26:18,946 --> 00:26:21,916
禁用自动更正并且

881
00:26:21,916 --> 00:26:24,706
把自动大写功能

882
00:26:24,706 --> 00:26:25,096
设成“否”

883
00:26:25,566 --> 00:26:27,416
是这样吧 因为这样才有意义

884
00:26:28,156 --> 00:26:29,806
所以 你必须要清楚的

885
00:26:29,806 --> 00:26:34,396
了解文本 再去设置

886
00:26:34,396 --> 00:26:35,126
这些功能

887
00:26:35,126 --> 00:26:36,796
不是说就在这个标签上

888
00:26:36,796 --> 00:26:38,086
打字 想“好的 就设成是”

889
00:26:38,086 --> 00:26:39,496
或者“否”

890
00:26:39,926 --> 00:26:41,746
你必须充分理解它

891
00:26:43,556 --> 00:26:44,636
这是我的观点

892
00:26:45,056 --> 00:26:50,336
下面 在处理文本时 你现在可以

893
00:26:50,336 --> 00:26:52,116
忽略标记文本

894
00:26:53,006 --> 00:26:54,696
两大语言

895
00:26:54,696 --> 00:26:55,016
中文和日文

896
00:26:55,136 --> 00:26:57,316
都使用标记文本

897
00:26:57,316 --> 00:26:58,676
标记文本语言

898
00:26:58,676 --> 00:27:00,526
把标记文本变成最终文本 

899
00:26:58,676 --> 00:27:00,526
把标记文本变成最终文本 

900
00:27:00,526 --> 00:27:01,996
是通过选字实现的

901
00:27:02,546 --> 00:27:05,796
在 iOS 中 实际上你可以很方便的

902
00:27:05,796 --> 00:27:07,826
在 UITextInput 中访问

903
00:27:07,826 --> 00:27:08,216
标记文本

904
00:27:08,906 --> 00:27:10,876
你可以直接使用

905
00:27:11,676 --> 00:27:11,886
标记文本

906
00:27:12,536 --> 00:27:14,466
我们的系统中就有一个这样的例子

907
00:27:14,896 --> 00:27:15,786
就是 Spotlight

908
00:27:16,806 --> 00:27:20,076
在 Spotlight 中 当用户输入

909
00:27:20,076 --> 00:27:22,506
中文时 举个例子

910
00:27:22,506 --> 00:27:24,036
在用户选字之前

911
00:27:25,406 --> 00:27:27,096
Spotlight 引擎就已经开始

912
00:27:27,096 --> 00:27:28,566
向你推荐搜索结果了

913
00:27:29,216 --> 00:27:30,756
你在你的 App 中也可以实现

914
00:27:31,156 --> 00:27:33,296
只需要通过将标记文本

915
00:27:33,296 --> 00:27:34,546
从 UITextInput 中提取出来即可

916
00:27:36,106 --> 00:27:37,576
这样 用户就不需要

917
00:27:37,576 --> 00:27:39,136
为选字而

918
00:27:39,136 --> 00:27:39,616
烦恼了

919
00:27:39,856 --> 00:27:41,506
用户可以有更多时间

920
00:27:41,506 --> 00:27:43,466
来享受使用你的 App

921
00:27:43,866 --> 00:27:46,156
我不会过多赘述关于

922
00:27:46,156 --> 00:27:48,106
国际化的内容 但是

923
00:27:48,106 --> 00:27:49,956
如果你感兴趣的话

924
00:27:49,956 --> 00:27:51,806
请看去年的“Internationalization Best

925
00:27:51,806 --> 00:27:52,886
Practices”视频

926
00:27:53,366 --> 00:27:57,286
最后 硬件

927
00:27:57,286 --> 00:27:57,706
键盘

928
00:27:58,726 --> 00:28:00,156
我相信每个人都使用

929
00:27:58,726 --> 00:28:00,156
我相信每个人都使用

930
00:28:00,156 --> 00:28:02,016
硬件键盘 我也相信你们都

931
00:28:02,016 --> 00:28:03,736
喜欢键盘快捷键

932
00:28:03,876 --> 00:28:05,326
比如 Command C  Command V

933
00:28:05,696 --> 00:28:06,616
你们最喜欢的可能是

934
00:28:06,616 --> 00:28:07,256
Command Z

935
00:28:07,416 --> 00:28:11,306
通过推出 Smart Keyboard 

936
00:28:11,306 --> 00:28:11,876
我们把快捷键带入了 iOS

937
00:28:12,396 --> 00:28:17,206
这样 如果有 iPad App 的话

938
00:28:17,206 --> 00:28:21,066
你可以在 iOS 中

939
00:28:21,066 --> 00:28:23,646
为你的用户定制快捷键

940
00:28:23,906 --> 00:28:25,286
那么我们来看一下 这是如何做到的

941
00:28:25,286 --> 00:28:27,676
我们就直接说代码吧

942
00:28:28,096 --> 00:28:29,256
非常直接

943
00:28:29,256 --> 00:28:29,666
也非常简单

944
00:28:30,796 --> 00:28:32,876
同样的 在 UI 响应器中 你可以 

945
00:28:32,876 --> 00:28:34,086
重写 KeyCommand

946
00:28:34,646 --> 00:28:38,116
KeyCommand 会返回一系列的

947
00:28:38,116 --> 00:28:38,636
关键命令

948
00:28:38,636 --> 00:28:39,966
这就意味着你可以

949
00:28:40,096 --> 00:28:42,746
同时为你的 App 定制

950
00:28:42,746 --> 00:28:43,976
一些快捷键

951
00:28:44,736 --> 00:28:46,736
定义一个 KeyCommand 是

952
00:28:46,736 --> 00:28:47,576
清晰明了的

953
00:28:48,506 --> 00:28:49,386
设定一个 input

954
00:28:50,156 --> 00:28:51,156
设定你的 modifier

955
00:28:52,166 --> 00:28:53,326
你把你的 selector 放在这里

956
00:28:54,036 --> 00:28:55,236
然后给它取一个名称

957
00:28:56,006 --> 00:28:57,266
不要忘了本地化

958
00:28:57,266 --> 00:28:58,316
这个名称

959
00:28:59,276 --> 00:29:01,736
这是我们的第二个快捷键

960
00:28:59,276 --> 00:29:01,736
这是我们的第二个快捷键

961
00:29:02,286 --> 00:29:06,946
现在 按下 Command 键

962
00:29:07,236 --> 00:29:10,316
它就会显示你的

963
00:29:10,316 --> 00:29:12,066
键盘快捷键 然后

964
00:29:12,066 --> 00:29:14,196
你就可以在我们的 CatChat App 中看到

965
00:29:14,196 --> 00:29:16,516
我们用 Command Up

966
00:29:16,516 --> 00:29:18,886
和 Command Down

967
00:29:20,716 --> 00:29:21,066
来切换对话

968
00:29:21,066 --> 00:29:21,826
现在我们回顾一下

969
00:29:22,386 --> 00:29:23,216
我们刚才讨论了

970
00:29:23,216 --> 00:29:24,716
关于多语言的问题及如何

971
00:29:24,716 --> 00:29:25,836
让你的 App 拥有记忆

972
00:29:26,346 --> 00:29:29,336
还有怎样 

973
00:29:29,606 --> 00:29:31,356
最大程度的利用语境来

974
00:29:31,356 --> 00:29:33,766
提高预测

975
00:29:33,766 --> 00:29:35,376
就是通过 Text Content Type

976
00:29:35,906 --> 00:29:36,976
给你的文本框加个标签

977
00:29:37,836 --> 00:29:39,556
我们还谈到了新的

978
00:29:40,156 --> 00:29:41,506
文本输入智能

979
00:29:42,426 --> 00:29:44,156
我们也提到了

980
00:29:44,486 --> 00:29:45,026
标记文本

981
00:29:45,846 --> 00:29:47,836
最后 还有一个

982
00:29:47,836 --> 00:29:48,996
键盘快捷键功能 你们或许会

983
00:29:48,996 --> 00:29:49,446
感兴趣

984
00:29:50,656 --> 00:29:51,276
多多尝试它们

985
00:29:51,896 --> 00:29:55,506
现在 请 James 来谈谈

986
00:29:55,506 --> 00:29:57,856
如何创建自定义

987
00:29:57,926 --> 00:29:58,576
输入界面

988
00:29:58,996 --> 00:29:59,306
James

989
00:30:00,516 --> 00:30:05,566
[掌声]

990
00:30:06,066 --> 00:30:06,806
&gt;&gt; 谢谢 Shuchen

991
00:30:07,266 --> 00:30:08,376
我很紧张 我的意思是

992
00:30:08,446 --> 00:30:09,876
我很兴奋 能够跟你们讨论

993
00:30:09,876 --> 00:30:11,676
创建自定义输入界面

994
00:30:12,426 --> 00:30:14,946
Shuchen 已经简要提及了一个

995
00:30:14,946 --> 00:30:16,726
UI 响应器的属性 叫做

996
00:30:16,726 --> 00:30:18,266
Keyboard Type 它允许你 

997
00:30:18,266 --> 00:30:20,586
访问很多内置的

998
00:30:20,586 --> 00:30:22,156
iOS键盘 并用于

999
00:30:22,156 --> 00:30:24,506
特殊的输入 比如说

1000
00:30:24,506 --> 00:30:25,956
用数字键盘输入数字

1001
00:30:25,956 --> 00:30:27,676
或者用

1002
00:30:27,676 --> 00:30:29,006
电话号码键盘输入电话号码

1003
00:30:29,006 --> 00:30:30,916
还有一个特殊的键盘

1004
00:30:30,916 --> 00:30:32,366
专门输入 URL 和址 

1005
00:30:32,366 --> 00:30:32,936
电子邮件地

1006
00:30:33,566 --> 00:30:34,766
然而有时候 这可能还是

1007
00:30:34,766 --> 00:30:36,286
不能满足你的 App 的需要

1008
00:30:36,646 --> 00:30:38,066
你可能希望用到一些

1009
00:30:38,066 --> 00:30:39,136
系统键盘还

1010
00:30:39,136 --> 00:30:39,376
不能提供的功能

1011
00:30:40,026 --> 00:30:41,166
我们来看一些

1012
00:30:41,166 --> 00:30:42,000
例子

1013
00:30:43,066 --> 00:30:44,266
数学是一个很好的

1014
00:30:44,266 --> 00:30:44,786
例子

1015
00:30:45,156 --> 00:30:46,306
在数学中 有很多自定义的

1016
00:30:46,306 --> 00:30:48,076
符号 比方说希腊字母

1017
00:30:48,406 --> 00:30:50,106
上标运算符

1018
00:30:50,106 --> 00:30:51,176
或下标运算符

1019
00:30:51,436 --> 00:30:52,706
要想使用系统内置键盘

1020
00:30:52,706 --> 00:30:54,406
来输入这些东西

1021
00:30:54,406 --> 00:30:55,936
可以说是很难的

1022
00:30:56,386 --> 00:30:59,216
Swift Playgrounds 是另一个

1023
00:30:59,216 --> 00:30:59,866
很好的例子

1024
00:31:00,426 --> 00:31:01,396
这是 Swift Playgrounds

1025
00:31:01,396 --> 00:31:01,556
App

1026
00:31:01,556 --> 00:31:02,866
它使用的是普通 QWERTY 界面

1027
00:31:02,866 --> 00:31:04,276
但是他们同时提供很多

1028
00:31:04,276 --> 00:31:05,626
其他的功能

1029
00:31:05,626 --> 00:31:06,766
适应在 Swift 语言中常用的

1030
00:31:06,766 --> 00:31:07,816
一些符号

1031
00:31:08,806 --> 00:31:10,006
他们还有一个很不错的

1032
00:31:10,006 --> 00:31:11,426
在键盘上方辅助工具栏

1033
00:31:11,926 --> 00:31:13,186
协助用户快速输入相关的

1034
00:31:13,186 --> 00:31:14,376
功能与符号

1035
00:31:14,916 --> 00:31:19,126
最后 Apple 的 Numbers

1036
00:31:19,216 --> 00:31:20,316
电子表格是又一个

1037
00:31:20,316 --> 00:31:20,786
很好的例子

1038
00:31:21,206 --> 00:31:22,966
这是一个公式输入栏

1039
00:31:22,966 --> 00:31:24,316
也需要有很多

1040
00:31:24,316 --> 00:31:26,326
自定义符号 同时他们还有

1041
00:31:26,326 --> 00:31:27,286
一个深灰色的

1042
00:31:27,286 --> 00:31:28,656
背景 因此它可以

1043
00:31:28,656 --> 00:31:29,836
很好地融入

1044
00:31:29,836 --> 00:31:30,266
系统键盘

1045
00:31:32,856 --> 00:31:34,566
那么让我们回到 CatChat App

1046
00:31:34,566 --> 00:31:35,816
这是另一个 

1047
00:31:35,816 --> 00:31:37,366
需要自定义输入界面的

1048
00:31:37,366 --> 00:31:38,266
很好的例子

1049
00:31:38,556 --> 00:31:41,186
为什么呢 现在我们已经可以

1050
00:31:41,186 --> 00:31:42,586
跟我们的宠物聊天了 但是

1051
00:31:42,586 --> 00:31:43,436
我们的宠物却不一定可以

1052
00:31:43,436 --> 00:31:44,066
回复我们

1053
00:31:45,046 --> 00:31:46,466
那是因为 它们

1054
00:31:46,466 --> 00:31:47,476
在使用 QWERTY 时有

1055
00:31:47,476 --> 00:31:47,946
很多困难

1056
00:31:48,016 --> 00:31:49,376
它们的爪子都比较大

1057
00:31:49,686 --> 00:31:50,826
而键盘的按键非常小

1058
00:31:51,306 --> 00:31:52,886
这样 它们很难

1059
00:31:52,886 --> 00:31:54,476
按到这些按键

1060
00:31:54,886 --> 00:31:56,416
另外 它们的词汇量也

1061
00:31:56,416 --> 00:31:57,366
非常有限

1062
00:31:57,706 --> 00:31:58,366
这样它们其实不需要

1063
00:31:58,366 --> 00:31:59,076
说很多话

1064
00:32:00,146 --> 00:32:01,666
比方说现在我们要为

1065
00:32:01,666 --> 00:32:02,656
这些宠物特制一个键盘

1066
00:32:02,656 --> 00:32:03,966
使小猫小狗都可以用

1067
00:32:04,966 --> 00:32:06,456
那么我们可能需要大号的

1068
00:32:06,456 --> 00:32:08,516
图形按钮来代表

1069
00:32:08,516 --> 00:32:09,926
它们有限的词汇量

1070
00:32:10,446 --> 00:32:12,216
它可能看起来

1071
00:32:12,216 --> 00:32:12,446
是这样

1072
00:32:13,016 --> 00:32:16,746
这是我们的 Catchat App

1073
00:32:16,996 --> 00:32:18,506
它已经拥有了

1074
00:32:18,506 --> 00:32:20,316
Kasia 之前为我们创建的 

1075
00:32:20,316 --> 00:32:21,346
酷炫文本界面

1076
00:32:21,756 --> 00:32:24,476
现在 在宠物那一边

1077
00:32:24,476 --> 00:32:25,676
我们有三个大号的

1078
00:32:25,676 --> 00:32:27,426
图形按钮 代表

1079
00:32:27,426 --> 00:32:28,476
它们的全部词汇

1080
00:32:28,476 --> 00:32:29,396
包括它们想说的话

1081
00:32:29,396 --> 00:32:30,566
比如“我想要食物”

1082
00:32:30,566 --> 00:32:31,596
“我想出去”和

1083
00:32:31,596 --> 00:32:31,696
“别摸我”

1084
00:32:31,936 --> 00:32:33,106
差不多就是这样

1085
00:32:34,436 --> 00:32:37,016
另一件很酷的事是

1086
00:32:37,016 --> 00:32:38,056
这个键盘使用起来就像

1087
00:32:38,056 --> 00:32:39,796
系统键盘一样

1088
00:32:39,796 --> 00:32:40,636
它处在屏幕

1089
00:32:40,636 --> 00:32:41,226
的下方

1090
00:32:41,516 --> 00:32:42,696
上方有一个辅助栏

1091
00:32:42,696 --> 00:32:44,046
就恰好在键盘上方

1092
00:32:44,046 --> 00:32:44,656
不管这个键盘在哪

1093
00:32:44,656 --> 00:32:46,036
都在键盘上方

1094
00:32:46,306 --> 00:32:47,596
同样 背景的滚动界面

1095
00:32:47,596 --> 00:32:48,836
自动地将

1096
00:32:48,836 --> 00:32:51,286
它的内容适应

1097
00:32:51,326 --> 00:32:52,916
你的自定义输入界面的大小

1098
00:32:53,476 --> 00:32:55,526
我们来进一步看看细节

1099
00:32:55,526 --> 00:32:57,266
如何构建

1100
00:32:57,266 --> 00:32:58,196
一个像这样的东西

1101
00:32:59,086 --> 00:33:01,886
对我们的 PetChat App 来说

1102
00:32:59,086 --> 00:33:01,886
对我们的 PetChat App 来说

1103
00:33:01,886 --> 00:33:02,816
要构建一个这样的东西 我们所要做的

1104
00:33:02,816 --> 00:33:04,826
全部事情就是

1105
00:33:04,826 --> 00:33:05,826
在 UIInputViewController 加入子菜单

1106
00:33:06,296 --> 00:33:07,726
这样 我们可以

1107
00:33:07,726 --> 00:33:09,436
轻而易举地获得很多东西

1108
00:33:09,436 --> 00:33:10,936
比如能模仿系统键盘外观的

1109
00:33:10,936 --> 00:33:12,436
半透明的灰色背景

1110
00:33:13,566 --> 00:33:15,836
但最重要的是 我们提供了

1111
00:33:15,836 --> 00:33:17,216
一种方法 使你可以访问到

1112
00:33:17,216 --> 00:33:18,926
目前用户选择的

1113
00:33:18,926 --> 00:33:19,956
活跃的文本框

1114
00:33:20,586 --> 00:33:21,716
我们通过一种叫做

1115
00:33:21,716 --> 00:33:23,546
textDocumentProxy 的

1116
00:33:23,546 --> 00:33:24,036
特别属性

1117
00:33:24,786 --> 00:33:26,026
现在 textDocumentProxy

1118
00:33:26,026 --> 00:33:27,766
允许你访问

1119
00:33:27,766 --> 00:33:29,096
现在用户选择的文本框的

1120
00:33:29,096 --> 00:33:30,336
文本输入功能

1121
00:33:30,686 --> 00:33:31,656
这样 这就变成了

1122
00:33:31,656 --> 00:33:33,096
判定这是否是一个密码栏

1123
00:33:33,096 --> 00:33:34,736
什么样的内容形式更好

1124
00:33:34,736 --> 00:33:36,726
甚至什么样的

1125
00:33:36,726 --> 00:33:37,736
键盘更适合的问题

1126
00:33:37,736 --> 00:33:39,186
这样你就可以按照你的需求进行调整

1127
00:33:39,996 --> 00:33:41,496
但最重要的是

1128
00:33:41,496 --> 00:33:43,286
textDocumentProxy 还允许你

1129
00:33:43,286 --> 00:33:45,036
在文本框中插入文本

1130
00:33:45,036 --> 00:33:47,336
通过一个非常简单的方法

1131
00:33:47,336 --> 00:33:48,506
叫做 InsertText 方法

1132
00:33:48,506 --> 00:33:49,046
只占用一个字符串而已

1133
00:33:49,816 --> 00:33:50,716
你还可以

1134
00:33:50,716 --> 00:33:51,846
用 textDocumentProxy

1135
00:33:51,846 --> 00:33:52,526
做一件事

1136
00:33:52,786 --> 00:33:53,786
你可以访问

1137
00:33:53,786 --> 00:33:55,756
插入点的位置 以及

1138
00:33:55,756 --> 00:33:57,526
它之前和

1139
00:33:57,526 --> 00:33:58,186
之后的文本

1140
00:33:59,156 --> 00:33:59,576
这非常棒

1141
00:34:00,196 --> 00:34:01,726
我们来看看

1142
00:34:01,726 --> 00:34:03,406
我们要怎样

1143
00:34:03,406 --> 00:34:03,946
把它放入我们

1144
00:34:04,026 --> 00:34:04,956
PetChat App 中让

1145
00:34:04,956 --> 00:34:06,556
我们回到我们的老朋友

1146
00:34:06,556 --> 00:34:07,226
ConversationViewController

1147
00:34:08,466 --> 00:34:09,476
为了让它出现在我们的

1148
00:34:09,476 --> 00:34:10,906
ConversationViewController 中

1149
00:34:10,906 --> 00:34:13,116
我们只需要把

1150
00:34:13,116 --> 00:34:14,485
customInputView 实例化成为

1151
00:34:14,485 --> 00:34:14,996
一个成员变量

1152
00:34:15,686 --> 00:34:17,076
然后 重写一个叫做

1153
00:34:17,076 --> 00:34:18,226
canBecomeFirstResponder	 的

1154
00:34:18,226 --> 00:34:19,646
UI 响应器方法

1155
00:34:19,646 --> 00:34:21,485
使它返回 True 这样它就成了

1156
00:34:21,485 --> 00:34:22,426
响应链的一部分

1157
00:34:22,876 --> 00:34:25,246
最后 我们所要做的

1158
00:34:25,246 --> 00:34:26,556
只是重写另一个叫做 inputView 的

1159
00:34:26,556 --> 00:34:27,806
UI 响应器

1160
00:34:27,806 --> 00:34:28,076
方法

1161
00:34:28,076 --> 00:34:30,056
然后只需要返回我们的自定义

1162
00:34:30,056 --> 00:34:30,936
输入界面样本

1163
00:34:31,886 --> 00:34:33,106
现在 如果你正在使用

1164
00:34:33,106 --> 00:34:35,306
UITextView 或 UITextField

1165
00:34:35,565 --> 00:34:36,565
你实际上不需要做以上的

1166
00:34:36,565 --> 00:34:37,386
大部分工作

1167
00:34:37,775 --> 00:34:39,406
UITextView 和 UITextField

1168
00:34:39,406 --> 00:34:41,696
输入界面属性是一个

1169
00:34:41,696 --> 00:34:42,626
可写的属性

1170
00:34:42,946 --> 00:34:44,085
所以 你所要做的只是

1171
00:34:44,085 --> 00:34:45,946
把你的自定义

1172
00:34:45,946 --> 00:34:49,016
输入视图样本赋给

1173
00:34:49,016 --> 00:34:49,505
输入视图属性

1174
00:34:50,076 --> 00:34:52,686
现在 我们的宠物已经

1175
00:34:52,686 --> 00:34:54,456
有办法跟我们在

1176
00:34:54,456 --> 00:34:56,726
PetChat App 中聊天了 但是如果它们

1177
00:34:56,726 --> 00:34:57,596
事实上真的想要

1178
00:34:57,596 --> 00:34:59,026
更进一步 开始

1179
00:34:59,026 --> 00:35:00,126
写推特或是

1180
00:34:59,026 --> 00:35:00,126
写推特或是

1181
00:35:00,126 --> 00:35:00,526
写个博客 

1182
00:35:00,916 --> 00:35:01,716
我很确定它们一定有

1183
00:35:01,716 --> 00:35:02,776
很多有趣的事情要说

1184
00:35:02,776 --> 00:35:06,176
就用它们这少得可怜的词汇量

1185
00:35:06,346 --> 00:35:07,866
所以在 iOS 8 中 我们添加了

1186
00:35:07,866 --> 00:35:09,426
创建自定义键盘扩展的能力

1187
00:35:09,426 --> 00:35:10,866
这样它可以

1188
00:35:10,866 --> 00:35:12,126
在系统中的任何地方运行

1189
00:35:12,126 --> 00:35:13,076
事实上 这是我们第一次

1190
00:35:13,076 --> 00:35:14,486
在 WWDC 讨论这个问题

1191
00:35:15,796 --> 00:35:18,086
那么 我们的自定义

1192
00:35:18,086 --> 00:35:19,216
键盘扩展可能会

1193
00:35:19,216 --> 00:35:20,366
像这个样子在“信息”中

1194
00:35:20,366 --> 00:35:20,896
运行

1195
00:35:21,406 --> 00:35:23,486
这样 你的宠物就可以

1196
00:35:23,486 --> 00:35:25,456
在任何地方聊天 或者在

1197
00:35:25,456 --> 00:35:26,476
Twitter 上打字 或是写个博客

1198
00:35:26,476 --> 00:35:26,856
什么的

1199
00:35:27,636 --> 00:35:29,456
因此 实际上很容易

1200
00:35:29,456 --> 00:35:31,216
从一个输入视图到

1201
00:35:31,216 --> 00:35:32,216
自定义键盘扩展

1202
00:35:32,216 --> 00:35:33,536
我要给你们一个

1203
00:35:33,536 --> 00:35:34,756
Demo 来展示你们要具体

1204
00:35:34,756 --> 00:35:35,126
怎么做 

1205
00:35:35,626 --> 00:35:36,456
我们来看到这个电脑

1206
00:35:39,526 --> 00:35:41,556
这就是我们的自定义

1207
00:35:42,866 --> 00:35:44,396
输入视图控制器

1208
00:35:44,446 --> 00:35:45,476
我不会说太多关于

1209
00:35:45,476 --> 00:35:46,506
它是如何构建起来的

1210
00:35:46,506 --> 00:35:47,946
我们的示例代码已经

1211
00:35:47,946 --> 00:35:48,936
上传到了网上

1212
00:35:49,106 --> 00:35:50,186
你可以下载全部代码

1213
00:35:50,186 --> 00:35:51,196
如果你想进一步

1214
00:35:51,196 --> 00:35:51,636
了解的话

1215
00:35:52,916 --> 00:35:54,666
那么我们就开始

1216
00:35:54,666 --> 00:35:55,796
生成然后运行这些代码

1217
00:35:55,796 --> 00:35:57,006
来看看它在

1218
00:35:57,526 --> 00:36:00,446
我们的 App 中是什么样子

1219
00:35:57,526 --> 00:36:00,446
我们的 App 中是什么样子

1220
00:36:00,716 --> 00:36:01,896
构建 运行

1221
00:36:15,116 --> 00:36:16,476
好了 这就是我们的

1222
00:36:16,476 --> 00:36:17,656
自定义输入界面在我们的

1223
00:36:17,656 --> 00:36:17,746
App 中运行的样子

1224
00:36:17,746 --> 00:36:18,996
这样 我要开始装作

1225
00:36:18,996 --> 00:36:20,596
我是一只宠物 然后开始

1226
00:36:20,596 --> 00:36:21,356
说我的感受

1227
00:36:21,356 --> 00:36:22,186
我今天早上没吃早饭

1228
00:36:22,186 --> 00:36:24,466
所以我就说

1229
00:36:24,466 --> 00:36:24,836
这个

1230
00:36:25,676 --> 00:36:27,166
现在 如果我们想要

1231
00:36:27,166 --> 00:36:28,586
使用这个自定义输入界面并且

1232
00:36:28,586 --> 00:36:29,516
将它转换成一个第三方

1233
00:36:29,516 --> 00:36:30,736
键盘扩展

1234
00:36:30,736 --> 00:36:31,126
是很简单的

1235
00:36:31,316 --> 00:36:32,306
让我们切换到

1236
00:36:32,306 --> 00:36:33,366
Xcode 我会向你们展示 

1237
00:36:33,366 --> 00:36:33,836
如何完成

1238
00:36:33,836 --> 00:36:36,296
首先 我需要先

1239
00:36:36,296 --> 00:36:37,816
把鼠标挪到左上方

1240
00:36:37,816 --> 00:36:38,586
点击“Project Settings”

1241
00:36:39,206 --> 00:36:40,386
然后我要创建一个新的

1242
00:36:40,386 --> 00:36:42,096
目标 点击这个加号按钮

1243
00:36:42,096 --> 00:36:43,066
在屏幕底部

1244
00:36:43,606 --> 00:36:45,676
然后我就要继续操作

1245
00:36:45,676 --> 00:36:47,846
选择自定义键盘

1246
00:36:47,846 --> 00:36:49,676
扩展模版 然后点按

1247
00:36:49,676 --> 00:36:50,066
“Next”

1248
00:36:50,816 --> 00:36:51,516
取个名称

1249
00:36:52,636 --> 00:36:53,326
我就叫它 Animal Keyboard

1250
00:36:53,326 --> 00:36:53,806
好了

1251
00:36:55,376 --> 00:36:57,006
好了 这样做之后 Xcode 实际上

1252
00:36:57,006 --> 00:36:58,136
已经自动给了我们

1253
00:36:58,136 --> 00:36:59,586
很多东西

1254
00:37:00,306 --> 00:37:01,986
比如 它完成设置后

1255
00:37:01,986 --> 00:37:02,726
这个扩展已经

1256
00:37:02,726 --> 00:37:04,106
自动的嵌入到了

1257
00:37:04,106 --> 00:37:04,746
你的 App 数据包里

1258
00:37:04,746 --> 00:37:05,666
这样你就不需要纠结

1259
00:37:05,666 --> 00:37:07,056
构建设置或者构建阶段

1260
00:37:07,056 --> 00:37:07,716
等一系列问题

1261
00:37:08,746 --> 00:37:11,406
它同时还给了我们一个模版

1262
00:37:12,076 --> 00:37:13,806
UIInputViewController

1263
00:37:14,296 --> 00:37:15,156
但我们其实不需要

1264
00:37:15,156 --> 00:37:16,226
用到它 因为我们已经

1265
00:37:16,226 --> 00:37:16,706
写了一个

1266
00:37:17,036 --> 00:37:18,026
所以我只需要

1267
00:37:18,026 --> 00:37:18,976
调整一些设置

1268
00:37:18,976 --> 00:37:20,606
保证我们的扩展

1269
00:37:20,606 --> 00:37:22,416
能正确装载

1270
00:37:22,416 --> 00:37:23,506
CustomInputViewController

1271
00:37:23,506 --> 00:37:24,326
而不是

1272
00:37:24,326 --> 00:37:24,886
模版给我们的那个

1273
00:37:25,316 --> 00:37:27,646
我要切换到

1274
00:37:27,646 --> 00:37:28,516
我们的 CustomInputViewController

1275
00:37:28,516 --> 00:37:29,716
然后我要 

1276
00:37:29,716 --> 00:37:31,796
勾选这里这个复选框框

1277
00:37:31,796 --> 00:37:33,096
这样我们的键盘扩展就成为

1278
00:37:33,096 --> 00:37:34,216
那个目标的一部分了

1279
00:37:34,816 --> 00:37:37,756
然后 我们的键盘用到了

1280
00:37:37,756 --> 00:37:38,966
一些其他资源

1281
00:37:39,216 --> 00:37:40,386
它有一些

1282
00:37:40,386 --> 00:37:40,966
本地化的字符串

1283
00:37:40,966 --> 00:37:41,976
所以我也要把这里

1284
00:37:41,976 --> 00:37:43,636
切换到本地化字符串

1285
00:37:43,636 --> 00:37:45,246
然后勾选这个框

1286
00:37:45,246 --> 00:37:46,136
以确保它是那个目标的一部分

1287
00:37:46,616 --> 00:37:47,896
最后 它还有一些

1288
00:37:47,896 --> 00:37:50,406
用于图像的

1289
00:37:50,736 --> 00:37:51,566
内容

1290
00:37:51,566 --> 00:37:52,736
所以我要勾选这个框

1291
00:37:53,276 --> 00:37:55,376
然后我还要做

1292
00:37:55,376 --> 00:37:55,536
一件事

1293
00:37:55,536 --> 00:37:56,616
就是到 Info.plist 中

1294
00:37:56,616 --> 00:37:58,716
这是为

1295
00:37:58,716 --> 00:38:00,246
我们的自定义键盘扩展而生成的

1296
00:37:58,716 --> 00:38:00,246
我们的自定义键盘扩展而生成的

1297
00:38:00,246 --> 00:38:01,716
然后把它的

1298
00:38:01,716 --> 00:38:03,016
主要类改成我们

1299
00:38:03,016 --> 00:38:04,696
之前创建的那个键盘 而不是

1300
00:38:04,696 --> 00:38:05,656
模版给出的那个

1301
00:38:11,026 --> 00:38:12,046
这样就差不多了

1302
00:38:12,046 --> 00:38:14,486
现在我要切换回到

1303
00:38:14,486 --> 00:38:16,576
App目标 然后构建

1304
00:38:16,576 --> 00:38:16,976
并运行

1305
00:38:22,956 --> 00:38:24,086
好了 现在这个 App 已经

1306
00:38:24,086 --> 00:38:25,316
安装在系统里了

1307
00:38:25,316 --> 00:38:26,986
扩展也跟它一起安装好了

1308
00:38:27,656 --> 00:38:30,186
现在我们得

1309
00:38:30,186 --> 00:38:31,816
在系统设置里开启自定义

1310
00:38:31,816 --> 00:38:33,426
键盘扩展

1311
00:38:33,426 --> 00:38:34,726
过去这是一个很

1312
00:38:34,726 --> 00:38:35,926
复杂费解的

1313
00:38:35,926 --> 00:38:36,256
过程

1314
00:38:36,446 --> 00:38:38,276
但在新的 iOS 11 里

1315
00:38:38,276 --> 00:38:39,586
我们为用户简化了

1316
00:38:39,586 --> 00:38:40,856
开启你的

1317
00:38:40,856 --> 00:38:41,916
自定义键盘扩展的方式

1318
00:38:42,106 --> 00:38:42,826
那么我要向你们展示

1319
00:38:42,826 --> 00:38:43,616
它现在是如何工作的

1320
00:38:43,616 --> 00:38:46,086
让我回到

1321
00:38:46,086 --> 00:38:46,896
“设置”

1322
00:38:48,426 --> 00:38:50,166
现在你要开启

1323
00:38:50,166 --> 00:38:51,826
允许你的用户

1324
00:38:51,826 --> 00:38:52,976
来开启你的自定义键盘

1325
00:38:52,976 --> 00:38:54,966
你所要做的就是给你的 App

1326
00:38:54,966 --> 00:38:56,076
提供一个“设置”包

1327
00:38:56,396 --> 00:38:57,396
它可以是空的 它也可以

1328
00:38:57,396 --> 00:38:58,586
包含你的一些设置

1329
00:38:59,116 --> 00:39:01,666
我们现在有个新的选项

1330
00:38:59,116 --> 00:39:01,666
我们现在有个新的选项

1331
00:39:01,736 --> 00:39:02,856
就在这里

1332
00:39:02,856 --> 00:39:04,036
在 Siri 和搜索下面叫做

1333
00:39:04,036 --> 00:39:04,676
“键盘”

1334
00:39:05,096 --> 00:39:06,836
点击这里

1335
00:39:06,836 --> 00:39:08,146
用户要做的所有事情就只是 

1336
00:39:08,146 --> 00:39:09,546
滑动这个滑块

1337
00:39:09,546 --> 00:39:10,626
现在键盘就被激活了

1338
00:39:11,516 --> 00:39:15,446
[掌声]

1339
00:39:15,946 --> 00:39:17,346
我很确定你们这些第三方

1340
00:39:17,346 --> 00:39:18,276
键盘开发者会

1341
00:39:18,276 --> 00:39:18,986
爱上它的

1342
00:39:19,046 --> 00:39:20,416
现在 我切换到

1343
00:39:20,416 --> 00:39:21,356
“信息”

1344
00:39:21,906 --> 00:39:26,106
然后我要切换到我们的

1345
00:39:26,106 --> 00:39:27,406
自定义键盘扩展

1346
00:39:28,226 --> 00:39:28,796
好了

1347
00:39:28,856 --> 00:39:30,026
现在我们使它在整个系统中

1348
00:39:30,026 --> 00:39:30,516
运行了

1349
00:39:31,116 --> 00:39:32,176
现在我想

1350
00:39:32,176 --> 00:39:33,906
说说我现在对这个

1351
00:39:33,906 --> 00:39:34,656
Demo 的感觉

1352
00:39:35,076 --> 00:39:38,056
我要做的就是这样

1353
00:39:38,936 --> 00:39:39,696
让我们再回到

1354
00:39:39,696 --> 00:39:39,976
幻灯片

1355
00:39:40,516 --> 00:39:44,756
[鼓掌]

1356
00:39:45,256 --> 00:39:48,146
谢谢 这是我个人

1357
00:39:48,146 --> 00:39:49,616
推荐的方式来

1358
00:39:49,616 --> 00:39:51,136
开发第三方

1359
00:39:51,136 --> 00:39:51,726
键盘

1360
00:39:51,796 --> 00:39:53,516
也很容易先在

1361
00:39:53,516 --> 00:39:55,116
你的 App 中测试 

1362
00:39:55,116 --> 00:39:56,286
作为一个自定义输入界面

1363
00:39:56,526 --> 00:39:58,126
然后 正如你所见

1364
00:39:58,126 --> 00:39:59,476
从一个自定义输入界面到一个

1365
00:39:59,476 --> 00:40:00,576
自定义键盘扩展是很容易的

1366
00:39:59,476 --> 00:40:00,576
自定义键盘扩展是很容易的

1367
00:40:00,576 --> 00:40:00,916
一件事

1368
00:40:01,066 --> 00:40:06,286
这真的是一个很好的方法

1369
00:40:06,526 --> 00:40:08,136
我们来快速的回顾一下

1370
00:40:08,136 --> 00:40:09,516
如何把一个自定义输入界面转换成

1371
00:40:09,516 --> 00:40:10,776
一个键盘扩展

1372
00:40:11,136 --> 00:40:12,616
我们只需要创建一个新的目标

1373
00:40:12,686 --> 00:40:14,406
然后我们使用了自定义键盘

1374
00:40:14,406 --> 00:40:15,506
扩展模版

1375
00:40:16,706 --> 00:40:17,886
你可以选择使用系统提供的

1376
00:40:17,886 --> 00:40:19,116
UIInputViewController

1377
00:40:19,116 --> 00:40:21,166
子类 或者修改

1378
00:40:21,166 --> 00:40:23,036
使它能够运行你

1379
00:40:23,036 --> 00:40:23,316
自己的键盘 

1380
00:40:24,146 --> 00:40:25,206
最后我展示了一个

1381
00:40:25,206 --> 00:40:27,396
酷炫的新的用户快捷键 或者说

1382
00:40:27,396 --> 00:40:28,526
一个酷炫的让你的用户

1383
00:40:28,526 --> 00:40:29,736
在你的设置包里

1384
00:40:29,736 --> 00:40:30,566
快速激活你的键盘的方式

1385
00:40:31,456 --> 00:40:33,506
但这并不是全部

1386
00:40:33,776 --> 00:40:35,036
我们在 iOS 11 中有很多新的 API

1387
00:40:35,036 --> 00:40:37,636
我想跟你们分享

1388
00:40:37,636 --> 00:40:41,236
它们

1389
00:40:41,416 --> 00:40:42,816
现在你可以快速访问

1390
00:40:42,816 --> 00:40:44,446
现在用户所选择的

1391
00:40:44,446 --> 00:40:46,066
文本 这十分有用

1392
00:40:46,066 --> 00:40:47,416
如果你想要你的

1393
00:40:47,416 --> 00:40:49,386
自动完成引擎进行

1394
00:40:49,386 --> 00:40:51,016
反校正

1395
00:40:51,326 --> 00:40:52,486
或者在用户选择的 

1396
00:40:52,486 --> 00:40:54,346
文本周边提供一些

1397
00:40:54,406 --> 00:40:56,506
很酷的背景的话

1398
00:40:56,506 --> 00:40:57,576
我们也提供了这个 

1399
00:40:57,576 --> 00:40:58,906
叫做 documentIdentifier

1400
00:40:58,906 --> 00:41:00,546
句柄的新功能

1401
00:40:58,906 --> 00:41:00,546
句柄的新功能

1402
00:41:00,546 --> 00:41:03,156
它是一个 UUID 能够准确地把

1403
00:41:03,196 --> 00:41:04,446
一个文本栏和下一个区分开来

1404
00:41:05,356 --> 00:41:06,846
现在 这对很多事情

1405
00:41:06,846 --> 00:41:08,076
都非常有帮助

1406
00:41:08,076 --> 00:41:09,626
其中一个就是

1407
00:41:09,626 --> 00:41:11,306
重置你的键盘的状态

1408
00:41:11,306 --> 00:41:12,876
当用户切换

1409
00:41:12,876 --> 00:41:14,676
文本框时 这样你就能够

1410
00:41:14,676 --> 00:41:15,836
清空你的预测 如果你

1411
00:41:15,836 --> 00:41:17,806
让预测显示出来的话 或者

1412
00:41:17,806 --> 00:41:19,486
切换回字母键盘

1413
00:41:19,486 --> 00:41:20,496
如果用户之前切换到了

1414
00:41:20,496 --> 00:41:21,656
数字键盘的话

1415
00:41:21,656 --> 00:41:22,000
诸如此类

1416
00:41:24,176 --> 00:41:25,416
最后 我们还增加了一项功能

1417
00:41:25,416 --> 00:41:26,596
让你可以询问用户

1418
00:41:26,596 --> 00:41:27,816
是否同意了

1419
00:41:27,816 --> 00:41:29,126
你的扩展完全访问权限

1420
00:41:29,296 --> 00:41:30,416
等一下我会谈到

1421
00:41:30,416 --> 00:41:31,446
完全访问权限是什么意思

1422
00:41:31,446 --> 00:41:32,316
以防你们有人不熟悉

1423
00:41:33,496 --> 00:41:34,476
但是首先 我想谈谈

1424
00:41:34,476 --> 00:41:35,756
一些其他的 鲜为人知的

1425
00:41:35,756 --> 00:41:37,036
第三方键盘 API

1426
00:41:37,036 --> 00:41:37,836
你们可能也不知道

1427
00:41:39,216 --> 00:41:40,986
在 iOS 10 中

1428
00:41:40,986 --> 00:41:41,886
你们可以在键盘中

1429
00:41:41,886 --> 00:41:43,446
嵌入 System Globe

1430
00:41:43,776 --> 00:41:45,536
Menu

1431
00:41:45,916 --> 00:41:47,146
这很方便 可以允许

1432
00:41:47,146 --> 00:41:48,466
你的用户快速地

1433
00:41:48,466 --> 00:41:49,896
在他们所选择的所有键盘中

1434
00:41:49,896 --> 00:41:50,646
自由切换

1435
00:41:50,646 --> 00:41:51,856
这比起我们之前只能选

1436
00:41:51,856 --> 00:41:52,726
下一个键盘

1437
00:41:52,726 --> 00:41:53,156
强多了

1438
00:41:54,246 --> 00:41:54,786
谢谢

1439
00:41:55,516 --> 00:41:58,516
[掌声]

1440
00:41:59,016 --> 00:42:00,326
你也可以个性化你的

1441
00:41:59,016 --> 00:42:00,326
你也可以个性化你的

1442
00:42:00,326 --> 00:42:01,276
自动补全结果

1443
00:42:01,276 --> 00:42:02,066
使用我们称为

1444
00:42:02,066 --> 00:42:03,356
Supplementary Lexicon 的功能

1445
00:42:03,666 --> 00:42:05,066
Supplementary Lexicon 本质上就是

1446
00:42:05,066 --> 00:42:06,646
一串单词

1447
00:42:06,646 --> 00:42:07,836
包含了一部分的

1448
00:42:07,836 --> 00:42:09,606
用户的通讯录 允许你

1449
00:42:09,606 --> 00:42:11,446
自动补全姓名和其他一些

1450
00:42:11,446 --> 00:42:13,546
用户在他们

1451
00:42:13,546 --> 00:42:15,156
正在输入的文本中想

1452
00:42:15,156 --> 00:42:15,496
参考的内容

1453
00:42:16,546 --> 00:42:17,836
最后 跟一些

1454
00:42:17,836 --> 00:42:19,136
我们在 iOS 11 中添加的多语言支持

1455
00:42:19,136 --> 00:42:21,386
联系起来 就是 Shuchen 刚刚

1456
00:42:21,386 --> 00:42:22,766
谈到的那些

1457
00:42:22,766 --> 00:42:24,166
你的键盘可以结合我谈到的那些文档标识符

1458
00:42:24,166 --> 00:42:25,486
句柄的功能 

1459
00:42:25,486 --> 00:42:26,856
作为一个多语言

1460
00:42:26,856 --> 00:42:27,706
的提示

1461
00:42:27,706 --> 00:42:29,516
这样 如果你的

1462
00:42:29,516 --> 00:42:31,416
键盘支持 多种语言

1463
00:42:32,076 --> 00:42:33,306
你也能够

1464
00:42:33,306 --> 00:42:34,536
使它像系统键盘一样

1465
00:42:34,536 --> 00:42:34,966
再需要的时候切换

1466
00:42:35,526 --> 00:42:39,046
最后 我们要谈

1467
00:42:39,046 --> 00:42:40,466
第三方键盘扩展

1468
00:42:40,466 --> 00:42:41,746
就必须要谈隐私和

1469
00:42:41,746 --> 00:42:42,556
用户信任

1470
00:42:43,186 --> 00:42:45,936
保护隐私是

1471
00:42:45,936 --> 00:42:48,416
iOS 用户通常会

1472
00:42:48,416 --> 00:42:48,846
期待的标准特点

1473
00:42:49,966 --> 00:42:51,846
他们也清楚

1474
00:42:51,846 --> 00:42:52,926
他们每一次的按键都是

1475
00:42:52,926 --> 00:42:54,046
通过你的扩展实现的

1476
00:42:54,546 --> 00:42:55,426
所以 如果你要对

1477
00:42:55,426 --> 00:42:56,786
这些按键做什么的话 比如说

1478
00:42:56,886 --> 00:42:58,286
对它们进行备份 或者

1479
00:42:58,536 --> 00:43:00,056
分析它们的话

1480
00:42:58,536 --> 00:43:00,056
分析它们的话

1481
00:43:00,056 --> 00:43:01,066
你应该确保你通知到了

1482
00:43:01,066 --> 00:43:02,716
用户 然后对

1483
00:43:02,716 --> 00:43:03,866
收到的数据进行匿名处理

1484
00:43:03,866 --> 00:43:04,836
如果你要备份的话

1485
00:43:05,856 --> 00:43:07,826
最后 尽管大部分的 App

1486
00:43:07,976 --> 00:43:09,836
都不需要 但你

1487
00:43:10,346 --> 00:43:12,226
可以询问用户是否

1488
00:43:12,226 --> 00:43:14,046
给予你的扩展完全访问权限

1489
00:43:14,276 --> 00:43:15,666
包括访问系统中一些

1490
00:43:15,666 --> 00:43:16,786
较低层的部分

1491
00:43:17,266 --> 00:43:18,826
我们来谈谈到底

1492
00:43:18,826 --> 00:43:20,106
完全访问权限是什么意思

1493
00:43:20,646 --> 00:43:23,076
首先 

1494
00:43:23,076 --> 00:43:24,576
事实上不要求完全访问权限

1495
00:43:24,576 --> 00:43:26,076
是有意义的

1496
00:43:26,356 --> 00:43:27,626
这就是我们最初创建了

1497
00:43:27,626 --> 00:43:28,636
这个完全访问权限滑块的原因

1498
00:43:28,716 --> 00:43:30,126
对你们来说 这并不是一个障碍

1499
00:43:30,906 --> 00:43:32,586
相反 Apple 的用户都是

1500
00:43:32,586 --> 00:43:33,816
非常注重隐私的

1501
00:43:34,606 --> 00:43:35,946
另外 你们的键盘已经

1502
00:43:35,946 --> 00:43:36,896
提供了很多很棒的

1503
00:43:36,896 --> 00:43:37,806
功能 一打开就可以用到

1504
00:43:37,806 --> 00:43:39,676
即使没有完全访问权限

1505
00:43:39,826 --> 00:43:40,776
所以 允许完全访问权限应当只是

1506
00:43:40,776 --> 00:43:42,146
对于你现在的功能

1507
00:43:42,146 --> 00:43:42,696
的一个补充

1508
00:43:43,066 --> 00:43:44,396
你可能需要用到

1509
00:43:44,396 --> 00:43:46,476
完全访问权限的一个例子

1510
00:43:46,636 --> 00:43:47,826
是与你的主要 App

1511
00:43:47,826 --> 00:43:48,086
沟通

1512
00:43:48,866 --> 00:43:49,646
如果你需要在

1513
00:43:49,646 --> 00:43:51,376
你的主要 App 和

1514
00:43:51,376 --> 00:43:52,346
你的自定义键盘扩展之间构建一个桥梁

1515
00:43:52,346 --> 00:43:53,736
如果你想访问

1516
00:43:53,736 --> 00:43:54,796
一个数据库或者

1517
00:43:54,796 --> 00:43:55,786
你之前存储的内容的话

1518
00:43:56,046 --> 00:43:57,256
你需要为此请求

1519
00:43:57,256 --> 00:43:57,906
完全访问权限

1520
00:43:59,046 --> 00:44:00,296
如果你想访问

1521
00:43:59,046 --> 00:44:00,296
如果你想访问

1522
00:44:00,666 --> 00:44:02,236
如果你想为你的用户

1523
00:44:02,236 --> 00:44:03,776
提供一个 GIF 图库

1524
00:44:03,776 --> 00:44:05,636
举个例子 那么你

1525
00:44:05,636 --> 00:44:07,936
需要请求完全访问权限

1526
00:44:07,936 --> 00:44:09,596
来获得在 iOS 上访问网络堆栈

1527
00:44:09,596 --> 00:44:10,336
的权限

1528
00:44:12,016 --> 00:44:14,026
对于当前位置

1529
00:44:14,026 --> 00:44:15,456
如果你想要丰富你的

1530
00:44:15,456 --> 00:44:17,266
自动补全功能

1531
00:44:17,266 --> 00:44:18,836
通过提供用户在正在输入的文本中

1532
00:44:18,836 --> 00:44:20,776
所可能用到的位置的话

1533
00:44:20,776 --> 00:44:22,486
你需要为获得当前位置

1534
00:44:22,486 --> 00:44:24,006
请求完全访问

1535
00:44:24,006 --> 00:44:24,926
权限

1536
00:44:25,106 --> 00:44:26,346
并且你还需要让

1537
00:44:26,346 --> 00:44:29,096
用户允许你的主要 App

1538
00:44:29,096 --> 00:44:30,176
访问当前位置

1539
00:44:30,326 --> 00:44:31,136
因此 请牢记这一点

1540
00:44:31,706 --> 00:44:34,576
对于通讯录

1541
00:44:34,576 --> 00:44:35,906
大部分的 App 其实并不需要用到它

1542
00:44:35,906 --> 00:44:37,206
因为我刚才说过的

1543
00:44:37,206 --> 00:44:39,046
Supplementary Lexicon 功能

1544
00:44:39,276 --> 00:44:40,766
所以你并不需要

1545
00:44:40,766 --> 00:44:41,746
完全访问权限

1546
00:44:41,746 --> 00:44:41,986
来获得通讯录

1547
00:44:42,366 --> 00:44:43,446
但是 如果你想要访问

1548
00:44:43,446 --> 00:44:44,666
通讯录的更多信息

1549
00:44:44,666 --> 00:44:46,516
比如备注部分 或者昵称

1550
00:44:46,516 --> 00:44:47,246
等等

1551
00:44:47,496 --> 00:44:48,446
那么你就需要完全访问权限

1552
00:44:48,446 --> 00:44:49,886
来取得了

1553
00:44:50,066 --> 00:44:51,326
最后 确保你的

1554
00:44:51,326 --> 00:44:52,726
键盘在没有完全访问权限的情况下

1555
00:44:52,726 --> 00:44:53,996
也可以工作

1556
00:44:54,386 --> 00:44:55,676
正如我说的

1557
00:44:55,676 --> 00:44:57,416
不请求完全访问权限也是很有意义的

1558
00:44:58,746 --> 00:44:59,996
另外 如果你的 App

1559
00:44:59,996 --> 00:45:01,406
不能做到这点 它可能不会被

1560
00:44:59,996 --> 00:45:01,406
不能做到这点 它可能不会被

1561
00:45:01,406 --> 00:45:01,756
允许上架

1562
00:45:02,096 --> 00:45:03,036
如果想了解更多信息 请看 App Store

1563
00:45:03,036 --> 00:45:04,266
Guidelines 关于此问题的规定

1564
00:45:06,256 --> 00:45:07,876
那么在我今天 不对 今晚告别你们之前

1565
00:45:07,876 --> 00:45:09,376
我们进行一个快速的回顾

1566
00:45:09,376 --> 00:45:09,756
抱歉

1567
00:45:09,756 --> 00:45:11,886
我又说错了

1568
00:45:12,246 --> 00:45:13,606
Kasia 向你们展示了如何 

1569
00:45:13,606 --> 00:45:14,476
在考虑到键盘的情况下

1570
00:45:14,476 --> 00:45:15,756
设计你的 App 以及键盘

1571
00:45:15,756 --> 00:45:16,266
需要避免的问题

1572
00:45:17,066 --> 00:45:18,086
事实上我们不会说

1573
00:45:18,086 --> 00:45:18,556
“避免”

1574
00:45:18,556 --> 00:45:19,906
我们会说“拥抱你的键盘”

1575
00:45:20,266 --> 00:45:21,426
别试图避免

1576
00:45:22,076 --> 00:45:23,316
Shuchen 提到了很多

1577
00:45:23,316 --> 00:45:24,686
先进的功能来提高 

1578
00:45:24,686 --> 00:45:26,126
用户体验 用一些

1579
00:45:26,126 --> 00:45:27,506
内置的系统键盘

1580
00:45:27,556 --> 00:45:28,406
你们可以从中选择

1581
00:45:28,926 --> 00:45:31,446
如果那还是不够

1582
00:45:31,446 --> 00:45:32,636
我们展示了如何创建

1583
00:45:32,636 --> 00:45:33,936
自定义键盘扩展和

1584
00:45:33,936 --> 00:45:35,576
自定义输入界面

1585
00:45:35,576 --> 00:45:36,426
以及如果将一个自定义输入界面转化成

1586
00:45:36,426 --> 00:45:37,506
键盘扩展 这实际上

1587
00:45:37,506 --> 00:45:38,426
比你们想象的要

1588
00:45:38,426 --> 00:45:38,646
简单很多

1589
00:45:40,156 --> 00:45:41,606
最后 记得要点赞 评论

1590
00:45:41,606 --> 00:45:43,406
和订阅 或者查看

1591
00:45:43,706 --> 00:45:46,096
我们的示例页面或 App

1592
00:45:46,216 --> 00:45:48,816
WWDC 17 第 242 节

1593
00:45:49,116 --> 00:45:50,936
今天你们所看到的所有代码

1594
00:45:51,166 --> 00:45:52,366
都在那里

1595
00:45:52,726 --> 00:45:54,306
你们今天所看到的所有示例代码

1596
00:45:54,306 --> 00:45:55,216
都在那里

1597
00:45:55,506 --> 00:45:56,226
记得去查看

1598
00:45:56,516 --> 00:45:59,006
有一些相关的会议视频

1599
00:45:59,006 --> 00:46:00,566
“The Password Autofill for Apps”

1600
00:45:59,006 --> 00:46:00,566
“The Password Autofill for Apps”

1601
00:46:00,566 --> 00:46:01,366
绝对是值得

1602
00:46:01,366 --> 00:46:01,906
看看的

1603
00:46:02,266 --> 00:46:03,406
“Mysteries of Auto Layout”

1604
00:46:03,406 --> 00:46:05,476
对避免键盘

1605
00:46:05,476 --> 00:46:06,836
或者应该说拥抱键盘 也是很有用的

1606
00:46:07,666 --> 00:46:07,976
谢谢
