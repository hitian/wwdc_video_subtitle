1
00:00:17,618 --> 00:00:21,522
<c.magenta>（用户通知的最佳实践和新特性）</c>

2
00:00:23,423 --> 00:00:25,926
<c.magenta>下午好 欢迎大家来到我们的演讲</c>

3
00:00:26,326 --> 00:00:29,329
<c.magenta>用户通知的最佳实践和新特性</c>

4
00:00:29,963 --> 00:00:33,300
<c.magenta>我是Kritarth Jain</c>

5
00:00:33,734 --> 00:00:36,303
<c.magenta>今天我会和同事Teja一起演讲</c>

6
00:00:38,172 --> 00:00:42,075
<c.magenta>今天我们从通知概述开始</c>

7
00:00:42,276 --> 00:00:45,746
<c.magenta>以及作为应用开发者可用的各种API</c>

8
00:00:45,812 --> 00:00:48,215
<c.magenta>为了在应用中使用通知功能</c>

9
00:00:49,149 --> 00:00:50,217
<c.magenta>然后我们会讲解四个</c>

10
00:00:50,450 --> 00:00:53,053
<c.magenta>不同的关于通知的用例</c>

11
00:00:53,820 --> 00:00:56,390
<c.magenta>首先我们介绍一个全新的概念</c>

12
00:00:56,456 --> 00:01:00,127
<c.magenta>在iOS通知中 关于隐藏通知内容</c>

13
00:00:56,456 --> 00:01:00,127
<c.magenta>在iOS通知中 关于隐藏通知内容</c>

14
00:01:00,561 --> 00:01:02,429
<c.magenta>我们认为你们会非常感兴趣</c>

15
00:01:03,430 --> 00:01:05,566
<c.magenta>然后我们会讲解第二个用户实例</c>

16
00:01:05,632 --> 00:01:09,703
<c.magenta>是关于在发送给用户之前</c>

17
00:01:10,571 --> 00:01:13,340
<c.magenta>然后我们会讲自定义丰富通知</c>

18
00:01:13,574 --> 00:01:17,811
<c.magenta>以及如何全权拥有</c>

19
00:01:18,445 --> 00:01:21,582
<c.magenta>最后我们会讲和这些丰富通知相关的</c>

20
00:01:21,815 --> 00:01:23,984
<c.magenta>用户输入自定义</c>

21
00:01:25,552 --> 00:01:27,988
<c.magenta>首先开始讲通知概述</c>

22
00:01:28,956 --> 00:01:31,992
<c.magenta>我肯定你们大家都知道</c>

23
00:01:32,326 --> 00:01:33,594
<c.magenta>本地通知</c>

24
00:01:33,927 --> 00:01:36,797
<c.magenta>它们在应用里计划</c>

25
00:01:37,130 --> 00:01:40,534
<c.magenta>在设备本身 然后显示给用户</c>

26
00:01:41,034 --> 00:01:43,103
<c.magenta>当用户处理这些通知时</c>

27
00:01:43,170 --> 00:01:45,906
<c.magenta>你的应用可以处理回应</c>

28
00:01:45,973 --> 00:01:47,207
<c.magenta>（本地通知）</c>

29
00:01:47,274 --> 00:01:50,177
<c.magenta>另一类通知是远程通知</c>

30
00:01:50,477 --> 00:01:53,146
<c.magenta>和远程服务器相关联</c>

31
00:01:53,714 --> 00:01:58,318
<c.magenta>之后发送通知负载至应用推送通知服务</c>

32
00:01:58,986 --> 00:02:01,088
<c.magenta>现在 如果负载有内容</c>

33
00:01:58,986 --> 00:02:01,088
<c.magenta>现在 如果负载有内容</c>

34
00:02:01,455 --> 00:02:04,491
<c.magenta>则该通知会发送到用户设备</c>

35
00:02:04,791 --> 00:02:05,959
<c.magenta>显示给用户</c>

36
00:02:06,293 --> 00:02:08,562
<c.magenta>再次说明 如果用户处理该通知</c>

37
00:02:08,895 --> 00:02:10,898
<c.magenta>你可以应用中处理回应</c>

38
00:02:11,965 --> 00:02:14,868
<c.magenta>远程通知的另一类是静音通知</c>

39
00:02:15,235 --> 00:02:18,272
<c.magenta>它们不会显示给用户</c>

40
00:02:18,572 --> 00:02:21,909
<c.magenta>但它们可以让应用在后台启动</c>

41
00:02:22,142 --> 00:02:24,878
<c.magenta>并做些应用想要的额外工作</c>

42
00:02:25,078 --> 00:02:27,147
<c.magenta>和远程站点应用相关</c>

43
00:02:28,615 --> 00:02:30,584
<c.magenta>远程通知很重要的一点</c>

44
00:02:30,851 --> 00:02:34,755
<c.magenta>是使用最新的HTTPS2认证方法</c>

45
00:02:35,022 --> 00:02:36,857
<c.magenta>无论在哪里进行远程通知</c>

46
00:02:38,692 --> 00:02:42,162
<c.magenta>通知内容包含不同的属性</c>

47
00:02:42,229 --> 00:02:43,830
<c.magenta>可以在通知中设置这些属性</c>

48
00:02:44,331 --> 00:02:47,868
<c.magenta>包括标题 副标题 正文</c>

49
00:02:48,535 --> 00:02:51,605
<c.magenta>以及媒体附件 都可以在通知中设置</c>

50
00:02:51,672 --> 00:02:52,673
<c.magenta>（标题——通知）</c>

51
00:02:52,739 --> 00:02:53,941
<c.magenta>（副标题——内容预览）</c>

52
00:02:54,007 --> 00:02:55,175
<c.magenta>（正文——这里是通知正文）</c>

53
00:02:55,242 --> 00:02:56,410
<c.magenta>（在右边可以看到媒体附件）</c>

54
00:02:57,010 --> 00:02:58,612
<c.magenta>通知触发器决定</c>

55
00:02:58,679 --> 00:03:01,481
<c.magenta>何时将通知发送给用户</c>

56
00:02:58,679 --> 00:03:01,481
<c.magenta>何时将通知发送给用户</c>

57
00:03:01,882 --> 00:03:05,285
<c.magenta>所有远程通知都和推送触发器相关联</c>

58
00:03:05,953 --> 00:03:09,122
<c.magenta>本地通知则可以选择使用</c>

59
00:03:09,189 --> 00:03:11,992
<c.magenta>间隔时间 日历或基于位置的触发器</c>

60
00:03:12,059 --> 00:03:13,660
<c.magenta>（通知触发器 推送</c>

61
00:03:14,027 --> 00:03:17,531
<c.magenta>这些通知以不同的方式显示给用户</c>

62
00:03:18,131 --> 00:03:22,603
<c.magenta>在iOS 11</c>

63
00:03:23,036 --> 00:03:26,006
<c.magenta>如果用户唤醒设备 或从顶部下拉</c>

64
00:03:26,340 --> 00:03:28,475
<c.magenta>会看到同一个通知列表</c>

65
00:03:28,842 --> 00:03:30,744
<c.magenta>当用户处于该状态时</c>

66
00:03:31,044 --> 00:03:33,547
<c.magenta>通知即被添加到该列表</c>

67
00:03:33,947 --> 00:03:35,616
<c.magenta>如果想查看以前的通知</c>

68
00:03:35,682 --> 00:03:38,552
<c.magenta>只需将列表向上滑 查看通知历史</c>

69
00:03:39,987 --> 00:03:41,455
<c.magenta>如果用户设备已被解锁</c>

70
00:03:41,788 --> 00:03:43,857
<c.magenta>如果用户在主屏幕或别的应用里</c>

71
00:03:44,224 --> 00:03:46,793
<c.magenta>通知会以横幅形式从顶部滚动下来</c>

72
00:03:48,195 --> 00:03:50,330
<c.magenta>如果应用处于前台</c>

73
00:03:50,497 --> 00:03:51,532
<c.magenta>可以选择</c>

74
00:03:51,598 --> 00:03:54,067
<c.magenta>就在当前显示通知横幅</c>

75
00:03:55,068 --> 00:03:57,004
<c.magenta>随着不同的显示模型</c>

76
00:03:57,171 --> 00:03:59,573
<c.magenta>也可以选择声音提醒</c>

77
00:03:59,640 --> 00:04:01,608
<c.magenta>以及标记应用图标</c>

78
00:03:59,640 --> 00:04:01,608
<c.magenta>以及标记应用图标</c>

79
00:04:04,044 --> 00:04:07,648
<c.magenta>通知操作可以使其具有更强的互动性</c>

80
00:04:08,215 --> 00:04:11,351
<c.magenta>用户可以用3D Touch获取通知</c>

81
00:04:11,418 --> 00:04:13,320
<c.magenta>可以看到所有操作列表</c>

82
00:04:13,387 --> 00:04:14,788
<c.magenta>以及取消操作</c>

83
00:04:15,622 --> 00:04:18,024
<c.magenta>当用户采取任何一种操作</c>

84
00:04:18,192 --> 00:04:20,726
<c.magenta>同样在应用中可以获得回应</c>

85
00:04:20,928 --> 00:04:22,896
<c.magenta>并按照合适的情况处理该操作</c>

86
00:04:25,799 --> 00:04:28,802
<c.magenta>使用这些通知有不同的机制</c>

87
00:04:29,369 --> 00:04:32,539
<c.magenta>通知更新允许修改通知</c>

88
00:04:32,706 --> 00:04:35,676
<c.magenta>那些你已计划推送或发布给用户的通知</c>

89
00:04:36,610 --> 00:04:39,947
<c.magenta>在本例中 可以看到我们在集中</c>

90
00:04:40,013 --> 00:04:41,882
<c.magenta>那些社交媒体帖子的点赞</c>

91
00:04:42,583 --> 00:04:45,819
<c.magenta>一段时间以后 这个数字发生改变</c>

92
00:04:46,320 --> 00:04:49,790
<c.magenta>可以直接更新通知</c>

93
00:04:50,257 --> 00:04:53,360
<c.magenta>用户的通知列表不会变乱</c>

94
00:04:53,427 --> 00:04:54,595
<c.magenta>也不会显得冗余</c>

95
00:04:54,661 --> 00:04:56,563
<c.magenta>（通知更新）</c>

96
00:04:57,030 --> 00:05:00,400
<c.magenta>同样 也可以删除通知</c>

97
00:04:57,030 --> 00:05:00,400
<c.magenta>同样 也可以删除通知</c>

98
00:05:01,068 --> 00:05:05,172
<c.magenta>在本例中</c>

99
00:05:05,572 --> 00:05:08,475
<c.magenta>一旦你看过了该视频 可以直接</c>

100
00:05:08,542 --> 00:05:11,578
<c.magenta>在本地应用里删除该通知</c>

101
00:05:11,645 --> 00:05:13,947
<c.magenta>（删除通知）</c>

102
00:05:14,314 --> 00:05:18,285
<c.magenta>在iOS 10引入了通知扩展</c>

103
00:05:18,752 --> 00:05:20,387
<c.magenta>通知扩展有两种类型</c>

104
00:05:20,921 --> 00:05:23,023
<c.magenta>第一种即为 服务扩展</c>

105
00:05:23,991 --> 00:05:26,894
<c.magenta>服务扩展允许应用做的事情是</c>

106
00:05:27,127 --> 00:05:31,231
<c.magenta>在发送给用户之前 拦截通知</c>

107
00:05:32,232 --> 00:05:34,801
<c.magenta>可以修改通知内容</c>

108
00:05:35,102 --> 00:05:38,839
<c.magenta>或处理别的可能和通知相关的</c>

109
00:05:38,906 --> 00:05:41,108
<c.magenta>后台工作 就在该服务扩展中</c>

110
00:05:41,675 --> 00:05:44,978
<c.magenta>我们将在一个用例中深入了解服务扩展</c>

111
00:05:45,045 --> 00:05:46,446
<c.magenta>（通知扩展 服务扩展）</c>

112
00:05:46,847 --> 00:05:49,249
<c.magenta>另一个扩展点是内容扩展</c>

113
00:05:49,550 --> 00:05:51,852
<c.magenta>将允许自定义什么样的通知</c>

114
00:05:52,085 --> 00:05:54,488
<c.magenta>同样 今天也会用一个用例来说明</c>

115
00:05:55,455 --> 00:05:58,392
<c.magenta>来自第一方应用的内容扩展示例</c>

116
00:05:58,592 --> 00:06:01,962
<c.magenta>包括信息应用 包括完整的信息线程</c>

117
00:05:58,592 --> 00:06:01,962
<c.magenta>包括信息应用 包括完整的信息线程</c>

118
00:06:02,429 --> 00:06:04,665
<c.magenta>就在通知里面 因此可以进行回复</c>

119
00:06:04,898 --> 00:06:07,434
<c.magenta>并从通知里得到回应</c>

120
00:06:07,501 --> 00:06:09,203
<c.magenta>不用进入别的应用当中</c>

121
00:06:09,269 --> 00:06:10,604
<c.magenta>（通知扩展 内容扩展）</c>

122
00:06:10,671 --> 00:06:12,773
<c.magenta>日历应用显示完整的计划</c>

123
00:06:12,840 --> 00:06:16,310
<c.magenta>以及接受或拒绝某个请求的选项</c>

124
00:06:17,411 --> 00:06:21,615
<c.magenta>照片应用在通知本身发送一张照片</c>

125
00:06:21,915 --> 00:06:23,784
<c.magenta>并可以点赞或写下评论</c>

126
00:06:24,885 --> 00:06:28,522
<c.magenta>再次说明 我们将看看该如何</c>

127
00:06:28,589 --> 00:06:32,593
<c.magenta>来为所有的应用创建通知样式</c>

128
00:06:34,494 --> 00:06:38,298
<c.magenta>watchOS通知和iOS通知同步</c>

129
00:06:38,765 --> 00:06:41,301
<c.magenta>所有发送给用户手机上的通知</c>

130
00:06:41,635 --> 00:06:45,472
<c.magenta>都会发送到用户的手表</c>

131
00:06:45,539 --> 00:06:46,507
<c.magenta>（watchOS通知）</c>

132
00:06:46,573 --> 00:06:49,710
<c.magenta>如果用户的手表不在手机范围内</c>

133
00:06:49,776 --> 00:06:52,980
<c.magenta>则可以计划通知</c>

134
00:06:53,180 --> 00:06:54,882
<c.magenta>就在watchOS应用上</c>

135
00:06:57,351 --> 00:07:02,155
<c.magenta>那么 如何访问</c>

136
00:06:57,351 --> 00:07:02,155
<c.magenta>那么 如何访问</c>

137
00:07:02,322 --> 00:07:04,925
<c.magenta>为此 去年我们推出了两个全新的框架</c>

138
00:07:05,259 --> 00:07:08,095
<c.magenta>即UserNotifications</c>

139
00:07:09,830 --> 00:07:12,633
<c.magenta>我们深入覆盖了所有不同的API</c>

140
00:07:12,699 --> 00:07:15,736
<c.magenta>在去年的WWDC 我们强烈建议大家</c>

141
00:07:15,802 --> 00:07:17,804
<c.magenta>看一下去年的这两场演讲</c>

142
00:07:18,038 --> 00:07:20,207
<c.magenta>里面包含了更多信息</c>

143
00:07:20,374 --> 00:07:21,875
<c.magenta>关于在概述里提到的所有内容</c>

144
00:07:23,911 --> 00:07:26,980
<c.magenta>好了 进入到我们的用例</c>

145
00:07:27,147 --> 00:07:30,617
<c.magenta>从第一个开始 关于隐藏通知内容</c>

146
00:07:31,018 --> 00:07:33,320
<c.magenta>为大家详细讲解这部分内容 欢迎Teja</c>

147
00:07:40,260 --> 00:07:42,729
<c.magenta>大家好 我是Teja Kondapalli</c>

148
00:07:43,063 --> 00:07:45,365
<c.magenta>我也是通知团队的一名工程师</c>

149
00:07:45,699 --> 00:07:49,603
<c.magenta>你们刚刚听到的 是对去年我们</c>

150
00:07:49,937 --> 00:07:53,774
<c.magenta>现在我将讲讲今年我们要宣布的API</c>

151
00:07:54,775 --> 00:07:56,944
<c.magenta>今年 我们决定关注一个功能</c>

152
00:07:57,344 --> 00:08:00,514
<c.magenta>称为隐藏通知内容</c>

153
00:07:57,344 --> 00:08:00,514
<c.magenta>称为隐藏通知内容</c>

154
00:08:01,181 --> 00:08:05,752
<c.magenta>即一种让用户隐藏隐私信息的方法</c>

155
00:08:05,819 --> 00:08:08,989
<c.magenta>在通知里 当不需要被看到时</c>

156
00:08:11,825 --> 00:08:13,026
<c.magenta>为何我们这么在乎这个？</c>

157
00:08:15,062 --> 00:08:17,798
<c.magenta>因为用户在乎自己的隐私</c>

158
00:08:18,999 --> 00:08:21,602
<c.magenta>我们都知道 通知很容易被看见</c>

159
00:08:22,135 --> 00:08:24,638
<c.magenta>它们的内容也比以前更丰富</c>

160
00:08:25,105 --> 00:08:29,376
<c.magenta>这意味着我们必须小心保护</c>

161
00:08:29,743 --> 00:08:30,878
<c.magenta>可能出现在通知里的敏感信息</c>

162
00:08:32,379 --> 00:08:36,149
<c.magenta>实际上 你们都在iOS 10里</c>

163
00:08:37,417 --> 00:08:41,488
<c.magenta>锁屏上通知信息看上去可能是这样</c>

164
00:08:42,789 --> 00:08:47,294
<c.magenta>如果进入“设置”——“通知”</c>

165
00:08:48,161 --> 00:08:53,634
<c.magenta>设置信息应用</c>

166
00:08:56,003 --> 00:09:01,108
<c.magenta>现在可以看到该信息的内容被隐藏了</c>

167
00:08:56,003 --> 00:09:01,108
<c.magenta>现在可以看到该信息的内容被隐藏了</c>

168
00:09:01,508 --> 00:09:04,444
<c.magenta>这是因为用户没有认证</c>

169
00:09:05,179 --> 00:09:06,647
<c.magenta>一旦用户得到认证</c>

170
00:09:07,247 --> 00:09:09,750
<c.magenta>信息的内容就会被显示</c>

171
00:09:10,884 --> 00:09:13,420
<c.magenta>我很激动地宣布 今年</c>

172
00:09:13,487 --> 00:09:18,992
<c.magenta>我们将这个功能扩大支持所有应用</c>

173
00:09:19,059 --> 00:09:20,928
<c.magenta>（隐藏通知内容 新功能）</c>

174
00:09:20,994 --> 00:09:23,330
<c.magenta>（扩大支持所有应用）</c>

175
00:09:25,132 --> 00:09:27,901
<c.magenta>我们也为用户提供了一个全局设置</c>

176
00:09:28,569 --> 00:09:31,939
<c.magenta>用户可以方便地进入设置——通知</c>

177
00:09:32,573 --> 00:09:34,308
<c.magenta>就在最上方 可以选择</c>

178
00:09:34,374 --> 00:09:36,210
<c.magenta>是否想显示预览</c>

179
00:09:36,577 --> 00:09:39,079
<c.magenta>总是解锁时还是关闭</c>

180
00:09:39,346 --> 00:09:43,350
<c.magenta>这将应用于所有应用的所有通知</c>

181
00:09:45,052 --> 00:09:49,389
<c.magenta>我们也提供给用户一个方法</c>

182
00:09:50,023 --> 00:09:52,626
<c.magenta>还是在设置里</c>

183
00:09:53,293 --> 00:09:55,796
<c.magenta>用户可以简单进入特定的应用</c>

184
00:09:56,697 --> 00:10:00,801
<c.magenta>对该应用的预览选择隐私设置</c>

185
00:09:56,697 --> 00:10:00,801
<c.magenta>对该应用的预览选择隐私设置</c>

186
00:10:01,134 --> 00:10:02,603
<c.magenta>他们想要进行微调</c>

187
00:10:02,836 --> 00:10:06,273
<c.magenta>因为某些应用可能在通知里</c>

188
00:10:06,540 --> 00:10:08,475
<c.magenta>和别的应用相比 显示更为敏感的信息</c>

189
00:10:11,378 --> 00:10:14,715
<c.magenta>现在 因为完全由用户决定</c>

190
00:10:14,982 --> 00:10:19,353
<c.magenta>在某个时间点 显示还是隐藏通知内容</c>

191
00:10:19,686 --> 00:10:24,391
<c.magenta>我们还为应用开发者</c>

192
00:10:24,458 --> 00:10:26,760
<c.magenta>隐藏通知看上去是什么样</c>

193
00:10:28,795 --> 00:10:31,598
<c.magenta>来看一下我写的这个应用</c>

194
00:10:31,665 --> 00:10:33,300
<c.magenta>发给我了一些通知</c>

195
00:10:33,700 --> 00:10:37,437
<c.magenta>在这里可以看到</c>

196
00:10:38,138 --> 00:10:40,741
<c.magenta>如果我的用户关闭了预览</c>

197
00:10:41,608 --> 00:10:44,211
<c.magenta>这是我的通知看上去的样子</c>

198
00:10:46,914 --> 00:10:49,816
<c.magenta>可以看到 所有内容都隐藏了</c>

199
00:10:50,150 --> 00:10:52,286
<c.magenta>标题 副标题和正文</c>

200
00:10:52,686 --> 00:10:54,821
<c.magenta>正文被占位符所代替</c>

201
00:10:55,322 --> 00:10:58,025
<c.magenta>占位符的默认值是 “通知”</c>

202
00:10:59,993 --> 00:11:01,028
<c.magenta>但是</c>

203
00:10:59,993 --> 00:11:01,028
<c.magenta>但是</c>

204
00:11:01,094 --> 00:11:02,529
<c.magenta>（正文占位符）</c>

205
00:11:03,197 --> 00:11:07,201
<c.magenta>如果我有很多和该应用相关的通知</c>

206
00:11:07,534 --> 00:11:08,735
<c.magenta>可以在这清楚地看到</c>

207
00:11:08,802 --> 00:11:10,704
<c.magenta>同时有两个不同的线程</c>

208
00:11:11,071 --> 00:11:14,441
<c.magenta>一个关于工作 另一个关于泰国度假</c>

209
00:11:15,275 --> 00:11:17,311
<c.magenta>如果用户关闭了预览</c>

210
00:11:18,145 --> 00:11:20,881
<c.magenta>通知列表可能会是这样</c>

211
00:11:21,448 --> 00:11:24,351
<c.magenta>为了避免出现该情况 我们更进了一步</c>

212
00:11:24,718 --> 00:11:29,256
<c.magenta>我们通过线程标识符</c>

213
00:11:30,057 --> 00:11:33,293
<c.magenta>如果已经在通知中使用线程标识符</c>

214
00:11:33,594 --> 00:11:35,629
<c.magenta>它将自动为你完成这些工作</c>

215
00:11:37,064 --> 00:11:39,366
<c.magenta>来看一个我的线程</c>

216
00:11:39,833 --> 00:11:43,270
<c.magenta>在这里可以看到显示“两个通知”</c>

217
00:11:43,637 --> 00:11:46,940
<c.magenta>这个线程是关于泰国度假的</c>

218
00:11:47,841 --> 00:11:49,142
<c.magenta>这些是评论</c>

219
00:11:49,209 --> 00:11:52,112
<c.magenta>我想更进一步自定义 是可以做到的</c>

220
00:11:53,780 --> 00:11:56,316
<c.magenta>在设置和通知相关的</c>

221
00:11:56,383 --> 00:11:58,819
<c.magenta>通知类别时</c>

222
00:11:59,653 --> 00:12:03,490
<c.magenta>可以给一个新属性传递一个新值</c>

223
00:11:59,653 --> 00:12:03,490
<c.magenta>可以给一个新属性传递一个新值</c>

224
00:12:03,991 --> 00:12:06,593
<c.magenta>在这里设置</c>

225
00:12:07,294 --> 00:12:11,398
<c.magenta>同时也设置hiddenPreviewsBody</c>

226
00:12:11,865 --> 00:12:15,235
<c.magenta>只传递一个常规字符串</c>

227
00:12:15,602 --> 00:12:18,338
<c.magenta>现在我的通知是这个样子</c>

228
00:12:19,406 --> 00:12:21,074
<c.magenta>还是不怎么对</c>

229
00:12:21,375 --> 00:12:23,577
<c.magenta>因为我知道有两个通知</c>

230
00:12:23,644 --> 00:12:26,613
<c.magenta>被折叠了</c>

231
00:12:27,347 --> 00:12:31,485
<c.magenta>因此 我决定传递一个格式字符串</c>

232
00:12:33,620 --> 00:12:34,488
<c.magenta>非常好</c>

233
00:12:34,821 --> 00:12:38,425
<c.magenta>现在我的通知看上去是对的</c>

234
00:12:39,092 --> 00:12:42,296
<c.magenta>但是这不适用于单数的情况</c>

235
00:12:42,963 --> 00:12:47,301
<c.magenta>如果只有一条通知</c>

236
00:12:48,068 --> 00:12:50,871
<c.magenta>幸好有办法解决</c>

237
00:12:50,938 --> 00:12:56,710
<c.magenta>单复数问题</c>

238
00:12:57,010 --> 00:12:59,146
<c.magenta>即字符串词典</c>

239
00:13:00,981 --> 00:13:04,885
<c.magenta>字符串词典是一个</c>

240
00:13:05,319 --> 00:13:07,254
<c.magenta>它看起来像这样</c>

241
00:13:07,654 --> 00:13:09,990
<c.magenta>首先在这里可以看到</c>

242
00:13:10,390 --> 00:13:13,227
<c.magenta>一行写着COMMENT_KEY</c>

243
00:13:13,493 --> 00:13:18,866
<c.magenta>它将指示系统</c>

244
00:13:19,433 --> 00:13:20,567
<c.magenta>在它下面</c>

245
00:13:21,502 --> 00:13:24,238
<c.magenta>可以看到有一个</c>

246
00:13:24,304 --> 00:13:26,840
<c.magenta>匹配单数和复数规则的键值</c>

247
00:13:26,907 --> 00:13:29,877
<c.magenta>写着“one”的格式字符串值</c>

248
00:13:30,244 --> 00:13:33,881
<c.magenta>“other”的格式字符串值</c>

249
00:13:33,947 --> 00:13:35,449
<c.magenta>（复数形式）</c>

250
00:13:35,516 --> 00:13:37,584
<c.magenta>使用字符串词典很重要</c>

251
00:13:37,651 --> 00:13:40,821
<c.magenta>因为不是所有语言都有</c>

252
00:13:40,888 --> 00:13:43,023
<c.magenta>单复数的差异</c>

253
00:13:43,524 --> 00:13:48,629
<c.magenta>比如 阿拉伯语的字符串词典是这样</c>

254
00:13:50,831 --> 00:13:53,367
<c.magenta>可以看到有很多其他的选项</c>

255
00:13:53,433 --> 00:13:55,569
<c.magenta>除了单复数之外</c>

256
00:13:55,769 --> 00:13:59,840
<c.magenta>所以 要解决复数形式和本地化问题</c>

257
00:14:00,107 --> 00:14:02,643
<c.magenta>使用字符串词典非常重要</c>

258
00:14:03,210 --> 00:14:05,312
<c.magenta>现在已经设置好字符串词典</c>

259
00:14:07,447 --> 00:14:09,082
<c.magenta>当设置commentCategory时</c>

260
00:14:09,149 --> 00:14:11,118
<c.magenta>不再传递一个格式字符串</c>

261
00:14:11,518 --> 00:14:13,520
<c.magenta>而是传递一个NSLocalizedString</c>

262
00:14:13,787 --> 00:14:17,491
<c.magenta>传递的第一个参数是“COMMENT_KEY”</c>

263
00:14:17,758 --> 00:14:20,794
<c.magenta>它和复数规则相关联</c>

264
00:14:20,861 --> 00:14:22,196
<c.magenta>是和它相关联的键</c>

265
00:14:22,696 --> 00:14:25,999
<c.magenta>传递的第二个参数只是一个注释</c>

266
00:14:26,066 --> 00:14:27,935
<c.magenta>关于这个字符串是什么</c>

267
00:14:31,004 --> 00:14:33,574
<c.magenta>想了解更多本地化的内容</c>

268
00:14:33,807 --> 00:14:39,313
<c.magenta>早些时候我们在WWDC聊过</c>

269
00:14:39,580 --> 00:14:42,316
<c.magenta>我们的文档里也有很好的资源</c>

270
00:14:44,084 --> 00:14:47,221
<c.magenta>现在我的通知正确显示</c>

271
00:14:47,287 --> 00:14:49,857
<c.magenta>我很确定它将会显示</c>

272
00:14:50,190 --> 00:14:52,593
<c.magenta>如果只有一条评论的话</c>

273
00:14:55,629 --> 00:14:56,930
<c.magenta>但如果我们更进一步</c>

274
00:14:58,332 --> 00:15:00,300
<c.magenta>实际上珍给我发了一张照片</c>

275
00:14:58,332 --> 00:15:00,300
<c.magenta>实际上珍给我发了一张照片</c>

276
00:15:00,367 --> 00:15:03,637
<c.magenta>她没有发给我评论 我想表明这一点</c>

277
00:15:03,737 --> 00:15:05,439
<c.magenta>也可以做到</c>

278
00:15:05,939 --> 00:15:09,643
<c.magenta>commentCategory</c>

279
00:15:10,110 --> 00:15:12,913
<c.magenta>也用同样方法设置一个</c>

280
00:15:13,413 --> 00:15:17,651
<c.magenta>将珍的通知和图片类别相关联</c>

281
00:15:17,918 --> 00:15:20,220
<c.magenta>约翰的通知和评论类别相关联</c>

282
00:15:20,687 --> 00:15:24,758
<c.magenta>现在我有两个通知分属两个不同类别</c>

283
00:15:25,092 --> 00:15:27,394
<c.magenta>但它们被发送到同一线程</c>

284
00:15:27,928 --> 00:15:31,031
<c.magenta>因此折叠将自动生效</c>

285
00:15:31,265 --> 00:15:34,368
<c.magenta>正确显示一张图片和一条评论</c>

286
00:15:37,504 --> 00:15:39,773
<c.magenta>如果进一步回想 这都是一个线程</c>

287
00:15:39,840 --> 00:15:43,143
<c.magenta>也许我想区分这个线程和</c>

288
00:15:43,410 --> 00:15:46,847
<c.magenta>也属于这个应用通知的另一线程</c>

289
00:15:47,414 --> 00:15:48,415
<c.magenta>也是可以实现的</c>

290
00:15:48,815 --> 00:15:51,318
<c.magenta>在这里可以看到标题为“泰国度假”</c>

291
00:15:51,385 --> 00:15:53,620
<c.magenta>这标明了所在线程</c>

292
00:15:55,055 --> 00:15:56,423
<c.magenta>也许我想显示出来</c>

293
00:15:57,624 --> 00:16:00,794
<c.magenta>再一次 在设置类别时</c>

294
00:15:57,624 --> 00:16:00,794
<c.magenta>再一次 在设置类别时</c>

295
00:16:01,128 --> 00:16:05,499
<c.magenta>可以传递一个或两个新的选项</c>

296
00:16:05,899 --> 00:16:10,070
<c.magenta>HiddenPreviewsShowTitle</c>

297
00:16:10,604 --> 00:16:13,106
<c.magenta>这里我只传递</c>

298
00:16:14,141 --> 00:16:15,709
<c.magenta>只传递标题</c>

299
00:16:15,776 --> 00:16:19,446
<c.magenta>因为显示副标题会泄漏太多信息</c>

300
00:16:19,513 --> 00:16:20,881
<c.magenta>我只想显示标题</c>

301
00:16:22,115 --> 00:16:25,886
<c.magenta>现在我的通知正确显示“泰国度假”</c>

302
00:16:25,953 --> 00:16:29,423
<c.magenta>并标明了线程 一张图片和一条评论</c>

303
00:16:32,526 --> 00:16:36,396
<c.magenta>现在我们知道如何自定义</c>

304
00:16:36,864 --> 00:16:39,766
<c.magenta>重要的是要记住</c>

305
00:16:40,300 --> 00:16:42,703
<c.magenta>用户可以在任何时间点做出决定</c>

306
00:16:42,970 --> 00:16:46,340
<c.magenta>是否隐藏或显示一个通知内容</c>

307
00:16:47,374 --> 00:16:51,278
<c.magenta>我们已经提供了一个</c>

308
00:16:51,612 --> 00:16:55,415
<c.magenta>可以通过showPreviewsSetting来检索</c>

309
00:16:55,782 --> 00:16:57,851
<c.magenta>在UNNotification设置里</c>

310
00:16:57,918 --> 00:16:59,953
<c.magenta>（最佳实践）</c>

311
00:17:00,020 --> 00:17:02,222
<c.magenta>使用线程标识符也很重要</c>

312
00:17:02,289 --> 00:17:04,858
<c.magenta>利用自动折叠</c>

313
00:17:04,925 --> 00:17:07,361
<c.magenta>我们已经支持该功能</c>

314
00:17:08,729 --> 00:17:10,897
<c.magenta>使用字符串词典也很重要</c>

315
00:17:11,098 --> 00:17:14,902
<c.magenta>来解决复数和本地化问题</c>

316
00:17:18,704 --> 00:17:22,709
<c.magenta>我们已经看完关于</c>

317
00:17:23,143 --> 00:17:26,914
<c.magenta>第二个用例是我知道</c>

318
00:17:26,980 --> 00:17:29,950
<c.magenta>即发送推送通知到应用里</c>

319
00:17:30,284 --> 00:17:33,253
<c.magenta>对于推送通知也可以做很多有趣的事</c>

320
00:17:33,587 --> 00:17:37,291
<c.magenta>只要我们可以修改它们</c>

321
00:17:37,891 --> 00:17:39,359
<c.magenta>我这么说的意思是</c>

322
00:17:41,461 --> 00:17:45,999
<c.magenta>想象我想在远程通知里发送一些媒体</c>

323
00:17:46,366 --> 00:17:49,036
<c.magenta>但是该媒体不适合推送负载</c>

324
00:17:49,803 --> 00:17:53,507
<c.magenta>我可以采取另一种方法</c>

325
00:17:53,574 --> 00:17:55,642
<c.magenta>比如可以找到它的URL</c>

326
00:17:56,410 --> 00:18:01,281
<c.magenta>然后在设备上可以下载该媒体</c>

327
00:17:56,410 --> 00:18:01,281
<c.magenta>然后在设备上可以下载该媒体</c>

328
00:18:01,348 --> 00:18:02,850
<c.magenta>然后显示通知</c>

329
00:18:05,919 --> 00:18:07,120
<c.magenta>另一个非常好的例子</c>

330
00:18:07,921 --> 00:18:12,025
<c.magenta>是如果服务端</c>

331
00:18:12,426 --> 00:18:16,029
<c.magenta>应该在设备上先将其解密</c>

332
00:18:16,096 --> 00:18:17,965
<c.magenta>（修改推送内容用例）</c>

333
00:18:18,031 --> 00:18:19,666
<c.magenta>另一个非常好的应用</c>

334
00:18:19,733 --> 00:18:24,204
<c.magenta>是在通知里添加上下文相关信息</c>

335
00:18:25,138 --> 00:18:28,308
<c.magenta>比如位置 时间或健康数据</c>

336
00:18:29,109 --> 00:18:31,912
<c.magenta>该信息只显示在用户的设备上</c>

337
00:18:32,179 --> 00:18:36,250
<c.magenta>在显示给用户之前</c>

338
00:18:37,751 --> 00:18:41,221
<c.magenta>为了实现该功能</c>

339
00:18:41,588 --> 00:18:43,257
<c.magenta>是我们在去年推出的</c>

340
00:18:45,192 --> 00:18:47,594
<c.magenta>让我们深入看一个例子</c>

341
00:18:48,195 --> 00:18:51,498
<c.magenta>我想在远程通知里发送一个视频</c>

342
00:18:52,766 --> 00:18:57,504
<c.magenta>远程服务器会发送给APNS</c>

343
00:18:58,105 --> 00:19:00,941
<c.magenta>在该负载里</c>

344
00:18:58,105 --> 00:19:00,941
<c.magenta>在该负载里</c>

345
00:19:01,008 --> 00:19:02,509
<c.magenta>（修改推送内容 示例）</c>

346
00:19:02,576 --> 00:19:05,279
<c.magenta>之后通知会发送到我的设备</c>

347
00:19:05,579 --> 00:19:08,048
<c.magenta>服务扩展可以</c>

348
00:19:08,115 --> 00:19:09,950
<c.magenta>拦截该通知</c>

349
00:19:10,484 --> 00:19:13,220
<c.magenta>到那时 我可以和远程服务器通话</c>

350
00:19:14,087 --> 00:19:18,725
<c.magenta>并在附加视频到通知之前</c>

351
00:19:19,359 --> 00:19:21,028
<c.magenta>并将预览显示给用户</c>

352
00:19:21,895 --> 00:19:23,430
<c.magenta>来看如何在代码中实现</c>

353
00:19:25,933 --> 00:19:28,502
<c.magenta>远程负载看起来像这样</c>

354
00:19:29,236 --> 00:19:32,206
<c.magenta>设置“mutable-content”标识很重要</c>

355
00:19:32,539 --> 00:19:34,341
<c.magenta>它将向设备标明</c>

356
00:19:34,541 --> 00:19:36,810
<c.magenta>需要启动服务扩展</c>

357
00:19:37,477 --> 00:19:39,279
<c.magenta>在显示通知之前</c>

358
00:19:40,147 --> 00:19:43,016
<c.magenta>还有一些额外的元数据</c>

359
00:19:43,617 --> 00:19:46,787
<c.magenta>比如该媒体的类型 视频URL</c>

360
00:19:47,221 --> 00:19:53,260
<c.magenta>拍摄位置以及上载该视频的用户信息</c>

361
00:19:55,395 --> 00:19:57,431
<c.magenta>当设置服务扩展时</c>

362
00:19:57,764 --> 00:20:00,567
<c.magenta>只需进入Xcode 创建一个新目标</c>

363
00:19:57,764 --> 00:20:00,567
<c.magenta>只需进入Xcode 创建一个新目标</c>

364
00:20:00,634 --> 00:20:04,071
<c.magenta>选择通知服务扩展模板</c>

365
00:20:05,472 --> 00:20:08,242
<c.magenta>会得到一个像这样的模板</c>

366
00:20:08,542 --> 00:20:12,613
<c.magenta>在服务扩展里 当通知被发送时</c>

367
00:20:13,747 --> 00:20:16,116
<c.magenta>会收到一个调用包含内容处理程序的</c>

368
00:20:16,183 --> 00:20:17,718
<c.magenta>didReceive_request函数</c>

369
00:20:18,051 --> 00:20:19,786
<c.magenta>我要做的第一件事</c>

370
00:20:19,953 --> 00:20:21,822
<c.magenta>就是保存内容处理程序</c>

371
00:20:21,889 --> 00:20:24,758
<c.magenta>和发送的远程内容</c>

372
00:20:25,425 --> 00:20:28,896
<c.magenta>以防万一我无法完成操作</c>

373
00:20:29,463 --> 00:20:30,697
<c.magenta>保存好了</c>

374
00:20:32,199 --> 00:20:33,200
<c.magenta>然后</c>

375
00:20:34,034 --> 00:20:36,703
<c.magenta>可以用自己想要的方式处理请求</c>

376
00:20:37,671 --> 00:20:41,542
<c.magenta>在这里首先要做的 是提取视频URL</c>

377
00:20:42,042 --> 00:20:43,911
<c.magenta>从远程负载上</c>

378
00:20:43,977 --> 00:20:47,147
<c.magenta>因为这是一些自定义元数据</c>

379
00:20:47,214 --> 00:20:51,185
<c.magenta>我使用用户信息词典访问该值</c>

380
00:20:52,719 --> 00:20:55,656
<c.magenta>接下来是从URL下载</c>

381
00:20:55,722 --> 00:20:57,791
<c.magenta>采用任何想要的机制</c>

382
00:20:58,392 --> 00:21:02,462
<c.magenta>然后传递一个</c>

383
00:20:58,392 --> 00:21:02,462
<c.magenta>然后传递一个</c>

384
00:21:02,996 --> 00:21:06,066
<c.magenta>该函数我想在下载完成后执行</c>

385
00:21:07,601 --> 00:21:11,538
<c.magenta>下载结束后 提取该文件并创建</c>

386
00:21:11,605 --> 00:21:12,906
<c.magenta>一个附件</c>

387
00:21:13,507 --> 00:21:19,813
<c.magenta>把它添加到通知内容 然后发送出去</c>

388
00:21:21,715 --> 00:21:23,984
<c.magenta>现在我的通知看上去很不错</c>

389
00:21:24,051 --> 00:21:28,055
<c.magenta>它有一个附件 一个视频附件</c>

390
00:21:29,156 --> 00:21:33,393
<c.magenta>但是如果我无法在指定时间</c>

391
00:21:33,727 --> 00:21:34,595
<c.magenta>完成下载该怎么办？</c>

392
00:21:34,661 --> 00:21:36,496
<c.magenta>在服务扩展上的时间</c>

393
00:21:36,563 --> 00:21:38,665
<c.magenta>是有限的</c>

394
00:21:39,633 --> 00:21:42,369
<c.magenta>如果我无法完成 将会产生一个回退</c>

395
00:21:42,603 --> 00:21:46,106
<c.magenta>该函数也在服务扩展中调用</c>

396
00:21:46,273 --> 00:21:48,675
<c.magenta>函数名为serviceExtensionTime</c>

397
00:21:49,776 --> 00:21:53,614
<c.magenta>在这里 可以利用两个内容处理程序</c>

398
00:21:53,680 --> 00:21:55,816
<c.magenta>以及之前保存的内容</c>

399
00:21:59,553 --> 00:22:03,724
<c.magenta>第一件事是提取媒体类型</c>

400
00:21:59,553 --> 00:22:03,724
<c.magenta>第一件事是提取媒体类型</c>

401
00:22:03,790 --> 00:22:06,426
<c.magenta>也和元数据打包在一起</c>

402
00:22:06,827 --> 00:22:08,862
<c.magenta>只需设置标题为</c>

403
00:22:09,530 --> 00:22:12,799
<c.magenta>“传入的媒体”或“传入的视频”</c>

404
00:22:13,333 --> 00:22:15,536
<c.magenta>然后把通知发送出去</c>

405
00:22:17,571 --> 00:22:20,207
<c.magenta>现在 我们了解了如何使用服务扩展</c>

406
00:22:21,041 --> 00:22:22,309
<c.magenta>请记住几件事</c>

407
00:22:22,376 --> 00:22:25,279
<c.magenta>那就是有很短的执行时间</c>

408
00:22:25,345 --> 00:22:28,515
<c.magenta>执行时间是有限的 内存也是有限的</c>

409
00:22:29,283 --> 00:22:34,655
<c.magenta>但是 请利用回退 尽可能通知到位</c>

410
00:22:34,788 --> 00:22:38,091
<c.magenta>如果无法完成操作的话</c>

411
00:22:38,959 --> 00:22:41,395
<c.magenta>还有很重要的一点需要注意</c>

412
00:22:41,495 --> 00:22:43,630
<c.magenta>服务扩展可以处理的通知</c>

413
00:22:43,697 --> 00:22:46,967
<c.magenta>都是UI通知 会显示给用户</c>

414
00:22:48,135 --> 00:22:50,771
<c.magenta>它们和静音通知不同</c>

415
00:22:51,772 --> 00:22:53,273
<c.magenta>我这么说的意思是</c>

416
00:22:53,807 --> 00:22:58,145
<c.magenta>当APNS把通知发送至设备时</c>

417
00:22:58,612 --> 00:23:01,782
<c.magenta>服务扩展可以拦截它</c>

418
00:22:58,612 --> 00:23:01,782
<c.magenta>服务扩展可以拦截它</c>

419
00:23:01,849 --> 00:23:02,783
<c.magenta>如之前所见</c>

420
00:23:03,183 --> 00:23:06,153
<c.magenta>在服务扩展上的任何以及所有工作</c>

421
00:23:06,220 --> 00:23:08,889
<c.magenta>都应该和传入的通知相关联</c>

422
00:23:09,156 --> 00:23:11,458
<c.magenta>应该没有额外的</c>

423
00:23:11,892 --> 00:23:14,194
<c.magenta>关于应用的后台工作在这里执行</c>

424
00:23:14,595 --> 00:23:18,465
<c.magenta>所有工作都应该是 要么修改</c>

425
00:23:19,099 --> 00:23:21,902
<c.magenta>服务扩展也没有权力</c>

426
00:23:21,969 --> 00:23:25,973
<c.magenta>删除该通知或阻止其被显示</c>

427
00:23:26,206 --> 00:23:29,610
<c.magenta>该通知会被发送到设备上</c>

428
00:23:30,677 --> 00:23:33,747
<c.magenta>换一个方式</c>

429
00:23:33,814 --> 00:23:36,517
<c.magenta>如果你想在后台运行应用</c>

430
00:23:37,217 --> 00:23:39,720
<c.magenta>可以发送一个静音通知</c>

431
00:23:40,454 --> 00:23:43,223
<c.magenta>也可以发送一个静音通知后</c>

432
00:23:43,724 --> 00:23:45,125
<c.magenta>在后台启动应用</c>

433
00:23:45,192 --> 00:23:47,694
<c.magenta>你的应用可以决定是否</c>

434
00:23:47,761 --> 00:23:51,798
<c.magenta>计划一个本地通知</c>

435
00:23:54,268 --> 00:23:57,471
<c.magenta>现在我有一个很好的带附件的通知</c>

436
00:23:57,838 --> 00:24:01,008
<c.magenta>现利用3D Touch进入丰富通知</c>

437
00:23:57,838 --> 00:24:01,008
<c.magenta>现利用3D Touch进入丰富通知</c>

438
00:24:01,475 --> 00:24:04,044
<c.magenta>什么都不做 这是默认的样子</c>

439
00:24:04,578 --> 00:24:07,314
<c.magenta>看上去不错 但我想对通知自定义</c>

440
00:24:08,515 --> 00:24:11,385
<c.magenta>为了向大家演示如何自定义这些视图</c>

441
00:24:11,552 --> 00:24:14,154
<c.magenta>我将邀请Kritarth再次上台</c>

442
00:24:16,156 --> 00:24:17,691
<c.magenta>（自定义丰富通知）</c>

443
00:24:19,960 --> 00:24:20,894
<c.magenta>谢谢 Teja</c>

444
00:24:21,161 --> 00:24:23,697
<c.magenta>到目前为止 我们已经看了前两个用例</c>

445
00:24:23,964 --> 00:24:26,233
<c.magenta>第一个是关于隐藏通知内容</c>

446
00:24:26,300 --> 00:24:27,801
<c.magenta>以及如何自定义它们</c>

447
00:24:28,368 --> 00:24:31,271
<c.magenta>第二个是关于修改推送通知内容</c>

448
00:24:32,105 --> 00:24:35,609
<c.magenta>接下来看第三个用例</c>

449
00:24:36,476 --> 00:24:38,812
<c.magenta>如前所见</c>

450
00:24:38,879 --> 00:24:43,350
<c.magenta>这是一个带媒体附件的</c>

451
00:24:43,917 --> 00:24:46,019
<c.magenta>播放按钮覆盖在视频之上</c>

452
00:24:46,086 --> 00:24:49,189
<c.magenta>这样用户可以当即播放媒体</c>

453
00:24:49,256 --> 00:24:52,092
<c.magenta>并且默认内容显示在其下方</c>

454
00:24:52,759 --> 00:24:54,728
<c.magenta>如果没有附加媒体</c>

455
00:24:54,795 --> 00:24:58,565
<c.magenta>则丰富通知的全部将显示为默认内容</c>

456
00:24:59,633 --> 00:25:03,270
<c.magenta>但是 如果想自定义该丰富通知</c>

457
00:24:59,633 --> 00:25:03,270
<c.magenta>但是 如果想自定义该丰富通知</c>

458
00:25:03,604 --> 00:25:07,541
<c.magenta>并且给予它属于应用特有的观感</c>

459
00:25:08,876 --> 00:25:13,280
<c.magenta>如果想完全自定义</c>

460
00:25:13,447 --> 00:25:14,581
<c.magenta>按照自己的想法 该怎么做？</c>

461
00:25:15,549 --> 00:25:18,619
<c.magenta>并且 在过程中 你将这些通知变得</c>

462
00:25:18,685 --> 00:25:21,755
<c.magenta>对用户来说 互动性很强和多样化</c>

463
00:25:21,822 --> 00:25:25,492
<c.magenta>用户可以就在通知里完成这些操作</c>

464
00:25:25,559 --> 00:25:27,895
<c.magenta>而不需要回到应用当中</c>

465
00:25:28,428 --> 00:25:30,531
<c.magenta>以上都可以实现</c>

466
00:25:30,831 --> 00:25:34,668
<c.magenta>为此 我们使用内容扩展的</c>

467
00:25:35,169 --> 00:25:38,272
<c.magenta>来看一下如何设置内容扩展</c>

468
00:25:39,573 --> 00:25:41,909
<c.magenta>目前 我们看到服务扩展</c>

469
00:25:41,975 --> 00:25:43,544
<c.magenta>在下载媒体的地方</c>

470
00:25:43,610 --> 00:25:46,680
<c.magenta>然后通知显示在用户设备上</c>

471
00:25:47,481 --> 00:25:50,150
<c.magenta>如果已经设置好一个内容扩展</c>

472
00:25:50,317 --> 00:25:53,487
<c.magenta>它和通知拥有相同的类别标识符</c>

473
00:25:53,687 --> 00:25:56,223
<c.magenta>那么 系统将会启动该内容扩展</c>

474
00:25:56,423 --> 00:25:59,026
<c.magenta>并设置所有不同的</c>

475
00:25:59,092 --> 00:26:04,398
<c.magenta>视图和视图控制器</c>

476
00:25:59,092 --> 00:26:04,398
<c.magenta>视图和视图控制器</c>

477
00:26:04,565 --> 00:26:06,133
<c.magenta>然后 使用这些视图控制器</c>

478
00:26:06,200 --> 00:26:09,970
<c.magenta>显示该自定义丰富通知的用户界面</c>

479
00:26:12,005 --> 00:26:14,341
<c.magenta>你可以自定义哪些不同的东西</c>

480
00:26:14,408 --> 00:26:16,310
<c.magenta>作为这些丰富通知的一部分？</c>

481
00:26:16,910 --> 00:26:20,247
<c.magenta>可以改变标题 正位于内容上方</c>

482
00:26:21,315 --> 00:26:24,451
<c.magenta>也可以完全自定义内容和显示方式</c>

483
00:26:24,518 --> 00:26:25,853
<c.magenta>（自定义标题 自定义UI）</c>

484
00:26:25,919 --> 00:26:28,722
<c.magenta>还可以选择删除默认内容</c>

485
00:26:28,789 --> 00:26:32,192
<c.magenta>如果已经将该信息包含到自定义部分</c>

486
00:26:32,259 --> 00:26:33,360
<c.magenta>（删除默认内容）</c>

487
00:26:34,394 --> 00:26:36,830
<c.magenta>为了设置内容扩展</c>

488
00:26:36,897 --> 00:26:39,833
<c.magenta>Xcode提供了</c>

489
00:26:39,900 --> 00:26:41,368
<c.magenta>（通知内容扩展）</c>

490
00:26:41,702 --> 00:26:44,238
<c.magenta>在这个自定义过程里</c>

491
00:26:44,304 --> 00:26:45,439
<c.magenta>是info.plist</c>

492
00:26:45,973 --> 00:26:49,009
<c.magenta>当然 要做的第一件事是</c>

493
00:26:49,076 --> 00:26:51,578
<c.magenta>为所有想要</c>

494
00:26:51,645 --> 00:26:53,013
<c.magenta>和该内容扩展相关联的通知</c>

495
00:26:54,381 --> 00:26:56,450
<c.magenta>在这里有一些很简单的类别</c>

496
00:26:56,517 --> 00:26:59,419
<c.magenta>只需把默认内容隐藏标识设为是</c>

497
00:26:59,853 --> 00:27:02,456
<c.magenta>这将直接删除默认内容</c>

498
00:26:59,853 --> 00:27:02,456
<c.magenta>这将直接删除默认内容</c>

499
00:27:02,523 --> 00:27:04,892
<c.magenta>在自定义UI下方</c>

500
00:27:06,093 --> 00:27:08,929
<c.magenta>并且 若要覆盖默认标题</c>

501
00:27:09,296 --> 00:27:12,032
<c.magenta>可以通过简单设置这个标识即可</c>

502
00:27:14,201 --> 00:27:16,236
<c.magenta>当我们看代码时</c>

503
00:27:16,503 --> 00:27:19,039
<c.magenta>可以看到</c>

504
00:27:19,106 --> 00:27:22,476
<c.magenta>实施了UNNotification</c>

505
00:27:23,744 --> 00:27:26,380
<c.magenta>进入该内容扩展的方法</c>

506
00:27:26,446 --> 00:27:28,782
<c.magenta>是didReceive_notification方法</c>

507
00:27:29,383 --> 00:27:32,186
<c.magenta>这里的UNNotification对象包含</c>

508
00:27:32,252 --> 00:27:34,154
<c.magenta>和该通知相关的所有信息</c>

509
00:27:35,155 --> 00:27:37,791
<c.magenta>所以 我们做的第一件事是直接</c>

510
00:27:37,858 --> 00:27:39,760
<c.magenta>从该通知中提取内容</c>

511
00:27:40,694 --> 00:27:42,896
<c.magenta>然后 可以继续提取</c>

512
00:27:42,963 --> 00:27:45,499
<c.magenta>在服务扩展里下载的附件</c>

513
00:27:46,900 --> 00:27:49,803
<c.magenta>然后 设置自定义媒体播放器</c>

514
00:27:49,870 --> 00:27:51,605
<c.magenta>该播放器在自定义UI里设置</c>

515
00:27:53,307 --> 00:27:55,843
<c.magenta>在该自定义里还可以做更多事</c>

516
00:27:55,909 --> 00:27:59,680
<c.magenta>其中一件就是 设置被覆盖的标题</c>

517
00:27:59,746 --> 00:28:01,548
<c.magenta>在内容扩展的顶部</c>

518
00:27:59,746 --> 00:28:01,548
<c.magenta>在内容扩展的顶部</c>

519
00:28:03,116 --> 00:28:06,453
<c.magenta>userInfo对象</c>

520
00:28:06,520 --> 00:28:09,156
<c.magenta>可以和通知负载相关联</c>

521
00:28:09,523 --> 00:28:12,492
<c.magenta>它允许发送更多信息</c>

522
00:28:12,926 --> 00:28:15,963
<c.magenta>因此通知并不局限于标题 副标题</c>

523
00:28:16,029 --> 00:28:17,965
<c.magenta>和正文</c>

524
00:28:18,398 --> 00:28:21,568
<c.magenta>在这里的例子里 我们打包不同的</c>

525
00:28:21,635 --> 00:28:25,706
<c.magenta>和该通知相关的信息</c>

526
00:28:25,973 --> 00:28:28,442
<c.magenta>拍摄地点</c>

527
00:28:28,509 --> 00:28:30,010
<c.magenta>以及可能的相关描述</c>

528
00:28:30,077 --> 00:28:33,413
<c.magenta>只需从userInfo对象</c>

529
00:28:34,915 --> 00:28:38,118
<c.magenta>还可以设置自定义标签</c>

530
00:28:38,185 --> 00:28:41,822
<c.magenta>它也已经绑定了</c>

531
00:28:45,292 --> 00:28:47,461
<c.magenta>现在 在代码中已经设置完成</c>

532
00:28:47,528 --> 00:28:49,763
<c.magenta>看一下自定义UI的样子</c>

533
00:28:50,497 --> 00:28:53,967
<c.magenta>用户在该通知里使用3D Touch</c>

534
00:28:54,401 --> 00:28:57,771
<c.magenta>可以看到整个UI已经完全不一样</c>

535
00:28:57,838 --> 00:29:01,108
<c.magenta>有些类似一个应用</c>

536
00:28:57,838 --> 00:29:01,108
<c.magenta>有些类似一个应用</c>

537
00:29:02,643 --> 00:29:05,179
<c.magenta>因此 我们从这种界面</c>

538
00:29:06,413 --> 00:29:08,448
<c.magenta>变成这种完全自定义的界面</c>

539
00:29:09,850 --> 00:29:11,852
<c.magenta>顶部有自定义标题</c>

540
00:29:13,620 --> 00:29:15,222
<c.magenta>完全自定义的UI</c>

541
00:29:15,289 --> 00:29:19,126
<c.magenta>视频被所有相关信息包围</c>

542
00:29:19,193 --> 00:29:21,595
<c.magenta>你想把这些信息显示为通知的一部分</c>

543
00:29:22,863 --> 00:29:25,566
<c.magenta>并且 我们隐藏了默认内容</c>

544
00:29:25,632 --> 00:29:28,769
<c.magenta>自定义内容中</c>

545
00:29:30,838 --> 00:29:32,105
<c.magenta>（默认内容不存在）</c>

546
00:29:33,140 --> 00:29:36,243
<c.magenta>好了 再来看一下转换</c>

547
00:29:36,443 --> 00:29:40,113
<c.magenta>请注意该内容扩展的初始尺寸</c>

548
00:29:40,180 --> 00:29:41,481
<c.magenta>在这里加载的时候</c>

549
00:29:44,651 --> 00:29:47,621
<c.magenta>也许已经注意到一开始</c>

550
00:29:47,688 --> 00:29:51,525
<c.magenta>然后慢慢缩小</c>

551
00:29:51,925 --> 00:29:55,095
<c.magenta>这对用户来说也许不是一个好的体验</c>

552
00:29:55,162 --> 00:29:57,564
<c.magenta>如果他们3D Touch后</c>

553
00:29:57,998 --> 00:30:01,001
<c.magenta>我们也有办法解决这个问题</c>

554
00:29:57,998 --> 00:30:01,001
<c.magenta>我们也有办法解决这个问题</c>

555
00:30:01,235 --> 00:30:03,637
<c.magenta>为此 我们回到info.plist</c>

556
00:30:05,205 --> 00:30:07,674
<c.magenta>在那里可以设置一个属性</c>

557
00:30:07,741 --> 00:30:09,276
<c.magenta>即ContentSizeRatio</c>

558
00:30:09,910 --> 00:30:11,879
<c.magenta>该比例是最好的估测</c>

559
00:30:12,279 --> 00:30:13,847
<c.magenta>可以告诉系统</c>

560
00:30:13,914 --> 00:30:17,584
<c.magenta>关于内容扩展的高宽比</c>

561
00:30:18,085 --> 00:30:21,555
<c.magenta>系统知道了想要加载的</c>

562
00:30:21,622 --> 00:30:22,990
<c.magenta>内容扩展的初始尺寸</c>

563
00:30:23,657 --> 00:30:26,226
<c.magenta>本例将该值设为0.8</c>

564
00:30:27,461 --> 00:30:29,162
<c.magenta>设置完成后</c>

565
00:30:30,797 --> 00:30:33,867
<c.magenta>进行转换 现在视频加载非常正确完美</c>

566
00:30:33,934 --> 00:30:35,335
<c.magenta>完全符合内容尺寸</c>

567
00:30:35,569 --> 00:30:38,071
<c.magenta>对于用户来说 这是种更好的体验</c>

568
00:30:40,340 --> 00:30:43,443
<c.magenta>在我们继续之前 来看一下一些关于</c>

569
00:30:43,510 --> 00:30:45,612
<c.magenta>自定义这些丰富通知的最佳实践</c>

570
00:30:47,047 --> 00:30:50,017
<c.magenta>我们已经强调 可以自定义UI元素</c>

571
00:30:50,551 --> 00:30:52,486
<c.magenta>可以显示所有相关信息</c>

572
00:30:52,553 --> 00:30:54,621
<c.magenta>利用这些你认为合适的元素</c>

573
00:30:56,290 --> 00:30:59,126
<c.magenta>也可以简单地重用应用的视图控制器</c>

574
00:30:59,193 --> 00:31:01,295
<c.magenta>在这些通知内容扩展里</c>

575
00:30:59,193 --> 00:31:01,295
<c.magenta>在这些通知内容扩展里</c>

576
00:31:01,395 --> 00:31:03,397
<c.magenta>不用重复任何工作</c>

577
00:31:03,597 --> 00:31:05,132
<c.magenta>它们只是视图控制器</c>

578
00:31:07,568 --> 00:31:09,603
<c.magenta>正确的尺寸也很重要</c>

579
00:31:09,670 --> 00:31:13,740
<c.magenta>初始加载尺寸也应该</c>

580
00:31:13,807 --> 00:31:15,776
<c.magenta>符合内容 符合自定义内容</c>

581
00:31:17,477 --> 00:31:21,548
<c.magenta>最后 内容的快速加载和布局也很重要</c>

582
00:31:22,082 --> 00:31:25,485
<c.magenta>因为 我们的确想让从通知到</c>

583
00:31:25,552 --> 00:31:28,889
<c.magenta>到丰富通知的转换</c>

584
00:31:31,925 --> 00:31:35,829
<c.magenta>好 这就是最终的自定义UI</c>

585
00:31:36,163 --> 00:31:38,165
<c.magenta>这里附加了一个视频</c>

586
00:31:38,298 --> 00:31:41,001
<c.magenta>然而 无法播放</c>

587
00:31:41,802 --> 00:31:44,972
<c.magenta>这看上去很来自某个社交媒体流</c>

588
00:31:45,038 --> 00:31:46,940
<c.magenta>但无法和它互动</c>

589
00:31:47,841 --> 00:31:51,645
<c.magenta>我们可以在通知里加上</c>

590
00:31:51,979 --> 00:31:55,616
<c.magenta>这将引出最后一个用例</c>

591
00:31:56,416 --> 00:31:58,151
<c.magenta>（用户自定义输入）</c>

592
00:31:58,218 --> 00:31:59,486
<c.magenta>你们其中有些人也许已经了解</c>

593
00:31:59,553 --> 00:32:03,090
<c.magenta>内容扩展正文不允许任何轻触动作</c>

594
00:31:59,553 --> 00:32:03,090
<c.magenta>内容扩展正文不允许任何轻触动作</c>

595
00:32:03,891 --> 00:32:04,791
<c.magenta>然而 别担心</c>

596
00:32:04,858 --> 00:32:08,028
<c.magenta>我们提供了多重输入机制</c>

597
00:32:08,095 --> 00:32:11,431
<c.magenta>可以让这些通知可互动</c>

598
00:32:12,299 --> 00:32:16,537
<c.magenta>它们是媒体按钮 通知操作</c>

599
00:32:17,037 --> 00:32:18,305
<c.magenta>和自定义用户输入</c>

600
00:32:18,672 --> 00:32:21,975
<c.magenta>来看一下所有这三种不同的互动模型</c>

601
00:32:22,042 --> 00:32:23,243
<c.magenta>在本演讲中</c>

602
00:32:25,312 --> 00:32:28,482
<c.magenta>如果可以在视频上</c>

603
00:32:28,549 --> 00:32:30,551
<c.magenta>覆盖一个播放按钮 不是很好吗</c>

604
00:32:31,518 --> 00:32:33,120
<c.magenta>可以这么做</c>

605
00:32:33,187 --> 00:32:37,424
<c.magenta>内容扩展允许在内容上覆盖媒体按钮</c>

606
00:32:37,891 --> 00:32:40,360
<c.magenta>看一下如何在代码里设置</c>

607
00:32:41,562 --> 00:32:44,331
<c.magenta>在这里 我们回到</c>

608
00:32:44,398 --> 00:32:46,834
<c.magenta>实施内容扩展协议的类</c>

609
00:32:47,034 --> 00:32:50,771
<c.magenta>要取得这些媒体按钮</c>

610
00:32:51,772 --> 00:32:54,708
<c.magenta>第一个是mediaPlayPauseButtonFrame</c>

611
00:32:54,775 --> 00:32:58,378
<c.magenta>它将告知系统该媒体按钮</c>

612
00:32:58,445 --> 00:33:00,647
<c.magenta>在自定内容中覆盖的确切位置</c>

613
00:32:58,445 --> 00:33:00,647
<c.magenta>在自定内容中覆盖的确切位置</c>

614
00:33:01,915 --> 00:33:05,152
<c.magenta>也可以自定义该媒体按钮的观感</c>

615
00:33:05,219 --> 00:33:07,888
<c.magenta>通过指定颜色和类型</c>

616
00:33:08,222 --> 00:33:10,023
<c.magenta>本例采用默认值</c>

617
00:33:12,593 --> 00:33:15,128
<c.magenta>为了知道用户什么时候真正按下</c>

618
00:33:15,195 --> 00:33:18,365
<c.magenta>播放或暂停按钮 还可以回调方法</c>

619
00:33:19,032 --> 00:33:20,701
<c.magenta>名为mediaPlay</c>

620
00:33:21,034 --> 00:33:23,637
<c.magenta>本例只转发该调用</c>

621
00:33:23,704 --> 00:33:25,873
<c.magenta>至自定义内容的媒体播放器</c>

622
00:33:29,443 --> 00:33:31,879
<c.magenta>好 现在媒体按钮已经设置完成</c>

623
00:33:31,945 --> 00:33:34,181
<c.magenta>看一下运行时如何运作</c>

624
00:33:35,782 --> 00:33:38,585
<c.magenta>用户进入自定义内容</c>

625
00:33:38,886 --> 00:33:40,854
<c.magenta>只需通过按下播放按钮</c>

626
00:33:40,921 --> 00:33:43,223
<c.magenta>开始播放视频 就这么简单</c>

627
00:33:46,293 --> 00:33:49,563
<c.magenta>让我们继续添加更多的互动到通知</c>

628
00:33:50,297 --> 00:33:52,032
<c.magenta>如前所述 这是一个媒体发布</c>

629
00:33:52,099 --> 00:33:56,637
<c.magenta>我们想得到用户的反馈</c>

630
00:33:56,870 --> 00:34:00,374
<c.magenta>用类似点赞或留言的操作</c>

631
00:33:56,870 --> 00:34:00,374
<c.magenta>用类似点赞或留言的操作</c>

632
00:34:01,141 --> 00:34:02,976
<c.magenta>来看如何设置</c>

633
00:34:04,011 --> 00:34:06,246
<c.magenta>通常的操作处理是</c>

634
00:34:06,313 --> 00:34:09,016
<c.magenta>当用户有了一个操作</c>

635
00:34:09,081 --> 00:34:10,317
<c.magenta>收到回应</c>

636
00:34:11,018 --> 00:34:13,853
<c.magenta>然而 如果已经设置了一个内容扩展</c>

637
00:34:14,021 --> 00:34:16,623
<c.magenta>则可以拦截该操作</c>

638
00:34:16,690 --> 00:34:18,192
<c.magenta>就在内容扩展里</c>

639
00:34:18,625 --> 00:34:22,062
<c.magenta>可以对此采取行动 更新UI</c>

640
00:34:22,129 --> 00:34:23,496
<c.magenta>按照你想要的方式</c>

641
00:34:24,231 --> 00:34:26,733
<c.magenta>也可以只是转发该操作</c>

642
00:34:26,800 --> 00:34:28,936
<c.magenta>至应用 如果想把所有的</c>

643
00:34:29,002 --> 00:34:30,270
<c.magenta>操作处理都进行集中</c>

644
00:34:31,737 --> 00:34:33,940
<c.magenta>来看如何在代码中设置</c>

645
00:34:35,074 --> 00:34:37,444
<c.magenta>在这里创建了两个操作</c>

646
00:34:37,511 --> 00:34:40,112
<c.magenta>一个是为了点赞</c>

647
00:34:40,848 --> 00:34:43,951
<c.magenta>为评论操作 创建一个文本输入操作</c>

648
00:34:45,719 --> 00:34:49,322
<c.magenta>然后用刚创建的两个操作设置类别</c>

649
00:34:49,889 --> 00:34:52,592
<c.magenta>给它与相关内容扩展</c>

650
00:34:52,659 --> 00:34:54,094
<c.magenta>相同的标识符</c>

651
00:34:56,463 --> 00:34:59,132
<c.magenta>回到内容扩展代码</c>

652
00:34:59,199 --> 00:35:02,269
<c.magenta>为处理操作而实施的主方法</c>

653
00:34:59,199 --> 00:35:02,269
<c.magenta>为处理操作而实施的主方法</c>

654
00:35:02,336 --> 00:35:05,506
<c.magenta>是didReceive(_response:</c>

655
00:35:06,240 --> 00:35:08,609
<c.magenta>UNNotificationResponse对象</c>

656
00:35:08,675 --> 00:35:11,845
<c.magenta>包含所有已执行操作的信息</c>

657
00:35:11,912 --> 00:35:15,215
<c.magenta>以及该操作面向的通知请求</c>

658
00:35:16,850 --> 00:35:18,886
<c.magenta>我们在示例中做的第一件事</c>

659
00:35:18,952 --> 00:35:21,054
<c.magenta>是将该响应发布给服务器</c>

660
00:35:21,221 --> 00:35:24,458
<c.magenta>因为我们只想在内容扩展里处理操作</c>

661
00:35:24,525 --> 00:35:26,026
<c.magenta>而不用发给应用</c>

662
00:35:27,194 --> 00:35:30,797
<c.magenta>然后 查看操作标识符</c>

663
00:35:31,431 --> 00:35:34,535
<c.magenta>然后直接更新自定义UI</c>

664
00:35:34,601 --> 00:35:35,636
<c.magenta>用点赞表情</c>

665
00:35:37,337 --> 00:35:41,008
<c.magenta>最后 调用带doNotDismiss选项的</c>

666
00:35:41,308 --> 00:35:44,545
<c.magenta>因为我们想让用户继续内容互动</c>

667
00:35:44,611 --> 00:35:48,315
<c.magenta>因为在用户完成该操作后</c>

668
00:35:50,250 --> 00:35:54,021
<c.magenta>所以 设置好该操作后 看一下结果</c>

669
00:35:56,190 --> 00:35:57,224
<c.magenta>（点赞和评论）</c>

670
00:35:57,558 --> 00:36:00,827
<c.magenta>用户开始播放视频 进行点赞操作</c>

671
00:35:57,558 --> 00:36:00,827
<c.magenta>用户开始播放视频 进行点赞操作</c>

672
00:36:00,928 --> 00:36:02,563
<c.magenta>我们更新了UI</c>

673
00:36:02,763 --> 00:36:05,732
<c.magenta>用户得到了良好的反馈</c>

674
00:36:05,799 --> 00:36:07,634
<c.magenta>他们正参与该内容其中</c>

675
00:36:07,701 --> 00:36:10,737
<c.magenta>视频继续播放 内容并未消失</c>

676
00:36:12,172 --> 00:36:14,975
<c.magenta>继续来看添加的下一个操作</c>

677
00:36:15,042 --> 00:36:16,443
<c.magenta>即评论操作</c>

678
00:36:16,610 --> 00:36:18,679
<c.magenta>在这里 还是查看操作标识符</c>

679
00:36:18,745 --> 00:36:20,848
<c.magenta>确定它是评论操作</c>

680
00:36:21,582 --> 00:36:24,751
<c.magenta>因为我们知道</c>

681
00:36:24,818 --> 00:36:28,055
<c.magenta>首先检查响应是否和文本响应相关</c>

682
00:36:29,456 --> 00:36:32,559
<c.magenta>提取用户可能已经输入的文本</c>

683
00:36:32,626 --> 00:36:33,894
<c.magenta>作为该操作的一部分</c>

684
00:36:34,261 --> 00:36:37,698
<c.magenta>然后在自定义标签里设置</c>

685
00:36:37,764 --> 00:36:38,899
<c.magenta>该标签也和自定义UI相关</c>

686
00:36:40,000 --> 00:36:43,871
<c.magenta>再次调用completionHandler</c>

687
00:36:45,606 --> 00:36:47,441
<c.magenta>设置完成后</c>

688
00:36:47,975 --> 00:36:51,879
<c.magenta>用户又开始播放视频 按下评论按钮</c>

689
00:36:52,112 --> 00:36:53,981
<c.magenta>只需在那里添加评论</c>

690
00:36:54,314 --> 00:36:57,918
<c.magenta>一经发布 我们就马上更新内容</c>

691
00:36:58,685 --> 00:37:01,121
<c.magenta>用户获得当前操作</c>

692
00:36:58,685 --> 00:37:01,121
<c.magenta>用户获得当前操作</c>

693
00:37:01,188 --> 00:37:04,291
<c.magenta>的实时反馈并且非常参与到</c>

694
00:37:04,358 --> 00:37:07,027
<c.magenta>和通知相关的内容当中</c>

695
00:37:07,094 --> 00:37:09,096
<c.magenta>进入到应用完成这些操作</c>

696
00:37:12,599 --> 00:37:14,034
<c.magenta>好的</c>

697
00:37:14,101 --> 00:37:18,105
<c.magenta>所以我们已经设置完成这两个操作</c>

698
00:37:18,338 --> 00:37:20,674
<c.magenta>是不够的 而评论又太过</c>

699
00:37:21,808 --> 00:37:24,578
<c.magenta>对于社交媒体发布 也许我们想要</c>

700
00:37:24,745 --> 00:37:27,014
<c.magenta>用户给出自己的反应</c>

701
00:37:27,714 --> 00:37:31,685
<c.magenta>一种方式是把所有这些不同的反应</c>

702
00:37:31,952 --> 00:37:34,788
<c.magenta>添加到和通知相关的操作中</c>

703
00:37:35,422 --> 00:37:38,258
<c.magenta>然而 看上去不太美观</c>

704
00:37:38,325 --> 00:37:39,726
<c.magenta>造成重复</c>

705
00:37:40,861 --> 00:37:44,531
<c.magenta>把这些替换为</c>

706
00:37:45,032 --> 00:37:48,335
<c.magenta>就显示在用户键盘的位置</c>

707
00:37:49,336 --> 00:37:50,904
<c.magenta>像这样？</c>

708
00:37:52,005 --> 00:37:54,474
<c.magenta>确实可以这么做</c>

709
00:37:54,808 --> 00:37:58,812
<c.magenta>实现它可以采用一个现有的</c>

710
00:38:00,047 --> 00:38:03,016
<c.magenta>来看一下如何在代码中设置</c>

711
00:38:03,283 --> 00:38:05,085
<c.magenta>现在为反应创建一个新操作</c>

712
00:38:05,752 --> 00:38:08,589
<c.magenta>即一个简单的UNNotificationAction</c>

713
00:38:08,655 --> 00:38:12,292
<c.magenta>然后用这个创建的操作更新类别</c>

714
00:38:15,229 --> 00:38:20,400
<c.magenta>在实施了内容扩展协议的类中</c>

715
00:38:20,634 --> 00:38:23,737
<c.magenta>只需覆盖一些方法 告知系统</c>

716
00:38:24,037 --> 00:38:26,440
<c.magenta>你正在提供自定义输入源</c>

717
00:38:26,607 --> 00:38:28,609
<c.magenta>第一个要覆盖的方法</c>

718
00:38:28,675 --> 00:38:31,812
<c.magenta>是canBecomeFirstResponder</c>

719
00:38:32,846 --> 00:38:35,082
<c.magenta>然后覆盖inputView方法</c>

720
00:38:35,148 --> 00:38:37,417
<c.magenta>返回自定义输入字段</c>

721
00:38:38,018 --> 00:38:41,755
<c.magenta>你对如何设置该输入视图</c>

722
00:38:41,922 --> 00:38:45,859
<c.magenta>以及所有可能和通知相关的</c>

723
00:38:45,926 --> 00:38:47,394
<c.magenta>操作和不同的互动</c>

724
00:38:47,461 --> 00:38:51,198
<c.magenta>不用回到默认通知操作处理</c>

725
00:38:51,265 --> 00:38:53,333
<c.magenta>因为这是你的自定义输入视图</c>

726
00:38:56,870 --> 00:38:58,238
<c.magenta>设置完成后</c>

727
00:38:58,505 --> 00:39:02,075
<c.magenta>回到didReceive</c>

728
00:38:58,505 --> 00:39:02,075
<c.magenta>回到didReceive</c>

729
00:39:02,342 --> 00:39:06,113
<c.magenta>在这里 确定该操作和回应相关</c>

730
00:39:07,014 --> 00:39:10,250
<c.magenta>我们只需调用</c>

731
00:39:11,151 --> 00:39:13,754
<c.magenta>仅此而已 该调用会告知系统</c>

732
00:39:13,820 --> 00:39:17,024
<c.magenta>显示自定义输入视图在键盘位置</c>

733
00:39:18,225 --> 00:39:22,062
<c.magenta>在私有的handle</c>

734
00:39:22,396 --> 00:39:23,997
<c.magenta>更新自定义标签</c>

735
00:39:24,198 --> 00:39:27,100
<c.magenta>并调用resignFirstResponder</c>

736
00:39:27,167 --> 00:39:29,403
<c.magenta>将会关闭自定义输入视图</c>

737
00:39:30,904 --> 00:39:33,240
<c.magenta>我知道代码很多</c>

738
00:39:33,307 --> 00:39:35,409
<c.magenta>看一下如何它实际上如何工作</c>

739
00:39:36,076 --> 00:39:39,546
<c.magenta>可以看到在这里 我们有新的反应操作</c>

740
00:39:42,449 --> 00:39:44,151
<c.magenta>当用户按下这个</c>

741
00:39:44,218 --> 00:39:46,587
<c.magenta>自定义输入视图会显示在底部</c>

742
00:39:46,887 --> 00:39:50,757
<c.magenta>任何点击表情的操作发生</c>

743
00:39:53,427 --> 00:39:56,597
<c.magenta>这是一个非常自定义的方法</c>

744
00:39:56,663 --> 00:39:58,131
<c.magenta>让用户和内容</c>

745
00:39:58,198 --> 00:40:01,735
<c.magenta>而不是局限于</c>

746
00:39:58,198 --> 00:40:01,735
<c.magenta>而不是局限于</c>

747
00:40:03,103 --> 00:40:05,539
<c.magenta>我们从这样的界面</c>

748
00:40:06,740 --> 00:40:10,244
<c.magenta>变成这样更简洁</c>

749
00:40:13,380 --> 00:40:17,050
<c.magenta>用户输入自定义的最佳实践有哪些？</c>

750
00:40:18,418 --> 00:40:21,355
<c.magenta>让我强调一下 媒体按钮是唯一</c>

751
00:40:21,421 --> 00:40:24,758
<c.magenta>可以覆盖控制的机制 需要时请采用</c>

752
00:40:24,925 --> 00:40:27,794
<c.magenta>可以和它们关联视频以及某些播放</c>

753
00:40:29,196 --> 00:40:32,633
<c.magenta>确保操作只针对通知的上下文</c>

754
00:40:32,900 --> 00:40:36,403
<c.magenta>这样用户才能知道他们操作的是什么</c>

755
00:40:38,505 --> 00:40:41,175
<c.magenta>你可以决定是否取消内容扩展</c>

756
00:40:41,241 --> 00:40:44,044
<c.magenta>根据你想要表达的参与形式</c>

757
00:40:44,111 --> 00:40:46,847
<c.magenta>作为通知的一部分</c>

758
00:40:48,282 --> 00:40:51,285
<c.magenta>然后 用户自定义视图会提供完全控制</c>

759
00:40:51,451 --> 00:40:54,821
<c.magenta>这些通知的输入机制</c>

760
00:40:57,090 --> 00:41:00,861
<c.magenta>在今天结束之前 我们想展示几个应用</c>

761
00:40:57,090 --> 00:41:00,861
<c.magenta>在今天结束之前 我们想展示几个应用</c>

762
00:41:00,928 --> 00:41:04,164
<c.magenta>我们觉得真正利用了这些API</c>

763
00:41:04,665 --> 00:41:07,067
<c.magenta>大部分都在去年的WWDC上宣布过</c>

764
00:41:07,134 --> 00:41:10,804
<c.magenta>并展示它们如何用不同的方式</c>

765
00:41:12,105 --> 00:41:13,807
<c.magenta>MIC News应用</c>

766
00:41:14,141 --> 00:41:19,613
<c.magenta>提供非常丰富的界面和媒体</c>

767
00:41:20,113 --> 00:41:22,816
<c.magenta>和关于该内容的短评</c>

768
00:41:23,083 --> 00:41:25,252
<c.magenta>并提供了如何和该内容互动的</c>

769
00:41:25,319 --> 00:41:26,386
<c.magenta>选择操作</c>

770
00:41:28,188 --> 00:41:31,959
<c.magenta>Castro Podcast应用显示</c>

771
00:41:32,025 --> 00:41:35,562
<c.magenta>并提供修改podcast列表的选项</c>

772
00:41:35,629 --> 00:41:38,232
<c.magenta>也是利用通知操作</c>

773
00:41:40,067 --> 00:41:43,203
<c.magenta>然后是Shazam内容扩展提供了播放按钮</c>

774
00:41:43,270 --> 00:41:45,138
<c.magenta>可以播放最后录制的歌曲</c>

775
00:41:45,205 --> 00:41:47,674
<c.magenta>就从通知里选择 还提供了</c>

776
00:41:47,741 --> 00:41:49,743
<c.magenta>购买和分享该媒体的选择</c>

777
00:41:52,513 --> 00:41:56,350
<c.magenta>好了 总结一下今天演讲的全部内容</c>

778
00:41:56,884 --> 00:41:59,786
<c.magenta>首先进行了通知概述</c>

779
00:41:59,853 --> 00:42:03,257
<c.magenta>以及所有不同的 可用于通知的API</c>

780
00:41:59,853 --> 00:42:03,257
<c.magenta>以及所有不同的 可用于通知的API</c>

781
00:42:03,323 --> 00:42:04,424
<c.magenta>在你的应用里</c>

782
00:42:05,292 --> 00:42:08,529
<c.magenta>然后介绍了关于隐藏通知内容的新概念</c>

783
00:42:08,595 --> 00:42:13,033
<c.magenta>以及如何完全自定义显示给用户的观感</c>

784
00:42:14,535 --> 00:42:17,571
<c.magenta>然后讲了修改通知推送内容</c>

785
00:42:17,738 --> 00:42:18,972
<c.magenta>利用服务扩展</c>

786
00:42:20,641 --> 00:42:23,510
<c.magenta>然后讲了自定义丰富通知界面</c>

787
00:42:23,577 --> 00:42:25,112
<c.magenta>利用内容扩展</c>

788
00:42:26,246 --> 00:42:29,883
<c.magenta>紧接着我们讲了和该丰富通知相关联的</c>

789
00:42:29,950 --> 00:42:32,386
<c.magenta>自定义用户输入</c>

790
00:42:32,886 --> 00:42:35,355
<c.magenta>我们非常激动看到大家勇往直前</c>

791
00:42:35,422 --> 00:42:38,859
<c.magenta>充分利用这些不同的工具</c>

792
00:42:38,926 --> 00:42:41,094
<c.magenta>为用户创造更丰富的通知体验</c>

793
00:42:42,296 --> 00:42:45,432
<c.magenta>关于本次演讲的更多信息</c>

794
00:42:45,499 --> 00:42:46,433
<c.magenta>（更多信息）</c>

795
00:42:46,733 --> 00:42:49,403
<c.magenta>这就是今天演讲的全部内容</c>

796
00:42:49,469 --> 00:42:50,671
<c.magenta>祝在WWDC过得愉快</c>
