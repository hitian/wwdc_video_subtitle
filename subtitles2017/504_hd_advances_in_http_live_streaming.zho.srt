1
00:00:17,818 --> 00:00:20,354
<c.magenta>（HTTP实时流媒体中的改进）</c>

2
00:00:22,789 --> 00:00:23,624
<c.magenta>嘿 你们好！</c>

3
00:00:23,690 --> 00:00:29,329
<c.magenta>嗨 大家好 下午好</c>

4
00:00:29,897 --> 00:00:32,665
<c.magenta>看看那些HLS家伙们</c>

5
00:00:33,500 --> 00:00:36,403
<c.magenta>尽管幻灯片上放不下 你们很可能</c>

6
00:00:37,971 --> 00:00:41,175
<c.magenta>我是Roger Pantos</c>

7
00:00:41,775 --> 00:00:44,311
<c.magenta>我们将会谈到一大堆内容</c>

8
00:00:44,611 --> 00:00:47,447
<c.magenta>我们有一些很有意思的新编解码器</c>

9
00:00:47,681 --> 00:00:53,353
<c.magenta>我们有一些新流媒体功能</c>

10
00:00:53,987 --> 00:00:58,358
<c.magenta>但首先我们要宣布一件事</c>

11
00:00:58,792 --> 00:01:01,762
<c.magenta>我很高兴地宣布</c>

12
00:00:58,792 --> 00:01:01,762
<c.magenta>我很高兴地宣布</c>

13
00:01:02,062 --> 00:01:08,936
<c.magenta>IETF已经批准将HLS规范</c>

14
00:01:14,741 --> 00:01:19,213
<c.magenta>那么这意味着当前在网站上发布的草案</c>

15
00:01:19,279 --> 00:01:22,082
<c.magenta>也就是-23</c>

16
00:01:22,349 --> 00:01:26,053
<c.magenta>将进入IETF发布过程 一旦通过</c>

17
00:01:26,286 --> 00:01:28,288
<c.magenta>它将会被分配一个RFC编号</c>

18
00:01:29,056 --> 00:01:32,826
<c.magenta>我们大约在过去的8年</c>

19
00:01:32,893 --> 00:01:37,464
<c.magenta>有一点儿问题 好的</c>

20
00:01:37,531 --> 00:01:38,665
<c.magenta>为什么要发布RFC？</c>

21
00:01:38,999 --> 00:01:42,936
<c.magenta>其中一个原因是我们</c>

22
00:01:43,170 --> 00:01:45,939
<c.magenta>他们说写规范有点儿恐怖</c>

23
00:01:46,006 --> 00:01:48,208
<c.magenta>需要一直修改草稿</c>

24
00:01:48,675 --> 00:01:50,544
<c.magenta>我们听到了这个反馈 我们非常理解</c>

25
00:01:50,911 --> 00:01:54,748
<c.magenta>那么把规范发布为RFC</c>

26
00:01:54,948 --> 00:01:59,620
<c.magenta>将允许它作为一个稳定的引用</c>

27
00:01:59,987 --> 00:02:03,657
<c.magenta>意思是你可以满怀信心地</c>

28
00:01:59,987 --> 00:02:03,657
<c.magenta>意思是你可以满怀信心地</c>

29
00:02:03,724 --> 00:02:06,560
<c.magenta>你可以在其它规范中引用它</c>

30
00:02:06,793 --> 00:02:09,496
<c.magenta>我们希望它可以帮助</c>

31
00:02:09,562 --> 00:02:12,499
<c.magenta>稍微改善一下</c>

32
00:02:13,500 --> 00:02:17,337
<c.magenta>现在我们会停止更新HLS吗？</c>

33
00:02:17,571 --> 00:02:20,908
<c.magenta>不 当然不会 我们会继续衍变它</c>

34
00:02:22,910 --> 00:02:29,116
<c.magenta>我们会让它变得更好</c>

35
00:02:29,583 --> 00:02:31,785
<c.magenta>从我们今天要讲的东西开始</c>

36
00:02:32,186 --> 00:02:34,054
<c.magenta>那么我们的实现方式是</c>

37
00:02:34,288 --> 00:02:37,124
<c.magenta>引入一个新的因特网草案</c>

38
00:02:37,424 --> 00:02:40,761
<c.magenta>将会建在即将出现的RFC上作为基准</c>

39
00:02:41,061 --> 00:02:42,729
<c.magenta>并关注它</c>

40
00:02:43,764 --> 00:02:49,002
<c.magenta>好的 现在让我们来看本次演讲的</c>

41
00:02:49,436 --> 00:02:53,841
<c.magenta>你应该从主题演讲和其它地方</c>

42
00:02:53,907 --> 00:02:55,809
<c.magenta>作为我们的下一代视频编解码器</c>

43
00:02:56,310 --> 00:02:59,913
<c.magenta>现在我们为什么这么做？</c>

44
00:03:00,314 --> 00:03:02,649
<c.magenta>首先是编码效率</c>

45
00:03:04,384 --> 00:03:10,757
<c.magenta>HEVC大约比AVC的效率高40%</c>

46
00:03:10,824 --> 00:03:13,794
<c.magenta>我的意思是它取决于你的内容</c>

47
00:03:13,861 --> 00:03:16,396
<c.magenta>但40%是一个不错的大概估计</c>

48
00:03:16,964 --> 00:03:20,634
<c.magenta>对于我们中</c>

49
00:03:21,001 --> 00:03:25,772
<c.magenta>这很令人激动</c>

50
00:03:25,939 --> 00:03:28,842
<c.magenta>启动速度快了40% 品质优良</c>

51
00:03:29,009 --> 00:03:31,411
<c.magenta>当播放器随着时间的流逝</c>

52
00:03:31,612 --> 00:03:34,214
<c.magenta>你会发现内容比原来提升了40%</c>

53
00:03:34,982 --> 00:03:41,088
<c.magenta>这对于我们来说很重要</c>

54
00:03:42,122 --> 00:03:46,193
<c.magenta>嗯 正如我们所说过的</c>

55
00:03:46,360 --> 00:03:49,763
<c.magenta>其实在我们最新设备上 装有A9</c>

56
00:03:49,830 --> 00:03:54,034
<c.magenta>最新iOS设备上以及</c>

57
00:03:54,368 --> 00:03:57,137
<c.magenta>我们都支持把HEVC嵌入硬件</c>

58
00:03:57,204 --> 00:03:59,973
<c.magenta>那就包含了</c>

59
00:04:01,008 --> 00:04:03,810
<c.magenta>即便是在较老的设备上</c>

60
00:04:04,778 --> 00:04:06,547
<c.magenta>没有那种硬件支持的设备</c>

61
00:04:06,713 --> 00:04:10,350
<c.magenta>我们仍然要部署一个</c>

62
00:04:10,751 --> 00:04:14,388
<c.magenta>那将用于装有iOS 11的</c>

63
00:04:14,621 --> 00:04:17,357
<c.magenta>那包括装有tvOS 11</c>

64
00:04:17,591 --> 00:04:22,496
<c.magenta>升级到High Sierra</c>

65
00:04:23,230 --> 00:04:26,934
<c.magenta>HEVC即将出现在许多不同的地方</c>

66
00:04:27,201 --> 00:04:28,335
<c.magenta>我们希望你们能使用它</c>

67
00:04:30,237 --> 00:04:33,707
<c.magenta>为了配合HLS使用它</c>

68
00:04:34,341 --> 00:04:40,747
<c.magenta>第一是HEVC代表全新的内容编码</c>

69
00:04:40,814 --> 00:04:44,017
<c.magenta>意思就是</c>

70
00:04:44,318 --> 00:04:47,554
<c.magenta>好的一面是没有任何兼容版本的负担</c>

71
00:04:47,888 --> 00:04:49,857
<c.magenta>所以我们决定</c>

72
00:04:50,524 --> 00:04:52,793
<c.magenta>是时候把我们的注意力重新聚焦在</c>

73
00:04:53,193 --> 00:04:55,796
<c.magenta>单一容器格式上来了</c>

74
00:04:56,096 --> 00:04:58,398
<c.magenta>我们查看了可选方案并决定</c>

75
00:04:58,632 --> 00:05:02,536
<c.magenta>碎片式的MPEG-4最有潜力</c>

76
00:04:58,632 --> 00:05:02,536
<c.magenta>碎片式的MPEG-4最有潜力</c>

77
00:05:02,836 --> 00:05:07,774
<c.magenta>那意味着如果你要把你的HEVC内容</c>

78
00:05:08,141 --> 00:05:11,411
<c.magenta>它需要被打包为MP4碎片</c>

79
00:05:16,650 --> 00:05:21,788
<c.magenta>现在另一件不错的事就是让编码过程</c>

80
00:05:21,955 --> 00:05:25,826
<c.magenta>更确切地说是加密过程变得稍微</c>

81
00:05:26,894 --> 00:05:29,530
<c.magenta>因为我们老朋友cbcs模式的常见加密</c>

82
00:05:29,596 --> 00:05:34,968
<c.magenta>处理HEVC的方式</c>

83
00:05:35,235 --> 00:05:36,470
<c.magenta>所以没有什么新规则</c>

84
00:05:36,537 --> 00:05:39,740
<c.magenta>你只需要做同样的事</c>

85
00:05:43,510 --> 00:05:47,414
<c.magenta>有了新的编解码器 你就可以把它部署</c>

86
00:05:47,581 --> 00:05:50,751
<c.magenta>到一个其中某些设备</c>

87
00:05:50,984 --> 00:05:55,689
<c.magenta>所以你把你的位流</c>

88
00:05:55,756 --> 00:05:58,659
<c.magenta>从而使不支持HEVC的设备绕开它</c>

89
00:05:59,560 --> 00:06:02,196
<c.magenta>实现方式是 当然了在HLS中</c>

90
00:05:59,560 --> 00:06:02,196
<c.magenta>实现方式是 当然了在HLS中</c>

91
00:06:02,262 --> 00:06:04,665
<c.magenta>是在你的主播放列表中有编解码器属性</c>

92
00:06:05,799 --> 00:06:09,736
<c.magenta>我这里有一个HEVC的编解码器</c>

93
00:06:09,803 --> 00:06:12,039
<c.magenta>它比H.264稍微复杂点</c>

94
00:06:12,105 --> 00:06:14,575
<c.magenta>它包含了更多的东西 但没有那么糟糕</c>

95
00:06:15,475 --> 00:06:19,580
<c.magenta>整个格式都在HEVC规范中有记录</c>

96
00:06:21,048 --> 00:06:23,851
<c.magenta>那么说到H.264格式的老客户端</c>

97
00:06:24,084 --> 00:06:28,021
<c.magenta>很自然地有一个兼容性的问题…</c>

98
00:06:28,822 --> 00:06:32,759
<c.magenta>首先你能把单一资产部署</c>

99
00:06:33,293 --> 00:06:36,830
<c.magenta>到老的和新的客户端吗？答案是是的</c>

100
00:06:40,234 --> 00:06:41,235
<c.magenta>我们继续</c>

101
00:06:42,636 --> 00:06:48,108
<c.magenta>你可以在同一个主播放列表中</c>

102
00:06:48,509 --> 00:06:52,679
<c.magenta>那将会适用于常规的视频方差</c>

103
00:06:52,746 --> 00:06:55,983
<c.magenta>你也可以有这些的</c>

104
00:06:56,650 --> 00:07:01,755
<c.magenta>正如我所说 你的确需要将HEVC</c>

105
00:06:56,650 --> 00:07:01,755
<c.magenta>正如我所说 你的确需要将HEVC</c>

106
00:07:02,055 --> 00:07:06,326
<c.magenta>但对于落后的兼容性H.264</c>

107
00:07:06,460 --> 00:07:09,263
<c.magenta>或碎片式MPEG-4格式 随你选择</c>

108
00:07:10,264 --> 00:07:13,166
<c.magenta>标注媒体播放列表</c>

109
00:07:13,433 --> 00:07:15,969
<c.magenta>从而让我们了解什么是什么</c>

110
00:07:18,739 --> 00:07:23,010
<c.magenta>最后我们实际上更新了</c>

111
00:07:23,076 --> 00:07:26,480
<c.magenta>我们有一个文档叫作HLS编写指南</c>

112
00:07:26,847 --> 00:07:29,583
<c.magenta>是Apple TV</c>

113
00:07:30,484 --> 00:07:33,687
<c.magenta>我认为我们修改了名称</c>

114
00:07:33,887 --> 00:07:37,291
<c.magenta>因为实际上今天就有一场演讲</c>

115
00:07:37,591 --> 00:07:42,095
<c.magenta>叫作HLS编写更新</c>

116
00:07:42,329 --> 00:07:44,631
<c.magenta>那么现在的编写指南</c>

117
00:07:44,698 --> 00:07:47,568
<c.magenta>有了针对HEVC的额外注意事项</c>

118
00:07:47,634 --> 00:07:52,272
<c.magenta>以及推荐位速率层的初始设置</c>

119
00:07:52,339 --> 00:07:54,975
<c.magenta>让你们大家能使用它</c>

120
00:07:55,309 --> 00:07:57,077
<c.magenta>我听说那场演讲的演讲者做得很棒</c>

121
00:07:59,613 --> 00:08:00,480
<c.magenta>接下来</c>

122
00:07:59,613 --> 00:08:00,480
<c.magenta>接下来</c>

123
00:08:02,115 --> 00:08:07,721
<c.magenta>我们有了一个新的字母格式</c>

124
00:08:08,088 --> 00:08:11,558
<c.magenta>现在你们中有很多人</c>

125
00:08:12,159 --> 00:08:16,563
<c.magenta>在消费者中</c>

126
00:08:18,198 --> 00:08:23,570
<c.magenta>但它应该是一种更有名的格式的孙子</c>

127
00:08:23,637 --> 00:08:26,106
<c.magenta>叫作时序文本标记语言或TTML</c>

128
00:08:26,473 --> 00:08:30,611
<c.magenta>TTML非常有表现力</c>

129
00:08:30,677 --> 00:08:33,679
<c.magenta>但不怎么是轻量级的编辑语言</c>

130
00:08:33,746 --> 00:08:35,749
<c.magenta>主要用作字幕编辑</c>

131
00:08:36,149 --> 00:08:40,053
<c.magenta>用于夹层和互换之类的</c>

132
00:08:40,787 --> 00:08:46,193
<c.magenta>那么时序文本工作组所做的工作</c>

133
00:08:46,693 --> 00:08:49,563
<c.magenta>就是精简了TTML 稍微改进了它</c>

134
00:08:49,830 --> 00:08:52,165
<c.magenta>从而通过因特网</c>

135
00:08:52,533 --> 00:08:54,701
<c.magenta>那么这就叫作IMSC</c>

136
00:08:55,769 --> 00:08:57,871
<c.magenta>现在我们也接纳VTT</c>

137
00:08:57,938 --> 00:09:01,441
<c.magenta>那么很明显就提出了这个问题</c>

138
00:08:57,938 --> 00:09:01,441
<c.magenta>那么很明显就提出了这个问题</c>

139
00:09:01,842 --> 00:09:08,115
<c.magenta>主要不同点就是IMSC</c>

140
00:09:08,182 --> 00:09:11,718
<c.magenta>更广泛的样式控件</c>

141
00:09:11,785 --> 00:09:14,555
<c.magenta>VTT只有一些基本的样式控件</c>

142
00:09:14,755 --> 00:09:17,090
<c.magenta>然后其余的部分就依赖于CSS</c>

143
00:09:18,158 --> 00:09:22,362
<c.magenta>IMSC有更多自带的样式功能组合</c>

144
00:09:22,563 --> 00:09:28,001
<c.magenta>主要用于你对字幕的样式处理</c>

145
00:09:28,802 --> 00:09:32,906
<c.magenta>因此它获得了一定量的关注</c>

146
00:09:32,973 --> 00:09:35,008
<c.magenta>尤其是在广播行业</c>

147
00:09:35,509 --> 00:09:41,415
<c.magenta>甚至去年被选为MPEG</c>

148
00:09:41,481 --> 00:09:46,019
<c.magenta>我们去年就跟你们提到过</c>

149
00:09:47,020 --> 00:09:51,992
<c.magenta>那么我们在iOS 11和其它</c>

150
00:09:52,359 --> 00:09:56,029
<c.magenta>我们延伸了</c>

151
00:09:56,697 --> 00:09:59,967
<c.magenta>IMSC的第一代底层实施</c>

152
00:10:00,334 --> 00:10:05,305
<c.magenta>已经是你们的囊中之物了</c>

153
00:10:06,006 --> 00:10:06,874
<c.magenta>那么…</c>

154
00:10:07,608 --> 00:10:09,576
<c.magenta>…对于HEVC</c>

155
00:10:09,776 --> 00:10:13,213
<c.magenta>你需要了解几点关于IMSC的要点</c>

156
00:10:13,514 --> 00:10:15,148
<c.magenta>第一点是它是如何打包的</c>

157
00:10:15,849 --> 00:10:19,286
<c.magenta>与VTT不同</c>

158
00:10:20,454 --> 00:10:24,091
<c.magenta>IMSC的传输</c>

159
00:10:24,491 --> 00:10:29,630
<c.magenta>从根本上来说 它实质上</c>

160
00:10:29,696 --> 00:10:33,500
<c.magenta>它利用了MPEG-4的全部定时设施</c>

161
00:10:34,001 --> 00:10:38,071
<c.magenta>我说是文本 因为IMSC实际上</c>

162
00:10:38,305 --> 00:10:40,274
<c.magenta>一个图像配置文件和一个文本配置文件</c>

163
00:10:40,607 --> 00:10:44,778
<c.magenta>我们的客户端</c>

164
00:10:45,946 --> 00:10:49,449
<c.magenta>所以当你标注你的播放列表时</c>

165
00:10:49,516 --> 00:10:52,186
<c.magenta>你应该这样做 因为你同样面临着</c>

166
00:10:52,252 --> 00:10:54,688
<c.magenta>老客户端不能识别IMSC的问题</c>

167
00:10:54,955 --> 00:11:00,594
<c.magenta>你希望给IMSC添加编解码器标签</c>

168
00:10:54,955 --> 00:11:00,594
<c.magenta>你希望给IMSC添加编解码器标签</c>

169
00:11:00,794 --> 00:11:04,164
<c.magenta>就是stpp.TTML.im1t</c>

170
00:11:04,398 --> 00:11:08,335
<c.magenta>它本质上是在表达</c>

171
00:11:08,535 --> 00:11:11,471
<c.magenta>IMSC1文本配置文件的字幕</c>

172
00:11:13,473 --> 00:11:17,711
<c.magenta>我几乎是同时谈了IMSC和HEVC</c>

173
00:11:17,778 --> 00:11:21,548
<c.magenta>我只想强调它们并没有关联</c>

174
00:11:21,815 --> 00:11:24,952
<c.magenta>你可以单独使用它们</c>

175
00:11:25,018 --> 00:11:28,488
<c.magenta>你可结合使用IMSC和H.264</c>

176
00:11:29,556 --> 00:11:33,460
<c.magenta>并且你甚至可以有一个VTT</c>

177
00:11:33,694 --> 00:11:37,931
<c.magenta>较新的客户端可受益于IMSC的样式</c>

178
00:11:38,098 --> 00:11:41,068
<c.magenta>而较老的客户端可以继续使用VTT</c>

179
00:11:41,134 --> 00:11:43,871
<c.magenta>让我们看一个播放列表</c>

180
00:11:44,404 --> 00:11:46,440
<c.magenta>我这里有一个主播放列表的碎片</c>

181
00:11:46,673 --> 00:11:50,544
<c.magenta>上边几行你们应该非常熟悉</c>

182
00:11:50,611 --> 00:11:54,648
<c.magenta>那是主播放列表的样子 如果你有一个</c>

183
00:11:54,715 --> 00:11:58,752
<c.magenta>叫作bipbop gear1的</c>

184
00:11:59,586 --> 00:12:06,326
<c.magenta>接下来的几行标签有同样的视频层</c>

185
00:11:59,586 --> 00:12:06,326
<c.magenta>接下来的几行标签有同样的视频层</c>

186
00:12:06,393 --> 00:12:08,795
<c.magenta>你可以看到它被标记为IMSC</c>

187
00:12:09,196 --> 00:12:14,701
<c.magenta>那么前边几行</c>

188
00:12:14,902 --> 00:12:18,338
<c.magenta>后边几行会拉动IMSC</c>

189
00:12:18,906 --> 00:12:23,110
<c.magenta>如果我们深入去看这两个媒体播放列表</c>

190
00:12:24,311 --> 00:12:29,550
<c.magenta>正如你所期待的 你可以看到VTT</c>

191
00:12:30,083 --> 00:12:34,621
<c.magenta>而IMSC也是一种</c>

192
00:12:34,688 --> 00:12:37,991
<c.magenta>因为有MPEG-4片段</c>

193
00:12:38,192 --> 00:12:41,328
<c.magenta>因为这是碎片式MPEG-4所要求的</c>

194
00:12:41,395 --> 00:12:43,830
<c.magenta>就是我们要能指向电影盒子</c>

195
00:12:43,997 --> 00:12:46,099
<c.magenta>那么除此之外 它们非常相似</c>

196
00:12:46,500 --> 00:12:51,371
<c.magenta>那么IMSC和VTT非常相似</c>

197
00:12:53,674 --> 00:12:56,210
<c.magenta>我为什么要为IMSC</c>

198
00:12:56,476 --> 00:12:59,379
<c.magenta>嗯 你可能会切换你的流媒体 如果</c>

199
00:13:00,347 --> 00:13:03,951
<c.magenta>首先是如果你想控制更多的样式</c>

200
00:13:04,184 --> 00:13:08,555
<c.magenta>并且你的播放设备中</c>

201
00:13:08,722 --> 00:13:12,025
<c.magenta>那么IMSC就变得很有吸引力了</c>

202
00:13:13,794 --> 00:13:19,666
<c.magenta>第二个原因是你可能</c>

203
00:13:19,733 --> 00:13:22,035
<c.magenta>或者也许你从服务供应商那儿获得了</c>

204
00:13:22,236 --> 00:13:23,871
<c.magenta>其中一种格式的字幕</c>

205
00:13:24,137 --> 00:13:27,875
<c.magenta>你可能发现转换TTML的IMSC</c>

206
00:13:27,941 --> 00:13:31,111
<c.magenta>比转换为VTT更简单</c>

207
00:13:31,311 --> 00:13:35,516
<c.magenta>因为它们是非常相似的格式</c>

208
00:13:36,149 --> 00:13:38,886
<c.magenta>那么另一个原因也是最终的原因</c>

209
00:13:39,253 --> 00:13:43,524
<c.magenta>即你可能发现自己不管怎样</c>

210
00:13:44,424 --> 00:13:49,263
<c.magenta>我们之前提到CMAF要求</c>

211
00:13:49,496 --> 00:13:52,232
<c.magenta>在CMAF演示中使用IMSC字幕</c>

212
00:13:52,666 --> 00:13:56,336
<c.magenta>并且如果你发现自己想要利用</c>

213
00:13:56,403 --> 00:14:00,073
<c.magenta>那么多我们希望CMAF</c>

214
00:13:56,403 --> 00:14:00,073
<c.magenta>那么多我们希望CMAF</c>

215
00:14:00,374 --> 00:14:02,609
<c.magenta>那么你最终将采纳IMSC1流媒体</c>

216
00:14:02,910 --> 00:14:04,178
<c.magenta>并且你也许…</c>

217
00:14:05,312 --> 00:14:07,014
<c.magenta>抱歉 你可能会…</c>

218
00:14:09,316 --> 00:14:11,318
<c.magenta>…抛弃VTT流媒体</c>

219
00:14:11,385 --> 00:14:15,255
<c.magenta>那将会简化你的工具链</c>

220
00:14:17,991 --> 00:14:19,726
<c.magenta>…现在说了这么多</c>

221
00:14:20,694 --> 00:14:23,664
<c.magenta>也许哪个也不适合你 在这种情况下</c>

222
00:14:24,231 --> 00:14:28,001
<c.magenta>坚持VTT是一个不错的选择</c>

223
00:14:28,702 --> 00:14:31,104
<c.magenta>也许你主要面向的是北美市场</c>

224
00:14:31,171 --> 00:14:34,308
<c.magenta>在这种情况下608也没问题</c>

225
00:14:34,741 --> 00:14:36,443
<c.magenta>那么我们有了不同的选择</c>

226
00:14:37,611 --> 00:14:40,414
<c.magenta>现在我提到很多次IMSC1</c>

227
00:14:40,681 --> 00:14:43,984
<c.magenta>可能会有一个疑问一直存在</c>

228
00:14:44,451 --> 00:14:46,587
<c.magenta>答案是也许吧</c>

229
00:14:47,454 --> 00:14:50,924
<c.magenta>还没有最终确定 实际上仍在进展中</c>

230
00:14:50,991 --> 00:14:56,430
<c.magenta>但时序文本工作组计划</c>

231
00:14:56,630 --> 00:14:59,800
<c.magenta>我们关注的其中一个功能是</c>

232
00:15:00,033 --> 00:15:03,003
<c.magenta>一些更沉默的控件</c>

233
00:15:03,170 --> 00:15:07,741
<c.magenta>特别针对某些高级日语塑型功能</c>

234
00:15:08,375 --> 00:15:10,811
<c.magenta>比如“shatai”和</c>

235
00:15:11,111 --> 00:15:17,384
<c.magenta>那么简而言之IMSC2</c>

236
00:15:17,551 --> 00:15:20,320
<c.magenta>我们希望在它接下来的几年里</c>

237
00:15:20,387 --> 00:15:22,422
<c.magenta>那么请大家关注它</c>

238
00:15:23,490 --> 00:15:27,461
<c.magenta>好的 那么这就是编解码器相关的内容</c>

239
00:15:27,828 --> 00:15:33,600
<c.magenta>首先我想谈一下我们希望能让</c>

240
00:15:33,901 --> 00:15:37,804
<c.magenta>那些长期忍受折磨的人们在生产</c>

241
00:15:38,172 --> 00:15:41,975
<c.magenta>帮助他们维护强健的体验</c>

242
00:15:42,543 --> 00:15:45,779
<c.magenta>因为HLS播放器通常很不错</c>

243
00:15:45,846 --> 00:15:49,283
<c.magenta>当一切都在后台运行良好时</c>

244
00:15:49,616 --> 00:15:52,419
<c.magenta>但当在后台发生问题时</c>

245
00:15:52,486 --> 00:15:55,455
<c.magenta>客户端实际上可以做得更好</c>

246
00:15:55,522 --> 00:15:56,790
<c.magenta>让我来演示给你看</c>

247
00:15:57,291 --> 00:16:00,194
<c.magenta>那么在这里我们有 我猜在这里</c>

248
00:15:57,291 --> 00:16:00,194
<c.magenta>那么在这里我们有 我猜在这里</c>

249
00:16:00,527 --> 00:16:04,698
<c.magenta>我们有典型的实时HLS播放列表</c>

250
00:16:04,765 --> 00:16:06,266
<c.magenta>目标时长为10秒</c>

251
00:16:06,333 --> 00:16:08,335
<c.magenta>片段是 你知道的 10秒左右</c>

252
00:16:08,702 --> 00:16:10,771
<c.magenta>10秒之后你可能想重新加载它</c>

253
00:16:11,538 --> 00:16:15,442
<c.magenta>底部是FileSequence12</c>

254
00:16:15,809 --> 00:16:19,079
<c.magenta>10秒之后你再次重新加载</c>

255
00:16:19,246 --> 00:16:21,682
<c.magenta>当然了它们的出现并不是什么魔法</c>

256
00:16:21,882 --> 00:16:25,052
<c.magenta>你已经有了某种编码器</c>

257
00:16:25,319 --> 00:16:30,290
<c.magenta>每隔10秒钟它就会在CEN中</c>

258
00:16:30,924 --> 00:16:32,793
<c.magenta>如果…会怎么样呢</c>

259
00:16:33,660 --> 00:16:35,929
<c.magenta>…不管什么原因编码器突然重启了？</c>

260
00:16:36,196 --> 00:16:38,432
<c.magenta>或者也许你用胳膊肘</c>

261
00:16:38,498 --> 00:16:40,567
<c.magenta>或什么敲了微波炉里的盘子</c>

262
00:16:41,235 --> 00:16:46,406
<c.magenta>嗯 在这个HLS客户端之前没有获知</c>

263
00:16:46,573 --> 00:16:48,909
<c.magenta>那种情况发生的方式</c>

264
00:16:49,443 --> 00:16:53,747
<c.magenta>但现在我们定义了一个新标签</c>

265
00:16:54,214 --> 00:16:56,850
<c.magenta>那么现在你可以在后台做的是</c>

266
00:16:57,050 --> 00:17:02,122
<c.magenta>当你丢掉编码器或丢掉媒体源时</c>

267
00:16:57,050 --> 00:17:02,122
<c.magenta>当你丢掉编码器或丢掉媒体源时</c>

268
00:17:02,422 --> 00:17:07,094
<c.magenta>可以继续写入片段</c>

269
00:17:07,261 --> 00:17:12,299
<c.magenta>它可以仅仅写入一个虚拟URL</c>

270
00:17:12,900 --> 00:17:18,137
<c.magenta>并且它可以继续这样做</c>

271
00:17:18,338 --> 00:17:23,676
<c.magenta>那么10秒钟之后 你可能会获得</c>

272
00:17:24,178 --> 00:17:27,580
<c.magenta>那么这就告诉播放器说流媒体仍然存在</c>

273
00:17:27,647 --> 00:17:30,217
<c.magenta>它仍然在继续 它仍然在更新</c>

274
00:17:30,617 --> 00:17:34,154
<c.magenta>但对于媒体数据来说并没有那么棒</c>

275
00:17:35,689 --> 00:17:38,158
<c.magenta>一旦东西被重新存储</c>

276
00:17:38,225 --> 00:17:41,528
<c.magenta>或你已经清理了你的微波炉盘子</c>

277
00:17:42,162 --> 00:17:46,867
<c.magenta>然后打包工具可以继续像以前一样</c>

278
00:17:47,100 --> 00:17:50,237
<c.magenta>那么对于客户端来说</c>

279
00:17:51,271 --> 00:17:55,576
<c.magenta>它主要表达这里没有媒体数据</c>

280
00:17:56,243 --> 00:18:00,681
<c.magenta>那么当然了 作为第一近似值</c>

281
00:17:56,243 --> 00:18:00,681
<c.magenta>那么当然了 作为第一近似值</c>

282
00:18:01,014 --> 00:18:04,117
<c.magenta>会下载它</c>

283
00:18:04,418 --> 00:18:09,456
<c.magenta>而更有意思的是一旦播放器</c>

284
00:18:09,523 --> 00:18:13,727
<c.magenta>在媒体播放列表中</c>

285
00:18:13,794 --> 00:18:17,831
<c.magenta>没有同样缺口的变量</c>

286
00:18:18,031 --> 00:18:20,501
<c.magenta>生产不同的变量或冗余的变量</c>

287
00:18:20,567 --> 00:18:23,136
<c.magenta>也许我们正在播放</c>

288
00:18:23,303 --> 00:18:26,006
<c.magenta>且我们可能发现</c>

289
00:18:26,073 --> 00:18:30,043
<c.magenta>哦 它实际上没有缺口</c>

290
00:18:30,110 --> 00:18:31,879
<c.magenta>我们可以通过</c>

291
00:18:32,212 --> 00:18:35,849
<c.magenta>一旦我们完成对缺口的处理</c>

292
00:18:35,916 --> 00:18:40,687
<c.magenta>2-megabit流媒体都可以</c>

293
00:18:42,122 --> 00:18:48,328
<c.magenta>…我们还有一种情况</c>

294
00:18:48,862 --> 00:18:50,964
<c.magenta>就是你可能只有一个编码器</c>

295
00:18:51,031 --> 00:18:52,733
<c.magenta>你可能打破了你的媒体源</c>

296
00:18:52,799 --> 00:18:54,902
<c.magenta>你可能没有用于整个缺口的媒体</c>

297
00:18:54,968 --> 00:18:57,471
<c.magenta>并且在那种情况下</c>

298
00:18:57,671 --> 00:19:00,908
<c.magenta>我们将会处于实时流媒体情境中</c>

299
00:18:57,671 --> 00:19:00,908
<c.magenta>我们将会处于实时流媒体情境中</c>

300
00:19:01,108 --> 00:19:03,510
<c.magenta>直到媒体回来</c>

301
00:19:04,511 --> 00:19:08,182
<c.magenta>现在新GAP标签和其它一些东西</c>

302
00:19:08,448 --> 00:19:12,486
<c.magenta>在HLS规范的beta版本中有描述</c>

303
00:19:12,886 --> 00:19:15,622
<c.magenta>那么我认为我们今天会发布它</c>

304
00:19:17,558 --> 00:19:18,992
<c.magenta>我都等不及想看到它了</c>

305
00:19:23,030 --> 00:19:26,800
<c.magenta>是的 好的 反馈当然是很受欢迎了</c>

306
00:19:28,936 --> 00:19:31,305
<c.magenta>那么这是GAP标签</c>

307
00:19:31,371 --> 00:19:33,874
<c.magenta>这也是用于后台的</c>

308
00:19:34,842 --> 00:19:38,045
<c.magenta>我们所做的是我们支持</c>

309
00:19:38,245 --> 00:19:41,448
<c.magenta>在m3u8播放列表中</c>

310
00:19:41,615 --> 00:19:45,018
<c.magenta>为此我们借用了一点儿PHP语法</c>

311
00:19:46,186 --> 00:19:49,456
<c.magenta>那么意思就是如果你看到一些</c>

312
00:19:49,857 --> 00:19:51,992
<c.magenta>…在播放列表中 它所表达的是</c>

313
00:19:52,259 --> 00:19:54,261
<c.magenta>把那个用大括号括起来的东西</c>

314
00:19:54,328 --> 00:19:58,398
<c.magenta>用变量值替换 变量名称就是文件名称</c>

315
00:19:58,665 --> 00:19:59,633
<c.magenta>那么如果</c>

316
00:19:59,700 --> 00:20:01,869
<c.magenta>变量值恰巧是foo</c>

317
00:19:59,700 --> 00:20:01,869
<c.magenta>变量值恰巧是foo</c>

318
00:20:02,135 --> 00:20:04,671
<c.magenta>你最终会得到一个foo.ts字符串</c>

319
00:20:05,873 --> 00:20:06,740
<c.magenta>现在</c>

320
00:20:08,175 --> 00:20:11,078
<c.magenta>要定义这些东西</c>

321
00:20:11,512 --> 00:20:13,680
<c.magenta>非常简单 我稍后会向你们介绍</c>

322
00:20:13,747 --> 00:20:19,553
<c.magenta>它要么在播放列表内定义一个变量</c>

323
00:20:19,920 --> 00:20:23,123
<c.magenta>现在就是这里让事情变得有意思了</c>

324
00:20:23,190 --> 00:20:24,791
<c.magenta>因为你记得我说过会让</c>

325
00:20:24,858 --> 00:20:26,727
<c.magenta>创建流媒体的人们生活好过一点儿吧</c>

326
00:20:26,793 --> 00:20:27,761
<c.magenta>那么是如何实现的呢？</c>

327
00:20:27,828 --> 00:20:29,897
<c.magenta>我的意思是 是的</c>

328
00:20:30,464 --> 00:20:34,168
<c.magenta>大喇叭一样的URL 你可以使用变量</c>

329
00:20:34,568 --> 00:20:37,704
<c.magenta>但我的意思是[听不清]已做得很好了</c>

330
00:20:38,105 --> 00:20:39,907
<c.magenta>那么就不是…这有点儿…但是</c>

331
00:20:40,507 --> 00:20:42,109
<c.magenta>有意思的是</c>

332
00:20:42,176 --> 00:20:45,646
<c.magenta>当你可以在主播放列表中定义变量</c>

333
00:20:46,079 --> 00:20:48,081
<c.magenta>并在媒体播放列表中使用它时</c>

334
00:20:48,649 --> 00:20:52,319
<c.magenta>那允许你提前通过小占位符</c>

335
00:20:52,519 --> 00:20:54,388
<c.magenta>来构建你的媒体播放列表</c>

336
00:20:54,454 --> 00:20:57,291
<c.magenta>以一种有点儿像后期绑定的方式填充</c>

337
00:20:57,524 --> 00:20:59,326
<c.magenta>当定义你的主播放列表时</c>

338
00:20:59,393 --> 00:21:01,195
<c.magenta>那么比如说你可以</c>

339
00:20:59,393 --> 00:21:01,195
<c.magenta>那么比如说你可以</c>

340
00:21:01,261 --> 00:21:04,731
<c.magenta>在你的媒体播放列表</c>

341
00:21:04,998 --> 00:21:06,466
<c.magenta>且你能生产自己的主播放列表</c>

342
00:21:06,533 --> 00:21:08,468
<c.magenta>从你的应用中动态地生产</c>

343
00:21:08,535 --> 00:21:12,239
<c.magenta>在那点上你就可以表明</c>

344
00:21:12,539 --> 00:21:15,876
<c.magenta>然后突然你CDN上的所有</c>

345
00:21:16,276 --> 00:21:17,945
<c.magenta>那么让我们看看会是什么样子</c>

346
00:21:18,946 --> 00:21:20,247
<c.magenta>这是主播放列表</c>

347
00:21:20,314 --> 00:21:22,149
<c.magenta>这是个很简单的例子</c>

348
00:21:22,449 --> 00:21:24,852
<c.magenta>我在这里有一个定义标签</c>

349
00:21:24,918 --> 00:21:27,588
<c.magenta>名称属性表明了变量名称是auth</c>

350
00:21:28,155 --> 00:21:31,358
<c.magenta>它有一个值就是auth令牌的定义</c>

351
00:21:32,259 --> 00:21:35,863
<c.magenta>你可以在主播放列表中的</c>

352
00:21:36,163 --> 00:21:39,333
<c.magenta>比如说 在这里的gear1中</c>

353
00:21:39,499 --> 00:21:43,971
<c.magenta>把auth令牌附加给</c>

354
00:21:45,639 --> 00:21:48,375
<c.magenta>但现在让我们想象一下</c>

355
00:21:49,243 --> 00:21:52,679
<c.magenta>再一次 媒体播放列表可以有变量</c>

356
00:21:52,746 --> 00:21:55,682
<c.magenta>在本例中 我有一个路径</c>

357
00:21:55,749 --> 00:21:57,985
<c.magenta>我不想重复输入这么一大长串</c>

358
00:21:58,051 --> 00:22:00,187
<c.magenta>但第二个定义更有意思</c>

359
00:21:58,051 --> 00:22:00,187
<c.magenta>但第二个定义更有意思</c>

360
00:22:00,254 --> 00:22:02,256
<c.magenta>在本例中 我们正在导入</c>

361
00:22:02,322 --> 00:22:05,092
<c.magenta>我们在主播放列表中</c>

362
00:22:05,259 --> 00:22:09,863
<c.magenta>并且我们正在把它应用到不同的地方</c>

363
00:22:10,497 --> 00:22:14,268
<c.magenta>那么这就允许你</c>

364
00:22:14,334 --> 00:22:16,203
<c.magenta>获得一种疏耦合效果</c>

365
00:22:16,270 --> 00:22:18,005
<c.magenta>在你的主播放和媒体播放列表之间</c>

366
00:22:18,071 --> 00:22:21,642
<c.magenta>我认为人们将会发现</c>

367
00:22:22,876 --> 00:22:26,013
<c.magenta>接下来 好的</c>

368
00:22:26,180 --> 00:22:28,715
<c.magenta>让我们来谈一些你可以实际用来</c>

369
00:22:28,782 --> 00:22:31,885
<c.magenta>提供引人注目的用户体验的东西</c>

370
00:22:32,819 --> 00:22:35,255
<c.magenta>现在我是什么意思呢？嗯 比如说</c>

371
00:22:36,089 --> 00:22:38,225
<c.magenta>如果你想让用户可以</c>

372
00:22:38,292 --> 00:22:39,660
<c.magenta>当他们正在看比赛时</c>

373
00:22:39,726 --> 00:22:43,697
<c.magenta>你希望他们可以看到一个摄像头</c>

374
00:22:43,764 --> 00:22:46,700
<c.magenta>但同时又能看到守门员那儿的摄像头</c>

375
00:22:46,767 --> 00:22:48,936
<c.magenta>他们也能从守门员的角度看比赛</c>

376
00:22:49,169 --> 00:22:51,538
<c.magenta>或者如果你正在看比赛</c>

377
00:22:51,605 --> 00:22:56,343
<c.magenta>并且你希望看到</c>

378
00:22:56,643 --> 00:22:59,413
<c.magenta>但你还想关注一下他后面的维特尔</c>

379
00:23:00,214 --> 00:23:03,283
<c.magenta>那么在那种情况下</c>

380
00:23:04,051 --> 00:23:06,286
<c.magenta>将这些功能合并起来的是</c>

381
00:23:06,720 --> 00:23:11,258
<c.magenta>播放多个相互同步的</c>

382
00:23:11,725 --> 00:23:13,794
<c.magenta>从而一个不会超过另一个</c>

383
00:23:15,429 --> 00:23:16,430
<c.magenta>这是你的未来</c>

384
00:23:18,232 --> 00:23:21,101
<c.magenta>那么为此</c>

385
00:23:21,735 --> 00:23:25,706
<c.magenta>我们只要求你有一个</c>

386
00:23:26,073 --> 00:23:30,744
<c.magenta>通过使用日期-时间标签来相互同步</c>

387
00:23:30,811 --> 00:23:33,213
<c.magenta>从根本上说意思就是</c>

388
00:23:33,280 --> 00:23:34,848
<c.magenta>日期就会在</c>

389
00:23:35,282 --> 00:23:37,985
<c.magenta>全部播放列表中衍生或派生出来</c>

390
00:23:38,151 --> 00:23:40,420
<c.magenta>一旦你完成了 然后你就可以创建</c>

391
00:23:40,621 --> 00:23:45,492
<c.magenta>多个独立的AVPlayer</c>

392
00:23:45,692 --> 00:23:49,162
<c.magenta>然后开始同步开始第二个播放</c>

393
00:23:49,229 --> 00:23:52,766
<c.magenta>AVPlayer setRatetime</c>

394
00:23:53,233 --> 00:23:57,104
<c.magenta>现在我应该站出来说</c>

395
00:23:57,571 --> 00:24:02,209
<c.magenta>AVPlayer中使用该方法会给你带来</c>

396
00:23:57,571 --> 00:24:02,209
<c.magenta>AVPlayer中使用该方法会给你带来</c>

397
00:24:02,543 --> 00:24:04,978
<c.magenta>因为它并不是世界上最简单的API</c>

398
00:24:07,014 --> 00:24:08,882
<c.magenta>但是为了帮助你脱离困境</c>

399
00:24:09,316 --> 00:24:11,985
<c.magenta>今年我们实际上有一些示例代码</c>

400
00:24:12,753 --> 00:24:15,656
<c.magenta>是一款Apple TV应用</c>

401
00:24:16,190 --> 00:24:17,758
<c.magenta>我认为</c>

402
00:24:18,192 --> 00:24:21,161
<c.magenta>我不能仅说 也许我可以展示一下</c>

403
00:24:21,228 --> 00:24:22,129
<c.magenta>是的</c>

404
00:24:22,196 --> 00:24:23,697
<c.magenta>好了 让我们来实际看一下吧</c>

405
00:24:24,932 --> 00:24:27,501
<c.magenta>我要切换到Apple TV</c>

406
00:24:27,968 --> 00:24:30,671
<c.magenta>如果我还记得是哪台设备的话</c>

407
00:24:31,038 --> 00:24:33,407
<c.magenta>我们有…我有我的小…</c>

408
00:24:33,841 --> 00:24:37,077
<c.magenta>为了演示实施同步流媒体</c>

409
00:24:37,144 --> 00:24:41,548
<c.magenta>我首先要生产一个实时流媒体组件</c>

410
00:24:42,249 --> 00:24:45,252
<c.magenta>那么我要稍微谈一下</c>

411
00:24:45,652 --> 00:24:50,057
<c.magenta>我写了一个小应用…</c>

412
00:24:50,357 --> 00:24:55,662
<c.magenta>进行剖析 实际上是为它服务</c>

413
00:24:55,996 --> 00:24:58,799
<c.magenta>那么我有两个家伙 两台手机</c>

414
00:24:58,866 --> 00:25:02,202
<c.magenta>两个都做同一件事 左边一台</c>

415
00:24:58,866 --> 00:25:02,202
<c.magenta>两个都做同一件事 左边一台</c>

416
00:25:02,269 --> 00:25:05,739
<c.magenta>它们实际上已经联网了</c>

417
00:25:06,006 --> 00:25:09,877
<c.magenta>并且它们用了一个时钟</c>

418
00:25:10,210 --> 00:25:11,812
<c.magenta>是它们之间共享的时钟</c>

419
00:25:12,546 --> 00:25:15,916
<c.magenta>那么它们正在做它们自己的事</c>

420
00:25:16,316 --> 00:25:18,051
<c.magenta>那么让我开始我的…</c>

421
00:25:19,853 --> 00:25:20,787
<c.magenta>我没有…</c>

422
00:25:22,189 --> 00:25:24,758
<c.magenta>我没有权限来做一些更令人激动的事</c>

423
00:25:24,825 --> 00:25:27,661
<c.magenta>所以让们来做这个吧</c>

424
00:25:28,529 --> 00:25:31,198
<c.magenta>那么让我们看一下 我要启动我的…</c>

425
00:25:32,866 --> 00:25:34,101
<c.magenta>这里正在发生一些事</c>

426
00:25:34,701 --> 00:25:37,638
<c.magenta>让我们启动其中一个摄像头</c>

427
00:25:37,704 --> 00:25:40,174
<c.magenta>事实上让我们把它们都放在这儿</c>

428
00:25:41,008 --> 00:25:42,242
<c.magenta>你已经得到了…</c>

429
00:25:43,076 --> 00:25:44,378
<c.magenta>右侧在线了</c>

430
00:25:45,479 --> 00:25:48,549
<c.magenta>左侧也在线了 好的 那么…</c>

431
00:25:50,083 --> 00:25:50,951
<c.magenta>好了</c>

432
00:25:53,620 --> 00:25:55,322
<c.magenta>我的遥控也正确地定位了</c>

433
00:25:55,389 --> 00:25:56,390
<c.magenta>好的 SyncStartTV</c>

434
00:25:56,456 --> 00:25:57,925
<c.magenta>当你启动SyncStartTV时</c>

435
00:25:58,959 --> 00:26:03,397
<c.magenta>它会给你机会选择左侧或右侧视频</c>

436
00:25:58,959 --> 00:26:03,397
<c.magenta>它会给你机会选择左侧或右侧视频</c>

437
00:26:03,463 --> 00:26:06,200
<c.magenta>让我们选择这家伙</c>

438
00:26:06,400 --> 00:26:08,969
<c.magenta>你可以在Bonjour中</c>

439
00:26:09,036 --> 00:26:12,005
<c.magenta>让我们从Stage Right开始</c>

440
00:26:12,072 --> 00:26:16,076
<c.magenta>那儿并没发生什么</c>

441
00:26:17,678 --> 00:26:19,880
<c.magenta>好的 现在选择左边的视频</c>

442
00:26:20,948 --> 00:26:21,849
<c.magenta>并且</c>

443
00:26:23,650 --> 00:26:24,852
<c.magenta>看一下</c>

444
00:26:26,386 --> 00:26:27,321
<c.magenta>它们是同步的！</c>

445
00:26:32,826 --> 00:26:33,694
<c.magenta>哦 天啊</c>

446
00:26:34,094 --> 00:26:34,995
<c.magenta>等一下</c>

447
00:26:56,116 --> 00:26:57,084
<c.magenta>好了</c>

448
00:27:00,721 --> 00:27:01,655
<c.magenta>谢谢</c>

449
00:27:02,990 --> 00:27:05,425
<c.magenta>我该如何返回幻灯片呢？好的 就这样</c>

450
00:27:06,460 --> 00:27:08,428
<c.magenta>这对于各个年龄段的人来说</c>

451
00:27:09,096 --> 00:27:12,599
<c.magenta>好的 那么我猜我正好</c>

452
00:27:12,866 --> 00:27:15,802
<c.magenta>哦 嗯 关于这种演示</c>

453
00:27:15,869 --> 00:27:17,738
<c.magenta>你同时显示多个流媒体时</c>

454
00:27:17,804 --> 00:27:21,441
<c.magenta>一定要谨慎地确保其中一个流媒体</c>

455
00:27:21,508 --> 00:27:23,677
<c.magenta>不会占用你的全部带宽</c>

456
00:27:23,744 --> 00:27:25,078
<c.magenta>而让另一个流媒体忍饥挨饿</c>

457
00:27:25,145 --> 00:27:27,814
<c.magenta>那么通常你可以</c>

458
00:27:28,115 --> 00:27:32,686
<c.magenta>为此 今年我们还要给你们提供</c>

459
00:27:33,220 --> 00:27:37,157
<c.magenta>那么本质上来说</c>

460
00:27:37,224 --> 00:27:39,526
<c.magenta>它允许你以编程方式表达“你知道吗？</c>

461
00:27:39,593 --> 00:27:41,895
<c.magenta>我要在一个480p的</c>

462
00:27:42,129 --> 00:27:44,765
<c.magenta>切换到1080p就毫无意义”</c>

463
00:27:45,132 --> 00:27:46,633
<c.magenta>那么</c>

464
00:27:48,101 --> 00:27:50,103
<c.magenta>当你有一个获取视频缩略图的应用</c>

465
00:27:50,170 --> 00:27:51,772
<c.magenta>或多个流媒体或如此内容应用时</c>

466
00:27:51,839 --> 00:27:54,508
<c.magenta>你不想深入查看</c>

467
00:27:54,575 --> 00:27:58,612
<c.magenta>那么设置一个带宽帽</c>

468
00:28:00,147 --> 00:28:03,183
<c.magenta>有一种情况 当你设置最大分辨率时</c>

469
00:28:03,250 --> 00:28:06,820
<c.magenta>实际上比任何东西都要更小…</c>

470
00:28:06,887 --> 00:28:10,057
<c.magenta>在那种情况下</c>

471
00:28:10,958 --> 00:28:12,192
<c.magenta>非常简单易用</c>

472
00:28:12,392 --> 00:28:13,694
<c.magenta>如果你有一个播放项</c>

473
00:28:13,760 --> 00:28:16,563
<c.magenta>你只需要把它的偏好</c>

474
00:28:16,930 --> 00:28:19,032
<c.magenta>在几分钟之内就会起作用</c>

475
00:28:20,000 --> 00:28:21,735
<c.magenta>两个 稍微有点儿上和下</c>

476
00:28:23,103 --> 00:28:25,806
<c.magenta>好的 那么让我们谈谈其它东西</c>

477
00:28:26,039 --> 00:28:30,077
<c.magenta>去年我们引入了HLS脱机支持</c>

478
00:28:30,277 --> 00:28:32,679
<c.magenta>就是能下载你的HLS流媒体</c>

479
00:28:32,746 --> 00:28:35,449
<c.magenta>并在其它地方播放</c>

480
00:28:35,516 --> 00:28:38,151
<c.magenta>当我们谈到那个时 我们提到了</c>

481
00:28:38,619 --> 00:28:40,554
<c.magenta>将来某一天我们会</c>

482
00:28:40,621 --> 00:28:43,991
<c.magenta>在管理磁盘空间方面</c>

483
00:28:44,224 --> 00:28:47,361
<c.magenta>那时候说的那个将来就是现在</c>

484
00:28:47,427 --> 00:28:50,664
<c.magenta>在iOS 11中</c>

485
00:28:51,131 --> 00:28:54,601
<c.magenta>这有一个部分 用户可以进入并查看</c>

486
00:28:54,835 --> 00:28:59,139
<c.magenta>拥又脱机资产的全部应用</c>

487
00:28:59,473 --> 00:29:03,277
<c.magenta>并且用户可以选择删除它们</c>

488
00:28:59,473 --> 00:29:03,277
<c.magenta>并且用户可以选择删除它们</c>

489
00:29:04,011 --> 00:29:08,115
<c.magenta>那么这对于你们这些家伙来说</c>

490
00:29:08,182 --> 00:29:12,886
<c.magenta>现在的OS稍微能</c>

491
00:29:13,287 --> 00:29:18,192
<c.magenta>离开并删除你的资产</c>

492
00:29:18,759 --> 00:29:20,794
<c.magenta>有多种不同的实现方式</c>

493
00:29:20,861 --> 00:29:23,497
<c.magenta>用户可以自己决定实现</c>

494
00:29:23,864 --> 00:29:27,134
<c.magenta>或我们会问用户是否可以删除</c>

495
00:29:27,201 --> 00:29:30,470
<c.magenta>如果我们需要空间的话</c>

496
00:29:30,537 --> 00:29:34,541
<c.magenta>那么在iOS 11中</c>

497
00:29:34,875 --> 00:29:39,713
<c.magenta>允许你改变要删除哪些资产的选择</c>

498
00:29:40,147 --> 00:29:43,217
<c.magenta>它叫作AVAssetDownload</c>

499
00:29:43,884 --> 00:29:49,389
<c.magenta>它的使用方式是你给你</c>

500
00:29:49,456 --> 00:29:52,059
<c.magenta>都创建一个政策</c>

501
00:29:52,626 --> 00:29:55,996
<c.magenta>现在 下载存储管理政策</c>

502
00:29:56,063 --> 00:30:00,133
<c.magenta>有两个属性 失效日期和优先级</c>

503
00:29:56,063 --> 00:30:00,133
<c.magenta>有两个属性 失效日期和优先级</c>

504
00:30:00,334 --> 00:30:03,403
<c.magenta>今天我们只需要定义两个优先级</c>

505
00:30:03,470 --> 00:30:04,471
<c.magenta>对于绝大多数人来说</c>

506
00:30:06,673 --> 00:30:11,211
<c.magenta>你要做的是将用户</c>

507
00:30:11,512 --> 00:30:14,581
<c.magenta>一旦我看了 就把它们切换回默认</c>

508
00:30:14,648 --> 00:30:16,617
<c.magenta>失效日期属性</c>

509
00:30:16,683 --> 00:30:22,623
<c.magenta>是为了防止你的资产在某一时刻</c>

510
00:30:22,689 --> 00:30:25,158
<c.magenta>比如你可能发现你处于这种情况下</c>

511
00:30:25,225 --> 00:30:27,928
<c.magenta>某一个节目可能离开了你的目录</c>

512
00:30:27,995 --> 00:30:29,763
<c.magenta>你不再有播放它的权限了</c>

513
00:30:29,830 --> 00:30:32,032
<c.magenta>如果是这种情况 你可以设置失效日期</c>

514
00:30:32,099 --> 00:30:35,736
<c.magenta>那么它会在删除队列中起作用</c>

515
00:30:37,004 --> 00:30:39,806
<c.magenta>那么它的使用是非常简单直接的</c>

516
00:30:40,207 --> 00:30:43,577
<c.magenta>DownloadStorageManager</c>

517
00:30:43,644 --> 00:30:46,680
<c.magenta>创建一个新的可变政策 并设置属性</c>

518
00:30:46,980 --> 00:30:48,515
<c.magenta>然后你就告诉存储管理工具</c>

519
00:30:48,582 --> 00:30:53,187
<c.magenta>使用那个政策来处理AVAsset</c>

520
00:30:54,021 --> 00:30:57,157
<c.magenta>你稍后还可以返回并查看当前政策</c>

521
00:30:58,325 --> 00:31:00,394
<c.magenta>那么这是按照你的方式进行的</c>

522
00:30:58,325 --> 00:31:00,394
<c.magenta>那么这是按照你的方式进行的</c>

523
00:31:02,462 --> 00:31:04,998
<c.magenta>关于脱机的另一件事是</c>

524
00:31:05,933 --> 00:31:08,202
<c.magenta>我们从采用它的一些人那儿</c>

525
00:31:08,669 --> 00:31:12,372
<c.magenta>下载一个以上的表演时</c>

526
00:31:12,439 --> 00:31:15,008
<c.magenta>比如 如果你想要英文音频</c>

527
00:31:15,642 --> 00:31:17,845
<c.magenta>也许比它预计的要难一点儿</c>

528
00:31:18,045 --> 00:31:21,715
<c.magenta>首先如果你的应用受制于进入后台</c>

529
00:31:21,982 --> 00:31:23,817
<c.magenta>并在半途中退出了</c>

530
00:31:24,117 --> 00:31:27,187
<c.magenta>那么我很高兴地告诉你</c>

531
00:31:27,588 --> 00:31:30,424
<c.magenta>一种新方式来分批处理你的脱机下载</c>

532
00:31:30,490 --> 00:31:32,960
<c.magenta>它叫作AggregateAssetDownloadTask</c>

533
00:31:33,193 --> 00:31:36,029
<c.magenta>它允许你 对于一个指定资产</c>

534
00:31:36,897 --> 00:31:41,101
<c.magenta>表明一个像这样的媒体选择数组</c>

535
00:31:41,502 --> 00:31:44,271
<c.magenta>然后当你踢开下载任务时</c>

536
00:31:44,705 --> 00:31:47,908
<c.magenta>我们就开始执行 我们会下载每一个</c>

537
00:31:47,975 --> 00:31:49,877
<c.magenta>然后当整件事情完成时我们会通知你</c>

538
00:31:50,077 --> 00:31:51,879
<c.magenta>希望它能让事情</c>

539
00:31:53,247 --> 00:31:54,348
<c.magenta>谢谢</c>

540
00:31:55,983 --> 00:31:59,520
<c.magenta>好的 今天我们要讲的另一部分内容</c>

541
00:32:00,087 --> 00:32:04,558
<c.magenta>都与在你的设备上管理内容相关</c>

542
00:32:04,992 --> 00:32:10,030
<c.magenta>这是一个非常复杂的话题 所以我要</c>

543
00:32:10,097 --> 00:32:14,801
<c.magenta>把你们交给我们自己的</c>

544
00:32:14,868 --> 00:32:16,270
<c.magenta>他会跟大家具体讲一下</c>

545
00:32:16,637 --> 00:32:17,638
<c.magenta>谢谢大家</c>

546
00:32:26,180 --> 00:32:27,114
<c.magenta>谢谢Roger</c>

547
00:32:27,981 --> 00:32:30,517
<c.magenta>大家晚上好 欢迎参加WWDC</c>

548
00:32:31,952 --> 00:32:35,422
<c.magenta>那么两年前我们引入了</c>

549
00:32:35,522 --> 00:32:40,561
<c.magenta>一个概念保护技术</c>

550
00:32:41,595 --> 00:32:44,831
<c.magenta>自从这次引入之后</c>

551
00:32:45,599 --> 00:32:47,568
<c.magenta>FairPlay Streaming</c>

552
00:32:47,634 --> 00:32:50,204
<c.magenta>提交到我们平台上的高级内容</c>

553
00:32:51,071 --> 00:32:55,242
<c.magenta>今天我很激动地宣布一些针对</c>

554
00:32:55,309 --> 00:32:57,544
<c.magenta>FairPlay Streaming</c>

555
00:32:58,078 --> 00:33:00,981
<c.magenta>那将允许你简化你的流程</c>

556
00:32:58,078 --> 00:33:00,981
<c.magenta>那将允许你简化你的流程</c>

557
00:33:02,082 --> 00:33:04,151
<c.magenta>熟练你的FairPlay</c>

558
00:33:05,018 --> 00:33:08,021
<c.magenta>并支持新的内容生产功能</c>

559
00:33:09,656 --> 00:33:12,025
<c.magenta>但在我们谈这些改进之前</c>

560
00:33:12,092 --> 00:33:15,229
<c.magenta>我想先快速回顾一下</c>

561
00:33:16,997 --> 00:33:20,534
<c.magenta>FairPlay Streaming</c>

562
00:33:20,868 --> 00:33:23,370
<c.magenta>如何安全地提交内容解密钥匙</c>

563
00:33:24,037 --> 00:33:27,274
<c.magenta>在FairPlay Streaming系统中</c>

564
00:33:28,008 --> 00:33:29,543
<c.magenta>以媒体为中心的应用</c>

565
00:33:30,744 --> 00:33:33,647
<c.magenta>就是拥有播放会话的应用</c>

566
00:33:34,248 --> 00:33:39,019
<c.magenta>一方面有钥匙服务器</c>

567
00:33:39,653 --> 00:33:41,989
<c.magenta>而另一方面AVFoundation</c>

568
00:33:42,356 --> 00:33:45,726
<c.magenta>为你提供内容的解密和播放支持</c>

569
00:33:47,761 --> 00:33:51,331
<c.magenta>提交内容解密钥匙一共有五个步骤</c>

570
00:33:51,598 --> 00:33:55,002
<c.magenta>那么这些步骤开始执行</c>

571
00:33:55,335 --> 00:33:57,204
<c.magenta>尝试选择某个视频进行播放时</c>

572
00:33:57,771 --> 00:34:00,407
<c.magenta>当用户这么做时</c>

573
00:33:57,771 --> 00:34:00,407
<c.magenta>当用户这么做时</c>

574
00:34:00,774 --> 00:34:03,610
<c.magenta>并且由AVFoundation决定播放</c>

575
00:34:05,012 --> 00:34:07,481
<c.magenta>当AVFoundation</c>

576
00:34:07,614 --> 00:34:09,315
<c.magenta>它就开始传递播放列表</c>

577
00:34:09,583 --> 00:34:11,618
<c.magenta>当它看到内容是加密的时</c>

578
00:34:11,685 --> 00:34:13,954
<c.magenta>就使用FairPlay</c>

579
00:34:14,221 --> 00:34:18,192
<c.magenta>通过给你发送钥匙请求</c>

580
00:34:18,625 --> 00:34:20,092
<c.magenta>通过委托回调</c>

581
00:34:21,094 --> 00:34:24,364
<c.magenta>在那点上 你可以使用钥匙请求对象</c>

582
00:34:24,464 --> 00:34:30,003
<c.magenta>创建一个服务器播放情境</c>

583
00:34:30,737 --> 00:34:32,272
<c.magenta>它是一个加密的数据块</c>

584
00:34:32,505 --> 00:34:35,775
<c.magenta>包含你的钥匙服务器所请求的信息</c>

585
00:34:36,176 --> 00:34:38,078
<c.magenta>用以创建内容解密钥匙</c>

586
00:34:39,246 --> 00:34:42,449
<c.magenta>然后你的应用把内容解密钥匙</c>

587
00:34:42,850 --> 00:34:46,987
<c.magenta>并从那儿获取内容钥匙情境</c>

588
00:34:48,021 --> 00:34:52,025
<c.magenta>它是另一个包含解密钥匙的加密数据块</c>

589
00:34:54,862 --> 00:34:59,099
<c.magenta>最后一步 你的应用提供CKC</c>

590
00:34:59,533 --> 00:35:03,437
<c.magenta>作为对它最初接收到的钥匙</c>

591
00:34:59,533 --> 00:35:03,437
<c.magenta>作为对它最初接收到的钥匙</c>

592
00:35:04,771 --> 00:35:06,974
<c.magenta>那么假如AVFoundation</c>

593
00:35:07,140 --> 00:35:10,010
<c.magenta>已经加载了播放列表</c>

594
00:35:10,711 --> 00:35:13,814
<c.magenta>拥有它用于解密内容</c>

595
00:35:14,181 --> 00:35:16,517
<c.magenta>和开始播放的FairPlay</c>

596
00:35:18,151 --> 00:35:19,520
<c.magenta>嗯 在某种意义上</c>

597
00:35:19,753 --> 00:35:22,756
<c.magenta>FairPlay Streaming钥匙</c>

598
00:35:23,957 --> 00:35:25,626
<c.magenta>并且事实上 如果你回顾一下</c>

599
00:35:25,792 --> 00:35:28,629
<c.magenta>如果你今天使用</c>

600
00:35:28,896 --> 00:35:32,599
<c.magenta>FairPlay Streaming钥匙</c>

601
00:35:32,666 --> 00:35:34,535
<c.magenta>与其它自定义资源相似</c>

602
00:35:35,569 --> 00:35:38,939
<c.magenta>但差不多是时候</c>

603
00:35:39,106 --> 00:35:42,176
<c.magenta>FairPlay Streaming</c>

604
00:35:42,376 --> 00:35:45,145
<c.magenta>定义有非常具体的操作</c>

605
00:35:45,712 --> 00:35:47,581
<c.magenta>我现在要给你看一些例子</c>

606
00:35:49,049 --> 00:35:53,387
<c.magenta>AVFoundation允许你释放</c>

607
00:35:53,554 --> 00:35:57,324
<c.magenta>以便你可以把它们</c>

608
00:35:57,624 --> 00:36:00,661
<c.magenta>就像当用户尝试脱机播放内容时一样</c>

609
00:35:57,624 --> 00:36:00,661
<c.magenta>就像当用户尝试脱机播放内容时一样</c>

610
00:36:02,696 --> 00:36:04,131
<c.magenta>你可能还会定义</c>

611
00:36:04,198 --> 00:36:07,401
<c.magenta>FairPlay Streaming钥匙</c>

612
00:36:08,268 --> 00:36:09,736
<c.magenta>钥匙必须得更新</c>

613
00:36:09,803 --> 00:36:12,272
<c.magenta>在它们失效之前 以便继续解密</c>

614
00:36:13,907 --> 00:36:16,443
<c.magenta>随着内容生产功能的持续衍变</c>

615
00:36:16,910 --> 00:36:18,212
<c.magenta>FairPlay Streaming钥匙</c>

616
00:36:18,278 --> 00:36:21,949
<c.magenta>将持续变得更具体</c>

617
00:36:23,717 --> 00:36:26,386
<c.magenta>进一步说</c>

618
00:36:26,620 --> 00:36:29,990
<c.magenta>不一定要与资产相关联 当加载时</c>

619
00:36:30,757 --> 00:36:33,427
<c.magenta>那么我们认为通过去耦钥匙加载</c>

620
00:36:33,994 --> 00:36:36,129
<c.magenta>从媒体加载中或甚至是播放</c>

621
00:36:36,730 --> 00:36:39,166
<c.magenta>我们可以给你提供更多的灵活性</c>

622
00:36:39,666 --> 00:36:42,836
<c.magenta>可以用来处理现有的一些难点</c>

623
00:36:43,136 --> 00:36:45,672
<c.magenta>还可以提供更棒的用户体验</c>

624
00:36:46,807 --> 00:36:48,408
<c.magenta>那么考虑到这一切</c>

625
00:36:48,775 --> 00:36:51,044
<c.magenta>我们很高兴引入了一个新API</c>

626
00:36:51,678 --> 00:36:55,949
<c.magenta>它将允许你更好地管理</c>

627
00:36:56,850 --> 00:36:58,819
<c.magenta>AVContentKeySession简介</c>

628
00:37:00,387 --> 00:37:03,290
<c.magenta>AVContentKeySession</c>

629
00:37:03,357 --> 00:37:05,792
<c.magenta>用于处理内容解密钥匙</c>

630
00:37:06,026 --> 00:37:10,497
<c.magenta>它允许你从媒体加载中去耦钥匙加载</c>

631
00:37:10,664 --> 00:37:12,432
<c.magenta>或甚至是播放 就此而言</c>

632
00:37:13,534 --> 00:37:15,736
<c.magenta>它还给你提供了一个更好的控制</c>

633
00:37:16,103 --> 00:37:18,372
<c.magenta>针对内容解密钥匙的生存周期</c>

634
00:37:19,606 --> 00:37:20,707
<c.magenta>那么如果你回顾一下</c>

635
00:37:21,408 --> 00:37:26,413
<c.magenta>你的应用只在收到来自</c>

636
00:37:26,480 --> 00:37:27,447
<c.magenta>AVFoundation</c>

637
00:37:28,682 --> 00:37:30,684
<c.magenta>并且…但那个…</c>

638
00:37:31,251 --> 00:37:33,487
<c.magenta>你可以通过AVContentKeySession</c>

639
00:37:34,087 --> 00:37:37,691
<c.magenta>通过AVContentKeySession</c>

640
00:37:38,392 --> 00:37:41,662
<c.magenta>然而 如果你选择</c>

641
00:37:42,296 --> 00:37:45,265
<c.magenta>AVFoundation</c>

642
00:37:45,566 --> 00:37:46,633
<c.magenta>就像它今天做的这样</c>

643
00:37:47,935 --> 00:37:52,372
<c.magenta>那么现在 我们给你提供了</c>

644
00:37:54,007 --> 00:37:54,908
<c.magenta>你可以使用…</c>

645
00:37:55,342 --> 00:37:57,911
<c.magenta>你的应用可以使用</c>

646
00:37:58,145 --> 00:38:00,447
<c.magenta>来明确启动钥匙加载过程</c>

647
00:37:58,145 --> 00:38:00,447
<c.magenta>来明确启动钥匙加载过程</c>

648
00:38:01,348 --> 00:38:04,618
<c.magenta>或AVFoundation按需要</c>

649
00:38:04,685 --> 00:38:06,486
<c.magenta>当它看到内容被加密时</c>

650
00:38:07,654 --> 00:38:10,524
<c.magenta>那么让我们看看如何用</c>

651
00:38:10,591 --> 00:38:12,092
<c.magenta>启动钥匙加载过程</c>

652
00:38:12,526 --> 00:38:13,427
<c.magenta>这对你们很有帮助</c>

653
00:38:14,127 --> 00:38:16,330
<c.magenta>那么首先 今天我们要使用的钥匙</c>

654
00:38:16,396 --> 00:38:17,965
<c.magenta>是关于开始播放的钥匙</c>

655
00:38:20,501 --> 00:38:24,571
<c.magenta>钥匙加载时间对于</c>

656
00:38:24,905 --> 00:38:27,508
<c.magenta>因为应用通常当它们</c>

657
00:38:28,342 --> 00:38:30,444
<c.magenta>收到按需钥匙请求时才会加载钥匙</c>

658
00:38:31,845 --> 00:38:35,315
<c.magenta>你可以提升</c>

659
00:38:35,749 --> 00:38:37,017
<c.magenta>如果你可以加载钥匙</c>

660
00:38:37,084 --> 00:38:40,053
<c.magenta>甚至在用户选择</c>

661
00:38:41,488 --> 00:38:43,824
<c.magenta>AVContentKeySession</c>

662
00:38:44,024 --> 00:38:48,161
<c.magenta>你可以使用AVContentKeySession</c>

663
00:38:48,729 --> 00:38:50,731
<c.magenta>然后通过你得到的钥匙请求</c>

664
00:38:51,365 --> 00:38:54,635
<c.magenta>在播放会话中独立加载钥匙</c>

665
00:38:55,969 --> 00:38:57,604
<c.magenta>现在我们调用这个钥匙预加载</c>

666
00:38:59,139 --> 00:39:01,909
<c.magenta>在钥匙加载完成之后 你可以请求播放</c>

667
00:38:59,139 --> 00:39:01,909
<c.magenta>在钥匙加载完成之后 你可以请求播放</c>

668
00:39:02,075 --> 00:39:02,976
<c.magenta>那么</c>

669
00:39:03,043 --> 00:39:05,045
<c.magenta>在播放期间 你不必加载任何钥匙</c>

670
00:39:05,112 --> 00:39:07,915
<c.magenta>并且播放…会立即开始解密</c>

671
00:39:09,183 --> 00:39:11,151
<c.magenta>我今天要给大家展示的第二个用例</c>

672
00:39:11,218 --> 00:39:15,756
<c.magenta>随着时间收到了越来越多的盛赞</c>

673
00:39:17,324 --> 00:39:20,527
<c.magenta>我们看到向我们平台上</c>

674
00:39:20,594 --> 00:39:22,396
<c.magenta>有了显著增长</c>

675
00:39:22,563 --> 00:39:27,034
<c.magenta>这都归因于用户在我们的设备上</c>

676
00:39:28,101 --> 00:39:33,774
<c.magenta>有更多的用户在我们的设备上关注</c>

677
00:39:34,708 --> 00:39:38,011
<c.magenta>开发人员也使用</c>

678
00:39:38,545 --> 00:39:41,982
<c.magenta>钥匙旋转和钥匙更新</c>

679
00:39:42,049 --> 00:39:43,951
<c.magenta>当提交附加实时内容时</c>

680
00:39:46,453 --> 00:39:48,255
<c.magenta>由于实时流媒体的性质</c>

681
00:39:49,122 --> 00:39:53,026
<c.magenta>你的钥匙服务器会同时遭受</c>

682
00:39:53,093 --> 00:39:55,229
<c.magenta>当钥匙被旋转或更新时</c>

683
00:39:56,296 --> 00:40:01,134
<c.magenta>嗯 你可以使用</c>

684
00:39:56,296 --> 00:40:01,134
<c.magenta>嗯 你可以使用</c>

685
00:40:01,368 --> 00:40:04,538
<c.magenta>通过在起始点平衡加载钥匙请求</c>

686
00:40:05,706 --> 00:40:10,210
<c.magenta>让我通过一个简单的图例</c>

687
00:40:12,613 --> 00:40:15,249
<c.magenta>请考虑这么一个情境 上百万个用户</c>

688
00:40:15,315 --> 00:40:18,085
<c.magenta>正在观看一个很受欢迎的实时流媒体</c>

689
00:40:19,119 --> 00:40:22,289
<c.magenta>他们开始观看的时间点可能都不一样</c>

690
00:40:22,489 --> 00:40:24,825
<c.magenta>但当需要升级或更新钥匙时</c>

691
00:40:25,259 --> 00:40:28,362
<c.magenta>他们都会在完全一样的时间点</c>

692
00:40:29,263 --> 00:40:32,165
<c.magenta>那代表了短时间内</c>

693
00:40:32,232 --> 00:40:35,702
<c.magenta>然后一切都回归正常</c>

694
00:40:36,203 --> 00:40:40,140
<c.magenta>直到下一次再升级或更新钥匙 对吧？</c>

695
00:40:40,474 --> 00:40:44,611
<c.magenta>那么这种模式会持续</c>

696
00:40:45,646 --> 00:40:50,017
<c.magenta>你可以使用AVContentKeySession</c>

697
00:40:50,717 --> 00:40:54,454
<c.magenta>通过在一个小的时间窗口内</c>

698
00:40:54,521 --> 00:40:58,926
<c.magenta>当钥匙失效之前 并启动钥匙加载自己</c>

699
00:41:00,093 --> 00:41:03,797
<c.magenta>那么这就允许你调整你的实时供应</c>

700
00:41:04,164 --> 00:41:06,800
<c.magenta>而不用给社交安全钥匙服务器增加负载</c>

701
00:41:09,136 --> 00:41:13,807
<c.magenta>那么现在我们看了一些用例</c>

702
00:41:13,874 --> 00:41:18,378
<c.magenta>启动钥匙加载过程是很有帮助的</c>

703
00:41:19,880 --> 00:41:22,482
<c.magenta>你可以启动钥匙加载过程</c>

704
00:41:22,549 --> 00:41:24,751
<c.magenta>仅通过三行代码 就那么简单</c>

705
00:41:25,485 --> 00:41:26,320
<c.magenta>就在这里</c>

706
00:41:27,321 --> 00:41:30,090
<c.magenta>那么你要做的第一件事</c>

707
00:41:30,157 --> 00:41:33,527
<c.magenta>就是为FairPlay Streaming</c>

708
00:41:35,162 --> 00:41:37,865
<c.magenta>然后把你的应用设为</c>

709
00:41:39,132 --> 00:41:40,367
<c.magenta>你应该会在你在这里</c>

710
00:41:40,434 --> 00:41:43,470
<c.magenta>指定的委托队列上收到全部委托回调</c>

711
00:41:45,105 --> 00:41:50,110
<c.magenta>第三步是调用</c>

712
00:41:50,177 --> 00:41:52,546
<c.magenta>那将启动钥匙加载过程</c>

713
00:41:54,281 --> 00:41:56,149
<c.magenta>那么在这里需要注意几点</c>

714
00:41:57,985 --> 00:42:00,020
<c.magenta>要使用这个功能不需要对你的钥匙</c>

715
00:41:57,985 --> 00:42:00,020
<c.magenta>要使用这个功能不需要对你的钥匙</c>

716
00:42:00,087 --> 00:42:03,423
<c.magenta>或你的钥匙服务器模块</c>

717
00:42:04,591 --> 00:42:07,961
<c.magenta>这是…这里的全部实施都是在客户端上</c>

718
00:42:09,296 --> 00:42:10,330
<c.magenta>第二</c>

719
00:42:11,465 --> 00:42:13,767
<c.magenta>你在这里指定的标识符</c>

720
00:42:14,768 --> 00:42:18,972
<c.magenta>应该与你在媒体播放列表中的</c>

721
00:42:19,039 --> 00:42:20,207
<c.magenta>指定的标识符相匹配</c>

722
00:42:20,941 --> 00:42:25,012
<c.magenta>那将允许我们匹配</c>

723
00:42:25,078 --> 00:42:28,815
<c.magenta>你在这里加载的钥匙</c>

724
00:42:30,551 --> 00:42:31,485
<c.magenta>第三</c>

725
00:42:32,653 --> 00:42:36,456
<c.magenta>你应该有一个带外的过程</c>

726
00:42:37,324 --> 00:42:40,093
<c.magenta>从钥匙服务器上获取特别资产的钥匙</c>

727
00:42:40,160 --> 00:42:43,330
<c.magenta>以便你可以在这点上加载全部钥匙</c>

728
00:42:45,532 --> 00:42:48,969
<c.magenta>当你在AVContentKeySession上</c>

729
00:42:49,570 --> 00:42:52,739
<c.magenta>我们给你发送一个</c>

730
00:42:53,473 --> 00:42:54,808
<c.magenta>通过一个委托回调</c>

731
00:42:55,175 --> 00:42:58,078
<c.magenta>并且这与</c>

732
00:42:58,145 --> 00:43:00,914
<c.magenta>钥匙加载过程时的委托方法一模一样</c>

733
00:42:58,145 --> 00:43:00,914
<c.magenta>钥匙加载过程时的委托方法一模一样</c>

734
00:43:02,249 --> 00:43:04,318
<c.magenta>那么现在你可以使用钥匙请求对象</c>

735
00:43:04,384 --> 00:43:07,321
<c.magenta>来执行FairPlay Streamings</c>

736
00:43:07,955 --> 00:43:10,157
<c.magenta>你可以请求SPC</c>

737
00:43:10,224 --> 00:43:13,427
<c.magenta>这与你通过AVAsset</c>

738
00:43:13,493 --> 00:43:15,462
<c.magenta>来请求SPC的方式非常相似</c>

739
00:43:16,730 --> 00:43:20,067
<c.magenta>然后你要把SPC发送到你的</c>

740
00:43:21,134 --> 00:43:25,772
<c.magenta>最后一步是用CKC创建响应对象</c>

741
00:43:25,839 --> 00:43:29,042
<c.magenta>并把它设为</c>

742
00:43:31,445 --> 00:43:35,349
<c.magenta>那么当你响应钥匙请求时</c>

743
00:43:36,483 --> 00:43:40,087
<c.magenta>一旦你将CKC设为对钥匙请求的响应</c>

744
00:43:41,355 --> 00:43:44,157
<c.magenta>你就可以在设备上</c>

745
00:43:44,224 --> 00:43:46,059
<c.magenta>这些slot的数量有限</c>

746
00:43:47,160 --> 00:43:51,198
<c.magenta>那么为任意数量的钥匙启动</c>

747
00:43:51,265 --> 00:43:54,701
<c.magenta>并且你可以还可以为全部</c>

748
00:43:55,536 --> 00:43:57,070
<c.magenta>但一定要小心最后一步</c>

749
00:43:58,205 --> 00:44:00,707
<c.magenta>你应该只在那些你预测</c>

750
00:43:58,205 --> 00:44:00,707
<c.magenta>你应该只在那些你预测</c>

751
00:44:00,774 --> 00:44:02,876
<c.magenta>可能在播放过程中</c>

752
00:44:03,677 --> 00:44:06,013
<c.magenta>而且要恰好在请求播放之前进行</c>

753
00:44:09,850 --> 00:44:13,086
<c.magenta>那么以此为背景 让我们</c>

754
00:44:13,153 --> 00:44:16,957
<c.magenta>改变一下方式 了解一下我们如何</c>

755
00:44:17,624 --> 00:44:19,760
<c.magenta>在脱机HLS播放情境中</c>

756
00:44:21,962 --> 00:44:27,334
<c.magenta>去年当我们修改</c>

757
00:44:27,801 --> 00:44:30,270
<c.magenta>你的脱机HLS资产时</c>

758
00:44:31,438 --> 00:44:35,442
<c.magenta>AVContentKeySession</c>

759
00:44:36,977 --> 00:44:41,582
<c.magenta>在请求加载HLS资产之前</c>

760
00:44:42,082 --> 00:44:47,120
<c.magenta>你可以使用AVContentKeySession</c>

761
00:44:47,187 --> 00:44:50,490
<c.magenta>并使用钥匙请求对象来创建持久钥匙</c>

762
00:44:51,525 --> 00:44:55,028
<c.magenta>然后你可以把持久钥匙保存到你的应用</c>

763
00:44:56,830 --> 00:44:59,666
<c.magenta>然后这将会让你的流程</c>

764
00:44:59,733 --> 00:45:01,368
<c.magenta>因为现在你不必</c>

765
00:44:59,733 --> 00:45:01,368
<c.magenta>因为现在你不必</c>

766
00:45:01,568 --> 00:45:04,471
<c.magenta>在你的主播放列表中</c>

767
00:45:05,105 --> 00:45:06,573
<c.magenta>你只需要使用</c>

768
00:45:09,309 --> 00:45:13,981
<c.magenta>更进一步 当创建和使用持久钥匙时</c>

769
00:45:14,248 --> 00:45:17,551
<c.magenta>你应该也使用</c>

770
00:45:17,618 --> 00:45:19,720
<c.magenta>即AVPersistableContentKeyRequest</c>

771
00:45:20,521 --> 00:45:25,092
<c.magenta>我要在代码中解释一下如何请求</c>

772
00:45:25,158 --> 00:45:30,030
<c.magenta>以及工作…以及如何使用</c>

773
00:45:31,999 --> 00:45:34,635
<c.magenta>那么如果你回顾一下 这是当你启动</c>

774
00:45:34,701 --> 00:45:37,137
<c.magenta>钥匙加载过程时调用的那个委托方法</c>

775
00:45:39,072 --> 00:45:42,209
<c.magenta>在这点上</c>

776
00:45:42,643 --> 00:45:45,379
<c.magenta>你应该只响应钥匙请求并请求</c>

777
00:45:45,445 --> 00:45:49,550
<c.magenta>PersistableContentKeyRequest</c>

778
00:45:49,616 --> 00:45:54,354
<c.magenta>AVPersistableContentKeyRequest对象</c>

779
00:45:56,456 --> 00:45:58,458
<c.magenta>你可以使用</c>

780
00:45:58,525 --> 00:46:01,361
<c.magenta>来执行FairPlay Streaming的全部操作</c>

781
00:45:58,525 --> 00:46:01,361
<c.magenta>来执行FairPlay Streaming的全部操作</c>

782
00:46:01,929 --> 00:46:03,230
<c.magenta>比如创建SPC</c>

783
00:46:04,097 --> 00:46:08,035
<c.magenta>把SPC发送到你的钥匙服务器</c>

784
00:46:08,669 --> 00:46:10,370
<c.magenta>创建一个持久钥匙</c>

785
00:46:10,871 --> 00:46:12,840
<c.magenta>你可把持久钥匙</c>

786
00:46:12,906 --> 00:46:15,509
<c.magenta>以便你可以稍后当用户脱机时使用它</c>

787
00:46:16,710 --> 00:46:18,979
<c.magenta>当是时候使用持久钥匙时</c>

788
00:46:19,479 --> 00:46:23,750
<c.magenta>你所要做的就是通过持久钥匙</c>

789
00:46:24,418 --> 00:46:27,754
<c.magenta>并将其设为ContentKeyRequest</c>

790
00:46:28,956 --> 00:46:29,790
<c.magenta>就是这样</c>

791
00:46:31,458 --> 00:46:34,328
<c.magenta>如果你今天使用</c>

792
00:46:34,561 --> 00:46:37,097
<c.magenta>来提交钥匙 你可以观察到</c>

793
00:46:37,164 --> 00:46:39,333
<c.magenta>AVContentKeySession与</c>

794
00:46:39,399 --> 00:46:42,836
<c.magenta>你今天用过的AVAssetResourceLoader</c>

795
00:46:44,671 --> 00:46:49,176
<c.magenta>我们没用AVAssetResourceLoading请求</c>

796
00:46:50,611 --> 00:46:52,946
<c.magenta>AVAsset</c>

797
00:46:53,013 --> 00:46:54,915
<c.magenta>它叫作AVContentKeySession委托</c>

798
00:46:56,717 --> 00:46:58,519
<c.magenta>然而 这是一个关键的不同点</c>

799
00:46:58,785 --> 00:47:00,921
<c.magenta>与AVAssetResourceLoader不同</c>

800
00:46:58,785 --> 00:47:00,921
<c.magenta>与AVAssetResourceLoader不同</c>

801
00:47:00,988 --> 00:47:03,023
<c.magenta>AVContentKeySession</c>

802
00:47:03,257 --> 00:47:05,592
<c.magenta>一个资产</c>

803
00:47:06,627 --> 00:47:11,665
<c.magenta>所以你可以在任意一点上创建</c>

804
00:47:12,566 --> 00:47:14,368
<c.magenta>并用它加载全部钥匙</c>

805
00:47:15,269 --> 00:47:19,806
<c.magenta>就在你请求播放之前</c>

806
00:47:20,240 --> 00:47:22,142
<c.magenta>作为内容钥匙接收器</c>

807
00:47:23,043 --> 00:47:26,113
<c.magenta>这将允许你的AVAsset获取</c>

808
00:47:26,180 --> 00:47:28,448
<c.magenta>你通过ContentKeySession</c>

809
00:47:31,118 --> 00:47:33,520
<c.magenta>现在我们有两个API</c>

810
00:47:34,188 --> 00:47:36,223
<c.magenta>AVContentKeySession</c>

811
00:47:36,290 --> 00:47:38,859
<c.magenta>你可能会在想应该用哪个API</c>

812
00:47:38,926 --> 00:47:40,694
<c.magenta>来加载资源的不同类型</c>

813
00:47:40,761 --> 00:47:42,729
<c.magenta>那么我们有一个建议</c>

814
00:47:43,497 --> 00:47:47,434
<c.magenta>使用AVContentKeySession</c>

815
00:47:47,501 --> 00:47:51,138
<c.magenta>使用AVAssetResourceLoader</c>

816
00:47:52,105 --> 00:47:54,875
<c.magenta>我必须指出我们并没有</c>

817
00:47:54,942 --> 00:47:58,111
<c.magenta>在这一点上复制AVAssetResource</c>

818
00:47:58,178 --> 00:48:01,315
<c.magenta>所以你可以继续使用</c>

819
00:47:58,178 --> 00:48:01,315
<c.magenta>所以你可以继续使用</c>

820
00:48:01,715 --> 00:48:04,117
<c.magenta>来加载FairPlay Streaming钥匙</c>

821
00:48:04,251 --> 00:48:06,587
<c.magenta>但我们强烈建议你切换为</c>

822
00:48:06,653 --> 00:48:09,056
<c.magenta>AVContentKeySession</c>

823
00:48:10,657 --> 00:48:11,992
<c.magenta>那么谁负责</c>

824
00:48:12,059 --> 00:48:14,361
<c.magenta>加载解密钥匙呢 如果某个资产</c>

825
00:48:14,428 --> 00:48:17,598
<c.magenta>既有AVAssetResourceLoader委托</c>

826
00:48:17,664 --> 00:48:19,600
<c.magenta>又有与之关联的</c>

827
00:48:20,701 --> 00:48:22,536
<c.magenta>嗯 为了保持一致性</c>

828
00:48:22,603 --> 00:48:27,274
<c.magenta>我们强制只使用</c>

829
00:48:27,341 --> 00:48:29,276
<c.magenta>AVContentKeySession委托</c>

830
00:48:31,144 --> 00:48:35,282
<c.magenta>我们的AVAssetResourceLoader委托</c>

831
00:48:35,349 --> 00:48:38,552
<c.magenta>包括那四个内容解密钥匙</c>

832
00:48:39,786 --> 00:48:44,958
<c.magenta>应用应该推迟全部的内容解密钥匙加载</c>

833
00:48:45,926 --> 00:48:48,795
<c.magenta>通过在加载请求上调用完成加载</c>

834
00:48:48,862 --> 00:48:52,799
<c.magenta>AVFoundation可以再次允许</c>

835
00:48:53,233 --> 00:48:54,902
<c.magenta>让我们在代码中看看是如何实现的</c>

836
00:48:55,169 --> 00:48:56,136
<c.magenta>非常简单</c>

837
00:48:56,904 --> 00:48:58,739
<c.magenta>那么这里有一个委托方法</c>

838
00:48:59,139 --> 00:49:02,109
<c.magenta>当AVFoundation</c>

839
00:48:59,139 --> 00:49:02,109
<c.magenta>当AVFoundation</c>

840
00:49:02,676 --> 00:49:05,479
<c.magenta>当你看到资源是用于内容解密钥匙时</c>

841
00:49:05,913 --> 00:49:09,183
<c.magenta>你应该设置内容管道</c>

842
00:49:09,750 --> 00:49:11,451
<c.magenta>并调用完成加载</c>

843
00:49:11,952 --> 00:49:14,621
<c.magenta>那么在那点上我们将向</c>

844
00:49:14,688 --> 00:49:18,258
<c.magenta>AVContentKeySession委托发送</c>

845
00:49:19,193 --> 00:49:23,197
<c.magenta>如果是其它资源</c>

846
00:49:25,365 --> 00:49:29,136
<c.magenta>那么我希望这个新API</c>

847
00:49:29,203 --> 00:49:31,939
<c.magenta>关于通过AVContentKeySession</c>

848
00:49:33,140 --> 00:49:36,176
<c.magenta>在我结束演讲之前</c>

849
00:49:36,677 --> 00:49:40,948
<c.magenta>这可以通过</c>

850
00:49:43,650 --> 00:49:47,588
<c.magenta>我们为FairPlay Streaming持久钥匙</c>

851
00:49:47,654 --> 00:49:50,991
<c.magenta>提供双重失效窗口支持</c>

852
00:49:51,592 --> 00:49:54,194
<c.magenta>现在这个双重失效窗口是什么？</c>

853
00:49:55,229 --> 00:49:57,631
<c.magenta>如果你曾经在iTunes上租过电影</c>

854
00:49:58,298 --> 00:50:02,836
<c.magenta>你可以看到你有…一旦你租了一部电影</c>

855
00:49:58,298 --> 00:50:02,836
<c.magenta>你可以看到你有…一旦你租了一部电影</c>

856
00:50:03,670 --> 00:50:07,541
<c.magenta>一旦你开始观看电影</c>

857
00:50:08,041 --> 00:50:11,211
<c.magenta>我们把这个称为租赁的</c>

858
00:50:13,413 --> 00:50:16,183
<c.magenta>那么这个功能可以允许你</c>

859
00:50:16,817 --> 00:50:18,552
<c.magenta>定义和自定义</c>

860
00:50:18,719 --> 00:50:22,089
<c.magenta>两个失效窗口</c>

861
00:50:23,023 --> 00:50:28,061
<c.magenta>那将允许你支持比如</c>

862
00:50:28,996 --> 00:50:29,830
<c.magenta>通过…</c>

863
00:50:30,864 --> 00:50:33,534
<c.magenta>而不需要在服务器端进行大量的编程</c>

864
00:50:33,600 --> 00:50:37,938
<c.magenta>最棒的是它既可以在脱机播放时</c>

865
00:50:39,573 --> 00:50:42,910
<c.magenta>那么为了使用这个功能</c>

866
00:50:42,976 --> 00:50:45,112
<c.magenta>通过在你的CKC中发送适当的描述符</c>

867
00:50:45,746 --> 00:50:48,382
<c.magenta>那将允许你指定两个失效窗口</c>

868
00:50:49,049 --> 00:50:51,251
<c.magenta>第一个叫作存储失效窗口</c>

869
00:50:51,318 --> 00:50:55,222
<c.magenta>一旦创建持久钥匙即启动</c>

870
00:50:55,455 --> 00:50:58,592
<c.magenta>然后还有一个播放失效窗口</c>

871
00:50:58,892 --> 00:51:01,929
<c.magenta>当持久钥匙用于开始播放时启动</c>

872
00:50:58,892 --> 00:51:01,929
<c.magenta>当持久钥匙用于开始播放时启动</c>

873
00:51:03,397 --> 00:51:05,899
<c.magenta>为了更好地描述这个功能 让我给你…</c>

874
00:51:06,700 --> 00:51:08,335
<c.magenta>让我们一起看一个事件的时间轴</c>

875
00:51:08,402 --> 00:51:10,971
<c.magenta>和脱机播放的情境</c>

876
00:51:12,840 --> 00:51:13,941
<c.magenta>当用户</c>

877
00:51:14,608 --> 00:51:16,877
<c.magenta>租了一部电影脱机播放时</c>

878
00:51:16,944 --> 00:51:19,813
<c.magenta>你要创建一个带CKC的持久钥匙</c>

879
00:51:19,980 --> 00:51:22,282
<c.magenta>选择加入使用这个功能</c>

880
00:51:23,584 --> 00:51:28,222
<c.magenta>持久钥匙会在存储</c>

881
00:51:28,288 --> 00:51:31,091
<c.magenta>在我们的例子中是30天</c>

882
00:51:31,158 --> 00:51:34,228
<c.magenta>（持久钥匙的双重失效窗口）</c>

883
00:51:34,294 --> 00:51:37,831
<c.magenta>你可以把持久钥匙存在你应用的存储中</c>

884
00:51:37,898 --> 00:51:40,634
<c.magenta>并可以用它来响应稍后的钥匙请求</c>

885
00:51:41,401 --> 00:51:44,037
<c.magenta>现在当用户在这30天内返回来</c>

886
00:51:44,104 --> 00:51:48,208
<c.magenta>并要求你开始播放时…要求你播放内容</c>

887
00:51:48,809 --> 00:51:50,010
<c.magenta>你会得到一个钥匙请求</c>

888
00:51:50,077 --> 00:51:53,080
<c.magenta>你可以用这个持久钥匙</c>

889
00:51:54,214 --> 00:51:58,051
<c.magenta>在那点上 我们将给你发送一个</c>

890
00:51:58,519 --> 00:52:00,954
<c.magenta>这个更新了的持久钥匙</c>

891
00:51:58,519 --> 00:52:00,954
<c.magenta>这个更新了的持久钥匙</c>

892
00:52:01,121 --> 00:52:04,024
<c.magenta>在我们的例子中是24小时</c>

893
00:52:05,158 --> 00:52:07,127
<c.magenta>同时我们还明确地</c>

894
00:52:07,194 --> 00:52:10,030
<c.magenta>失效了你创建的原始持久钥匙</c>

895
00:52:10,264 --> 00:52:12,266
<c.magenta>所以你要</c>

896
00:52:12,332 --> 00:52:15,836
<c.magenta>在你的应用存储中保存</c>

897
00:52:15,903 --> 00:52:18,472
<c.magenta>响应将来的钥匙加载请求</c>

898
00:52:18,772 --> 00:52:23,010
<c.magenta>这就是当用户停止并在</c>

899
00:52:24,244 --> 00:52:27,648
<c.magenta>关于代码 这与我们</c>

900
00:52:27,714 --> 00:52:30,817
<c.magenta>在前几张幻灯片中所看到的</c>

901
00:52:30,884 --> 00:52:33,954
<c.magenta>然而我们将发送给你这个</c>

902
00:52:34,087 --> 00:52:37,090
<c.magenta>通过一个新的</c>

903
00:52:39,226 --> 00:52:41,395
<c.magenta>那么这是我们今年针对</c>

904
00:52:41,461 --> 00:52:44,364
<c.magenta>FairPlay Streaming</c>

905
00:52:45,532 --> 00:52:48,402
<c.magenta>总之 我们引入了</c>

906
00:52:48,468 --> 00:52:49,536
<c.magenta>两个新的编解码器</c>

907
00:52:49,603 --> 00:52:54,608
<c.magenta>我们今年引入了[听不清]</c>

908
00:52:56,276 --> 00:52:58,912
<c.magenta>我们添加了EXT-X-GAP标签</c>

909
00:52:58,979 --> 00:53:01,849
<c.magenta>允许你在你的实时流媒体中表示缺口</c>

910
00:52:58,979 --> 00:53:01,849
<c.magenta>允许你在你的实时流媒体中表示缺口</c>

911
00:53:02,783 --> 00:53:09,790
<c.magenta>现在你可以在你的HLS流媒体中定义</c>

912
00:53:11,258 --> 00:53:15,095
<c.magenta>你现可同步两个或多个HLS流媒体</c>

913
00:53:16,997 --> 00:53:19,199
<c.magenta>并且我们提供新API</c>

914
00:53:19,266 --> 00:53:24,638
<c.magenta>以供你更好地控制脱机HLS资产</c>

915
00:53:26,473 --> 00:53:30,344
<c.magenta>现在有一个新API</c>

916
00:53:30,410 --> 00:53:33,380
<c.magenta>更好地管理和提交内容解密钥匙</c>

917
00:53:34,681 --> 00:53:35,782
<c.magenta>最后</c>

918
00:53:36,450 --> 00:53:41,588
<c.magenta>我们给全部FairPlay Streaming</c>

919
00:53:41,655 --> 00:53:46,860
<c.magenta>那将会允许你支持脱机</c>

920
00:53:48,262 --> 00:53:52,232
<c.magenta>我们做出了这么多的新功能</c>

921
00:53:52,299 --> 00:53:54,334
<c.magenta>我们期待你们能采用它们</c>

922
00:53:55,836 --> 00:53:57,571
<c.magenta>感谢你们来参加本场演讲</c>

923
00:53:58,038 --> 00:54:02,509
<c.magenta>你可以在开发者网站上访问</c>

924
00:53:58,038 --> 00:54:02,509
<c.magenta>你可以在开发者网站上访问</c>

925
00:54:03,143 --> 00:54:08,148
<c.magenta>你还可以下载我们在本场演讲中</c>

926
00:54:08,382 --> 00:54:09,416
<c.magenta>提到的全部实例代码</c>

927
00:54:11,318 --> 00:54:13,587
<c.magenta>我们最近有许多相关的演讲</c>

928
00:54:14,087 --> 00:54:15,689
<c.magenta>我强烈建议你们</c>

929
00:54:15,822 --> 00:54:20,194
<c.magenta>观看错误处理最佳范例</c>

930
00:54:20,727 --> 00:54:24,164
<c.magenta>这些有在线视频</c>

931
00:54:24,765 --> 00:54:27,401
<c.magenta>如果你错过了其它现场演讲</c>

932
00:54:27,467 --> 00:54:31,505
<c.magenta>你总是可以从你的WWDC应用中</c>

933
00:54:32,239 --> 00:54:34,942
<c.magenta>脱机或在线看均可</c>

934
00:54:35,776 --> 00:54:36,810
<c.magenta>非常感谢</c>

935
00:54:36,877 --> 00:54:38,846
<c.magenta>希望你们在本周剩余大会中</c>
