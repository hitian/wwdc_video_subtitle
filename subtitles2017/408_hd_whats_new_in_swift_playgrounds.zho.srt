1
00:00:07,516 --> 00:00:16,500
[背景谈话声]

2
00:00:22,516 --> 00:00:29,676
[掌声]

3
00:00:30,176 --> 00:00:31,846
&gt;&gt; 大家好 欢迎

4
00:00:31,846 --> 00:00:33,316
来到“Swift Playgrounds

5
00:00:33,316 --> 00:00:33,946
的新功能”

6
00:00:34,486 --> 00:00:35,326
我的名字叫 Connor 

7
00:00:35,576 --> 00:00:36,886
我是一位工程师

8
00:00:36,886 --> 00:00:37,736
在 Swift Playgrounds 团队工作

9
00:00:38,016 --> 00:00:39,196
今天 我将和我的

10
00:00:39,196 --> 00:00:41,186
同事 Grace 以及 Najla 一起 

11
00:00:41,186 --> 00:00:42,426
与你们分享

12
00:00:42,426 --> 00:00:43,616
Swift Playgrounds 去年的大会之后

13
00:00:43,756 --> 00:00:44,796
又为我们带来了什么新功能

14
00:00:47,486 --> 00:00:48,696
今天的会议将会分为

15
00:00:48,696 --> 00:00:49,796
三个部分

16
00:00:50,626 --> 00:00:52,406
首先 我们来很快地看一下

17
00:00:52,406 --> 00:00:53,866
Playground Book 的格式

18
00:00:53,866 --> 00:00:55,176
以确保大家的

19
00:00:55,206 --> 00:00:55,856
有相同的认识

20
00:00:58,436 --> 00:01:00,126
然后 我们会再讲讲

21
00:00:58,436 --> 00:01:00,126
然后 我们会再讲讲

22
00:01:00,126 --> 00:01:01,266
我们为更好地构建

23
00:01:01,266 --> 00:01:03,136
Playground Book

24
00:01:03,136 --> 00:01:03,776
所作出的改进

25
00:01:05,126 --> 00:01:06,786
最后 我们将会介绍一个

26
00:01:06,786 --> 00:01:08,746
全新的 API  通过它你可以与

27
00:01:08,746 --> 00:01:10,926
Playgrounds 中的蓝牙配件

28
00:01:10,926 --> 00:01:12,266
交互和连接 

29
00:01:12,596 --> 00:01:13,626
旨在为大家提供一个

30
00:01:13,626 --> 00:01:14,976
一致的用户体验

31
00:01:15,036 --> 00:01:19,326
首先 我们来讲讲

32
00:01:19,326 --> 00:01:21,776
Playground Book

33
00:01:23,896 --> 00:01:25,776
Swift Playgrounds 支持两种

34
00:01:25,776 --> 00:01:27,546
文件格式 包括经典的

35
00:01:27,596 --> 00:01:29,336
Xcode 所使用的 Playground 文件格式

36
00:01:29,336 --> 00:01:30,946
以及 Playground

37
00:01:30,946 --> 00:01:32,616
Book 文件格式 它让你可以

38
00:01:32,616 --> 00:01:35,666
管理你的用户

39
00:01:35,786 --> 00:01:36,726
所看到的体验

40
00:01:38,146 --> 00:01:39,756
Playground Book 分为不同的章节 

41
00:01:39,756 --> 00:01:41,156
进一步

42
00:01:41,246 --> 00:01:43,046
分为页

43
00:01:44,656 --> 00:01:45,816
Playground Book 可以包含

44
00:01:45,816 --> 00:01:47,766
你在运行时使用的资源 

45
00:01:47,916 --> 00:01:49,776
或是你向你的用户

46
00:01:49,776 --> 00:01:50,686
展示的 Prose 中的资源

47
00:01:50,686 --> 00:01:55,606
这些都是通过

48
00:01:55,606 --> 00:01:57,076
基于包的文件格式完成的

49
00:01:57,596 --> 00:01:58,416
如果你并不清楚

50
00:01:58,416 --> 00:01:59,656
基于包的文件格式是什么

51
00:01:59,986 --> 00:02:01,356
它其实并不是

52
00:01:59,986 --> 00:02:01,356
它其实并不是

53
00:02:01,356 --> 00:02:03,186
平面文件而是

54
00:02:03,186 --> 00:02:04,756
由其他文件以及文件夹

55
00:02:04,756 --> 00:02:06,376
组成的文件夹 

56
00:02:06,376 --> 00:02:06,876
的文件格式

57
00:02:08,526 --> 00:02:09,686
我们再看看 Playground Book 的内部

58
00:02:09,686 --> 00:02:10,925
我们会看到

59
00:02:10,925 --> 00:02:12,856
里面会有一些 PLIST 文件 

60
00:02:12,856 --> 00:02:14,316
一些 Swift 文件 以及一些

61
00:02:14,316 --> 00:02:15,426
目录 这些共同组成了

62
00:02:15,426 --> 00:02:15,876
Playground Book 的架构

63
00:02:15,876 --> 00:02:19,036
让我们来先看看

64
00:02:19,036 --> 00:02:19,846
Manifest 文件

65
00:02:19,846 --> 00:02:22,286
你可以把这些看作是

66
00:02:22,286 --> 00:02:23,626
和 App 的 info.plist

67
00:02:23,626 --> 00:02:24,876
非常相似的文件

68
00:02:25,766 --> 00:02:27,066
Manifest 文件中的 PLIST 提供

69
00:02:27,246 --> 00:02:28,926
书级 章级以及页级

70
00:02:28,926 --> 00:02:30,106
的元数据 比如页的名字

71
00:02:30,106 --> 00:02:32,196
或者在文件浏览器中

72
00:02:32,196 --> 00:02:33,536
使用的图标 

73
00:02:35,586 --> 00:02:37,506
Manifest 文件还会指定

74
00:02:37,506 --> 00:02:39,356
书 章及页的选项 

75
00:02:39,356 --> 00:02:41,266
比如 是否

76
00:02:41,266 --> 00:02:42,416
即时演示

77
00:02:42,416 --> 00:02:43,756
默认可见 还是你希望

78
00:02:43,786 --> 00:02:44,836
它在用户登录 Playground 后

79
00:02:45,656 --> 00:02:45,776
才启动

80
00:02:46,856 --> 00:02:48,796
Playground Book 另外一个主要的组成部分

81
00:02:48,796 --> 00:02:50,446
是 Swift 文件 

82
00:02:50,986 --> 00:02:52,656
总共有三种不同的

83
00:02:52,696 --> 00:02:54,226
Swift 文件

84
00:02:54,226 --> 00:02:55,546
包含在 Playground Book 中

85
00:02:56,276 --> 00:02:57,836
第一种是

86
00:02:57,836 --> 00:02:59,046
Contents.swift 文件

87
00:02:59,506 --> 00:03:00,886
你的用户可以与

88
00:02:59,506 --> 00:03:00,886
你的用户可以与

89
00:03:00,926 --> 00:03:02,396
这个源文件进行交互 并且

90
00:03:02,596 --> 00:03:03,856
你也可以把

91
00:03:03,856 --> 00:03:05,666
Prose 存储在这个源文件中

92
00:03:05,666 --> 00:03:07,786
Prose 是指在 Swift 文件中

93
00:03:07,786 --> 00:03:09,746
特殊的标记注释部分

94
00:03:11,986 --> 00:03:13,346
还有 LiveView.swift

95
00:03:13,346 --> 00:03:13,686
文件

96
00:03:13,976 --> 00:03:15,496
它让你可以提供

97
00:03:15,586 --> 00:03:17,276
一直活动的即时演示 

98
00:03:17,276 --> 00:03:18,726
这为你的用户提供

99
00:03:18,726 --> 00:03:20,286
丰富且具交互性的体验 

100
00:03:20,286 --> 00:03:21,456
他们在页面操作的全过程

101
00:03:21,456 --> 00:03:22,586
都可以获得这种体验 而不只是

102
00:03:22,586 --> 00:03:23,786
当他们在运行他们的代码的时候才可以

103
00:03:25,476 --> 00:03:27,566
最后还有

104
00:03:27,566 --> 00:03:29,126
辅助源文件

105
00:03:29,666 --> 00:03:30,926
他们被存储在 Playground Book

106
00:03:30,926 --> 00:03:32,506
及其的章和页中 让你可以

107
00:03:32,506 --> 00:03:33,896
通过另外的 Swift 模块

108
00:03:34,626 --> 00:03:36,016
提供更多的 API

109
00:03:36,016 --> 00:03:37,736
Swift 模块会在每个层级

110
00:03:37,736 --> 00:03:38,556
自动导入

111
00:03:40,426 --> 00:03:41,646
要想了解有关

112
00:03:41,646 --> 00:03:43,296
Playground Book 文件格式的更多信息 

113
00:03:43,296 --> 00:03:44,366
我强烈推荐你去看看

114
00:03:44,366 --> 00:03:45,596
去年的“Introducing Swift Playgrounds

115
00:03:45,596 --> 00:03:47,036
（介绍 Swift Playgrounds）”的内容 

116
00:03:47,036 --> 00:03:48,176
我的同事在其中

117
00:03:48,176 --> 00:03:49,466
对此有更加详细的讲解

118
00:03:50,266 --> 00:03:51,066
同时在 developer.apple.com 上

119
00:03:51,066 --> 00:03:52,536
你们也可以找到

120
00:03:52,536 --> 00:03:55,746
非常棒的介绍文档

121
00:03:56,976 --> 00:03:58,396
现在我们来看看

122
00:03:58,396 --> 00:04:00,046
自去年以来

123
00:03:58,396 --> 00:04:00,046
自去年以来

124
00:04:00,046 --> 00:04:01,186
Swift Playgrounds 更新的功能

125
00:04:02,636 --> 00:04:05,646
首先是支持页之间的

126
00:04:05,646 --> 00:04:06,736
代码复制

127
00:04:07,366 --> 00:04:08,446
这让你可以让你在构建

128
00:04:08,446 --> 00:04:10,326
Playground Book 的时候

129
00:04:10,326 --> 00:04:11,966
在页与页之间维持同一叙述

130
00:04:11,966 --> 00:04:13,446
让用户可以基于他们在写的代码

131
00:04:13,446 --> 00:04:14,336
继续演进

132
00:04:15,306 --> 00:04:16,495
所以当我打开一个页面

133
00:04:16,495 --> 00:04:19,016
并且作为用户使用这个功能的时候 

134
00:04:19,016 --> 00:04:20,466
我会看到一个提示 问我

135
00:04:20,466 --> 00:04:21,706
是否要将上一页的代码

136
00:04:21,706 --> 00:04:23,106
复制到这一页 或者立即

137
00:04:23,106 --> 00:04:23,856
开始代码

138
00:04:25,046 --> 00:04:27,006
如果我点击

139
00:04:27,006 --> 00:04:29,206
复制上一页的代码 那么

140
00:04:29,336 --> 00:04:31,016
我在上一页的操作

141
00:04:31,016 --> 00:04:32,496
将会被自动复制 

142
00:04:32,496 --> 00:04:33,886
并且源代码编辑器也会

143
00:04:33,886 --> 00:04:35,176
同时显示 让我可以开始

144
00:04:35,176 --> 00:04:35,536
编程

145
00:04:40,946 --> 00:04:42,366
下一个新功能是支持

146
00:04:42,366 --> 00:04:43,986
Swift Playgrounds 中的

147
00:04:43,986 --> 00:04:44,476
速度控制

148
00:04:45,476 --> 00:04:46,456
这让你可以控制

149
00:04:46,456 --> 00:04:48,206
执行的速度 并且它有

150
00:04:48,206 --> 00:04:48,926
两种形式

151
00:04:50,096 --> 00:04:52,256
第一种是支持在执行的时候

152
00:04:52,306 --> 00:04:53,576
逐句跟踪代码

153
00:04:53,966 --> 00:04:55,076
点击即时演示左下方的

154
00:04:55,076 --> 00:04:56,216
速度控制 

155
00:04:56,216 --> 00:04:57,496
你可以选择“Step Through My Code（逐句运行代码）” 

156
00:04:57,496 --> 00:04:59,676
然后

157
00:04:59,676 --> 00:05:01,466
代码在即时演示中执行时 

158
00:04:59,676 --> 00:05:01,466
代码在即时演示中执行时 

159
00:05:01,576 --> 00:05:02,476
当前动作所对应的

160
00:05:02,476 --> 00:05:03,646
那行代码

161
00:05:03,866 --> 00:05:05,076
会在源代码编辑器中

162
00:05:05,136 --> 00:05:05,686
被标记出来

163
00:05:05,686 --> 00:05:07,436
你可以看到 Bite 在

164
00:05:07,436 --> 00:05:08,736
迷宫世界内四处移动时

165
00:05:08,736 --> 00:05:10,426
其中指引着当前动作的

166
00:05:10,426 --> 00:05:13,526
代码会高亮

167
00:05:14,306 --> 00:05:15,416
Swift Playgrounds 现在还

168
00:05:15,416 --> 00:05:17,166
支持以高于默认速度

169
00:05:17,166 --> 00:05:18,846
更快速地运行 只要你的

170
00:05:18,846 --> 00:05:19,536
Playground Book 支持

171
00:05:19,536 --> 00:05:22,106
同样 你可以点击即时演示中的

172
00:05:22,106 --> 00:05:24,086
速度控制 

173
00:05:24,286 --> 00:05:25,646
然后选择“Run Faster（加速运行）”或者

174
00:05:25,646 --> 00:05:26,316
“Run Fastest（最高速运行）”

175
00:05:27,096 --> 00:05:28,516
“Learn to Code（学习编程）” 1 和 2 都运用了

176
00:05:28,516 --> 00:05:29,826
这个功能

177
00:05:29,856 --> 00:05:31,256
让 Bite 更快地

178
00:05:31,256 --> 00:05:33,326
在迷宫世界里移动

179
00:05:34,176 --> 00:05:37,726
Swift Playgrounds 现在还会显示

180
00:05:37,726 --> 00:05:39,786
发生在你的 Playgrounds 的

181
00:05:40,066 --> 00:05:41,036
运行时错误

182
00:05:41,536 --> 00:05:43,276
比如我一共创建了

183
00:05:43,276 --> 00:05:45,126
5 个条目 然后

184
00:05:45,126 --> 00:05:46,686
尝试访问索引 5 中的

185
00:05:46,686 --> 00:05:48,676
项目 但最后出现

186
00:05:48,676 --> 00:05:49,806
索引超出范围

187
00:05:50,826 --> 00:05:51,916
Swift Playgrounds 可以

188
00:05:51,916 --> 00:05:53,326
找到具体哪条代码

189
00:05:53,326 --> 00:05:55,306
导致了执行中的崩溃情况 

190
00:05:55,306 --> 00:05:56,836
并且在提供的文本中

191
00:05:57,216 --> 00:06:01,256
高亮显示那行代码

192
00:05:57,216 --> 00:06:01,256
高亮显示那行代码

193
00:06:01,256 --> 00:06:03,976
用户可以添加

194
00:06:04,546 --> 00:06:07,566
删除 重命名 重新排序以及

195
00:06:07,566 --> 00:06:09,276
复制 Playground Book 中的页 

196
00:06:09,366 --> 00:06:10,356
它们都是在

197
00:06:10,356 --> 00:06:11,306
Swift Playgrounds 内部创建的 

198
00:06:11,306 --> 00:06:12,916
包括所有

199
00:06:12,916 --> 00:06:14,366
Apple 提供的

200
00:06:14,936 --> 00:06:15,086
起始点

201
00:06:16,176 --> 00:06:19,126
Swift Playgrounds 现在

202
00:06:19,126 --> 00:06:20,956
已经被本地化至

203
00:06:20,956 --> 00:06:22,786
多种语言以提高它的影响范围

204
00:06:23,676 --> 00:06:24,966
Swift Playgrounds 以及所有

205
00:06:24,966 --> 00:06:26,206
Apple 提供的内容

206
00:06:26,206 --> 00:06:27,656
现在已经有简体中文

207
00:06:27,656 --> 00:06:31,136
日文 法文

208
00:06:32,216 --> 00:06:35,696
德文 西班牙文（拉丁美洲）

209
00:06:37,306 --> 00:06:37,716
的版本

210
00:06:37,926 --> 00:06:40,436
作为作者 你可以将你的内容

211
00:06:40,436 --> 00:06:41,796
本地化为这些语言中的

212
00:06:41,796 --> 00:06:43,476
任意一种 或者任何其他

213
00:06:43,516 --> 00:06:44,496
iOS 支持的语言

214
00:06:45,516 --> 00:06:51,816
[掌声]

215
00:06:52,316 --> 00:06:53,976
即将发布的 Swift Playgrounds 2 

216
00:06:53,976 --> 00:06:56,146
支持 iOS 11 SDK 

217
00:06:56,716 --> 00:06:58,256
这意味着将有一些新的

218
00:06:58,316 --> 00:06:59,706
架构可以在

219
00:06:59,706 --> 00:07:01,096
Swift Playgrounds 2

220
00:06:59,706 --> 00:07:01,096
Swift Playgrounds 2

221
00:07:01,096 --> 00:07:01,726
中使用

222
00:07:01,726 --> 00:07:05,126
包括 ARKit CoreML

223
00:07:05,586 --> 00:07:08,246
IOSurface PDFKit 以及 Vision

224
00:07:09,816 --> 00:07:11,466
另外 Playgrounds 也可以

225
00:07:11,466 --> 00:07:13,046
访问相机 

226
00:07:13,046 --> 00:07:14,186
只要是在 iOS 11 的环境下

227
00:07:14,546 --> 00:07:15,916
你可以通过 AVFoundation API

228
00:07:15,916 --> 00:07:17,006
访问

229
00:07:17,006 --> 00:07:17,406
相机

230
00:07:18,156 --> 00:07:19,006
当然还需要注意

231
00:07:19,006 --> 00:07:20,566
这个功能在

232
00:07:20,566 --> 00:07:22,376
旧版本的 iOS 系统上是无法运作的 

233
00:07:22,436 --> 00:07:23,396
所以如果你的 Playground 需要使用

234
00:07:23,466 --> 00:07:24,666
相机的话 我们推荐你

235
00:07:24,706 --> 00:07:26,176
将部署目标设为

236
00:07:26,176 --> 00:07:26,586
iOS 11

237
00:07:27,106 --> 00:07:30,146
现在 让我们通过一个 Demo

238
00:07:30,146 --> 00:07:31,056
来看看这些

239
00:07:31,056 --> 00:07:31,566
新功能

240
00:07:32,516 --> 00:07:40,446
[掌声]

241
00:07:40,946 --> 00:07:42,886
好的 这里我们有 

242
00:07:42,886 --> 00:07:44,366
Swift Playgrounds

243
00:07:44,366 --> 00:07:47,336
我们来打开它

244
00:07:47,336 --> 00:07:49,496
Najla Grace 和我每个人

245
00:07:49,526 --> 00:07:50,626
都参与制作了 Playground Book

246
00:07:51,006 --> 00:07:52,636
代表了我们的厨房 

247
00:07:52,636 --> 00:07:53,686
我们将使用 Swift 代码

248
00:07:53,686 --> 00:07:55,906
来制作些东西

249
00:07:55,906 --> 00:07:56,896
首先是我 我将

250
00:07:56,896 --> 00:07:57,466
做一个蛋糕

251
00:07:58,286 --> 00:07:59,386
我将打开我的

252
00:07:59,436 --> 00:08:00,036
Playground Book

253
00:07:59,436 --> 00:08:00,036
Playground Book

254
00:08:00,036 --> 00:08:02,296
我们将从

255
00:08:02,296 --> 00:08:04,416
最开头做起 

256
00:08:04,416 --> 00:08:06,656
靠我们自己制作

257
00:08:06,656 --> 00:08:07,246
一些黄油

258
00:08:08,046 --> 00:08:09,166
我们有这个 makeButter 函数 

259
00:08:09,166 --> 00:08:10,856
也有制作黄油

260
00:08:10,856 --> 00:08:11,746
所需要的奶油

261
00:08:11,746 --> 00:08:14,476
我要进去增加一些代码 

262
00:08:15,436 --> 00:08:17,166
去搅拌奶油 

263
00:08:17,166 --> 00:08:18,156
然后就可以制作

264
00:08:18,156 --> 00:08:18,776
我们想要的黄油了

265
00:08:18,776 --> 00:08:22,506
我将运行我的代码 

266
00:08:22,506 --> 00:08:23,866
然后我们在即时演示里面看到 

267
00:08:23,866 --> 00:08:25,196
我们有奶油了 我们

268
00:08:25,196 --> 00:08:26,726
搅拌它 然后我们就有了

269
00:08:27,096 --> 00:08:27,546
黄油

270
00:08:27,646 --> 00:08:29,146
然后 Swift Playgrounds

271
00:08:29,146 --> 00:08:29,986
就会告诉我们 我们已经

272
00:08:29,986 --> 00:08:31,156
成功完成了任务

273
00:08:31,256 --> 00:08:33,876
我将继续到下一页 

274
00:08:34,366 --> 00:08:35,496
我们将用这些黄油

275
00:08:35,496 --> 00:08:36,466
制作一些糖霜

276
00:08:36,466 --> 00:08:39,246
现在我将不使用

277
00:08:39,246 --> 00:08:41,496
作者提供的黄油版本

278
00:08:41,556 --> 00:08:43,946
我可以直接

279
00:08:43,946 --> 00:08:46,476
使用上一页中

280
00:08:46,476 --> 00:08:47,266
我自己的黄油功能

281
00:08:47,796 --> 00:08:48,746
我将点击“Bring Over My Code” 

282
00:08:48,746 --> 00:08:50,886
然后我就可以看到

283
00:08:50,886 --> 00:08:51,856
我之前执行的 makeButter 函数

284
00:08:51,856 --> 00:08:54,116
已经被复制

285
00:08:54,116 --> 00:08:54,766
到这一页上

286
00:08:55,706 --> 00:08:56,886
同时 作者

287
00:08:56,886 --> 00:08:59,006
提供了一个 makeFrosting 功能

288
00:08:59,056 --> 00:09:00,366
我将直接填入

289
00:08:59,056 --> 00:09:00,366
我将直接填入

290
00:09:00,366 --> 00:09:00,596
这个功能

291
00:09:00,596 --> 00:09:02,226
所以现在我们有了制作

292
00:09:02,226 --> 00:09:03,476
糖霜所需要的所有材料

293
00:09:03,476 --> 00:09:05,456
黄油 粉末砂糖 香草精

294
00:09:05,456 --> 00:09:05,856
和牛奶

295
00:09:07,456 --> 00:09:08,936
现在我要制作

296
00:09:09,256 --> 00:09:11,036
糖霜 我只需要

297
00:09:12,006 --> 00:09:12,826
把这些材料

298
00:09:12,826 --> 00:09:14,126
混在一起就可以了

299
00:09:14,646 --> 00:09:15,316
现在我们来看看粉末砂糖

300
00:09:15,316 --> 00:09:21,466
黄油 香草精

301
00:09:23,036 --> 00:09:23,526
和牛奶

302
00:09:24,026 --> 00:09:25,516
因为我想看看

303
00:09:25,516 --> 00:09:27,806
具体在制作糖霜的时候

304
00:09:27,806 --> 00:09:29,036
发生了什么 我将

305
00:09:29,036 --> 00:09:31,836
启动“Step Through My Code”

306
00:09:32,276 --> 00:09:33,166
可以看到我们启动了

307
00:09:33,166 --> 00:09:34,586
makeFrosting 函数

308
00:09:34,586 --> 00:09:36,016
然后开始制作黄油 我们会看到

309
00:09:36,016 --> 00:09:37,226
即时演示会随着我们制作

310
00:09:37,226 --> 00:09:37,576
黄油而同步更新

311
00:09:37,576 --> 00:09:39,746
我们看到粉末砂糖

312
00:09:39,746 --> 00:09:40,946
香草精以及牛奶

313
00:09:40,946 --> 00:09:42,736
然后我们把它们混在一起 

314
00:09:42,736 --> 00:09:43,496
然后得到糖霜

315
00:09:43,866 --> 00:09:44,916
我们已经完成了这一页

316
00:09:44,916 --> 00:09:46,556
的任务并且得到了我们想要的东西

317
00:09:47,676 --> 00:09:48,446
所以我将继续

318
00:09:48,446 --> 00:09:51,216
现在 我们将继续 

319
00:09:51,216 --> 00:09:52,406
开始制作蛋糕

320
00:09:53,086 --> 00:09:54,756
但是看这里 会发现这里有

321
00:09:54,756 --> 00:09:55,906
许多材料

322
00:09:55,906 --> 00:09:57,506
需要我去收集 并且现在

323
00:09:57,506 --> 00:09:58,506
还需要做一点工作

324
00:09:58,506 --> 00:09:59,516
为制作

325
00:09:59,516 --> 00:10:00,876
蛋糕做准备 但是我时间

326
00:09:59,516 --> 00:10:00,876
蛋糕做准备 但是我时间

327
00:10:00,876 --> 00:10:01,816
有点不够了

328
00:10:02,236 --> 00:10:03,196
所以我现在要假装我在

329
00:10:03,196 --> 00:10:04,366
主持一个烹饪节目 然后直接

330
00:10:04,366 --> 00:10:06,276
跳到最后

331
00:10:07,106 --> 00:10:08,496
所以我将点击“Let’s Eat Cake”

332
00:10:08,496 --> 00:10:09,276
这个页面

333
00:10:10,156 --> 00:10:12,236
Swift Playgrounds 在告诉我

334
00:10:12,236 --> 00:10:13,256
我应该回去

335
00:10:13,256 --> 00:10:15,076
完成制作蛋糕 但是

336
00:10:15,076 --> 00:10:17,296
因为我可以访问任意页面 

337
00:10:17,296 --> 00:10:19,016
所以我可以点击

338
00:10:19,256 --> 00:10:20,526
这个页面上的“Start Cooking（开始制作）”

339
00:10:20,776 --> 00:10:23,736
按钮 然后就会按照

340
00:10:23,736 --> 00:10:25,266
默认方式执行

341
00:10:25,266 --> 00:10:25,576
蛋糕制作过程

342
00:10:25,576 --> 00:10:27,106
然后我们会看到作者

343
00:10:27,106 --> 00:10:28,386
提供了makeButter 和

344
00:10:28,386 --> 00:10:29,366
makeFrosting 函数

345
00:10:30,376 --> 00:10:32,456
作者提供了所有

346
00:10:32,456 --> 00:10:34,386
制作蛋糕所需要的材料

347
00:10:34,386 --> 00:10:36,546
然后这些材料被混合在

348
00:10:36,636 --> 00:10:38,466
一起 调成糊状 然后

349
00:10:38,466 --> 00:10:40,076
被放入烤箱烘烤 

350
00:10:40,076 --> 00:10:42,976
让热的蛋糕冷却后

351
00:10:42,976 --> 00:10:43,456
再撒糖霜

352
00:10:43,576 --> 00:10:45,156
所以我可以点击底部

353
00:10:45,156 --> 00:10:46,846
启动

354
00:10:46,846 --> 00:10:47,856
吃蛋糕的功能

355
00:10:48,316 --> 00:10:50,926
因为我希望尽快

356
00:10:50,926 --> 00:10:52,006
完成这个过程 

357
00:10:52,076 --> 00:10:53,306
我将点击“加速运行” 

358
00:10:53,366 --> 00:10:55,546
然后非常、非常快地

359
00:10:55,546 --> 00:10:56,736
执行

360
00:10:56,736 --> 00:10:57,306
每一步

361
00:10:57,426 --> 00:10:58,456
我们可以看到只需

362
00:10:58,456 --> 00:11:00,076
片刻便可以获取

363
00:10:58,456 --> 00:11:00,076
片刻便可以获取

364
00:11:00,076 --> 00:11:00,736
我想要的蛋糕

365
00:11:02,046 --> 00:11:03,826
太棒了 我已经向大家展示了

366
00:11:04,016 --> 00:11:05,406
Swift Playgrounds 的一些

367
00:11:05,406 --> 00:11:06,176
新功能

368
00:11:06,586 --> 00:11:07,916
现在我们来看看你们

369
00:11:07,916 --> 00:11:08,846
可以如何在你们的

370
00:11:08,846 --> 00:11:09,456
Playground Book 中应用它们

371
00:11:11,516 --> 00:11:15,500
[掌声]

372
00:11:21,546 --> 00:11:22,666
我向你们展示的第一个功能

373
00:11:22,666 --> 00:11:24,286
是在页之间

374
00:11:24,286 --> 00:11:25,136
复制代码

375
00:11:25,766 --> 00:11:27,526
这让你们制作的 Playground Book

376
00:11:27,526 --> 00:11:29,116
可以允许用户

377
00:11:29,116 --> 00:11:30,696
不断针对

378
00:11:30,696 --> 00:11:32,316
特定函数或代码的执行

379
00:11:32,316 --> 00:11:33,946
完善它们

380
00:11:35,046 --> 00:11:37,906
对于一个用户而言 当我看到

381
00:11:37,976 --> 00:11:39,666
一个页面被当作

382
00:11:39,666 --> 00:11:41,476
可复制代码的源使用 

383
00:11:41,546 --> 00:11:42,646
我并不能看到很多的

384
00:11:42,646 --> 00:11:43,126
不同点

385
00:11:43,446 --> 00:11:45,106
我只是看到一个可编辑的区域 

386
00:11:45,106 --> 00:11:46,486
我可以插入一些代码

387
00:11:46,486 --> 00:11:48,476
但是如果我们看看

388
00:11:48,476 --> 00:11:49,576
它下面的代码 

389
00:11:49,616 --> 00:11:50,986
有一些东西是你作为作者

390
00:11:50,986 --> 00:11:52,696
可以提供的 以让

391
00:11:52,696 --> 00:11:53,646
Swift Playgrounds 知道哪些是

392
00:11:53,646 --> 00:11:54,066
可以被复制的

393
00:11:55,246 --> 00:11:57,476
也就是这些复制源代码标签 

394
00:11:57,596 --> 00:11:59,306
它们让你可以用标识符

395
00:11:59,306 --> 00:12:01,576
标记页面中特定区域 

396
00:11:59,306 --> 00:12:01,576
标记页面中特定区域 

397
00:12:01,576 --> 00:12:02,756
供你之后

398
00:12:02,856 --> 00:12:03,186
参考

399
00:12:03,916 --> 00:12:08,006
在代码被复制的页面上 

400
00:12:08,006 --> 00:12:10,426
作为用户 当我

401
00:12:10,426 --> 00:12:11,646
第一次打开它时 

402
00:12:11,646 --> 00:12:12,996
看到的不是一个源代码编辑器 

403
00:12:13,166 --> 00:12:14,566
而是让我选择

404
00:12:14,566 --> 00:12:15,656
是从上一页复制我的代码

405
00:12:15,656 --> 00:12:17,306
还是使用默认

406
00:12:17,306 --> 00:12:18,046
实现

407
00:12:19,796 --> 00:12:20,846
如果我还没有成功地

408
00:12:20,846 --> 00:12:22,506
完成那一页 系统并不会

409
00:12:22,506 --> 00:12:23,926
问我是否希望复制

410
00:12:23,926 --> 00:12:25,716
代码 而是问我是否希望返回

411
00:12:25,716 --> 00:12:27,366
那一页 先把

412
00:12:27,426 --> 00:12:27,686
那一页完成

413
00:12:28,086 --> 00:12:28,996
但是我也可以选择

414
00:12:28,996 --> 00:12:30,466
立即在这一页

415
00:12:30,466 --> 00:12:31,226
开始工作

416
00:12:31,856 --> 00:12:34,656
一旦用户选择了

417
00:12:34,656 --> 00:12:36,216
复制代码或者使用

418
00:12:36,216 --> 00:12:38,016
默认实现 那么

419
00:12:38,016 --> 00:12:38,876
常规源代码编辑器就会

420
00:12:38,876 --> 00:12:39,936
出现他们

421
00:12:39,936 --> 00:12:40,236
想要的代码

422
00:12:40,236 --> 00:12:42,606
让我们来看看这个

423
00:12:42,676 --> 00:12:43,816
在源代码中是

424
00:12:43,816 --> 00:12:44,246
如何实现的

425
00:12:45,266 --> 00:12:47,246
它和另外一种情况

426
00:12:47,246 --> 00:12:47,726
非常相似

427
00:12:48,226 --> 00:12:49,456
你提供的不是复制源代码标签 

428
00:12:49,456 --> 00:12:51,196
相反你提供的是复制

429
00:12:51,196 --> 00:12:52,806
目标标签 它会告诉

430
00:12:52,806 --> 00:12:55,236
Swift Playgrounds 你希望

431
00:12:55,236 --> 00:12:57,146
从哪一页复制以及

432
00:12:57,146 --> 00:12:58,446
在那一页上标出

433
00:12:58,446 --> 00:12:59,496
需要被复制的代码范围

434
00:12:59,496 --> 00:13:00,616
的标识符

435
00:12:59,496 --> 00:13:00,616
的标识符

436
00:13:00,616 --> 00:13:02,016
因为你可以从多个

437
00:13:02,016 --> 00:13:03,596
源将代码复制到一个页面上

438
00:13:04,426 --> 00:13:05,286
然后你把这个放置在

439
00:13:05,286 --> 00:13:06,536
可编辑代表区域内部

440
00:13:06,536 --> 00:13:07,406
放在你希望将

441
00:13:07,406 --> 00:13:08,036
复制代码放置的地方

442
00:13:08,306 --> 00:13:11,046
另外还有一些东西

443
00:13:11,046 --> 00:13:12,216
需要被放置在

444
00:13:12,216 --> 00:13:13,746
Manifest 文件中以支持

445
00:13:13,746 --> 00:13:15,016
页面间的复制代码

446
00:13:15,016 --> 00:13:17,796
这里有一些相关的 Key

447
00:13:17,796 --> 00:13:19,326
ReadyToCopyInstructions

448
00:13:19,326 --> 00:13:20,486
和

449
00:13:20,486 --> 00:13:21,106
NotReadyToCopyInstructions

450
00:13:21,866 --> 00:13:24,126
这些指的是标记文本 

451
00:13:24,126 --> 00:13:25,396
它们在 Swift Playgrounds 中显示

452
00:13:25,396 --> 00:13:26,506
要么是复制已就绪

453
00:13:26,506 --> 00:13:27,736
因为用户已经

454
00:13:27,826 --> 00:13:28,746
成功地完成了

455
00:13:28,746 --> 00:13:30,896
之前的页面 要么是

456
00:13:30,896 --> 00:13:32,116
复制未就绪 因为用户

457
00:13:32,246 --> 00:13:33,396
还未完成页面

458
00:13:33,576 --> 00:13:34,726
你可以提供相应的

459
00:13:34,726 --> 00:13:36,236
适用于你的 Playground Book

460
00:13:36,236 --> 00:13:37,696
的文本来告诉用户

461
00:13:37,696 --> 00:13:39,826
他们在这里应该怎么操作

462
00:13:40,776 --> 00:13:42,346
另外还有一些

463
00:13:42,346 --> 00:13:43,966
可选 Key 比如

464
00:13:43,966 --> 00:13:45,856
CopyCommandButtonTitle

465
00:13:45,856 --> 00:13:47,616
NavigateCommandButtonTitle

466
00:13:47,916 --> 00:13:48,306
以及

467
00:13:48,306 --> 00:13:50,276
DefaultCommandButtonTitle

468
00:13:51,016 --> 00:13:52,926
这些标题指的是

469
00:13:52,926 --> 00:13:54,066
那些你可以

470
00:13:54,066 --> 00:13:55,776
在你的 Playground Book 里面进行

471
00:13:55,776 --> 00:13:56,486
自定义的按钮

472
00:13:57,246 --> 00:13:58,336
需要注意的是 

473
00:13:58,336 --> 00:13:59,426
如果你不提供以上 Key 中的任意一个 

474
00:13:59,426 --> 00:14:01,096
Swift Playgrounds

475
00:13:59,426 --> 00:14:01,096
Swift Playgrounds

476
00:14:01,096 --> 00:14:03,516
将选择使用

477
00:14:03,516 --> 00:14:04,406
默认标题

478
00:14:04,406 --> 00:14:06,616
在用户界面里面

479
00:14:06,616 --> 00:14:07,406
不可能隐藏这些按钮中的任何一个

480
00:14:11,256 --> 00:14:12,486
另外一个我向你们

481
00:14:12,486 --> 00:14:14,076
展示过的功能

482
00:14:14,076 --> 00:14:15,126
是控制 Playgrounds 中的

483
00:14:15,126 --> 00:14:16,476
执行速度

484
00:14:18,546 --> 00:14:20,086
Swift Playground 现在支持

485
00:14:20,086 --> 00:14:22,046
逐句运行代码和

486
00:14:22,086 --> 00:14:23,676
以比默认速度更快的速度

487
00:14:23,676 --> 00:14:24,086
运行

488
00:14:25,606 --> 00:14:27,356
“Step Through My Code（逐句运行代码）”模式以及

489
00:14:27,356 --> 00:14:29,216
它的兄弟“Step

490
00:14:29,306 --> 00:14:31,076
Slowly（慢速逐句运行）” 在所有的 Playground 中

491
00:14:31,076 --> 00:14:31,656
均可用

492
00:14:32,096 --> 00:14:33,766
因为用户基本都会需要

493
00:14:33,766 --> 00:14:35,246
利用这种

494
00:14:35,246 --> 00:14:36,676
模式来观察

495
00:14:36,676 --> 00:14:37,376
他们的代码的执行情况

496
00:14:39,626 --> 00:14:41,266
但是对于“加速运行”和“最高速运行”这两种功能

497
00:14:41,266 --> 00:14:43,136
并不是在默认能够

498
00:14:43,136 --> 00:14:45,146
启用的 因为不是所有情况下

499
00:14:45,146 --> 00:14:46,356
都真的可以

500
00:14:46,356 --> 00:14:47,066
加速运行

501
00:14:47,266 --> 00:14:48,566
有一些操作 你就是没有办法

502
00:14:48,566 --> 00:14:49,416
让它加速运行

503
00:14:49,936 --> 00:14:51,536
所以 Playground Book 中的页可以

504
00:14:51,536 --> 00:14:54,306
选择是否使用加速运行或者

505
00:14:54,306 --> 00:14:54,876
最高速运行功能

506
00:14:54,876 --> 00:14:58,266
我们再看一下

507
00:14:58,266 --> 00:14:59,286
“Step Through My Code”是如何操作的

508
00:14:59,996 --> 00:15:01,886
所以当用户点击

509
00:14:59,996 --> 00:15:01,886
所以当用户点击

510
00:15:01,886 --> 00:15:03,346
速度控制 Key 

511
00:15:03,686 --> 00:15:04,786
然后选择“Step Through My

512
00:15:04,786 --> 00:15:07,116
Code” 那么代码将会

513
00:15:07,116 --> 00:15:08,806
正常运行 但是正在运行的那行代码

514
00:15:08,806 --> 00:15:10,106
将会在左侧

515
00:15:10,106 --> 00:15:10,676
被高亮标出

516
00:15:12,016 --> 00:15:12,946
现在我们来看看这个

517
00:15:12,946 --> 00:15:14,466
在底层是怎么运作的

518
00:15:15,416 --> 00:15:16,906
所以如果你的

519
00:15:16,906 --> 00:15:17,836
Playground Book 里有一些

520
00:15:17,836 --> 00:15:19,276
直线代码在

521
00:15:19,276 --> 00:15:20,896
像这样同步运行 

522
00:15:20,896 --> 00:15:22,226
我们创建一个字符串 

523
00:15:22,226 --> 00:15:23,486
遍历字符串中的每个字符 

524
00:15:23,486 --> 00:15:24,586
然后把它打印出来 

525
00:15:24,586 --> 00:15:26,426
实际上你不需要

526
00:15:26,426 --> 00:15:27,196
做任何事

527
00:15:27,726 --> 00:15:28,746
Swift Playgrounds 会

528
00:15:28,746 --> 00:15:30,666
自动插入延迟以保证

529
00:15:30,666 --> 00:15:32,196
每行可见代码

530
00:15:32,196 --> 00:15:33,806
都可以有可感知的时间

531
00:15:34,216 --> 00:15:36,286
以保证代码可以

532
00:15:37,106 --> 00:15:37,336
正确地高亮显示

533
00:15:38,436 --> 00:15:40,206
有一种情况需要

534
00:15:40,206 --> 00:15:41,866
特别注意 即

535
00:15:41,866 --> 00:15:43,476
你作为 Playground Book 的作者

536
00:15:43,736 --> 00:15:45,946
为你的用户提供的是异步 API 

537
00:15:45,946 --> 00:15:47,596
也就是说 它在底层是

538
00:15:47,656 --> 00:15:48,726
异步

539
00:15:48,726 --> 00:15:49,486
执行的

540
00:15:50,266 --> 00:15:51,196
在这种情况下 我们有

541
00:15:51,196 --> 00:15:53,126
moveForward 函数 它可以

542
00:15:53,126 --> 00:15:55,086
把一些工作

543
00:15:55,086 --> 00:15:56,146
放在后台排队

544
00:15:57,046 --> 00:15:58,686
这在应用程序里面可能是一个

545
00:15:58,686 --> 00:16:00,466
好的做法 但是在

546
00:15:58,686 --> 00:16:00,466
好的做法 但是在

547
00:16:00,466 --> 00:16:01,826
Playground 里面并不是那么好 因为

548
00:16:01,826 --> 00:16:04,596
当你或者当用户

549
00:16:04,596 --> 00:16:05,736
调用 moveForward 函数时 它

550
00:16:05,736 --> 00:16:07,146
只会在它

551
00:16:07,146 --> 00:16:08,166
安排后台工作的时候

552
00:16:08,216 --> 00:16:09,406
高亮标出 

553
00:16:09,766 --> 00:16:10,706
而不是在实际

554
00:16:10,746 --> 00:16:12,026
执行功能的时候高亮标出

555
00:16:12,026 --> 00:16:15,346
所以你需要做的就是让

556
00:16:15,346 --> 00:16:17,116
看起来同步

557
00:16:17,116 --> 00:16:18,356
的功能变成实际

558
00:16:18,406 --> 00:16:20,196
同步 你可以通过

559
00:16:20,306 --> 00:16:22,016
一些代码实现这一点

560
00:16:23,006 --> 00:16:24,156
所以第一 在你的函数

561
00:16:24,156 --> 00:16:25,516
的上方 你可以获取

562
00:16:25,516 --> 00:16:27,376
当前运行循环 然后获得一个

563
00:16:27,376 --> 00:16:28,796
变量 它指示着

564
00:16:28,796 --> 00:16:29,816
异步操作

565
00:16:29,816 --> 00:16:30,906
是否完成

566
00:16:30,906 --> 00:16:33,626
然后最后 你需要

567
00:16:33,626 --> 00:16:34,786
确保这个函数一直

568
00:16:34,786 --> 00:16:36,396
运行到

569
00:16:36,396 --> 00:16:37,866
异步操作

570
00:16:37,936 --> 00:16:38,286
完成

571
00:16:38,286 --> 00:16:40,026
你可以这样实现

572
00:16:40,026 --> 00:16:41,356
写一个 While 循环

573
00:16:41,356 --> 00:16:42,816
在其中让当前循环保持运行

574
00:16:42,816 --> 00:16:45,306
直到 didFinish 旗标被设置为

575
00:16:45,306 --> 00:16:45,786
true

576
00:16:47,866 --> 00:16:49,576
在回调中 在你完成

577
00:16:49,576 --> 00:16:50,926
正常回调需做

578
00:16:50,926 --> 00:16:52,486
的那些工作之后 

579
00:16:52,486 --> 00:16:53,146
你需要再

580
00:16:53,146 --> 00:16:53,766
额外多做一些

581
00:16:54,586 --> 00:16:55,506
首先 你需要把

582
00:16:55,506 --> 00:16:57,156
didFinish 旗标设置为正确 这样

583
00:16:57,156 --> 00:16:58,356
While 循环才可以退出

584
00:16:59,056 --> 00:17:02,216
然后需要在运行循环上面

585
00:16:59,056 --> 00:17:02,216
然后需要在运行循环上面

586
00:17:02,216 --> 00:17:04,876
运行一个程序块让它停止 

587
00:17:05,256 --> 00:17:07,536
这样 CFRunLoop 调用便会

588
00:17:07,536 --> 00:17:08,316
停止

589
00:17:08,965 --> 00:17:11,896
然后由于 CF API 

590
00:17:11,896 --> 00:17:13,705
的运作方式 你需要唤醒

591
00:17:13,705 --> 00:17:14,756
运行循环 这样它

592
00:17:14,756 --> 00:17:15,986
才会执行

593
00:17:15,986 --> 00:17:16,986
你计划运行的块

594
00:17:17,496 --> 00:17:21,516
速度控制的另外一部分

595
00:17:21,516 --> 00:17:23,306
是支持高于

596
00:17:23,306 --> 00:17:24,366
默认速度加速运行

597
00:17:25,236 --> 00:17:27,116
同样这个是通过

598
00:17:27,116 --> 00:17:28,465
即时演示左下方的

599
00:17:28,465 --> 00:17:29,656
速度控制访问的

600
00:17:29,656 --> 00:17:31,226
用户可以点击“Run Fastest”

601
00:17:31,226 --> 00:17:32,846
如果支持的话 然后

602
00:17:32,846 --> 00:17:34,836
Playground Book 就可以执行

603
00:17:34,906 --> 00:17:37,576
加速运行或者

604
00:17:37,576 --> 00:17:38,116
最高速运行

605
00:17:40,986 --> 00:17:42,306
由于不是所有的 Playground 页

606
00:17:42,306 --> 00:17:44,436
都可以加速运行

607
00:17:44,436 --> 00:17:46,716
这需要作者选择

608
00:17:46,716 --> 00:17:48,326
来启用这些模式 

609
00:17:48,826 --> 00:17:49,906
具体的做法就是

610
00:17:49,966 --> 00:17:51,366
将最高可支持执行

611
00:17:51,436 --> 00:17:53,046
速度设置为你运行的

612
00:17:53,046 --> 00:17:53,696
最高速度

613
00:17:54,596 --> 00:17:55,696
如果不做这一步 那么 Swift

614
00:17:55,696 --> 00:17:56,746
Playgrounds 将采用

615
00:17:56,746 --> 00:17:59,706
默认速度 也就是正常执行的

616
00:17:59,766 --> 00:18:00,746
速度 这也就意味着

617
00:17:59,766 --> 00:18:00,746
速度 这也就意味着

618
00:18:00,746 --> 00:18:02,756
用户只有“Run My Code Speed”

619
00:18:02,756 --> 00:18:03,216
可以选择

620
00:18:03,836 --> 00:18:04,866
但是你也可以把它设为

621
00:18:04,866 --> 00:18:06,816
更快或者最快的速度 这取决于

622
00:18:06,816 --> 00:18:08,726
你支持的

623
00:18:08,726 --> 00:18:09,096
最快速度

624
00:18:11,386 --> 00:18:13,426
要使用这个功能 你只需要

625
00:18:13,426 --> 00:18:14,436
监听一个

626
00:18:14,436 --> 00:18:15,926
通知 它是一个

627
00:18:15,926 --> 00:18:17,606
用户改变执行速度时

628
00:18:17,606 --> 00:18:18,686
发布的通知

629
00:18:19,176 --> 00:18:19,546
也就是

630
00:18:19,606 --> 00:18:21,126
playgroundPageExecutionModeDidChange

631
00:18:21,126 --> 00:18:22,886
通知

632
00:18:23,866 --> 00:18:25,006
无须回调 你可以

633
00:18:25,006 --> 00:18:26,616
让当前

634
00:18:26,616 --> 00:18:27,676
Playground 页给出

635
00:18:27,676 --> 00:18:29,516
执行模式 然后根据

636
00:18:29,516 --> 00:18:31,576
用户选择的新模式

637
00:18:31,576 --> 00:18:32,886
更新动画速度

638
00:18:32,886 --> 00:18:33,796
或者其他的东西

639
00:18:33,796 --> 00:18:37,386
关于这个话题 我想请

640
00:18:37,386 --> 00:18:38,706
我的同事 Grace 上台

641
00:18:38,706 --> 00:18:39,866
讲讲我们对 Playground Book

642
00:18:39,866 --> 00:18:40,746
所做的其他

643
00:18:40,746 --> 00:18:41,276
改进

644
00:18:42,346 --> 00:18:42,586
Grace

645
00:18:43,516 --> 00:18:46,356
[掌声]

646
00:18:46,856 --> 00:18:47,126
&gt;&gt; 好的

647
00:18:47,866 --> 00:18:49,396
谢谢 Connor

648
00:18:49,396 --> 00:18:50,676
我很兴奋能够和大家讲讲我们

649
00:18:50,676 --> 00:18:52,026
对 Playground Book 格式

650
00:18:52,026 --> 00:18:52,946
所做的一些改进 

651
00:18:52,946 --> 00:18:54,366
以更好地

652
00:18:54,366 --> 00:18:55,886
服务在做的各位作者

653
00:18:55,886 --> 00:18:56,396
以及开发人员

654
00:18:57,736 --> 00:18:59,616
我想讲的第一点是

655
00:18:59,616 --> 00:19:01,236
关于

656
00:18:59,616 --> 00:19:01,236
关于

657
00:19:01,306 --> 00:19:03,106
MinimumSwiftPlaygroundVersion

658
00:19:03,156 --> 00:19:03,966
这个 Key 的介绍

659
00:19:04,456 --> 00:19:05,966
这是一个可选的字符串 

660
00:19:05,966 --> 00:19:07,446
它可以让你指定

661
00:19:07,446 --> 00:19:08,926
可以打开你的文件的

662
00:19:08,926 --> 00:19:10,376
最低 App 版本

663
00:19:10,906 --> 00:19:15,146
接下来我们来谈谈

664
00:19:15,146 --> 00:19:16,666
DeploymentTarget

665
00:19:16,666 --> 00:19:17,506
和 SwiftVersion 这两个 Key

666
00:19:17,956 --> 00:19:19,416
这些 Key 在

667
00:19:19,416 --> 00:19:20,676
最初发布 Playground Book 格式

668
00:19:20,716 --> 00:19:22,706
的时候就有了 但是

669
00:19:22,876 --> 00:19:24,346
在这个 App 的早期版本中

670
00:19:24,346 --> 00:19:26,716
这些 Key 分别被硬编码为 iOS 10.3

671
00:19:26,716 --> 00:19:27,986
和 3.1

672
00:19:28,636 --> 00:19:30,536
然而 现在你的选择

673
00:19:31,246 --> 00:19:31,366
更为重要

674
00:19:31,916 --> 00:19:34,026
现在 SwiftVersion

675
00:19:34,026 --> 00:19:35,676
成为了一个需要你

676
00:19:35,786 --> 00:19:36,226
填入的 Key

677
00:19:36,896 --> 00:19:38,386
这存储在书

678
00:19:38,386 --> 00:19:40,296
级的 Manifest.plist 中

679
00:19:40,296 --> 00:19:41,566
对于 SwiftVersion 你

680
00:19:41,566 --> 00:19:42,936
应该使用你编写你的书时的

681
00:19:42,936 --> 00:19:44,296
Swift 的主版本

682
00:19:44,296 --> 00:19:45,946
和次版本

683
00:19:47,716 --> 00:19:49,856
Swift Playgrounds 现在允许你

684
00:19:49,856 --> 00:19:52,186
指定你的文件的

685
00:19:52,186 --> 00:19:52,836
副标题

686
00:19:53,346 --> 00:19:54,916
这是另外一个书级 Manifest.plist 中的

687
00:19:54,916 --> 00:19:55,646
可选字符串

688
00:19:55,646 --> 00:19:57,756
如果你不

689
00:19:57,756 --> 00:19:59,886
提供它 Swift Playgrounds

690
00:19:59,886 --> 00:20:00,986
将直接为你的书

691
00:19:59,886 --> 00:20:00,986
将直接为你的书

692
00:20:00,986 --> 00:20:02,096
填入 Swift 的版本

693
00:20:02,966 --> 00:20:05,156
这里在“Grace的厨房”中

694
00:20:05,156 --> 00:20:06,536
我使用了“用 Playgrounds 烹饪”

695
00:20:06,536 --> 00:20:08,256
作为我的副标题 它会在

696
00:20:08,256 --> 00:20:09,476
我文档下的

697
00:20:09,476 --> 00:20:13,366
文档选择器中显示

698
00:20:13,896 --> 00:20:15,546
接下来 Swift Playgrounds

699
00:20:15,546 --> 00:20:17,086
替换了单一资源

700
00:20:17,086 --> 00:20:19,046
目录 改成两个资源 

701
00:20:19,526 --> 00:20:20,986
两个资源目录 

702
00:20:20,986 --> 00:20:22,166
“PublicResources（公用资源）”和

703
00:20:22,166 --> 00:20:23,286
“PrivateResources（专用资源）”

704
00:20:23,816 --> 00:20:25,116
所有你希望你的用户

705
00:20:25,116 --> 00:20:26,776
在使用你的书的时候

706
00:20:26,776 --> 00:20:28,206
能够访问的文件 

707
00:20:28,206 --> 00:20:29,596
不管是在文件选择器中还是

708
00:20:29,596 --> 00:20:30,926
图片选择器中 它们都应放在

709
00:20:30,926 --> 00:20:32,486
公用资源目录中

710
00:20:32,876 --> 00:20:34,036
所有你不

711
00:20:34,036 --> 00:20:35,076
希望你的用户

712
00:20:35,076 --> 00:20:36,876
访问的文件应放在

713
00:20:36,876 --> 00:20:38,156
专用资源目录中

714
00:20:38,556 --> 00:20:39,496
这些文档可以是

715
00:20:39,496 --> 00:20:40,926
你不希望你的用户

716
00:20:40,926 --> 00:20:42,136
在使用你的书时看到的

717
00:20:42,136 --> 00:20:43,186
本地化文件或者

718
00:20:43,186 --> 00:20:44,346
提示文件

719
00:20:46,876 --> 00:20:49,106
Swift Playgrounds 现在

720
00:20:49,106 --> 00:20:50,626
允许你创建特定的

721
00:20:50,626 --> 00:20:52,106
运行时问题

722
00:20:52,106 --> 00:20:52,676
并一行一行展示出来

723
00:20:53,146 --> 00:20:54,556
为了实现 你可以调用

724
00:20:54,556 --> 00:20:55,936
fatalError 它传递的字符串

725
00:20:55,936 --> 00:20:57,516
会在行中和其他结果一起

726
00:20:57,516 --> 00:20:59,016
在你的用户在使用 Playground Book 时

727
00:20:59,016 --> 00:21:00,736
出现 前提是如果

728
00:20:59,016 --> 00:21:00,736
出现 前提是如果

729
00:21:00,736 --> 00:21:01,866
他们遇到这些错误话

730
00:21:05,076 --> 00:21:07,036
接下来 我们来讲讲

731
00:21:07,036 --> 00:21:08,836
你将如何在你的 Playground Book 中

732
00:21:08,836 --> 00:21:10,046
通过模板页面

733
00:21:10,046 --> 00:21:11,476
支持用户编辑

734
00:21:12,026 --> 00:21:15,116
Swift Playgrounds 中的一个新特性是

735
00:21:15,116 --> 00:21:19,716
让你的用户可以

736
00:21:20,506 --> 00:21:25,556
添加 移除 重命名 复制

737
00:21:26,426 --> 00:21:28,096
以及重新排列你的

738
00:21:28,096 --> 00:21:29,026
Playgrounds Book

739
00:21:29,726 --> 00:21:30,986
你可以看到

740
00:21:30,986 --> 00:21:32,376
在我们的起始模板中

741
00:21:32,376 --> 00:21:32,976
已经有这个功能

742
00:21:33,516 --> 00:21:35,866
为了好好展示这个功能 

743
00:21:35,866 --> 00:21:36,996
接下来我们来看一个

744
00:21:36,996 --> 00:21:37,296
Demo

745
00:21:38,516 --> 00:21:43,706
[掌声]

746
00:21:44,206 --> 00:21:45,426
我将打开

747
00:21:45,426 --> 00:21:46,796
“Grace 的厨房”

748
00:21:46,866 --> 00:21:48,676
这是我为

749
00:21:48,676 --> 00:21:50,266
我的用户创建的一本 Playground Book

750
00:21:50,266 --> 00:21:52,246
让他们可以在有 Swift 代码的

751
00:21:52,246 --> 00:21:52,476
iPad 上拥有一本食谱

752
00:21:52,476 --> 00:21:56,016
在我的厨房里 我有三个

753
00:21:56,016 --> 00:21:58,266
食谱 黄油 糖霜和

754
00:21:58,266 --> 00:21:58,596
蛋糕

755
00:21:58,956 --> 00:22:00,406
我妈妈会告诉我

756
00:21:58,956 --> 00:22:00,406
我妈妈会告诉我

757
00:22:00,406 --> 00:22:01,826
这可不是本健康的

758
00:22:01,826 --> 00:22:03,896
食谱 所以我希望我的用户

759
00:22:03,896 --> 00:22:04,996
能够添加他们

760
00:22:05,776 --> 00:22:05,843
自己的食谱

761
00:22:06,856 --> 00:22:08,276
如果我们点击编辑

762
00:22:08,276 --> 00:22:10,776
按钮 我可以通过

763
00:22:10,776 --> 00:22:12,506
左上方的按钮添加一页

764
00:22:13,276 --> 00:22:14,546
然后 我要添加

765
00:22:14,546 --> 00:22:16,146
一个薄煎饼的食谱

766
00:22:19,896 --> 00:22:21,476
也不是特别健康 但是

767
00:22:21,476 --> 00:22:22,146
我们还是有所进步的

768
00:22:22,146 --> 00:22:24,186
如果我点击“Done（完成）” 然后

769
00:22:24,186 --> 00:22:26,516
转到我的薄煎饼页面 我们

770
00:22:26,516 --> 00:22:27,946
可以看到我作为作者

771
00:22:27,946 --> 00:22:29,906
提供了一些 Prose 

772
00:22:29,906 --> 00:22:31,516
因为时间的原因 我提前

773
00:22:31,516 --> 00:22:32,956
写好了薄煎饼食谱

774
00:22:32,956 --> 00:22:33,396
的代码

775
00:22:33,976 --> 00:22:35,646
现在 当我点击“Run My Code （运行我的代码）”

776
00:22:36,286 --> 00:22:37,176
这个 Playground Book 会

777
00:22:37,176 --> 00:22:39,066
智能地生成一个

778
00:22:39,066 --> 00:22:40,076
薄煎饼的食谱

779
00:22:40,666 --> 00:22:45,566
为了向大家展示可以如何

780
00:22:45,566 --> 00:22:47,026
在你们的书中使用这个功能 让我们

781
00:22:47,026 --> 00:22:48,626
回到幻灯片

782
00:22:49,516 --> 00:22:52,946
[掌声]

783
00:22:53,446 --> 00:22:54,466
你需要做的第一件事

784
00:22:54,466 --> 00:22:56,256
就是确定模板

785
00:22:56,256 --> 00:22:56,706
页面

786
00:22:57,236 --> 00:22:58,716
模板页面功能可以在

787
00:22:58,716 --> 00:23:00,206
你的书中的最后一章找到 

788
00:22:58,716 --> 00:23:00,206
你的书中的最后一章找到 

789
00:23:00,596 --> 00:23:02,486
并且这个 Key 应该存在

790
00:23:02,486 --> 00:23:04,096
这章的 Manifest.plist 中

791
00:23:04,266 --> 00:23:06,126
我所说的模板页面

792
00:23:06,126 --> 00:23:07,816
指的是当你在你的书中

793
00:23:07,816 --> 00:23:09,266
添加新的一页时的

794
00:23:09,266 --> 00:23:09,646
实例化页面

795
00:23:09,946 --> 00:23:11,926
为了详细说明 你需要

796
00:23:11,926 --> 00:23:13,576
使用 TemplatePageFilename

797
00:23:13,656 --> 00:23:13,896
Key

798
00:23:14,496 --> 00:23:15,806
这只是一个字符串 这个字符串

799
00:23:15,806 --> 00:23:17,376
应该是实例化文件

800
00:23:17,376 --> 00:23:18,636
的值

801
00:23:18,996 --> 00:23:19,686
在这里我用了

802
00:23:19,686 --> 00:23:20,926
Template.playgroundpage

803
00:23:21,386 --> 00:23:25,656
接下来 我们讲讲

804
00:23:25,656 --> 00:23:26,726
以下两者的区别

805
00:23:26,726 --> 00:23:28,706
InitialUserPages 和 Pages

806
00:23:29,356 --> 00:23:30,726
两者都是

807
00:23:30,726 --> 00:23:32,226
存储一连串

808
00:23:32,226 --> 00:23:33,016
页面文件名的 Key

809
00:23:33,396 --> 00:23:35,376
InitialUserPages 是

810
00:23:35,376 --> 00:23:36,926
作者创建了用来

811
00:23:36,926 --> 00:23:38,246
让用户以如下方式

812
00:23:38,246 --> 00:23:40,686
交互的页面

813
00:23:40,686 --> 00:23:42,046
复制 重命名

814
00:23:42,046 --> 00:23:43,296
重新排序等等

815
00:23:44,116 --> 00:23:45,376
如果你不希望你的用户

816
00:23:45,376 --> 00:23:46,546
以上述方式交互 

817
00:23:46,546 --> 00:23:47,736
那么你应该把它们存在

818
00:23:47,736 --> 00:23:49,166
Pages 这个 Key 中

819
00:23:49,696 --> 00:23:53,976
这里是我的 Playground Book

820
00:23:53,976 --> 00:23:54,846
的文件结构

821
00:23:55,466 --> 00:23:56,096
我们可以看到

822
00:23:56,096 --> 00:23:58,366
Manifest.plist

823
00:23:58,366 --> 00:23:59,966
在章级 它应该有

824
00:23:59,966 --> 00:24:01,666
InitialUserPages Key

825
00:23:59,966 --> 00:24:01,666
InitialUserPages Key

826
00:24:01,666 --> 00:24:03,036
以及 TemplatePageFilename

827
00:24:03,126 --> 00:24:03,386
Key

828
00:24:03,456 --> 00:24:05,696
然后在我的 Pages 目录中 

829
00:24:05,696 --> 00:24:07,306
我有黄油 糖霜和

830
00:24:07,306 --> 00:24:08,946
蛋糕页面 我也还有

831
00:24:08,946 --> 00:24:10,266
模板页面 它将在

832
00:24:10,266 --> 00:24:11,406
用户添加页面时

833
00:24:11,406 --> 00:24:14,316
实例化

834
00:24:14,406 --> 00:24:15,676
接下来 我将交给

835
00:24:15,676 --> 00:24:16,926
Najla 来讲讲

836
00:24:16,926 --> 00:24:17,626
本地化

837
00:24:18,046 --> 00:24:20,046
[掌声]

838
00:24:20,076 --> 00:24:20,786
&gt;&gt; 大家好

839
00:24:22,326 --> 00:24:24,016
刚刚 Connor 也提到了

840
00:24:24,016 --> 00:24:25,246
现在 Swift Playgrounds

841
00:24:25,246 --> 00:24:27,036
App 以及 Apple 提供的

842
00:24:27,126 --> 00:24:29,226
内容已经本地化为

843
00:24:29,346 --> 00:24:30,206
六种语言

844
00:24:30,796 --> 00:24:32,236
但是如果你想要本地化

845
00:24:32,236 --> 00:24:33,866
你自己的 Playground Book 那么

846
00:24:33,866 --> 00:24:36,206
你将不受限于这六种

847
00:24:36,266 --> 00:24:36,896
语言

848
00:24:38,146 --> 00:24:39,726
本地化 Playground Book 

849
00:24:39,726 --> 00:24:41,776
和本地化 App 特别像 

850
00:24:41,776 --> 00:24:44,316
你们都需要同样的资源

851
00:24:44,316 --> 00:24:45,166
目录 以及

852
00:24:45,166 --> 00:24:45,906
Strings 文件

853
00:24:46,646 --> 00:24:49,956
所以为了本地化你的 Playground

854
00:24:49,956 --> 00:24:50,986
Book 你需要

855
00:24:50,986 --> 00:24:52,716
设置开发区域 Key

856
00:24:53,196 --> 00:24:54,236
开发区域 Key

857
00:24:54,236 --> 00:24:55,896
规定了这本书撰写时的

858
00:24:55,896 --> 00:24:57,086
基础语言 

859
00:24:57,286 --> 00:24:58,866
就算你还没有开始撰写你的书

860
00:24:58,866 --> 00:25:02,486
也是需要这个的

861
00:24:58,866 --> 00:25:02,486
也是需要这个的

862
00:25:02,486 --> 00:25:03,976
如果你了解怎么

863
00:25:03,976 --> 00:25:05,836
本地化应用程序 

864
00:25:05,836 --> 00:25:07,146
开发区域 Key

865
00:25:07,176 --> 00:25:08,366
相当于

866
00:25:08,506 --> 00:25:09,826
CFBundleDevelopmentRegion

867
00:25:09,826 --> 00:25:13,316
和 App 一样 Swift

868
00:25:14,096 --> 00:25:15,856
Playgrounds 支持本地化

869
00:25:15,946 --> 00:25:18,096
Strings 文件的内容 

870
00:25:18,096 --> 00:25:19,246
今天我们想提到的

871
00:25:19,296 --> 00:25:20,636
总共有四种 Strings 文件类型：

872
00:25:20,636 --> 00:25:24,846
Manifest.plist Prose 

873
00:25:25,906 --> 00:25:28,466
EditableFields 以及 QuickHelp

874
00:25:30,336 --> 00:25:31,846
刚刚

875
00:25:31,846 --> 00:25:33,506
Grace 讲到 了Playground Book 中的

876
00:25:33,576 --> 00:25:35,066
公用和专用

877
00:25:35,456 --> 00:25:36,996
资源目录

878
00:25:37,086 --> 00:25:38,946
因为 Strings 文件

879
00:25:38,946 --> 00:25:40,156
也用于和应用交流 

880
00:25:40,476 --> 00:25:42,206
所以最好把它们

881
00:25:42,206 --> 00:25:43,376
存在你们书中的专用资源

882
00:25:43,376 --> 00:25:45,126
目录当中

883
00:25:46,516 --> 00:25:48,376
现在我们来看看

884
00:25:48,376 --> 00:25:49,466
Strings 文件的更多

885
00:25:49,556 --> 00:25:49,966
细节

886
00:25:51,376 --> 00:25:52,516
Swift Playgrounds 支持

887
00:25:52,516 --> 00:25:54,046
运用 Manifest.plist.strings 文件

888
00:25:54,046 --> 00:25:55,956
本地化Manifest.plists中的

889
00:25:55,956 --> 00:25:57,916
内容

890
00:25:58,526 --> 00:25:59,886
你可以在“学习编程” 1

891
00:25:59,886 --> 00:26:01,896
中找到 Manifest.plist 内容

892
00:25:59,886 --> 00:26:01,896
中找到 Manifest.plist 内容

893
00:26:02,256 --> 00:26:04,206
的一个例子 也就是

894
00:26:04,206 --> 00:26:05,386
所有练习的

895
00:26:05,386 --> 00:26:06,476
目录表

896
00:26:06,476 --> 00:26:09,906
让我们再仔细看看

897
00:26:10,046 --> 00:26:12,266
“学习编程” 1 中的第一个练习 

898
00:26:12,266 --> 00:26:13,776
也就是“发出命令”

899
00:26:13,776 --> 00:26:15,376
这是它的

900
00:26:15,376 --> 00:26:17,106
简体中文形式

901
00:26:19,396 --> 00:26:21,496
Playground Book 在每一个级别

902
00:26:21,496 --> 00:26:23,446
都有 Manifest.plist 

903
00:26:23,446 --> 00:26:25,126
在书级 章级

904
00:26:25,126 --> 00:26:26,426
以及页级

905
00:26:27,246 --> 00:26:28,856
有关练习标题

906
00:26:28,926 --> 00:26:30,506
的信息在页级的

907
00:26:30,506 --> 00:26:32,626
Manifest.plist 中 这是

908
00:26:32,626 --> 00:26:34,216
“发出命令”练习的

909
00:26:34,446 --> 00:26:35,966
页级 Manifest.plist 

910
00:26:37,106 --> 00:26:38,306
你们可以看到有一个 Key

911
00:26:38,306 --> 00:26:40,096
叫作 Name 它的值是

912
00:26:40,126 --> 00:26:41,000
标题

913
00:26:44,566 --> 00:26:46,666
“发出命令” 的

914
00:26:46,666 --> 00:26:48,156
简体中文标题

915
00:26:48,156 --> 00:26:49,226
来自简体中文版的

916
00:26:49,646 --> 00:26:52,376
Manifest.plist 这个 Strings 文件

917
00:26:52,376 --> 00:26:54,266
你们可以看到

918
00:26:54,266 --> 00:26:56,446
它是以简体中文的

919
00:26:56,536 --> 00:26:58,096
“发出命令”命名的

920
00:26:58,946 --> 00:27:00,596
所以 Playground 的标记块

921
00:26:58,946 --> 00:27:00,596
所以 Playground 的标记块

922
00:27:00,596 --> 00:27:01,586
也是支持的

923
00:27:01,586 --> 00:27:03,926
你也可以在 Swift Playgrounds

924
00:27:03,926 --> 00:27:04,896
中本地化 Playground 标记块 

925
00:27:04,956 --> 00:27:06,846
需要使用

926
00:27:06,916 --> 00:27:08,476
页级的

927
00:27:08,476 --> 00:27:08,826
Prose.strings 文件

928
00:27:09,186 --> 00:27:10,286
这是 “发出命令”

929
00:27:10,286 --> 00:27:11,756
中被本地化为德文

930
00:27:11,756 --> 00:27:13,056
的一些 Prose

931
00:27:13,996 --> 00:27:16,516
为此 你需要在

932
00:27:16,516 --> 00:27:18,446
Contents.swift 文件中 

933
00:27:18,546 --> 00:27:20,416
用本地化标签

934
00:27:20,566 --> 00:27:22,566
指定本地化 Prose 的块 

935
00:27:23,306 --> 00:27:26,536
这需要一个 Key

936
00:27:26,766 --> 00:27:28,426
然后这个 Key 在

937
00:27:28,426 --> 00:27:31,006
德文 Prose.strings 文件中指定为

938
00:27:31,006 --> 00:27:36,526
Prose 的德文本地化

939
00:27:37,066 --> 00:27:39,336
你也可以对 Swift Playgrounds 的

940
00:27:39,476 --> 00:27:41,296
可编辑区域

941
00:27:41,296 --> 00:27:43,566
用 EditableFields.strings 文件

942
00:27:43,646 --> 00:27:44,026
进行本地化

943
00:27:44,756 --> 00:27:46,886
在“学习编程” 1 中的

944
00:27:46,886 --> 00:27:48,536
可编辑区域的例子有 点击

945
00:27:48,536 --> 00:27:49,606
进入代码字符串时 

946
00:27:49,716 --> 00:27:50,736
你看到的一些练习

947
00:27:50,736 --> 00:27:53,000
这是它的法文版本

948
00:27:56,286 --> 00:27:58,706
在 Contents.swift 文件中 

949
00:27:59,096 --> 00:28:01,046
它用可编辑代码标签

950
00:27:59,096 --> 00:28:01,046
它用可编辑代码标签

951
00:28:01,366 --> 00:28:03,496
制定了可编辑领域 

952
00:28:03,496 --> 00:28:04,896
而这需要一个 Key 也就是

953
00:28:04,896 --> 00:28:06,076
我们想要本地化的

954
00:28:06,076 --> 00:28:06,676
占位符

955
00:28:07,126 --> 00:28:08,756
在我们这种情况下 占位符叫做

956
00:28:08,796 --> 00:28:11,006
“点击以输入代码”

957
00:28:12,536 --> 00:28:14,886
然后那个占位符

958
00:28:14,886 --> 00:28:16,686
在法文的 EditableField.strings 

959
00:28:16,736 --> 00:28:18,616
文件中被定义

960
00:28:18,616 --> 00:28:19,696
“点击以输入代码”的

961
00:28:19,696 --> 00:28:20,000
法文本地化

962
00:28:23,046 --> 00:28:25,706
周一你们将获得 Swift Playgrounds 2.0

963
00:28:25,706 --> 00:28:27,126
的 Beta 版本 

964
00:28:27,126 --> 00:28:29,136
你们可以对 API 文件

965
00:28:29,286 --> 00:28:30,066
进行本地化

966
00:28:30,066 --> 00:28:32,126
以下是一些来自

967
00:28:32,126 --> 00:28:33,626
“学习编程” 1 中的API

968
00:28:33,626 --> 00:28:34,236
文档示例

969
00:28:34,726 --> 00:28:36,666
它是一个向前移动指令 

970
00:28:36,666 --> 00:28:38,306
用它你们可以让 Bite 在

971
00:28:38,376 --> 00:28:39,806
它的小世界里移动

972
00:28:41,836 --> 00:28:43,456
要本地化你们的 API

973
00:28:43,536 --> 00:28:45,476
文件 你们可以使用

974
00:28:45,516 --> 00:28:46,966
QuickHelp.strings 文件

975
00:28:48,076 --> 00:28:50,206
在针对练习的 AuxiliarySources 文件中

976
00:28:50,206 --> 00:28:52,796
它用本地化 Key

977
00:28:52,926 --> 00:28:55,986
指定了本地化文档

978
00:28:56,356 --> 00:28:58,106
的块

979
00:28:58,696 --> 00:29:01,046
那个 Key 然后在

980
00:28:58,696 --> 00:29:01,046
那个 Key 然后在

981
00:29:01,046 --> 00:29:02,216
QuickHelp.strings 文件中被定义

982
00:29:02,316 --> 00:29:03,886
在我们这个情况下 我们的文件是

983
00:29:03,886 --> 00:29:05,356
英文的 

984
00:29:05,356 --> 00:29:06,906
QuickHelp.strings 文件

985
00:29:06,906 --> 00:29:07,446
也是英文的

986
00:29:10,796 --> 00:29:12,726
所以除了可以使用 Strings

987
00:29:12,766 --> 00:29:14,356
文件本地化你的

988
00:29:14,356 --> 00:29:16,156
Playground Book 你还可以使用

989
00:29:16,156 --> 00:29:18,136
Hints.plist 本地化默认

990
00:29:18,136 --> 00:29:18,486
提示

991
00:29:19,516 --> 00:29:22,146
下面是一个“发出命令”中的

992
00:29:22,146 --> 00:29:23,426
被本地化为日文的

993
00:29:23,426 --> 00:29:24,796
提示文件的例子

994
00:29:26,806 --> 00:29:29,146
“发出命令”只有一个

995
00:29:29,236 --> 00:29:29,496
提示

996
00:29:30,146 --> 00:29:31,296
所以在日文版 Hints.plist 文件中 

997
00:29:31,886 --> 00:29:34,486
有一条

998
00:29:34,486 --> 00:29:36,486
代表那一条提示 

999
00:29:36,486 --> 00:29:38,066
它的值是我们的提示的

1000
00:29:38,136 --> 00:29:39,286
日文本地化

1001
00:29:40,586 --> 00:29:42,626
所以 Swift Playgrounds 中的

1002
00:29:42,726 --> 00:29:44,456
本地化支持可以让你们

1003
00:29:44,456 --> 00:29:45,946
真正地为更广泛的受众  

1004
00:29:45,946 --> 00:29:47,996
创建详细的 沉浸式的

1005
00:29:47,996 --> 00:29:49,826
Playground Book 我们都非常

1006
00:29:49,826 --> 00:29:50,906
期待并且兴奋看到

1007
00:29:50,906 --> 00:29:51,756
你们本地化的

1008
00:29:51,756 --> 00:29:52,306
Playground Book

1009
00:29:53,056 --> 00:29:55,666
如果你们想要了解有关

1010
00:29:55,666 --> 00:29:56,886
如何本地化你的

1011
00:29:56,886 --> 00:29:58,346
Playground Book 的更多信息 今天晚点

1012
00:29:58,346 --> 00:29:59,586
我们还有另外一个主题为

1013
00:29:59,586 --> 00:30:01,086
“Localizing Content for Swift Playgrounds（本地化

1014
00:29:59,586 --> 00:30:01,086
“Localizing Content for Swift Playgrounds（本地化

1015
00:30:01,166 --> 00:30:05,896
Swift Playgrounds中的内容）”的会议 时间是 3:10

1016
00:30:06,526 --> 00:30:08,376
现在我们换一个话题 谈谈

1017
00:30:08,376 --> 00:30:09,516
PlaygroundBluetooth API

1018
00:30:09,516 --> 00:30:11,176
它在 Swift

1019
00:30:11,176 --> 00:30:13,126
Playgrounds 1.5 中 将于

1020
00:30:13,126 --> 00:30:13,586
周一发布

1021
00:30:14,466 --> 00:30:18,936
Swift Playgrounds 提供

1022
00:30:19,066 --> 00:30:20,506
对 CoreBluetooth 的完全访问 

1023
00:30:20,846 --> 00:30:22,386
它让你可以将

1024
00:30:22,386 --> 00:30:23,626
各种配件整合到你的 Playground

1025
00:30:23,626 --> 00:30:23,776
Book 中

1026
00:30:24,606 --> 00:30:25,856
如果你去看看

1027
00:30:25,856 --> 00:30:27,146
Playground Book 的一些配件 

1028
00:30:27,146 --> 00:30:28,796
你会发现

1029
00:30:28,826 --> 00:30:30,016
他们都有非常棒

1030
00:30:30,166 --> 00:30:31,846
并且一致的 Playground

1031
00:30:31,846 --> 00:30:32,506
Book 体验

1032
00:30:32,506 --> 00:30:34,686
并且 Playground Book API

1033
00:30:35,226 --> 00:30:36,676
让你可以把这种

1034
00:30:36,676 --> 00:30:37,776
体验整合到你自己的

1035
00:30:37,776 --> 00:30:39,296
Playground Book 中

1036
00:30:39,936 --> 00:30:42,776
PlaygroundBluetooth 结构有两种

1037
00:30:42,836 --> 00:30:43,956
主要的

1038
00:30:43,956 --> 00:30:44,366
组件

1039
00:30:45,006 --> 00:30:45,876
第一种是

1040
00:30:45,976 --> 00:30:47,186
PlaygroundBluetooth Central Manager 

1041
00:30:47,186 --> 00:30:49,326
它负责

1042
00:30:49,326 --> 00:30:51,046
与配件交互及管理它们

1043
00:30:51,306 --> 00:30:52,766
所需的所有逻辑

1044
00:30:54,146 --> 00:30:55,096
第二种是

1045
00:30:55,096 --> 00:30:57,496
PlaygroundBluetooth Connection View

1046
00:30:57,496 --> 00:30:59,196
它让你可以

1047
00:30:59,196 --> 00:31:01,176
自定义一个用户交互界面 

1048
00:30:59,196 --> 00:31:01,176
自定义一个用户交互界面 

1049
00:31:01,176 --> 00:31:02,636
供用户与配件

1050
00:31:02,726 --> 00:31:03,266
交互用

1051
00:31:04,466 --> 00:31:05,326
它们都有自己的

1052
00:31:05,326 --> 00:31:06,636
委托 

1053
00:31:06,706 --> 00:31:08,036
PlaygroundBluetooth Connection View

1054
00:31:08,036 --> 00:31:09,526
具有 PlaygroundBluetooth Connection View

1055
00:31:09,846 --> 00:31:11,676
数据源 可以提供

1056
00:31:11,676 --> 00:31:13,556
有关配件的

1057
00:31:13,556 --> 00:31:14,500
详细信息

1058
00:31:17,116 --> 00:31:18,856
PlaygroundBluetooth

1059
00:31:18,856 --> 00:31:20,656
Central Manager 提供一个

1060
00:31:20,656 --> 00:31:22,306
与配件连接

1061
00:31:22,306 --> 00:31:23,766
和交互的界面

1062
00:31:25,016 --> 00:31:26,156
它和

1063
00:31:26,156 --> 00:31:26,716
CoreBluetooth 的

1064
00:31:26,866 --> 00:31:28,886
CBCentralManager 非常相似 所以如果你

1065
00:31:28,886 --> 00:31:30,246
曾经在 Playground 里面执行过它 

1066
00:31:30,246 --> 00:31:32,316
那么你可以在这里

1067
00:31:32,466 --> 00:31:33,086
重复使用那个代码

1068
00:31:34,086 --> 00:31:35,876
Central Manager 可以使用

1069
00:31:35,876 --> 00:31:38,486
一系列 UUID 来

1070
00:31:38,486 --> 00:31:40,586
搜索 或者你可以指定

1071
00:31:40,586 --> 00:31:42,216
搜索附近范围内的

1072
00:31:42,216 --> 00:31:42,846
所有配件

1073
00:31:46,266 --> 00:31:48,086
PlaygroundBluetoothCentral

1074
00:31:48,656 --> 00:31:50,586
ManagerDelegate 能够和

1075
00:31:50,706 --> 00:31:52,626
附件进行交互 

1076
00:31:52,946 --> 00:31:54,556
比如连接配件以及

1077
00:31:54,556 --> 00:31:56,256
断开连接

1078
00:32:01,596 --> 00:32:02,546
PlaygroundBluetooth

1079
00:32:02,546 --> 00:32:03,656
Connection View 提供了一个

1080
00:32:03,656 --> 00:32:06,226
展示配件连接

1081
00:32:06,316 --> 00:32:08,386
状态的界面 

1082
00:32:08,786 --> 00:32:10,596
它可以让用户去发现

1083
00:32:10,596 --> 00:32:12,686
连接 以及

1084
00:32:12,686 --> 00:32:13,396
断开连接配件

1085
00:32:13,996 --> 00:32:15,346
这是一个

1086
00:32:15,346 --> 00:32:17,056
我已经自定义的 Connection View

1087
00:32:17,106 --> 00:32:18,986
因为我的 Playground

1088
00:32:18,986 --> 00:32:20,386
Book 在搜寻一个蓝牙

1089
00:32:20,386 --> 00:32:20,816
打印机

1090
00:32:24,446 --> 00:32:25,596
PlaygroundBluetooth

1091
00:32:25,596 --> 00:32:27,316
ConnectionViewDelegate 

1092
00:32:27,316 --> 00:32:29,096
可以自定义用户界面

1093
00:32:29,096 --> 00:32:31,336
以及处理用户交互

1094
00:32:31,756 --> 00:32:33,636
例如 你可以使用

1095
00:32:33,636 --> 00:32:35,626
titleFor 方法

1096
00:32:35,626 --> 00:32:36,936
自定义连接按钮

1097
00:32:37,706 --> 00:32:39,356
在我这个情况下 我将它设置为

1098
00:32:39,446 --> 00:32:41,000
“Select Printer（选择打印机）”

1099
00:32:44,506 --> 00:32:46,426
最后 PlaygroundBluetooth

1100
00:32:46,426 --> 00:32:47,786
ConnectionViewDataSource 是一个

1101
00:32:47,786 --> 00:32:49,736
Connection View 采用的协议 

1102
00:32:49,736 --> 00:32:51,166
它可以提供

1103
00:32:51,256 --> 00:32:52,896
有关配件的

1104
00:32:53,086 --> 00:32:53,536
具体信息

1105
00:32:54,866 --> 00:32:56,436
在我的例子中 数据源

1106
00:32:56,476 --> 00:32:57,896
提供了有关我的

1107
00:32:57,976 --> 00:32:59,716
打印机的信息 也就是

1108
00:32:59,716 --> 00:33:01,556
Najla 的打印机 就是那个在它左边的

1109
00:32:59,716 --> 00:33:01,556
Najla 的打印机 就是那个在它左边的

1110
00:33:01,826 --> 00:33:03,416
可爱的图标

1111
00:33:04,496 --> 00:33:06,066
你可以用它的一种方法

1112
00:33:06,346 --> 00:33:08,346
提供这个信息

1113
00:33:10,516 --> 00:33:13,136
现在我们来看一个

1114
00:33:13,136 --> 00:33:14,136
有关操作中的 PlaygroundBluetooth 结构

1115
00:33:14,136 --> 00:33:15,046
的 Demo

1116
00:33:16,516 --> 00:33:21,766
[掌声]

1117
00:33:22,266 --> 00:33:24,446
刚刚你们看到 Grace

1118
00:33:24,526 --> 00:33:25,896
创建了一个 Playground 页来

1119
00:33:25,896 --> 00:33:28,866
制作薄煎饼 我非常喜欢

1120
00:33:28,996 --> 00:33:31,486
薄煎饼 但是我不会

1121
00:33:31,546 --> 00:33:31,676
做饭

1122
00:33:33,196 --> 00:33:34,916
所以我非常

1123
00:33:34,986 --> 00:33:36,866
希望的是 这个 Playground

1124
00:33:36,986 --> 00:33:38,576
不仅仅能

1125
00:33:38,576 --> 00:33:40,356
生成食谱 

1126
00:33:40,356 --> 00:33:41,716
它还能连接到蓝牙

1127
00:33:41,776 --> 00:33:42,966
打印机 这样我就可以把食谱

1128
00:33:42,966 --> 00:33:44,836
打印出来 然后把它交给另外一个

1129
00:33:44,836 --> 00:33:45,816
可以为我制作

1130
00:33:45,916 --> 00:33:47,216
薄煎饼的人

1131
00:33:49,026 --> 00:33:50,956
所以让我们进入我的

1132
00:33:50,956 --> 00:33:51,136
Playground Book

1133
00:33:51,346 --> 00:33:53,986
我所做的是直接把

1134
00:33:53,986 --> 00:33:56,976
Grace 的薄煎饼页拿过来 然后

1135
00:33:56,976 --> 00:34:00,236
连接这个可爱的 小小的

1136
00:33:56,976 --> 00:34:00,236
连接这个可爱的 小小的

1137
00:34:00,236 --> 00:34:01,006
蓝牙打印机

1138
00:34:02,696 --> 00:34:04,056
当我点击“Connect Printer”

1139
00:34:04,216 --> 00:34:05,986
的时候 它将寻找

1140
00:34:05,986 --> 00:34:06,666
我的打印机

1141
00:34:06,666 --> 00:34:09,826
除了可以

1142
00:34:09,826 --> 00:34:12,156
生成食谱外 当我

1143
00:34:12,235 --> 00:34:13,696
选择 Najla 的打印机的时候 它将

1144
00:34:13,696 --> 00:34:15,346
打印出这个食谱

1145
00:34:15,706 --> 00:34:17,446
大家好好看着打印机 

1146
00:34:17,446 --> 00:34:18,516
希望我能够成功

1147
00:34:19,476 --> 00:34:21,786
成功了

1148
00:34:22,295 --> 00:34:22,496
耶

1149
00:34:24,041 --> 00:34:26,041
[掌声]

1150
00:34:26,065 --> 00:34:26,446
好的

1151
00:34:29,295 --> 00:34:29,636
太棒了

1152
00:34:30,065 --> 00:34:30,786
我成功做到了

1153
00:34:31,876 --> 00:34:34,766
所以现在 我有了

1154
00:34:34,766 --> 00:34:36,426
薄煎饼的食谱 我可以

1155
00:34:36,426 --> 00:34:38,076
在这个会议之后 把它

1156
00:34:38,076 --> 00:34:38,426
交给 Connor

1157
00:34:39,016 --> 00:34:41,016
[笑声]

1158
00:34:41,516 --> 00:34:49,946
[掌声]

1159
00:34:50,446 --> 00:34:52,146
今天我们讲了很多

1160
00:34:52,485 --> 00:34:53,985
大家可以总体了解

1161
00:34:53,985 --> 00:34:55,136
做过去一年所做的

1162
00:34:55,136 --> 00:34:56,525
格式修改

1163
00:34:57,326 --> 00:34:59,296
你们知道了如何把

1164
00:34:59,296 --> 00:35:00,806
隔页粘贴代码添加到你们的

1165
00:34:59,296 --> 00:35:00,806
隔页粘贴代码添加到你们的

1166
00:35:00,806 --> 00:35:01,976
Playground Book 中 这样你们就可以

1167
00:35:02,046 --> 00:35:03,726
创建非常漂亮的叙述

1168
00:35:04,226 --> 00:35:05,686
知道了如何创建有意思的 用户

1169
00:35:05,686 --> 00:35:09,056
可编辑的书 这样用户

1170
00:35:09,056 --> 00:35:11,106
可以基于你的目标页面进行修改

1171
00:35:11,646 --> 00:35:13,116
还知道了如何本地化你的 Playground

1172
00:35:14,106 --> 00:35:15,726
Book 最后 

1173
00:35:15,726 --> 00:35:17,226
如何把配件整合到你的

1174
00:35:17,226 --> 00:35:18,786
Playground Book 中

1175
00:35:19,566 --> 00:35:21,486
想了解有关这个环节的更多信息 

1176
00:35:21,606 --> 00:35:22,396
请访问

1177
00:35:22,396 --> 00:35:25,646
developer.apple.com

1178
00:35:26,006 --> 00:35:27,156
还有一些其他的相关环节 

1179
00:35:27,156 --> 00:35:28,686
大家可以参加或者

1180
00:35:28,686 --> 00:35:29,556
在线观看

1181
00:35:30,776 --> 00:35:31,836
谢谢你们来参加我们的

1182
00:35:31,836 --> 00:35:33,066
会议 我们希望你们

1183
00:35:33,066 --> 00:35:33,796
也能够喜欢大会的

1184
00:35:33,796 --> 00:35:34,296
其他部分

1185
00:35:35,516 --> 00:35:39,500
[掌声]
