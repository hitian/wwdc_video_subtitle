1
00:00:07,516 --> 00:00:17,146
[ 背景噪声 ]

2
00:00:17,646 --> 00:00:18,116
&gt;&gt; 欢迎

3
00:00:19,106 --> 00:00:20,796
在今年中我们很高兴引进了一个新的

4
00:00:20,796 --> 00:00:22,896
iOS 11 操作系统的框架（framework）

5
00:00:22,896 --> 00:00:25,756
叫做“Core NFC” 

6
00:00:25,756 --> 00:00:27,946
它将允许你所开发的 app 与 iPhone 7 以及 iPhone 7 Plus上

7
00:00:27,946 --> 00:00:30,466
的 NFC 芯片相兼容

8
00:00:31,606 --> 00:00:34,126
通过使用 Core NFC 框架应用程序可以

9
00:00:34,216 --> 00:00:35,486
与物理

10
00:00:35,486 --> 00:00:37,076
环境以及现实世界中

11
00:00:37,076 --> 00:00:38,046
物体的互动

12
00:00:38,756 --> 00:00:41,056
你可能已经了解到

13
00:00:41,166 --> 00:00:43,736
Apple Pay 会应用 NFC

14
00:00:43,766 --> 00:00:44,376
处理复杂的交易行为

15
00:00:45,376 --> 00:00:46,966
现在随着 Core NFC 框架的引入

16
00:00:47,546 --> 00:00:49,656
你将可以

17
00:00:49,656 --> 00:00:52,716
在你的应用程序中使用 NFC

18
00:00:52,716 --> 00:00:54,576
开发出全新的 富有创造性的

19
00:00:54,576 --> 00:00:58,676
iPhone 用户体验

20
00:00:59,116 --> 00:01:00,686
下面我们将给大家

21
00:00:59,116 --> 00:01:00,686
下面我们将给大家

22
00:01:00,686 --> 00:01:02,436
简要介绍一下

23
00:01:02,436 --> 00:01:04,476
近场通信

24
00:01:04,476 --> 00:01:06,576
Core NFC 框架所支持的功能

25
00:01:06,576 --> 00:01:08,916
要求标准

26
00:01:08,916 --> 00:01:11,236
使用细节以及

27
00:01:11,236 --> 00:01:12,096
一些示范代码

28
00:01:12,706 --> 00:01:16,056
首先让我们讨论一下

29
00:01:16,056 --> 00:01:17,616
近场

30
00:01:17,616 --> 00:01:18,346
通信

31
00:01:18,666 --> 00:01:22,736
近场通信即 NFC

32
00:01:22,736 --> 00:01:25,686
是一种无线通信技术

33
00:01:25,686 --> 00:01:27,126
它可以让

34
00:01:27,126 --> 00:01:28,926
临近的设备

35
00:01:28,926 --> 00:01:30,576
进行

36
00:01:30,606 --> 00:01:31,276
数据交换

37
00:01:31,976 --> 00:01:33,986
距离限制在

38
00:01:33,986 --> 00:01:34,796
几厘米内

39
00:01:35,706 --> 00:01:38,366
NFC 实际上是一些

40
00:01:38,406 --> 00:01:39,936
不同的传输标准

41
00:01:39,936 --> 00:01:40,846
与传输协议的组合

42
00:01:41,506 --> 00:01:43,696
这些标准同时存在

43
00:01:43,696 --> 00:01:45,066
并使用在不同的

44
00:01:45,066 --> 00:01:45,896
app 中

45
00:01:46,896 --> 00:01:48,316
你可能已经看到过

46
00:01:48,316 --> 00:01:50,156
或是感受过 NFC 文字传输功能

47
00:01:50,666 --> 00:01:51,926
即使是很小的一张贴纸或者

48
00:01:51,926 --> 00:01:53,706
卡片

49
00:01:54,086 --> 00:01:56,066
都可被 NFC 阅读器无线识别

50
00:01:56,716 --> 00:01:59,396
NFC 文档可与各种形状

51
00:01:59,396 --> 00:02:01,326
大小

52
00:01:59,396 --> 00:02:01,326
大小

53
00:02:01,326 --> 00:02:02,056
以及功能相

54
00:02:02,916 --> 00:02:04,496
它们被分为 5 个类型

55
00:02:04,536 --> 00:02:06,286
从 Type 1

56
00:02:06,536 --> 00:02:07,306
到 Type 5

57
00:02:08,175 --> 00:02:09,636
每种类型对应一个

58
00:02:09,636 --> 00:02:10,466
不同的标准

59
00:02:11,376 --> 00:02:13,896
例如 Type 3

60
00:02:13,896 --> 00:02:14,956
是基于 FeliCa 标准

61
00:02:15,716 --> 00:02:17,256
Type 4 是

62
00:02:17,556 --> 00:02:21,486
基于 ISO-14443

63
00:02:21,486 --> 00:02:23,856
NFC Forum 制定了关于

64
00:02:23,856 --> 00:02:26,576
NFC 数据交换格式

65
00:02:26,666 --> 00:02:28,726
简称 NDEF 做为一种通用的

66
00:02:28,726 --> 00:02:30,526
信息交换格式

67
00:02:30,526 --> 00:02:32,646
它为不同的文字类别

68
00:02:32,646 --> 00:02:34,356
进行标准化的数据传输

69
00:02:36,586 --> 00:02:38,036
现在我们了解了一些

70
00:02:38,036 --> 00:02:40,586
关于 NFC 的基础知识

71
00:02:40,586 --> 00:02:43,086
让我们看一下用 Core NFC 能做什么

72
00:02:44,676 --> 00:02:47,016
在 Core NFC 首发中

73
00:02:47,076 --> 00:02:49,626
我们将重点放在 NFC 标签的读取上

74
00:02:49,626 --> 00:02:51,146
这可以在很多方面

75
00:02:51,146 --> 00:02:52,886
提升用户体验

76
00:02:55,686 --> 00:02:57,516
可能的 app 包括

77
00:02:59,196 --> 00:03:01,606
将用户和地理位置

78
00:02:59,196 --> 00:03:01,606
将用户和地理位置

79
00:03:01,606 --> 00:03:03,586
或与环境相关的内容联系起来

80
00:03:04,686 --> 00:03:06,026
将实体硬件

81
00:03:06,026 --> 00:03:09,086
与你的 app 相连接

82
00:03:09,086 --> 00:03:10,666
甚至用于追踪店内商品信息

83
00:03:10,666 --> 00:03:11,886
或库存信息

84
00:03:12,776 --> 00:03:15,306
NFC Tags 还可以

85
00:03:15,306 --> 00:03:17,206
代替二维码

86
00:03:17,206 --> 00:03:21,876
Core NFC 可以让你的 app

87
00:03:21,876 --> 00:03:23,686
读取任何 NDEF

88
00:03:23,686 --> 00:03:24,626
格式的标签

89
00:03:25,496 --> 00:03:27,066
这极大程度的简化了

90
00:03:27,066 --> 00:03:28,586
应用程序读取标签的过程

91
00:03:28,586 --> 00:03:30,056
也简化了应用程序要

92
00:03:30,056 --> 00:03:31,196
应对不同标准的麻烦

93
00:03:32,866 --> 00:03:34,366
Phone 7 和 iPhone 7 Plus

94
00:03:34,496 --> 00:03:36,416
都支持标签读取

95
00:03:37,586 --> 00:03:39,806
目前 Core NFC 不支持

96
00:03:39,806 --> 00:03:41,576
输出或格式设置

97
00:03:42,916 --> 00:03:46,886
在你的应用程序中使用 Core NFC

98
00:03:46,886 --> 00:03:48,386
有两个要求

99
00:03:51,896 --> 00:03:53,816
首先 Core NFC 是一个

100
00:03:53,816 --> 00:03:54,966
权限保护

101
00:03:54,966 --> 00:03:55,486
框架

102
00:03:56,416 --> 00:03:58,216
你需要在 Xcode 中打开

103
00:03:58,216 --> 00:04:00,116
读取近场通信标签

104
00:03:58,216 --> 00:04:00,116
读取近场通信标签

105
00:04:00,116 --> 00:04:02,406
来获得

106
00:04:02,406 --> 00:04:03,476
这一权限

107
00:04:03,786 --> 00:04:05,856
但是这个 Xcode 的功能将不会

108
00:04:07,426 --> 00:04:09,216
做为种子（seed）计划在 WWDC 上公布

109
00:04:09,216 --> 00:04:11,966
但是通过访问 Apple Developer 网站的

110
00:04:11,966 --> 00:04:13,326
“Certificates, Identifiers andProfiles”

111
00:04:13,326 --> 00:04:14,756
页面

112
00:04:14,756 --> 00:04:17,016
你可以

113
00:04:17,016 --> 00:04:19,185
手动申请

114
00:04:19,185 --> 00:04:20,196
这一权限

115
00:04:23,916 --> 00:04:25,796
Core NFC 的第二个要求

116
00:04:25,826 --> 00:04:28,056
是一个扫描使用的描述（Scan Usage Description）

117
00:04:29,346 --> 00:04:30,976
在你的应用属性列表文件（P-list）中

118
00:04:30,976 --> 00:04:33,016
需要用到这个字符串

119
00:04:33,346 --> 00:04:34,786
在你的 app 开始进行 NFC 扫描的时候

120
00:04:34,786 --> 00:04:36,126
这个字符串会

121
00:04:36,126 --> 00:04:38,426
显示给用户

122
00:04:39,386 --> 00:04:40,716
想要了解更多信息

123
00:04:40,716 --> 00:04:43,986
可以观看 WWDC 有关“隐私与你的 App” 

124
00:04:44,076 --> 00:04:44,956
这一部分

125
00:04:45,526 --> 00:04:49,656
现在你正确地设置了你的项目

126
00:04:49,656 --> 00:04:51,666
让我们来看

127
00:04:51,666 --> 00:04:53,066
关于 Core NFC

128
00:04:53,066 --> 00:04:54,846
读取标签的

129
00:04:54,846 --> 00:04:55,706
一些其他的细节

130
00:04:58,446 --> 00:05:00,856
首先标签读取是一个

131
00:04:58,446 --> 00:05:00,856
首先标签读取是一个

132
00:05:00,856 --> 00:05:02,916
被动的处理过程意思是

133
00:05:02,916 --> 00:05:04,656
你的 app 需要用一个对话

134
00:05:04,656 --> 00:05:06,496
来主动发起标签

135
00:05:06,496 --> 00:05:06,986
读取这一行为

136
00:05:09,016 --> 00:05:11,086
第二你的程序必须处在

137
00:05:11,086 --> 00:05:12,906
前台和可视状态中

138
00:05:12,906 --> 00:05:14,436
才能开始

139
00:05:14,436 --> 00:05:14,996
读取这一行为

140
00:05:15,356 --> 00:05:17,096
如果你的 app 转为后台

141
00:05:17,096 --> 00:05:18,596
或是转为不可见时

142
00:05:18,596 --> 00:05:20,146
也将被终止

143
00:05:20,146 --> 00:05:20,566
也将被终止

144
00:05:22,466 --> 00:05:24,596
还有标签读取的行为

145
00:05:24,596 --> 00:05:26,326
被限制在每次

146
00:05:26,326 --> 00:05:26,746
60 秒钟

147
00:05:26,986 --> 00:05:28,956
如果会话过期或未经过验证

148
00:05:28,956 --> 00:05:30,586
你的程序必须

149
00:05:30,586 --> 00:05:31,936
建立一个新的对话

150
00:05:31,936 --> 00:05:33,646
发起一个新的标签读取

151
00:05:33,646 --> 00:05:34,206
行为

152
00:05:34,736 --> 00:05:38,246
你可以设置对话

153
00:05:38,246 --> 00:05:40,096
让它读取单个标签

154
00:05:40,096 --> 00:05:41,126
或是多个标签

155
00:05:41,616 --> 00:05:43,596
在读取单个标签的状态下

156
00:05:44,506 --> 00:05:45,516
标签读取完成之后

157
00:05:45,516 --> 00:05:47,316
对话会自动终止

158
00:05:48,276 --> 00:05:50,296
然而读取多个标签的对话

159
00:05:50,296 --> 00:05:51,636
将始终保持在活动状态

160
00:05:51,636 --> 00:05:53,096
直到被用户终止

161
00:05:53,096 --> 00:05:54,966
或是 60 秒后

162
00:05:54,966 --> 00:05:55,606
对话过期

163
00:05:58,246 --> 00:06:00,156
最后像之前提到的那样

164
00:05:58,246 --> 00:06:00,156
最后像之前提到的那样

165
00:06:00,156 --> 00:06:02,996
你的属性清单中定义的

166
00:06:04,176 --> 00:06:06,136
“NFC 使用字符串”

167
00:06:06,136 --> 00:06:07,706
（NFC Usage String）

168
00:06:07,706 --> 00:06:09,166
在标签读取的过程中

169
00:06:09,166 --> 00:06:09,746
将会被显示给用户

170
00:06:10,296 --> 00:06:13,926
我们在这个演讲中

171
00:06:13,926 --> 00:06:15,126
提供了一个应用程序的示例

172
00:06:15,126 --> 00:06:16,436
来示范怎样使用

173
00:06:16,436 --> 00:06:19,126
Core NFC

174
00:06:19,126 --> 00:06:20,396
比如说你想

175
00:06:20,396 --> 00:06:21,566
清点库存

176
00:06:22,716 --> 00:06:24,666
在这里我们展示了

177
00:06:24,666 --> 00:06:26,446
用户与示例应用程序交互的

178
00:06:26,446 --> 00:06:27,466
一些关键步骤

179
00:06:27,796 --> 00:06:29,936
示例应用程序包括

180
00:06:29,936 --> 00:06:31,806
一个主要的表格视图

181
00:06:31,806 --> 00:06:32,266
和一个扫描键

182
00:06:32,846 --> 00:06:34,686
每次扫描一件库存商品的时候

183
00:06:34,686 --> 00:06:36,486
表格中就出现新的一行

184
00:06:36,486 --> 00:06:38,086
显示该记录

185
00:06:39,186 --> 00:06:40,906
只需点击扫描键

186
00:06:40,906 --> 00:06:44,876
来开始扫描标签

187
00:06:45,036 --> 00:06:46,816
这一用户界面

188
00:06:46,816 --> 00:06:48,836
在扫描过程开始后

189
00:06:48,836 --> 00:06:50,836
最好是显示在

190
00:06:50,836 --> 00:06:51,476
你的程序视图的最前面

191
00:06:52,636 --> 00:06:54,406
在标签扫描的过程中

192
00:06:54,406 --> 00:06:56,076
描述的字串显示在

193
00:06:56,076 --> 00:06:56,986
用户界面中

194
00:06:57,986 --> 00:06:59,496
用户可以随时点击取消键

195
00:06:59,496 --> 00:07:01,106
终止标签扫描的过程

196
00:06:59,496 --> 00:07:01,106
终止标签扫描的过程

197
00:07:01,106 --> 00:07:03,146
这将会终止读取的

198
00:07:03,146 --> 00:07:03,886
对话过程

199
00:07:04,416 --> 00:07:09,106
当一个 NFC 标签被成功读取后

200
00:07:09,146 --> 00:07:11,116
用户界面会被更新

201
00:07:12,846 --> 00:07:14,196
在这里我们将读取对话

202
00:07:14,196 --> 00:07:15,916
设置为读取

203
00:07:15,916 --> 00:07:16,516
单个标签的模式

204
00:07:19,786 --> 00:07:22,026
最后当读取标签的对话结束之后

205
00:07:22,026 --> 00:07:23,526
叠加在前面的用户界面会消失

206
00:07:23,526 --> 00:07:25,136
应用程序会变回为

207
00:07:25,276 --> 00:07:26,886
最前面的视图

208
00:07:27,356 --> 00:07:30,966
好

209
00:07:31,106 --> 00:07:32,136
让我们一起看一下

210
00:07:32,136 --> 00:07:33,146
这个示例

211
00:07:33,146 --> 00:07:34,536
应用程序的代码

212
00:07:35,136 --> 00:07:38,336
总体来说在你的 app 中

213
00:07:38,336 --> 00:07:39,766
你需要简单的 3 个步骤

214
00:07:39,766 --> 00:07:41,916
来实现标签的读取

215
00:07:41,916 --> 00:07:42,676
首先使用

216
00:07:43,636 --> 00:07:47,326
NFCNDEFReaderSessionDelegate

217
00:07:47,326 --> 00:07:48,836
协议

218
00:07:50,116 --> 00:07:52,596
然后创建 NFCNDEFReaderSession 这一类的

219
00:07:52,596 --> 00:07:54,626
一个对象

220
00:07:54,966 --> 00:07:56,546
并委托（delegate）

221
00:07:56,546 --> 00:07:57,066
首先使用

222
00:07:58,826 --> 00:08:01,086
最后用 Begin 这一方法

223
00:07:58,826 --> 00:08:01,086
最后用 Begin 这一方法

224
00:08:01,086 --> 00:08:02,506
开始读取（reader）对话

225
00:08:02,506 --> 00:08:04,116
并处理委托的回调

226
00:08:04,686 --> 00:08:09,156
这里有实例应用中的一段代码

227
00:08:09,156 --> 00:08:10,676
来说明这三个步骤

228
00:08:13,046 --> 00:08:14,846
首先我们在代码中

229
00:08:14,846 --> 00:08:16,986
引用了 Core NFC 框架

230
00:08:20,456 --> 00:08:22,386
这里我们在表格视图控制器里

231
00:08:22,386 --> 00:08:23,706
使用了委托

232
00:08:23,706 --> 00:08:25,016
它将会处理

233
00:08:25,016 --> 00:08:26,716
两个必要的回调

234
00:08:27,736 --> 00:08:30,996
它们处理错误

235
00:08:31,516 --> 00:08:33,236
并识别 NDEF

236
00:08:33,836 --> 00:08:38,385
错误回调

237
00:08:38,385 --> 00:08:39,986
在读取标签的活动停止的时候

238
00:08:39,986 --> 00:08:41,486
将会通知你的 app

239
00:08:43,306 --> 00:08:45,746
这可能由一系列的

240
00:08:45,786 --> 00:08:46,326
原因引起

241
00:08:46,886 --> 00:08:48,556
例如在读取单个标签的对话中

242
00:08:48,556 --> 00:08:50,246
一个标签被

243
00:08:50,246 --> 00:08:51,116
成功的读取了

244
00:08:52,056 --> 00:08:53,536
或是用户

245
00:08:53,536 --> 00:08:54,696
停止了扫描

246
00:08:54,996 --> 00:08:57,716
或是 60 秒钟的时限超时了

247
00:08:58,646 --> 00:09:00,056
或者是程序

248
00:08:58,646 --> 00:09:00,056
或者是程序

249
00:09:00,056 --> 00:09:00,756
不在前台了

250
00:09:01,526 --> 00:09:03,766
在第一个变量中指定的对话

251
00:09:05,376 --> 00:09:06,896
在程序退出之后

252
00:09:06,896 --> 00:09:07,926
就无效了

253
00:09:08,296 --> 00:09:10,276
要读取新的标签

254
00:09:10,276 --> 00:09:12,146
需要一个新的

255
00:09:12,146 --> 00:09:12,446
reader 对话

256
00:09:14,396 --> 00:09:17,166
每次 NDEF 从一个标签中被读取的时候

257
00:09:17,286 --> 00:09:19,136
检测 NDEF

258
00:09:19,136 --> 00:09:20,226
就会被激活

259
00:09:21,426 --> 00:09:22,816
你的 app 就可以

260
00:09:22,816 --> 00:09:23,946
从 NDEF 信息中获取其携带的数据

261
00:09:23,946 --> 00:09:26,706
解码并适当的

262
00:09:26,706 --> 00:09:27,996
处理信息

263
00:09:31,746 --> 00:09:33,846
最后我们外加一个方法

264
00:09:33,846 --> 00:09:35,236
给扫描按钮

265
00:09:35,236 --> 00:09:36,736
让它开始一个读取

266
00:09:36,736 --> 00:09:37,226
单个标签的对话

267
00:09:38,476 --> 00:09:40,196
你需要做的只是

268
00:09:40,246 --> 00:09:42,136
用你的委托

269
00:09:42,136 --> 00:09:43,786
创造一个 NFCNDEFReaderSession 的对象

270
00:09:44,316 --> 00:09:45,636
然后调用 begin 这一方法

271
00:09:45,636 --> 00:09:46,776
来开始标签扫描

272
00:09:47,286 --> 00:09:48,926
如果你希望创建一个

273
00:09:48,926 --> 00:09:51,326
读取多个标签的对话

274
00:09:51,326 --> 00:09:53,126
将 invalidateAfterFirstRead

275
00:09:53,186 --> 00:09:54,316
设为否（False）

276
00:09:54,736 --> 00:09:56,606
如果你需要在程序中

277
00:09:56,606 --> 00:09:58,296
停止一个进行中的对话

278
00:09:58,296 --> 00:09:59,886
你可以调用 invalidate 这一方法

279
00:10:01,066 --> 00:10:02,116
这将会激活你的 invalidate

280
00:10:02,186 --> 00:10:04,096
产生错误回调

281
00:10:04,576 --> 00:10:05,476
告诉你这个对话

282
00:10:05,476 --> 00:10:06,396
结束了

283
00:10:11,566 --> 00:10:13,386
总的来说跟随这些步骤

284
00:10:13,386 --> 00:10:15,276
用 Core NFC 来实现 NFC 标签读取

285
00:10:15,516 --> 00:10:17,766
是很简单的

286
00:10:20,276 --> 00:10:22,116
启用 NFC

287
00:10:22,116 --> 00:10:22,846
标签读取功能

288
00:10:23,386 --> 00:10:26,676
保证扫描使用描述字串

289
00:10:26,676 --> 00:10:28,336
（Scan UsageDescription String）

290
00:10:28,336 --> 00:10:30,426
在你的属性列表中

291
00:10:32,116 --> 00:10:33,906
在你的代码中结合

292
00:10:33,906 --> 00:10:34,566
Core NFC 框架

293
00:10:35,146 --> 00:10:37,776
然后开始读取标签

294
00:10:41,576 --> 00:10:43,046
关于这个演讲的更多信息

295
00:10:43,046 --> 00:10:44,636
以及我们的示例代码

296
00:10:44,636 --> 00:10:47,286
请访问这个链接

297
00:10:49,556 --> 00:10:51,436
还有这里有一些

298
00:10:51,436 --> 00:10:52,736
大家可能感兴趣的

299
00:10:52,736 --> 00:10:52,976
其他演讲

300
00:10:54,356 --> 00:10:56,256
“隐私和你的 app” 将会讨论

301
00:10:56,256 --> 00:10:57,136
重要的

302
00:10:57,136 --> 00:10:59,456
与隐私相关的话题

303
00:11:01,526 --> 00:11:03,226
“Apple Pay and Wallet 的最新发展” 

304
00:11:03,226 --> 00:11:04,556
将会讨论激动人心的、最新将推出的

305
00:11:04,556 --> 00:11:09,266
iOS 与 Mac OS 中的 Apple Pay 功能

306
00:11:10,016 --> 00:11:11,276
感谢观看

307
00:11:11,276 --> 00:11:13,236
这个关于 Core NFC 框架

308
00:11:13,236 --> 00:11:13,766
的演讲
