1
00:00:17,851 --> 00:00:18,685
<c.magenta>下午好</c>

2
00:00:18,752 --> 00:00:24,124
<c.magenta>（iOS ARKit增强现实简介）</c>

3
00:00:24,258 --> 00:00:26,894
<c.magenta>欢迎参加我们的ARKit简介演讲</c>

4
00:00:27,060 --> 00:00:29,630
<c.magenta>我是Mike</c>

5
00:00:29,696 --> 00:00:33,767
<c.magenta>今天我很高兴要跟大家讲讲</c>

6
00:00:33,834 --> 00:00:38,105
<c.magenta>你可以用来创建</c>

7
00:00:40,407 --> 00:00:41,241
<c.magenta>谢谢</c>

8
00:00:41,308 --> 00:00:44,511
<c.magenta>我知道你们中有很多人</c>

9
00:00:44,578 --> 00:00:47,147
<c.magenta>让我来告诉你使用ARKit</c>

10
00:00:48,415 --> 00:00:51,585
<c.magenta>但首先什么是增强现实？</c>

11
00:00:52,019 --> 00:00:53,987
<c.magenta>增强现实是创建错觉</c>

12
00:00:54,054 --> 00:00:57,024
<c.magenta>虚拟对象被放在物理世界中</c>

13
00:00:57,257 --> 00:00:59,193
<c.magenta>它使用你iPhone或iPad</c>

14
00:00:59,259 --> 00:01:02,963
<c.magenta>作为进入虚拟世界的镜头</c>

15
00:00:59,259 --> 00:01:02,963
<c.magenta>作为进入虚拟世界的镜头</c>

16
00:01:03,697 --> 00:01:05,265
<c.magenta>让我们来看一些示例</c>

17
00:01:05,832 --> 00:01:08,869
<c.magenta>我们提前给了一群开发人员</c>

18
00:01:09,203 --> 00:01:10,370
<c.magenta>这是他们所创建出来的</c>

19
00:01:10,437 --> 00:01:13,941
<c.magenta>你可能在不久的将来看到这些东西</c>

20
00:01:17,544 --> 00:01:20,848
<c.magenta>这里面是一个公司</c>

21
00:01:20,914 --> 00:01:23,684
<c.magenta>他们正在使用AR讲金发姑娘的故事</c>

22
00:01:26,186 --> 00:01:29,022
<c.magenta>把一间卧室</c>

23
00:01:29,089 --> 00:01:32,125
<c.magenta>他们允许你通过朗诵文本</c>

24
00:01:32,192 --> 00:01:36,296
<c.magenta>但更重要的是 他们允许你</c>

25
00:01:39,633 --> 00:01:43,937
<c.magenta>这种等级的交互性真的会帮助你</c>

26
00:01:48,208 --> 00:01:52,546
<c.magenta>接下来宜家家居通过ARKit</c>

27
00:01:58,519 --> 00:02:02,122
<c.magenta>通过把虚拟内容放在物理对象中实现</c>

28
00:01:58,519 --> 00:02:02,122
<c.magenta>通过把虚拟内容放在物理对象中实现</c>

29
00:02:02,189 --> 00:02:04,892
<c.magenta>你打开了一个</c>

30
00:02:08,127 --> 00:02:10,130
<c.magenta>最后是游戏</c>

31
00:02:10,264 --> 00:02:14,034
<c.magenta>Pokemon Go</c>

32
00:02:14,434 --> 00:02:17,905
<c.magenta>通过ARKit将捕捉Pokemon</c>

33
00:02:18,839 --> 00:02:22,609
<c.magenta>通过把你的虚拟物品</c>

34
00:02:22,676 --> 00:02:25,145
<c.magenta>你真的可以获得沉浸感更强的体验</c>

35
00:02:25,212 --> 00:02:26,480
<c.magenta>比之前的都要强</c>

36
00:02:27,714 --> 00:02:29,950
<c.magenta>但它并没有止步于此 有许多方式</c>

37
00:02:30,017 --> 00:02:33,687
<c.magenta>使用增强现实来提升你的用户体验</c>

38
00:02:34,221 --> 00:02:35,689
<c.magenta>让我们看看要如何实现吧</c>

39
00:02:39,026 --> 00:02:43,197
<c.magenta>关于创建增强现实</c>

40
00:02:43,463 --> 00:02:47,267
<c.magenta>从计算机视觉到传感器融合</c>

41
00:02:47,334 --> 00:02:50,070
<c.magenta>都是为了获取相机标定和相机内参</c>

42
00:02:50,437 --> 00:02:52,339
<c.magenta>我们想把这些变得简单一些</c>

43
00:02:52,840 --> 00:02:55,709
<c.magenta>那么今天我们要介绍ARKit</c>

44
00:03:02,583 --> 00:03:04,651
<c.magenta>ARKit是一款移动设备AR平台</c>

45
00:03:04,718 --> 00:03:07,588
<c.magenta>用于在iOS上开发增强现实应用</c>

46
00:03:08,055 --> 00:03:10,824
<c.magenta>它是一个高等级的API</c>

47
00:03:10,891 --> 00:03:12,526
<c.magenta>提供一系列强大的功能</c>

48
00:03:12,893 --> 00:03:14,695
<c.magenta>但更重要的是它可以</c>

49
00:03:14,761 --> 00:03:18,165
<c.magenta>支持现有的数以亿计的iOS设备</c>

50
00:03:18,498 --> 00:03:20,701
<c.magenta>要获得ARKit的全部功能</c>

51
00:03:20,767 --> 00:03:22,803
<c.magenta>你需要获得一个A9及以上的芯片</c>

52
00:03:22,970 --> 00:03:27,007
<c.magenta>这包括了绝大部分iOS 11设备</c>

53
00:03:28,108 --> 00:03:31,645
<c.magenta>现在 让我们谈谈功能</c>

54
00:03:32,145 --> 00:03:35,048
<c.magenta>ARKit可以分解为三个不同的层</c>

55
00:03:35,115 --> 00:03:37,284
<c.magenta>第一个层是追踪</c>

56
00:03:38,752 --> 00:03:41,221
<c.magenta>追踪是ARKit的核心功能</c>

57
00:03:41,488 --> 00:03:44,424
<c.magenta>它可以实时追踪你的设备</c>

58
00:03:44,758 --> 00:03:47,160
<c.magenta>通过追踪 你可以</c>

59
00:03:47,227 --> 00:03:50,731
<c.magenta>获得设备在物理环境中的相对位置</c>

60
00:03:51,331 --> 00:03:55,068
<c.magenta>我们通过相机图像</c>

61
00:03:55,135 --> 00:03:58,906
<c.magenta>并通过来自你设备的动作数据</c>

62
00:03:58,972 --> 00:04:02,176
<c.magenta>关于你的设备在哪个位置</c>

63
00:03:58,972 --> 00:04:02,176
<c.magenta>关于你的设备在哪个位置</c>

64
00:04:02,910 --> 00:04:06,180
<c.magenta>但同时更重要的是不需要外部设置</c>

65
00:04:06,246 --> 00:04:08,415
<c.magenta>不需要关于你所处环境的</c>

66
00:04:08,482 --> 00:04:12,352
<c.magenta>也不需要你设备上</c>

67
00:04:13,353 --> 00:04:16,857
<c.magenta>接下来根据追踪进行创建</c>

68
00:04:19,392 --> 00:04:23,797
<c.magenta>场景理解是决定</c>

69
00:04:23,864 --> 00:04:25,899
<c.magenta>你设备周围的环境特性或属性的能力</c>

70
00:04:26,166 --> 00:04:28,235
<c.magenta>它提供类似平面探测这样的功能</c>

71
00:04:28,468 --> 00:04:30,938
<c.magenta>平面探测是决定物理环境中的表面</c>

72
00:04:31,004 --> 00:04:32,873
<c.magenta>或平面的能力</c>

73
00:04:33,207 --> 00:04:35,976
<c.magenta>比如说一楼或许是一张桌子</c>

74
00:04:37,044 --> 00:04:40,647
<c.magenta>要摆放你的虚拟对象</c>

75
00:04:40,714 --> 00:04:44,084
<c.magenta>S是通过现实世界拓扑</c>

76
00:04:44,151 --> 00:04:47,087
<c.magenta>以便你可以在现实世界中</c>

77
00:04:47,654 --> 00:04:51,358
<c.magenta>最后场景理解还提供光估计</c>

78
00:04:51,625 --> 00:04:57,297
<c.magenta>那么光估计用于渲染</c>

79
00:04:57,364 --> 00:04:59,233
<c.magenta>以匹配物理世界的实际环境</c>

80
00:04:59,900 --> 00:05:04,037
<c.magenta>通过这些功能</c>

81
00:04:59,900 --> 00:05:04,037
<c.magenta>通过这些功能</c>

82
00:05:04,104 --> 00:05:06,039
<c.magenta>到你的物理环境中</c>

83
00:05:06,573 --> 00:05:09,409
<c.magenta>那么ARKit的最后一个层是渲染</c>

84
00:05:11,578 --> 00:05:14,548
<c.magenta>对于渲染</c>

85
00:05:14,615 --> 00:05:18,151
<c.magenta>我们提供源源不断的相机图像、</c>

86
00:05:18,218 --> 00:05:21,889
<c.magenta>以及场景理解</c>

87
00:05:23,156 --> 00:05:27,528
<c.magenta>如果你们用的是SceneKit或SpriteKit</c>

88
00:05:27,594 --> 00:05:29,696
<c.magenta>可以为你们实施绝大部分渲染</c>

89
00:05:29,763 --> 00:05:31,365
<c.magenta>所以起步是很简单的</c>

90
00:05:32,432 --> 00:05:33,934
<c.magenta>如果你们用的是自定义渲染器</c>

91
00:05:34,001 --> 00:05:36,069
<c.magenta>我们提供Xcode金属模板</c>

92
00:05:36,637 --> 00:05:40,407
<c.magenta>可以帮助你把ARKit</c>

93
00:05:41,575 --> 00:05:42,676
<c.magenta>还有一点</c>

94
00:05:43,310 --> 00:05:47,347
<c.magenta>统一性和虚幻</c>

95
00:05:53,921 --> 00:05:54,988
<c.magenta>那么你们大家准备好了吗？</c>

96
00:05:56,056 --> 00:06:00,194
<c.magenta>让我们开始吧</c>

97
00:05:56,056 --> 00:06:00,194
<c.magenta>让我们开始吧</c>

98
00:06:01,328 --> 00:06:04,731
<c.magenta>ARKit是一个框架 可以处理全部进程</c>

99
00:06:04,798 --> 00:06:07,067
<c.magenta>用于创建一种增强现实体验</c>

100
00:06:07,634 --> 00:06:12,306
<c.magenta>通过我所选择的渲染器</c>

101
00:06:12,539 --> 00:06:16,076
<c.magenta>它会提供我要渲染</c>

102
00:06:17,044 --> 00:06:20,581
<c.magenta>除了进程 ARKit还可以捕获</c>

103
00:06:20,647 --> 00:06:23,283
<c.magenta>以便实现增强现实</c>

104
00:06:23,584 --> 00:06:28,388
<c.magenta>那么在底层通过</c>

105
00:06:28,455 --> 00:06:32,226
<c.magenta>从你的设备中捕捉图像并获取运动数据</c>

106
00:06:32,292 --> 00:06:34,595
<c.magenta>并为你的渲染器提供相机图像</c>

107
00:06:35,262 --> 00:06:36,930
<c.magenta>那么现在 要如何使用ARKit呢？</c>

108
00:06:37,631 --> 00:06:39,833
<c.magenta>ARKit是一个基于会话的API</c>

109
00:06:39,900 --> 00:06:41,535
<c.magenta>你需要了解的第一件事</c>

110
00:06:41,602 --> 00:06:43,337
<c.magenta>是简单地创建一个ARSession</c>

111
00:06:44,104 --> 00:06:47,574
<c.magenta>ARSession是一个对象 控制着</c>

112
00:06:47,641 --> 00:06:50,010
<c.magenta>用于创建增强现实应用的全部进程</c>

113
00:06:50,611 --> 00:06:54,014
<c.magenta>但首先我需要决定实现哪种追踪</c>

114
00:06:54,081 --> 00:06:55,516
<c.magenta>在我的增强现实应用中</c>

115
00:06:55,582 --> 00:06:59,386
<c.magenta>那么要确定这个问题</c>

116
00:07:01,188 --> 00:07:03,257
<c.magenta>AR会话配置及其子类</c>

117
00:07:03,323 --> 00:07:06,026
<c.magenta>决定你想在你的会话上实现哪种追踪</c>

118
00:07:06,827 --> 00:07:08,795
<c.magenta>通过启用和禁用属性</c>

119
00:07:08,862 --> 00:07:10,797
<c.magenta>你可以获得不同的场景理解</c>

120
00:07:10,864 --> 00:07:13,100
<c.magenta>并用你的ARSession来实现不同的进程</c>

121
00:07:14,034 --> 00:07:18,405
<c.magenta>要运行我的会话</c>

122
00:07:18,472 --> 00:07:20,607
<c.magenta>就能提供我想要运行的配置</c>

123
00:07:22,409 --> 00:07:24,745
<c.magenta>然后就立即开启进程</c>

124
00:07:25,212 --> 00:07:27,181
<c.magenta>我们还要在底层设置捕捉</c>

125
00:07:27,247 --> 00:07:30,350
<c.magenta>那么在底层</c>

126
00:07:30,417 --> 00:07:33,253
<c.magenta>和一个CM运动管理器</c>

127
00:07:33,987 --> 00:07:35,556
<c.magenta>我们通过这两个来获取图像数据</c>

128
00:07:35,622 --> 00:07:38,158
<c.magenta>以及运动数据用于追踪</c>

129
00:07:38,225 --> 00:07:41,795
<c.magenta>一旦进程完成</c>

130
00:07:42,496 --> 00:07:45,032
<c.magenta>那么ARFrame是一种适时快照</c>

131
00:07:45,098 --> 00:07:46,834
<c.magenta>包括关于你会话的全部状态、</c>

132
00:07:46,900 --> 00:07:50,103
<c.magenta>要渲染你的增强现实场景所需要的一切</c>

133
00:07:51,004 --> 00:07:54,708
<c.magenta>要获取ARFrame</c>

134
00:07:54,775 --> 00:07:57,110
<c.magenta>调用或拉动当前的帧属性</c>

135
00:07:57,511 --> 00:07:59,079
<c.magenta>或者你可以将你自己设为委托</c>

136
00:07:59,146 --> 00:08:02,149
<c.magenta>以接收更新</c>

137
00:07:59,146 --> 00:08:02,149
<c.magenta>以接收更新</c>

138
00:08:03,350 --> 00:08:06,186
<c.magenta>那么让我们具体看一下</c>

139
00:08:09,790 --> 00:08:11,158
<c.magenta>ARSession配置决定了</c>

140
00:08:11,225 --> 00:08:13,427
<c.magenta>你想在你的会话上运行哪种追踪</c>

141
00:08:13,961 --> 00:08:17,064
<c.magenta>所以它提供不同的配置类</c>

142
00:08:17,564 --> 00:08:19,900
<c.magenta>基类是ARSessionConfiguration</c>

143
00:08:19,967 --> 00:08:22,035
<c.magenta>提供自由追踪的三个角度</c>

144
00:08:22,102 --> 00:08:24,238
<c.magenta>即你设备的定向</c>

145
00:08:25,272 --> 00:08:26,473
<c.magenta>它的子类</c>

146
00:08:26,540 --> 00:08:28,475
<c.magenta>ARWorldTrackingSession</c>

147
00:08:28,542 --> 00:08:30,744
<c.magenta>提供自由追踪的六个角度</c>

148
00:08:30,811 --> 00:08:33,679
<c.magenta>那么这使用了我们的核心功能</c>

149
00:08:33,746 --> 00:08:36,082
<c.magenta>为了获得不仅仅是你设备的方向</c>

150
00:08:36,149 --> 00:08:38,885
<c.magenta>也为了获得你设备的相对位置</c>

151
00:08:39,385 --> 00:08:41,855
<c.magenta>然后我们还要获取关于场景的信息</c>

152
00:08:41,922 --> 00:08:45,726
<c.magenta>那么我们提供场景理解 如特征点以及</c>

153
00:08:45,792 --> 00:08:48,495
<c.magenta>你现实世界中的物理位置</c>

154
00:08:49,363 --> 00:08:51,231
<c.magenta>要启用和禁用功能</c>

155
00:08:51,298 --> 00:08:54,434
<c.magenta>你只需要在你的会话配置类中</c>

156
00:08:58,438 --> 00:09:01,508
<c.magenta>会话配置还提供可用性</c>

157
00:08:58,438 --> 00:09:01,508
<c.magenta>会话配置还提供可用性</c>

158
00:09:02,242 --> 00:09:05,312
<c.magenta>所以如果你想查看你的设备</c>

159
00:09:05,379 --> 00:09:07,548
<c.magenta>你只需要调用类属性</c>

160
00:09:07,614 --> 00:09:10,551
<c.magenta>isSupported 在ARWorldTracking</c>

161
00:09:11,185 --> 00:09:14,121
<c.magenta>然后你就可以</c>

162
00:09:14,188 --> 00:09:15,923
<c.magenta>或退回到基类</c>

163
00:09:15,989 --> 00:09:18,592
<c.magenta>退回基类将只能提供</c>

164
00:09:18,659 --> 00:09:21,094
<c.magenta>这里有一个重要的点 因为基类</c>

165
00:09:21,161 --> 00:09:22,896
<c.magenta>没有任何场景理解功能</c>

166
00:09:22,963 --> 00:09:26,133
<c.magenta>如碰撞测试</c>

167
00:09:26,233 --> 00:09:29,469
<c.magenta>那么我们还提供UI所需的设备功能</c>

168
00:09:29,536 --> 00:09:31,839
<c.magenta>你可以在你的应用中进行设置</c>

169
00:09:31,905 --> 00:09:34,641
<c.magenta>在App Store中</c>

170
00:09:35,976 --> 00:09:37,611
<c.magenta>接下来让我们看看ARSession</c>

171
00:09:39,813 --> 00:09:43,317
<c.magenta>ARSession是管理</c>

172
00:09:43,383 --> 00:09:45,152
<c.magenta>用于增强现实应用中全部进程的类</c>

173
00:09:46,820 --> 00:09:49,156
<c.magenta>除了通过配置调用Run</c>

174
00:09:49,223 --> 00:09:50,591
<c.magenta>你还可以调用Pause</c>

175
00:09:51,425 --> 00:09:55,295
<c.magenta>Pause允许你暂时停止</c>

176
00:09:55,362 --> 00:09:59,199
<c.magenta>所以如果你的视图不再可见</c>

177
00:09:59,266 --> 00:10:03,203
<c.magenta>以停止使用CPU</c>

178
00:09:59,266 --> 00:10:03,203
<c.magenta>以停止使用CPU</c>

179
00:10:03,670 --> 00:10:06,473
<c.magenta>要在暂停后恢复追踪</c>

180
00:10:06,540 --> 00:10:08,075
<c.magenta>你只需要再次调用Run即可</c>

181
00:10:08,141 --> 00:10:10,344
<c.magenta>通过你会话上所存储的配置</c>

182
00:10:11,378 --> 00:10:13,714
<c.magenta>最后你可以多次调用Run</c>

183
00:10:13,780 --> 00:10:16,350
<c.magenta>以在不同的配置中转换</c>

184
00:10:16,617 --> 00:10:20,521
<c.magenta>那么比如说我想启用平面探测</c>

185
00:10:20,587 --> 00:10:23,657
<c.magenta>启用平面探测</c>

186
00:10:23,724 --> 00:10:26,727
<c.magenta>我的会话将自动进行无缝转换</c>

187
00:10:26,793 --> 00:10:30,664
<c.magenta>在不同的配置之间</c>

188
00:10:33,166 --> 00:10:36,436
<c.magenta>那么通过Run命令</c>

189
00:10:36,503 --> 00:10:39,973
<c.magenta>那么这是你在Run命令中</c>

190
00:10:40,040 --> 00:10:41,441
<c.magenta>以便重设追踪</c>

191
00:10:41,508 --> 00:10:43,877
<c.magenta>它会重新初始化</c>

192
00:10:43,944 --> 00:10:46,980
<c.magenta>你的相机位置将再次从000出发</c>

193
00:10:47,047 --> 00:10:49,616
<c.magenta>所以这对于你的应用很有用</c>

194
00:10:49,683 --> 00:10:50,884
<c.magenta>到某个起点的话</c>

195
00:10:53,287 --> 00:10:55,722
<c.magenta>我如何利用ARSession进程？</c>

196
00:10:56,290 --> 00:10:59,526
<c.magenta>将你自己设为委托</c>

197
00:11:00,794 --> 00:11:03,463
<c.magenta>那么为了获得所处理的最后一帧</c>

198
00:11:03,530 --> 00:11:05,699
<c.magenta>我需要实施didUpdate Frame会话</c>

199
00:11:06,600 --> 00:11:08,569
<c.magenta>这将给我提供最新的一帧</c>

200
00:11:08,635 --> 00:11:12,573
<c.magenta>对于报错处理 你还可以实施</c>

201
00:11:12,639 --> 00:11:14,408
<c.magenta>那么这是严重错误时的情况</c>

202
00:11:14,474 --> 00:11:17,544
<c.magenta>也许你正在一台</c>

203
00:11:17,611 --> 00:11:20,414
<c.magenta>你将得到一个这样的报错</c>

204
00:11:21,281 --> 00:11:24,384
<c.magenta>ARSession进程的另一个作用是</c>

205
00:11:24,451 --> 00:11:26,186
<c.magenta>拉动当前帧属性</c>

206
00:11:27,921 --> 00:11:30,190
<c.magenta>那么现在ARFrame包含什么？</c>

207
00:11:30,824 --> 00:11:35,395
<c.magenta>每个ARFrame包含你用于</c>

208
00:11:36,296 --> 00:11:38,532
<c.magenta>它提供的第一个东西是相机图像</c>

209
00:11:38,866 --> 00:11:42,469
<c.magenta>那么这是你用来渲染场景背景的东西</c>

210
00:11:43,604 --> 00:11:45,973
<c.magenta>接下来它提供追踪信息</c>

211
00:11:46,039 --> 00:11:50,544
<c.magenta>或我设备的方向以及位置</c>

212
00:11:51,245 --> 00:11:53,614
<c.magenta>最后它提供场景理解</c>

213
00:11:54,214 --> 00:11:57,317
<c.magenta>那么关于场景的信息 比如特征点、</c>

214
00:11:57,384 --> 00:12:01,655
<c.magenta>在空间中的物理位置</c>

215
00:11:57,384 --> 00:12:01,655
<c.magenta>在空间中的物理位置</c>

216
00:12:02,823 --> 00:12:08,262
<c.magenta>那么在空间中的物理位置</c>

217
00:12:08,795 --> 00:12:11,732
<c.magenta>通过ARFrame或ARAnchor 抱歉</c>

218
00:12:12,165 --> 00:12:15,536
<c.magenta>ARAnchor是一个相对位置</c>

219
00:12:15,602 --> 00:12:17,938
<c.magenta>和在空间中的方向</c>

220
00:12:20,207 --> 00:12:23,110
<c.magenta>你可以从你的场景中</c>

221
00:12:23,177 --> 00:12:25,279
<c.magenta>它们用于基本呈现</c>

222
00:12:25,345 --> 00:12:29,516
<c.magenta>锚定到你物理环境中的虚拟内容</c>

223
00:12:29,816 --> 00:12:31,318
<c.magenta>如果你想添加一个自定义锚点</c>

224
00:12:31,385 --> 00:12:33,020
<c.magenta>你可以通过</c>

225
00:12:33,086 --> 00:12:35,489
<c.magenta>它将一直留在你的会话中</c>

226
00:12:36,023 --> 00:12:39,293
<c.magenta>但还有额外的一点 如果你正在运行</c>

227
00:12:39,359 --> 00:12:42,029
<c.magenta>ARAnchor将被自动添加到你的会话中</c>

228
00:12:42,396 --> 00:12:43,997
<c.magenta>那么为了响应这个</c>

229
00:12:44,331 --> 00:12:47,968
<c.magenta>你可以在当前的ARFrame中</c>

230
00:12:48,168 --> 00:12:51,271
<c.magenta>将包含你的会话</c>

231
00:12:51,338 --> 00:12:56,310
<c.magenta>或者你可以响应委托方法</c>

232
00:12:56,376 --> 00:12:58,412
<c.magenta>如果锚点被成功添加</c>

233
00:12:58,478 --> 00:13:00,747
<c.magenta>更新或从会话中移除 将会通知你</c>

234
00:12:58,478 --> 00:13:00,747
<c.magenta>更新或从会话中移除 将会通知你</c>

235
00:13:02,616 --> 00:13:04,585
<c.magenta>那就推断出四个主要类</c>

236
00:13:04,651 --> 00:13:07,387
<c.magenta>是你用来创建增强现实体验的</c>

237
00:13:08,956 --> 00:13:11,225
<c.magenta>现在让我们特别谈谈追踪</c>

238
00:13:13,627 --> 00:13:18,365
<c.magenta>那么追踪是决定</c>

239
00:13:19,800 --> 00:13:20,667
<c.magenta>这并不简单</c>

240
00:13:20,868 --> 00:13:23,437
<c.magenta>但是它至关重要 它可以让增强现实</c>

241
00:13:23,770 --> 00:13:25,806
<c.magenta>发现你设备的位置</c>

242
00:13:25,873 --> 00:13:29,209
<c.magenta>那么并不是任意位置</c>

243
00:13:29,276 --> 00:13:30,978
<c.magenta>以便准确地渲染内容</c>

244
00:13:31,044 --> 00:13:32,479
<c.magenta>那么让我们来看个例子</c>

245
00:13:33,247 --> 00:13:35,015
<c.magenta>在这里我放了一把虚拟的椅子</c>

246
00:13:35,449 --> 00:13:37,818
<c.magenta>和一张桌子在物理环境中</c>

247
00:13:38,185 --> 00:13:43,423
<c.magenta>你会注意到如果我左右平移它</c>

248
00:13:43,490 --> 00:13:45,192
<c.magenta>它们会在空间中保持固定</c>

249
00:13:45,325 --> 00:13:49,463
<c.magenta>但更重要的是 当我在场景中溜达时</c>

250
00:13:50,063 --> 00:13:51,665
<c.magenta>那么这是因为我们用了</c>

251
00:13:51,732 --> 00:13:54,768
<c.magenta>我们不断地更新投影转换</c>

252
00:13:54,835 --> 00:13:58,438
<c.magenta>或不断地更新我们用于</c>

253
00:13:58,505 --> 00:14:01,241
<c.magenta>以便从任意视角看起来它的位置</c>

254
00:13:58,505 --> 00:14:01,241
<c.magenta>以便从任意视角看起来它的位置</c>

255
00:14:03,210 --> 00:14:04,511
<c.magenta>现在我们要如何实现呢？</c>

256
00:14:05,712 --> 00:14:07,714
<c.magenta>ARKit提供世界追踪</c>

257
00:14:08,015 --> 00:14:10,817
<c.magenta>我们的这个技术使用了视觉惯性里程计</c>

258
00:14:10,884 --> 00:14:13,420
<c.magenta>它是你的相机图像</c>

259
00:14:13,921 --> 00:14:15,722
<c.magenta>并且它给你提供你设备的旋转</c>

260
00:14:15,789 --> 00:14:19,359
<c.magenta>和位置或相对位置</c>

261
00:14:21,094 --> 00:14:24,264
<c.magenta>但更重要的是 它提供现实世界的比例</c>

262
00:14:24,631 --> 00:14:27,568
<c.magenta>你的全部虚拟内容实际上要</c>

263
00:14:27,634 --> 00:14:29,870
<c.magenta>在物理场景中按比例进行渲染</c>

264
00:14:31,438 --> 00:14:33,841
<c.magenta>它还意味着你设备的移动</c>

265
00:14:33,907 --> 00:14:37,411
<c.magenta>与以米为测量单位测定的</c>

266
00:14:40,781 --> 00:14:42,749
<c.magenta>追踪提供的全部位置</c>

267
00:14:42,816 --> 00:14:45,485
<c.magenta>都是相对于</c>

268
00:14:47,221 --> 00:14:49,523
<c.magenta>那么对于世界追踪还有另一个功能</c>

269
00:14:50,123 --> 00:14:51,925
<c.magenta>我们提供3D特征点</c>

270
00:14:52,492 --> 00:14:55,529
<c.magenta>那么这里有一个</c>

271
00:14:55,596 --> 00:14:58,866
<c.magenta>它通过探测特征进行的</c>

272
00:14:58,932 --> 00:14:59,833
<c.magenta>在相机图像中</c>

273
00:15:00,601 --> 00:15:04,304
<c.magenta>你可以看到</c>

274
00:15:04,371 --> 00:15:06,473
<c.magenta>它随着我在现实世界中的</c>

275
00:15:06,540 --> 00:15:08,275
<c.magenta>但你还可以看到这上边的这些点</c>

276
00:15:08,342 --> 00:15:11,845
<c.magenta>这些代表3D特征点</c>

277
00:15:11,912 --> 00:15:15,682
<c.magenta>我可以通过在场景中移动</c>

278
00:15:15,749 --> 00:15:18,585
<c.magenta>然后通过利用这些点 匹配这些特征</c>

279
00:15:18,652 --> 00:15:22,856
<c.magenta>你会看到当我匹配一个我之前见到过的</c>

280
00:15:23,290 --> 00:15:26,026
<c.magenta>通过全部这些信息和我们的运动数据</c>

281
00:15:26,093 --> 00:15:31,665
<c.magenta>我们就可以精确地提供</c>

282
00:15:32,766 --> 00:15:37,004
<c.magenta>那么看起来可能很难 让我们看看代码</c>

283
00:15:38,438 --> 00:15:41,074
<c.magenta>你需要做的第一件事</c>

284
00:15:41,141 --> 00:15:43,677
<c.magenta>因为它会管理</c>

285
00:15:43,744 --> 00:15:45,679
<c.magenta>即将在世界追踪过程中</c>

286
00:15:45,979 --> 00:15:49,116
<c.magenta>接下来你要把自己设为会话的委托</c>

287
00:15:49,183 --> 00:15:52,085
<c.magenta>以便当出现新帧时可以接收更新</c>

288
00:15:53,120 --> 00:15:54,988
<c.magenta>通过创建世界追踪会话配置</c>

289
00:15:55,055 --> 00:15:56,523
<c.magenta>你其实是在说“我想使用世界追踪</c>

290
00:15:56,590 --> 00:15:58,825
<c.magenta>我想让我的会话运行这个进程 ”</c>

291
00:15:59,293 --> 00:16:02,563
<c.magenta>然后通过调用Run 将立即启动进程</c>

292
00:15:59,293 --> 00:16:02,563
<c.magenta>然后通过调用Run 将立即启动进程</c>

293
00:16:02,629 --> 00:16:03,864
<c.magenta>开始捕捉</c>

294
00:16:04,298 --> 00:16:09,036
<c.magenta>那么在底层 我们的会话</c>

295
00:16:09,102 --> 00:16:14,074
<c.magenta>还有CMMotionManager</c>

296
00:16:14,441 --> 00:16:16,677
<c.magenta>我们通过图像探测场景中的特征</c>

297
00:16:17,144 --> 00:16:18,946
<c.magenta>我们高频率地使用运动数据</c>

298
00:16:19,012 --> 00:16:22,149
<c.magenta>以随着时间对它进行整合</c>

299
00:16:23,083 --> 00:16:26,153
<c.magenta>将这些结合起来使用</c>

300
00:16:26,220 --> 00:16:30,624
<c.magenta>以提供精确的姿态</c>

301
00:16:32,192 --> 00:16:35,829
<c.magenta>每个ARFrame</c>

302
00:16:38,165 --> 00:16:41,034
<c.magenta>那么ARCamera</c>

303
00:16:41,101 --> 00:16:42,769
<c.magenta>或者你可以把它当虚拟相机使用</c>

304
00:16:42,836 --> 00:16:45,606
<c.magenta>它会呈现你设备的方向以及位置</c>

305
00:16:45,873 --> 00:16:47,207
<c.magenta>所以它提供一种转换</c>

306
00:16:47,774 --> 00:16:50,944
<c.magenta>转换是一个矩阵或SIMD浮点4x4</c>

307
00:16:51,011 --> 00:16:55,015
<c.magenta>提供你物理设备的方向</c>

308
00:16:55,082 --> 00:16:58,085
<c.magenta>从会话的起点</c>

309
00:16:59,019 --> 00:17:01,421
<c.magenta>除此之外 我们还提供一个追踪状态</c>

310
00:16:59,019 --> 00:17:01,421
<c.magenta>除此之外 我们还提供一个追踪状态</c>

311
00:17:01,488 --> 00:17:03,924
<c.magenta>让你了解如何使用转换</c>

312
00:17:04,790 --> 00:17:07,426
<c.magenta>最后 我们提供相机内参</c>

313
00:17:07,928 --> 00:17:11,431
<c.magenta>那么相机内参非常重要</c>

314
00:17:11,498 --> 00:17:14,535
<c.magenta>因为它匹配你设备上的物理相机</c>

315
00:17:14,734 --> 00:17:18,005
<c.magenta>这种信息 比如焦距和主点</c>

316
00:17:18,070 --> 00:17:19,473
<c.magenta>用于寻找一个投影矩阵</c>

317
00:17:20,073 --> 00:17:23,609
<c.magenta>投影矩阵也是ARCamera上的一个</c>

318
00:17:23,676 --> 00:17:26,646
<c.magenta>那么你可以用这个</c>

319
00:17:28,615 --> 00:17:31,385
<c.magenta>就是这样 这就是ARKit提供的追踪</c>

320
00:17:31,451 --> 00:17:33,820
<c.magenta>让我们继续 看一个使用世界追踪</c>

321
00:17:33,887 --> 00:17:35,956
<c.magenta>创建你的第一个ARKit应用的演示</c>

322
00:17:42,629 --> 00:17:45,666
<c.magenta>那么当你打开新版Xcode 9时</c>

323
00:17:45,732 --> 00:17:49,603
<c.magenta>就是有一个新模板</c>

324
00:17:49,670 --> 00:17:51,171
<c.magenta>那么让我们选择它</c>

325
00:17:51,705 --> 00:17:54,341
<c.magenta>我要创建一个增强现实应用</c>

326
00:17:54,675 --> 00:17:57,878
<c.magenta>在给对象命名之后 比如MyARApp</c>

327
00:17:58,378 --> 00:17:59,980
<c.magenta>我可以选择语言</c>

328
00:18:00,314 --> 00:18:03,417
<c.magenta>在这里我可以选择Swift和ObjectiveC</c>

329
00:18:04,084 --> 00:18:05,719
<c.magenta>以及内容技术</c>

330
00:18:05,786 --> 00:18:08,388
<c.magenta>那么内容技术用来</c>

331
00:18:08,455 --> 00:18:10,657
<c.magenta>渲染你的增强现实场景</c>

332
00:18:10,858 --> 00:18:14,595
<c.magenta>这里的选项有SceneKit、</c>

333
00:18:15,128 --> 00:18:17,197
<c.magenta>比如说我要使用SceneKit</c>

334
00:18:19,233 --> 00:18:21,134
<c.magenta>点击下一步</c>

335
00:18:21,201 --> 00:18:22,569
<c.magenta>看起来是这样的</c>

336
00:18:23,203 --> 00:18:25,639
<c.magenta>在这里我有一个</c>

337
00:18:25,706 --> 00:18:27,741
<c.magenta>你会看到它有一个ARSCNView</c>

338
00:18:28,008 --> 00:18:32,980
<c.magenta>那么这个ARSCNView是一个</c>

339
00:18:33,046 --> 00:18:34,515
<c.magenta>或替我实施绝大部分渲染</c>

340
00:18:35,082 --> 00:18:37,351
<c.magenta>那么它会处理虚拟相机的更新</c>

341
00:18:37,417 --> 00:18:40,053
<c.magenta>基于返回给它的ARFrame</c>

342
00:18:40,287 --> 00:18:44,525
<c.magenta>作为ARSCNView或sceneView的一个</c>

343
00:18:45,292 --> 00:18:48,529
<c.magenta>那么你可以看到我的sceneView</c>

344
00:18:48,595 --> 00:18:51,198
<c.magenta>它将会成为一艘船 沿着Z轴</c>

345
00:18:51,265 --> 00:18:53,834
<c.magenta>在世界原点稍前一点儿的地方进行转换</c>

346
00:18:54,101 --> 00:18:57,771
<c.magenta>然后最重要的部分是我正在访问会话…</c>

347
00:18:59,306 --> 00:19:01,241
<c.magenta>我正在访问会话并调用Run</c>

348
00:18:59,306 --> 00:19:01,241
<c.magenta>我正在访问会话并调用Run</c>

349
00:19:01,308 --> 00:19:03,410
<c.magenta>通过一个世界追踪会话配置</c>

350
00:19:03,810 --> 00:19:05,279
<c.magenta>那么 这将运行世界追踪</c>

351
00:19:05,345 --> 00:19:08,949
<c.magenta>并且视图将自动处理</c>

352
00:19:09,683 --> 00:19:11,318
<c.magenta>那么让我们来试试看</c>

353
00:19:11,385 --> 00:19:15,522
<c.magenta>也许我应该把标准船型</c>

354
00:19:17,257 --> 00:19:19,626
<c.magenta>那么让我们在设备上运行一下</c>

355
00:19:25,332 --> 00:19:27,501
<c.magenta>在安装后 你注意到的第一件事</c>

356
00:19:27,568 --> 00:19:29,436
<c.magenta>就是它会请求相机许可</c>

357
00:19:29,503 --> 00:19:31,138
<c.magenta>这是使用追踪</c>

358
00:19:31,205 --> 00:19:33,340
<c.magenta>以及渲染你场景的背景的请求</c>

359
00:19:33,774 --> 00:19:35,676
<c.magenta>接下来你将看到</c>

360
00:19:35,742 --> 00:19:37,744
<c.magenta>在我正前方有一艘太空船</c>

361
00:19:37,878 --> 00:19:42,216
<c.magenta>你会看到当我改变设备的方向时</c>

362
00:19:42,649 --> 00:19:45,485
<c.magenta>但更重要的是</c>

363
00:19:46,353 --> 00:19:49,323
<c.magenta>你会看到它实际上是</c>

364
00:19:50,390 --> 00:19:52,392
<c.magenta>那么这是用了我设备的方向</c>

365
00:19:52,459 --> 00:19:55,762
<c.magenta>以及相对位置来更新虚拟相机</c>

366
00:19:57,264 --> 00:19:58,432
<c.magenta>和对太空船的视角</c>

367
00:19:59,566 --> 00:20:01,168
<c.magenta>那么让我们…谢谢</c>

368
00:19:59,566 --> 00:20:01,168
<c.magenta>那么让我们…谢谢</c>

369
00:20:07,407 --> 00:20:09,042
<c.magenta>如果这对于你</c>

370
00:20:09,109 --> 00:20:12,346
<c.magenta>也许我们可以添加一些东西到场景中</c>

371
00:20:12,479 --> 00:20:15,315
<c.magenta>让我们来试试</c>

372
00:20:17,451 --> 00:20:21,188
<c.magenta>正如我所说的 每次我轻触屏幕时</c>

373
00:20:21,688 --> 00:20:23,390
<c.magenta>我要做的第一件事</c>

374
00:20:24,024 --> 00:20:25,959
<c.magenta>就是添加一个轻触手势识别器</c>

375
00:20:27,494 --> 00:20:32,199
<c.magenta>那么将它添加到我的场景视图中后</c>

376
00:20:32,266 --> 00:20:35,202
<c.magenta>或每次我轻触屏幕时</c>

377
00:20:36,069 --> 00:20:37,437
<c.magenta>那么让我们实施一下</c>

378
00:20:39,540 --> 00:20:42,943
<c.magenta>那么如果我想创建一些几何体</c>

379
00:20:43,010 --> 00:20:44,478
<c.magenta>或飞机图像</c>

380
00:20:46,880 --> 00:20:50,350
<c.magenta>那么我要做的第一件事就是</c>

381
00:20:50,417 --> 00:20:53,720
<c.magenta>然后是最棘手的部分 我要设置内容</c>

382
00:20:53,787 --> 00:20:57,524
<c.magenta>或材料作为视图的快照</c>

383
00:20:59,026 --> 00:21:00,827
<c.magenta>那么你认为这会是什么呢？</c>

384
00:20:59,026 --> 00:21:00,827
<c.magenta>那么你认为这会是什么呢？</c>

385
00:21:00,928 --> 00:21:03,564
<c.magenta>嗯 这其实是拍快照或视图的渲染</c>

386
00:21:03,630 --> 00:21:06,266
<c.magenta>包括背景相机图像</c>

387
00:21:06,333 --> 00:21:09,536
<c.magenta>以及我们放在背景前方的虚拟几何体</c>

388
00:21:10,137 --> 00:21:12,139
<c.magenta>我要把光照模型设为常量</c>

389
00:21:12,206 --> 00:21:14,408
<c.magenta>从而使ARKit提供的光估计</c>

390
00:21:14,474 --> 00:21:16,343
<c.magenta>不会应用于这个相机图像中</c>

391
00:21:16,410 --> 00:21:18,846
<c.magenta>因为它已经已经要跟环境匹配了</c>

392
00:21:20,147 --> 00:21:22,015
<c.magenta>接下来我要把这个添加到场景中</c>

393
00:21:22,082 --> 00:21:24,718
<c.magenta>我需要创建一个飞机节点</c>

394
00:21:28,455 --> 00:21:31,592
<c.magenta>在创建一个</c>

395
00:21:31,658 --> 00:21:32,793
<c.magenta>我把它添加到场景中</c>

396
00:21:33,293 --> 00:21:35,462
<c.magenta>已经在这里了 每次我轻触屏幕时</c>

397
00:21:35,529 --> 00:21:37,197
<c.magenta>它会在我的场景中</c>

398
00:21:37,264 --> 00:21:40,067
<c.magenta>但问题是它将总是会在000</c>

399
00:21:40,501 --> 00:21:42,236
<c.magenta>该如何让这个变得更有意思呢？</c>

400
00:21:42,569 --> 00:21:44,571
<c.magenta>嗯 我们已经给自己提供了</c>

401
00:21:44,638 --> 00:21:47,007
<c.magenta>一个当前帧 包含一个AR相机</c>

402
00:21:47,774 --> 00:21:50,878
<c.magenta>我很可能使用相机的转换</c>

403
00:21:50,944 --> 00:21:53,146
<c.magenta>来更新飞机节点的转换</c>

404
00:21:53,213 --> 00:21:57,684
<c.magenta>从而使飞机节点处于我的相机</c>

405
00:21:58,452 --> 00:22:00,854
<c.magenta>那么我首先要获取当前帧</c>

406
00:21:58,452 --> 00:22:00,854
<c.magenta>那么我首先要获取当前帧</c>

407
00:22:00,921 --> 00:22:02,222
<c.magenta>从我的SceneView会话中</c>

408
00:22:04,124 --> 00:22:06,660
<c.magenta>接下来我要更新飞机节点的转换</c>

409
00:22:08,595 --> 00:22:10,597
<c.magenta>以使用我的相机的转换</c>

410
00:22:15,235 --> 00:22:16,703
<c.magenta>在这里你将注意到我要做的第一件事是</c>

411
00:22:16,770 --> 00:22:18,805
<c.magenta>创建转化矩阵</c>

412
00:22:19,006 --> 00:22:20,474
<c.magenta>因为我不想把飞机图像</c>

413
00:22:20,541 --> 00:22:22,843
<c.magenta>放在相机所处的位置</c>

414
00:22:22,910 --> 00:22:24,545
<c.magenta>我想把它放在相机前方</c>

415
00:22:24,745 --> 00:22:28,415
<c.magenta>那么为此 我要将负Z轴用作转化</c>

416
00:22:29,283 --> 00:22:32,986
<c.magenta>你还可以看到 为了获得同样的比例</c>

417
00:22:33,053 --> 00:22:37,191
<c.magenta>那么我要使用.1代表相机前10厘米</c>

418
00:22:37,891 --> 00:22:40,827
<c.magenta>通过多个位置和多个相机转换</c>

419
00:22:40,894 --> 00:22:44,698
<c.magenta>并将其应用到我的飞机节点中</c>

420
00:22:44,765 --> 00:22:47,034
<c.magenta>位于相机前10厘米处</c>

421
00:22:47,835 --> 00:22:50,003
<c.magenta>让我们尝试一下 看是什么样子</c>

422
00:22:58,745 --> 00:23:02,516
<c.magenta>那么你再一次看到做了这里</c>

423
00:22:58,745 --> 00:23:02,516
<c.magenta>那么你再一次看到做了这里</c>

424
00:23:02,583 --> 00:23:04,484
<c.magenta>飞船也浮在空中</c>

425
00:23:06,453 --> 00:23:10,090
<c.magenta>现在 如果我轻触屏幕</c>

426
00:23:10,157 --> 00:23:13,026
<c.magenta>你会看到它会在空间中我轻触的地方</c>

427
00:23:13,093 --> 00:23:14,161
<c.magenta>留下一个快照或图像</c>

428
00:23:22,302 --> 00:23:25,639
<c.magenta>这只是显示了你通过ARKit</c>

429
00:23:25,873 --> 00:23:28,475
<c.magenta>它真的实现了一个很酷的体验</c>

430
00:23:30,644 --> 00:23:32,346
<c.magenta>谢谢 这就是ARKit的使用</c>

431
00:23:32,412 --> 00:23:37,718
<c.magenta>（演示</c>

432
00:23:41,922 --> 00:23:44,491
<c.magenta>那么现在你已经看到了</c>

433
00:23:44,558 --> 00:23:47,728
<c.magenta>让我们谈谈从追踪结果中</c>

434
00:23:49,029 --> 00:23:52,733
<c.magenta>要注意的第一件事是追踪</c>

435
00:23:52,799 --> 00:23:55,269
<c.magenta>意思就是如果不再提供相机图像</c>

436
00:23:55,335 --> 00:23:57,704
<c.magenta>给你的会话 追踪将会停止</c>

437
00:23:57,771 --> 00:23:59,006
<c.magenta>我们就不能追踪了</c>

438
00:24:00,574 --> 00:24:03,377
<c.magenta>接下来追踪在结构良好的环境中</c>

439
00:24:04,044 --> 00:24:07,014
<c.magenta>意思是我们需要足够的视觉复杂性</c>

440
00:24:07,080 --> 00:24:08,916
<c.magenta>从你的相机图像中寻找特性</c>

441
00:24:09,249 --> 00:24:11,752
<c.magenta>那么如果我面对着一面白墙</c>

442
00:24:11,818 --> 00:24:15,956
<c.magenta>我就不能找到特征 并且追踪会受限制</c>

443
00:24:17,624 --> 00:24:20,027
<c.magenta>接下来追踪在静态场景中用起来也很好</c>

444
00:24:20,360 --> 00:24:24,164
<c.magenta>如果我相机捕捉到的大部分东西</c>

445
00:24:24,231 --> 00:24:29,136
<c.magenta>移动数据 可能导致漂移</c>

446
00:24:29,903 --> 00:24:34,508
<c.magenta>要处理这些情况</c>

447
00:24:36,043 --> 00:24:41,548
<c.magenta>追踪状态有三个值：</c>

448
00:24:42,149 --> 00:24:45,719
<c.magenta>当你首次启动会话时</c>

449
00:24:45,786 --> 00:24:47,421
<c.magenta>意思就是你相机的转换</c>

450
00:24:47,487 --> 00:24:50,457
<c.magenta>还没有被填充 单位矩阵也没有准备好</c>

451
00:24:51,792 --> 00:24:54,695
<c.magenta>很快 一旦我们找到第一个追踪姿态</c>

452
00:24:54,761 --> 00:24:57,698
<c.magenta>状态将从不可用改为正常</c>

453
00:24:58,198 --> 00:25:00,968
<c.magenta>这表示你现在可以使用相机的转换了</c>

454
00:24:58,198 --> 00:25:00,968
<c.magenta>这表示你现在可以使用相机的转换了</c>

455
00:25:02,870 --> 00:25:05,973
<c.magenta>如果在这之后的某一个时间点</c>

456
00:25:06,039 --> 00:25:09,009
<c.magenta>追踪状态将会从正常改为受限</c>

457
00:25:09,409 --> 00:25:10,911
<c.magenta>同时会提供一个原因</c>

458
00:25:11,078 --> 00:25:13,514
<c.magenta>那么本例中的原因是</c>

459
00:25:13,580 --> 00:25:16,250
<c.magenta>或者没有充足的光照 是特征不足</c>

460
00:25:17,551 --> 00:25:19,987
<c.magenta>当发生此种情况时</c>

461
00:25:20,053 --> 00:25:21,989
<c.magenta>那么 要实现这个功能 我们提供了</c>

462
00:25:22,422 --> 00:25:24,558
<c.magenta>一个你可以实施的会话委托方法：</c>

463
00:25:24,725 --> 00:25:26,426
<c.magenta>cameraDidChangeTrackingState</c>

464
00:25:26,960 --> 00:25:29,329
<c.magenta>当发生这种情况时</c>

465
00:25:29,396 --> 00:25:31,565
<c.magenta>看是否受限 以及受限原因</c>

466
00:25:32,499 --> 00:25:34,001
<c.magenta>根据这个信息来通知你的用户</c>

467
00:25:34,067 --> 00:25:37,838
<c.magenta>因为他们是唯一能修改追踪情形的人</c>

468
00:25:37,905 --> 00:25:41,008
<c.magenta>通过开灯或不面对着白墙</c>

469
00:25:43,143 --> 00:25:47,114
<c.magenta>另一部分是如果传感器数据不可用</c>

470
00:25:47,881 --> 00:25:50,717
<c.magenta>那么对于这种情况</c>

471
00:25:51,451 --> 00:25:54,121
<c.magenta>那么如果你的相机输入不可用 由于…</c>

472
00:25:54,188 --> 00:25:56,356
<c.magenta>主要原因是你的应用处于后台</c>

473
00:25:56,423 --> 00:25:59,226
<c.magenta>或也许你正在iPad上实施多项任务</c>

474
00:25:59,293 --> 00:26:01,795
<c.magenta>相机图像也不会提供给你的会话</c>

475
00:25:59,293 --> 00:26:01,795
<c.magenta>相机图像也不会提供给你的会话</c>

476
00:26:02,196 --> 00:26:04,831
<c.magenta>在这种情况下 追踪变得不可用</c>

477
00:26:04,898 --> 00:26:07,601
<c.magenta>或停止 并且你的会话将被中断</c>

478
00:26:07,668 --> 00:26:10,270
<c.magenta>要处理这个问题 我们提供了委托方法</c>

479
00:26:10,771 --> 00:26:11,839
<c.magenta>让它变得非常简单</c>

480
00:26:12,673 --> 00:26:16,476
<c.magenta>在这里你可以呈现一个覆盖</c>

481
00:26:16,543 --> 00:26:19,880
<c.magenta>向用户表明你的体验当前已被暂停</c>

482
00:26:19,947 --> 00:26:21,448
<c.magenta>追踪已停止</c>

483
00:26:22,015 --> 00:26:25,219
<c.magenta>在中断过程中 有一个重点需要注意</c>

484
00:26:25,285 --> 00:26:27,754
<c.magenta>因为没有任何追踪</c>

485
00:26:27,821 --> 00:26:30,490
<c.magenta>你设备的相对位置也不可用</c>

486
00:26:30,691 --> 00:26:34,194
<c.magenta>所以如果你在场景中</c>

487
00:26:34,261 --> 00:26:37,798
<c.magenta>它们可能不再对齐</c>

488
00:26:38,699 --> 00:26:41,602
<c.magenta>为此你可能想根据情况</c>

489
00:26:41,668 --> 00:26:43,470
<c.magenta>当你从中断中返回来时</c>

490
00:26:44,872 --> 00:26:47,508
<c.magenta>那么这就是追踪</c>

491
00:26:48,342 --> 00:26:51,778
<c.magenta>让我们把舞台交给Stefan</c>

492
00:26:57,818 --> 00:26:58,719
<c.magenta>谢谢Mike</c>

493
00:26:59,720 --> 00:27:00,988
<c.magenta>大家下午好</c>

494
00:26:59,720 --> 00:27:00,988
<c.magenta>大家下午好</c>

495
00:27:01,321 --> 00:27:04,658
<c.magenta>我叫Stefan Misslinger</c>

496
00:27:04,725 --> 00:27:07,361
<c.magenta>接下来我要讲讲场景理解</c>

497
00:27:07,728 --> 00:27:11,365
<c.magenta>那么场景理解的目标是</c>

498
00:27:11,431 --> 00:27:14,568
<c.magenta>以便在这个环境中放置虚拟对象</c>

499
00:27:15,102 --> 00:27:19,072
<c.magenta>这种信息包括比如环境3D拓扑</c>

500
00:27:19,139 --> 00:27:24,778
<c.magenta>以及光照条件 以便逼真地摆放对象</c>

501
00:27:25,979 --> 00:27:28,482
<c.magenta>让我们看一下这个桌子作为示例</c>

502
00:27:29,183 --> 00:27:32,586
<c.magenta>如果你想在这个桌子上放置一个对象</c>

503
00:27:32,653 --> 00:27:34,121
<c.magenta>我们需要了解的第一件事</c>

504
00:27:34,188 --> 00:27:37,191
<c.magenta>就是那儿有一个表面</c>

505
00:27:37,524 --> 00:27:40,227
<c.magenta>这是通过平面探测实现的</c>

506
00:27:41,628 --> 00:27:44,531
<c.magenta>第二 我们需要计算3D坐标</c>

507
00:27:44,598 --> 00:27:47,134
<c.magenta>我们要在这个坐标上</c>

508
00:27:47,734 --> 00:27:50,437
<c.magenta>要找到坐标 我们得使用碰撞测试</c>

509
00:27:51,004 --> 00:27:54,474
<c.magenta>这包括从我们的设备上发送一条射线</c>

510
00:27:54,541 --> 00:27:56,977
<c.magenta>以便找到这个坐标</c>

511
00:27:58,645 --> 00:28:03,650
<c.magenta>第三 要把这个对象</c>

512
00:27:58,645 --> 00:28:03,650
<c.magenta>第三 要把这个对象</c>

513
00:28:03,717 --> 00:28:07,955
<c.magenta>我们需要光预计</c>

514
00:28:08,889 --> 00:28:11,391
<c.magenta>让我们分别来看一下这三点</c>

515
00:28:11,458 --> 00:28:12,926
<c.magenta>让我们从平面探测开始</c>

516
00:28:14,394 --> 00:28:16,997
<c.magenta>那么平面探测为你提供水平面</c>

517
00:28:17,064 --> 00:28:18,832
<c.magenta>就重力而言</c>

518
00:28:19,533 --> 00:28:21,702
<c.magenta>这种位面包括地平面</c>

519
00:28:21,768 --> 00:28:25,272
<c.magenta>以及任意平行平面 如桌子</c>

520
00:28:26,607 --> 00:28:30,777
<c.magenta>ARKit通过在多帧之上</c>

521
00:28:30,844 --> 00:28:32,112
<c.magenta>所以它在后台运行</c>

522
00:28:32,679 --> 00:28:35,449
<c.magenta>当用户在场景中移动设备时</c>

523
00:28:35,516 --> 00:28:37,518
<c.magenta>它就了解了关于这个位面的更多信息</c>

524
00:28:39,086 --> 00:28:43,991
<c.magenta>这也允许我们取回</c>

525
00:28:44,057 --> 00:28:49,329
<c.magenta>意思是我们正在把一个矩形</c>

526
00:28:49,396 --> 00:28:51,331
<c.magenta>并让它与主范围对齐</c>

527
00:28:51,598 --> 00:28:53,066
<c.magenta>这就给你提供了</c>

528
00:28:53,133 --> 00:28:56,737
<c.magenta>某个物理位面的主要定位</c>

529
00:28:58,405 --> 00:29:01,575
<c.magenta>此外如果在同一个物理水平面上</c>

530
00:28:58,405 --> 00:29:01,575
<c.magenta>此外如果在同一个物理水平面上</c>

531
00:29:01,642 --> 00:29:05,445
<c.magenta>ARKit将合并在一起处理</c>

532
00:29:06,580 --> 00:29:12,152
<c.magenta>然后合并后的位面</c>

533
00:29:12,219 --> 00:29:14,788
<c.magenta>因为较新的位面将从会话中被移除</c>

534
00:29:16,190 --> 00:29:18,258
<c.magenta>让我们看一下在代码中是如何使用的</c>

535
00:29:20,194 --> 00:29:24,665
<c.magenta>你要做的第一件事就是创建一个</c>

536
00:29:25,666 --> 00:29:27,935
<c.magenta>平面探测是一个属性 你可以</c>

537
00:29:28,001 --> 00:29:30,304
<c.magenta>在ARWorldTracking会话配置中设置</c>

538
00:29:30,571 --> 00:29:32,272
<c.magenta>那么要启动平面探测</c>

539
00:29:32,339 --> 00:29:35,709
<c.magenta>你只需要将平面探测属性</c>

540
00:29:36,810 --> 00:29:39,146
<c.magenta>之后把配置传回</c>

541
00:29:39,213 --> 00:29:42,015
<c.magenta>ARSession 通过调用Run方法</c>

542
00:29:42,082 --> 00:29:45,118
<c.magenta>它将会在你的环境中开始探测平面</c>

543
00:29:47,421 --> 00:29:50,224
<c.magenta>如果你要关闭平面探测</c>

544
00:29:50,290 --> 00:29:53,927
<c.magenta>我们只需要将平面探测属性设为无</c>

545
00:29:54,161 --> 00:29:57,297
<c.magenta>然后在ARSession上</c>

546
00:29:58,065 --> 00:30:01,335
<c.magenta>之前探测到的平面将保留在会话中</c>

547
00:29:58,065 --> 00:30:01,335
<c.magenta>之前探测到的平面将保留在会话中</c>

548
00:30:02,102 --> 00:30:06,473
<c.magenta>意思是它们仍会</c>

549
00:30:08,242 --> 00:30:11,445
<c.magenta>那么无论何时探测到一个新平面</c>

550
00:30:11,512 --> 00:30:14,248
<c.magenta>它们都将</c>

551
00:30:15,015 --> 00:30:18,118
<c.magenta>ARPlaneAnchor是ARAnchor的子类</c>

552
00:30:18,185 --> 00:30:21,488
<c.magenta>意思是它呈现现实世界位置和方向</c>

553
00:30:23,457 --> 00:30:25,893
<c.magenta>无论何时检测到一个新锚点</c>

554
00:30:25,959 --> 00:30:29,429
<c.magenta>你都将收到一个</c>

555
00:30:30,030 --> 00:30:33,100
<c.magenta>你可以用那个来 比如形象化你的平面</c>

556
00:30:34,034 --> 00:30:38,739
<c.magenta>平面的范围将作为范围呈现给你</c>

557
00:30:38,972 --> 00:30:42,609
<c.magenta>是相对于中心属性而言的</c>

558
00:30:44,778 --> 00:30:47,381
<c.magenta>那么随着用户在场景中移动设备</c>

559
00:30:47,447 --> 00:30:50,584
<c.magenta>我们将更多地了解这个平面</c>

560
00:30:52,052 --> 00:30:56,623
<c.magenta>当更新范围时</c>

561
00:30:56,690 --> 00:30:58,158
<c.magenta>didUpdate锚点</c>

562
00:30:58,759 --> 00:31:01,562
<c.magenta>你可以用于更新你的视觉展现</c>

563
00:30:58,759 --> 00:31:01,562
<c.magenta>你可以用于更新你的视觉展现</c>

564
00:31:02,529 --> 00:31:06,233
<c.magenta>请注意中心属性实际是如何移动的</c>

565
00:31:06,300 --> 00:31:08,502
<c.magenta>更多的是在一个方向上增长</c>

566
00:31:11,305 --> 00:31:14,441
<c.magenta>无论何时锚点被从会话中移除时</c>

567
00:31:14,508 --> 00:31:17,477
<c.magenta>你都将收到一个委托调用会话</c>

568
00:31:18,579 --> 00:31:22,115
<c.magenta>如果把多个平面合并在一起</c>

569
00:31:22,182 --> 00:31:24,117
<c.magenta>并移除其中一个作为结果时</c>

570
00:31:24,618 --> 00:31:29,223
<c.magenta>在那种情况下 你会收到一个</c>

571
00:31:29,289 --> 00:31:31,725
<c.magenta>你可以根据情况更新你的视觉展现</c>

572
00:31:33,961 --> 00:31:37,397
<c.magenta>那么现在我们有了一个</c>

573
00:31:37,464 --> 00:31:40,300
<c.magenta>让我们看看如何</c>

574
00:31:40,934 --> 00:31:43,103
<c.magenta>为此我们提供碰撞测试</c>

575
00:31:44,638 --> 00:31:47,040
<c.magenta>那么碰撞测试包括向现实世界发送</c>

576
00:31:47,107 --> 00:31:49,843
<c.magenta>或交叉来自你设备的一条射线</c>

577
00:31:49,910 --> 00:31:53,180
<c.magenta>并寻找交叉点</c>

578
00:31:55,616 --> 00:31:58,385
<c.magenta>ARKit会使用全部可用的场景信息</c>

579
00:31:58,452 --> 00:32:02,456
<c.magenta>包括所探测到的平面以及</c>

580
00:31:58,452 --> 00:32:02,456
<c.magenta>包括所探测到的平面以及</c>

581
00:32:02,523 --> 00:32:06,193
<c.magenta>ARWorldTracking 所使用的3D特征点</c>

582
00:32:08,862 --> 00:32:11,832
<c.magenta>然后ARKit交叉我们的射线</c>

583
00:32:11,899 --> 00:32:16,336
<c.magenta>通过全部可用信息</c>

584
00:32:16,403 --> 00:32:21,975
<c.magenta>并将全部交叉点返回为一个</c>

585
00:32:22,242 --> 00:32:25,946
<c.magenta>这个数组中的第一条</c>

586
00:32:28,348 --> 00:32:32,619
<c.magenta>并且有不同的方式可以实施这个交叉点</c>

587
00:32:32,986 --> 00:32:37,057
<c.magenta>你可以通过提供碰撞测试类型</c>

588
00:32:38,559 --> 00:32:41,328
<c.magenta>有四种方式可以实现</c>

589
00:32:43,530 --> 00:32:46,633
<c.magenta>如果你正在运行平面探测</c>

590
00:32:46,700 --> 00:32:50,270
<c.magenta>在我们的环境中探测到了一个平面</c>

591
00:32:51,805 --> 00:32:56,143
<c.magenta>在这里你可以选择</c>

592
00:32:56,944 --> 00:33:01,215
<c.magenta>如果你希望你的用户可以</c>

593
00:32:56,944 --> 00:33:01,215
<c.magenta>如果你希望你的用户可以</c>

594
00:33:01,281 --> 00:33:04,551
<c.magenta>在平面上移动对象</c>

595
00:33:04,618 --> 00:33:09,289
<c.magenta>你可以考虑使用范围 意思是</c>

596
00:33:09,356 --> 00:33:12,526
<c.magenta>它就会提供给你一个交叉点</c>

597
00:33:12,926 --> 00:33:16,830
<c.magenta>如果涉嫌碰到了它的外部</c>

598
00:33:19,099 --> 00:33:22,669
<c.magenta>情况有 比如移动家具</c>

599
00:33:22,736 --> 00:33:26,306
<c.magenta>或当你只探测到了水平面的一小部分时</c>

600
00:33:26,373 --> 00:33:29,543
<c.magenta>我们可以选择忽略</c>

601
00:33:29,610 --> 00:33:30,911
<c.magenta>作为一个无限平面</c>

602
00:33:31,912 --> 00:33:34,481
<c.magenta>在那种情况下</c>

603
00:33:35,916 --> 00:33:38,619
<c.magenta>你可以只使用现实世界中的一小片</c>

604
00:33:38,685 --> 00:33:43,490
<c.magenta>但让你的用户沿着这个平面移动对象</c>

605
00:33:45,592 --> 00:33:50,531
<c.magenta>如果你没有运行平面探测</c>

606
00:33:50,597 --> 00:33:53,767
<c.magenta>我们也可以根据当前可用的3D特征点</c>

607
00:33:53,834 --> 00:33:54,968
<c.magenta>预估一个平面</c>

608
00:33:56,270 --> 00:34:00,340
<c.magenta>在那种情况下</c>

609
00:33:56,270 --> 00:34:00,340
<c.magenta>在那种情况下</c>

610
00:34:00,407 --> 00:34:02,209
<c.magenta>并在那儿放置一个适合的平面</c>

611
00:34:02,743 --> 00:34:05,946
<c.magenta>之后它将给你返回这个平面的交叉点</c>

612
00:34:08,748 --> 00:34:11,784
<c.magenta>如果你想在一个很小的表面放置东西</c>

613
00:34:11,851 --> 00:34:15,922
<c.magenta>而那并不能形成一个平面的话</c>

614
00:34:15,989 --> 00:34:19,226
<c.magenta>你还可以选择直接与特征点交叉</c>

615
00:34:21,094 --> 00:34:24,598
<c.magenta>意思是我们会随着射线找到交叉点</c>

616
00:34:24,665 --> 00:34:26,733
<c.magenta>是距离现有的特征点最近的交叉点</c>

617
00:34:26,800 --> 00:34:29,069
<c.magenta>并返回这个交叉点作为结果</c>

618
00:34:30,469 --> 00:34:32,539
<c.magenta>让我们在代码中看看是如何实现的</c>

619
00:34:34,641 --> 00:34:38,178
<c.magenta>那么我们要做的第一件事</c>

620
00:34:38,712 --> 00:34:41,748
<c.magenta>它在我们的设备上进行交叉</c>

621
00:34:43,483 --> 00:34:45,185
<c.magenta>你把射线提供为一个CG点</c>

622
00:34:45,252 --> 00:34:48,355
<c.magenta>呈现方式是标准化的图像空间坐标</c>

623
00:34:48,422 --> 00:34:53,527
<c.magenta>意思是我们的图像左上角是0 0</c>

624
00:34:55,062 --> 00:34:57,297
<c.magenta>那么如果我们想发送一条射线</c>

625
00:34:57,364 --> 00:35:00,334
<c.magenta>或寻找一个交叉点 在屏幕的中心位置</c>

626
00:34:57,364 --> 00:35:00,334
<c.magenta>或寻找一个交叉点 在屏幕的中心位置</c>

627
00:35:00,400 --> 00:35:05,239
<c.magenta>我们要把CG点的x和y坐标</c>

628
00:35:06,473 --> 00:35:10,143
<c.magenta>如果你用的是SceneKit或SpriteKit</c>

629
00:35:10,210 --> 00:35:16,083
<c.magenta>你只需要传递</c>

630
00:35:16,149 --> 00:35:19,686
<c.magenta>那么你可以优先于触摸手势</c>

631
00:35:19,753 --> 00:35:23,757
<c.magenta>作为输入来定义这条射线</c>

632
00:35:25,626 --> 00:35:28,729
<c.magenta>那么让我们把这个点</c>

633
00:35:28,795 --> 00:35:31,732
<c.magenta>并定义我们要使用的碰撞测试类型</c>

634
00:35:31,798 --> 00:35:35,269
<c.magenta>在这种情况下我们要使用现有平面</c>

635
00:35:35,335 --> 00:35:38,705
<c.magenta>于ARKit已经探测到的任意平面</c>

636
00:35:38,772 --> 00:35:41,074
<c.magenta>也会与预估水平平面进行交叉</c>

637
00:35:41,141 --> 00:35:46,446
<c.magenta>那么这个可以作为备用方案</c>

638
00:35:48,081 --> 00:35:53,987
<c.magenta>之后ARKit将会返回结果数组</c>

639
00:35:54,054 --> 00:35:55,989
<c.magenta>你可以获取第一条结果</c>

640
00:35:56,056 --> 00:35:59,459
<c.magenta>将会是距离你的相机最近的交叉点</c>

641
00:36:02,129 --> 00:36:05,933
<c.magenta>交叉点包含在我们碰撞测试</c>

642
00:36:05,999 --> 00:36:07,534
<c.magenta>结果的worldTransform属性中</c>

643
00:36:07,601 --> 00:36:10,671
<c.magenta>并且我们可以根据这个结果</c>

644
00:36:10,737 --> 00:36:14,575
<c.magenta>并将其传回给会话</c>

645
00:36:16,410 --> 00:36:17,845
<c.magenta>那么如果我们把这段代码</c>

646
00:36:17,911 --> 00:36:23,183
<c.magenta>应用到这里的场景中</c>

647
00:36:23,250 --> 00:36:28,622
<c.magenta>它将会返回在屏幕中央</c>

648
00:36:28,689 --> 00:36:32,125
<c.magenta>我们可以在这个位置摆放一个虚拟茶杯</c>

649
00:36:34,094 --> 00:36:37,598
<c.magenta>默认情况是你的渲染引擎</c>

650
00:36:37,664 --> 00:36:42,803
<c.magenta>光照情况很完美 所以你增加的</c>

651
00:36:43,237 --> 00:36:45,539
<c.magenta>然而 如果你处于一个较暗的环境中</c>

652
00:36:46,740 --> 00:36:50,277
<c.magenta>然后你的相机图像也较暗</c>

653
00:36:50,344 --> 00:36:52,946
<c.magenta>看起来格格不入 它看起来很亮</c>

654
00:36:54,214 --> 00:36:58,352
<c.magenta>要修复这个问题 我们需要调整</c>

655
00:36:58,418 --> 00:37:00,521
<c.magenta>虚拟对象的相对亮度</c>

656
00:36:58,418 --> 00:37:00,521
<c.magenta>虚拟对象的相对亮度</c>

657
00:37:02,089 --> 00:37:04,825
<c.magenta>为此 我们提供光估计</c>

658
00:37:07,361 --> 00:37:10,531
<c.magenta>那么光估计是在你的相机图像上应用的</c>

659
00:37:10,931 --> 00:37:12,666
<c.magenta>它通过它的曝光信息</c>

660
00:37:12,733 --> 00:37:15,636
<c.magenta>来决定它的相对亮度</c>

661
00:37:16,737 --> 00:37:20,007
<c.magenta>光照良好的图像 默认是1000流明</c>

662
00:37:20,073 --> 00:37:23,143
<c.magenta>对于较亮的环境</c>

663
00:37:23,210 --> 00:37:25,712
<c.magenta>对于较暗的环境</c>

664
00:37:26,647 --> 00:37:30,417
<c.magenta>你还可以直接把这个值分配给SEN光</c>

665
00:37:30,484 --> 00:37:32,920
<c.magenta>作为其外界强度属性</c>

666
00:37:32,986 --> 00:37:35,422
<c.magenta>因此如果你使用的是物理光</c>

667
00:37:35,489 --> 00:37:37,724
<c.magenta>它将自动利用这个</c>

668
00:37:39,493 --> 00:37:41,895
<c.magenta>光预计是默认启动的</c>

669
00:37:41,962 --> 00:37:44,064
<c.magenta>你可以通过设置</c>

670
00:37:44,131 --> 00:37:47,701
<c.magenta>isLightEstimationEnabled</c>

671
00:37:47,768 --> 00:37:49,570
<c.magenta>在ARSession配置中</c>

672
00:37:50,437 --> 00:37:52,406
<c.magenta>光估计的结果</c>

673
00:37:52,706 --> 00:37:55,142
<c.magenta>以光估计属性提供给你</c>

674
00:37:55,209 --> 00:37:59,379
<c.magenta>这个属性在ARFrame中</c>

675
00:38:01,682 --> 00:38:03,817
<c.magenta>那么让我们看一个演示</c>

676
00:38:03,884 --> 00:38:06,653
<c.magenta>看看我们是如何</c>

677
00:38:17,431 --> 00:38:19,566
<c.magenta>我要给大家展示的应用</c>

678
00:38:19,633 --> 00:38:22,002
<c.magenta>是ARKit示例应用</c>

679
00:38:22,069 --> 00:38:26,006
<c.magenta>意思是你可以从我们的</c>

680
00:38:27,074 --> 00:38:30,043
<c.magenta>它展示的是在我们的环境中放置对象</c>

681
00:38:30,377 --> 00:38:33,814
<c.magenta>为此它使用了场景理解</c>

682
00:38:33,881 --> 00:38:36,383
<c.magenta>那么让我们打开它</c>

683
00:38:37,951 --> 00:38:41,221
<c.magenta>如果我移动它 你在我前方看到的</c>

684
00:38:41,722 --> 00:38:44,625
<c.magenta>是我们的焦距方框</c>

685
00:38:44,992 --> 00:38:49,263
<c.magenta>这是通过在我们的屏幕中央做碰撞测试</c>

686
00:38:50,030 --> 00:38:53,200
<c.magenta>并寻找在其交叉点上放置对象实现的</c>

687
00:38:53,734 --> 00:38:56,136
<c.magenta>那么如果我们沿着桌子移动它</c>

688
00:38:56,203 --> 00:38:58,805
<c.magenta>你可以看到它基本上是沿着桌子滑动</c>

689
00:39:00,340 --> 00:39:03,544
<c.magenta>它还使用了平行平面探测</c>

690
00:39:03,610 --> 00:39:06,380
<c.magenta>我们可以将它可视化</c>

691
00:39:06,680 --> 00:39:08,916
<c.magenta>让我们打开我们的调试菜单</c>

692
00:39:09,550 --> 00:39:12,853
<c.magenta>并激活这里的第二个选项</c>

693
00:39:13,720 --> 00:39:14,555
<c.magenta>让我们关闭它</c>

694
00:39:15,389 --> 00:39:17,925
<c.magenta>你可以从这里看到它所检测到的平面</c>

695
00:39:20,127 --> 00:39:22,963
<c.magenta>为了让你更好地理解它</c>

696
00:39:26,133 --> 00:39:27,801
<c.magenta>看看它是如何发现新平面的</c>

697
00:39:27,868 --> 00:39:31,271
<c.magenta>那么如果我移动它</c>

698
00:39:32,105 --> 00:39:34,308
<c.magenta>让我们迅速把它指向</c>

699
00:39:34,374 --> 00:39:36,243
<c.magenta>它找到了另一个平面</c>

700
00:39:36,677 --> 00:39:40,214
<c.magenta>如果我沿着这张桌子移动</c>

701
00:39:40,714 --> 00:39:42,783
<c.magenta>它最终会把这两个平面合并到一起</c>

702
00:39:42,850 --> 00:39:45,652
<c.magenta>并且算出只有一个平面</c>

703
00:39:54,361 --> 00:39:56,830
<c.magenta>那么接下来</c>

704
00:39:59,533 --> 00:40:02,636
<c.magenta>我女儿让我给这场演讲带一些花儿来</c>

705
00:39:59,533 --> 00:40:02,636
<c.magenta>我女儿让我给这场演讲带一些花儿来</c>

706
00:40:02,703 --> 00:40:04,538
<c.magenta>而我不想让她失望</c>

707
00:40:05,038 --> 00:40:09,943
<c.magenta>那么让我们做得更浪漫一点儿吧</c>

708
00:40:10,978 --> 00:40:15,983
<c.magenta>在那种情况下 我们再一次把它</c>

709
00:40:16,049 --> 00:40:18,752
<c.magenta>并找到交叉点来放置对象</c>

710
00:40:21,588 --> 00:40:25,259
<c.magenta>这里有一点很重要 就是这个花瓶</c>

711
00:40:25,325 --> 00:40:28,829
<c.magenta>会以现实世界的比例显示</c>

712
00:40:29,429 --> 00:40:35,335
<c.magenta>其中一个是WorldTracking</c>

713
00:40:36,036 --> 00:40:37,337
<c.magenta>第二个是</c>

714
00:40:37,404 --> 00:40:41,909
<c.magenta>3D模型其实是以现实世界的坐标</c>

715
00:40:41,975 --> 00:40:44,444
<c.magenta>那么这真的很重要</c>

716
00:40:44,511 --> 00:40:47,714
<c.magenta>你要考虑</c>

717
00:40:47,781 --> 00:40:53,220
<c.magenta>这个花瓶看起来不应该</c>

718
00:40:55,022 --> 00:40:59,226
<c.magenta>那么让我们继续放一个</c>

719
00:40:59,660 --> 00:41:01,361
<c.magenta>就是我的变色龙朋友</c>

720
00:40:59,660 --> 00:41:01,361
<c.magenta>就是我的变色龙朋友</c>

721
00:41:04,364 --> 00:41:07,367
<c.magenta>有一点很好…谢谢</c>

722
00:41:07,801 --> 00:41:11,705
<c.magenta>有一点很好</c>

723
00:41:11,772 --> 00:41:15,375
<c.magenta>当你运行WorldTracking时</c>

724
00:41:15,676 --> 00:41:20,747
<c.magenta>因此你可以让虚拟内容</c>

725
00:41:29,590 --> 00:41:30,924
<c.magenta>所以如果我移动到这儿</c>

726
00:41:32,759 --> 00:41:37,231
<c.magenta>它最终会转向我这边</c>

727
00:41:44,037 --> 00:41:47,307
<c.magenta>如果我离得再近点儿 他甚至可能会</c>

728
00:41:47,608 --> 00:41:50,611
<c.magenta>让我么来看看 它有点儿…哦！会这样</c>

729
00:41:53,847 --> 00:41:56,984
<c.magenta>变色龙还能做一件事</c>

730
00:41:57,150 --> 00:42:01,788
<c.magenta>如果我轻触他 他就会调节颜色</c>

731
00:41:57,150 --> 00:42:01,788
<c.magenta>如果我轻触他 他就会调节颜色</c>

732
00:42:03,891 --> 00:42:06,193
<c.magenta>那么我们把它变成绿色吧</c>

733
00:42:07,961 --> 00:42:12,833
<c.magenta>我们在这里有一个很棒的功能</c>

734
00:42:13,700 --> 00:42:18,906
<c.magenta>并且他会使自己适应桌子的背景颜色</c>

735
00:42:28,982 --> 00:42:31,451
<c.magenta>那么这就是我们的示例应用</c>

736
00:42:31,518 --> 00:42:33,687
<c.magenta>你可以从网站上下载</c>

737
00:42:34,221 --> 00:42:39,993
<c.magenta>并加入你自己的内容然后试试效果</c>

738
00:42:40,327 --> 00:42:44,298
<c.magenta>那么接下来</c>

739
00:42:47,734 --> 00:42:50,571
<c.magenta>渲染把追踪和场景理解</c>

740
00:42:50,637 --> 00:42:52,105
<c.magenta>与你的内容结合在一起</c>

741
00:42:52,940 --> 00:42:54,908
<c.magenta>为了用ARKit进行渲染</c>

742
00:42:54,975 --> 00:42:58,712
<c.magenta>你需要处理我们在ARFrame中</c>

743
00:43:00,113 --> 00:43:02,783
<c.magenta>如果你们用的是SceneKit和SpriteKit</c>

744
00:43:02,850 --> 00:43:05,285
<c.magenta>我们还有已经创建好的自定义视图</c>

745
00:43:05,352 --> 00:43:08,021
<c.magenta>可以为你渲染ARFrame</c>

746
00:43:09,323 --> 00:43:13,260
<c.magenta>如果你用的是metal</c>

747
00:43:13,327 --> 00:43:16,897
<c.magenta>或把ARKit整合到你现有的渲染引擎中</c>

748
00:43:16,964 --> 00:43:20,834
<c.magenta>我们提供一个模板</c>

749
00:43:20,901 --> 00:43:23,036
<c.magenta>并提供一个很好的起点</c>

750
00:43:24,004 --> 00:43:27,241
<c.magenta>让我们分别来看一下 从SceneKit开始</c>

751
00:43:28,609 --> 00:43:33,480
<c.magenta>对于SceneKit 我们提供一个ARSCNView</c>

752
00:43:34,381 --> 00:43:38,151
<c.magenta>它包含ARSession 用于更新其渲染</c>

753
00:43:39,052 --> 00:43:41,855
<c.magenta>所以这个包含在后台绘制相机图像</c>

754
00:43:42,623 --> 00:43:45,392
<c.magenta>考虑设备的旋转</c>

755
00:43:45,459 --> 00:43:47,294
<c.magenta>以及任何的[不清楚]变更</c>

756
00:43:49,263 --> 00:43:53,467
<c.magenta>接下来它根据我们在ARCamera中</c>

757
00:43:53,534 --> 00:43:55,736
<c.magenta>所提供的追踪转换更新SCNCamera</c>

758
00:43:56,670 --> 00:44:01,074
<c.magenta>你的场景保持交互</c>

759
00:43:56,670 --> 00:44:01,074
<c.magenta>你的场景保持交互</c>

760
00:44:01,141 --> 00:44:02,643
<c.magenta>通过在场景中移动它</c>

761
00:44:02,709 --> 00:44:05,712
<c.magenta>按照你在现实世界移动你设备的方式</c>

762
00:44:07,281 --> 00:44:08,815
<c.magenta>如果你使用光估计</c>

763
00:44:08,882 --> 00:44:13,620
<c.magenta>我们会自动在你的场景中</c>

764
00:44:13,687 --> 00:44:18,892
<c.magenta>那么如果你使用启用了物理光的对象</c>

765
00:44:18,959 --> 00:44:21,895
<c.magenta>你已经可以利用或自动利用</c>

766
00:44:21,962 --> 00:44:23,263
<c.magenta>光估计了</c>

767
00:44:25,866 --> 00:44:32,406
<c.magenta>ARCNView要做的另一件事就是</c>

768
00:44:32,472 --> 00:44:36,310
<c.magenta>所以你其实不需要</c>

769
00:44:36,376 --> 00:44:38,679
<c.magenta>但却可以继续使用SCNNotes</c>

770
00:44:39,613 --> 00:44:42,916
<c.magenta>意思是无论何时</c>

771
00:44:42,983 --> 00:44:45,652
<c.magenta>ARSCNView将为你创建一个节点</c>

772
00:44:45,953 --> 00:44:48,755
<c.magenta>我们每次更新ARAnchor时</c>

773
00:44:48,822 --> 00:44:52,659
<c.magenta>比如它的转换</c>

774
00:44:54,895 --> 00:44:58,165
<c.magenta>并且这是通过ARSCNView委托处理的</c>

775
00:45:00,400 --> 00:45:04,037
<c.magenta>所以每次我们向会话中添加新锚点</c>

776
00:45:05,272 --> 00:45:08,709
<c.magenta>ARSCNView将为你创建一个新SCNNode</c>

777
00:45:09,209 --> 00:45:14,114
<c.magenta>如果你想提供你自己的节点</c>

778
00:45:14,181 --> 00:45:16,283
<c.magenta>并返回给你的自定义节点</c>

779
00:45:16,783 --> 00:45:21,889
<c.magenta>之后SCNNode将被添加到场景图中</c>

780
00:45:21,955 --> 00:45:26,727
<c.magenta>并且你会收到锚点的另一个</c>

781
00:45:28,328 --> 00:45:32,199
<c.magenta>无论何时当更新节点时也同样适用</c>

782
00:45:32,266 --> 00:45:33,367
<c.magenta>那么在那种情况下</c>

783
00:45:36,270 --> 00:45:41,041
<c.magenta>DSCNNodes转换将会自动</c>

784
00:45:41,108 --> 00:45:44,678
<c.magenta>并且你将收到两个回调</c>

785
00:45:44,745 --> 00:45:47,648
<c.magenta>在更新其转换之前收到一个</c>

786
00:45:47,714 --> 00:45:50,317
<c.magenta>在更新转换之后收到一个</c>

787
00:45:52,586 --> 00:45:55,656
<c.magenta>无论何时ARAnchor被从会话中移除时</c>

788
00:45:56,657 --> 00:45:59,092
<c.magenta>我们都会自动移除相应的SCNNode</c>

789
00:45:59,159 --> 00:46:02,429
<c.magenta>从场景图中</c>

790
00:45:59,159 --> 00:46:02,429
<c.magenta>从场景图中</c>

791
00:46:02,496 --> 00:46:04,164
<c.magenta>didRemove节点</c>

792
00:46:06,166 --> 00:46:10,437
<c.magenta>那么这是SceneKit</c>

793
00:46:13,040 --> 00:46:17,544
<c.magenta>对于SpriteKit 我们提供一个ARSKview</c>

794
00:46:18,378 --> 00:46:23,016
<c.magenta>它包含ARSession 用于更新其渲染</c>

795
00:46:23,083 --> 00:46:25,819
<c.magenta>这包含在后台绘制相机图像</c>

796
00:46:26,854 --> 00:46:30,324
<c.magenta>在这种情况下</c>

797
00:46:30,624 --> 00:46:34,027
<c.magenta>所以它提供一套与SceneKit</c>

798
00:46:34,094 --> 00:46:35,095
<c.magenta>它可以使用</c>

799
00:46:36,063 --> 00:46:39,633
<c.magenta>其中一个主要的不同点是</c>

800
00:46:39,700 --> 00:46:43,937
<c.magenta>意思是我们不能更新移动中的相机</c>

801
00:46:44,271 --> 00:46:49,843
<c.magenta>那么ARKit的作用是</c>

802
00:46:49,910 --> 00:46:52,679
<c.magenta>SpriteKit视图中</c>

803
00:46:53,046 --> 00:46:55,682
<c.magenta>然后将Sprite看作</c>

804
00:46:55,749 --> 00:46:58,652
<c.magenta>在所投影的位置</c>

805
00:46:58,719 --> 00:47:01,922
<c.magenta>这意味着Sprite</c>

806
00:46:58,719 --> 00:47:01,922
<c.magenta>这意味着Sprite</c>

807
00:47:04,024 --> 00:47:08,028
<c.magenta>如果你想了解更多信息</c>

808
00:47:08,529 --> 00:47:10,831
<c.magenta>“在SpriteKit中超越2D”</c>

809
00:47:10,898 --> 00:47:14,468
<c.magenta>主要讲如何整合ARKit和SpriteKit</c>

810
00:47:17,638 --> 00:47:20,974
<c.magenta>接下来让我们看看ARKit自定义渲染</c>

811
00:47:21,041 --> 00:47:21,942
<c.magenta>使用Metal</c>

812
00:47:23,443 --> 00:47:27,948
<c.magenta>要通过ARKit进行渲染</c>

813
00:47:28,582 --> 00:47:31,084
<c.magenta>第一件是在后台绘制相机图像</c>

814
00:47:32,352 --> 00:47:36,256
<c.magenta>你通常会创建一个纹理</c>

815
00:47:37,457 --> 00:47:41,728
<c.magenta>接下来是根据我们的ARCamera</c>

816
00:47:42,296 --> 00:47:46,466
<c.magenta>这包括设置视图矩阵以及投影矩阵</c>

817
00:47:48,602 --> 00:47:52,639
<c.magenta>第三件是更新光照情况或</c>

818
00:47:52,706 --> 00:47:55,075
<c.magenta>你场景中的光照 按照我们的光估计</c>

819
00:47:55,976 --> 00:48:01,381
<c.magenta>最后如果你按照场景理解放置了几何体</c>

820
00:47:55,976 --> 00:48:01,381
<c.magenta>最后如果你按照场景理解放置了几何体</c>

821
00:48:01,448 --> 00:48:07,020
<c.magenta>那么你要使用ARAnchors</c>

822
00:48:08,121 --> 00:48:10,858
<c.magenta>全部这些信息都包含在</c>

823
00:48:11,158 --> 00:48:13,727
<c.magenta>你有两种方式来获取</c>

824
00:48:15,362 --> 00:48:19,032
<c.magenta>一种是在ARSession上</c>

825
00:48:20,000 --> 00:48:22,369
<c.magenta>那么如果你有自己的渲染循环</c>

826
00:48:22,436 --> 00:48:26,607
<c.magenta>你要使用或你可以使用</c>

827
00:48:27,307 --> 00:48:32,012
<c.magenta>然后你还应该在ARFrame上</c>

828
00:48:32,079 --> 00:48:35,148
<c.magenta>以避免多次渲染同一帧</c>

829
00:48:36,650 --> 00:48:39,486
<c.magenta>另一种方式是使用我们的会话委托</c>

830
00:48:39,953 --> 00:48:42,589
<c.magenta>它会给你提供会话didUpdate帧</c>

831
00:48:42,656 --> 00:48:44,791
<c.magenta>每当计算新帧时</c>

832
00:48:46,026 --> 00:48:50,230
<c.magenta>在那种情况下</c>

833
00:48:50,998 --> 00:48:53,467
<c.magenta>默认情况是</c>

834
00:48:53,534 --> 00:48:55,502
<c.magenta>但你还可以提供你自己的调度队列</c>

835
00:48:55,569 --> 00:48:59,940
<c.magenta>我们将用于调用这个方法</c>

836
00:49:00,741 --> 00:49:05,045
<c.magenta>那么让我们看一下更新渲染包含什么</c>

837
00:49:07,281 --> 00:49:10,284
<c.magenta>那么第一件事就是在后台绘制相机图像</c>

838
00:49:10,551 --> 00:49:14,054
<c.magenta>你可以在ARFrame上</c>

839
00:49:14,121 --> 00:49:15,689
<c.magenta>即CV像素缓冲器</c>

840
00:49:16,790 --> 00:49:20,360
<c.magenta>你可以根据这个像素缓冲器</c>

841
00:49:20,427 --> 00:49:23,096
<c.magenta>然后在后台的quad中进行绘制</c>

842
00:49:24,464 --> 00:49:29,303
<c.magenta>请注意这是一个像素缓冲器</c>

843
00:49:29,369 --> 00:49:34,141
<c.magenta>所以你不应该长时间等待太多帧</c>

844
00:49:34,208 --> 00:49:36,443
<c.magenta>否则你将停止接收更新</c>

845
00:49:38,745 --> 00:49:43,116
<c.magenta>第二件事是根据我们的ARCamera</c>

846
00:49:43,884 --> 00:49:46,053
<c.magenta>为此我们必须决定视图矩阵</c>

847
00:49:46,119 --> 00:49:47,921
<c.magenta>以及防护矩阵</c>

848
00:49:49,056 --> 00:49:52,826
<c.magenta>视图矩阵是相机转换的对立面</c>

849
00:49:53,961 --> 00:49:56,230
<c.magenta>为了生成投影矩阵</c>

850
00:49:56,296 --> 00:49:59,433
<c.magenta>我们会在ARCamera上</c>

851
00:49:59,499 --> 00:50:01,568
<c.magenta>向你提供投影矩阵</c>

852
00:49:59,499 --> 00:50:01,568
<c.magenta>向你提供投影矩阵</c>

853
00:50:03,837 --> 00:50:05,973
<c.magenta>第三部是更新光照</c>

854
00:50:07,674 --> 00:50:10,344
<c.magenta>为此只需要获取光估计属性</c>

855
00:50:10,410 --> 00:50:15,649
<c.magenta>并使用其外界强度</c>

856
00:50:17,084 --> 00:50:21,221
<c.magenta>最后应该是迭代锚点</c>

857
00:50:21,288 --> 00:50:23,957
<c.magenta>以更新几何体的转换</c>

858
00:50:24,191 --> 00:50:27,494
<c.magenta>那么你手动添加到会话中的任意锚点</c>

859
00:50:27,561 --> 00:50:29,663
<c.magenta>或已经探测出来的任意锚点</c>

860
00:50:29,730 --> 00:50:34,668
<c.magenta>或向平面探测中添加的任意锚点</c>

861
00:50:37,471 --> 00:50:42,476
<c.magenta>然后需要注意一些事情</c>

862
00:50:42,976 --> 00:50:44,645
<c.magenta>我们想看看这些</c>

863
00:50:45,479 --> 00:50:51,151
<c.magenta>那么其中一件事是所捕捉的图像</c>

864
00:50:51,218 --> 00:50:52,953
<c.magenta>总是会在同一个方向中被提供</c>

865
00:50:53,787 --> 00:50:58,425
<c.magenta>然而 如果你旋转你的物理设备</c>

866
00:50:58,492 --> 00:51:00,594
<c.magenta>与你的用户界面方向对齐</c>

867
00:50:58,492 --> 00:51:00,594
<c.magenta>与你的用户界面方向对齐</c>

868
00:51:00,661 --> 00:51:04,598
<c.magenta>并且需要应用转换 以正确地进行渲染</c>

869
00:51:06,567 --> 00:51:09,870
<c.magenta>另一件事就是相机图像的纵横比可能不</c>

870
00:51:09,937 --> 00:51:12,372
<c.magenta>必要与你的设备对齐</c>

871
00:51:12,973 --> 00:51:15,242
<c.magenta>意思是我们要考虑到这个</c>

872
00:51:15,309 --> 00:51:19,646
<c.magenta>以在屏幕中合适地渲染相机图像</c>

873
00:51:21,081 --> 00:51:23,517
<c.magenta>要修复这个或为了让这个变得更简单</c>

874
00:51:23,584 --> 00:51:25,552
<c.magenta>我们给你提供了辅助方法</c>

875
00:51:26,720 --> 00:51:31,959
<c.magenta>那么在ARFrame上有一个方法</c>

876
00:51:32,659 --> 00:51:36,463
<c.magenta>显示转换会将帧空间转换为视图空间</c>

877
00:51:36,730 --> 00:51:40,434
<c.magenta>并且你只需要把它提供给</c>

878
00:51:40,501 --> 00:51:44,938
<c.magenta>以及你的界面方向</c>

879
00:51:45,472 --> 00:51:48,375
<c.magenta>在我们的Metal示例中</c>

880
00:51:48,442 --> 00:51:51,845
<c.magenta>来调节相机背景的纹理坐标</c>

881
00:51:53,514 --> 00:51:57,784
<c.magenta>与之相配的是投影矩阵方差</c>

882
00:51:57,851 --> 00:52:00,254
<c.magenta>考虑用户界面方向</c>

883
00:51:57,851 --> 00:52:00,254
<c.magenta>考虑用户界面方向</c>

884
00:52:00,320 --> 00:52:01,889
<c.magenta>以及视见区尺寸</c>

885
00:52:02,356 --> 00:52:05,058
<c.magenta>那么你要传递这些</c>

886
00:52:05,125 --> 00:52:09,830
<c.magenta>并且你可以使用这个投影矩阵</c>

887
00:52:10,264 --> 00:52:13,100
<c.magenta>在相机图像顶部绘制你的虚拟内容</c>

888
00:52:15,869 --> 00:52:17,104
<c.magenta>那么这就是ARKit</c>

889
00:52:18,939 --> 00:52:22,409
<c.magenta>总结一下</c>

890
00:52:22,809 --> 00:52:26,380
<c.magenta>用于在iOS上创建增强现实应用</c>

891
00:52:27,948 --> 00:52:29,883
<c.magenta>我们提供了世界追踪</c>

892
00:52:29,950 --> 00:52:34,321
<c.magenta>它会给你提供你设备</c>

893
00:52:35,756 --> 00:52:38,292
<c.magenta>为了把对象放置到现实世界中</c>

894
00:52:38,358 --> 00:52:40,260
<c.magenta>我们提供了场景理解</c>

895
00:52:41,295 --> 00:52:43,697
<c.magenta>场景理解给你提供了平面探测</c>

896
00:52:43,764 --> 00:52:46,533
<c.magenta>以及碰撞测试现实世界的能力</c>

897
00:52:46,600 --> 00:52:48,302
<c.magenta>以便找到3D坐标</c>

898
00:52:48,368 --> 00:52:49,603
<c.magenta>并在那里放置对象</c>

899
00:52:50,671 --> 00:52:54,274
<c.magenta>为了改善我们增强内容的现实性</c>

900
00:52:54,341 --> 00:52:57,744
<c.magenta>我们还根据相机图像提供了光估计</c>

901
00:52:59,446 --> 00:53:02,850
<c.magenta>我们提供了自定义整合到</c>

902
00:52:59,446 --> 00:53:02,850
<c.magenta>我们提供了自定义整合到</c>

903
00:53:02,916 --> 00:53:06,186
<c.magenta>以及一个Metal模板 如果你想</c>

904
00:53:06,687 --> 00:53:09,256
<c.magenta>把ARKit整合到你自己的</c>

905
00:53:11,458 --> 00:53:14,728
<c.magenta>你可以在我们的网站上找到</c>

906
00:53:15,963 --> 00:53:19,933
<c.magenta>并且有一些</c>

907
00:53:20,000 --> 00:53:25,272
<c.magenta>他们也会讲如何</c>

908
00:53:25,706 --> 00:53:28,609
<c.magenta>还有一场来自SpriteKit团队的演讲</c>

909
00:53:28,675 --> 00:53:32,813
<c.magenta>讲通过SpriteKit使用ARKit</c>

910
00:53:33,180 --> 00:53:36,517
<c.magenta>那么我们非常激动地</c>

911
00:53:36,583 --> 00:53:38,919
<c.magenta>并且我们很期待看到</c>

912
00:53:38,986 --> 00:53:41,522
<c.magenta>你们即将用它创建出来的第一批应用</c>

913
00:53:41,588 --> 00:53:43,624
<c.magenta>请从我们的网站上下载示例代码</c>

914
00:53:43,690 --> 00:53:45,826
<c.magenta>和示例应用</c>

915
00:53:45,893 --> 00:53:49,463
<c.magenta>把你的内容加进去 看看效果如何</c>

916
00:53:49,530 --> 00:53:51,565
<c.magenta>祝玩得高兴</c>

917
00:53:52,733 --> 00:53:53,567
<c.magenta>谢谢</c>
