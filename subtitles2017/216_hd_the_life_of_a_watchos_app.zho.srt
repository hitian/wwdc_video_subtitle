1
00:00:17,017 --> 00:00:20,521
<c.magenta>（WatchOS应用的生命周期）</c>

2
00:00:22,489 --> 00:00:23,323
<c.magenta>大家好</c>

3
00:00:23,390 --> 00:00:26,293
<c.magenta>我是尼尔·德赛</c>

4
00:00:26,493 --> 00:00:30,430
<c.magenta>今天很高兴能来这里 跟大家一起探讨</c>

5
00:00:32,833 --> 00:00:38,639
<c.magenta>表应用有一个显著的功能</c>

6
00:00:39,273 --> 00:00:42,009
<c.magenta>设计巧妙的表应用</c>

7
00:00:42,075 --> 00:00:44,778
<c.magenta>有可能会成为用户手腕上的</c>

8
00:00:45,579 --> 00:00:48,382
<c.magenta>现在让我们想象一下你的用户</c>

9
00:00:48,882 --> 00:00:51,752
<c.magenta>他们想要什么</c>

10
00:00:52,486 --> 00:00:54,988
<c.magenta>也许他们想</c>

11
00:00:55,055 --> 00:00:56,523
<c.magenta>或完成一个简单的任务</c>

12
00:00:57,191 --> 00:00:58,926
<c.magenta>我们认为好的表应用</c>

13
00:00:59,193 --> 00:01:02,162
<c.magenta>是用来帮助用户</c>

14
00:00:59,193 --> 00:01:02,162
<c.magenta>是用来帮助用户</c>

15
00:01:02,429 --> 00:01:04,131
<c.magenta>以一种简单、快速的方式</c>

16
00:01:04,431 --> 00:01:06,333
<c.magenta>因此不存在什么科技</c>

17
00:01:06,633 --> 00:01:08,569
<c.magenta>用户可以正常生活和工作</c>

18
00:01:08,769 --> 00:01:10,671
<c.magenta>并享受一种更好的体验</c>

19
00:01:10,971 --> 00:01:12,606
<c.magenta>这都是因为你的应用的帮助</c>

20
00:01:14,741 --> 00:01:19,279
<c.magenta>那么今天 我们将要设计一款应用</c>

21
00:01:19,880 --> 00:01:21,515
<c.magenta>现在我们还没准备好发布它</c>

22
00:01:21,982 --> 00:01:23,483
<c.magenta>但我们可以先看一眼</c>

23
00:01:23,550 --> 00:01:25,319
<c.magenta>在watchOS 4中的一些</c>

24
00:01:25,619 --> 00:01:27,521
<c.magenta>新功能和升级</c>

25
00:01:27,721 --> 00:01:29,656
<c.magenta>这将我们的应用</c>

26
00:01:31,024 --> 00:01:35,562
<c.magenta>今天 我们将探讨 watchOS 4</c>

27
00:01:36,163 --> 00:01:37,698
<c.magenta>可以帮助我们设计应用</c>

28
00:01:38,498 --> 00:01:40,300
<c.magenta>我们将探讨一些新东西</c>

29
00:01:40,501 --> 00:01:41,435
<c.magenta>比如我们的新…</c>

30
00:01:43,437 --> 00:01:45,072
<c.magenta>统一的进程运行时间</c>

31
00:01:45,472 --> 00:01:48,709
<c.magenta>我们将在应用中获得一些</c>

32
00:01:48,775 --> 00:01:51,311
<c.magenta>很棒的性能改善 而且我将展示</c>

33
00:01:53,680 --> 00:01:56,383
<c.magenta>我们还会谈谈</c>

34
00:01:56,817 --> 00:01:58,585
<c.magenta>我们可以利用这个状态</c>

35
00:01:58,986 --> 00:02:01,522
<c.magenta>来为我们的用户创建一种</c>

36
00:01:58,986 --> 00:02:01,522
<c.magenta>来为我们的用户创建一种</c>

37
00:02:04,057 --> 00:02:05,592
<c.magenta>此外 我们还要谈谈</c>

38
00:02:05,659 --> 00:02:08,628
<c.magenta>我们对后台应用刷新</c>

39
00:02:08,895 --> 00:02:10,864
<c.magenta>以及我们要如何利用</c>

40
00:02:12,966 --> 00:02:15,002
<c.magenta>最后 我们要谈谈</c>

41
00:02:15,068 --> 00:02:18,839
<c.magenta>watchOS 4中的一些</c>

42
00:02:19,006 --> 00:02:21,175
<c.magenta>以及如何在我们的应用中</c>

43
00:02:22,142 --> 00:02:23,844
<c.magenta>那么 让我们开始吧</c>

44
00:02:23,911 --> 00:02:27,748
<c.magenta>先来看新的</c>

45
00:02:28,582 --> 00:02:31,418
<c.magenta>那么 我们已经设计了</c>

46
00:02:31,585 --> 00:02:33,987
<c.magenta>可以帮助你的应用变得更快速</c>

47
00:02:34,188 --> 00:02:35,989
<c.magenta>更能响应你的用户</c>

48
00:02:36,523 --> 00:02:38,292
<c.magenta>那么 现在让我们回顾一下</c>

49
00:02:38,358 --> 00:02:41,495
<c.magenta>历史 以及看我们进行到哪一步了</c>

50
00:02:43,897 --> 00:02:46,300
<c.magenta>那么在watchOS 3中</c>

51
00:02:46,366 --> 00:02:49,002
<c.magenta>是在应用进程中</c>

52
00:02:49,269 --> 00:02:52,039
<c.magenta>而你们的代码</c>

53
00:02:52,406 --> 00:02:54,308
<c.magenta>那么我们就有两个</c>

54
00:02:54,374 --> 00:02:56,210
<c.magenta>这种情况是完全</c>

55
00:02:57,444 --> 00:02:59,246
<c.magenta>因此 我们修改了</c>

56
00:02:59,313 --> 00:03:01,215
<c.magenta>并统一了进程运行时间</c>

57
00:02:59,313 --> 00:03:01,215
<c.magenta>并统一了进程运行时间</c>

58
00:03:02,115 --> 00:03:05,052
<c.magenta>所以 现在UI和扩展代码</c>

59
00:03:05,319 --> 00:03:07,588
<c.magenta>都在同一个进程中执行</c>

60
00:03:08,288 --> 00:03:09,790
<c.magenta>现在 你可能在想</c>

61
00:03:09,857 --> 00:03:11,692
<c.magenta>我们为什么要这样做？</c>

62
00:03:13,460 --> 00:03:14,795
<c.magenta>那么最终</c>

63
00:03:14,862 --> 00:03:19,066
<c.magenta>我们想要改善 全部WatchKit应用</c>

64
00:03:19,366 --> 00:03:22,603
<c.magenta>因此用户可以拥有</c>

65
00:03:23,237 --> 00:03:26,907
<c.magenta>我很高兴地跟大家宣布</c>

66
00:03:28,075 --> 00:03:30,077
<c.magenta>我们可以看到</c>

67
00:03:30,143 --> 00:03:33,413
<c.magenta>在某些情况下</c>

68
00:03:33,981 --> 00:03:37,050
<c.magenta>那么 从用户实际</c>

69
00:03:37,117 --> 00:03:38,952
<c.magenta>一直到调用你的代码</c>

70
00:03:39,253 --> 00:03:41,088
<c.magenta>我们已经看到了一个极大的改进</c>

71
00:03:42,523 --> 00:03:43,590
<c.magenta>又比如说</c>

72
00:03:43,657 --> 00:03:46,026
<c.magenta>当关联到通用的拖动手势时</c>

73
00:03:46,260 --> 00:03:48,428
<c.magenta>我们可以看到</c>

74
00:03:48,962 --> 00:03:51,999
<c.magenta>并且我们也期待</c>

75
00:03:53,500 --> 00:03:56,870
<c.magenta>现在 因为我们只有一个进程</c>

76
00:03:57,104 --> 00:04:00,440
<c.magenta>和你的扩展代码</c>

77
00:03:57,104 --> 00:04:00,440
<c.magenta>和你的扩展代码</c>

78
00:04:00,841 --> 00:04:01,875
<c.magenta>来解决这个问题</c>

79
00:04:03,010 --> 00:04:03,944
<c.magenta>你可能在想</c>

80
00:04:04,011 --> 00:04:06,213
<c.magenta>我们在内部</c>

81
00:04:06,547 --> 00:04:09,216
<c.magenta>那么你们需要怎样修改应用</c>

82
00:04:09,550 --> 00:04:11,318
<c.magenta>以采用这种新机制呢？</c>

83
00:04:11,685 --> 00:04:12,686
<c.magenta>最妙的是</c>

84
00:04:13,120 --> 00:04:15,489
<c.magenta>实际上不需要做任何修改</c>

85
00:04:16,190 --> 00:04:18,458
<c.magenta>那么 你们肯定</c>

86
00:04:18,825 --> 00:04:22,829
<c.magenta>App Store中的全部</c>

87
00:04:23,096 --> 00:04:27,100
<c.magenta>都能得到这种升级 只要你的用户</c>

88
00:04:27,768 --> 00:04:31,705
<c.magenta>这种新的统一进程运行时间</c>

89
00:04:32,873 --> 00:04:35,943
<c.magenta>只要你的应用是建立在</c>

90
00:04:36,210 --> 00:04:38,011
<c.magenta>你就不需要做任何事</c>

91
00:04:38,812 --> 00:04:41,982
<c.magenta>那么 这就意味着</c>

92
00:04:42,382 --> 00:04:45,752
<c.magenta>不需要在XCode中</c>

93
00:04:46,019 --> 00:04:47,421
<c.magenta>就这么管用了</c>

94
00:04:49,590 --> 00:04:53,026
<c.magenta>现在 让我们谈谈</c>

95
00:04:54,127 --> 00:04:58,198
<c.magenta>在手表上 用户在数秒钟内</c>

96
00:04:58,532 --> 00:05:00,434
<c.magenta>他们就放下手腕</c>

97
00:04:58,532 --> 00:05:00,434
<c.magenta>他们就放下手腕</c>

98
00:05:00,501 --> 00:05:04,171
<c.magenta>期待应用完成</c>

99
00:05:05,339 --> 00:05:08,175
<c.magenta>很多时候</c>

100
00:05:08,408 --> 00:05:11,478
<c.magenta>看到应用已经完成了</c>

101
00:05:11,545 --> 00:05:14,414
<c.magenta>并且期待这种感觉像是魔法一样</c>

102
00:05:15,315 --> 00:05:17,551
<c.magenta>并且用户不应该</c>

103
00:05:17,618 --> 00:05:20,187
<c.magenta>因为应用需要完成</c>

104
00:05:20,521 --> 00:05:23,190
<c.magenta>并且这对于我们的用户来说</c>

105
00:05:24,124 --> 00:05:25,826
<c.magenta>所以我们思考了很多</c>

106
00:05:25,893 --> 00:05:28,629
<c.magenta>关于我们可以给</c>

107
00:05:28,962 --> 00:05:32,232
<c.magenta>以帮助完成</c>

108
00:05:33,433 --> 00:05:36,937
<c.magenta>那么今天</c>

109
00:05:37,137 --> 00:05:38,939
<c.magenta>我们把它叫作</c>

110
00:05:39,540 --> 00:05:41,875
<c.magenta>可以帮助你设计</c>

111
00:05:44,478 --> 00:05:47,347
<c.magenta>那么我们就不要再啰嗦了</c>

112
00:05:47,981 --> 00:05:49,783
<c.magenta>那么 这款应用叫作</c>

113
00:05:50,884 --> 00:05:53,387
<c.magenta>Apple Pie Me</c>

114
00:05:53,887 --> 00:05:55,856
<c.magenta>那么 这是一种外卖服务</c>

115
00:05:55,923 --> 00:05:58,592
<c.magenta>无论你在哪里都能</c>

116
00:05:59,059 --> 00:06:01,228
<c.magenta>那么一天吃一个苹果派</c>

117
00:05:59,059 --> 00:06:01,228
<c.magenta>那么一天吃一个苹果派</c>

118
00:06:01,662 --> 00:06:04,464
<c.magenta>我想是的 至少我真心希望这是真的</c>

119
00:06:04,531 --> 00:06:07,401
<c.magenta>因为我每天都会吃一个苹果派</c>

120
00:06:07,467 --> 00:06:08,669
<c.magenta>美味无比啊</c>

121
00:06:09,837 --> 00:06:11,338
<c.magenta>而且我非常忙</c>

122
00:06:11,572 --> 00:06:14,174
<c.magenta>我总是想能快速地</c>

123
00:06:14,241 --> 00:06:16,009
<c.magenta>并且送到我所在的地方</c>

124
00:06:16,710 --> 00:06:19,446
<c.magenta>而且 最重要的是</c>

125
00:06:19,746 --> 00:06:22,482
<c.magenta>然后我就可以放下手腕</c>

126
00:06:23,183 --> 00:06:27,387
<c.magenta>在watchOS 3中</c>

127
00:06:27,688 --> 00:06:30,090
<c.magenta>但在watchOS 4中</c>

128
00:06:30,157 --> 00:06:32,226
<c.magenta>以及如何让用户感到震惊</c>

129
00:06:32,292 --> 00:06:34,161
<c.magenta>通过我们的新功能</c>

130
00:06:36,496 --> 00:06:38,966
<c.magenta>那么 为了帮助我解释</c>

131
00:06:39,132 --> 00:06:43,003
<c.magenta>我们要谈一下 手表上的应用状态</c>

132
00:06:44,004 --> 00:06:45,806
<c.magenta>“frontmost”这个术语</c>

133
00:06:46,340 --> 00:06:48,775
<c.magenta>你即将获得的</c>

134
00:06:49,276 --> 00:06:52,913
<c.magenta>最后我们还要具体看一下</c>

135
00:06:55,449 --> 00:06:57,718
<c.magenta>那么 比如说</c>

136
00:06:58,051 --> 00:07:01,421
<c.magenta>那么在这里 应用已经在前台了</c>

137
00:06:58,051 --> 00:07:01,421
<c.magenta>那么在这里 应用已经在前台了</c>

138
00:07:01,622 --> 00:07:04,057
<c.magenta>那在这种情况下</c>

139
00:07:04,124 --> 00:07:05,392
<c.magenta>（活跃的</c>

140
00:07:05,459 --> 00:07:08,395
<c.magenta>那么现在 比如说用户</c>

141
00:07:09,296 --> 00:07:13,400
<c.magenta>那么在这种情况下</c>

142
00:07:13,867 --> 00:07:16,503
<c.magenta>例如 你的应用</c>

143
00:07:16,570 --> 00:07:18,605
<c.magenta>可能会运行界面元素的更新</c>

144
00:07:20,340 --> 00:07:22,609
<c.magenta>现在 比如说用户</c>

145
00:07:23,710 --> 00:07:25,646
<c.magenta>那么 我们又在前台保持活跃了</c>

146
00:07:25,913 --> 00:07:27,548
<c.magenta>现在用户正在使用应用</c>

147
00:07:27,814 --> 00:07:29,917
<c.magenta>但他们决定要放下手腕</c>

148
00:07:30,317 --> 00:07:31,485
<c.magenta>那么屏幕就关闭了</c>

149
00:07:32,186 --> 00:07:35,422
<c.magenta>而你的应用也因为如此</c>

150
00:07:35,956 --> 00:07:38,792
<c.magenta>然而 因为你的应用</c>

151
00:07:38,892 --> 00:07:40,260
<c.magenta>它是一个处于最前端的应用</c>

152
00:07:41,161 --> 00:07:45,265
<c.magenta>所以当用户再次抬起手腕时</c>

153
00:07:45,499 --> 00:07:46,800
<c.magenta>而不是表盘</c>

154
00:07:48,435 --> 00:07:51,738
<c.magenta>在这个时间段内 我们就把你的应用</c>

155
00:07:52,873 --> 00:07:56,009
<c.magenta>那么现在</c>

156
00:07:56,210 --> 00:07:58,445
<c.magenta>应用状态应该是后台</c>

157
00:07:59,012 --> 00:08:01,949
<c.magenta>而你可能在想到底该如何</c>

158
00:07:59,012 --> 00:08:01,949
<c.magenta>而你可能在想到底该如何</c>

159
00:08:02,015 --> 00:08:04,284
<c.magenta>或应用要在前台</c>

160
00:08:05,919 --> 00:08:08,222
<c.magenta>那么 对于全部应用来说</c>

161
00:08:09,256 --> 00:08:12,426
<c.magenta>然而 如果用户期待</c>

162
00:08:12,860 --> 00:08:15,462
<c.magenta>当他们再次抬起手腕时</c>

163
00:08:15,596 --> 00:08:17,464
<c.magenta>那么你可以使用一个新的API</c>

164
00:08:17,531 --> 00:08:20,000
<c.magenta>来延伸这个超时时间</c>

165
00:08:21,168 --> 00:08:22,369
<c.magenta>那么比如说</c>

166
00:08:22,436 --> 00:08:24,838
<c.magenta>在行驶过程中 若你是一个拼车应用</c>

167
00:08:25,272 --> 00:08:27,641
<c.magenta>那么在frontmost状态时</c>

168
00:08:27,708 --> 00:08:29,943
<c.magenta>因为用户很可能期待</c>

169
00:08:30,244 --> 00:08:33,547
<c.magenta>看到你的应用</c>

170
00:08:34,948 --> 00:08:39,686
<c.magenta>然而 在很多情况下</c>

171
00:08:39,753 --> 00:08:44,157
<c.magenta>你可能会不知不觉地 惹恼你的用户</c>

172
00:08:44,491 --> 00:08:49,263
<c.magenta>那么 请时刻确保要关掉应用</c>

173
00:08:49,396 --> 00:08:51,164
<c.magenta>当你不再需要这种体验时</c>

174
00:08:52,766 --> 00:08:56,570
<c.magenta>那么让我们来看看代码</c>

175
00:08:58,739 --> 00:08:59,873
<c.magenta>非常简单</c>

176
00:08:59,940 --> 00:09:02,409
<c.magenta>这是WKExtension上的一个</c>

177
00:08:59,940 --> 00:09:02,409
<c.magenta>这是WKExtension上的一个</c>

178
00:09:02,576 --> 00:09:05,112
<c.magenta>当我们想获得八分钟时</c>

179
00:09:05,379 --> 00:09:07,714
<c.magenta>而当我们想返回到</c>

180
00:09:07,781 --> 00:09:09,116
<c.magenta>我们只需要把它设为假即可</c>

181
00:09:12,252 --> 00:09:14,655
<c.magenta>那么 我还想提的一点是</c>

182
00:09:14,922 --> 00:09:17,824
<c.magenta>如果用户抬起手腕</c>

183
00:09:18,058 --> 00:09:21,195
<c.magenta>然后超时时间就被重设了</c>

184
00:09:22,095 --> 00:09:24,765
<c.magenta>…你是否使用frontmost延伸API</c>

185
00:09:25,732 --> 00:09:29,436
<c.magenta>从根本上来说 如果用户仍然</c>

186
00:09:29,670 --> 00:09:31,238
<c.magenta>你的应用将会保持</c>

187
00:09:34,274 --> 00:09:36,877
<c.magenta>那么现在我们知道</c>

188
00:09:36,944 --> 00:09:38,545
<c.magenta>但这到底意味着什么呢？</c>

189
00:09:38,645 --> 00:09:40,814
<c.magenta>比如 这个新状态</c>

190
00:09:41,481 --> 00:09:44,017
<c.magenta>嗯 让我们来看一些增强的功能</c>

191
00:09:46,119 --> 00:09:50,090
<c.magenta>那么 我们修改了</c>

192
00:09:50,157 --> 00:09:51,992
<c.magenta>和NSURLSession的概念</c>

193
00:09:52,192 --> 00:09:55,095
<c.magenta>那么 我们现在已经</c>

194
00:09:55,596 --> 00:09:58,966
<c.magenta>我们还修改了一下</c>

195
00:09:59,666 --> 00:10:01,201
<c.magenta>然后 我们还允许在这种</c>

196
00:09:59,666 --> 00:10:01,201
<c.magenta>然后 我们还允许在这种</c>

197
00:10:01,268 --> 00:10:02,903
<c.magenta>frontmost状态下</c>

198
00:10:03,203 --> 00:10:06,173
<c.magenta>最后 还有一条frontmost通知</c>

199
00:10:06,306 --> 00:10:09,977
<c.magenta>以便我们可以通过</c>

200
00:10:10,043 --> 00:10:11,745
<c.magenta>并选择最恰当的用户体验</c>

201
00:10:13,547 --> 00:10:14,681
<c.magenta>那么 让我们具体来看一下</c>

202
00:10:15,182 --> 00:10:17,017
<c.magenta>那么对于WatchConnectivity</c>

203
00:10:17,084 --> 00:10:20,787
<c.magenta>我们修改了</c>

204
00:10:21,321 --> 00:10:24,525
<c.magenta>那么当你在手机的</c>

205
00:10:24,591 --> 00:10:27,327
<c.magenta>迁移用户信息或迁移文件</c>

206
00:10:27,628 --> 00:10:30,364
<c.magenta>这个请求 当你从手机上</c>

207
00:10:30,664 --> 00:10:33,867
<c.magenta>它就会这样实现</c>

208
00:10:34,101 --> 00:10:35,702
<c.magenta>然后再提交你的有效数据</c>

209
00:10:37,204 --> 00:10:41,808
<c.magenta>其中我想提的一点</c>

210
00:10:42,009 --> 00:10:43,810
<c.magenta>就是当你处于</c>

211
00:10:43,944 --> 00:10:45,913
<c.magenta>是不会发送信息的</c>

212
00:10:46,113 --> 00:10:48,048
<c.magenta>因为你的应用状态改成了后台</c>

213
00:10:48,949 --> 00:10:51,752
<c.magenta>那么请一定要确保</c>

214
00:10:51,952 --> 00:10:53,820
<c.magenta>然后才能允许你发送信息</c>

215
00:10:55,189 --> 00:10:57,891
<c.magenta>并且顺着WatchConnectivity</c>

216
00:10:58,125 --> 00:11:00,494
<c.magenta>我们还修改了</c>

217
00:10:58,125 --> 00:11:00,494
<c.magenta>我们还修改了</c>

218
00:11:00,561 --> 00:11:01,862
<c.magenta>NSURLSession</c>

219
00:11:02,429 --> 00:11:04,932
<c.magenta>那么当我们有后台下载时</c>

220
00:11:04,998 --> 00:11:07,334
<c.magenta>比如说 系统正在替我们下载</c>

221
00:11:08,168 --> 00:11:09,570
<c.magenta>那么当系统完成后</c>

222
00:11:09,636 --> 00:11:11,805
<c.magenta>它会自动唤醒我们的应用</c>

223
00:11:11,872 --> 00:11:13,240
<c.magenta>如果我们正处于</c>

224
00:11:13,440 --> 00:11:16,710
<c.magenta>并直接将数据提交给我们的应用</c>

225
00:11:18,345 --> 00:11:22,015
<c.magenta>当然 对于NSURLSession</c>

226
00:11:22,249 --> 00:11:23,217
<c.magenta>其中有恢复</c>

227
00:11:23,283 --> 00:11:27,221
<c.magenta>当系统彻底下载完</c>

228
00:11:27,554 --> 00:11:30,991
<c.magenta>然后就是</c>

229
00:11:32,392 --> 00:11:35,629
<c.magenta>那么在大部分情况下</c>

230
00:11:36,163 --> 00:11:39,967
<c.magenta>但在很罕见的情况下</c>

231
00:11:40,234 --> 00:11:42,302
<c.magenta>但这是非常罕见的情况</c>

232
00:11:43,437 --> 00:11:45,672
<c.magenta>如果你用过</c>

233
00:11:45,973 --> 00:11:49,376
<c.magenta>很可能今天在座的各位</c>

234
00:11:49,443 --> 00:11:51,812
<c.magenta>在frontmost状态时</c>

235
00:11:52,212 --> 00:11:58,652
<c.magenta>完全取决于连通性的</c>

236
00:11:58,952 --> 00:12:01,855
<c.magenta>将彻底改变手表的设计美化</c>

237
00:11:58,952 --> 00:12:01,855
<c.magenta>将彻底改变手表的设计美化</c>

238
00:12:01,922 --> 00:12:02,756
<c.magenta>同时</c>

239
00:12:02,990 --> 00:12:06,527
<c.magenta>此外 通过WatchConnectivity</c>

240
00:12:09,563 --> 00:12:11,865
<c.magenta>那么 另外一点就是</c>

241
00:12:12,833 --> 00:12:14,434
<c.magenta>用户可能会放下手腕</c>

242
00:12:14,501 --> 00:12:18,238
<c.magenta>在那种情况下</c>

243
00:12:18,739 --> 00:12:21,074
<c.magenta>但你可能需要</c>

244
00:12:21,141 --> 00:12:23,977
<c.magenta>那么比如说需要关闭数据库</c>

245
00:12:24,545 --> 00:12:27,614
<c.magenta>那么你就可以</c>

246
00:12:27,681 --> 00:12:30,017
<c.magenta>来实时失效活动API</c>

247
00:12:30,317 --> 00:12:33,387
<c.magenta>当在前台启动时</c>

248
00:12:33,754 --> 00:12:36,156
<c.magenta>当在后台启动时</c>

249
00:12:36,557 --> 00:12:39,092
<c.magenta>那么比如说</c>

250
00:12:39,159 --> 00:12:42,262
<c.magenta>也许你正在更新界面元素</c>

251
00:12:42,429 --> 00:12:45,032
<c.magenta>你只需要一小点</c>

252
00:12:45,499 --> 00:12:46,600
<c.magenta>那么 你就可以使用</c>

253
00:12:46,667 --> 00:12:49,670
<c.magenta>NSProcessInfo类来获得</c>

254
00:12:50,871 --> 00:12:54,341
<c.magenta>现在 当你处于 frontmost状态时</c>

255
00:12:54,741 --> 00:12:58,512
<c.magenta>然后…会提高你的系统优先级</c>

256
00:12:58,946 --> 00:13:01,815
<c.magenta>因为系统相信你的应用对于</c>

257
00:12:58,946 --> 00:13:01,815
<c.magenta>因为系统相信你的应用对于</c>

258
00:13:01,882 --> 00:13:05,118
<c.magenta>用户来说更重要 因为它仍然</c>

259
00:13:05,452 --> 00:13:07,754
<c.magenta>系统的优先级会提高</c>

260
00:13:07,988 --> 00:13:10,757
<c.magenta>所以你就更有可能获得</c>

261
00:13:10,991 --> 00:13:13,727
<c.magenta>为用户完成任务所需要的运行时间了</c>

262
00:13:16,930 --> 00:13:20,868
<c.magenta>处于frontmost状态的</c>

263
00:13:21,335 --> 00:13:23,403
<c.magenta>所以当你因为其它原因</c>

264
00:13:23,470 --> 00:13:25,105
<c.magenta>你可以简单地实施一个力触觉</c>

265
00:13:26,073 --> 00:13:26,907
<c.magenta>谢谢大家</c>

266
00:13:30,277 --> 00:13:33,514
<c.magenta>那么有时候力触觉 可能会有一点儿</c>

267
00:13:33,580 --> 00:13:37,718
<c.magenta>现在让我进一步</c>

268
00:13:37,851 --> 00:13:39,920
<c.magenta>那么如果是力触觉</c>

269
00:13:39,987 --> 00:13:43,123
<c.magenta>比如说正在用扬声器播放音频</c>

270
00:13:43,190 --> 00:13:45,792
<c.magenta>那么只能实施</c>

271
00:13:46,059 --> 00:13:47,895
<c.magenta>并且会避开现在正在播放的东西</c>

272
00:13:48,629 --> 00:13:51,098
<c.magenta>如果正在使用蓝牙耳机播放音频</c>

273
00:13:51,298 --> 00:13:53,967
<c.magenta>并且屏幕亮着</c>

274
00:13:54,368 --> 00:13:56,970
<c.magenta>如果屏幕关闭</c>

275
00:13:57,137 --> 00:14:00,174
<c.magenta>因为播放音频</c>

276
00:13:57,137 --> 00:14:00,174
<c.magenta>因为播放音频</c>

277
00:14:03,010 --> 00:14:05,279
<c.magenta>最后 处于</c>

278
00:14:05,345 --> 00:14:08,482
<c.magenta>就是当你接收远程</c>

279
00:14:08,549 --> 00:14:12,452
<c.magenta>通过用户通知框架</c>

280
00:14:12,819 --> 00:14:15,656
<c.magenta>然后你就可以决定对你的用户来说</c>

281
00:14:16,089 --> 00:14:20,460
<c.magenta>那么也许你只是想 更新你的UI</c>

282
00:14:20,527 --> 00:14:22,296
<c.magenta>但现在你有其它选择了</c>

283
00:14:23,897 --> 00:14:27,067
<c.magenta>那么你的应用将会被调用</c>

284
00:14:27,134 --> 00:14:28,368
<c.magenta>userNotification</c>

285
00:14:28,569 --> 00:14:31,171
<c.magenta>willPresent notification</c>

286
00:14:32,940 --> 00:14:35,175
<c.magenta>并且所有这些好处的关键是</c>

287
00:14:35,242 --> 00:14:38,078
<c.magenta>这可以真正改变设计美化</c>

288
00:14:38,412 --> 00:14:41,615
<c.magenta>其中最棒的是</c>

289
00:14:42,282 --> 00:14:44,785
<c.magenta>所以如果你的应用有</c>

290
00:14:44,852 --> 00:14:46,854
<c.magenta>或NSURLSession恢复</c>

291
00:14:47,020 --> 00:14:49,089
<c.magenta>你的应用现在可以</c>

292
00:14:49,756 --> 00:14:52,659
<c.magenta>如果你的应用实施</c>

293
00:14:53,026 --> 00:14:55,362
<c.magenta>你现在可以免费</c>

294
00:14:56,096 --> 00:14:57,764
<c.magenta>同时 假如 比如说</c>

295
00:14:57,831 --> 00:15:02,202
<c.magenta>你想使用一个NSProcessInfo</c>

296
00:14:57,831 --> 00:15:02,202
<c.magenta>你想使用一个NSProcessInfo</c>

297
00:15:02,269 --> 00:15:05,205
<c.magenta>来完成applicationWillEnter</c>

298
00:15:05,572 --> 00:15:07,674
<c.magenta>你将获得</c>

299
00:15:08,675 --> 00:15:11,011
<c.magenta>在watchOS 4中</c>

300
00:15:11,278 --> 00:15:15,916
<c.magenta>而且你现有的原生应用</c>

301
00:15:15,983 --> 00:15:17,651
<c.magenta>可操作性更强</c>

302
00:15:18,252 --> 00:15:21,321
<c.magenta>而且通过我们刚才说过的</c>

303
00:15:21,588 --> 00:15:23,857
<c.magenta>应用的响应性将会变得更迅速</c>

304
00:15:24,858 --> 00:15:27,861
<c.magenta>但是 我们希望你们可以进一步考虑</c>

305
00:15:28,695 --> 00:15:31,431
<c.magenta>现在你的应用可以</c>

306
00:15:31,498 --> 00:15:33,767
<c.magenta>如果你考虑</c>

307
00:15:34,668 --> 00:15:37,738
<c.magenta>你需要架构你的应用</c>

308
00:15:38,939 --> 00:15:42,009
<c.magenta>所以现在 让我们通过</c>

309
00:15:42,209 --> 00:15:45,612
<c.magenta>并且开始架构我们的应用</c>

310
00:15:46,280 --> 00:15:49,416
<c.magenta>现在 让我们回顾一下</c>

311
00:15:49,483 --> 00:15:51,051
<c.magenta>从用户的视角</c>

312
00:15:53,053 --> 00:15:55,756
<c.magenta>那么我们现在是在用户的时间轴上</c>

313
00:15:56,089 --> 00:15:58,392
<c.magenta>而实际上</c>

314
00:15:58,692 --> 00:16:00,327
<c.magenta>然后他们会吃掉苹果派</c>

315
00:15:58,692 --> 00:16:00,327
<c.magenta>然后他们会吃掉苹果派</c>

316
00:16:00,861 --> 00:16:02,095
<c.magenta>有时候在这期间</c>

317
00:16:02,162 --> 00:16:03,964
<c.magenta>他们会想浏览订单的状态</c>

318
00:16:04,565 --> 00:16:06,967
<c.magenta>所以从用户的视角来说</c>

319
00:16:07,568 --> 00:16:10,737
<c.magenta>但现在 让我们从应用的视角</c>

320
00:16:12,940 --> 00:16:15,142
<c.magenta>那么当按下订购按钮时</c>

321
00:16:15,309 --> 00:16:17,411
<c.magenta>我们将会把订单</c>

322
00:16:18,011 --> 00:16:22,216
<c.magenta>最终 当餐厅正常收到请求时</c>

323
00:16:22,883 --> 00:16:26,186
<c.magenta>我们就知道 苹果派正在烹制中</c>

324
00:16:26,620 --> 00:16:28,388
<c.magenta>然后 我们还想告诉用户</c>

325
00:16:28,722 --> 00:16:33,160
<c.magenta>配送员正在路上</c>

326
00:16:34,161 --> 00:16:35,996
<c.magenta>让我们进一步分解</c>

327
00:16:36,063 --> 00:16:36,997
<c.magenta>逐步来看</c>

328
00:16:39,132 --> 00:16:43,003
<c.magenta>那么我们现在 看的是接收订单</c>

329
00:16:43,604 --> 00:16:47,474
<c.magenta>一旦用户轻触订购按钮</c>

330
00:16:48,575 --> 00:16:50,611
<c.magenta>我们将把订单</c>

331
00:16:50,677 --> 00:16:53,680
<c.magenta>并且不能保证 会立即得到反馈</c>

332
00:16:54,381 --> 00:16:58,519
<c.magenta>并且 我们会不会 显示这样的东西</c>

333
00:16:59,086 --> 00:17:02,222
<c.magenta>那么 有时候加载指示器</c>

334
00:16:59,086 --> 00:17:02,222
<c.magenta>那么 有时候加载指示器</c>

335
00:17:02,289 --> 00:17:05,157
<c.magenta>但在这种情况下</c>

336
00:17:05,259 --> 00:17:09,630
<c.magenta>我可能会看到这个 然后我可能会想</c>

337
00:17:09,963 --> 00:17:11,565
<c.magenta>“我需要抬多久呢？”</c>

338
00:17:12,031 --> 00:17:14,233
<c.magenta>这真的不是一种</c>

339
00:17:15,202 --> 00:17:18,038
<c.magenta>相反 我们实际上可以</c>

340
00:17:18,472 --> 00:17:20,741
<c.magenta>所以 嘿 如果派准备好了</c>

341
00:17:21,008 --> 00:17:24,444
<c.magenta>然后用户就知道 他们可以放下手腕了</c>

342
00:17:26,946 --> 00:17:29,416
<c.magenta>那么 现在我们了解了</c>

343
00:17:29,483 --> 00:17:32,753
<c.magenta>我们知道我们只想立即</c>

344
00:17:33,153 --> 00:17:36,890
<c.magenta>所以现在</c>

345
00:17:38,392 --> 00:17:42,329
<c.magenta>那么 我们想使用NSURLSession</c>

346
00:17:42,930 --> 00:17:45,165
<c.magenta>而且我们还想延伸超时时间</c>

347
00:17:45,632 --> 00:17:47,434
<c.magenta>然后就是更新我们的UI</c>

348
00:17:48,202 --> 00:17:52,673
<c.magenta>最后 有时候我们的服务器</c>

349
00:17:52,739 --> 00:17:56,376
<c.magenta>或者出了什么毛病</c>

350
00:17:58,111 --> 00:18:01,949
<c.magenta>所以 我们需要一种机制</c>

351
00:17:58,111 --> 00:18:01,949
<c.magenta>所以 我们需要一种机制</c>

352
00:18:02,015 --> 00:18:04,184
<c.magenta>比如 从现在开始的五分钟后</c>

353
00:18:04,585 --> 00:18:07,788
<c.magenta>而且 我们还需要</c>

354
00:18:08,422 --> 00:18:12,793
<c.magenta>或者一些无论是否 处于frontmost状态</c>

355
00:18:14,628 --> 00:18:17,197
<c.magenta>我们还需要一些</c>

356
00:18:18,131 --> 00:18:20,367
<c.magenta>所以 如果你正在考虑本地通知</c>

357
00:18:20,434 --> 00:18:21,735
<c.magenta>那么你是完全正确的</c>

358
00:18:22,402 --> 00:18:24,505
<c.magenta>我们可以只显示一条本地通知</c>

359
00:18:24,571 --> 00:18:26,273
<c.magenta>“哦 不！可能出错了 ”</c>

360
00:18:26,473 --> 00:18:29,209
<c.magenta>然后 用户只需要</c>

361
00:18:29,610 --> 00:18:33,647
<c.magenta>就能获得另一个苹果派</c>

362
00:18:33,714 --> 00:18:35,682
<c.magenta>并进入应用查看</c>

363
00:18:37,518 --> 00:18:39,520
<c.magenta>让我们添加这最后一步</c>

364
00:18:40,654 --> 00:18:44,391
<c.magenta>现在 让我们来看一些代码</c>

365
00:18:47,027 --> 00:18:48,695
<c.magenta>那么现在我们</c>

366
00:18:48,762 --> 00:18:50,631
<c.magenta>当按下订购按钮后</c>

367
00:18:51,298 --> 00:18:53,500
<c.magenta>然后我们只想抓取后台会话</c>

368
00:18:53,567 --> 00:18:56,069
<c.magenta>然后我们希望将订单</c>

369
00:18:56,770 --> 00:18:59,006
<c.magenta>然后因为有一个合理的期待</c>

370
00:18:59,206 --> 00:19:01,608
<c.magenta>用户想再次抬起手腕时</c>

371
00:18:59,206 --> 00:19:01,608
<c.magenta>用户想再次抬起手腕时</c>

372
00:19:01,675 --> 00:19:03,410
<c.magenta>因为他们刚按下了订购按钮</c>

373
00:19:03,810 --> 00:19:06,380
<c.magenta>那么我们就需要延伸</c>

374
00:19:07,581 --> 00:19:10,517
<c.magenta>然后 我们要触发那个</c>

375
00:19:10,584 --> 00:19:12,819
<c.magenta>我们的后备本地通知</c>

376
00:19:13,320 --> 00:19:15,589
<c.magenta>然后我们就想重新加载新的UI</c>

377
00:19:18,759 --> 00:19:21,028
<c.magenta>太棒了 那么现在</c>

378
00:19:21,094 --> 00:19:23,630
<c.magenta>并且最终我们会发送</c>

379
00:19:23,830 --> 00:19:25,098
<c.magenta>当派正在烹制时</c>

380
00:19:25,866 --> 00:19:28,535
<c.magenta>所以现在 比如说我们的用户</c>

381
00:19:28,602 --> 00:19:31,038
<c.magenta>在我们收到订单后</c>

382
00:19:32,706 --> 00:19:35,976
<c.magenta>那么 在我们发送</c>

383
00:19:36,243 --> 00:19:38,445
<c.magenta>我们希望应用处于</c>

384
00:19:39,179 --> 00:19:43,016
<c.magenta>但实际上 我们作为开发人员</c>

385
00:19:43,083 --> 00:19:46,220
<c.magenta>何时会放下手腕</c>

386
00:19:46,486 --> 00:19:50,557
<c.magenta>下一个事件真的非常重要</c>

387
00:19:50,624 --> 00:19:52,926
<c.magenta>是警示用户</c>

388
00:19:53,660 --> 00:19:54,995
<c.magenta>如果应用处于</c>

389
00:19:55,062 --> 00:19:58,532
<c.magenta>我们将回调 willPresent通知</c>

390
00:19:59,433 --> 00:20:01,435
<c.magenta>反之 如果我们</c>

391
00:19:59,433 --> 00:20:01,435
<c.magenta>反之 如果我们</c>

392
00:20:01,735 --> 00:20:04,071
<c.magenta>用户将收到一条普通的通知</c>

393
00:20:05,005 --> 00:20:08,141
<c.magenta>所以 让我们返回去 看一些代码</c>

394
00:20:10,244 --> 00:20:13,747
<c.magenta>那么我们要覆盖</c>

395
00:20:13,814 --> 00:20:16,483
<c.magenta>willPresent notification</c>

396
00:20:17,084 --> 00:20:18,619
<c.magenta>然后 我们想要做的第一件事</c>

397
00:20:18,886 --> 00:20:22,856
<c.magenta>就是想确保</c>

398
00:20:23,423 --> 00:20:25,792
<c.magenta>然后 我们希望</c>

399
00:20:26,393 --> 00:20:29,396
<c.magenta>然后 因为我们已经做了这些</c>

400
00:20:29,463 --> 00:20:30,864
<c.magenta>以便让他们了解并抬起手腕</c>

401
00:20:31,365 --> 00:20:34,301
<c.magenta>最后 我们想调用</c>

402
00:20:35,002 --> 00:20:37,137
<c.magenta>而且 我希望能针对</c>

403
00:20:37,671 --> 00:20:40,474
<c.magenta>它实际上用了一个</c>

404
00:20:40,874 --> 00:20:44,745
<c.magenta>那么这是警示选项</c>

405
00:20:45,712 --> 00:20:47,181
<c.magenta>那么在这个具体的情况中</c>

406
00:20:47,247 --> 00:20:50,918
<c.magenta>我们实际上并不想在</c>

407
00:20:51,251 --> 00:20:54,888
<c.magenta>因为我们已经震动了用户</c>

408
00:20:55,455 --> 00:20:57,558
<c.magenta>所以我们只需要调用</c>

409
00:20:57,624 --> 00:20:59,393
<c.magenta>不带其它选项</c>

410
00:20:59,459 --> 00:21:01,528
<c.magenta>我们要消耗通知</c>

411
00:20:59,459 --> 00:21:01,528
<c.magenta>我们要消耗通知</c>

412
00:21:01,895 --> 00:21:05,365
<c.magenta>然后 因为有震动</c>

413
00:21:09,169 --> 00:21:10,838
<c.magenta>那么我们只是震动用户</c>

414
00:21:11,471 --> 00:21:13,407
<c.magenta>并且他们可能会看到</c>

415
00:21:15,008 --> 00:21:16,810
<c.magenta>那么 太棒了</c>

416
00:21:16,944 --> 00:21:18,078
<c.magenta>大约还有12分钟送到</c>

417
00:21:18,545 --> 00:21:19,546
<c.magenta>正在炉子上烹制呢</c>

418
00:21:22,249 --> 00:21:25,519
<c.magenta>那么这是我们所在的位置</c>

419
00:21:26,753 --> 00:21:29,189
<c.magenta>那么现在我们知道</c>

420
00:21:29,790 --> 00:21:33,560
<c.magenta>现在 比如说我们希望用户</c>

421
00:21:33,627 --> 00:21:35,996
<c.magenta>并尽可能查看最新</c>

422
00:21:36,864 --> 00:21:38,966
<c.magenta>那么 只要用户抬起手腕</c>

423
00:21:39,099 --> 00:21:41,702
<c.magenta>我们就会 当然了</c>

424
00:21:42,636 --> 00:21:46,073
<c.magenta>这意味着</c>

425
00:21:46,306 --> 00:21:49,543
<c.magenta>我们希望他们可以查看</c>

426
00:21:52,546 --> 00:21:54,848
<c.magenta>太棒了</c>

427
00:21:55,082 --> 00:21:57,584
<c.magenta>我们现在有一个更新</c>

428
00:21:58,252 --> 00:22:01,121
<c.magenta>我们希望能再次</c>

429
00:21:58,252 --> 00:22:01,121
<c.magenta>我们希望能再次</c>

430
00:22:01,355 --> 00:22:02,689
<c.magenta>当快递员正在配送时</c>

431
00:22:03,724 --> 00:22:06,126
<c.magenta>而且 如果我们在willPresent中</c>

432
00:22:06,593 --> 00:22:09,162
<c.magenta>那么我们将再次震动用户</c>

433
00:22:09,997 --> 00:22:11,798
<c.magenta>然后也许我们可能</c>

434
00:22:11,865 --> 00:22:14,401
<c.magenta>以及最新的预计到达时间</c>

435
00:22:14,468 --> 00:22:15,502
<c.magenta>或者快递员在哪儿</c>

436
00:22:17,804 --> 00:22:20,541
<c.magenta>然后 比如说 在我们发送了</c>

437
00:22:20,841 --> 00:22:22,209
<c.magenta>推送通知以后</c>

438
00:22:22,276 --> 00:22:24,811
<c.magenta>用户决定 也许是抬起手腕</c>

439
00:22:25,512 --> 00:22:28,582
<c.magenta>那么现在 用户将会看到地图</c>

440
00:22:28,649 --> 00:22:31,985
<c.magenta>而且应用将会提供一种非常棒</c>

441
00:22:32,753 --> 00:22:36,924
<c.magenta>下一步 我们只需要 发送另一条推送</c>

442
00:22:38,192 --> 00:22:40,861
<c.magenta>如果我们仍然</c>

443
00:22:41,161 --> 00:22:43,764
<c.magenta>我们可以很简单地像之前</c>

444
00:22:44,097 --> 00:22:46,967
<c.magenta>并更新UI来显示</c>

445
00:22:47,601 --> 00:22:48,902
<c.magenta>在这点上</c>

446
00:22:49,436 --> 00:22:52,906
<c.magenta>让我们来确保禁用</c>

447
00:22:53,240 --> 00:22:56,443
<c.magenta>因为我们希望用户现正在吃苹果派</c>

448
00:22:56,510 --> 00:22:58,745
<c.magenta>而不是正在使用我们的应用</c>

449
00:22:59,646 --> 00:23:01,882
<c.magenta>那么让我们看一下整体的时间轴</c>

450
00:22:59,646 --> 00:23:01,882
<c.magenta>那么让我们看一下整体的时间轴</c>

451
00:23:04,484 --> 00:23:07,120
<c.magenta>这是整个流程 看起来很棒</c>

452
00:23:07,387 --> 00:23:10,624
<c.magenta>但是让我们尽可能地</c>

453
00:23:11,425 --> 00:23:14,561
<c.magenta>现在 如果用户</c>

454
00:23:15,762 --> 00:23:18,198
<c.magenta>在那种情况下</c>

455
00:23:18,632 --> 00:23:20,834
<c.magenta>但那真的会改变什么吗？</c>

456
00:23:21,335 --> 00:23:22,369
<c.magenta>不见得 对吧？</c>

457
00:23:22,436 --> 00:23:27,674
<c.magenta>让我们再来看一下应用代码</c>

458
00:23:27,841 --> 00:23:31,645
<c.magenta>我们使用了 后台NSURLSession</c>

459
00:23:31,778 --> 00:23:35,115
<c.magenta>如果 就在这之后</c>

460
00:23:35,315 --> 00:23:36,717
<c.magenta>我们知道那将会继续</c>

461
00:23:36,783 --> 00:23:39,453
<c.magenta>将订单发送到服务器</c>

462
00:23:40,153 --> 00:23:43,490
<c.magenta>那么 我们需要发送推送通知</c>

463
00:23:43,891 --> 00:23:47,494
<c.magenta>即使我们不处于frontmost状态</c>

464
00:23:50,063 --> 00:23:52,633
<c.magenta>那么 这里是整体的时间轴</c>

465
00:23:53,033 --> 00:23:54,902
<c.magenta>我们已经处理了</c>

466
00:23:55,402 --> 00:23:59,406
<c.magenta>服务器不能正常运行的情况</c>

467
00:23:59,673 --> 00:24:01,108
<c.magenta>然后我们也一起了解了如何使用</c>

468
00:23:59,673 --> 00:24:01,108
<c.magenta>然后我们也一起了解了如何使用</c>

469
00:24:01,475 --> 00:24:03,410
<c.magenta>某些新的Frontmost App State</c>

470
00:24:03,477 --> 00:24:05,479
<c.magenta>来提供一种很棒的用户体验</c>

471
00:24:06,180 --> 00:24:09,449
<c.magenta>并且其中最棒的是</c>

472
00:24:09,516 --> 00:24:11,485
<c.magenta>无论是否有</c>

473
00:24:15,155 --> 00:24:18,091
<c.magenta>我们现在已经具体了解了</c>

474
00:24:18,225 --> 00:24:21,228
<c.magenta>统一进程运行时间</c>

475
00:24:21,895 --> 00:24:25,499
<c.magenta>现在 让我们花一些时间</c>

476
00:24:25,732 --> 00:24:29,203
<c.magenta>这是去年引入的</c>

477
00:24:29,269 --> 00:24:31,138
<c.magenta>以及如何将其应用到</c>

478
00:24:32,272 --> 00:24:33,974
<c.magenta>让我们先看一下概述</c>

479
00:24:34,942 --> 00:24:36,243
<c.magenta>在watchOS中</c>

480
00:24:36,310 --> 00:24:39,346
<c.magenta>系统通过给应用</c>

481
00:24:39,847 --> 00:24:43,517
<c.magenta>而系统所能分配的</c>

482
00:24:43,584 --> 00:24:45,953
<c.magenta>所以要最好地利用</c>

483
00:24:47,754 --> 00:24:49,690
<c.magenta>当系统想要唤醒你的应用时</c>

484
00:24:50,090 --> 00:24:52,259
<c.magenta>它会给你一个或多个任务</c>

485
00:24:52,860 --> 00:24:55,395
<c.magenta>然后你可以在后台实施</c>

486
00:24:55,495 --> 00:24:58,265
<c.magenta>你只需要确保 当应用处理工作时</c>

487
00:24:59,867 --> 00:25:02,636
<c.magenta>并且系统提交任务给应用的方式</c>

488
00:24:59,867 --> 00:25:02,636
<c.magenta>并且系统提交任务给应用的方式</c>

489
00:25:02,970 --> 00:25:07,007
<c.magenta>就是当你实施你的…</c>

490
00:25:07,274 --> 00:25:08,976
<c.magenta>在你的WKExtension委托上</c>

491
00:25:14,748 --> 00:25:16,517
<c.magenta>那么当你完成后台工作后</c>

492
00:25:16,783 --> 00:25:20,954
<c.magenta>你只需要将任务 返回给系统即可</c>

493
00:25:22,523 --> 00:25:26,660
<c.magenta>我们对API做了一点修改</c>

494
00:25:26,727 --> 00:25:28,529
<c.magenta>现在我们有一个很好的概念性概述</c>

495
00:25:31,565 --> 00:25:34,835
<c.magenta>那么在此之前</c>

496
00:25:34,902 --> 00:25:37,371
<c.magenta>然后我们要在全部</c>

497
00:25:37,804 --> 00:25:39,173
<c.magenta>那么在这个例子中</c>

498
00:25:39,306 --> 00:25:42,075
<c.magenta>我们有WKApplicationRefresh</c>

499
00:25:42,543 --> 00:25:46,380
<c.magenta>比如说我们要执行</c>

500
00:25:46,446 --> 00:25:47,548
<c.magenta>来更新应用</c>

501
00:25:47,981 --> 00:25:49,816
<c.magenta>那么我们想预约一个快照</c>

502
00:25:50,784 --> 00:25:52,686
<c.magenta>所以我们要使用</c>

503
00:25:52,753 --> 00:25:55,522
<c.magenta>并且我们设定了一个优选日期</c>

504
00:25:56,156 --> 00:25:58,025
<c.magenta>然后我们要调用</c>

505
00:25:58,725 --> 00:26:01,995
<c.magenta>这里有一件事很重要</c>

506
00:25:58,725 --> 00:26:01,995
<c.magenta>这里有一件事很重要</c>

507
00:26:02,062 --> 00:26:04,665
<c.magenta>就是在你预约快照更新后</c>

508
00:26:04,731 --> 00:26:07,568
<c.magenta>调用setTaskCompleted</c>

509
00:26:08,001 --> 00:26:12,306
<c.magenta>因为如果你在之前调用它</c>

510
00:26:12,372 --> 00:26:16,343
<c.magenta>通过调用setTaskCompleted</c>

511
00:26:16,610 --> 00:26:18,612
<c.magenta>然后就不会预约任何快照</c>

512
00:26:19,680 --> 00:26:23,517
<c.magenta>所以这有一点儿麻烦</c>

513
00:26:24,785 --> 00:26:26,587
<c.magenta>那么现在 你所要做的一切</c>

514
00:26:26,653 --> 00:26:30,057
<c.magenta>就只是调用一个新函数</c>

515
00:26:30,257 --> 00:26:32,793
<c.magenta>然后当你希望拍快照时</c>

516
00:26:32,926 --> 00:26:34,561
<c.magenta>不希望拍快照时就设为假</c>

517
00:26:36,129 --> 00:26:40,501
<c.magenta>因此 对于所有任务</c>

518
00:26:41,268 --> 00:26:44,638
<c.magenta>然而对于快照</c>

519
00:26:44,905 --> 00:26:48,542
<c.magenta>有一个对setTaskCompleted的</c>

520
00:26:48,842 --> 00:26:49,977
<c.magenta>让我们来看一下</c>

521
00:26:52,079 --> 00:26:53,881
<c.magenta>就是这里</c>

522
00:26:54,081 --> 00:26:55,916
<c.magenta>我们又在实施处理后台任务</c>

523
00:26:55,983 --> 00:26:59,686
<c.magenta>此时我们有一个</c>

524
00:27:00,320 --> 00:27:02,289
<c.magenta>所以我们要调用</c>

525
00:27:02,356 --> 00:27:03,724
<c.magenta>在还原默认状态下</c>

526
00:27:03,957 --> 00:27:06,193
<c.magenta>然后是我们的</c>

527
00:27:07,694 --> 00:27:10,731
<c.magenta>这真的很棒 也简单易用</c>

528
00:27:10,831 --> 00:27:12,699
<c.magenta>但我实际上想指出一个非常酷的把戏</c>

529
00:27:14,434 --> 00:27:19,306
<c.magenta>现在你可以在snapshotTask上使用</c>

530
00:27:19,540 --> 00:27:23,877
<c.magenta>那么这将会</c>

531
00:27:24,311 --> 00:27:27,748
<c.magenta>然后它会预约快照</c>

532
00:27:27,814 --> 00:27:29,116
<c.magenta>如果你把它设为真的话</c>

533
00:27:29,816 --> 00:27:31,552
<c.magenta>那么 从本质上来说这意味着</c>

534
00:27:31,885 --> 00:27:35,689
<c.magenta>如果你一直把setTaskCompleted</c>

535
00:27:36,056 --> 00:27:37,991
<c.magenta>你将设置一个为期一小时的节奏</c>

536
00:27:38,125 --> 00:27:40,127
<c.magenta>这样就使应用</c>

537
00:27:40,194 --> 00:27:42,529
<c.magenta>每个小时都能得到更新</c>

538
00:27:44,231 --> 00:27:47,701
<c.magenta>并且如果你想要更多的</c>

539
00:27:48,035 --> 00:27:51,738
<c.magenta>只需将setTaskCompletedWithSnapshot</c>

540
00:27:52,272 --> 00:27:55,676
<c.magenta>在预约快照刷新之后</c>

541
00:27:55,976 --> 00:27:58,111
<c.magenta>因为如果你在这种情况下</c>

542
00:27:58,178 --> 00:28:01,748
<c.magenta>那么我们实际上将会替换</c>

543
00:27:58,178 --> 00:28:01,748
<c.magenta>那么我们实际上将会替换</c>

544
00:28:01,882 --> 00:28:03,884
<c.magenta>并替换为从现在开始的一个小时</c>

545
00:28:04,184 --> 00:28:07,654
<c.magenta>如果你想要那个自定义行为</c>

546
00:28:11,024 --> 00:28:13,794
<c.magenta>对于处理后台任务的</c>

547
00:28:13,861 --> 00:28:17,531
<c.magenta>就是我们实际上会更新界面元素</c>

548
00:28:17,898 --> 00:28:19,466
<c.magenta>那么在watchOS 3中</c>

549
00:28:19,533 --> 00:28:24,037
<c.magenta>我们实际上软弃用了</c>

550
00:28:24,338 --> 00:28:28,709
<c.magenta>getNextRequestedUpdateDate</c>

551
00:28:29,042 --> 00:28:31,345
<c.magenta>和requestedUpdateBudgetExhausted</c>

552
00:28:31,912 --> 00:28:35,115
<c.magenta>在watchOS 3中 我要说</c>

553
00:28:35,449 --> 00:28:37,951
<c.magenta>如果你实施了处理后台任务</c>

554
00:28:38,118 --> 00:28:39,786
<c.magenta>我们不会被调用</c>

555
00:28:40,053 --> 00:28:43,123
<c.magenta>现在它们是完全被弃用了</c>

556
00:28:44,458 --> 00:28:47,294
<c.magenta>那么如果你想更新你的界面元素</c>

557
00:28:47,528 --> 00:28:49,830
<c.magenta>请一定要处理后台任务</c>

558
00:28:50,297 --> 00:28:52,766
<c.magenta>然后调用</c>

559
00:28:53,433 --> 00:28:55,936
<c.magenta>你可以任意设定</c>

560
00:28:57,070 --> 00:28:58,071
<c.magenta>那么去年</c>

561
00:28:58,472 --> 00:29:01,775
<c.magenta>有很多时候 界面元素</c>

562
00:28:58,472 --> 00:29:01,775
<c.magenta>有很多时候 界面元素</c>

563
00:29:02,176 --> 00:29:05,479
<c.magenta>而且去年 我们指导大家</c>

564
00:29:05,679 --> 00:29:07,581
<c.magenta>从根本上…</c>

565
00:29:08,949 --> 00:29:11,585
<c.magenta>…基本上预约后台刷新</c>

566
00:29:12,019 --> 00:29:15,055
<c.magenta>那样的话 你可能会预约</c>

567
00:29:15,622 --> 00:29:17,191
<c.magenta>假如说 从现在开始的15分钟</c>

568
00:29:17,257 --> 00:29:19,927
<c.magenta>如果你想在7:45</c>

569
00:29:20,427 --> 00:29:22,796
<c.magenta>那么 从根本上来说</c>

570
00:29:23,096 --> 00:29:25,966
<c.magenta>然后你可能会在</c>

571
00:29:26,033 --> 00:29:29,503
<c.magenta>以获取那个NSURLSession</c>

572
00:29:29,903 --> 00:29:31,638
<c.magenta>然后在7:45时</c>

573
00:29:31,705 --> 00:29:34,474
<c.magenta>你会有足够的时间</c>

574
00:29:38,445 --> 00:29:43,717
<c.magenta>但现在 通过新的NSURLSession</c>

575
00:29:43,917 --> 00:29:47,621
<c.magenta>我们采取这些步骤的原因</c>

576
00:29:47,688 --> 00:29:51,124
<c.magenta>我们提供了足够的后台运行时间</c>

577
00:29:51,658 --> 00:29:54,895
<c.magenta>但现在通过URLSessionTask中</c>

578
00:29:55,295 --> 00:29:57,464
<c.magenta>我们可以设置一个最早的开始日期</c>

579
00:29:57,831 --> 00:30:00,367
<c.magenta>然后当我们调用下载任务时</c>

580
00:29:57,831 --> 00:30:00,367
<c.magenta>然后当我们调用下载任务时</c>

581
00:30:01,068 --> 00:30:05,539
<c.magenta>我们可以设置那个任务 我们的变量</c>

582
00:30:05,939 --> 00:30:09,343
<c.magenta>那样我们会告诉系统说</c>

583
00:30:09,409 --> 00:30:12,079
<c.magenta>我们只需要在指定的任意日期实施”</c>

584
00:30:15,115 --> 00:30:17,851
<c.magenta>所以现在我们可以去掉这个步骤了</c>

585
00:30:18,218 --> 00:30:20,654
<c.magenta>在我们的预约后台刷新中</c>

586
00:30:20,888 --> 00:30:24,324
<c.magenta>我们很可能还想踢开</c>

587
00:30:24,391 --> 00:30:26,593
<c.magenta>最早的开始日期</c>

588
00:30:27,127 --> 00:30:29,429
<c.magenta>所以 那样系统</c>

589
00:30:29,496 --> 00:30:33,867
<c.magenta>触发NSURLSession</c>

590
00:30:34,334 --> 00:30:36,103
<c.magenta>然后 当那个恢复返回时</c>

591
00:30:37,104 --> 00:30:39,640
<c.magenta>我们可以在下午7:45</c>

592
00:30:42,342 --> 00:30:45,812
<c.magenta>那么现在让我们谈谈如何把</c>

593
00:30:45,879 --> 00:30:49,049
<c.magenta>后台应用刷新</c>

594
00:30:49,850 --> 00:30:51,818
<c.magenta>结合到我们的</c>

595
00:30:53,687 --> 00:30:56,590
<c.magenta>这是我们之前看到过的那个时间轴</c>

596
00:30:57,191 --> 00:31:00,294
<c.magenta>现在 我们主要看一下</c>

597
00:30:57,191 --> 00:31:00,294
<c.magenta>现在 我们主要看一下</c>

598
00:31:01,628 --> 00:31:04,731
<c.magenta>如果你记得代码</c>

599
00:31:04,798 --> 00:31:08,068
<c.magenta>我们实施了</c>

600
00:31:08,135 --> 00:31:10,671
<c.magenta>willPresent通知</c>

601
00:31:11,238 --> 00:31:14,775
<c.magenta>那么 我们取消了那些</c>

602
00:31:15,309 --> 00:31:16,810
<c.magenta>我们更新了UI</c>

603
00:31:16,944 --> 00:31:19,713
<c.magenta>然后实施了一项力触觉</c>

604
00:31:20,180 --> 00:31:21,348
<c.magenta>现在 最棒的是</c>

605
00:31:21,415 --> 00:31:24,785
<c.magenta>一旦你调用那个completionHandler</c>

606
00:31:25,252 --> 00:31:27,354
<c.magenta>你将通过处理后台任务被调用</c>

607
00:31:27,421 --> 00:31:30,257
<c.magenta>执行快照任务</c>

608
00:31:30,524 --> 00:31:33,861
<c.magenta>然后你执行快照的原因</c>

609
00:31:35,295 --> 00:31:38,232
<c.magenta>现在当你有一个可以</c>

610
00:31:38,465 --> 00:31:42,603
<c.magenta>你可以确保 你的快照在停靠栏中</c>

611
00:31:44,371 --> 00:31:46,573
<c.magenta>然后我想指出的另外一点是</c>

612
00:31:47,207 --> 00:31:50,577
<c.magenta>如果你还记得 我们实际上使用了</c>

613
00:31:50,644 --> 00:31:55,749
<c.magenta>我们踢开了一个NSURLSession</c>

614
00:31:56,149 --> 00:31:58,385
<c.magenta>那么现在通过那个刚提到的新API</c>

615
00:31:58,452 --> 00:32:00,020
<c.magenta>在URLSessionTask上的</c>

616
00:31:58,452 --> 00:32:00,020
<c.magenta>在URLSessionTask上的</c>

617
00:32:00,654 --> 00:32:04,424
<c.magenta>我们甚至可以预约一个 预计到达时间</c>

618
00:32:04,992 --> 00:32:06,326
<c.magenta>比如说</c>

619
00:32:07,160 --> 00:32:10,931
<c.magenta>也许我们的派会在12分钟后送到</c>

620
00:32:10,998 --> 00:32:15,869
<c.magenta>就像刷新一样 大约是在…</c>

621
00:32:18,906 --> 00:32:21,942
<c.magenta>那么让我们再回想一下整体的时间轴</c>

622
00:32:22,242 --> 00:32:23,977
<c.magenta>这实际上是一个非常简单的应用</c>

623
00:32:24,044 --> 00:32:28,749
<c.magenta>我们有订购按钮</c>

624
00:32:29,183 --> 00:32:32,019
<c.magenta>但它实际上很强大…</c>

625
00:32:33,587 --> 00:32:35,722
<c.magenta>在表面之下 在应用代码中</c>

626
00:32:37,524 --> 00:32:42,429
<c.magenta>所以我们要利用</c>

627
00:32:42,863 --> 00:32:47,201
<c.magenta>并将力触觉与frontmost通知</c>

628
00:32:47,601 --> 00:32:51,371
<c.magenta>我们还要利用</c>

629
00:32:51,638 --> 00:32:55,876
<c.magenta>以及预约 NSURLSession</c>

630
00:32:56,677 --> 00:32:58,545
<c.magenta>因此 创建一个很棒的手表应用</c>

631
00:32:58,979 --> 00:33:02,282
<c.magenta>可以给你配送苹果派</c>

632
00:32:58,979 --> 00:33:02,282
<c.magenta>可以给你配送苹果派</c>

633
00:33:02,616 --> 00:33:07,154
<c.magenta>但现在watchOS 4中</c>

634
00:33:07,221 --> 00:33:08,488
<c.magenta>并让你的用户惊叹</c>

635
00:33:10,224 --> 00:33:13,460
<c.magenta>那么现在让我们具体</c>

636
00:33:14,595 --> 00:33:16,096
<c.magenta>在watchOS 3中</c>

637
00:33:16,263 --> 00:33:19,967
<c.magenta>我们引入了锻炼会话</c>

638
00:33:20,267 --> 00:33:23,437
<c.magenta>现在我们有了录音会话</c>

639
00:33:24,104 --> 00:33:26,139
<c.magenta>此外还有导航会话</c>

640
00:33:26,807 --> 00:33:29,610
<c.magenta>那么让我们具体看一下录音会话</c>

641
00:33:30,711 --> 00:33:33,547
<c.magenta>在watchOS 3中</c>

642
00:33:33,647 --> 00:33:38,585
<c.magenta>但它会 从根本上来说</c>

643
00:33:38,952 --> 00:33:43,290
<c.magenta>会显示我们的UI</c>

644
00:33:43,357 --> 00:33:46,326
<c.magenta>然后那个文件将会被提交给你们</c>

645
00:33:47,628 --> 00:33:50,664
<c.magenta>然而现在你可以使用你自己的UI了</c>

646
00:33:50,731 --> 00:33:54,868
<c.magenta>从而你可以 在watchOS 4中</c>

647
00:33:55,869 --> 00:33:58,772
<c.magenta>并且最棒的是现在可以在后台运行</c>

648
00:33:59,239 --> 00:34:00,874
<c.magenta>但当然了它得在前台启动</c>

649
00:33:59,239 --> 00:34:00,874
<c.magenta>但当然了它得在前台启动</c>

650
00:34:00,941 --> 00:34:03,177
<c.magenta>然后在后台运行</c>

651
00:34:05,412 --> 00:34:09,983
<c.magenta>那么你的应用会在录音时</c>

652
00:34:11,585 --> 00:34:12,452
<c.magenta>这样做的好处是</c>

653
00:34:12,518 --> 00:34:14,688
<c.magenta>你可以实施力触觉</c>

654
00:34:15,088 --> 00:34:16,255
<c.magenta>比如说</c>

655
00:34:16,322 --> 00:34:20,561
<c.magenta>你有一款应用</c>

656
00:34:20,860 --> 00:34:23,263
<c.magenta>你只需要按下录音按钮</c>

657
00:34:23,597 --> 00:34:25,098
<c.magenta>用户就可以放下手腕了</c>

658
00:34:25,165 --> 00:34:26,533
<c.magenta>你可以检测正在播放的音乐</c>

659
00:34:26,800 --> 00:34:28,969
<c.magenta>然后震动用户</c>

660
00:34:29,036 --> 00:34:30,670
<c.magenta>嘿 你检测到什么歌了</c>

661
00:34:30,938 --> 00:34:33,206
<c.magenta>然后你可以将那首歌展示给用户</c>

662
00:34:35,309 --> 00:34:37,010
<c.magenta>然后还有一个好处是</c>

663
00:34:37,511 --> 00:34:40,214
<c.magenta>跟锻炼会话一样</c>

664
00:34:40,581 --> 00:34:43,217
<c.magenta>但心率传感器将不会被启动</c>

665
00:34:43,283 --> 00:34:46,053
<c.magenta>所以正因为如此</c>

666
00:34:47,821 --> 00:34:50,123
<c.magenta>并且我想提的另外一点是</c>

667
00:34:50,791 --> 00:34:51,891
<c.magenta>如果由于某些原因</c>

668
00:34:51,958 --> 00:34:54,795
<c.magenta>用户决定返回表盘 比如说</c>

669
00:34:55,027 --> 00:34:58,365
<c.magenta>我们将在最顶部显示那个麦克风图标</c>

670
00:34:58,465 --> 00:35:00,968
<c.magenta>那样用户就知道正在录音</c>

671
00:34:58,465 --> 00:35:00,968
<c.magenta>那样用户就知道正在录音</c>

672
00:35:01,235 --> 00:35:05,105
<c.magenta>那么他们还可以轻触那个图标</c>

673
00:35:08,876 --> 00:35:14,214
<c.magenta>对于在watchOS 3.1中回放</c>

674
00:35:14,515 --> 00:35:17,284
<c.magenta>对于录音你所要使用的</c>

675
00:35:17,351 --> 00:35:20,487
<c.magenta>就是AVAudioInputNode</c>

676
00:35:20,821 --> 00:35:22,589
<c.magenta>或AVAudioRecorder</c>

677
00:35:23,056 --> 00:35:25,859
<c.magenta>然后请求AVAudio录音许可</c>

678
00:35:26,994 --> 00:35:29,596
<c.magenta>并且我们现在支持全部格式</c>

679
00:35:30,531 --> 00:35:34,568
<c.magenta>那么让我们谈谈地理位置后台模式</c>

680
00:35:36,670 --> 00:35:39,940
<c.magenta>跟录音和锻炼会话一样</c>

681
00:35:40,007 --> 00:35:42,976
<c.magenta>它是在前台启动</c>

682
00:35:44,244 --> 00:35:46,880
<c.magenta>当然了 你在会话中时</c>

683
00:35:49,316 --> 00:35:53,253
<c.magenta>需要注意的一点是</c>

684
00:35:53,320 --> 00:35:54,755
<c.magenta>当你的应用处于前台时</c>

685
00:35:55,522 --> 00:35:57,024
<c.magenta>并且你还应该确保</c>

686
00:35:57,090 --> 00:36:00,427
<c.magenta>将allowsBackgroundLocationUpdates</c>

687
00:35:57,090 --> 00:36:00,427
<c.magenta>将allowsBackgroundLocationUpdates</c>

688
00:36:00,494 --> 00:36:02,896
<c.magenta>设为真 仅当导航会话</c>

689
00:36:03,163 --> 00:36:04,831
<c.magenta>然后 如果没有开始</c>

690
00:36:07,100 --> 00:36:11,839
<c.magenta>因此对于Apple Pie Me应用来说</c>

691
00:36:12,072 --> 00:36:12,973
<c.magenta>我们自己</c>

692
00:36:13,040 --> 00:36:15,809
<c.magenta>就是要吃美味苹果派的人</c>

693
00:36:16,143 --> 00:36:19,146
<c.magenta>然后我们实际上还有一个快递员</c>

694
00:36:19,546 --> 00:36:22,015
<c.magenta>那么在这种情况下</c>

695
00:36:22,082 --> 00:36:25,285
<c.magenta>为那个快递员创建一个</c>

696
00:36:25,352 --> 00:36:28,155
<c.magenta>那样他们可以很方便地</c>

697
00:36:28,222 --> 00:36:29,456
<c.magenta>获取到达目的地的导航</c>

698
00:36:30,791 --> 00:36:31,625
<c.magenta>并且最棒的是</c>

699
00:36:31,692 --> 00:36:33,627
<c.magenta>你甚至可以在处于会话中时</c>

700
00:36:34,027 --> 00:36:36,430
<c.magenta>现在如果 比如说</c>

701
00:36:36,496 --> 00:36:39,766
<c.magenta>要向左拐或向右拐</c>

702
00:36:39,833 --> 00:36:43,237
<c.magenta>或也许当用户该拐弯</c>

703
00:36:43,570 --> 00:36:45,272
<c.magenta>并且我非常乐意</c>

704
00:36:45,339 --> 00:36:50,143
<c.magenta>因为就像 比如说</c>

705
00:36:50,544 --> 00:36:53,080
<c.magenta>你想要 就在到达目的地之前</c>

706
00:36:53,380 --> 00:36:55,082
<c.magenta>用户可能会收到一个震动</c>

707
00:36:55,582 --> 00:36:58,118
<c.magenta>然后他们就会知道</c>

708
00:36:58,352 --> 00:37:00,187
<c.magenta>然后我才可以去送下一家”</c>

709
00:36:58,352 --> 00:37:00,187
<c.magenta>然后我才可以去送下一家”</c>

710
00:37:03,423 --> 00:37:07,594
<c.magenta>所以我们真的感到很激动</c>

711
00:37:07,828 --> 00:37:10,230
<c.magenta>对后台应用刷新的新改进</c>

712
00:37:10,297 --> 00:37:12,032
<c.magenta>以及新的后台模式</c>

713
00:37:12,366 --> 00:37:16,270
<c.magenta>而且我感到特别激动</c>

714
00:37:16,970 --> 00:37:18,739
<c.magenta>并且我们认为设计美化</c>

715
00:37:18,805 --> 00:37:21,475
<c.magenta>将会在watchOS上</c>

716
00:37:25,445 --> 00:37:27,581
<c.magenta>所以我鼓励你们大家</c>

717
00:37:27,648 --> 00:37:29,783
<c.magenta>采用新的</c>

718
00:37:30,884 --> 00:37:32,886
<c.magenta>彻底地思考一下增强的功能</c>

719
00:37:32,953 --> 00:37:37,024
<c.magenta>还有设计体验</c>

720
00:37:37,791 --> 00:37:41,195
<c.magenta>我们了解了如何使用</c>

721
00:37:41,428 --> 00:37:44,498
<c.magenta>力触觉和Frontmost通知</c>

722
00:37:44,665 --> 00:37:46,400
<c.magenta>但那还只是在表面意义上</c>

723
00:37:46,867 --> 00:37:48,902
<c.magenta>通过对手表连通性</c>

724
00:37:49,169 --> 00:37:50,337
<c.magenta>和任务完成的增强</c>

725
00:37:50,504 --> 00:37:53,207
<c.magenta>你可以设计更强大的交互</c>

726
00:37:53,507 --> 00:37:55,342
<c.magenta>非常简单易用</c>

727
00:37:55,909 --> 00:37:57,544
<c.magenta>所以我很期待看到</c>

728
00:37:57,611 --> 00:37:59,980
<c.magenta>你们大家会如何利用这些新功能</c>

729
00:38:00,814 --> 00:38:03,884
<c.magenta>如果你想了解</c>

730
00:38:04,251 --> 00:38:06,854
<c.magenta>或其它演讲的信息 请访问</c>

731
00:38:07,454 --> 00:38:09,356
<c.magenta>我们还有一些非常棒的相关演讲</c>

732
00:38:09,423 --> 00:38:10,557
<c.magenta>明天就有一场</c>

733
00:38:10,624 --> 00:38:12,793
<c.magenta>是关于设计了不起的</c>

734
00:38:13,060 --> 00:38:14,528
<c.magenta>我强烈推荐你们去参加</c>

735
00:38:14,595 --> 00:38:16,029
<c.magenta>我自己也非常期待那场演讲</c>

736
00:38:16,263 --> 00:38:19,633
<c.magenta>希望你们度过一个美好的WWDC</c>
