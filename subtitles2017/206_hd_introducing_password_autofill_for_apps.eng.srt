1
00:00:22,516 --> 00:00:28,126
[ Applause ]

2
00:00:28,626 --> 00:00:29,476
&gt;&gt; Good morning everyone.

3
00:00:30,516 --> 00:00:32,256
Welcome to session 206,

4
00:00:32,336 --> 00:00:34,216
Introducing Password Autofill

5
00:00:34,216 --> 00:00:34,866
for Apps.

6
00:00:35,596 --> 00:00:37,276
My name is Ricky Mondello.

7
00:00:37,706 --> 00:00:39,246
And I am thrilled to be able to

8
00:00:39,246 --> 00:00:40,376
tell you about Password

9
00:00:40,376 --> 00:00:43,166
Autofill, a new feature in iOS

10
00:00:43,166 --> 00:00:45,476
11 that puts passwords that your

11
00:00:45,476 --> 00:00:47,146
users have already saved in

12
00:00:47,146 --> 00:00:49,486
Safari and in iCloud Keychain

13
00:00:50,196 --> 00:00:51,826
directly on the keyboard within

14
00:00:51,826 --> 00:00:53,766
your apps to make logging in

15
00:00:54,026 --> 00:00:54,816
super simple.

16
00:00:56,536 --> 00:00:58,606
We made Password Autofill

17
00:00:58,916 --> 00:01:00,196
because logging into apps is

18
00:00:58,916 --> 00:01:00,196
because logging into apps is

19
00:01:00,196 --> 00:01:00,436
hard.

20
00:01:01,296 --> 00:01:02,276
It's a source of friction.

21
00:01:03,286 --> 00:01:05,236
Personally, when I've downloaded

22
00:01:05,236 --> 00:01:06,826
a new app from the Store and

23
00:01:06,876 --> 00:01:07,986
I've seen the login screen,

24
00:01:08,736 --> 00:01:10,276
sometimes I've just switched

25
00:01:10,276 --> 00:01:12,056
back to Safari where I knew I

26
00:01:12,056 --> 00:01:13,146
was already logged into the

27
00:01:13,146 --> 00:01:13,946
app's website.

28
00:01:14,796 --> 00:01:16,216
But beyond an inconvenience for

29
00:01:16,216 --> 00:01:18,576
me, for so many people any

30
00:01:18,576 --> 00:01:19,646
experience dealing with

31
00:01:19,646 --> 00:01:21,516
passwords is a source of real

32
00:01:21,516 --> 00:01:23,586
frustration or even panic.

33
00:01:24,966 --> 00:01:26,846
So the truth is, although having

34
00:01:26,846 --> 00:01:29,226
to log into your apps is really

35
00:01:29,226 --> 00:01:30,926
important, it is a source of

36
00:01:30,926 --> 00:01:32,316
friction that can lead to users

37
00:01:32,316 --> 00:01:33,866
abandoning your app.

38
00:01:33,866 --> 00:01:34,876
And none of us want that to

39
00:01:34,876 --> 00:01:35,246
happen.

40
00:01:35,396 --> 00:01:36,496
You make awesome apps.

41
00:01:36,846 --> 00:01:38,696
We want users to use them.

42
00:01:39,206 --> 00:01:42,416
Fortunately, in iOS 11 Password

43
00:01:42,416 --> 00:01:43,306
Autofill can help.

44
00:01:44,306 --> 00:01:44,896
Let me explain.

45
00:01:45,426 --> 00:01:50,176
iOS and MacOS have a password

46
00:01:50,176 --> 00:01:51,316
manager that's built in,

47
00:01:51,426 --> 00:01:52,736
integrated into Safari.

48
00:01:53,986 --> 00:01:55,146
And you've probably seen it

49
00:01:55,146 --> 00:01:55,546
before.

50
00:01:56,076 --> 00:01:58,316
When you're logging into a

51
00:01:58,316 --> 00:02:00,226
website, it offers to save your

52
00:01:58,316 --> 00:02:00,226
website, it offers to save your

53
00:02:00,226 --> 00:02:00,906
passwords.

54
00:02:01,436 --> 00:02:03,906
And the next time that you come

55
00:02:03,906 --> 00:02:06,106
back to that website, it fills

56
00:02:06,106 --> 00:02:07,826
them automatically for you to

57
00:02:07,826 --> 00:02:09,876
make logging in really easy.

58
00:02:10,675 --> 00:02:11,796
And I want you to know that

59
00:02:11,796 --> 00:02:13,456
Safari takes the security of

60
00:02:13,456 --> 00:02:14,926
users' passwords extremely

61
00:02:14,926 --> 00:02:15,496
seriously.

62
00:02:16,556 --> 00:02:18,136
If the user has saved a password

63
00:02:18,136 --> 00:02:20,436
for your website, Safari will

64
00:02:20,436 --> 00:02:22,326
only ever fill that password on

65
00:02:22,326 --> 00:02:22,996
your website.

66
00:02:24,076 --> 00:02:25,716
Passwords for your website won't

67
00:02:25,716 --> 00:02:26,886
be offered on any other

68
00:02:26,886 --> 00:02:27,476
websites.

69
00:02:28,006 --> 00:02:31,106
And of course, if the user wants

70
00:02:31,106 --> 00:02:32,096
to look up one of their

71
00:02:32,096 --> 00:02:34,896
passwords on a device, viewing

72
00:02:34,896 --> 00:02:36,136
the passwords requires them to

73
00:02:36,136 --> 00:02:38,056
authenticate, either with Touch

74
00:02:38,056 --> 00:02:40,146
ID or with their passcode.

75
00:02:40,816 --> 00:02:43,236
The point is, iOS keeps these

76
00:02:43,236 --> 00:02:45,216
passwords secure on device.

77
00:02:46,476 --> 00:02:49,346
And of course, iOS synchs all of

78
00:02:49,346 --> 00:02:50,906
these passwords across a user's

79
00:02:50,906 --> 00:02:52,916
devices using iCloud Keychain.

80
00:02:53,666 --> 00:02:54,946
And this makes it super easy to

81
00:02:54,946 --> 00:02:56,846
log in across multiple devices.

82
00:02:57,286 --> 00:03:00,306
And this, too, is secure.

83
00:02:57,286 --> 00:03:00,306
And this, too, is secure.

84
00:03:01,356 --> 00:03:02,446
We actually have a really

85
00:03:02,446 --> 00:03:04,216
approachable white paper on

86
00:03:04,216 --> 00:03:06,296
Apple.com that describes the

87
00:03:06,296 --> 00:03:08,036
security model of iCloud

88
00:03:08,086 --> 00:03:08,476
Keychain.

89
00:03:09,016 --> 00:03:10,316
And it goes into a great amount

90
00:03:10,316 --> 00:03:12,596
of detail about how and why

91
00:03:13,366 --> 00:03:14,936
Apple cannot see a user's

92
00:03:14,936 --> 00:03:17,986
synched passwords, but it still

93
00:03:17,986 --> 00:03:19,496
makes them available on all the

94
00:03:19,496 --> 00:03:19,996
devices.

95
00:03:22,696 --> 00:03:24,666
Safari AutoFill and iCloud

96
00:03:24,666 --> 00:03:26,486
Keychain are built directly into

97
00:03:26,486 --> 00:03:27,486
iOS and MacOS.

98
00:03:28,336 --> 00:03:30,266
Safari AutoFill is enabled by

99
00:03:30,266 --> 00:03:32,036
default for all users.

100
00:03:32,566 --> 00:03:33,986
And every user is prompted to

101
00:03:33,986 --> 00:03:37,016
turn on iCloud Keychain when

102
00:03:37,016 --> 00:03:38,176
they set up a new device.

103
00:03:39,456 --> 00:03:41,656
These features are extremely

104
00:03:41,656 --> 00:03:42,146
popular.

105
00:03:42,776 --> 00:03:43,986
Lots of your users have

106
00:03:44,036 --> 00:03:45,376
passwords saved in iCloud

107
00:03:45,376 --> 00:03:46,806
Keychain and Safari AutoFill.

108
00:03:47,926 --> 00:03:50,526
And what iOS 11 does is it takes

109
00:03:50,526 --> 00:03:52,076
these passwords that already

110
00:03:52,076 --> 00:03:54,136
saved in the Keychain and makes

111
00:03:54,136 --> 00:03:55,716
them available on the keyboard

112
00:03:56,106 --> 00:03:57,176
within your apps.

113
00:03:57,896 --> 00:03:58,756
And I think the best way to

114
00:03:58,756 --> 00:04:00,036
understand this is to see it.

115
00:03:58,756 --> 00:04:00,036
understand this is to see it.

116
00:04:00,686 --> 00:04:05,000
So let's start off with a demo.

117
00:04:10,436 --> 00:04:12,566
So, what I have right here is

118
00:04:12,566 --> 00:04:14,256
Shiny, which is a demo app.

119
00:04:14,386 --> 00:04:15,956
And it's personally my favorite

120
00:04:15,956 --> 00:04:17,926
demo app for logging in and

121
00:04:17,926 --> 00:04:19,106
seeing a picture of something

122
00:04:19,106 --> 00:04:20,216
that's pleasant every single

123
00:04:20,216 --> 00:04:20,426
day.

124
00:04:20,426 --> 00:04:22,366
So I'm going to open up this

125
00:04:22,366 --> 00:04:22,616
app.

126
00:04:23,326 --> 00:04:25,096
And it has a very standard login

127
00:04:25,096 --> 00:04:26,516
screen, like many of your apps

128
00:04:26,516 --> 00:04:28,246
do, with a username and a

129
00:04:28,246 --> 00:04:28,986
password field.

130
00:04:30,116 --> 00:04:31,366
So like any user would, I'm

131
00:04:31,366 --> 00:04:32,856
going to tap into the username

132
00:04:32,856 --> 00:04:33,196
field.

133
00:04:33,696 --> 00:04:35,486
And one of the first things

134
00:04:35,486 --> 00:04:37,386
you'll probably notice is that

135
00:04:37,386 --> 00:04:38,966
directly above the keyboard

136
00:04:39,576 --> 00:04:40,506
there's the QuickType bar.

137
00:04:41,096 --> 00:04:42,076
And the QuickType bar is

138
00:04:42,076 --> 00:04:44,396
offering my password from the

139
00:04:44,396 --> 00:04:45,366
website for Shiny.

140
00:04:45,836 --> 00:04:47,796
And with one tap, that

141
00:04:47,796 --> 00:04:48,666
information is filled.

142
00:04:49,286 --> 00:04:51,666
And with another tap, I'm logged

143
00:04:51,666 --> 00:04:51,866
in.

144
00:04:52,916 --> 00:04:55,106
That's an adorable puppy, 13 out

145
00:04:55,816 --> 00:04:57,176
of 10.

146
00:04:57,366 --> 00:04:58,576
So let's do that one more time.

147
00:04:58,576 --> 00:04:59,496
It went by pretty quickly.

148
00:05:00,166 --> 00:05:01,336
This time I'll just happen to

149
00:05:01,336 --> 00:05:02,916
touch into the password field.

150
00:05:03,456 --> 00:05:04,636
And I'm offered the same thing.

151
00:05:05,176 --> 00:05:06,596
I can tap and tap.

152
00:05:07,436 --> 00:05:08,196
And I'm logged in.

153
00:05:08,986 --> 00:05:09,736
Another good dog.

154
00:05:09,736 --> 00:05:13,926
So one thing I want to point out

155
00:05:13,926 --> 00:05:16,136
while I'm showing you this is I

156
00:05:16,136 --> 00:05:18,406
mentioned a moment ago that iOS

157
00:05:18,406 --> 00:05:20,096
takes password security very

158
00:05:20,096 --> 00:05:20,656
seriously.

159
00:05:22,016 --> 00:05:23,216
And so the big thing to notice

160
00:05:23,216 --> 00:05:26,156
here is iOS isn't guessing that

161
00:05:26,156 --> 00:05:28,676
shiny.example.com is the website

162
00:05:28,676 --> 00:05:29,306
for the Shiny app.

163
00:05:30,066 --> 00:05:32,326
There is a strong two-way secure

164
00:05:32,326 --> 00:05:34,156
association between that app and

165
00:05:34,156 --> 00:05:36,266
that website that allows iOS to

166
00:05:36,266 --> 00:05:37,756
put the exact right credential

167
00:05:37,756 --> 00:05:38,736
that the user's looking for

168
00:05:39,106 --> 00:05:40,086
right on the QuickType bar.

169
00:05:40,206 --> 00:05:41,416
All right.

170
00:05:41,786 --> 00:05:44,000
Let's go back to some slides.

171
00:05:50,126 --> 00:05:52,786
You just saw that iOS 11 put the

172
00:05:52,786 --> 00:05:54,446
password that I needed to log

173
00:05:54,446 --> 00:05:56,336
into Shiny directly on the

174
00:05:56,336 --> 00:05:57,326
QuickType bar above the

175
00:05:57,326 --> 00:05:59,396
keyboard, which made logging in

176
00:05:59,396 --> 00:06:00,816
as simple as two taps.

177
00:05:59,396 --> 00:06:00,816
as simple as two taps.

178
00:06:01,596 --> 00:06:03,896
Now, I have no reason to abandon

179
00:06:03,896 --> 00:06:05,386
the app and go back to Safari

180
00:06:05,466 --> 00:06:06,546
where I was already logged in.

181
00:06:07,106 --> 00:06:08,496
It's just as easy to log into

182
00:06:09,236 --> 00:06:11,086
the app.

183
00:06:11,346 --> 00:06:12,146
Quick show of hands.

184
00:06:13,006 --> 00:06:14,396
How many of you have a screen in

185
00:06:14,396 --> 00:06:15,546
your app that looks like this

186
00:06:15,546 --> 00:06:16,626
one with a username and a

187
00:06:16,626 --> 00:06:17,276
password field?

188
00:06:18,636 --> 00:06:19,056
All right.

189
00:06:19,296 --> 00:06:20,146
That's a lot of you.

190
00:06:20,146 --> 00:06:21,016
And you're all in the right

191
00:06:21,016 --> 00:06:21,396
place.

192
00:06:22,226 --> 00:06:23,966
So, one more show of hands.

193
00:06:25,396 --> 00:06:27,426
How many of those apps are you

194
00:06:27,426 --> 00:06:28,786
logging into your own backend

195
00:06:28,786 --> 00:06:30,416
that you manage yourself instead

196
00:06:30,416 --> 00:06:31,526
of a third party service?

197
00:06:32,726 --> 00:06:33,296
All right.

198
00:06:33,296 --> 00:06:33,906
That's a lot of you.

199
00:06:34,926 --> 00:06:36,146
For everyone who kept their hand

200
00:06:36,146 --> 00:06:37,446
up, who raised it a second time,

201
00:06:37,776 --> 00:06:38,956
I'm going to be talking to you

202
00:06:38,956 --> 00:06:39,696
throughout most of this

203
00:06:39,696 --> 00:06:40,326
presentation.

204
00:06:41,346 --> 00:06:42,256
But if you're logging into a

205
00:06:42,256 --> 00:06:43,656
third party service like a

206
00:06:43,656 --> 00:06:44,576
social network, I'll have a

207
00:06:44,756 --> 00:06:45,826
little something for you toward

208
00:06:45,826 --> 00:06:45,976
the end.

209
00:06:51,306 --> 00:06:53,216
We want Password AutoFill to

210
00:06:53,216 --> 00:06:54,816
work for as many of your apps as

211
00:06:54,816 --> 00:06:55,306
possible.

212
00:06:56,076 --> 00:06:58,096
So we built heuristics into iOS

213
00:06:58,836 --> 00:07:00,456
that make some parts of Password

214
00:06:58,836 --> 00:07:00,456
that make some parts of Password

215
00:07:00,456 --> 00:07:02,626
AutoFill work automatically in

216
00:07:02,626 --> 00:07:04,236
many apps without you

217
00:07:04,236 --> 00:07:05,626
necessarily having to change

218
00:07:05,626 --> 00:07:05,986
anything.

219
00:07:07,426 --> 00:07:09,486
However, for your users to get

220
00:07:09,486 --> 00:07:11,266
the best experience where the

221
00:07:11,266 --> 00:07:13,216
exact right credential shows up

222
00:07:13,216 --> 00:07:15,666
on the QuickType bar, we're

223
00:07:15,666 --> 00:07:16,456
going to need a little bit of

224
00:07:16,456 --> 00:07:16,786
your help.

225
00:07:16,816 --> 00:07:18,916
So what we're going to focus on

226
00:07:18,916 --> 00:07:20,606
for the rest of this session is

227
00:07:20,606 --> 00:07:22,586
guaranteeing that your apps get

228
00:07:22,586 --> 00:07:24,256
the experience that you just saw

229
00:07:24,256 --> 00:07:25,636
in the Shiny app.

230
00:07:25,846 --> 00:07:27,426
And we'll do that by walking

231
00:07:27,426 --> 00:07:28,276
through these topics.

232
00:07:30,696 --> 00:07:32,706
The first topic is about making

233
00:07:32,706 --> 00:07:34,666
the QuickType bar appear in your

234
00:07:34,666 --> 00:07:36,366
username and password fields in

235
00:07:36,366 --> 00:07:37,576
your app.

236
00:07:38,026 --> 00:07:40,026
The second is about making sure

237
00:07:40,026 --> 00:07:41,276
that the passwords are filled

238
00:07:41,326 --> 00:07:42,186
properly into the app.

239
00:07:42,296 --> 00:07:44,126
And that your app works properly

240
00:07:44,126 --> 00:07:45,366
after a user taps on one of the

241
00:07:45,366 --> 00:07:45,936
suggestions.

242
00:07:47,196 --> 00:07:48,846
Then, we'll talk about making

243
00:07:48,846 --> 00:07:50,296
sure that the exact right

244
00:07:50,296 --> 00:07:51,536
credential that your user is

245
00:07:51,536 --> 00:07:53,056
looking for, the credential from

246
00:07:53,056 --> 00:07:54,796
your website, shows up on the

247
00:07:54,796 --> 00:07:55,996
left-hand side of the QuickType

248
00:07:56,026 --> 00:07:56,226
bar.

249
00:07:56,346 --> 00:07:58,906
And then at the end, we'll

250
00:07:58,906 --> 00:08:00,086
circle back around and talk

251
00:07:58,906 --> 00:08:00,086
circle back around and talk

252
00:08:00,086 --> 00:08:01,596
about authenticating against a

253
00:08:01,596 --> 00:08:03,746
third party service, a service

254
00:08:03,746 --> 00:08:05,546
that's not the same as your app.

255
00:08:06,616 --> 00:08:08,646
So let's get started by talking

256
00:08:08,646 --> 00:08:10,046
about making the QuickType bar

257
00:08:10,046 --> 00:08:10,256
appear.

258
00:08:12,596 --> 00:08:13,896
The first thing to know about

259
00:08:13,896 --> 00:08:15,196
the QuickType bar appearing is

260
00:08:15,716 --> 00:08:17,326
that it will only appear if you

261
00:08:17,326 --> 00:08:19,906
have at least one saved password

262
00:08:19,906 --> 00:08:21,076
on an iOS device.

263
00:08:21,736 --> 00:08:22,816
There's no need for us to offer

264
00:08:22,816 --> 00:08:23,996
Password AutoFill if there are

265
00:08:23,996 --> 00:08:24,836
no passwords to fill.

266
00:08:28,126 --> 00:08:29,926
The next thing to know is that

267
00:08:29,926 --> 00:08:32,986
UITextView and UITextField are

268
00:08:32,986 --> 00:08:34,486
automatically eligible for

269
00:08:34,486 --> 00:08:36,275
consideration or Password

270
00:08:36,275 --> 00:08:36,716
AutoFill.

271
00:08:38,015 --> 00:08:39,716
So, if you're using these

272
00:08:39,716 --> 00:08:41,586
standard controls out of UIKit,

273
00:08:42,056 --> 00:08:43,166
you're already in a really good

274
00:08:43,166 --> 00:08:43,576
place.

275
00:08:44,976 --> 00:08:47,096
However, if you're rolling your

276
00:08:47,096 --> 00:08:48,816
own text fields, no need to

277
00:08:48,816 --> 00:08:49,096
worry.

278
00:08:49,606 --> 00:08:51,126
If your text field conforms to

279
00:08:51,126 --> 00:08:53,666
UITextInput, it's also eligible

280
00:08:53,666 --> 00:08:54,636
for Password Autofill.

281
00:08:55,206 --> 00:08:57,686
And I mentioned this earlier,

282
00:08:57,786 --> 00:08:59,126
but iOS is going to use

283
00:08:59,126 --> 00:09:01,476
heuristics to determine where to

284
00:08:59,126 --> 00:09:01,476
heuristics to determine where to

285
00:09:01,476 --> 00:09:03,386
show the QuickType bar in your

286
00:09:03,386 --> 00:09:04,506
username and your password

287
00:09:04,506 --> 00:09:04,946
fields.

288
00:09:06,336 --> 00:09:09,176
And iOS's heuristics are pretty

289
00:09:09,176 --> 00:09:09,516
good.

290
00:09:10,046 --> 00:09:11,816
But what we're here to do is to

291
00:09:11,816 --> 00:09:14,636
guarantee that your app has

292
00:09:14,636 --> 00:09:15,596
Password AutoFill.

293
00:09:16,146 --> 00:09:17,616
And we can guarantee that by

294
00:09:17,616 --> 00:09:20,076
having you tell iOS which of

295
00:09:20,076 --> 00:09:21,056
your fields is the username

296
00:09:21,056 --> 00:09:22,516
field and which is the password

297
00:09:22,516 --> 00:09:22,796
field.

298
00:09:23,396 --> 00:09:25,136
And the way that we'll do this

299
00:09:26,076 --> 00:09:28,126
is through UITextContentType.

300
00:09:28,496 --> 00:09:30,466
By setting a content type on the

301
00:09:30,466 --> 00:09:30,976
text fields.

302
00:09:33,496 --> 00:09:36,006
UITextContentType was introduced

303
00:09:36,006 --> 00:09:37,896
as an optional property on the

304
00:09:37,896 --> 00:09:40,216
UITextInputTraits protocol in

305
00:09:40,356 --> 00:09:42,526
iOS 10.

306
00:09:42,526 --> 00:09:43,906
iOS uses it to have a better

307
00:09:43,906 --> 00:09:45,436
understanding of what

308
00:09:45,436 --> 00:09:46,696
information is in your text

309
00:09:46,696 --> 00:09:47,116
fields.

310
00:09:48,246 --> 00:09:50,056
So you could imagine that iOS

311
00:09:50,056 --> 00:09:51,076
would offer a different and

312
00:09:51,076 --> 00:09:52,666
better keyboard or auto

313
00:09:52,666 --> 00:09:54,406
corrections if it knew that your

314
00:09:54,406 --> 00:09:55,576
users was typing an email

315
00:09:55,576 --> 00:09:58,416
address versus, say, their last

316
00:09:58,416 --> 00:09:58,696
name.

317
00:09:58,696 --> 00:10:01,566
Here are the text content types

318
00:09:58,696 --> 00:10:01,566
Here are the text content types

319
00:10:01,566 --> 00:10:03,896
that are present in iOS 10, just

320
00:10:03,896 --> 00:10:04,806
to give you a refresher.

321
00:10:08,036 --> 00:10:09,616
And as you've probably guessed,

322
00:10:09,616 --> 00:10:12,046
in iOS 11 there are two new text

323
00:10:12,046 --> 00:10:13,956
content types, username and

324
00:10:13,956 --> 00:10:15,416
password, that you can tag your

325
00:10:15,416 --> 00:10:16,546
fields with.

326
00:10:18,336 --> 00:10:20,526
So to guarantee that Password

327
00:10:20,526 --> 00:10:22,036
AutoFill is working in your

328
00:10:22,036 --> 00:10:23,706
apps, we're going to deploy

329
00:10:23,706 --> 00:10:25,166
UITextContentType.

330
00:10:25,896 --> 00:10:27,386
That's going to be our guarantee

331
00:10:27,386 --> 00:10:28,396
that Password AutoFill is

332
00:10:28,396 --> 00:10:30,276
available in your app.

333
00:10:30,436 --> 00:10:31,996
You can set text content types

334
00:10:32,206 --> 00:10:32,936
from within code.

335
00:10:33,656 --> 00:10:35,166
Or, with an interface filter.

336
00:10:35,526 --> 00:10:36,356
And we'll show you how to do

337
00:10:36,356 --> 00:10:37,666
that in a little bit.

338
00:10:40,616 --> 00:10:42,596
The username text content type

339
00:10:43,146 --> 00:10:44,896
is particularly useful if your

340
00:10:45,076 --> 00:10:46,666
app has a two-screen login

341
00:10:46,666 --> 00:10:48,646
experience where your username

342
00:10:48,646 --> 00:10:50,566
field is on a different view or

343
00:10:50,566 --> 00:10:52,266
screen than your password.

344
00:10:53,116 --> 00:10:55,926
In this case, if you tag your

345
00:10:55,926 --> 00:10:57,466
username field with the username

346
00:10:57,466 --> 00:10:59,276
text content type, we'll be able

347
00:10:59,276 --> 00:11:00,866
to offer the QuickType bar on

348
00:10:59,276 --> 00:11:00,866
to offer the QuickType bar on

349
00:11:00,866 --> 00:11:01,926
both of the screens.

350
00:11:04,416 --> 00:11:06,116
If you're already using the

351
00:11:06,116 --> 00:11:07,856
email address text content type,

352
00:11:08,446 --> 00:11:09,326
there's no need to worry.

353
00:11:10,016 --> 00:11:11,866
You can combine the username

354
00:11:11,866 --> 00:11:13,806
text content type and the email

355
00:11:13,906 --> 00:11:15,636
keyboard to give your users the

356
00:11:15,636 --> 00:11:17,976
best of both worlds, where they

357
00:11:17,976 --> 00:11:19,386
get an email address keyboard

358
00:11:19,846 --> 00:11:21,416
and QuickType Autofill.

359
00:11:24,676 --> 00:11:26,646
The password text content type

360
00:11:27,026 --> 00:11:29,586
is particularly useful if you

361
00:11:29,586 --> 00:11:30,826
have a feature in your app that

362
00:11:30,826 --> 00:11:32,426
reveals the password that the

363
00:11:32,426 --> 00:11:34,026
user is typing in plain text to

364
00:11:34,026 --> 00:11:34,556
help them out.

365
00:11:35,876 --> 00:11:38,066
When your field is in plain text

366
00:11:38,066 --> 00:11:40,216
iOS won't be able to tell that

367
00:11:40,216 --> 00:11:41,866
it's a password field unless you

368
00:11:41,866 --> 00:11:43,266
tag the field as a password.

369
00:11:43,996 --> 00:11:45,466
So if you do that, the QuickType

370
00:11:45,466 --> 00:11:46,526
bar will still work in that

371
00:11:46,526 --> 00:11:47,926
field, even when it's not a

372
00:11:47,926 --> 00:11:48,686
secure entry.

373
00:11:49,276 --> 00:11:53,456
And at this point, once you've

374
00:11:53,456 --> 00:11:56,166
done this, you might see a

375
00:11:56,166 --> 00:11:57,926
Password AutoFill QuickType bar

376
00:11:57,976 --> 00:12:00,376
in your app with its key icon on

377
00:11:57,976 --> 00:12:00,376
in your app with its key icon on

378
00:12:00,376 --> 00:12:02,116
the right, but without any

379
00:12:02,116 --> 00:12:03,656
specific credentials showing up

380
00:12:03,656 --> 00:12:04,156
on the left.

381
00:12:05,016 --> 00:12:06,196
This is actually expected.

382
00:12:06,196 --> 00:12:07,276
And it's a really good first

383
00:12:07,276 --> 00:12:07,576
step.

384
00:12:08,316 --> 00:12:09,786
In a little bit we'll talk about

385
00:12:09,786 --> 00:12:11,586
making your website's passwords

386
00:12:11,586 --> 00:12:12,946
show up on the left.

387
00:12:13,656 --> 00:12:15,456
But what seeing this bar means

388
00:12:15,796 --> 00:12:17,506
is that iOS is ready to offer

389
00:12:17,506 --> 00:12:18,516
Password AutoFill.

390
00:12:18,516 --> 00:12:21,206
And if users tap on that key on

391
00:12:21,206 --> 00:12:23,176
the right-hand side, they'll be

392
00:12:23,176 --> 00:12:24,856
able to authenticate using Touch

393
00:12:24,856 --> 00:12:27,526
ID and see a list of their

394
00:12:27,526 --> 00:12:29,306
passwords that they can search

395
00:12:29,306 --> 00:12:30,826
through or scroll through in

396
00:12:30,826 --> 00:12:31,776
order to fill one of those

397
00:12:31,776 --> 00:12:34,216
passwords within your app.

398
00:12:34,216 --> 00:12:35,336
And once they've found the right

399
00:12:35,336 --> 00:12:38,276
password, and they tap it, iOS

400
00:12:38,276 --> 00:12:39,906
will fill that information into

401
00:12:39,956 --> 00:12:41,816
your fields.

402
00:12:41,976 --> 00:12:43,246
Which brings us to our next

403
00:12:43,246 --> 00:12:45,946
topic, which is ensuring the

404
00:12:45,946 --> 00:12:48,066
information that's filled into

405
00:12:48,066 --> 00:12:49,606
your text fields is understood

406
00:12:49,606 --> 00:12:51,556
by your app and that users able

407
00:12:51,556 --> 00:12:52,936
to log in successfully

408
00:12:52,936 --> 00:12:53,476
afterward.

409
00:12:54,226 --> 00:12:56,926
iOS is going to do its best to

410
00:12:56,926 --> 00:12:58,136
put information into your

411
00:12:58,136 --> 00:13:00,076
username and password fields in

412
00:12:58,136 --> 00:13:00,076
username and password fields in

413
00:13:00,076 --> 00:13:01,596
a very similar way to how users

414
00:13:01,596 --> 00:13:02,716
would type that information

415
00:13:02,716 --> 00:13:03,316
themselves.

416
00:13:04,236 --> 00:13:05,346
But it's still a good idea to

417
00:13:05,346 --> 00:13:07,676
test that your app behaves

418
00:13:07,716 --> 00:13:09,446
properly after information has

419
00:13:09,446 --> 00:13:10,186
been autofilled.

420
00:13:10,256 --> 00:13:11,966
What we want to see is that

421
00:13:11,966 --> 00:13:13,316
users are able to just tap your

422
00:13:13,316 --> 00:13:15,406
sign-in button and log directly

423
00:13:15,996 --> 00:13:16,066
in.

424
00:13:16,856 --> 00:13:17,946
So let's talk about what you

425
00:13:17,946 --> 00:13:20,366
need to know about how Password

426
00:13:20,366 --> 00:13:22,206
AutoFill fills into your app.

427
00:13:23,496 --> 00:13:24,926
The first thing is something

428
00:13:24,926 --> 00:13:26,786
you've already seen, which is

429
00:13:26,786 --> 00:13:28,196
that iOS will fill both the

430
00:13:28,196 --> 00:13:30,036
username and the password fields

431
00:13:30,376 --> 00:13:31,306
in a single gesture.

432
00:13:31,496 --> 00:13:34,146
iOS will change your app's first

433
00:13:34,146 --> 00:13:35,816
responder in order to do this.

434
00:13:36,296 --> 00:13:39,416
iOS is going to do this even if

435
00:13:39,416 --> 00:13:40,826
your app prevents changing the

436
00:13:40,826 --> 00:13:42,186
first responder at that time.

437
00:13:42,976 --> 00:13:43,886
So if you're doing something

438
00:13:43,886 --> 00:13:47,776
like this, it's worth knowing.

439
00:13:48,046 --> 00:13:50,016
A moment ago I showed you the

440
00:13:50,016 --> 00:13:51,316
flow where a user taps on the

441
00:13:51,316 --> 00:13:53,086
key icon and Touch ID comes up.

442
00:13:53,966 --> 00:13:55,806
And when Touch ID appears, your

443
00:13:55,806 --> 00:13:57,046
app will become inactive.

444
00:13:57,046 --> 00:14:00,106
And that's worth knowing because

445
00:13:57,046 --> 00:14:00,106
And that's worth knowing because

446
00:14:00,106 --> 00:14:02,356
it leads directly into our first

447
00:14:03,056 --> 00:14:04,656
best practice.

448
00:14:04,716 --> 00:14:06,526
Which is that when Touch ID

449
00:14:06,526 --> 00:14:08,496
appears, there's no need for you

450
00:14:08,496 --> 00:14:11,266
to tear down your login UI or

451
00:14:11,266 --> 00:14:13,036
hide it when your app becomes

452
00:14:13,036 --> 00:14:13,436
inactive.

453
00:14:13,966 --> 00:14:15,486
Because if you do this, all a

454
00:14:15,486 --> 00:14:17,036
user is going to see is tapping

455
00:14:17,036 --> 00:14:18,796
on the key, finding the right

456
00:14:18,796 --> 00:14:19,676
password and tapping it.

457
00:14:19,676 --> 00:14:21,216
And then iOS isn't going to be

458
00:14:21,216 --> 00:14:22,536
able to fill anything because

459
00:14:22,536 --> 00:14:23,576
the text fields will have

460
00:14:23,576 --> 00:14:24,246
disappeared.

461
00:14:25,236 --> 00:14:27,216
So, it might be a good idea to

462
00:14:27,336 --> 00:14:29,036
hide sensitive information in

463
00:14:29,036 --> 00:14:30,436
your app when your app becomes

464
00:14:30,436 --> 00:14:30,876
inactive.

465
00:14:31,786 --> 00:14:33,066
But if a user actually hasn't

466
00:14:33,066 --> 00:14:34,596
finished logging in yet, that's

467
00:14:34,596 --> 00:14:35,746
probably not necessary.

468
00:14:38,016 --> 00:14:40,166
You might have buttons in your

469
00:14:40,566 --> 00:14:41,626
app, like a login button or a

470
00:14:41,626 --> 00:14:43,466
sign-in button, that only lights

471
00:14:43,466 --> 00:14:45,116
up and enables itself once

472
00:14:45,116 --> 00:14:46,466
there's actually information

473
00:14:46,586 --> 00:14:48,396
filled into the username and

474
00:14:48,396 --> 00:14:49,136
password field.

475
00:14:49,726 --> 00:14:51,926
And the best practice here is to

476
00:14:51,926 --> 00:14:54,016
us did change notifications or

477
00:14:54,376 --> 00:14:56,156
delegate methods to revalidate

478
00:14:56,196 --> 00:14:57,766
those buttons whenever the text

479
00:14:57,766 --> 00:14:58,246
changes.

480
00:14:58,816 --> 00:15:03,446
If you're using UITextField,

481
00:14:58,816 --> 00:15:03,446
If you're using UITextField,

482
00:15:03,906 --> 00:15:05,046
there's a notification that you

483
00:15:05,046 --> 00:15:05,566
can use.

484
00:15:06,276 --> 00:15:07,846
If you're using UITextView,

485
00:15:07,846 --> 00:15:10,026
there's a notification and a

486
00:15:10,026 --> 00:15:10,716
delegate method.

487
00:15:11,636 --> 00:15:12,626
And if you're rolling your own

488
00:15:12,626 --> 00:15:15,056
custom text input, if you can

489
00:15:15,056 --> 00:15:16,796
form the UITextInputDelegate,

490
00:15:17,316 --> 00:15:18,306
there's a delegate method that

491
00:15:18,306 --> 00:15:19,966
you can listen to again to

492
00:15:19,966 --> 00:15:21,066
revalidate your buttons.

493
00:15:21,646 --> 00:15:25,206
And when you're doing that

494
00:15:25,206 --> 00:15:27,136
validation, you should read

495
00:15:27,136 --> 00:15:29,296
information directly from your

496
00:15:29,296 --> 00:15:30,876
text field's text property.

497
00:15:31,776 --> 00:15:34,106
UIKit makes it incredibly cheap

498
00:15:34,356 --> 00:15:35,686
to read information out of a

499
00:15:35,686 --> 00:15:36,256
text field.

500
00:15:36,606 --> 00:15:37,676
And it's always accurate.

501
00:15:38,536 --> 00:15:40,626
If you do this, you'll eliminate

502
00:15:40,836 --> 00:15:42,566
categorically an entire class of

503
00:15:42,566 --> 00:15:43,646
bugs that you can have with

504
00:15:43,646 --> 00:15:45,666
cash-in validation based on what

505
00:15:45,666 --> 00:15:47,146
information is entered into your

506
00:15:47,146 --> 00:15:47,766
text fields.

507
00:15:52,376 --> 00:15:53,186
And that's it.

508
00:15:53,626 --> 00:15:55,316
That's just a few best practices

509
00:15:55,316 --> 00:15:57,246
for ensuring that after a user

510
00:15:57,246 --> 00:15:59,896
has used AutoFill, that your app

511
00:15:59,896 --> 00:16:01,556
is able to login successfully.

512
00:15:59,896 --> 00:16:01,556
is able to login successfully.

513
00:16:01,746 --> 00:16:02,826
And users can go about their

514
00:16:02,826 --> 00:16:03,236
business.

515
00:16:04,296 --> 00:16:06,146
Which brings us to our third

516
00:16:06,146 --> 00:16:08,826
topic, which is making sure that

517
00:16:08,826 --> 00:16:10,486
the QuickType bar is showing the

518
00:16:10,486 --> 00:16:11,956
exact right credentials for your

519
00:16:11,956 --> 00:16:12,366
website.

520
00:16:12,366 --> 00:16:17,676
So at this point in your testing

521
00:16:18,146 --> 00:16:19,406
you might still have what we saw

522
00:16:19,406 --> 00:16:21,626
earlier, which is a bar with a

523
00:16:21,626 --> 00:16:23,086
key on it, but without any

524
00:16:23,086 --> 00:16:24,266
specific credentials on the

525
00:16:24,266 --> 00:16:24,546
left.

526
00:16:25,776 --> 00:16:27,066
But as you know, in order to

527
00:16:27,066 --> 00:16:28,916
give users the best experience,

528
00:16:29,416 --> 00:16:30,836
the one that is most going to

529
00:16:30,836 --> 00:16:32,216
reduce the odds that they

530
00:16:32,216 --> 00:16:34,956
abandon your app, we'll want the

531
00:16:34,956 --> 00:16:36,366
exact correct credentials

532
00:16:36,366 --> 00:16:37,626
showing up on the QuickType bar.

533
00:16:38,186 --> 00:16:40,616
And I touched on this briefly

534
00:16:40,616 --> 00:16:42,556
during the demo earlier, but

535
00:16:42,556 --> 00:16:44,256
Password AutoFill will only put

536
00:16:44,256 --> 00:16:45,876
credentials on the QuickType bar

537
00:16:46,166 --> 00:16:47,486
when it is safe to do so.

538
00:16:47,786 --> 00:16:48,516
When it's secure.

539
00:16:48,776 --> 00:16:52,596
iOS is not guessing what

540
00:16:53,106 --> 00:16:54,926
websites are affiliated with

541
00:16:54,926 --> 00:16:56,466
your app to find out which

542
00:16:56,466 --> 00:16:57,626
passwords are correct for your

543
00:16:58,246 --> 00:16:58,426
app.

544
00:16:58,426 --> 00:16:59,166
iOS knows.

545
00:16:59,166 --> 00:17:02,206
So if you've adopted universal

546
00:16:59,166 --> 00:17:02,206
So if you've adopted universal

547
00:17:02,206 --> 00:17:04,806
links, that feature that can

548
00:17:04,806 --> 00:17:06,465
open up links when a user taps

549
00:17:06,465 --> 00:17:07,695
on them inside of your app,

550
00:17:08,366 --> 00:17:09,705
rather than opening them up in

551
00:17:09,705 --> 00:17:11,965
Safari, if you've done that, you

552
00:17:11,965 --> 00:17:13,776
might actually already see that

553
00:17:13,776 --> 00:17:15,266
iOS understands that your app

554
00:17:15,266 --> 00:17:16,816
and your website are associated.

555
00:17:16,816 --> 00:17:17,976
And it'll put the right

556
00:17:17,976 --> 00:17:19,256
credentials on the QuickType

557
00:17:19,256 --> 00:17:19,506
bar.

558
00:17:20,056 --> 00:17:22,415
But if you haven't adopted

559
00:17:22,415 --> 00:17:23,976
universal links, or it doesn't

560
00:17:23,976 --> 00:17:25,106
really make sense for you to do

561
00:17:25,106 --> 00:17:26,846
so, there's no need to worry.

562
00:17:27,425 --> 00:17:29,126
We have a dedicated technology

563
00:17:29,386 --> 00:17:30,506
to linking your app and your

564
00:17:30,506 --> 00:17:31,766
website together strongly.

565
00:17:31,766 --> 00:17:32,586
And I'm going to walk you

566
00:17:32,586 --> 00:17:32,976
through it.

567
00:17:38,056 --> 00:17:39,686
In this diagram it's your app on

568
00:17:39,686 --> 00:17:40,026
the left.

569
00:17:40,226 --> 00:17:41,366
And on the right is your web

570
00:17:41,366 --> 00:17:42,426
server or your backend.

571
00:17:43,266 --> 00:17:44,866
So the ideas is that your app,

572
00:17:45,816 --> 00:17:47,786
through its signed entitlements,

573
00:17:48,156 --> 00:17:51,096
says what website or websites it

574
00:17:51,096 --> 00:17:51,986
is affiliated with.

575
00:17:52,926 --> 00:17:54,016
And whenever your app is

576
00:17:54,016 --> 00:17:55,956
installed or iOS installs an

577
00:17:55,986 --> 00:17:58,216
update, iOS is going to check

578
00:17:58,356 --> 00:18:00,636
with that domain at a particular

579
00:17:58,356 --> 00:18:00,636
with that domain at a particular

580
00:18:00,636 --> 00:18:03,576
file path to see, to look for

581
00:18:03,576 --> 00:18:04,276
some information.

582
00:18:05,576 --> 00:18:07,696
If you don't know the well-known

583
00:18:07,696 --> 00:18:09,396
directory, it's just a standard

584
00:18:09,396 --> 00:18:10,546
place to put files for

585
00:18:10,546 --> 00:18:12,416
information discovery, like the

586
00:18:12,416 --> 00:18:13,376
file I'm about to tell you

587
00:18:13,376 --> 00:18:13,676
about:

588
00:18:13,676 --> 00:18:15,146
Apple-app-site-association.

589
00:18:16,376 --> 00:18:18,896
iOS will only ever attempt to

590
00:18:18,896 --> 00:18:22,026
fetch this file over HTTPS, over

591
00:18:22,026 --> 00:18:22,766
a secure connection.

592
00:18:26,356 --> 00:18:28,226
In response to that request,

593
00:18:28,716 --> 00:18:30,996
your website can return a JSON

594
00:18:30,996 --> 00:18:31,616
response.

595
00:18:32,346 --> 00:18:33,846
And if that JSON response is

596
00:18:33,886 --> 00:18:35,606
formatted properly, what it can

597
00:18:35,606 --> 00:18:37,766
say is: Here is the list of apps

598
00:18:37,936 --> 00:18:39,116
that I'm associated with.

599
00:18:39,646 --> 00:18:44,116
And if the app points to the

600
00:18:44,116 --> 00:18:45,896
website, and the website points

601
00:18:45,896 --> 00:18:47,656
right back to the app, boom!

602
00:18:48,136 --> 00:18:49,756
We have a secure two-way link.

603
00:18:50,396 --> 00:18:52,546
So to put what I've told you

604
00:18:52,546 --> 00:18:54,286
about so far into practice,

605
00:18:54,796 --> 00:18:56,416
particularly with establishing

606
00:18:56,416 --> 00:18:58,296
this secure connection between

607
00:18:58,296 --> 00:19:00,366
your app and your website, I am

608
00:18:58,296 --> 00:19:00,366
your app and your website, I am

609
00:19:00,366 --> 00:19:02,216
delighted to invite my colleague

610
00:19:02,216 --> 00:19:04,036
Maureen Daum to the stage to

611
00:19:04,036 --> 00:19:04,676
give you a demo.

612
00:19:05,346 --> 00:19:05,626
Maureen.

613
00:19:07,516 --> 00:19:12,876
[ Applause ]

614
00:19:13,376 --> 00:19:14,396
&gt;&gt; Thanks Ricky.

615
00:19:16,396 --> 00:19:18,786
So, here I have the Shiny app

616
00:19:19,006 --> 00:19:20,896
before we've done any work to

617
00:19:20,896 --> 00:19:23,186
make Password AutoFill work with

618
00:19:23,806 --> 00:19:23,873
it.

619
00:19:24,076 --> 00:19:25,546
So when I tap in the username

620
00:19:25,586 --> 00:19:28,566
field, iOS automatically

621
00:19:28,566 --> 00:19:30,606
detected that this is in fact

622
00:19:30,606 --> 00:19:31,486
the username field.

623
00:19:31,486 --> 00:19:33,316
And it gives us the Password

624
00:19:33,316 --> 00:19:35,516
AutoFill QuickType bar -- thank

625
00:19:35,516 --> 00:19:36,846
you -- for free.

626
00:19:37,356 --> 00:19:38,996
So now users, if they don't

627
00:19:38,996 --> 00:19:41,056
remember their credentials, can

628
00:19:41,056 --> 00:19:42,336
tap on the Key icon,

629
00:19:42,866 --> 00:19:45,636
authenticate with Touch ID and

630
00:19:45,636 --> 00:19:47,326
find the right credential.

631
00:19:47,326 --> 00:19:48,556
So here it is.

632
00:19:48,556 --> 00:19:51,416
So this is a great experience

633
00:19:51,416 --> 00:19:52,976
for my users that might not

634
00:19:52,976 --> 00:19:54,886
remember their credentials.

635
00:19:55,446 --> 00:19:56,986
But what I really want to make

636
00:19:56,986 --> 00:19:59,086
it even easier for them to log

637
00:19:59,086 --> 00:20:01,136
in is to have those credentials

638
00:19:59,086 --> 00:20:01,136
in is to have those credentials

639
00:20:01,136 --> 00:20:03,906
show up right on the QuickType

640
00:20:03,906 --> 00:20:04,176
bar.

641
00:20:04,316 --> 00:20:06,796
So I'm going to do two things in

642
00:20:06,796 --> 00:20:07,426
this demo.

643
00:20:08,016 --> 00:20:10,096
The first is to guarantee that

644
00:20:10,096 --> 00:20:11,806
we get this password QuickType

645
00:20:11,836 --> 00:20:13,876
bar instead of just relying on

646
00:20:13,876 --> 00:20:14,316
the heuristics.

647
00:20:14,316 --> 00:20:16,456
And the second thing is to get

648
00:20:16,456 --> 00:20:17,826
the right credentials on the

649
00:20:17,826 --> 00:20:18,556
QuickType bar.

650
00:20:19,086 --> 00:20:20,406
So let's do that first step,

651
00:20:20,886 --> 00:20:22,416
guaranteeing that we get the

652
00:20:22,416 --> 00:20:23,046
credentials.

653
00:20:23,656 --> 00:20:25,576
To do this, I'm going to tag my

654
00:20:25,576 --> 00:20:27,166
username and password fields

655
00:20:27,556 --> 00:20:28,746
with the right content type.

656
00:20:28,846 --> 00:20:30,976
So here's my username field.

657
00:20:31,056 --> 00:20:33,126
And I've already set its content

658
00:20:33,126 --> 00:20:35,336
type to email address, because

659
00:20:35,336 --> 00:20:37,106
some of my usernames might be

660
00:20:37,106 --> 00:20:37,886
email addresses.

661
00:20:38,496 --> 00:20:39,716
But if I switch this to

662
00:20:39,716 --> 00:20:41,086
username, down here at the

663
00:20:41,086 --> 00:20:43,216
bottom, I can set the keyboard

664
00:20:43,216 --> 00:20:44,646
type to email address.

665
00:20:45,286 --> 00:20:46,736
So go down here the keyboard

666
00:20:46,736 --> 00:20:49,106
type and set that one to email.

667
00:20:49,626 --> 00:20:51,566
So now if the user has to type

668
00:20:51,566 --> 00:20:53,276
in their username, they'll still

669
00:20:53,276 --> 00:20:54,406
get the right keyboard.

670
00:20:55,356 --> 00:20:57,006
And now I'll go to password and

671
00:20:57,056 --> 00:20:58,576
set that content type to

672
00:20:58,576 --> 00:21:00,326
password, all the way at the

673
00:20:58,576 --> 00:21:00,326
password, all the way at the

674
00:21:00,326 --> 00:21:00,756
bottom.

675
00:21:02,226 --> 00:21:05,106
So, I'm going to rerun this just

676
00:21:05,106 --> 00:21:06,736
to verify that we still get the

677
00:21:06,736 --> 00:21:08,206
QuickType bar showing up.

678
00:21:08,696 --> 00:21:10,166
We don't expect anything to have

679
00:21:10,166 --> 00:21:12,596
changed because iOS was already

680
00:21:12,596 --> 00:21:13,416
detecting it.

681
00:21:13,416 --> 00:21:14,506
But it's good to make sure.

682
00:21:15,906 --> 00:21:18,816
So now, once the login screen

683
00:21:18,816 --> 00:21:22,276
comes up, we can tap in and we

684
00:21:22,336 --> 00:21:23,566
still get the QuickType bar,

685
00:21:23,716 --> 00:21:24,456
which is great.

686
00:21:25,146 --> 00:21:27,476
So now, to get the credentials

687
00:21:27,476 --> 00:21:29,746
showing up, we need to tell iOS

688
00:21:30,486 --> 00:21:32,366
that our app and our website are

689
00:21:32,456 --> 00:21:33,166
associated.

690
00:21:33,586 --> 00:21:35,496
And to do this, we'll adopt the

691
00:21:35,496 --> 00:21:37,776
web credentials associated

692
00:21:37,776 --> 00:21:38,606
domain service.

693
00:21:39,646 --> 00:21:42,326
So, to do this, the first step,

694
00:21:42,326 --> 00:21:45,616
is to make our app tell iOS what

695
00:21:45,616 --> 00:21:47,406
websites it's associated with.

696
00:21:48,296 --> 00:21:49,736
So we'll go here to the

697
00:21:49,736 --> 00:21:52,416
Capabilities tab in our app and

698
00:21:52,416 --> 00:21:54,336
turn on Associated Domains.

699
00:21:55,706 --> 00:21:58,726
So now I have the ability to add

700
00:21:58,726 --> 00:22:01,456
domains that my app is

701
00:21:58,726 --> 00:22:01,456
domains that my app is

702
00:22:01,456 --> 00:22:03,256
associated with.

703
00:22:03,256 --> 00:22:05,136
So click the Plus button and

704
00:22:05,136 --> 00:22:08,866
Xcode as a placeholder domain

705
00:22:08,866 --> 00:22:09,266
for me.

706
00:22:09,626 --> 00:22:11,836
So it has the web credentials

707
00:22:11,836 --> 00:22:13,766
:prefix, because we're using the

708
00:22:13,766 --> 00:22:14,976
web credential service.

709
00:22:15,526 --> 00:22:17,176
And then you will replace

710
00:22:17,246 --> 00:22:19,886
example.com with the domain your

711
00:22:19,886 --> 00:22:21,746
app is associated with.

712
00:22:21,746 --> 00:22:23,426
So my app is associated with

713
00:22:23,496 --> 00:22:26,206
Shiny.example.com.

714
00:22:27,096 --> 00:22:29,676
And when you add a domain, Xcode

715
00:22:29,676 --> 00:22:30,776
will do two things.

716
00:22:31,486 --> 00:22:33,196
The first is it adds an

717
00:22:33,196 --> 00:22:34,976
entitlement to your entitlements

718
00:22:34,976 --> 00:22:36,776
file so that when your app is

719
00:22:36,776 --> 00:22:39,256
installed iOS will look at this

720
00:22:39,256 --> 00:22:41,316
list of domains and go to each

721
00:22:41,316 --> 00:22:42,766
one of them to find the

722
00:22:43,076 --> 00:22:45,036
Apple-App-Site-Association file.

723
00:22:45,886 --> 00:22:47,586
The second thing it does is it

724
00:22:47,586 --> 00:22:49,806
makes sure that your app has

725
00:22:49,806 --> 00:22:51,586
associated domains enabled.

726
00:22:52,466 --> 00:22:54,606
So if your app ID does not have

727
00:22:54,606 --> 00:22:56,246
this enabled, you won't see a

728
00:22:56,246 --> 00:22:57,966
checkmark next to this second

729
00:22:57,966 --> 00:22:58,336
thing.

730
00:22:58,486 --> 00:23:00,106
It will have an error.

731
00:22:58,486 --> 00:23:00,106
It will have an error.

732
00:23:00,736 --> 00:23:02,466
So, if you see an error there,

733
00:23:02,466 --> 00:23:03,836
it's really easy to fix.

734
00:23:04,326 --> 00:23:05,496
You just need to go to the

735
00:23:05,496 --> 00:23:07,496
Developer Portal, select your

736
00:23:07,676 --> 00:23:09,826
app ID, and turn on Associated

737
00:23:09,826 --> 00:23:10,366
Domains.

738
00:23:10,916 --> 00:23:12,286
And then it will be fixed.

739
00:23:12,986 --> 00:23:15,506
So that is all we had to do to

740
00:23:15,506 --> 00:23:18,976
tell iOS that our app is

741
00:23:18,976 --> 00:23:20,616
associated with our website.

742
00:23:20,616 --> 00:23:22,586
But now we need to make our

743
00:23:22,586 --> 00:23:25,206
website agree and point back to

744
00:23:25,206 --> 00:23:26,786
our app so that iOS can

745
00:23:26,786 --> 00:23:28,286
establish the two-way link.

746
00:23:28,726 --> 00:23:31,306
So to do this, I'll create an

747
00:23:31,306 --> 00:23:33,446
Apple App Site association file.

748
00:23:34,566 --> 00:23:37,106
So, here's some JSON that

749
00:23:37,106 --> 00:23:39,496
specifies we're using the web

750
00:23:39,496 --> 00:23:41,326
credential service, which

751
00:23:41,326 --> 00:23:43,196
matches what we saw in Xcode.

752
00:23:44,036 --> 00:23:45,736
Then within this dictionary is a

753
00:23:45,736 --> 00:23:48,296
list of all the app IDs of the

754
00:23:48,296 --> 00:23:50,216
apps our website is associated

755
00:23:50,216 --> 00:23:50,436
with.

756
00:23:51,126 --> 00:23:52,876
And my website only knows about

757
00:23:52,876 --> 00:23:54,196
the Shiny app.

758
00:23:54,346 --> 00:23:56,506
So its app ID consists of the

759
00:23:56,506 --> 00:23:58,886
Team Identifier, which you can

760
00:23:58,886 --> 00:24:00,496
find on the Developer Portal,

761
00:23:58,886 --> 00:24:00,496
find on the Developer Portal,

762
00:24:01,106 --> 00:24:03,446
followed by a period, and then

763
00:24:03,446 --> 00:24:04,776
your bundle identifier.

764
00:24:05,676 --> 00:24:06,756
So let's save that.

765
00:24:07,196 --> 00:24:08,956
And now I need to get it onto my

766
00:24:08,956 --> 00:24:09,776
server.

767
00:24:10,176 --> 00:24:11,946
And this step might look

768
00:24:11,946 --> 00:24:13,296
different for you depending on

769
00:24:13,296 --> 00:24:14,566
how your website is set up.

770
00:24:15,146 --> 00:24:17,386
But I'm just going to use SCP to

771
00:24:17,386 --> 00:24:18,736
copy it up there, to the

772
00:24:18,876 --> 00:24:20,386
.well-known subdirectory.

773
00:24:21,336 --> 00:24:22,446
Great. So it's up there.

774
00:24:22,446 --> 00:24:24,066
And then just to double check,

775
00:24:24,066 --> 00:24:27,546
I'm going to go into Safari and

776
00:24:27,546 --> 00:24:29,716
visit the site that iOS is going

777
00:24:29,716 --> 00:24:30,246
to look at.

778
00:24:30,756 --> 00:24:33,006
So it's HTTPS

779
00:24:33,006 --> 00:24:37,036
Shiny.example.com/.well-known/

780
00:24:37,556 --> 00:24:39,726
apple-app-site-association.

781
00:24:39,726 --> 00:24:42,176
And when I go there, it's great.

782
00:24:42,176 --> 00:24:45,216
I see the JSON recreated.

783
00:24:45,376 --> 00:24:47,106
And I don't see any smart

784
00:24:47,106 --> 00:24:48,866
quotes, which could cause the

785
00:24:48,866 --> 00:24:50,666
JSON to be malformed and

786
00:24:50,786 --> 00:24:51,786
therefore it wouldn't work.

787
00:24:52,486 --> 00:24:54,136
So, it looks like we're all set.

788
00:24:54,756 --> 00:24:57,136
We've set up our app to point to

789
00:24:57,136 --> 00:24:57,806
our website.

790
00:24:58,186 --> 00:25:00,696
Our website to point to our app.

791
00:24:58,186 --> 00:25:00,696
Our website to point to our app.

792
00:25:00,696 --> 00:25:03,196
So let's rerun this and see that

793
00:25:03,196 --> 00:25:04,696
we get the credentials we want

794
00:25:05,116 --> 00:25:06,936
showing up on the QuickType bar.

795
00:25:07,746 --> 00:25:09,006
And when you're testing this on

796
00:25:09,006 --> 00:25:10,966
your apps, make sure to test it

797
00:25:11,026 --> 00:25:13,156
on a device, because Associated

798
00:25:13,156 --> 00:25:14,916
Domains is a device-only

799
00:25:14,916 --> 00:25:15,376
feature.

800
00:25:15,976 --> 00:25:18,836
So here we are back in our app.

801
00:25:18,836 --> 00:25:20,366
I tap in the username field.

802
00:25:20,366 --> 00:25:22,396
Great! We have the credentials

803
00:25:22,396 --> 00:25:23,866
right there on the QuickType

804
00:25:23,896 --> 00:25:24,196
bar.

805
00:25:24,726 --> 00:25:27,536
So my users can tap, fill them

806
00:25:27,536 --> 00:25:30,196
in, one more tap, and then they

807
00:25:30,196 --> 00:25:31,596
get to see a really adorable

808
00:25:31,596 --> 00:25:32,096
puppy.

809
00:25:32,806 --> 00:25:34,116
So that's how easy it is to

810
00:25:34,116 --> 00:25:36,346
guarantee that Password AutoFill

811
00:25:36,346 --> 00:25:37,966
will work in your app.

812
00:25:37,966 --> 00:25:39,376
And that the credentials your

813
00:25:39,376 --> 00:25:41,576
users need will show up on the

814
00:25:41,576 --> 00:25:43,546
QuickType bar to get them logged

815
00:25:43,546 --> 00:25:44,386
in really quickly.

816
00:25:45,066 --> 00:25:46,376
So now I'll hand it back over to

817
00:25:46,376 --> 00:25:47,436
Ricky to tell you more.

818
00:25:48,516 --> 00:25:54,756
[ Applause ]

819
00:25:55,256 --> 00:25:56,016
&gt;&gt; Thank you, Maureen.

820
00:25:56,156 --> 00:25:57,176
That was really cool.

821
00:25:59,696 --> 00:26:01,916
Maureen just showed you just how

822
00:25:59,696 --> 00:26:01,916
Maureen just showed you just how

823
00:26:01,986 --> 00:26:04,226
easy it is to set text content

824
00:26:04,226 --> 00:26:06,406
types from within Xcode.

825
00:26:08,816 --> 00:26:11,686
She also showed you how to add

826
00:26:11,686 --> 00:26:13,666
the web credentials associated

827
00:26:13,666 --> 00:26:15,706
domain capability in your app's

828
00:26:15,736 --> 00:26:16,526
Capabilities tab.

829
00:26:17,306 --> 00:26:18,296
And she told you that that

830
00:26:18,296 --> 00:26:19,836
capability gets signed into your

831
00:26:19,836 --> 00:26:20,646
app's binary.

832
00:26:21,226 --> 00:26:23,286
And if you need to enable the

833
00:26:23,286 --> 00:26:25,056
associated domains feature on

834
00:26:25,056 --> 00:26:26,696
the Developer Portal, it's

835
00:26:26,696 --> 00:26:27,666
really easy to find.

836
00:26:27,916 --> 00:26:29,366
I'll show you how to do it.

837
00:26:29,916 --> 00:26:31,746
First, you navigate to the

838
00:26:31,746 --> 00:26:32,466
Developer Portal.

839
00:26:33,376 --> 00:26:35,186
And from there you can click on

840
00:26:35,186 --> 00:26:37,256
Certificates, Identifiers and

841
00:26:37,256 --> 00:26:39,356
Profiles, either in the side bar

842
00:26:39,576 --> 00:26:40,736
or in the main content area.

843
00:26:41,866 --> 00:26:44,066
And from there you can select

844
00:26:44,066 --> 00:26:45,726
App IDs and look at a list of

845
00:26:45,726 --> 00:26:47,336
app IDs that are associated with

846
00:26:47,336 --> 00:26:48,206
your developer account.

847
00:26:48,206 --> 00:26:50,746
And from there, if you select

848
00:26:50,886 --> 00:26:51,686
the app ID that you'd like to

849
00:26:51,686 --> 00:26:53,636
modify, you'll see a list of

850
00:26:53,636 --> 00:26:55,246
services that can be enabled for

851
00:26:55,246 --> 00:26:56,516
your app.

852
00:26:56,516 --> 00:26:57,536
And from there you can click the

853
00:26:57,536 --> 00:26:59,806
Edit button and check the

854
00:26:59,806 --> 00:27:01,366
Associated Domains checkbox.

855
00:26:59,806 --> 00:27:01,366
Associated Domains checkbox.

856
00:27:01,966 --> 00:27:04,386
And that's it.

857
00:27:04,646 --> 00:27:06,866
You also saw just how easy it is

858
00:27:06,866 --> 00:27:07,566
to construct an

859
00:27:07,566 --> 00:27:09,806
Apple-App-Site-Association that

860
00:27:09,806 --> 00:27:12,276
points back to your app from

861
00:27:12,276 --> 00:27:12,876
your website.

862
00:27:13,436 --> 00:27:14,836
It's just a few lines of JSON.

863
00:27:16,816 --> 00:27:19,816
Maureen then uploaded that JSON

864
00:27:19,816 --> 00:27:21,596
file to be served from the

865
00:27:21,656 --> 00:27:23,516
.well-known standard directory

866
00:27:23,596 --> 00:27:25,176
at the root of her web server.

867
00:27:26,236 --> 00:27:27,586
You could also serve this file

868
00:27:27,586 --> 00:27:29,696
from the root of the web server,

869
00:27:29,696 --> 00:27:30,996
but the well-known directory is

870
00:27:31,026 --> 00:27:31,416
preferred.

871
00:27:31,976 --> 00:27:34,646
And if this linkage doesn't work

872
00:27:34,646 --> 00:27:35,866
the first time that you try it,

873
00:27:36,376 --> 00:27:38,286
if you build and run your app

874
00:27:38,286 --> 00:27:39,126
and you're not seeing

875
00:27:39,126 --> 00:27:40,336
credentials showing up on the

876
00:27:40,336 --> 00:27:42,236
QuickType bar, we have a few

877
00:27:42,236 --> 00:27:43,336
steps for you to help the bug.

878
00:27:43,806 --> 00:27:49,576
The SWCD daemon will log

879
00:27:49,576 --> 00:27:50,836
information about making

880
00:27:50,836 --> 00:27:52,376
requests for setting up

881
00:27:52,516 --> 00:27:53,976
associations between your app

882
00:27:53,976 --> 00:27:56,456
and website on your device every

883
00:27:56,456 --> 00:27:57,696
time that you build and run your

884
00:27:57,696 --> 00:27:57,816
app.

885
00:27:58,806 --> 00:28:00,046
So if something's not working,

886
00:27:58,806 --> 00:28:00,046
So if something's not working,

887
00:28:00,316 --> 00:28:02,376
plug your device in, open up

888
00:28:02,376 --> 00:28:04,996
Console, and select the device

889
00:28:04,996 --> 00:28:06,386
in the side bar and look for

890
00:28:06,386 --> 00:28:07,866
logging from SWCD.

891
00:28:08,586 --> 00:28:10,936
On the slide right now you can

892
00:28:10,936 --> 00:28:11,826
see what happens when I

893
00:28:11,826 --> 00:28:13,156
accidentally put

894
00:28:13,156 --> 00:28:15,536
wrong.example.com as my

895
00:28:15,536 --> 00:28:17,096
associated domain inside of

896
00:28:17,136 --> 00:28:17,526
Xcode.

897
00:28:18,096 --> 00:28:19,076
It wasn't able to find an

898
00:28:19,076 --> 00:28:20,616
Apple-App-Site-Association file.

899
00:28:22,056 --> 00:28:23,616
But as soon as I corrected that

900
00:28:23,616 --> 00:28:26,676
to Shiny.example.com iOS was

901
00:28:26,676 --> 00:28:27,586
able to find the

902
00:28:27,676 --> 00:28:29,216
Apple-App-Site-Association file,

903
00:28:29,656 --> 00:28:31,926
verify the two-way link, and

904
00:28:31,926 --> 00:28:34,496
from there iOS can offer the

905
00:28:34,496 --> 00:28:35,956
exact right credentials that

906
00:28:35,956 --> 00:28:37,066
your users are looking for

907
00:28:37,546 --> 00:28:38,836
directly on the QuickType bar.

908
00:28:39,316 --> 00:28:44,036
And at this point you pretty

909
00:28:44,036 --> 00:28:45,886
much have all of the information

910
00:28:45,886 --> 00:28:47,416
that you need to know to make

911
00:28:47,416 --> 00:28:49,436
Password AutoFill work really

912
00:28:49,436 --> 00:28:51,306
well in your app.

913
00:28:51,306 --> 00:28:52,546
I'm hoping that this is one of

914
00:28:52,546 --> 00:28:54,076
the easiest to adopt features

915
00:28:54,366 --> 00:28:55,426
that you've ever wanted to

916
00:28:55,426 --> 00:28:55,866
adopt.

917
00:28:57,016 --> 00:28:58,956
But before we wrap things up, I

918
00:28:58,956 --> 00:29:00,086
just want to quickly touch on a

919
00:28:58,956 --> 00:29:00,086
just want to quickly touch on a

920
00:29:00,086 --> 00:29:01,226
few related topics to

921
00:29:01,226 --> 00:29:02,856
authentication and passwords,

922
00:29:03,376 --> 00:29:04,166
because since you're here,

923
00:29:04,166 --> 00:29:05,346
you're probably interested in

924
00:29:05,346 --> 00:29:05,536
them.

925
00:29:06,006 --> 00:29:09,676
And the first is about viewing,

926
00:29:09,816 --> 00:29:11,966
saving, and adding new passwords

927
00:29:11,966 --> 00:29:12,686
on iOS.

928
00:29:14,266 --> 00:29:16,126
So besides Password AutoFill, we

929
00:29:16,126 --> 00:29:17,786
made another change related to

930
00:29:17,786 --> 00:29:18,816
iCloud Keychain this year.

931
00:29:19,326 --> 00:29:21,836
And that was to move the list of

932
00:29:21,836 --> 00:29:23,146
passwords that you could find in

933
00:29:23,146 --> 00:29:25,156
Settings up to a more prominent

934
00:29:25,156 --> 00:29:27,136
location at the top level called

935
00:29:27,136 --> 00:29:28,946
Accounts and Passwords.

936
00:29:30,126 --> 00:29:33,006
Inside of that section, users

937
00:29:33,006 --> 00:29:34,346
will be able to authenticate

938
00:29:34,346 --> 00:29:36,826
with Touch ID, of course, to

939
00:29:36,826 --> 00:29:38,236
view a list of their safe

940
00:29:38,236 --> 00:29:39,696
passwords, and add new

941
00:29:39,696 --> 00:29:40,286
passwords.

942
00:29:41,566 --> 00:29:43,166
Now, after all of you have

943
00:29:43,166 --> 00:29:44,566
adopted Password AutoFill in

944
00:29:44,566 --> 00:29:46,266
your apps, users aren't going to

945
00:29:46,266 --> 00:29:47,836
have a ton of reasons to come in

946
00:29:47,836 --> 00:29:49,446
here to copy and paste passwords

947
00:29:49,446 --> 00:29:49,856
anymore.

948
00:29:50,776 --> 00:29:51,816
But it can still be useful to

949
00:29:51,816 --> 00:29:53,436
look up a password if you need

950
00:29:53,436 --> 00:29:54,946
to enter it on a friend's device

951
00:29:54,996 --> 00:29:56,096
where you don't have your iCloud

952
00:29:56,096 --> 00:29:56,536
Keychain.

953
00:29:57,116 --> 00:30:01,706
Okay, this whole time we've been

954
00:29:57,116 --> 00:30:01,706
Okay, this whole time we've been

955
00:30:01,706 --> 00:30:03,226
talking about a specific type of

956
00:30:03,226 --> 00:30:05,546
authentication, where your app

957
00:30:05,546 --> 00:30:06,866
and your website, they're the

958
00:30:06,866 --> 00:30:07,676
same entity.

959
00:30:07,676 --> 00:30:08,846
You're logging into a service

960
00:30:08,846 --> 00:30:10,536
that you or your company owns.

961
00:30:11,506 --> 00:30:12,236
But I know that there's a

962
00:30:12,236 --> 00:30:13,746
different type of authentication

963
00:30:14,196 --> 00:30:16,316
that a bunch of you need, which

964
00:30:16,316 --> 00:30:17,786
is to log into a third party

965
00:30:17,786 --> 00:30:19,536
service like a popular social

966
00:30:21,336 --> 00:30:22,186
network.

967
00:30:22,186 --> 00:30:23,266
iOS's solution for

968
00:30:23,266 --> 00:30:25,046
authenticating against a social

969
00:30:25,046 --> 00:30:27,386
network using a technique like

970
00:30:27,446 --> 00:30:29,766
o-Off is Safari View Controller.

971
00:30:30,436 --> 00:30:32,146
And the reason for that is that

972
00:30:32,146 --> 00:30:33,366
Safari View controller has

973
00:30:33,366 --> 00:30:35,186
Safari's AutoFill feature, which

974
00:30:35,186 --> 00:30:36,226
makes it really easy to get

975
00:30:36,226 --> 00:30:36,846
logged in.

976
00:30:37,506 --> 00:30:39,436
And also, Safari View Controller

977
00:30:39,436 --> 00:30:41,496
is sandboxed away from the third

978
00:30:41,496 --> 00:30:43,706
party app, which gives the

979
00:30:43,706 --> 00:30:44,486
service that's being

980
00:30:44,486 --> 00:30:46,186
authenticated to a sort of

981
00:30:46,186 --> 00:30:47,796
guarantee about the security of

982
00:30:47,796 --> 00:30:48,496
the passwords.

983
00:30:49,136 --> 00:30:52,496
In iOS 11 Safari View Controller

984
00:30:52,496 --> 00:30:53,396
has been revamped.

985
00:30:54,196 --> 00:30:56,076
It has a new look that you can

986
00:30:56,076 --> 00:30:57,926
customize to make it feel more

987
00:30:57,926 --> 00:30:59,386
like part of your application.

988
00:31:00,336 --> 00:31:02,266
So here you're seeing a demo app

989
00:31:02,426 --> 00:31:03,456
presenting a Safari View

990
00:31:03,456 --> 00:31:04,936
Controller tinted blue and

991
00:31:04,936 --> 00:31:05,126
white.

992
00:31:05,576 --> 00:31:06,506
It doesn't look very much like

993
00:31:06,506 --> 00:31:06,936
Safari.

994
00:31:06,966 --> 00:31:08,356
It looks like the app itself.

995
00:31:09,006 --> 00:31:11,006
And what this app has also done

996
00:31:11,476 --> 00:31:12,966
is change the top left corner

997
00:31:12,966 --> 00:31:14,246
button of the Safari View

998
00:31:14,246 --> 00:31:16,126
Controller to say Cancel instead

999
00:31:16,126 --> 00:31:16,516
of Done.

1000
00:31:17,436 --> 00:31:18,396
Because when Safari View

1001
00:31:18,396 --> 00:31:19,756
Controller is being used for

1002
00:31:19,756 --> 00:31:21,666
authentication, dismissing the

1003
00:31:21,666 --> 00:31:22,736
Safari View Controller is

1004
00:31:22,736 --> 00:31:24,536
cancelling the action of logging

1005
00:31:24,536 --> 00:31:24,746
in.

1006
00:31:25,086 --> 00:31:26,266
It's not actually successfully

1007
00:31:26,266 --> 00:31:27,026
finishing anything.

1008
00:31:27,026 --> 00:31:30,246
So Done doesn't make sense.

1009
00:31:30,416 --> 00:31:31,616
To learn about even more

1010
00:31:31,616 --> 00:31:33,566
customizations to Safari View

1011
00:31:33,566 --> 00:31:35,136
Controller, and how to implement

1012
00:31:35,136 --> 00:31:36,446
what I just showed you, you

1013
00:31:36,446 --> 00:31:37,546
should definitely check out the

1014
00:31:37,546 --> 00:31:39,126
session tomorrow at 10 a.m.

1015
00:31:39,466 --> 00:31:40,826
What's New in Safari View

1016
00:31:40,826 --> 00:31:41,276
Controller.

1017
00:31:41,816 --> 00:31:43,826
And if you want to learn more

1018
00:31:43,826 --> 00:31:45,636
information about implementing

1019
00:31:45,636 --> 00:31:47,376
an o-OFF flow yourself using

1020
00:31:47,376 --> 00:31:49,386
Safari View Controller, you can

1021
00:31:49,386 --> 00:31:51,056
go back to the 2015 session

1022
00:31:51,106 --> 00:31:52,176
Introducing Safari View

1023
00:31:52,176 --> 00:31:52,596
Controller.

1024
00:31:53,836 --> 00:31:54,766
You might not even be

1025
00:31:54,766 --> 00:31:55,816
implementing a Safari View

1026
00:31:55,816 --> 00:31:57,486
Controller yourself to do o-Off,

1027
00:31:57,786 --> 00:31:59,246
it might actually come for free

1028
00:31:59,246 --> 00:32:00,666
as part of an SDK you're using

1029
00:31:59,246 --> 00:32:00,666
as part of an SDK you're using

1030
00:32:00,666 --> 00:32:01,486
for authentication.

1031
00:32:01,486 --> 00:32:02,666
So that's worth knowing.

1032
00:32:04,276 --> 00:32:04,866
All right.

1033
00:32:05,376 --> 00:32:07,866
Let's talk about everything that

1034
00:32:07,866 --> 00:32:08,686
we've covered so far.

1035
00:32:11,696 --> 00:32:13,916
Friction when logging in can

1036
00:32:13,916 --> 00:32:15,336
lead users to abandoning your

1037
00:32:15,336 --> 00:32:15,546
app.

1038
00:32:16,056 --> 00:32:16,756
And we don't want that.

1039
00:32:16,976 --> 00:32:17,876
Your apps are awesome.

1040
00:32:17,876 --> 00:32:19,116
We want users to use them.

1041
00:32:20,056 --> 00:32:21,826
But fortunately in iOS 11,

1042
00:32:22,156 --> 00:32:23,486
Password AutoFill is there to

1043
00:32:23,486 --> 00:32:23,766
help.

1044
00:32:24,526 --> 00:32:26,046
And Password AutoFill uses

1045
00:32:26,046 --> 00:32:28,446
heuristics to work automatically

1046
00:32:28,446 --> 00:32:30,106
in many of your apps without you

1047
00:32:30,106 --> 00:32:31,336
having to make any changes.

1048
00:32:31,866 --> 00:32:34,266
But to give your users the best

1049
00:32:34,266 --> 00:32:36,176
experience, and to guarantee

1050
00:32:36,176 --> 00:32:37,786
that it works now and in the

1051
00:32:37,786 --> 00:32:39,736
future, you can take a few

1052
00:32:39,736 --> 00:32:40,386
simple steps.

1053
00:32:41,576 --> 00:32:44,386
The first is to install one of

1054
00:32:44,386 --> 00:32:46,006
the betas on your phone and run

1055
00:32:46,006 --> 00:32:47,256
your app and see what your

1056
00:32:47,256 --> 00:32:48,026
starting place is.

1057
00:32:49,416 --> 00:32:51,076
From there, you can adopt the

1058
00:32:51,076 --> 00:32:52,806
username and password text

1059
00:32:52,806 --> 00:32:53,616
content types.

1060
00:32:54,376 --> 00:32:56,306
That will guarantee that even if

1061
00:32:56,426 --> 00:32:58,086
iOS or your view hierarchy

1062
00:32:58,086 --> 00:32:59,426
changes a few years from now

1063
00:32:59,816 --> 00:33:01,116
Password AutoFill will still be

1064
00:32:59,816 --> 00:33:01,116
Password AutoFill will still be

1065
00:33:01,116 --> 00:33:01,486
offered.

1066
00:33:02,156 --> 00:33:03,306
So if you take three minutes to

1067
00:33:03,306 --> 00:33:04,896
do this now, you might save

1068
00:33:04,896 --> 00:33:06,136
yourself a bug a few years from

1069
00:33:06,136 --> 00:33:06,286
now.

1070
00:33:06,846 --> 00:33:09,846
And then finally, by adopting

1071
00:33:09,846 --> 00:33:11,486
the webcredentials Associated

1072
00:33:11,486 --> 00:33:13,586
Domain service you can set up a

1073
00:33:13,586 --> 00:33:15,576
tight two-way link between your

1074
00:33:15,686 --> 00:33:16,516
app and your website.

1075
00:33:16,516 --> 00:33:19,156
And that will enable iOS to

1076
00:33:19,436 --> 00:33:20,566
offer the exact right

1077
00:33:20,566 --> 00:33:22,196
credentials that your users are

1078
00:33:22,196 --> 00:33:23,416
looking for, that they've

1079
00:33:23,416 --> 00:33:24,826
already saved in Safari and

1080
00:33:24,826 --> 00:33:26,616
iCloud Keychain directly on the

1081
00:33:26,616 --> 00:33:28,486
keyboard in your apps.

1082
00:33:30,416 --> 00:33:32,336
And if you run into any issues

1083
00:33:32,466 --> 00:33:34,056
adopting Password AutoFill this

1084
00:33:34,056 --> 00:33:36,296
summer, and you can't fix them

1085
00:33:36,336 --> 00:33:37,816
by taking one of the steps that

1086
00:33:37,816 --> 00:33:39,926
I just outlined, please send us

1087
00:33:39,926 --> 00:33:40,326
feedback.

1088
00:33:40,556 --> 00:33:41,486
Please file bugs.

1089
00:33:42,326 --> 00:33:43,726
We need your help to make sure

1090
00:33:43,726 --> 00:33:45,096
that users are getting the best

1091
00:33:45,096 --> 00:33:46,866
experience in your app and in

1092
00:33:46,866 --> 00:33:48,026
the apps of everyone in this

1093
00:33:48,026 --> 00:33:48,286
room.

1094
00:33:49,516 --> 00:33:50,776
Your feedback really helps us

1095
00:33:50,776 --> 00:33:52,386
prioritize our work.

1096
00:33:54,586 --> 00:33:55,856
For more information about

1097
00:33:55,856 --> 00:33:57,436
Password AutoFill, you can check

1098
00:33:57,436 --> 00:33:58,796
out this web page on the

1099
00:33:58,796 --> 00:33:59,596
Developer website.

1100
00:34:00,136 --> 00:34:02,426
And we have some awesome related

1101
00:34:02,426 --> 00:34:03,236
sessions this year.

1102
00:34:04,006 --> 00:34:05,136
I already talked about the

1103
00:34:05,136 --> 00:34:06,546
Safari View Controller sessions.

1104
00:34:07,266 --> 00:34:10,166
But on Friday morning there is a

1105
00:34:10,166 --> 00:34:11,356
session that's about making the

1106
00:34:11,356 --> 00:34:12,876
keyboard entry experience in

1107
00:34:12,876 --> 00:34:13,996
your app magical.

1108
00:34:14,516 --> 00:34:15,536
I encourage you to check it out.

1109
00:34:15,536 --> 00:34:16,806
All right.

1110
00:34:17,096 --> 00:34:18,226
Thank you so much everybody.

1111
00:34:18,226 --> 00:34:19,985
I hope you have an amazing WWDC.

1112
00:34:21,516 --> 00:34:27,639
[ Applause ]
