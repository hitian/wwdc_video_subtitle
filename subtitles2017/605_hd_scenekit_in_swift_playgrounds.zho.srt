1
00:00:17,551 --> 00:00:20,521
<c.magenta>（Swift Playground中</c>

2
00:00:23,056 --> 00:00:23,891
<c.magenta>谢谢</c>

3
00:00:26,159 --> 00:00:27,294
<c.magenta>大家早上好</c>

4
00:00:27,528 --> 00:00:29,930
<c.magenta>欢迎来到“Swift Playground中</c>

5
00:00:30,497 --> 00:00:31,665
<c.magenta>我是Michael DeWitt</c>

6
00:00:31,798 --> 00:00:34,401
<c.magenta>今天我很激动地向大家介绍</c>

7
00:00:34,468 --> 00:00:37,704
<c.magenta>如何利用SceneKit</c>

8
00:00:38,438 --> 00:00:41,108
<c.magenta>但愿你们都已熟悉</c>

9
00:00:41,275 --> 00:00:42,743
<c.magenta>但让我来给大家展示一个</c>

10
00:00:44,912 --> 00:00:47,781
<c.magenta>这是一个Learn to Code</c>

11
00:00:47,848 --> 00:00:49,449
<c.magenta>存在于Swift Playground内</c>

12
00:00:50,150 --> 00:00:53,387
<c.magenta>左侧是课程和用户的代码</c>

13
00:00:54,021 --> 00:00:54,855
<c.magenta>但对于本场演讲</c>

14
00:00:54,922 --> 00:00:56,990
<c.magenta>我们实际上要重点关注右侧</c>

15
00:00:57,090 --> 00:00:58,225
<c.magenta>请注意即时取景</c>

16
00:00:58,892 --> 00:01:02,362
<c.magenta>我们可以把它放大为全屏显示</c>

17
00:00:58,892 --> 00:01:02,362
<c.magenta>我们可以把它放大为全屏显示</c>

18
00:01:03,430 --> 00:01:04,498
<c.magenta>这个角色 百特</c>

19
00:01:04,864 --> 00:01:08,035
<c.magenta>现正快速绕着地图跑并收集宝石</c>

20
00:01:08,836 --> 00:01:10,904
<c.magenta>不停地上下台阶</c>

21
00:01:11,505 --> 00:01:13,974
<c.magenta>当百特收集到全部宝石之后</c>

22
00:01:15,008 --> 00:01:16,677
<c.magenta>我们得到了一个祝贺场景</c>

23
00:01:17,144 --> 00:01:19,279
<c.magenta>让学习者了解他们实现了很棒的功能</c>

24
00:01:19,613 --> 00:01:21,415
<c.magenta>并且百特甚至还会跳舞</c>

25
00:01:22,149 --> 00:01:23,383
<c.magenta>让人们了解这真的很棒</c>

26
00:01:24,551 --> 00:01:25,986
<c.magenta>这就是我们今天的案例研究</c>

27
00:01:26,520 --> 00:01:31,391
<c.magenta>我们要通过这个场景来展示</c>

28
00:01:31,792 --> 00:01:34,895
<c.magenta>并把丰富的3D内容带到你的应用中去</c>

29
00:01:36,396 --> 00:01:41,235
<c.magenta>如果你对3D感兴趣</c>

30
00:01:41,768 --> 00:01:43,036
<c.magenta>那你来得正合适</c>

31
00:01:43,337 --> 00:01:46,006
<c.magenta>因为我们要从一些</c>

32
00:01:47,808 --> 00:01:50,244
<c.magenta>我们要从简单的2D场景开始讲</c>

33
00:01:50,811 --> 00:01:55,449
<c.magenta>关于SceneKit最好的优点之一</c>

34
00:01:55,849 --> 00:01:59,186
<c.magenta>把这个场景放在现有时间轴上</c>

35
00:01:59,453 --> 00:02:03,056
<c.magenta>并通过我们发布到Learn to Code中</c>

36
00:01:59,453 --> 00:02:03,056
<c.magenta>并通过我们发布到Learn to Code中</c>

37
00:02:04,324 --> 00:02:05,993
<c.magenta>那么这就是我们今天要谈的内容</c>

38
00:02:06,426 --> 00:02:07,561
<c.magenta>我们一共有40分钟</c>

39
00:02:07,694 --> 00:02:09,630
<c.magenta>我们可以把它分成三个部分</c>

40
00:02:10,731 --> 00:02:12,866
<c.magenta>首先我要讲一下原型设计</c>

41
00:02:13,133 --> 00:02:16,003
<c.magenta>以及如何精化想法确保其真的很棒</c>

42
00:02:17,304 --> 00:02:19,206
<c.magenta>关于迭代 我想谈谈</c>

43
00:02:19,273 --> 00:02:21,708
<c.magenta>你何时会从你的供应商处</c>

44
00:02:21,808 --> 00:02:23,944
<c.magenta>如何建立有效的管道</c>

45
00:02:24,678 --> 00:02:27,314
<c.magenta>然后Lemont将上台讲一下调整</c>

46
00:02:27,447 --> 00:02:28,982
<c.magenta>并准备好发布场景</c>

47
00:02:30,584 --> 00:02:32,753
<c.magenta>首先是原型设计</c>

48
00:02:35,189 --> 00:02:39,459
<c.magenta>这是在我们决定使用</c>

49
00:02:39,526 --> 00:02:41,595
<c.magenta>且我们已准备好</c>

50
00:02:42,196 --> 00:02:44,831
<c.magenta>那么你之前看到过这个图</c>

51
00:02:46,667 --> 00:02:49,970
<c.magenta>我们一开始有来自表情集合的宝石</c>

52
00:02:50,037 --> 00:02:51,572
<c.magenta>和四处散放的资产</c>

53
00:02:51,772 --> 00:02:54,975
<c.magenta>因为我们只需要拾取并尽可能快地跑</c>

54
00:02:55,242 --> 00:02:57,778
<c.magenta>以在这个新应用中测试交互模型</c>

55
00:02:58,345 --> 00:02:59,413
<c.magenta>我们从这里学到了很多</c>

56
00:02:59,479 --> 00:03:01,048
<c.magenta>资产看起来怎么样并不重要</c>

57
00:02:59,479 --> 00:03:01,048
<c.magenta>资产看起来怎么样并不重要</c>

58
00:03:01,849 --> 00:03:05,519
<c.magenta>但通过这个原型设计过程</c>

59
00:03:06,653 --> 00:03:09,022
<c.magenta>其中有些评论是关于图形的</c>

60
00:03:09,489 --> 00:03:12,459
<c.magenta>它…请求比如说我们</c>

61
00:03:12,593 --> 00:03:14,661
<c.magenta>我们是否在场景周围添加一个边框</c>

62
00:03:14,728 --> 00:03:17,831
<c.magenta>或我们是否可以让相机在尽头处</c>

63
00:03:18,999 --> 00:03:23,504
<c.magenta>这是很好的反馈 它真的非常有迭代性</c>

64
00:03:23,937 --> 00:03:24,872
<c.magenta>当你进行原型设计时</c>

65
00:03:24,938 --> 00:03:27,007
<c.magenta>你不应该害怕把它们全部扔掉</c>

66
00:03:27,641 --> 00:03:30,143
<c.magenta>那么如果我们返回去看情境中的场景</c>

67
00:03:30,677 --> 00:03:33,046
<c.magenta>你可以看到它在这个页面上很单调</c>

68
00:03:33,380 --> 00:03:36,149
<c.magenta>视觉效果是我们得到的全部反馈</c>

69
00:03:36,450 --> 00:03:38,752
<c.magenta>我们只需要重新评估我们的策略</c>

70
00:03:40,387 --> 00:03:44,725
<c.magenta>因为我们在SpriteKit中做的</c>

71
00:03:45,459 --> 00:03:47,594
<c.magenta>对于你们中</c>

72
00:03:48,228 --> 00:03:49,930
<c.magenta>你了解它有以下概念：</c>

73
00:03:50,631 --> 00:03:53,000
<c.magenta>基本上是一个执行更新逻辑的场景</c>

74
00:03:53,166 --> 00:03:57,738
<c.magenta>一个把对象放在视图中的节点</c>

75
00:03:58,672 --> 00:04:01,742
<c.magenta>现在Apple开发SceneKit</c>

76
00:03:58,672 --> 00:04:01,742
<c.magenta>现在Apple开发SceneKit</c>

77
00:04:02,109 --> 00:04:04,244
<c.magenta>它有许多这样的相同概念</c>

78
00:04:05,746 --> 00:04:09,383
<c.magenta>这就给了我们足够的信心</c>

79
00:04:09,550 --> 00:04:11,885
<c.magenta>开始使用SceneKit</c>

80
00:04:12,386 --> 00:04:13,921
<c.magenta>那么跟你们中许多人一样</c>

81
00:04:14,121 --> 00:04:17,824
<c.magenta>我们看了2015年的</c>

82
00:04:17,891 --> 00:04:19,993
<c.magenta>那是一场很棒的演讲</c>

83
00:04:20,093 --> 00:04:23,096
<c.magenta>内容是关于如何创建简单的场景</c>

84
00:04:24,631 --> 00:04:26,266
<c.magenta>但不只是这样</c>

85
00:04:26,333 --> 00:04:28,669
<c.magenta>我们还要使用示例中的一些资产</c>

86
00:04:29,303 --> 00:04:30,704
<c.magenta>并重新创建我们的场景</c>

87
00:04:32,072 --> 00:04:33,273
<c.magenta>所以我们现在来到了这个舞台</c>

88
00:04:33,407 --> 00:04:36,243
<c.magenta>我们马上就会告诉你们</c>

89
00:04:36,310 --> 00:04:40,013
<c.magenta>我的意思是它更拟真</c>

90
00:04:40,113 --> 00:04:41,915
<c.magenta>并且它会帮助你解决等级问题</c>

91
00:04:43,617 --> 00:04:45,118
<c.magenta>这张幻灯片的重点是</c>

92
00:04:45,452 --> 00:04:48,488
<c.magenta>即使我们已经明确地提升了视觉质量</c>

93
00:04:49,456 --> 00:04:50,524
<c.magenta>当你设计原型时</c>

94
00:04:50,591 --> 00:04:52,826
<c.magenta>你仍希望使视觉保真度</c>

95
00:04:52,993 --> 00:04:56,096
<c.magenta>那么当我们添加新游戏结构时</c>

96
00:04:57,064 --> 00:04:58,665
<c.magenta>我们采用了SceneKit基元实现</c>

97
00:04:59,132 --> 00:05:00,467
<c.magenta>因为我们不想提得太高</c>

98
00:04:59,132 --> 00:05:00,467
<c.magenta>因为我们不想提得太高</c>

99
00:05:00,534 --> 00:05:03,036
<c.magenta>以确保场景看起来绝对很棒</c>

100
00:05:03,170 --> 00:05:04,738
<c.magenta>我们首先要确保这是一个好主意</c>

101
00:05:05,906 --> 00:05:09,510
<c.magenta>所以我把这个丢到</c>

102
00:05:10,744 --> 00:05:13,080
<c.magenta>你基本可以看到项目的整个时间轴</c>

103
00:05:13,981 --> 00:05:16,617
<c.magenta>你想把其中一大块分配给原型设计</c>

104
00:05:17,150 --> 00:05:20,821
<c.magenta>因为这是你可以做出最多修改的部分</c>

105
00:05:20,921 --> 00:05:22,356
<c.magenta>而做出修改需要付出的努力并不多</c>

106
00:05:23,490 --> 00:05:25,559
<c.magenta>尤其当你正在做3D时</c>

107
00:05:26,126 --> 00:05:27,594
<c.magenta>当你开始获取真实的资产时</c>

108
00:05:27,661 --> 00:05:29,530
<c.magenta>这是我们下一个部分要讲到的内容</c>

109
00:05:30,097 --> 00:05:31,698
<c.magenta>要进行修改需要付出的努力不断增加</c>

110
00:05:32,432 --> 00:05:34,268
<c.magenta>所以当你设计原型时请留意这一点</c>

111
00:05:35,569 --> 00:05:38,138
<c.magenta>那么总的来说 其实你想</c>

112
00:05:38,205 --> 00:05:40,440
<c.magenta>当你在设计原型时 测试你的交互模型</c>

113
00:05:40,507 --> 00:05:41,642
<c.magenta>这并不是与资产相关</c>

114
00:05:42,142 --> 00:05:44,344
<c.magenta>你想阐明你接收的反馈</c>

115
00:05:44,745 --> 00:05:46,547
<c.magenta>但并不想做出越来越多的修改</c>

116
00:05:46,680 --> 00:05:48,315
<c.magenta>想要确保这个想法是有效的</c>

117
00:05:49,082 --> 00:05:51,885
<c.magenta>最后利用从这部分获得的洞察力</c>

118
00:05:51,985 --> 00:05:52,886
<c.magenta>去写代码</c>

119
00:05:53,220 --> 00:05:56,890
<c.magenta>我觉得我们做的最棒的决策是</c>

120
00:05:56,957 --> 00:06:01,228
<c.magenta>当我们朝着这点努力时</c>

121
00:05:56,957 --> 00:06:01,228
<c.magenta>当我们朝着这点努力时</c>

122
00:06:04,231 --> 00:06:07,367
<c.magenta>现在我们已经有了想法</c>

123
00:06:07,534 --> 00:06:11,305
<c.magenta>我们开始与设计师一起工作</c>

124
00:06:13,540 --> 00:06:16,143
<c.magenta>你可以看到</c>

125
00:06:16,410 --> 00:06:17,477
<c.magenta>看起来要好点</c>

126
00:06:17,945 --> 00:06:20,848
<c.magenta>我想把这个世界分成四部分</c>

127
00:06:21,682 --> 00:06:24,151
<c.magenta>我要讲的第一件事就是它是如何建造的</c>

128
00:06:24,818 --> 00:06:26,720
<c.magenta>以及有效建造的一些策略</c>

129
00:06:27,487 --> 00:06:33,460
<c.magenta>接下来我们要看看如何在你的应用中</c>

130
00:06:33,794 --> 00:06:35,963
<c.magenta>通过查看我们如何实现让百特上下台阶</c>

131
00:06:37,464 --> 00:06:40,067
<c.magenta>我们还要了解如何用水</c>

132
00:06:40,133 --> 00:06:41,401
<c.magenta>和其它场景元素添加视觉趣味</c>

133
00:06:42,603 --> 00:06:45,472
<c.magenta>然后我们就重点讲视觉部分</c>

134
00:06:45,873 --> 00:06:47,941
<c.magenta>但是还有整个用户方面</c>

135
00:06:48,075 --> 00:06:51,245
<c.magenta>实际上不能从3D场景的图形中</c>

136
00:06:51,411 --> 00:06:54,214
<c.magenta>所以我们要花点儿时间讲讲可达性支持</c>

137
00:06:54,281 --> 00:06:55,582
<c.magenta>尤其是VoiceOver</c>

138
00:06:56,683 --> 00:07:00,521
<c.magenta>好了 首先是给这个世界建模</c>

139
00:06:56,683 --> 00:07:00,521
<c.magenta>好了 首先是给这个世界建模</c>

140
00:07:01,455 --> 00:07:04,892
<c.magenta>那么你可以通过模具看到</c>

141
00:07:05,025 --> 00:07:06,260
<c.magenta>我们有单项资产</c>

142
00:07:06,660 --> 00:07:07,995
<c.magenta>这样做是有原因的</c>

143
00:07:09,363 --> 00:07:12,065
<c.magenta>我们不仅需要在资产设计上迭代</c>

144
00:07:12,132 --> 00:07:13,734
<c.magenta>还需要在课程设计上迭代</c>

145
00:07:14,234 --> 00:07:16,870
<c.magenta>所以我们把像这样的简单拼图拼在一起</c>

146
00:07:17,571 --> 00:07:20,507
<c.magenta>确保学习者能顺利学习大纲</c>

147
00:07:21,909 --> 00:07:25,579
<c.magenta>但不是把这些单一的组块</c>

148
00:07:25,679 --> 00:07:29,183
<c.magenta>那会非常乏味 而是写一些代码来实现</c>

149
00:07:29,550 --> 00:07:31,919
<c.magenta>很像使用Learn to Code 2的学习者们</c>

150
00:07:31,985 --> 00:07:33,287
<c.magenta>当他们创建自己的世界时</c>

151
00:07:34,087 --> 00:07:36,823
<c.magenta>我们写了一些代码来生成这个</c>

152
00:07:38,025 --> 00:07:41,662
<c.magenta>要创建那个世界</c>

153
00:07:42,262 --> 00:07:46,466
<c.magenta>你把元素放进去 比如演员</c>

154
00:07:47,067 --> 00:07:48,535
<c.magenta>然后你可以添加附加元素</c>

155
00:07:48,602 --> 00:07:51,572
<c.magenta>比如宝石或你在中心看到过的水</c>

156
00:07:52,873 --> 00:07:55,342
<c.magenta>但我展示这段代码的原因不是因为</c>

157
00:07:55,409 --> 00:07:57,578
<c.magenta>“哇哦 我们写了一个API</c>

158
00:07:57,911 --> 00:08:01,748
<c.magenta>而其实是因为这与图形是完全分离的</c>

159
00:07:57,911 --> 00:08:01,748
<c.magenta>而其实是因为这与图形是完全分离的</c>

160
00:08:02,015 --> 00:08:05,285
<c.magenta>对吧？这段代码在2D中</c>

161
00:08:06,453 --> 00:08:09,089
<c.magenta>让我实际给你展示一下这是什么意思</c>

162
00:08:09,156 --> 00:08:10,424
<c.magenta>这里有一个短视频</c>

163
00:08:15,796 --> 00:08:17,865
<c.magenta>这里有百特 正在这个世界中移动</c>

164
00:08:18,065 --> 00:08:19,766
<c.magenta>我们要添加一些节点</c>

165
00:08:20,000 --> 00:08:22,035
<c.magenta>你在场景中看到的红色和绿色节点</c>

166
00:08:22,169 --> 00:08:25,539
<c.magenta>其实代表了我们重建</c>

167
00:08:29,776 --> 00:08:32,546
<c.magenta>实际上我们所需要的就是那个数据</c>

168
00:08:33,145 --> 00:08:36,116
<c.magenta>我们把场景的图形</c>

169
00:08:36,216 --> 00:08:38,552
<c.magenta>和用于重建游戏设置的数据分离了</c>

170
00:08:39,553 --> 00:08:40,854
<c.magenta>这样做有几个很大的好处</c>

171
00:08:40,921 --> 00:08:43,524
<c.magenta>我想让你在给3D世界建模时考虑一下</c>

172
00:08:45,092 --> 00:08:46,760
<c.magenta>将数据与图形分离</c>

173
00:08:47,294 --> 00:08:49,863
<c.magenta>首先它允许你简单地置换出资产</c>

174
00:08:50,264 --> 00:08:51,965
<c.magenta>请记住 我们仍在这个材料上进行迭代</c>

175
00:08:52,032 --> 00:08:54,801
<c.magenta>无论如何我们将获得这个组块的新版本</c>

176
00:08:55,002 --> 00:08:56,803
<c.magenta>并且我们不想重建这些地图</c>

177
00:08:57,004 --> 00:08:58,639
<c.magenta>所以我们就动态地生成了地图</c>

178
00:08:59,940 --> 00:09:02,843
<c.magenta>它还允许你获取那个数据</c>

179
00:08:59,940 --> 00:09:02,843
<c.magenta>它还允许你获取那个数据</c>

180
00:09:03,010 --> 00:09:04,645
<c.magenta>也许你需要将其通过网络发送出去</c>

181
00:09:04,878 --> 00:09:07,281
<c.magenta>或在处理过程中发送一些游戏设置逻辑</c>

182
00:09:07,347 --> 00:09:08,882
<c.magenta>比如我们在某些游戏场地中所做的那样</c>

183
00:09:09,883 --> 00:09:11,285
<c.magenta>一段时间之后</c>

184
00:09:11,351 --> 00:09:13,887
<c.magenta>它还将允许你优化几何体</c>

185
00:09:14,521 --> 00:09:16,590
<c.magenta>Lemont将会具体介绍</c>

186
00:09:16,790 --> 00:09:18,659
<c.magenta>但有一点很关键 就是你并不依赖于</c>

187
00:09:18,725 --> 00:09:21,228
<c.magenta>实际的节点和场景才能实现</c>

188
00:09:22,496 --> 00:09:23,463
<c.magenta>我有一个警告</c>

189
00:09:24,831 --> 00:09:27,835
<c.magenta>你需要一些调试工具</c>

190
00:09:27,935 --> 00:09:29,203
<c.magenta>我们在很早之前就发现了</c>

191
00:09:29,670 --> 00:09:31,438
<c.magenta>你不再只是查看世界了</c>

192
00:09:31,505 --> 00:09:33,674
<c.magenta>而是查看如何重建游戏设置</c>

193
00:09:34,107 --> 00:09:36,710
<c.magenta>所以我们创建了一个</c>

194
00:09:37,678 --> 00:09:40,881
<c.magenta>这个应用可以加载</c>

195
00:09:41,315 --> 00:09:44,651
<c.magenta>更重要的是它有专门的场景知识</c>

196
00:09:45,552 --> 00:09:47,821
<c.magenta>那么既然这样 这个工具就是</c>

197
00:09:47,888 --> 00:09:50,757
<c.magenta>允许我们展示你之前</c>

198
00:09:51,525 --> 00:09:55,028
<c.magenta>它还可以在我们的游戏中</c>

199
00:09:55,229 --> 00:09:58,699
<c.magenta>比如当你达到祝贺序列时</c>

200
00:09:58,932 --> 00:10:00,601
<c.magenta>我们想确保能在每一幅地图上使用</c>

201
00:09:58,932 --> 00:10:00,601
<c.magenta>我们想确保能在每一幅地图上使用</c>

202
00:10:00,934 --> 00:10:03,437
<c.magenta>但我们不想一直测试每一幅地图</c>

203
00:10:04,004 --> 00:10:05,005
<c.magenta>只是为了看到一个结果</c>

204
00:10:06,473 --> 00:10:07,441
<c.magenta>那么这就是我们的第一部分</c>

205
00:10:07,808 --> 00:10:09,176
<c.magenta>就是我们如何把世界拼在一起</c>

206
00:10:09,343 --> 00:10:12,112
<c.magenta>我们分离了数据和图形 并使用了工具</c>

207
00:10:13,680 --> 00:10:15,816
<c.magenta>现在讲动画</c>

208
00:10:16,683 --> 00:10:18,585
<c.magenta>如果我们近距离地看一下台阶</c>

209
00:10:20,921 --> 00:10:23,857
<c.magenta>你可以看到这其实是一个</c>

210
00:10:24,057 --> 00:10:26,026
<c.magenta>对吧？不仅有独立的台阶</c>

211
00:10:26,293 --> 00:10:28,295
<c.magenta>台阶上还有一些花样</c>

212
00:10:28,562 --> 00:10:29,763
<c.magenta>所以我们想做到超级精确</c>

213
00:10:29,830 --> 00:10:32,566
<c.magenta>关于我们角色的脚</c>

214
00:10:33,634 --> 00:10:35,335
<c.magenta>我们考虑了一些不同的策略</c>

215
00:10:35,736 --> 00:10:39,173
<c.magenta>对于3D场景来说</c>

216
00:10:39,406 --> 00:10:42,943
<c.magenta>用斜坡替换台阶</c>

217
00:10:43,310 --> 00:10:46,180
<c.magenta>你有一个角色 你向前移动那个角色</c>

218
00:10:46,413 --> 00:10:48,215
<c.magenta>你算出他们需要移动多远</c>

219
00:10:48,415 --> 00:10:50,584
<c.magenta>然后你只需要把他们从点A转移到点B</c>

220
00:10:50,651 --> 00:10:51,919
<c.magenta>当运行行走动作循环时</c>

221
00:10:53,353 --> 00:10:55,189
<c.magenta>对于台阶 并不是那么好做</c>

222
00:10:55,656 --> 00:10:58,192
<c.magenta>这是百特尝试上台阶</c>

223
00:10:58,825 --> 00:11:00,093
<c.magenta>如果你离近点儿看</c>

224
00:10:58,825 --> 00:11:00,093
<c.magenta>如果你离近点儿看</c>

225
00:11:00,661 --> 00:11:03,931
<c.magenta>百特甚至没有接触到第一个台阶</c>

226
00:11:04,998 --> 00:11:06,633
<c.magenta>所以我们要把这个效果做得更好</c>

227
00:11:10,304 --> 00:11:14,441
<c.magenta>我们要考虑的第二件事就是</c>

228
00:11:14,508 --> 00:11:16,577
<c.magenta>它其实是SceneKit</c>

229
00:11:16,643 --> 00:11:18,178
<c.magenta>用于执行逆向运动</c>

230
00:11:18,812 --> 00:11:21,348
<c.magenta>现在逆向运动允许你得到超级精确度</c>

231
00:11:21,548 --> 00:11:23,817
<c.magenta>关于你想让角色的脚落在哪个位置</c>

232
00:11:24,117 --> 00:11:27,454
<c.magenta>那么我们要指定我们希望角色</c>

233
00:11:28,555 --> 00:11:31,658
<c.magenta>但它却伴随着牺牲了角色的一些个性</c>

234
00:11:31,725 --> 00:11:34,328
<c.magenta>我们不能控制眼睛的运动</c>

235
00:11:34,394 --> 00:11:36,730
<c.magenta>或上半身的运动</c>

236
00:11:37,164 --> 00:11:38,599
<c.magenta>我们其实还有第三种选择</c>

237
00:11:39,032 --> 00:11:42,069
<c.magenta>就是把位移合并到动画中去</c>

238
00:11:42,569 --> 00:11:44,071
<c.magenta>因为这是我们所采用的策略</c>

239
00:11:44,137 --> 00:11:46,206
<c.magenta>让我们再详细地具体看一下</c>

240
00:11:47,841 --> 00:11:50,811
<c.magenta>通常对绝大部分游戏来说都有节点</c>

241
00:11:50,944 --> 00:11:53,780
<c.magenta>代表一个位置 还有几何体</c>

242
00:11:53,947 --> 00:11:56,049
<c.magenta>就是你在场景中实际能看到的东西</c>

243
00:11:57,117 --> 00:11:59,953
<c.magenta>现在这两样东西同时移动也是很常见的</c>

244
00:12:00,354 --> 00:12:02,856
<c.magenta>所以你需要转换节点和几何体</c>

245
00:12:02,956 --> 00:12:04,191
<c.magenta>同时执行行走循环</c>

246
00:12:04,258 --> 00:12:06,159
<c.magenta>它会让角色从点A移动到点B</c>

247
00:12:07,127 --> 00:12:08,795
<c.magenta>但对于台阶</c>

248
00:12:10,464 --> 00:12:13,834
<c.magenta>我们不干涉节点 并应用了一个动画</c>

249
00:12:13,901 --> 00:12:15,869
<c.magenta>这个动画中其实含有位移</c>

250
00:12:16,069 --> 00:12:19,206
<c.magenta>那么这就会把几何体从节点中移出来</c>

251
00:12:19,873 --> 00:12:22,242
<c.magenta>然后当动画完成后</c>

252
00:12:22,543 --> 00:12:25,879
<c.magenta>我们同步节点的位置并移除动画</c>

253
00:12:27,214 --> 00:12:30,450
<c.magenta>我们是通过SceneKit中一个</c>

254
00:12:31,985 --> 00:12:35,656
<c.magenta>SCNTransaction允许你确保</c>

255
00:12:36,123 --> 00:12:37,224
<c.magenta>让我们具体看一下</c>

256
00:12:38,525 --> 00:12:41,595
<c.magenta>你用开始和提交调用设置</c>

257
00:12:42,229 --> 00:12:44,531
<c.magenta>在我们的示例中</c>

258
00:12:44,598 --> 00:12:46,700
<c.magenta>因为我们需要它在同一帧中发生</c>

259
00:12:48,202 --> 00:12:52,573
<c.magenta>我们把角色移动到新位置并移除动画</c>

260
00:12:52,973 --> 00:12:55,943
<c.magenta>让百特准备好下一轮的动画</c>

261
00:12:56,810 --> 00:12:57,911
<c.magenta>让我们看看实际效果</c>

262
00:12:59,246 --> 00:13:00,380
<c.magenta>先舒展一下身体</c>

263
00:12:59,246 --> 00:13:00,380
<c.magenta>先舒展一下身体</c>

264
00:13:01,615 --> 00:13:02,749
<c.magenta>走上台阶…</c>

265
00:13:03,984 --> 00:13:06,453
<c.magenta>你现在可以看到</c>

266
00:13:06,520 --> 00:13:09,056
<c.magenta>自由地把位移放到动画中</c>

267
00:13:09,156 --> 00:13:11,692
<c.magenta>针对百特的移动 我们变得非常精确了</c>

268
00:13:12,159 --> 00:13:15,762
<c.magenta>当它上下台阶时 百特的头也会转动</c>

269
00:13:16,230 --> 00:13:17,731
<c.magenta>这是一个较好的解决方案</c>

270
00:13:17,798 --> 00:13:21,201
<c.magenta>你需要针对你场景中的复杂动画</c>

271
00:13:23,604 --> 00:13:25,305
<c.magenta>第三点</c>

272
00:13:26,406 --> 00:13:28,408
<c.magenta>让我们看看如何处理场景元素</c>

273
00:13:28,575 --> 00:13:30,110
<c.magenta>因为它并不全与角色相关</c>

274
00:13:30,277 --> 00:13:32,279
<c.magenta>你还要确保这个世界感觉鲜活</c>

275
00:13:33,547 --> 00:13:35,082
<c.magenta>那么让我们近距离看一下水</c>

276
00:13:36,583 --> 00:13:40,988
<c.magenta>现在你见过我们之前曾用过</c>

277
00:13:41,121 --> 00:13:44,358
<c.magenta>相当基础 刚好能重建这个游戏</c>

278
00:13:45,325 --> 00:13:47,694
<c.magenta>但我们想实现像这样的地图</c>

279
00:13:49,429 --> 00:13:53,166
<c.magenta>我们的实现方式是将原始地图保存</c>

280
00:13:53,267 --> 00:13:56,837
<c.magenta>为SCN文件 以便添加这些附加元素</c>

281
00:13:57,271 --> 00:14:00,174
<c.magenta>对吧？那么我们不写代码</c>

282
00:13:57,271 --> 00:14:00,174
<c.magenta>对吧？那么我们不写代码</c>

283
00:14:00,274 --> 00:14:03,043
<c.magenta>我们现在可以在场景编辑器中实现了</c>

284
00:14:03,944 --> 00:14:05,913
<c.magenta>若我们在SceneKit</c>

285
00:14:07,080 --> 00:14:10,984
<c.magenta>它看起来很棒</c>

286
00:14:11,051 --> 00:14:12,586
<c.magenta>给每一个单独的地图</c>

287
00:14:12,886 --> 00:14:15,856
<c.magenta>你可以看到这是通过</c>

288
00:14:17,524 --> 00:14:21,295
<c.magenta>那么问题是你仍然希望</c>

289
00:14:21,361 --> 00:14:23,163
<c.magenta>确保设计师不会在下一周过来说</c>

290
00:14:23,230 --> 00:14:25,065
<c.magenta>“我做了个新瀑布 看起来更好”</c>

291
00:14:25,232 --> 00:14:27,134
<c.magenta>那你不需要修改81幅地图</c>

292
00:14:27,868 --> 00:14:30,704
<c.magenta>实现方式是如果我们近距离看瀑布</c>

293
00:14:31,672 --> 00:14:33,607
<c.magenta>它使用了一个叫作引用节点的技术</c>

294
00:14:34,141 --> 00:14:36,844
<c.magenta>那么这些是我们场景中的水节点</c>

295
00:14:37,144 --> 00:14:40,013
<c.magenta>而箭头表示它们被引用到</c>

296
00:14:40,080 --> 00:14:41,582
<c.magenta>一个单一的SCN文件</c>

297
00:14:41,782 --> 00:14:45,252
<c.magenta>那么你只需要更新那一个文件</c>

298
00:14:47,454 --> 00:14:49,356
<c.magenta>现在这并不是与水相关的全部问题</c>

299
00:14:50,090 --> 00:14:51,758
<c.magenta>若我们再仔细看看那个SCN文件</c>

300
00:14:53,093 --> 00:14:55,596
<c.magenta>像水这样的元素必须得动起来</c>

301
00:14:55,662 --> 00:14:57,097
<c.magenta>对吧？设计师在这里做得不错</c>

302
00:14:57,164 --> 00:15:00,000
<c.magenta>纹理看起来超棒 但它不真实</c>

303
00:15:01,335 --> 00:15:03,370
<c.magenta>那么为了实现水的移动</c>

304
00:15:03,437 --> 00:15:05,973
<c.magenta>我们要使用一个技术</c>

305
00:15:06,039 --> 00:15:09,142
<c.magenta>其实是写一个着色器 你可以通过</c>

306
00:15:09,243 --> 00:15:11,545
<c.magenta>右下方的按钮获取</c>

307
00:15:12,479 --> 00:15:14,581
<c.magenta>我把它放大一点 不然很难看到</c>

308
00:15:15,415 --> 00:15:17,985
<c.magenta>那会打开一个托盘</c>

309
00:15:18,619 --> 00:15:21,989
<c.magenta>你可以修改或指定</c>

310
00:15:22,256 --> 00:15:25,993
<c.magenta>构建由SceneKit提供给你的</c>

311
00:15:26,627 --> 00:15:27,728
<c.magenta>那么这要实现的是</c>

312
00:15:27,794 --> 00:15:29,963
<c.magenta>围绕瀑布移动纹理</c>

313
00:15:30,497 --> 00:15:31,732
<c.magenta>但它添加了一个很棒的效果</c>

314
00:15:32,399 --> 00:15:33,433
<c.magenta>让我们看一下效果</c>

315
00:15:38,872 --> 00:15:39,706
<c.magenta>开始吧</c>

316
00:15:40,007 --> 00:15:41,942
<c.magenta>那么现在水实际上是在流动的</c>

317
00:15:42,075 --> 00:15:43,610
<c.magenta>你可以看到纹理的移动</c>

318
00:15:43,677 --> 00:15:44,978
<c.magenta>且它添加了这个很棒的效果</c>

319
00:15:45,445 --> 00:15:48,916
<c.magenta>我们将采用同样的技术</c>

320
00:15:48,982 --> 00:15:51,251
<c.magenta>以及被微风吹动的小草</c>

321
00:15:51,518 --> 00:15:53,720
<c.magenta>那么这给你的场景添加了许多生气</c>

322
00:15:54,121 --> 00:15:56,089
<c.magenta>这是一个很棒的技术 你可以尝试一下</c>

323
00:15:57,424 --> 00:15:58,258
<c.magenta>这是第三点</c>

324
00:15:59,092 --> 00:16:00,994
<c.magenta>我们真的很关注视觉效果</c>

325
00:15:59,092 --> 00:16:00,994
<c.magenta>我们真的很关注视觉效果</c>

326
00:16:01,929 --> 00:16:04,498
<c.magenta>我们采取了若干步骤</c>

327
00:16:04,831 --> 00:16:06,967
<c.magenta>但还有另外一整个方面</c>

328
00:16:07,434 --> 00:16:10,637
<c.magenta>这就是对于有视力障碍的用户来说</c>

329
00:16:12,372 --> 00:16:15,776
<c.magenta>那么当你尝试在VoiceOver中</c>

330
00:16:16,510 --> 00:16:19,313
<c.magenta>很明显 你希望更多地关注元素</c>

331
00:16:19,813 --> 00:16:21,949
<c.magenta>但我不会描述我们所做的一切</c>

332
00:16:22,015 --> 00:16:24,151
<c.magenta>我首先希望你先听一下这个体验</c>

333
00:16:29,256 --> 00:16:30,324
<c.magenta><i>打开VoiceOver</i></c>

334
00:16:30,557 --> 00:16:31,458
<c.magenta><i>横屏</i></c>

335
00:16:32,326 --> 00:16:34,761
<c.magenta><i>这个世界是五栏乘五行</i></c>

336
00:16:35,929 --> 00:16:39,800
<c.magenta><i>栏0 行0 百特的高度为0 面朝北</i></c>

337
00:16:40,334 --> 00:16:42,236
<c.magenta><i>轻触两次切换角色</i></c>

338
00:16:42,369 --> 00:16:45,472
<c.magenta><i>栏0 行1 宝石高度为0</i></c>

339
00:16:52,045 --> 00:16:55,148
<c.magenta>那么…我们采取了一系列的操作</c>

340
00:16:55,215 --> 00:16:56,984
<c.magenta>以在Learn to Code中</c>

341
00:16:57,951 --> 00:16:59,453
<c.magenta>但我希望你注意到的第一件事是</c>

342
00:16:59,953 --> 00:17:03,290
<c.magenta>我们其实关注的是一个</c>

343
00:16:59,953 --> 00:17:03,290
<c.magenta>我们其实关注的是一个</c>

344
00:17:03,457 --> 00:17:06,226
<c.magenta>通过添加音乐 通过添加角色声音</c>

345
00:17:06,425 --> 00:17:10,063
<c.magenta>你让这个场景听起来很丰富</c>

346
00:17:11,898 --> 00:17:15,169
<c.magenta>我们还向VoiceOver中</c>

347
00:17:15,301 --> 00:17:17,503
<c.magenta>要深入研究这些技巧</c>

348
00:17:17,671 --> 00:17:19,473
<c.magenta>请参看今年的一场很不错的演讲</c>

349
00:17:19,573 --> 00:17:21,875
<c.magenta>关于使媒体和游戏可理解</c>

350
00:17:23,210 --> 00:17:24,877
<c.magenta>对我们来说非常重要的一点</c>

351
00:17:25,212 --> 00:17:28,281
<c.magenta>其实是使用VoiceOver</c>

352
00:17:28,949 --> 00:17:31,552
<c.magenta>我想具体介绍这个的原因是</c>

353
00:17:31,685 --> 00:17:33,587
<c.magenta>因为它惊人简单</c>

354
00:17:34,421 --> 00:17:36,190
<c.magenta>那么跟你的UIKit应用一样</c>

355
00:17:36,924 --> 00:17:38,892
<c.magenta>我们覆盖一个可访问性元素</c>

356
00:17:39,960 --> 00:17:42,262
<c.magenta>我们可以提供一个自定义标签</c>

357
00:17:43,030 --> 00:17:45,399
<c.magenta>在本例中 我们提供了一个标签</c>

358
00:17:45,699 --> 00:17:48,235
<c.magenta>用于更新世界的当前内容</c>

359
00:17:49,536 --> 00:17:53,273
<c.magenta>所以这是你已经在UIKit中</c>

360
00:17:53,507 --> 00:17:54,675
<c.magenta>就是那么简单</c>

361
00:17:54,741 --> 00:17:56,310
<c.magenta>你创建其中一个元素</c>

362
00:17:57,444 --> 00:17:59,279
<c.magenta>你指定它的帧</c>

363
00:17:59,746 --> 00:18:03,150
<c.magenta>我们使用SceneKit中的projectPoint</c>

364
00:17:59,746 --> 00:18:03,150
<c.magenta>我们使用SceneKit中的projectPoint</c>

365
00:18:03,750 --> 00:18:05,285
<c.magenta>并将那个元素添加到视图中</c>

366
00:18:06,553 --> 00:18:10,157
<c.magenta>那么我的观点是</c>

367
00:18:10,691 --> 00:18:11,725
<c.magenta>它其实很简单</c>

368
00:18:11,792 --> 00:18:13,460
<c.magenta>它就是你已经熟悉的技巧</c>

369
00:18:14,094 --> 00:18:16,697
<c.magenta>那么有三个主要原因</c>

370
00:18:17,531 --> 00:18:18,932
<c.magenta>第一 这对于你的用户来说很棒</c>

371
00:18:19,433 --> 00:18:21,602
<c.magenta>最值得的其中一方面很可能</c>

372
00:18:21,768 --> 00:18:23,537
<c.magenta>我认为是做这个项目</c>

373
00:18:24,705 --> 00:18:26,807
<c.magenta>抱歉 我认为是最值得的其中一个方面</c>

374
00:18:27,474 --> 00:18:29,376
<c.magenta>第二是实现就是那么简单</c>

375
00:18:30,244 --> 00:18:33,380
<c.magenta>有来自UIKit开发中的一些</c>

376
00:18:33,914 --> 00:18:35,983
<c.magenta>第三 就像没有理由</c>

377
00:18:36,183 --> 00:18:38,986
<c.magenta>不让你的应用</c>

378
00:18:39,119 --> 00:18:41,555
<c.magenta>也应该没有理由不在3D中这样做</c>

379
00:18:42,856 --> 00:18:45,392
<c.magenta>那么如果你想看完整代码</c>

380
00:18:45,726 --> 00:18:48,262
<c.magenta>你可以参看</c>

381
00:18:48,629 --> 00:18:52,099
<c.magenta>通过在Playground书中</c>

382
00:18:52,165 --> 00:18:55,836
<c.magenta>并且这个文件其实也存在于</c>

383
00:18:57,571 --> 00:18:59,106
<c.magenta>那么这就是迭代</c>

384
00:18:59,973 --> 00:19:03,777
<c.magenta>我们谈了你应该如何将数据</c>

385
00:18:59,973 --> 00:19:03,777
<c.magenta>我们谈了你应该如何将数据</c>

386
00:19:04,211 --> 00:19:06,046
<c.magenta>对吧？我们将其用于给世界建模</c>

387
00:19:06,113 --> 00:19:07,948
<c.magenta>还有如何实现台阶动画</c>

388
00:19:09,950 --> 00:19:12,119
<c.magenta>你甚至应该在这个阶段就重视灵活性</c>

389
00:19:12,186 --> 00:19:14,555
<c.magenta>那么当你把全部时间和精力</c>

390
00:19:14,688 --> 00:19:17,057
<c.magenta>确保你正在做像使用引用节点这样的事</c>

391
00:19:17,191 --> 00:19:19,092
<c.magenta>以便你仍然有一些灵活性</c>

392
00:19:20,394 --> 00:19:23,864
<c.magenta>那么最后 确保你提早审核可达性支持</c>

393
00:19:24,064 --> 00:19:26,233
<c.magenta>它不是那种最后可以扩充的东西</c>

394
00:19:26,333 --> 00:19:29,136
<c.magenta>如果你有计划它会惊人简单</c>

395
00:19:30,704 --> 00:19:34,208
<c.magenta>现在让我们谈谈</c>

396
00:19:34,374 --> 00:19:37,010
<c.magenta>以及如何调整它们</c>

397
00:19:37,144 --> 00:19:38,812
<c.magenta>我要邀请Lemont上台</c>

398
00:19:41,615 --> 00:19:43,250
<c.magenta>谢谢Michael 很棒</c>

399
00:19:45,485 --> 00:19:47,221
<c.magenta>大家好 我是Lemont</c>

400
00:19:47,287 --> 00:19:49,489
<c.magenta>我是Swift Playground</c>

401
00:19:50,424 --> 00:19:51,959
<c.magenta>今天我要跟大家谈谈</c>

402
00:19:52,025 --> 00:19:54,361
<c.magenta>如何改进SceneKit应用的性能</c>

403
00:19:54,928 --> 00:19:57,464
<c.magenta>关于帧频率和用户体验</c>

404
00:19:58,398 --> 00:20:00,000
<c.magenta>（调整）</c>

405
00:20:00,067 --> 00:20:03,270
<c.magenta>当我们首次开始开发</c>

406
00:20:04,104 --> 00:20:05,339
<c.magenta>对我们来说最要紧的是</c>

407
00:20:05,405 --> 00:20:07,508
<c.magenta>拥有一个非常丰富和细致的世界</c>

408
00:20:08,108 --> 00:20:10,377
<c.magenta>正如你在这里所看到的</c>

409
00:20:11,011 --> 00:20:12,746
<c.magenta>瀑布看起来很逼真</c>

410
00:20:13,080 --> 00:20:17,184
<c.magenta>台阶后的阴影看起来很棒</c>

411
00:20:17,251 --> 00:20:19,353
<c.magenta>颜色也很丰富和生动</c>

412
00:20:19,520 --> 00:20:22,155
<c.magenta>在瀑布中甚至还隐藏有漂亮的雕像</c>

413
00:20:23,557 --> 00:20:26,760
<c.magenta>但正如你所了解的</c>

414
00:20:27,594 --> 00:20:31,865
<c.magenta>并不是拥有了不起用户体验的唯一方面</c>

415
00:20:31,999 --> 00:20:33,066
<c.magenta>还有性能</c>

416
00:20:34,134 --> 00:20:35,369
<c.magenta>那实际是什么意思呢？</c>

417
00:20:36,670 --> 00:20:39,306
<c.magenta>要获得一个不错的体验</c>

418
00:20:39,373 --> 00:20:41,041
<c.magenta>一个响应性很好的帧频率</c>

419
00:20:41,208 --> 00:20:43,043
<c.magenta>你的用户正在与你的应用进行交互</c>

420
00:20:43,110 --> 00:20:44,745
<c.magenta>他们正在缩放 他们正在做手势</c>

421
00:20:45,012 --> 00:20:47,047
<c.magenta>他们正在向场景中添加对象</c>

422
00:20:47,314 --> 00:20:49,183
<c.magenta>你希望这个过程要很快 并且很流畅</c>

423
00:20:50,884 --> 00:20:52,653
<c.magenta>那么我要给你展示我们是如何</c>

424
00:20:52,719 --> 00:20:54,821
<c.magenta>在Learn to Code中</c>

425
00:20:57,925 --> 00:21:01,195
<c.magenta>让我们看一个</c>

426
00:20:57,925 --> 00:21:01,195
<c.magenta>让我们看一个</c>

427
00:21:01,428 --> 00:21:03,130
<c.magenta>我提到复杂的几何学</c>

428
00:21:03,463 --> 00:21:09,837
<c.magenta>我的意思是这个场景由成千上万个</c>

429
00:21:11,171 --> 00:21:14,942
<c.magenta>现在每一个零件</c>

430
00:21:16,343 --> 00:21:17,878
<c.magenta>那么让我们来看看</c>

431
00:21:17,945 --> 00:21:19,813
<c.magenta>我们应用的性能怎么样</c>

432
00:21:20,647 --> 00:21:24,351
<c.magenta>SceneKit有一个很有用的工具</c>

433
00:21:26,053 --> 00:21:28,088
<c.magenta>我想把它放大看一下</c>

434
00:21:29,656 --> 00:21:32,926
<c.magenta>现在你可以在你的应用中启用这个功能</c>

435
00:21:32,993 --> 00:21:36,296
<c.magenta>你视图中的showStatistics属性</c>

436
00:21:38,632 --> 00:21:40,634
<c.magenta>如果我们看一下这些更有意思的数字</c>

437
00:21:40,701 --> 00:21:43,103
<c.magenta>…调试视图</c>

438
00:21:43,604 --> 00:21:46,707
<c.magenta>你会注意到我们有一个很低的帧频率</c>

439
00:21:47,341 --> 00:21:48,442
<c.magenta>这可不好</c>

440
00:21:49,009 --> 00:21:51,812
<c.magenta>我们实际上想要达到每秒至少60帧</c>

441
00:21:52,312 --> 00:21:55,115
<c.magenta>这可以允许我们获得流畅的交互</c>

442
00:21:55,182 --> 00:21:57,317
<c.magenta>当用户缩放或做手势的时候</c>

443
00:21:59,686 --> 00:22:01,588
<c.magenta>到底是什么导致了这么低的帧频率呢？</c>

444
00:21:59,686 --> 00:22:01,588
<c.magenta>到底是什么导致了这么低的帧频率呢？</c>

445
00:22:02,256 --> 00:22:03,490
<c.magenta>让我们具体来看一下</c>

446
00:22:04,424 --> 00:22:05,659
<c.magenta>每一帧都在做什么？</c>

447
00:22:06,960 --> 00:22:08,795
<c.magenta>这里的这个数字是跟渲染有关的</c>

448
00:22:09,196 --> 00:22:13,667
<c.magenta>是我们用来渲染</c>

449
00:22:15,169 --> 00:22:17,304
<c.magenta>看起来我们需要20.4毫秒</c>

450
00:22:18,438 --> 00:22:19,506
<c.magenta>太慢了</c>

451
00:22:19,940 --> 00:22:22,509
<c.magenta>如果你算一下</c>

452
00:22:22,576 --> 00:22:24,578
<c.magenta>你必须得在16毫秒以下完成</c>

453
00:22:25,913 --> 00:22:28,248
<c.magenta>我们花了20毫秒 都在干什么呢？</c>

454
00:22:29,449 --> 00:22:31,952
<c.magenta>要帮助了解这个问题</c>

455
00:22:32,019 --> 00:22:32,986
<c.magenta>绘制调用的数字</c>

456
00:22:33,053 --> 00:22:35,088
<c.magenta>正如你所看到的</c>

457
00:22:37,090 --> 00:22:38,792
<c.magenta>现在 什么是绘制调用？</c>

458
00:22:39,927 --> 00:22:41,128
<c.magenta>快速回顾一下</c>

459
00:22:41,728 --> 00:22:43,397
<c.magenta>当你想在场景中绘制对象时</c>

460
00:22:43,463 --> 00:22:46,366
<c.magenta>CPU必须得告诉GPU说</c>

461
00:22:47,234 --> 00:22:49,736
<c.magenta>CPU绘制这个网格或几何体对象</c>

462
00:22:50,237 --> 00:22:51,271
<c.magenta>那么这就是绘制调用</c>

463
00:22:52,239 --> 00:22:54,408
<c.magenta>看起来我们一共有877个绘制调用</c>

464
00:22:55,375 --> 00:22:56,710
<c.magenta>有相当多的绘制调用</c>

465
00:22:56,877 --> 00:22:58,979
<c.magenta>那么我们可以做什么</c>

466
00:22:59,046 --> 00:23:00,881
<c.magenta>以实际提升我们应用的性能呢？</c>

467
00:22:59,046 --> 00:23:00,881
<c.magenta>以实际提升我们应用的性能呢？</c>

468
00:23:02,316 --> 00:23:04,251
<c.magenta>我要跟你分享一个小技巧</c>

469
00:23:05,519 --> 00:23:09,223
<c.magenta>那么在我们接下来的演讲中有一个主题</c>

470
00:23:12,492 --> 00:23:15,896
<c.magenta>我要跟大家谈三个明显的时期：</c>

471
00:23:18,031 --> 00:23:21,034
<c.magenta>组成场景的网格几何体</c>

472
00:23:22,202 --> 00:23:24,905
<c.magenta>给我们的场景</c>

473
00:23:26,039 --> 00:23:28,242
<c.magenta>以及让我们场景鲜活的光照</c>

474
00:23:30,944 --> 00:23:34,848
<c.magenta>让我们看一个之前展示过的例子</c>

475
00:23:36,016 --> 00:23:39,786
<c.magenta>现在这个场景有许多单一的零件</c>

476
00:23:40,153 --> 00:23:43,056
<c.magenta>我想只看其中一种 小草</c>

477
00:23:45,392 --> 00:23:47,761
<c.magenta>现在 如果你近距离地看</c>

478
00:23:48,962 --> 00:23:50,664
<c.magenta>你们数学很好吧 你可以数一下</c>

479
00:23:50,797 --> 00:23:53,267
<c.magenta>这个屏幕中大概有30个单一的方格</c>

480
00:23:54,234 --> 00:23:56,036
<c.magenta>每个方格都有自己的网格</c>

481
00:23:56,870 --> 00:24:01,775
<c.magenta>那么CPU必须告诉GPU</c>

482
00:23:56,870 --> 00:24:01,775
<c.magenta>那么CPU必须告诉GPU</c>

483
00:24:01,942 --> 00:24:03,410
<c.magenta>我们就有了30个绘制调用</c>

484
00:24:04,144 --> 00:24:05,212
<c.magenta>现在这是一个小场景</c>

485
00:24:05,279 --> 00:24:08,482
<c.magenta>想象一下 如果你想拥有一个很大</c>

486
00:24:08,549 --> 00:24:09,816
<c.magenta>有成千上万个这样的方格</c>

487
00:24:10,150 --> 00:24:11,718
<c.magenta>我们就会有成千上万个绘制调用</c>

488
00:24:11,919 --> 00:24:13,654
<c.magenta>想象一下我们的帧频率会怎么样</c>

489
00:24:17,424 --> 00:24:21,061
<c.magenta>你可能会注意到一点</c>

490
00:24:22,162 --> 00:24:27,367
<c.magenta>那么如果它们不移动</c>

491
00:24:27,668 --> 00:24:30,070
<c.magenta>我们是否也许可以绘制一个大的网格？</c>

492
00:24:32,439 --> 00:24:33,273
<c.magenta>这是可以的</c>

493
00:24:35,542 --> 00:24:37,344
<c.magenta>有一条规则我想要你记住</c>

494
00:24:37,978 --> 00:24:42,316
<c.magenta>就是当你与GPU通讯时</c>

495
00:24:42,749 --> 00:24:44,985
<c.magenta>如果你有一千个网格</c>

496
00:24:46,053 --> 00:24:48,055
<c.magenta>那么如果我们看看我们的小草方格</c>

497
00:24:48,355 --> 00:24:50,257
<c.magenta>实际上我们想无论如何把它们结合起来</c>

498
00:24:50,924 --> 00:24:52,426
<c.magenta>听起来像是个很合理的技巧</c>

499
00:24:53,160 --> 00:24:54,361
<c.magenta>我要给你们展示如何实现</c>

500
00:24:57,631 --> 00:25:00,667
<c.magenta>假如我们在场景中有两个几何体对象</c>

501
00:24:57,631 --> 00:25:00,667
<c.magenta>假如我们在场景中有两个几何体对象</c>

502
00:25:01,201 --> 00:25:03,403
<c.magenta>左边有一个小草方格</c>

503
00:25:04,238 --> 00:25:06,173
<c.magenta>右边有另一个小草方格</c>

504
00:25:07,841 --> 00:25:10,077
<c.magenta>它们都引用了同一种材料</c>

505
00:25:10,143 --> 00:25:11,378
<c.magenta>它们只是移动了位置</c>

506
00:25:11,712 --> 00:25:13,914
<c.magenta>并且它们在3D空间中</c>

507
00:25:14,848 --> 00:25:18,285
<c.magenta>当你把这个发送给GPU时</c>

508
00:25:22,856 --> 00:25:25,959
<c.magenta>如果我们通过一个叫作扁平的过程</c>

509
00:25:26,793 --> 00:25:30,264
<c.magenta>我们所做的其实就像是在说</c>

510
00:25:30,597 --> 00:25:35,469
<c.magenta>并把它们结合到网格B的点中</c>

511
00:25:37,437 --> 00:25:40,073
<c.magenta>它的漂亮之处在于</c>

512
00:25:40,307 --> 00:25:42,776
<c.magenta>全部这些点都引用了那一种材料</c>

513
00:25:43,110 --> 00:25:44,711
<c.magenta>当CPU与GPU通讯时</c>

514
00:25:44,778 --> 00:25:47,080
<c.magenta>它要做的就只是说</c>

515
00:25:48,415 --> 00:25:53,287
<c.magenta>完成了 现在这听来微不足道</c>

516
00:25:54,788 --> 00:25:56,256
<c.magenta>你可以在你的应用中使用它</c>

517
00:25:56,924 --> 00:26:01,195
<c.magenta>通过SCNNode上的一个</c>

518
00:25:56,924 --> 00:26:01,195
<c.magenta>通过SCNNode上的一个</c>

519
00:26:01,929 --> 00:26:04,898
<c.magenta>你想做的就是确保有父节点</c>

520
00:26:05,866 --> 00:26:07,835
<c.magenta>包含你想要扁平化的节点</c>

521
00:26:08,936 --> 00:26:12,072
<c.magenta>并且返回的是一个新的扁平化网格</c>

522
00:26:12,139 --> 00:26:15,209
<c.magenta>你可以在你的场景中</c>

523
00:26:17,010 --> 00:26:20,180
<c.magenta>现在这个简单的技巧</c>

524
00:26:21,215 --> 00:26:23,650
<c.magenta>所以如果我们以我之前</c>

525
00:26:24,251 --> 00:26:26,153
<c.magenta>我可以具体到每一个部分</c>

526
00:26:26,220 --> 00:26:28,488
<c.magenta>关于哪些能运行这个扁平化逻辑</c>

527
00:26:29,356 --> 00:26:32,659
<c.magenta>我要用红色突出显示</c>

528
00:26:32,960 --> 00:26:35,329
<c.magenta>你在这里可以看到</c>

529
00:26:35,896 --> 00:26:39,166
<c.magenta>…较少的…绘制调用</c>

530
00:26:39,900 --> 00:26:42,402
<c.magenta>每一个红色部分相当于一个绘制调用</c>

531
00:26:42,469 --> 00:26:44,137
<c.magenta>而不是单一的绘制调用</c>

532
00:26:45,873 --> 00:26:49,309
<c.magenta>那么我们可以很大程度上减少</c>

533
00:26:51,011 --> 00:26:53,380
<c.magenta>我们从550次绘制调用降到了</c>

534
00:26:53,780 --> 00:26:55,048
<c.magenta>不到16次</c>

535
00:26:55,916 --> 00:26:56,884
<c.magenta>降了很多</c>

536
00:26:59,319 --> 00:27:00,153
<c.magenta>谢谢</c>

537
00:26:59,319 --> 00:27:00,153
<c.magenta>谢谢</c>

538
00:27:01,855 --> 00:27:05,158
<c.magenta>现在你得在这里用一点儿灵活性</c>

539
00:27:05,259 --> 00:27:08,228
<c.magenta>因为你不想全部这些乱七八糟的</c>

540
00:27:08,295 --> 00:27:09,696
<c.magenta>扁平化全部这些东西</c>

541
00:27:10,531 --> 00:27:13,534
<c.magenta>原因正如Michael之前给你们展示的</c>

542
00:27:14,535 --> 00:27:18,138
<c.magenta>他让水看起来非常逼真</c>

543
00:27:18,205 --> 00:27:19,973
<c.magenta>为我们提供了这种非常棒的效果</c>

544
00:27:21,175 --> 00:27:25,479
<c.magenta>那么如果我们要扁平化所有一切</c>

545
00:27:26,046 --> 00:27:27,681
<c.magenta>整个世界大概会一点一点地消失</c>

546
00:27:27,881 --> 00:27:28,815
<c.magenta>这并不是我们想要的</c>

547
00:27:29,850 --> 00:27:34,788
<c.magenta>那么我们可以有选择性地</c>

548
00:27:35,088 --> 00:27:36,957
<c.magenta>那么我们把整个瀑布扁平化</c>

549
00:27:37,691 --> 00:27:39,993
<c.magenta>在你的世界中或你创建的游戏中</c>

550
00:27:40,761 --> 00:27:44,198
<c.magenta>你可能选择让一个对象消失或移动</c>

551
00:27:44,264 --> 00:27:46,900
<c.magenta>或缩放或旋转或无论怎样修改它</c>

552
00:27:47,534 --> 00:27:50,404
<c.magenta>那么我认为要选择的东西</c>

553
00:27:51,405 --> 00:27:53,106
<c.magenta>应该基于你想如何使用你的几何体</c>

554
00:27:53,173 --> 00:27:56,577
<c.magenta>如果它有一些动态行为 你可能想与</c>

555
00:27:56,643 --> 00:27:59,213
<c.magenta>其它拥有同一种移动方式的东西</c>

556
00:28:04,251 --> 00:28:08,088
<c.magenta>那么我要给你一些关于扁平化的小技巧</c>

557
00:28:08,689 --> 00:28:11,358
<c.magenta>其中一个是你想存储你的节点</c>

558
00:28:11,425 --> 00:28:13,827
<c.magenta>父组 父节点</c>

559
00:28:14,127 --> 00:28:16,597
<c.magenta>并不一定是同一种几何体类型</c>

560
00:28:16,763 --> 00:28:18,198
<c.magenta>我们在这里用的是小草方格 但是…</c>

561
00:28:18,265 --> 00:28:20,501
<c.magenta>比如你正在给客厅建模</c>

562
00:28:20,567 --> 00:28:23,136
<c.magenta>有一张沙发 一把椅子和一张桌子</c>

563
00:28:23,203 --> 00:28:24,671
<c.magenta>它们相对静止</c>

564
00:28:25,372 --> 00:28:26,406
<c.magenta>它们都可以</c>

565
00:28:26,473 --> 00:28:29,910
<c.magenta>放到一个节点组中</c>

566
00:28:30,310 --> 00:28:31,678
<c.magenta>在这里你想积极一点</c>

567
00:28:31,745 --> 00:28:34,414
<c.magenta>任何东西相对于别的东西都不会移动</c>

568
00:28:35,482 --> 00:28:39,553
<c.magenta>扁平化它</c>

569
00:28:41,522 --> 00:28:43,090
<c.magenta>现在这里有一个警告</c>

570
00:28:44,491 --> 00:28:47,928
<c.magenta>Learn to Code</c>

571
00:28:47,995 --> 00:28:51,298
<c.magenta>它是一个很小的世界</c>

572
00:28:51,765 --> 00:28:53,800
<c.magenta>但对于你的世界 可能会非常广阔</c>

573
00:28:53,867 --> 00:28:55,736
<c.magenta>你可以进入某一栋大楼或你…</c>

574
00:28:56,737 --> 00:28:59,006
<c.magenta>…在一个大规模的地形上</c>

575
00:28:59,773 --> 00:29:03,076
<c.magenta>那么你想要做的是…你不想做的是</c>

576
00:28:59,773 --> 00:29:03,076
<c.magenta>那么你想要做的是…你不想做的是</c>

577
00:29:03,210 --> 00:29:05,846
<c.magenta>把全部东西都乱七八糟地堆在一起</c>

578
00:29:06,346 --> 00:29:08,415
<c.magenta>如果你有整个世界的地图集</c>

579
00:29:08,849 --> 00:29:10,951
<c.magenta>而场景中只能看到其中一部分</c>

580
00:29:11,018 --> 00:29:13,520
<c.magenta>在任何时候</c>

581
00:29:13,620 --> 00:29:16,723
<c.magenta>即渲染全部这些点和全部网格</c>

582
00:29:17,124 --> 00:29:18,058
<c.magenta>这并不是你想要的</c>

583
00:29:19,459 --> 00:29:20,694
<c.magenta>这里有一个小技巧</c>

584
00:29:20,961 --> 00:29:23,530
<c.magenta>就是简单地把你的世界</c>

585
00:29:24,598 --> 00:29:27,267
<c.magenta>然后在每一个组块上运行这个过程</c>

586
00:29:27,634 --> 00:29:30,904
<c.magenta>当你从一个组块移动到另一个组块时</c>

587
00:29:31,371 --> 00:29:33,073
<c.magenta>你实际上获得了扁平化的优点</c>

588
00:29:33,140 --> 00:29:37,678
<c.magenta>而不需要付出</c>

589
00:29:39,713 --> 00:29:41,682
<c.magenta>接下来我要谈谈材料</c>

590
00:29:42,549 --> 00:29:46,520
<c.magenta>现在材料对你的绘制调用数量</c>

591
00:29:48,121 --> 00:29:49,189
<c.magenta>我会告诉你原因的</c>

592
00:29:50,924 --> 00:29:53,360
<c.magenta>这个帧也是来自我之前展示的那个电影</c>

593
00:29:53,827 --> 00:29:58,632
<c.magenta>就是我们展示扁平化的场景</c>

594
00:29:58,699 --> 00:30:02,069
<c.magenta>这个世界的顶部几乎是在一个网格中</c>

595
00:29:58,699 --> 00:30:02,069
<c.magenta>这个世界的顶部几乎是在一个网格中</c>

596
00:30:03,203 --> 00:30:04,338
<c.magenta>所以这是一个绘制调用</c>

597
00:30:05,239 --> 00:30:09,343
<c.magenta>但机警的你们可能会注意到</c>

598
00:30:10,077 --> 00:30:14,748
<c.magenta>这里有多种材料</c>

599
00:30:14,815 --> 00:30:16,750
<c.magenta>和台阶所用的材料不同</c>

600
00:30:17,184 --> 00:30:19,786
<c.magenta>当然不是石头自身</c>

601
00:30:20,521 --> 00:30:21,455
<c.magenta>那么这是怎么回事？</c>

602
00:30:23,357 --> 00:30:24,925
<c.magenta>让我们谈谈减少材料</c>

603
00:30:25,292 --> 00:30:28,295
<c.magenta>因为我们要降低到一个绘制调用</c>

604
00:30:30,063 --> 00:30:33,066
<c.magenta>那么我们在屏幕上有两个几何体对象</c>

605
00:30:34,168 --> 00:30:36,336
<c.magenta>一个在左边 一个在右边</c>

606
00:30:37,304 --> 00:30:39,473
<c.magenta>一个用的是沙子纹理</c>

607
00:30:40,274 --> 00:30:43,277
<c.magenta>一个用的是这种看起来</c>

608
00:30:44,611 --> 00:30:47,314
<c.magenta>如果我们运行</c>

609
00:30:48,081 --> 00:30:52,052
<c.magenta>我们实际上会把那个结合起来</c>

610
00:30:52,519 --> 00:30:55,289
<c.magenta>但我们仍然引用的是两种材料</c>

611
00:30:55,355 --> 00:30:58,258
<c.magenta>那么当CPU与GPU通讯时 它会说</c>

612
00:30:58,325 --> 00:31:01,762
<c.magenta>“嘿 获取这个网格</c>

613
00:30:58,325 --> 00:31:01,762
<c.magenta>“嘿 获取这个网格</c>

614
00:31:02,329 --> 00:31:03,297
<c.magenta>很棒 好的</c>

615
00:31:03,363 --> 00:31:05,465
<c.magenta>现在再次获取这个网格</c>

616
00:31:05,532 --> 00:31:07,067
<c.magenta>小草材料</c>

617
00:31:07,134 --> 00:31:08,402
<c.magenta>你仍然有两个绘制调用</c>

618
00:31:09,469 --> 00:31:13,040
<c.magenta>你是有机会减少绘制调用的次数的</c>

619
00:31:15,742 --> 00:31:17,811
<c.magenta>你可能听说过纹理拼合</c>

620
00:31:18,645 --> 00:31:20,581
<c.magenta>但也许你并不理解这到底是什么</c>

621
00:31:20,848 --> 00:31:22,015
<c.magenta>这是一个非常简单的过程</c>

622
00:31:23,217 --> 00:31:25,586
<c.magenta>你的设计师以及3D工具</c>

623
00:31:27,054 --> 00:31:31,458
<c.magenta>把你的材料合并到一个纹理贴图集中</c>

624
00:31:33,293 --> 00:31:35,963
<c.magenta>它们会在底层更新你的几何体</c>

625
00:31:36,029 --> 00:31:38,398
<c.magenta>以便它指向纹理内正确的位元</c>

626
00:31:39,166 --> 00:31:41,969
<c.magenta>但最终结果是你有一个绘制调用</c>

627
00:31:44,471 --> 00:31:45,372
<c.magenta>现在能实现…</c>

628
00:31:47,307 --> 00:31:51,378
<c.magenta>…即便你有…几个对象或上千个对象</c>

629
00:31:52,479 --> 00:31:54,748
<c.magenta>在Learn to Code中</c>

630
00:31:54,815 --> 00:31:56,350
<c.magenta>是我刚展示给你的那个世界的贴图集</c>

631
00:31:56,950 --> 00:31:58,118
<c.magenta>贴图集就是这个样子的</c>

632
00:32:00,487 --> 00:32:02,623
<c.magenta>我们有70多种材料</c>

633
00:32:03,023 --> 00:32:05,325
<c.magenta>我们可以浓缩成一个</c>

634
00:32:07,127 --> 00:32:08,161
<c.magenta>这是一种很大的节约</c>

635
00:32:10,163 --> 00:32:12,699
<c.magenta>这里有另一个优点你可能没有注意到</c>

636
00:32:14,401 --> 00:32:17,271
<c.magenta>当你向场景中添加一种材料时</c>

637
00:32:17,838 --> 00:32:22,509
<c.magenta>在场景底层生成了一个着色器</c>

638
00:32:23,377 --> 00:32:24,978
<c.magenta>你不能启动你的场景</c>

639
00:32:25,045 --> 00:32:26,880
<c.magenta>除非着色器已完成编译</c>

640
00:32:26,947 --> 00:32:29,483
<c.magenta>如果你有70种材料</c>

641
00:32:29,716 --> 00:32:31,985
<c.magenta>你有上百个对象</c>

642
00:32:32,386 --> 00:32:35,622
<c.magenta>上百种材料</c>

643
00:32:35,689 --> 00:32:37,424
<c.magenta>你被卡住了 等着场景加载</c>

644
00:32:38,425 --> 00:32:42,296
<c.magenta>通过将它合并为</c>

645
00:32:42,529 --> 00:32:44,898
<c.magenta>你减少了需要编译的着色器的数量</c>

646
00:32:45,165 --> 00:32:46,366
<c.magenta>推进了你的启动时间</c>

647
00:32:47,734 --> 00:32:51,705
<c.magenta>更不要提较少的I/O了</c>

648
00:32:55,542 --> 00:32:57,244
<c.magenta>那么接下来我想谈谈光照</c>

649
00:32:58,312 --> 00:33:00,080
<c.magenta>现在光照很有意思 因为…</c>

650
00:32:58,312 --> 00:33:00,080
<c.magenta>现在光照很有意思 因为…</c>

651
00:33:01,415 --> 00:33:06,220
<c.magenta>光照允许你给你的世界增加丰富</c>

652
00:33:07,020 --> 00:33:09,456
<c.magenta>你想象一个这样的场景</c>

653
00:33:09,790 --> 00:33:12,426
<c.magenta>你添加光照 现在看起来有点意思了</c>

654
00:33:13,227 --> 00:33:17,898
<c.magenta>那么让我们的设计师在场景中</c>

655
00:33:17,965 --> 00:33:19,333
<c.magenta>然后给我们提供了这个视觉效果</c>

656
00:33:20,934 --> 00:33:23,470
<c.magenta>我们添加了聚光灯</c>

657
00:33:23,537 --> 00:33:28,308
<c.magenta>当他们沿着瀑布或草地</c>

658
00:33:28,542 --> 00:33:29,376
<c.magenta>这是个不错的效果</c>

659
00:33:30,844 --> 00:33:34,014
<c.magenta>我们添加了全方位光照</c>

660
00:33:34,882 --> 00:33:36,316
<c.magenta>增加了一点视觉效果</c>

661
00:33:36,416 --> 00:33:39,486
<c.magenta>那么你可以看到前景中的台阶</c>

662
00:33:39,553 --> 00:33:41,889
<c.magenta>比后景中的台阶要更高亮</c>

663
00:33:44,758 --> 00:33:46,426
<c.magenta>最后 我们添加了环境光</c>

664
00:33:47,094 --> 00:33:50,464
<c.magenta>以确保场景中的一切东西都是可见的</c>

665
00:33:50,531 --> 00:33:53,033
<c.magenta>否则你将拥有非常暗的区域</c>

666
00:33:53,400 --> 00:33:54,935
<c.magenta>是光照不能照亮的区域</c>

667
00:33:56,503 --> 00:33:57,638
<c.magenta>你可以看到这种很棒的效果</c>

668
00:33:57,704 --> 00:33:59,706
<c.magenta>如果你看一下水的阴影的话</c>

669
00:34:00,507 --> 00:34:01,341
<c.magenta>非常整洁</c>

670
00:34:02,676 --> 00:34:04,878
<c.magenta>现在这里有一点性能消耗</c>

671
00:34:04,945 --> 00:34:06,113
<c.magenta>光照可不是免费的</c>

672
00:34:07,281 --> 00:34:08,815
<c.magenta>记得我告诉过你的绘制调用吧</c>

673
00:34:09,349 --> 00:34:11,217
<c.magenta>绘制调用的个数越多</c>

674
00:34:11,485 --> 00:34:12,418
<c.magenta>你的应用呢？</c>

675
00:34:12,985 --> 00:34:17,224
<c.magenta>无论何时当光照点亮网格时</c>

676
00:34:19,059 --> 00:34:20,460
<c.magenta>都会生成一个额外绘制调用</c>

677
00:34:21,195 --> 00:34:22,795
<c.magenta>你的场景中有五个光照</c>

678
00:34:23,429 --> 00:34:25,699
<c.magenta>你就增加了五个绘制调用</c>

679
00:34:27,801 --> 00:34:29,803
<c.magenta>有一种方式可以避免这种情况</c>

680
00:34:31,205 --> 00:34:32,639
<c.magenta>叫作光照图</c>

681
00:34:34,074 --> 00:34:38,045
<c.magenta>现在的情况是你的设计师</c>

682
00:34:38,145 --> 00:34:43,050
<c.magenta>将运行一个过程 计算广告所在位置</c>

683
00:34:43,116 --> 00:34:45,518
<c.magenta>他们可以很大方地把光照</c>

684
00:34:45,585 --> 00:34:46,786
<c.magenta>点亮所有东西</c>

685
00:34:47,187 --> 00:34:48,822
<c.magenta>那实际上会预计算</c>

686
00:34:49,121 --> 00:34:51,859
<c.magenta>你场景中的广告强度</c>

687
00:34:52,125 --> 00:34:53,694
<c.magenta>并把它存储在一种材料中</c>

688
00:34:53,893 --> 00:34:56,230
<c.magenta>而不像我们之前展示给你们的纹理一样</c>

689
00:34:57,397 --> 00:34:59,867
<c.magenta>这里的漂亮之处在于</c>

690
00:35:00,834 --> 00:35:04,271
<c.magenta>这个过程不是CPU或GPU加强的</c>

691
00:35:04,438 --> 00:35:05,672
<c.magenta>事实上它是免费的</c>

692
00:35:05,739 --> 00:35:07,407
<c.magenta>让我们再花点时间谈谈它</c>

693
00:35:07,474 --> 00:35:11,111
<c.magenta>而不是讲实际会占用多少CPU</c>

694
00:35:12,546 --> 00:35:15,249
<c.magenta>那么只要我们想</c>

695
00:35:16,183 --> 00:35:17,017
<c.magenta>现在我们不这样做</c>

696
00:35:17,851 --> 00:35:19,386
<c.magenta>我们留了一个聚光灯</c>

697
00:35:20,020 --> 00:35:23,357
<c.magenta>因为我们区分开了</c>

698
00:35:23,423 --> 00:35:24,791
<c.magenta>我们为什么还要再次渲染这些光照呢</c>

699
00:35:24,858 --> 00:35:26,627
<c.magenta>我们在上一帧中就进行了渲染</c>

700
00:35:27,794 --> 00:35:29,530
<c.magenta>但聚光灯会改变</c>

701
00:35:29,930 --> 00:35:30,931
<c.magenta>随着你旋转这个世界</c>

702
00:35:30,998 --> 00:35:34,101
<c.magenta>聚光灯也会以不同的方式照亮对象</c>

703
00:35:35,002 --> 00:35:37,104
<c.magenta>当你让自己的角色</c>

704
00:35:37,504 --> 00:35:41,008
<c.magenta>它的影子会以不同方式</c>

705
00:35:41,808 --> 00:35:42,643
<c.magenta>所以我们保留了聚光灯</c>

706
00:35:43,143 --> 00:35:47,414
<c.magenta>但我们确保指定把它应用在哪里</c>

707
00:35:49,383 --> 00:35:51,985
<c.magenta>角色或场景的某个部分</c>

708
00:35:53,754 --> 00:35:57,991
<c.magenta>好消息是它可以与我之前</c>

709
00:35:58,058 --> 00:36:01,428
<c.magenta>因为很明显 光照就像一个</c>

710
00:35:58,058 --> 00:36:01,428
<c.magenta>因为很明显 光照就像一个</c>

711
00:36:01,495 --> 00:36:02,529
<c.magenta>绘制调用的倍增器</c>

712
00:36:02,829 --> 00:36:03,664
<c.magenta>你猜怎么样</c>

713
00:36:04,298 --> 00:36:05,432
<c.magenta>我们减少了第一项</c>

714
00:36:05,499 --> 00:36:10,304
<c.magenta>我们减少了需要点亮的网格数量</c>

715
00:36:11,805 --> 00:36:13,640
<c.magenta>如果我们真的想在那儿放一个光照</c>

716
00:36:13,707 --> 00:36:15,976
<c.magenta>效果也不会比我们刚启动时差</c>

717
00:36:17,211 --> 00:36:19,813
<c.magenta>那么在进行这些修改后</c>

718
00:36:20,948 --> 00:36:22,916
<c.magenta>让我们看一下我们的性能</c>

719
00:36:25,385 --> 00:36:26,253
<c.magenta>让我们放大</c>

720
00:36:26,320 --> 00:36:28,222
<c.magenta>实际上我想花点时间欣赏一下</c>

721
00:36:28,689 --> 00:36:30,591
<c.magenta>光照图的效果 太棒了</c>

722
00:36:31,725 --> 00:36:33,360
<c.magenta>如果你看一下第一个台阶的后面</c>

723
00:36:33,427 --> 00:36:36,096
<c.magenta>你会看到那个小的阴影以及裂缝</c>

724
00:36:36,430 --> 00:36:38,599
<c.magenta>…甚至在瀑布后面也稍微有点暗</c>

725
00:36:39,433 --> 00:36:42,736
<c.magenta>岩石周围和巨石阵中的弯曲区域</c>

726
00:36:42,803 --> 00:36:43,904
<c.magenta>看起来真的很棒</c>

727
00:36:44,271 --> 00:36:46,173
<c.magenta>你知道吗 你并没有付出任何代价</c>

728
00:36:46,240 --> 00:36:48,909
<c.magenta>这都是通过使用材料离线实现的</c>

729
00:36:49,309 --> 00:36:52,045
<c.magenta>我们的设计师</c>

730
00:36:53,146 --> 00:36:54,915
<c.magenta>现在我放大性能图</c>

731
00:36:57,184 --> 00:36:58,452
<c.magenta>哇哦 我们现在达到每秒60帧了</c>

732
00:36:58,519 --> 00:37:01,188
<c.magenta>我们的用户不会关闭我们的应用</c>

733
00:36:58,519 --> 00:37:01,188
<c.magenta>我们的用户不会关闭我们的应用</c>

734
00:37:04,591 --> 00:37:05,759
<c.magenta>让我们看看我们的渲染时间</c>

735
00:37:07,261 --> 00:37:08,795
<c.magenta>是2.3毫秒</c>

736
00:37:09,429 --> 00:37:11,331
<c.magenta>现在非常了不起 原因有很多</c>

737
00:37:12,032 --> 00:37:13,400
<c.magenta>第一 记得我们说过</c>

738
00:37:13,467 --> 00:37:15,836
<c.magenta>你必须得低于16毫秒…</c>

739
00:37:16,436 --> 00:37:18,505
<c.magenta>…才能…</c>

740
00:37:20,574 --> 00:37:22,976
<c.magenta>…实现每秒渲染60帧吗？</c>

741
00:37:23,877 --> 00:37:25,646
<c.magenta>刚发布的那个新iPad</c>

742
00:37:26,446 --> 00:37:29,816
<c.magenta>如果你想利用120赫兹技术刷新率</c>

743
00:37:30,684 --> 00:37:32,019
<c.magenta>你得把那个数字降到7以下</c>

744
00:37:32,419 --> 00:37:33,520
<c.magenta>我们是2以下 所以我们很不错</c>

745
00:37:34,288 --> 00:37:35,122
<c.magenta>启动它</c>

746
00:37:37,457 --> 00:37:41,228
<c.magenta>那么让我们谈谈净空高度</c>

747
00:37:42,296 --> 00:37:44,131
<c.magenta>漂亮之处是这个数字很低</c>

748
00:37:44,431 --> 00:37:46,567
<c.magenta>如果你想给你的场景中添加更多的对象</c>

749
00:37:46,633 --> 00:37:48,602
<c.magenta>也许你想添加更多的游戏设置逻辑</c>

750
00:37:48,669 --> 00:37:52,806
<c.magenta>通过GameplayKit</c>

751
00:37:52,873 --> 00:37:55,676
<c.magenta>或者你只想丰富你的场景</c>

752
00:37:56,176 --> 00:37:57,778
<c.magenta>告诉你的设计师“嘿 启动它</c>

753
00:37:57,845 --> 00:38:00,848
<c.magenta>让我们在场景中添加更多对象</c>

754
00:37:57,845 --> 00:38:00,848
<c.magenta>让我们在场景中添加更多对象</c>

755
00:38:01,582 --> 00:38:04,751
<c.magenta>或者你只想节约电量 你可以那样做</c>

756
00:38:06,687 --> 00:38:08,288
<c.magenta>最后让我们看看那个绘制调用的数量</c>

757
00:38:09,590 --> 00:38:13,794
<c.magenta>哇哦 73 你还记得吧</c>

758
00:38:14,161 --> 00:38:19,066
<c.magenta>我们现在使用的绘制调用数量</c>

759
00:38:19,132 --> 00:38:20,400
<c.magenta>比刚才的十分之一还要少</c>

760
00:38:20,934 --> 00:38:24,271
<c.magenta>我们正在小口品尝</c>

761
00:38:24,838 --> 00:38:25,672
<c.magenta>非常棒</c>

762
00:38:26,173 --> 00:38:27,674
<c.magenta>我们的应用很流畅</c>

763
00:38:28,208 --> 00:38:30,344
<c.magenta>当我们再提到净空高度时</c>

764
00:38:30,878 --> 00:38:31,778
<c.magenta>你就要记得</c>

765
00:38:32,379 --> 00:38:34,681
<c.magenta>你要在你的应用中</c>

766
00:38:34,848 --> 00:38:38,819
<c.magenta>在我们的例子中</c>

767
00:38:39,419 --> 00:38:43,924
<c.magenta>用户可以编辑代码并点击菜单项</c>

768
00:38:43,991 --> 00:38:44,825
<c.magenta>以及类似的操作</c>

769
00:38:45,993 --> 00:38:46,927
<c.magenta>在你的应用中</c>

770
00:38:46,994 --> 00:38:48,829
<c.magenta>也许用户正在做比如缩放</c>

771
00:38:48,896 --> 00:38:50,731
<c.magenta>缩放或做一些选择 或…</c>

772
00:38:52,666 --> 00:38:55,169
<c.magenta>你知道的</c>

773
00:38:55,235 --> 00:38:56,837
<c.magenta>按照你应用中的逻辑</c>

774
00:38:58,172 --> 00:38:59,006
<c.magenta>很棒</c>

775
00:39:00,908 --> 00:39:02,075
<c.magenta>那么回顾一下</c>

776
00:39:03,443 --> 00:39:05,078
<c.magenta>我们讲了扁平化几何体</c>

777
00:39:05,145 --> 00:39:08,515
<c.magenta>如何简便地实现性能优化</c>

778
00:39:08,582 --> 00:39:10,284
<c.magenta>关于减少你的绘制调用数量</c>

779
00:39:11,718 --> 00:39:13,754
<c.magenta>我们讲了使用纹理贴图集</c>

780
00:39:13,820 --> 00:39:15,722
<c.magenta>就是你让你的设计师做的东西</c>

781
00:39:15,789 --> 00:39:16,957
<c.magenta>你只需要利用即可</c>

782
00:39:17,024 --> 00:39:19,560
<c.magenta>那将会减少你所使用的材料</c>

783
00:39:19,893 --> 00:39:21,862
<c.magenta>从而影响加载时间</c>

784
00:39:21,962 --> 00:39:23,864
<c.magenta>让你的应用启动更快</c>

785
00:39:24,765 --> 00:39:29,303
<c.magenta>还会影响磁盘I/O 使加载对象减少</c>

786
00:39:30,270 --> 00:39:34,274
<c.magenta>最后 它可以和几何体扁平化一起处理</c>

787
00:39:34,541 --> 00:39:37,010
<c.magenta>确保尽可能少地绘制调用数量</c>

788
00:39:38,712 --> 00:39:41,481
<c.magenta>最后使用光照图</c>

789
00:39:42,015 --> 00:39:44,585
<c.magenta>给你的场景添加丰富的可视化细节</c>

790
00:39:45,919 --> 00:39:49,890
<c.magenta>而不需要占用太多的GPU</c>

791
00:39:50,023 --> 00:39:50,958
<c.magenta>让你的设计师疯狂起来吧</c>

792
00:39:53,393 --> 00:39:55,128
<c.magenta>我们还有一些相关的演讲</c>

793
00:39:56,029 --> 00:39:57,731
<c.magenta>谢谢 祝你们度过一个美好的WWDC</c>
