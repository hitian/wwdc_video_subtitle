1
00:00:23,066 --> 00:00:23,696
&gt;&gt; 早上好  [ 鼓掌 ]

2
00:00:25,036 --> 00:00:27,876
谢谢 欢迎来到

3
00:00:27,876 --> 00:00:29,496
屏幕录制和直播

4
00:00:29,496 --> 00:00:30,046
介绍会

5
00:00:30,576 --> 00:00:32,336
我叫 Johnny Trenh 

6
00:00:32,336 --> 00:00:33,506
是苹果 ReplayKit 团队的

7
00:00:33,676 --> 00:00:34,796
软件工程师

8
00:00:35,966 --> 00:00:37,926
今天 我的同事

9
00:00:37,996 --> 00:00:39,776
Alexander Subbotin 和我

10
00:00:39,776 --> 00:00:41,646
非常高兴能和各位讲一讲

11
00:00:41,646 --> 00:00:42,826
今年我们为

12
00:00:42,826 --> 00:00:44,276
ReplayKit 设计的新功能 

13
00:00:45,666 --> 00:00:46,866
有很多要说的

14
00:00:46,866 --> 00:00:47,956
所以我们直接开始吧

15
00:00:50,616 --> 00:00:52,896
ReplayKit 是一个框架  

16
00:00:52,896 --> 00:00:54,686
让开发者可以

17
00:00:54,686 --> 00:00:57,476
把音频 视频

18
00:00:57,786 --> 00:00:59,756
和麦克风内容 

19
00:00:59,756 --> 00:01:01,546
录制成电影文件

20
00:00:59,756 --> 00:01:01,546
录制成电影文件

21
00:01:01,546 --> 00:01:04,706
使得用户可以查看 编辑 

22
00:01:04,706 --> 00:01:05,566
保存或者分享 

23
00:01:05,566 --> 00:01:05,836
给其他人

24
00:01:08,286 --> 00:01:10,326
ReplayKit 同样也支持  

25
00:01:10,326 --> 00:01:10,966
直播 

26
00:01:11,546 --> 00:01:12,956
对于 App 生成的内容

27
00:01:12,956 --> 00:01:15,446
ReplayKit 提供   

28
00:01:15,446 --> 00:01:17,476
所有必要的工具

29
00:01:17,476 --> 00:01:19,346
来把 App 的音频 

30
00:01:19,346 --> 00:01:21,996
视频和麦克风内容

31
00:01:21,996 --> 00:01:23,046
流式传输到直播扩展

32
00:01:24,456 --> 00:01:25,846
对于执行了直播扩展

33
00:01:25,846 --> 00:01:28,416
的 App 来说

34
00:01:28,416 --> 00:01:30,136
ReplayKit 有

35
00:01:30,136 --> 00:01:31,986
简单的 Xcode 模板

36
00:01:31,986 --> 00:01:33,746
来帮助你的 App

37
00:01:33,836 --> 00:01:37,576
流式传输 ReplayKit 内容

38
00:01:37,666 --> 00:01:39,856
ReplayKit 可以录制高清的

39
00:01:39,856 --> 00:01:42,016
音频和视频

40
00:01:42,016 --> 00:01:43,886
而且需要较小的性能损耗

41
00:01:43,926 --> 00:01:45,116
和电量损耗

42
00:01:46,126 --> 00:01:47,826
隐私对我们来说很重要

43
00:01:47,826 --> 00:01:50,396
所以无论是录制

44
00:01:50,396 --> 00:01:51,946
还是直播 

45
00:01:52,026 --> 00:01:54,056
都有隐私保护措施 

46
00:01:54,056 --> 00:01:55,806
例如用户许可 

47
00:01:55,806 --> 00:01:57,676
而且所有录制文件和样本

48
00:01:57,676 --> 00:01:58,646
都有专属系统 UI

49
00:02:01,286 --> 00:02:02,956
自从 ReplayKit 发布

50
00:02:02,956 --> 00:02:04,486
我们从全世界的

51
00:02:04,486 --> 00:02:06,026
开发者那里 看到很多 

52
00:02:06,026 --> 00:02:06,926
很棒的应用

53
00:02:07,836 --> 00:02:09,395
一些 App 比如 Galaxy on Fire 

54
00:02:09,395 --> 00:02:11,886
Vainglory Call of Champions 

55
00:02:11,886 --> 00:02:14,186
和 Modern Combat 5

56
00:02:14,496 --> 00:02:16,716
都使用 ReplayKit 

57
00:02:16,716 --> 00:02:18,466
录制和

58
00:02:18,466 --> 00:02:20,296
向世界各地直播

59
00:02:20,296 --> 00:02:20,716
其用户的体验

60
00:02:23,606 --> 00:02:25,356
去年我们介绍了

61
00:02:25,356 --> 00:02:26,586
ReplayKit 直播 

62
00:02:26,766 --> 00:02:28,356
而我可以很骄傲地说

63
00:02:28,356 --> 00:02:30,116
现在移动流媒体中的

64
00:02:30,116 --> 00:02:31,786
很多领军企业

65
00:02:31,786 --> 00:02:32,166
都在使用 ReplayKit 

66
00:02:33,796 --> 00:02:36,496
我们的支持率 采用率

67
00:02:36,536 --> 00:02:37,556
和从开发者那里得到的反馈

68
00:02:37,556 --> 00:02:39,056
都很棒 

69
00:02:39,866 --> 00:02:41,036
所以今年

70
00:02:41,166 --> 00:02:42,376
我们很高兴能给你们介绍

71
00:02:43,886 --> 00:02:44,676
ReplayKit 2

72
00:02:45,816 --> 00:02:47,956
我们对 ReplayKit 2 的目标是 

73
00:02:47,956 --> 00:02:49,906
所有用户和 App 都可以

74
00:02:50,126 --> 00:02:51,516
使用 ReplayKit

75
00:02:52,616 --> 00:02:54,306
我们设计了新的功能

76
00:02:54,336 --> 00:02:55,976
让 ReplayKit 不局限于

77
00:02:55,976 --> 00:02:58,466
游戏领域 让所有的开发者

78
00:02:58,546 --> 00:03:00,866
都可以录制

79
00:02:58,546 --> 00:03:00,866
都可以录制

80
00:03:00,866 --> 00:03:02,576
并向世界各地直播

81
00:03:02,576 --> 00:03:02,956
他们用户的体验

82
00:03:03,476 --> 00:03:05,946
为了做到这一点

83
00:03:05,946 --> 00:03:08,486
首先 我要介绍 

84
00:03:08,486 --> 00:03:09,196
App 内屏幕捕捉

85
00:03:10,506 --> 00:03:12,006
我们已经见识过

86
00:03:12,006 --> 00:03:13,826
用户用 ReplayKit 做出的

87
00:03:13,826 --> 00:03:15,086
非常好的内容   

88
00:03:16,326 --> 00:03:17,666
在 ReplayKit 2 里 

89
00:03:17,666 --> 00:03:19,636
我们加入了 App 内屏幕捕捉

90
00:03:19,636 --> 00:03:21,506
这个强大的新 API  

91
00:03:21,506 --> 00:03:23,586
让你可以

92
00:03:23,826 --> 00:03:25,426
直接通过 ReplayKit 

93
00:03:25,426 --> 00:03:28,316
访问 App 自己的

94
00:03:28,436 --> 00:03:30,196
音频 视频

95
00:03:30,196 --> 00:03:30,906
和麦克风内容

96
00:03:31,416 --> 00:03:35,636
我们对 ReplayKit 2 的目标是

97
00:03:35,636 --> 00:03:36,976
让 ReplayKit 可以在所有 App 中 

98
00:03:36,976 --> 00:03:37,626
使用

99
00:03:38,506 --> 00:03:40,026
所以我们让

100
00:03:40,026 --> 00:03:42,086
ReplayKit 现在适用于 

101
00:03:42,086 --> 00:03:43,826
iOS 的所有 App 

102
00:03:44,736 --> 00:03:47,096
以前 为了使用 ReplayKit

103
00:03:47,096 --> 00:03:48,746
或者使用一个用

104
00:03:48,746 --> 00:03:50,646
ReplayKit 的 App 你必须要用

105
00:03:50,646 --> 00:03:50,926
我们的 API

106
00:03:51,566 --> 00:03:54,936
但是现在 用户可以

107
00:03:54,936 --> 00:03:57,376
直接通过控制中心里的 

108
00:03:57,376 --> 00:03:59,326
屏幕录制按钮

109
00:03:59,326 --> 00:04:00,736
录制并播出他们

110
00:03:59,326 --> 00:04:00,736
录制并播出他们

111
00:04:00,906 --> 00:04:03,856
整体 iOS 的屏幕体验

112
00:04:04,026 --> 00:04:06,006
ReplayKit 2 还有一个创新 

113
00:04:06,006 --> 00:04:08,186
就是可以把 App 和

114
00:04:08,366 --> 00:04:09,876
一个特定的流媒体服务

115
00:04:09,876 --> 00:04:10,376
配对

116
00:04:11,696 --> 00:04:14,636
开发者可以

117
00:04:14,636 --> 00:04:16,296
从 App 内部 

118
00:04:16,296 --> 00:04:17,896
完美地集合

119
00:04:17,896 --> 00:04:18,625
整个流媒体解决方案

120
00:04:20,676 --> 00:04:22,826
去年 我们提供了

121
00:04:22,826 --> 00:04:24,116
ReplayKit 的前摄像头支持

122
00:04:24,896 --> 00:04:26,906
今年 在 ReplayKit 2 里 

123
00:04:26,906 --> 00:04:28,306
我们加入了快速镜头切换

124
00:04:28,306 --> 00:04:29,826
这样你就可以通过

125
00:04:29,826 --> 00:04:31,516
前摄像头和

126
00:04:31,786 --> 00:04:33,486
后摄像头来添加

127
00:04:33,486 --> 00:04:33,976
视频评论

128
00:04:36,456 --> 00:04:37,906
有很多新的东西

129
00:04:37,906 --> 00:04:39,056
要介绍

130
00:04:39,056 --> 00:04:40,126
所以让我们

131
00:04:40,126 --> 00:04:42,526
直接开始说

132
00:04:42,526 --> 00:04:43,206
App 内屏幕捕捉

133
00:04:44,616 --> 00:04:46,036
App 内屏幕捕捉

134
00:04:46,126 --> 00:04:48,226
是个强大的新 API 

135
00:04:48,226 --> 00:04:50,496
让你可以直接通过

136
00:04:50,536 --> 00:04:53,236
ReplayKit 访问 

137
00:04:53,556 --> 00:04:55,156
App 自己的音频视频

138
00:04:55,156 --> 00:04:55,846
和麦克风内容

139
00:04:56,926 --> 00:04:58,786
这个新 API 可以让 

140
00:04:58,786 --> 00:05:00,496
用户得到全新的体验

141
00:04:58,786 --> 00:05:00,496
用户得到全新的体验

142
00:05:00,496 --> 00:05:01,906
这在以前

143
00:05:01,906 --> 00:05:02,276
是做不到的

144
00:05:03,256 --> 00:05:05,086
在介绍 App 内屏幕捕捉之前

145
00:05:05,086 --> 00:05:06,346
让我们 

146
00:05:06,346 --> 00:05:07,316
先来看一下

147
00:05:08,006 --> 00:05:09,756
现在 App 是如何用

148
00:05:09,756 --> 00:05:11,096
ReplayKit 录像的 

149
00:05:14,056 --> 00:05:15,236
当前情况下

150
00:05:15,236 --> 00:05:17,326
使用 ReplayKit 的 App

151
00:05:17,326 --> 00:05:18,526
会调入 RPScreenRecorder 

152
00:05:18,526 --> 00:05:19,886
打开屏幕录制单例

153
00:05:20,536 --> 00:05:22,886
然后在屏幕录制单例 

154
00:05:22,886 --> 00:05:24,686
选择开始录制 

155
00:05:24,686 --> 00:05:26,696
这个时候 

156
00:05:26,696 --> 00:05:27,916
回放 Daemon 程序会开始 

157
00:05:27,916 --> 00:05:29,436
捕捉 App 的

158
00:05:29,436 --> 00:05:31,586
音频视频和麦克风内容

159
00:05:31,586 --> 00:05:33,886
为这个 App 专门

160
00:05:33,886 --> 00:05:35,106
创建并管理

161
00:05:35,106 --> 00:05:35,656
一个电影文件

162
00:05:37,436 --> 00:05:39,156
当你在屏幕录制单例 

163
00:05:39,156 --> 00:05:40,356
点击停止录制

164
00:05:40,766 --> 00:05:42,176
回放 Daemon 程序会和

165
00:05:42,176 --> 00:05:43,476
分享和预览扩展沟通

166
00:05:43,476 --> 00:05:45,776
并实例化

167
00:05:45,776 --> 00:05:47,126
RPPreviewViewController

168
00:05:47,976 --> 00:05:48,666
我们会将 

169
00:05:48,666 --> 00:05:50,296
RPPreviewViewController 

170
00:05:50,296 --> 00:05:51,626
传回给你的 App

171
00:05:51,626 --> 00:05:52,886
然后你才能展示给你的用户

172
00:05:53,326 --> 00:05:55,706
让他们查看 编辑

173
00:05:55,776 --> 00:05:57,116
保存和分享

174
00:05:57,116 --> 00:05:58,236
他们刚刚在你的 App 里

175
00:05:58,236 --> 00:05:58,806
录制的样本

176
00:06:01,616 --> 00:06:02,716
使用新的 App 内屏幕捕捉功能 

177
00:06:02,716 --> 00:06:04,186
当你在录制时

178
00:06:04,186 --> 00:06:06,036
首先会调入

179
00:06:06,036 --> 00:06:07,266
RPScreenRecorder 

180
00:06:07,266 --> 00:06:08,536
打开屏幕录制单例

181
00:06:09,276 --> 00:06:11,036
然后

182
00:06:11,036 --> 00:06:12,236
在屏幕录制单例

183
00:06:12,236 --> 00:06:13,746
点击开始捕捉

184
00:06:13,746 --> 00:06:15,186
这时回放 Daemon 程序会

185
00:06:15,186 --> 00:06:16,706
开始捕捉 App 的

186
00:06:16,706 --> 00:06:19,096
音频视频和麦克风

187
00:06:19,096 --> 00:06:19,526
内容

188
00:06:20,076 --> 00:06:22,136
替代了原来专门

189
00:06:22,136 --> 00:06:23,716
给你的 App 所创建和管理的

190
00:06:23,716 --> 00:06:25,866
一个电影文件

191
00:06:25,866 --> 00:06:27,366
ReplayKit 现在会把这些

192
00:06:27,366 --> 00:06:28,896
音视频样本 直接发回给

193
00:06:28,896 --> 00:06:29,736
RPScreenRecorder

194
00:06:30,346 --> 00:06:33,826
这时会调入一个捕捉处理器 Block

195
00:06:33,826 --> 00:06:35,406
我们会把音频和视频文件

196
00:06:35,406 --> 00:06:37,116
直接发送给

197
00:06:37,116 --> 00:06:38,446
你的 App 进程

198
00:06:39,706 --> 00:06:41,926
App 可以直接通过 ReplayKit

199
00:06:41,926 --> 00:06:44,786
访问自己的

200
00:06:44,936 --> 00:06:46,556
音频视频和

201
00:06:46,556 --> 00:06:47,256
麦克风样本

202
00:06:49,376 --> 00:06:51,366
直接从 ReplayKit 

203
00:06:51,366 --> 00:06:52,936
访问 App 的

204
00:06:52,936 --> 00:06:54,346
音视频文件

205
00:06:54,346 --> 00:06:55,456
可以让你

206
00:06:55,456 --> 00:06:58,096
更灵活也更好地掌控

207
00:06:58,096 --> 00:07:00,126
用户创建的

208
00:06:58,096 --> 00:07:00,126
用户创建的

209
00:07:00,126 --> 00:07:00,546
内容

210
00:07:01,806 --> 00:07:03,636
和录制一样

211
00:07:03,636 --> 00:07:05,216
App 内屏幕捕捉

212
00:07:05,576 --> 00:07:08,226
可以以较小的性能损耗

213
00:07:08,226 --> 00:07:10,166
和电量损耗

214
00:07:10,166 --> 00:07:11,206
捕捉到高清的音视频

215
00:07:12,296 --> 00:07:14,186
再重申一次 

216
00:07:14,186 --> 00:07:16,166
我们很重视隐私 

217
00:07:16,166 --> 00:07:17,386
所以 App 内屏幕捕捉

218
00:07:17,386 --> 00:07:19,466
有隐私保护措施

219
00:07:19,466 --> 00:07:21,736
例如用户许可

220
00:07:21,736 --> 00:07:22,816
和样本专用的系统 UI

221
00:07:24,656 --> 00:07:26,696
这个 API 很简单 

222
00:07:26,696 --> 00:07:27,096
也很小 

223
00:07:27,216 --> 00:07:28,316
那我们现在来  

224
00:07:28,316 --> 00:07:30,606
快速看一下

225
00:07:30,876 --> 00:07:32,766
StartCapture 有两个 Blocks 

226
00:07:32,766 --> 00:07:34,786
captureHandlerBlock

227
00:07:35,026 --> 00:07:36,476
和 completionHandlerBlock

228
00:07:37,866 --> 00:07:39,246
每次 ReplayKit 

229
00:07:39,246 --> 00:07:41,196
准备把样本送还给 App 时

230
00:07:41,196 --> 00:07:42,566
captureHandlerBlock 

231
00:07:42,566 --> 00:07:43,506
都会被调用

232
00:07:44,386 --> 00:07:45,236
我们为你提供

233
00:07:45,236 --> 00:07:46,926
一个 CMSampleBuffer 参考

234
00:07:46,926 --> 00:07:49,356
一个 RPSampleBufferType 

235
00:07:49,356 --> 00:07:49,596
和一个 NS Error

236
00:07:50,696 --> 00:07:52,166
当 startCapture 完成时 

237
00:07:52,166 --> 00:07:53,936
completionHandlerBlock 被调用

238
00:07:53,936 --> 00:07:55,846
并提供 

239
00:07:55,846 --> 00:07:57,306
NS Error 指示 

240
00:07:57,306 --> 00:07:58,496
startCapture 中

241
00:07:58,496 --> 00:08:00,046
是否出现错误

242
00:07:58,496 --> 00:08:00,046
是否出现错误

243
00:08:01,286 --> 00:08:02,886
stopCapture 也会调入

244
00:08:02,886 --> 00:08:04,076
一个 completionHandler

245
00:08:04,076 --> 00:08:05,616
会回传给你 NS Error

246
00:08:05,966 --> 00:08:07,696
为你指示 stopCapture 中 

247
00:08:07,696 --> 00:08:08,626
是否出现

248
00:08:08,626 --> 00:08:09,366
错误

249
00:08:10,566 --> 00:08:11,566
让我们来看一下

250
00:08:11,566 --> 00:08:12,446
实例中如何 

251
00:08:12,446 --> 00:08:12,976
操作

252
00:08:15,106 --> 00:08:16,476
在我们这个例子里 

253
00:08:16,476 --> 00:08:18,256
我要把

254
00:08:18,256 --> 00:08:19,656
ReplayKit 给我的样本

255
00:08:19,656 --> 00:08:21,576
用 AVAssetWriter 

256
00:08:21,576 --> 00:08:23,126
将一个简单的电影文件

257
00:08:23,276 --> 00:08:24,436
写到盘里

258
00:08:25,126 --> 00:08:27,026
有一个方法

259
00:08:27,026 --> 00:08:28,226
叫 didPressCaptureButton

260
00:08:28,736 --> 00:08:30,326
在里面

261
00:08:30,326 --> 00:08:31,656
只要把屏幕录制单例 

262
00:08:31,656 --> 00:08:33,265
从 RPScreenRecorder 拿来

263
00:08:33,956 --> 00:08:35,416
然后 调用 startCapture 

264
00:08:35,416 --> 00:08:37,265
给它提供

265
00:08:37,265 --> 00:08:38,746
captureHandlerBlock

266
00:08:38,746 --> 00:08:39,726
和 completionHandlerBlock

267
00:08:40,616 --> 00:08:41,936
还记得么 我要用 AVAssetWriter 

268
00:08:41,936 --> 00:08:43,645
把我们拿到的样本

269
00:08:43,645 --> 00:08:44,866
写成电影文件

270
00:08:45,146 --> 00:08:46,406
所以知道如何

271
00:08:46,406 --> 00:08:47,716
处理这些样本

272
00:08:47,716 --> 00:08:48,356
是很重要的

273
00:08:49,006 --> 00:08:50,896
让我们再来看一下

274
00:08:50,976 --> 00:08:51,736
captureHandler

275
00:08:53,876 --> 00:08:56,206
每次 ReplayKit 准备给 App

276
00:08:56,206 --> 00:08:58,566
传回一个样本时

277
00:08:58,566 --> 00:09:00,036
captureHandler

278
00:08:58,566 --> 00:09:00,036
captureHandler

279
00:09:00,036 --> 00:09:00,966
都会被调用

280
00:09:01,616 --> 00:09:02,346
我们会为你提供

281
00:09:02,346 --> 00:09:04,246
CMSampleBuffer 参考 

282
00:09:04,246 --> 00:09:06,526
RPSampleBufferType 

283
00:09:06,566 --> 00:09:06,836
和 NS Error

284
00:09:08,046 --> 00:09:09,376
因为我要把这些样本

285
00:09:09,376 --> 00:09:10,766
用 AVAssetWriter 写成 

286
00:09:10,766 --> 00:09:12,786
简单的电影文件

287
00:09:12,786 --> 00:09:13,926
知道我从 ReplayKit

288
00:09:13,996 --> 00:09:15,456
得到的是哪种类型的样本

289
00:09:15,456 --> 00:09:16,136
是很重要的

290
00:09:16,936 --> 00:09:18,476
我们在

291
00:09:18,476 --> 00:09:20,996
RPSampleType 这有个开关 

292
00:09:20,996 --> 00:09:21,476
可以做到这点

293
00:09:22,866 --> 00:09:24,206
如果有个 sampleBufferType

294
00:09:24,206 --> 00:09:25,906
是视频

295
00:09:25,906 --> 00:09:27,356
只要把样本附加到

296
00:09:27,356 --> 00:09:28,466
AVAssetWriter 

297
00:09:28,466 --> 00:09:29,166
的视频输入

298
00:09:30,036 --> 00:09:31,396
如果有个 sampleBufferType

299
00:09:31,396 --> 00:09:32,956
是音频 只要把样本附加到

300
00:09:32,956 --> 00:09:35,266
AVAssetWriter 的

301
00:09:35,266 --> 00:09:35,976
音频输入

302
00:09:36,436 --> 00:09:38,136
最后 如果有个

303
00:09:38,136 --> 00:09:39,076
sampleBufferType

304
00:09:39,076 --> 00:09:40,576
是麦克风 只要把样本附加到

305
00:09:40,576 --> 00:09:42,096
AVAssetWriter 的 

306
00:09:42,446 --> 00:09:43,486
麦克风输入

307
00:09:44,276 --> 00:09:46,086
就像这样

308
00:09:46,086 --> 00:09:48,316
我可以处理

309
00:09:48,316 --> 00:09:49,926
要从 ReplayKit 拿到的 

310
00:09:50,136 --> 00:09:50,786
样本的所有类型

311
00:09:51,516 --> 00:09:52,906
我还要用 AVAssetWriter  

312
00:09:52,906 --> 00:09:54,496
把他们写成一个简单的

313
00:09:54,496 --> 00:09:55,276
电影文件到盘上

314
00:09:56,726 --> 00:09:57,826
让我们再来看一下 

315
00:09:57,826 --> 00:09:58,896
completionHandler

316
00:10:02,046 --> 00:10:03,466
像录制一样 

317
00:10:03,466 --> 00:10:05,026
我们希望用户知道

318
00:10:05,226 --> 00:10:06,676
捕捉进程

319
00:10:06,676 --> 00:10:08,076
已经开始 或者

320
00:10:08,076 --> 00:10:08,466
正在进行

321
00:10:08,826 --> 00:10:10,366
所以在 completionHandler 里

322
00:10:10,616 --> 00:10:11,956
我们调用 

323
00:10:11,956 --> 00:10:13,246
updateCaptureButton  

324
00:10:13,246 --> 00:10:14,286
带有我们从 completionHandler 中

325
00:10:14,496 --> 00:10:15,476
得到的 error 代码

326
00:10:15,926 --> 00:10:17,426
这样我就可以更新 UI  

327
00:10:17,426 --> 00:10:19,926
并且告诉我的用户

328
00:10:19,926 --> 00:10:21,176
捕捉进程开始了

329
00:10:21,826 --> 00:10:22,956
就这么简单

330
00:10:23,246 --> 00:10:24,166
这就是 要开始使用

331
00:10:24,166 --> 00:10:24,886
这个强大的新 API 时

332
00:10:24,886 --> 00:10:24,976
要做的所有事情

333
00:10:28,096 --> 00:10:29,816
我们花点时间

334
00:10:29,816 --> 00:10:31,386
重温一下 App 内屏幕捕捉

335
00:10:31,386 --> 00:10:32,616
如何工作

336
00:10:33,076 --> 00:10:35,126
我想提醒你

337
00:10:35,126 --> 00:10:37,406
你的 App 现在可以

338
00:10:37,406 --> 00:10:40,286
直接通过 ReplayKit 

339
00:10:40,346 --> 00:10:41,406
访问它自己的音频 视频

340
00:10:41,406 --> 00:10:41,976
和麦克风内容

341
00:10:45,046 --> 00:10:46,586
在我们的例子里

342
00:10:46,586 --> 00:10:48,156
我们用 AVAssetWriter 把这些样本

343
00:10:48,156 --> 00:10:50,256
做成简单的电影文件

344
00:10:50,256 --> 00:10:52,056
但其实你还可以做很多别的

345
00:10:52,756 --> 00:10:54,466
现在你的 App

346
00:10:54,466 --> 00:10:55,856
可以访问自己的音频

347
00:10:55,856 --> 00:10:58,726
和视频样本

348
00:10:58,726 --> 00:11:00,596
你可以在在这个 App 里

349
00:10:58,726 --> 00:11:00,596
你可以在在这个 App 里

350
00:11:00,596 --> 00:11:01,416
创建并管理视频

351
00:11:04,046 --> 00:11:05,656
你甚至可以创建一个

352
00:11:05,656 --> 00:11:07,096
个性化视频编辑器

353
00:11:07,096 --> 00:11:08,336
并把它和

354
00:11:08,336 --> 00:11:09,706
用户体验

355
00:11:09,706 --> 00:11:10,166
完美集合

356
00:11:12,056 --> 00:11:14,576
再次重申  ReplayKit 2 的目标

357
00:11:14,576 --> 00:11:16,126
是让 ReplayKit 适用所有的 App

358
00:11:16,126 --> 00:11:17,736
而不仅仅是游戏

359
00:11:19,026 --> 00:11:20,716
我这有同一个

360
00:11:20,716 --> 00:11:22,606
生产力 App

361
00:11:22,686 --> 00:11:23,976
在两个不同 iOS 设备上运行

362
00:11:24,546 --> 00:11:27,256
我现在可以访问

363
00:11:27,256 --> 00:11:29,186
App 的音频

364
00:11:29,186 --> 00:11:31,266
和视频样本

365
00:11:31,316 --> 00:11:33,176
像直播一样 我可以

366
00:11:33,176 --> 00:11:34,996
自己编码这些样本

367
00:11:34,996 --> 00:11:36,406
并发送给我自己的服务器

368
00:11:37,656 --> 00:11:39,556
我可以把 App 的

369
00:11:39,626 --> 00:11:41,366
屏幕捕捉

370
00:11:41,646 --> 00:11:43,436
分享给

371
00:11:43,436 --> 00:11:45,926
在其他设备上运行的

372
00:11:45,926 --> 00:11:46,486
App 的其他实例

373
00:11:47,766 --> 00:11:49,276
这在以前是不可能的

374
00:11:49,276 --> 00:11:50,936
但现在 有了 App 间屏幕捕捉

375
00:11:50,936 --> 00:11:51,806
就可以了

376
00:11:53,276 --> 00:11:54,406
这些只是

377
00:11:54,406 --> 00:11:55,826
用 App 间屏幕捕捉

378
00:11:55,826 --> 00:11:57,536
创建新用户体验的

379
00:11:57,536 --> 00:11:58,396
一些例子

380
00:11:58,626 --> 00:12:00,106
我们很希望看到

381
00:11:58,626 --> 00:12:00,106
我们很希望看到

382
00:12:00,106 --> 00:12:00,916
开发者们还有什么别的

383
00:12:00,916 --> 00:12:00,983
创新

384
00:12:05,046 --> 00:12:06,956
我们对 ReplayKit 2 的目标是 

385
00:12:06,956 --> 00:12:08,996
让 ReplayKit 适用于所有 App 

386
00:12:08,996 --> 00:12:10,656
而不仅仅是游戏

387
00:12:11,416 --> 00:12:13,616
因此 

388
00:12:13,616 --> 00:12:15,686
我想介绍一下

389
00:12:15,686 --> 00:12:16,756
iOS 屏幕录制和直播

390
00:12:17,836 --> 00:12:19,106
iOS 屏幕录制和直播

391
00:12:19,106 --> 00:12:21,266
是一个很棒的新的

392
00:12:21,266 --> 00:12:22,766
用户功能

393
00:12:22,766 --> 00:12:25,666
让用户可以录制和直播

394
00:12:25,666 --> 00:12:27,386
整个 iOS 屏幕体验

395
00:12:29,206 --> 00:12:30,206
让我们来看看

396
00:12:30,206 --> 00:12:31,036
如何使用

397
00:12:31,036 --> 00:12:31,396
这个新功能

398
00:12:33,456 --> 00:12:35,326
要使用 iOS 屏幕录制和直播

399
00:12:35,326 --> 00:12:36,596
首先要

400
00:12:36,596 --> 00:12:37,866
启用控制中心的

401
00:12:37,866 --> 00:12:39,446
屏幕录制按钮

402
00:12:40,426 --> 00:12:41,466
我们直接进入

403
00:12:41,466 --> 00:12:43,406
设置

404
00:12:43,406 --> 00:12:43,686
控制中心

405
00:12:44,446 --> 00:12:46,236
我们可以看到

406
00:12:46,236 --> 00:12:47,756
所有控制中心的

407
00:12:47,756 --> 00:12:48,326
支持按钮

408
00:12:49,136 --> 00:12:50,426
只需要添加

409
00:12:50,426 --> 00:12:52,566
屏幕录制按钮

410
00:12:52,566 --> 00:12:53,136
然后进入控制中心

411
00:12:54,196 --> 00:12:55,556
就这样

412
00:12:55,556 --> 00:12:57,156
你现在已经可以

413
00:12:57,156 --> 00:12:58,546
分享整个

414
00:12:58,546 --> 00:12:59,186
iOS 屏幕体验了

415
00:12:59,716 --> 00:13:00,856
[ 鼓掌 ] 谢谢 

416
00:12:59,716 --> 00:13:00,856
[ 鼓掌 ] 谢谢 

417
00:13:01,086 --> 00:13:05,016
要开始 iOS 屏幕录制 

418
00:13:05,016 --> 00:13:06,386
只需要点击

419
00:13:06,386 --> 00:13:07,486
屏幕录制按钮

420
00:13:08,876 --> 00:13:10,536
你现在就在录制

421
00:13:10,536 --> 00:13:12,406
整个 iOS 屏幕体验了

422
00:13:13,056 --> 00:13:14,746
这个状态栏 

423
00:13:14,746 --> 00:13:16,286
和屏幕录制按钮

424
00:13:16,286 --> 00:13:17,376
会通过显示录制指示器

425
00:13:17,376 --> 00:13:19,346
和当前录制的

426
00:13:19,346 --> 00:13:21,346
运行时间

427
00:13:21,346 --> 00:13:22,516
告诉你

428
00:13:22,516 --> 00:13:22,876
现在正在录制

429
00:13:24,196 --> 00:13:26,776
要停止录制

430
00:13:26,776 --> 00:13:28,016
你只需要再次点击

431
00:13:28,016 --> 00:13:28,356
屏幕录制按钮

432
00:13:29,826 --> 00:13:30,746
录制停止后

433
00:13:30,746 --> 00:13:32,356
会出现一个

434
00:13:32,466 --> 00:13:34,396
通知 告诉你

435
00:13:34,396 --> 00:13:36,026
刚才录制的内容

436
00:13:36,026 --> 00:13:37,756
被保存到

437
00:13:37,756 --> 00:13:38,906
相册里了

438
00:13:39,926 --> 00:13:41,756
点击这个横幅

439
00:13:41,756 --> 00:13:42,756
可以直接进入相册

440
00:13:42,756 --> 00:13:44,096
在那里你可以

441
00:13:44,096 --> 00:13:45,776
查看 编辑 或者分享

442
00:13:45,776 --> 00:13:46,846
刚刚录制的内容

443
00:13:48,996 --> 00:13:52,686
你还可以 3D Touch 

444
00:13:52,686 --> 00:13:53,776
屏幕录制按钮

445
00:13:53,886 --> 00:13:55,536
然后直接进入

446
00:13:55,536 --> 00:13:57,626
扩展视图

447
00:13:57,696 --> 00:13:58,996
可以设置麦克风

448
00:13:58,996 --> 00:14:01,036
开始录制

449
00:13:58,996 --> 00:14:01,036
开始录制

450
00:14:01,036 --> 00:14:04,026
或者停止录制

451
00:14:06,716 --> 00:14:08,316
假设

452
00:14:08,316 --> 00:14:09,416
我刚下载了一个

453
00:14:09,416 --> 00:14:10,856
直播 App

454
00:14:10,856 --> 00:14:12,016
支持 ReplayKit 直播 

455
00:14:13,056 --> 00:14:14,576
我想用这个

456
00:14:14,656 --> 00:14:16,916
直播 App

457
00:14:16,916 --> 00:14:18,976
分享我的完整 iOS 屏幕体验

458
00:14:19,756 --> 00:14:20,536
其实很简单 

459
00:14:20,536 --> 00:14:21,946
你只需要 

460
00:14:21,946 --> 00:14:24,216
3D Touch

461
00:14:24,216 --> 00:14:25,256
屏幕录制按钮 

462
00:14:26,126 --> 00:14:27,716
进入扩展视图

463
00:14:27,716 --> 00:14:29,846
所有在此设备上

464
00:14:29,846 --> 00:14:30,836
安装的

465
00:14:30,836 --> 00:14:32,456
支持 ReplayKit 直播

466
00:14:32,456 --> 00:14:33,976
的 App

467
00:14:33,976 --> 00:14:34,316
都会显示

468
00:14:35,256 --> 00:14:36,846
你只需要选择

469
00:14:36,846 --> 00:14:39,116
想要的服务

470
00:14:39,256 --> 00:14:40,316
然后点击开始直播

471
00:14:41,876 --> 00:14:43,596
你现在就在向

472
00:14:43,596 --> 00:14:46,536
全世界直播

473
00:14:46,536 --> 00:14:47,486
你的 iOS 屏幕体验

474
00:14:48,856 --> 00:14:50,956
和录制一样 

475
00:14:50,956 --> 00:14:52,076
屏幕录制按钮的

476
00:14:52,076 --> 00:14:53,996
状态栏

477
00:14:53,996 --> 00:14:55,376
会通过录制指示器

478
00:14:55,376 --> 00:14:57,116
被选中的直播服务  

479
00:14:57,116 --> 00:14:58,876
和目前直播的时间

480
00:14:58,876 --> 00:15:00,266
来显示

481
00:14:58,876 --> 00:15:00,266
来显示

482
00:15:00,266 --> 00:15:02,016
直播正在

483
00:15:02,016 --> 00:15:03,046
进行中

484
00:15:04,576 --> 00:15:05,966
要停止直播

485
00:15:06,016 --> 00:15:07,646
只需要点击停止直播

486
00:15:07,646 --> 00:15:07,926
按键

487
00:15:09,126 --> 00:15:12,296
现在 你可以录一个视频

488
00:15:12,296 --> 00:15:13,846
教你的祖父母 

489
00:15:13,846 --> 00:15:14,926
如何用 FaceTime

490
00:15:15,926 --> 00:15:17,636
你甚至可以制作一个视频

491
00:15:17,876 --> 00:15:19,086
教你的父母

492
00:15:19,086 --> 00:15:19,996
怎么发送邮件

493
00:15:20,746 --> 00:15:22,166
或者

494
00:15:22,166 --> 00:15:23,596
你可以录一个视频

495
00:15:23,596 --> 00:15:25,986
教你的孩子们怎么在 iTunes 里 

496
00:15:25,986 --> 00:15:28,216
找到他们喜欢的节目和电影

497
00:15:28,986 --> 00:15:30,926
分享你完整的

498
00:15:30,926 --> 00:15:32,626
iOS 屏幕体验

499
00:15:32,626 --> 00:15:33,226
就是这么容易

500
00:15:33,776 --> 00:15:35,856
iOS 屏幕录制和直播

501
00:15:35,856 --> 00:15:37,696
用使用 ReplayKit  

502
00:15:37,696 --> 00:15:39,766
的 App  

503
00:15:39,766 --> 00:15:40,656
创建新的

504
00:15:40,656 --> 00:15:41,136
用户体验

505
00:15:41,536 --> 00:15:42,866
让我们来看看

506
00:15:42,866 --> 00:15:46,886
一些很棒的实践

507
00:15:46,886 --> 00:15:47,826
当使用 ReplayKit 时  

508
00:15:47,826 --> 00:15:49,276
iOS 屏幕录制和直播

509
00:15:49,276 --> 00:15:50,056
有优先权

510
00:15:50,316 --> 00:15:51,806
如果你的 App

511
00:15:51,886 --> 00:15:53,136
正在使用 ReplayKit

512
00:15:53,136 --> 00:15:55,266
录制或者直播

513
00:15:55,266 --> 00:15:56,816
这时用户启动

514
00:15:56,816 --> 00:15:58,776
iOS 屏幕录制和直播

515
00:15:58,776 --> 00:16:00,956
RPScreenRecorderDelegate 

516
00:15:58,776 --> 00:16:00,956
RPScreenRecorderDelegate 

517
00:16:00,956 --> 00:16:02,816
会通知你的 App

518
00:16:02,816 --> 00:16:03,546
进程被

519
00:16:03,546 --> 00:16:04,106
打断了

520
00:16:05,136 --> 00:16:07,786
在这种情况下

521
00:16:07,786 --> 00:16:09,646
录制会被废弃

522
00:16:09,646 --> 00:16:11,546
你需要更新 UI 

523
00:16:11,546 --> 00:16:12,326
并通知用户

524
00:16:12,796 --> 00:16:15,016
iOS 屏幕录制和直播

525
00:16:15,016 --> 00:16:17,096
是个很好的功能

526
00:16:17,506 --> 00:16:19,876
我们希望用户和

527
00:16:19,876 --> 00:16:21,496
开发者可以用它创造

528
00:16:21,496 --> 00:16:23,336
更多新的 iOS 内容

529
00:16:23,836 --> 00:16:25,956
为了更好地帮助你们

530
00:16:25,956 --> 00:16:27,626
Alexander Subbotin

531
00:16:27,626 --> 00:16:29,026
会上台来

532
00:16:29,026 --> 00:16:30,476
和你们讲讲

533
00:16:30,476 --> 00:16:31,896
如何用 ReplayKit 直播

534
00:16:33,516 --> 00:16:35,636
[ 鼓掌 ]

535
00:16:36,136 --> 00:16:36,716
&gt;&gt; 谢谢 Johnny

536
00:16:38,006 --> 00:16:38,496
早上好

537
00:16:39,196 --> 00:16:40,696
我叫 Alexander Subbotin

538
00:16:40,916 --> 00:16:43,536
很高兴能在这里

539
00:16:43,746 --> 00:16:45,126
和你们分享

540
00:16:45,126 --> 00:16:46,886
我们直播 API 的 

541
00:16:46,886 --> 00:16:46,976
更多细节

542
00:16:49,856 --> 00:16:52,526
ReplayKit 让 App 

543
00:16:52,806 --> 00:16:54,556
可以直接从

544
00:16:54,556 --> 00:16:55,886
你的 iOS 和 tvOS 设备

545
00:16:55,956 --> 00:16:58,686
把内容流式传输到

546
00:16:59,776 --> 00:17:00,516
第三方直播服务

547
00:16:59,776 --> 00:17:00,516
第三方直播服务

548
00:17:00,516 --> 00:17:01,926
在 iOS 你可以用 

549
00:17:01,926 --> 00:17:03,746
麦克风和相机

550
00:17:03,746 --> 00:17:05,246
添加声音和视频评论 

551
00:17:06,026 --> 00:17:07,286
所有的内容都

552
00:17:07,326 --> 00:17:08,866
很安全

553
00:17:08,866 --> 00:17:11,016
并且无法从你使用的

554
00:17:11,016 --> 00:17:11,915
直播服务访问

555
00:17:15,276 --> 00:17:17,326
这是一个直播如何工作的

556
00:17:17,425 --> 00:17:19,226
高层图

557
00:17:20,386 --> 00:17:22,086
左边 

558
00:17:22,086 --> 00:17:24,566
一个玩家想

559
00:17:24,566 --> 00:17:27,386
把他的游戏 Tower Dash 

560
00:17:27,386 --> 00:17:29,296
在叫 Mobcrush 的直播服务中

561
00:17:29,436 --> 00:17:30,046
直播

562
00:17:31,876 --> 00:17:33,746
Tower Dash 与

563
00:17:33,746 --> 00:17:35,486
ReplayKit API 沟通 

564
00:17:35,486 --> 00:17:36,146
开启直播

565
00:17:37,416 --> 00:17:40,026
一旦开启  

566
00:17:40,026 --> 00:17:41,716
ReplayKit 会呈现一些 UI

567
00:17:41,716 --> 00:17:43,086
让用户可以 ping 命令

568
00:17:43,086 --> 00:17:43,586
直播服务

569
00:17:44,006 --> 00:17:45,836
在这里就是

570
00:17:45,976 --> 00:17:46,556
Mobcrush 

571
00:17:48,216 --> 00:17:49,696
直播开始了

572
00:17:49,696 --> 00:17:52,046
直播进行时 

573
00:17:52,396 --> 00:17:55,256
ReplayKit 会把 

574
00:17:55,256 --> 00:17:57,566
音频和视频样本

575
00:17:57,566 --> 00:17:59,366
提供给 Mobcrush App 扩展

576
00:17:59,366 --> 00:18:02,016
它可以直接对接

577
00:17:59,366 --> 00:18:02,016
它可以直接对接

578
00:18:02,016 --> 00:18:03,616
直播服务和

579
00:18:03,616 --> 00:18:05,346
在网上看直播的

580
00:18:05,346 --> 00:18:07,066
全世界的观众

581
00:18:10,176 --> 00:18:12,296
这就是一个如何实现直播

582
00:18:12,296 --> 00:18:13,376
的图例

583
00:18:13,636 --> 00:18:16,046
我想把它

584
00:18:16,046 --> 00:18:17,986
分成几个部分

585
00:18:17,986 --> 00:18:20,666
来给你们讲解

586
00:18:21,336 --> 00:18:23,396
因为如果你是客户端 App 开发员

587
00:18:23,396 --> 00:18:25,306
或者是游戏开发员

588
00:18:26,246 --> 00:18:29,236
你只需要

589
00:18:29,236 --> 00:18:30,656
提供一些 ViewController

590
00:18:30,656 --> 00:18:33,646
开启直播

591
00:18:33,646 --> 00:18:35,066
和几个其他简单的步骤

592
00:18:38,196 --> 00:18:39,786
但是我知道 

593
00:18:39,786 --> 00:18:42,136
这个屋子里的有些人是

594
00:18:42,136 --> 00:18:43,006
直播服务开发员

595
00:18:43,216 --> 00:18:45,216
所以我会

596
00:18:45,216 --> 00:18:47,716
讲解整个步骤

597
00:18:47,716 --> 00:18:49,356
告诉你如何

598
00:18:49,356 --> 00:18:50,636
实现这些扩展

599
00:18:53,276 --> 00:18:54,656
首先从客户端开始

600
00:18:54,656 --> 00:18:56,566
客户端 App

601
00:18:56,566 --> 00:18:58,186
都要做什么

602
00:18:59,116 --> 00:19:01,606
我们有一个简单的 API

603
00:18:59,116 --> 00:19:01,606
我们有一个简单的 API

604
00:19:02,876 --> 00:19:04,856
包含在

605
00:19:04,856 --> 00:19:05,676
这三个类里

606
00:19:06,936 --> 00:19:07,406
包括

607
00:19:07,706 --> 00:19:09,396
BroadcastActivityViewController

608
00:19:10,216 --> 00:19:12,406
这个类是用来

609
00:19:12,406 --> 00:19:13,916
发起直播

610
00:19:13,916 --> 00:19:15,866
并显示这个 built UI 

611
00:19:15,866 --> 00:19:16,826
让你可以选择

612
00:19:16,826 --> 00:19:17,306
直播服务

613
00:19:18,616 --> 00:19:22,346
RPBroadcastController 

614
00:19:22,946 --> 00:19:24,956
让你可以在代码里管理直播

615
00:19:24,956 --> 00:19:26,956
你可以连接到 UI 

616
00:19:26,956 --> 00:19:29,206
使得用户可以

617
00:19:29,206 --> 00:19:30,916
开始 停止 暂停 或者恢复

618
00:19:30,916 --> 00:19:31,826
直播

619
00:19:32,286 --> 00:19:32,816
另外

620
00:19:32,816 --> 00:19:34,776
RPBroadcastControllerDelegate 

621
00:19:34,776 --> 00:19:37,216
是内部的

622
00:19:37,216 --> 00:19:38,326
是直播中不同事件的

623
00:19:38,326 --> 00:19:39,866
专用的部分

624
00:19:39,866 --> 00:19:41,306
直播有可能会停止

625
00:19:41,306 --> 00:19:43,236
可能发生错误

626
00:19:43,756 --> 00:19:46,566
或者直播扩展 

627
00:19:46,566 --> 00:19:47,996
要给客户端 App 提供

628
00:19:47,996 --> 00:19:49,626
一些信息

629
00:19:49,626 --> 00:19:51,106
这时 delegate 就会告诉 

630
00:19:51,106 --> 00:19:51,516
用户

631
00:19:53,476 --> 00:19:55,776
那么 这部分

632
00:19:56,046 --> 00:19:57,176
我就不多讲了

633
00:19:57,176 --> 00:19:59,606
因为去年

634
00:20:00,056 --> 00:20:02,046
在 ReplayKit 直播课程里

635
00:20:02,046 --> 00:20:03,636
我们深入地讲解了

636
00:20:03,636 --> 00:20:04,226
这个 API

637
00:20:04,846 --> 00:20:06,366
如果你还没有采用这个 API

638
00:20:06,366 --> 00:20:09,976
请到 App 里

639
00:20:09,976 --> 00:20:11,316
找到去年课程的链接

640
00:20:11,316 --> 00:20:13,486
那里可以了解更多

641
00:20:13,486 --> 00:20:15,106
关于这个开发者 API 的内容

642
00:20:19,776 --> 00:20:21,906
现在我们来说一说

643
00:20:21,906 --> 00:20:24,686
方程式中第二个部分 

644
00:20:24,806 --> 00:20:26,416
直播服务的

645
00:20:26,416 --> 00:20:26,946
开发者 

646
00:20:27,556 --> 00:20:28,686
如何集成你的服务

647
00:20:28,686 --> 00:20:31,626
使得你可以流式传输

648
00:20:31,626 --> 00:20:33,486
玩家 游戏

649
00:20:33,486 --> 00:20:35,616
和其他 App 创造的

650
00:20:35,616 --> 00:20:36,366
内容

651
00:20:41,496 --> 00:20:44,436
答案就是

652
00:20:44,436 --> 00:20:45,086
这三个扩展

653
00:20:46,936 --> 00:20:49,856
第一个是

654
00:20:49,856 --> 00:20:52,136
Broadcast Setup 扩展

655
00:20:52,136 --> 00:20:54,306
它会显示

656
00:20:54,306 --> 00:20:56,146
一些 UI 

657
00:20:56,146 --> 00:20:57,776
让用户输入

658
00:20:57,926 --> 00:20:59,656
信息

659
00:20:59,656 --> 00:21:02,026
你可能想让用户

660
00:20:59,656 --> 00:21:02,026
你可能想让用户

661
00:21:02,026 --> 00:21:05,076
给直播命名

662
00:21:05,076 --> 00:21:07,056
输入凭证

663
00:21:07,056 --> 00:21:08,716
或者其他一些细节

664
00:21:09,236 --> 00:21:12,676
第二个是

665
00:21:13,016 --> 00:21:14,566
Broadcast Upload 扩展

666
00:21:14,766 --> 00:21:16,926
这个扩展的功能是

667
00:21:16,926 --> 00:21:19,816
接收 ReplayKit 提供的

668
00:21:19,816 --> 00:21:21,856
媒体样本

669
00:21:21,856 --> 00:21:25,306
并编码

670
00:21:26,396 --> 00:21:27,836
创建一个视频流 

671
00:21:27,836 --> 00:21:30,526
并上载到线上服务

672
00:21:31,066 --> 00:21:33,746
每个扩展都是 

673
00:21:33,746 --> 00:21:36,526
和直播 App 同时

674
00:21:36,526 --> 00:21:37,996
安装在你的设备上的

675
00:21:37,996 --> 00:21:38,296
分别的二进制

676
00:21:38,666 --> 00:21:40,576
你可以安装到 Mobcrush

677
00:21:40,666 --> 00:21:42,546
你也可以把 Setup 扩展

678
00:21:42,546 --> 00:21:44,316
和 Upload 扩展

679
00:21:44,316 --> 00:21:44,926
安装在你的设备上

680
00:21:44,926 --> 00:21:48,136
每个扩展

681
00:21:48,136 --> 00:21:50,176
独立于 Mobcrush 

682
00:21:50,176 --> 00:21:51,476
运行自己的进程

683
00:21:51,476 --> 00:21:54,256
包含扩展和 Tower Dash 

684
00:21:54,256 --> 00:21:55,266
来发起直播

685
00:21:55,266 --> 00:21:56,206
一般来说有三个进程 

686
00:21:56,206 --> 00:21:58,166
Mobcrush 的包容 App  

687
00:21:58,166 --> 00:22:01,176
的进程

688
00:21:58,166 --> 00:22:01,176
的进程

689
00:22:01,176 --> 00:22:01,836
从未被启用

690
00:22:05,136 --> 00:22:06,316
为了帮助你开始

691
00:22:06,316 --> 00:22:07,656
开发新的直播扩展

692
00:22:07,656 --> 00:22:09,926
我们给这两种扩展都

693
00:22:09,926 --> 00:22:11,896
提供很简单的

694
00:22:11,896 --> 00:22:12,976
Xcode 模板

695
00:22:12,976 --> 00:22:16,376
只需要给 Xcode 工程  

696
00:22:16,376 --> 00:22:17,866
添加两个扩展

697
00:22:17,866 --> 00:22:18,546
就好了

698
00:22:19,116 --> 00:22:22,846
现在来讲讲

699
00:22:22,846 --> 00:22:24,446
具体如何编码

700
00:22:25,226 --> 00:22:26,426
从 Setup 扩展

701
00:22:26,426 --> 00:22:26,916
开始

702
00:22:29,646 --> 00:22:31,316
我刚才说过

703
00:22:31,316 --> 00:22:32,936
Setup 扩展的目的是

704
00:22:32,936 --> 00:22:35,516
显示 UI 

705
00:22:35,886 --> 00:22:36,716
让用户输入直播的名字

706
00:22:36,716 --> 00:22:37,316
或其他内容

707
00:22:38,286 --> 00:22:39,716
但是它还有另外一个

708
00:22:39,836 --> 00:22:40,806
重要的功能

709
00:22:43,106 --> 00:22:44,586
它可以获取

710
00:22:44,586 --> 00:22:45,986
客户 App 的一些重要信息

711
00:22:45,986 --> 00:22:47,866
比如 BundleID

712
00:22:47,866 --> 00:22:49,836
App 的名字

713
00:22:49,836 --> 00:22:50,686
和图标

714
00:22:51,896 --> 00:22:53,906
它可以上载这些信息

715
00:22:53,906 --> 00:22:55,166
到直播服务

716
00:22:55,166 --> 00:22:56,536
这样直播服务 

717
00:22:56,536 --> 00:22:58,166
就可以给观众

718
00:22:58,166 --> 00:23:00,976
创建一个体验

719
00:22:58,166 --> 00:23:00,976
创建一个体验

720
00:23:00,976 --> 00:23:02,496
当用户登上网站时

721
00:23:02,496 --> 00:23:04,336
他知道

722
00:23:04,336 --> 00:23:05,876
这是大家玩 Tower Dash 的地方

723
00:23:06,106 --> 00:23:07,336
有 Tower Dash 的图标

724
00:23:08,996 --> 00:23:12,436
尽管这个扩展

725
00:23:12,436 --> 00:23:14,026
可以从直播服务

726
00:23:14,026 --> 00:23:16,156
申请一个在网站上

727
00:23:16,156 --> 00:23:17,426
直播的 URL 

728
00:23:17,426 --> 00:23:20,056
并重新分享给 App

729
00:23:20,056 --> 00:23:22,716
这样玩家就可以

730
00:23:22,716 --> 00:23:24,186
发送给朋友

731
00:23:24,186 --> 00:23:25,726
并获得更多关注

732
00:23:30,196 --> 00:23:31,436
执行这个 UI 的

733
00:23:31,436 --> 00:23:33,176
ViewController

734
00:23:33,176 --> 00:23:34,636
用一个叫 extensionContext 的属性

735
00:23:34,636 --> 00:23:36,046
和 ReplayKit 沟通

736
00:23:36,046 --> 00:23:38,086
这个属性的类 

737
00:23:38,496 --> 00:23:39,446
是 NSExtensionContext

738
00:23:39,486 --> 00:23:42,126
的一个分类  

739
00:23:42,126 --> 00:23:43,686
还有两个由 ReplayKit

740
00:23:43,776 --> 00:23:44,906
添加的功能

741
00:23:45,326 --> 00:23:45,966
第一个是

742
00:23:45,966 --> 00:23:47,736
loadBroadcastingApplicationInfo

743
00:23:47,736 --> 00:23:48,646
第二个是

744
00:23:48,826 --> 00:23:50,236
completeRequest 带有

745
00:23:50,236 --> 00:23:52,436
broadcastURL 和 setupInfo

746
00:23:54,636 --> 00:23:57,066
第一个

747
00:23:57,066 --> 00:23:58,696
用来获取

748
00:23:58,696 --> 00:23:59,976
App 的名字和图标

749
00:23:59,976 --> 00:24:01,246
这有一个例子

750
00:23:59,976 --> 00:24:01,246
这有一个例子

751
00:24:01,246 --> 00:24:03,346
告诉你们如何做

752
00:24:03,346 --> 00:24:04,146
并把信息传递给

753
00:24:04,146 --> 00:24:05,076
直播进程

754
00:24:07,486 --> 00:24:10,666
直播服务

755
00:24:10,666 --> 00:24:13,556
得到这些信息时

756
00:24:13,826 --> 00:24:15,576
就可以识别直播进程

757
00:24:15,576 --> 00:24:17,566
创建通道

758
00:24:17,566 --> 00:24:20,046
创造像这样

759
00:24:20,046 --> 00:24:21,916
简单而直观的

760
00:24:22,136 --> 00:24:22,746
用户体验

761
00:24:23,156 --> 00:24:24,556
观众到 App 上

762
00:24:24,556 --> 00:24:26,886
可以看到 App 的

763
00:24:26,926 --> 00:24:27,846
图标和名字

764
00:24:32,436 --> 00:24:34,676
当你上载完这个图标

765
00:24:34,676 --> 00:24:36,866
并收集了所有

766
00:24:36,866 --> 00:24:37,896
开始直播

767
00:24:37,896 --> 00:24:40,206
所需信息之后

768
00:24:40,206 --> 00:24:41,876
就该调入第二个

769
00:24:41,876 --> 00:24:44,246
completeRequest 带有

770
00:24:44,246 --> 00:24:46,026
broadcastURL 和 setupInfo

771
00:24:47,136 --> 00:24:48,766
broadcastURL 

772
00:24:48,766 --> 00:24:49,806
对客户端 App 来说   

773
00:24:49,806 --> 00:24:51,306
可以作为

774
00:24:51,306 --> 00:24:54,276
broadcastController 的属性

775
00:24:54,476 --> 00:24:56,926
setupInfo 是你在扩展中

776
00:24:56,926 --> 00:24:58,586
创建的一个字典 

777
00:24:58,586 --> 00:25:00,146
当直播开始时

778
00:24:58,586 --> 00:25:00,146
当直播开始时

779
00:25:00,146 --> 00:25:01,836
所有从用户那

780
00:25:01,836 --> 00:25:03,386
收集到的信息

781
00:25:03,386 --> 00:25:04,746
都放进字典

782
00:25:04,746 --> 00:25:06,266
并传送至上载扩展

783
00:25:07,096 --> 00:25:08,786
你应该随时给

784
00:25:08,786 --> 00:25:10,096
用户提供

785
00:25:10,096 --> 00:25:11,456
停止直播的选项

786
00:25:11,456 --> 00:25:12,326
你只需要用以前的

787
00:25:12,326 --> 00:25:14,516
extensionContext 的

788
00:25:14,516 --> 00:25:16,066
cancelRequest 方法

789
00:25:17,926 --> 00:25:20,266
现在我们讲讲

790
00:25:20,266 --> 00:25:20,886
Upload 扩展

791
00:25:21,836 --> 00:25:24,666
我说过 它的功能是

792
00:25:25,046 --> 00:25:27,446
接收 ReplayKit 实时传送的

793
00:25:27,446 --> 00:25:29,346
媒体信息

794
00:25:30,686 --> 00:25:32,616
编码 创建一个视频流

795
00:25:32,616 --> 00:25:35,196
并上载到

796
00:25:35,196 --> 00:25:36,126
直播服务

797
00:25:39,736 --> 00:25:41,786
如果你用 Xcode 模板

798
00:25:41,786 --> 00:25:43,516
创新一个新的 Upload 扩展

799
00:25:43,516 --> 00:25:44,746
你会在你的 Xcode project 里

800
00:25:44,746 --> 00:25:46,196
发现一个这样的  

801
00:25:46,196 --> 00:25:47,986
sampleHandler 类

802
00:25:47,986 --> 00:25:49,996
它可以重写一些功能

803
00:25:49,996 --> 00:25:51,076
管理

804
00:25:51,076 --> 00:25:53,656
直播开始 停止

805
00:25:53,816 --> 00:25:54,846
暂停或者恢复

806
00:25:55,136 --> 00:25:57,016
还有一个功能叫

807
00:25:57,246 --> 00:25:59,706
processSampleBuffer

808
00:25:59,706 --> 00:26:01,026
要管理

809
00:25:59,706 --> 00:26:01,026
要管理

810
00:26:01,026 --> 00:26:03,276
引入的媒体样本

811
00:26:03,276 --> 00:26:04,146
就要重写它

812
00:26:04,766 --> 00:26:06,226
这就是最

813
00:26:06,226 --> 00:26:06,706
奇妙的地方

814
00:26:06,706 --> 00:26:08,126
你在这里编码

815
00:26:08,126 --> 00:26:08,856
和上载

816
00:26:11,556 --> 00:26:15,806
当直播开始时

817
00:26:15,956 --> 00:26:18,826
ReplayKit 通知扩展

818
00:26:18,826 --> 00:26:20,356
要向它提供

819
00:26:20,356 --> 00:26:23,936
媒体样本 

820
00:26:23,936 --> 00:26:25,516
ReplayKit 使用一个叫 

821
00:26:25,516 --> 00:26:27,706
broadcastStarted with setupInfo

822
00:26:28,406 --> 00:26:28,956
的功能来完成这个

823
00:26:29,026 --> 00:26:30,986
这有个例子告诉你

824
00:26:30,986 --> 00:26:33,146
你接收到一个 setupInfo

825
00:26:33,146 --> 00:26:35,266
作为功能的变元

826
00:26:35,266 --> 00:26:37,166
你可以从字典里

827
00:26:37,166 --> 00:26:38,876
提取直播的名字

828
00:26:38,876 --> 00:26:40,206
并传输到

829
00:26:40,206 --> 00:26:42,406
直播进程

830
00:26:42,406 --> 00:26:43,796
或者 万一直播从已经

831
00:26:43,796 --> 00:26:45,076
控制中心开始了

832
00:26:45,076 --> 00:26:46,566
你可以让直播进程

833
00:26:46,566 --> 00:26:46,936
知道这一点

834
00:26:47,086 --> 00:26:51,676
现在 我们来了解一下

835
00:26:51,946 --> 00:26:53,256
processSampleBuffer 功能

836
00:26:53,656 --> 00:26:55,546
ReplayKit 给扩展

837
00:26:55,546 --> 00:26:56,706
提供三种类型的

838
00:26:56,706 --> 00:26:57,256
媒体样本

839
00:26:59,456 --> 00:27:01,186
从屏幕捕捉的

840
00:26:59,456 --> 00:27:01,186
从屏幕捕捉的

841
00:27:01,186 --> 00:27:01,716
视频样本

842
00:27:02,226 --> 00:27:03,976
从 App 捕捉的音频样本

843
00:27:03,976 --> 00:27:05,426
这就是你的 App 刚刚

844
00:27:05,426 --> 00:27:07,216
直播的

845
00:27:07,216 --> 00:27:07,846
音频样本

846
00:27:07,846 --> 00:27:09,686
还有从麦克风捕捉的

847
00:27:09,686 --> 00:27:10,526
音频样本

848
00:27:10,526 --> 00:27:14,236
你可以使用任意一种技术

849
00:27:14,236 --> 00:27:16,066
来编码这个媒体

850
00:27:16,066 --> 00:27:17,976
但是为了更实用

851
00:27:17,976 --> 00:27:20,016
我们提供一个低级 API

852
00:27:20,016 --> 00:27:21,536
叫 VideoToolbox

853
00:27:21,536 --> 00:27:22,626
它是一个框架

854
00:27:22,626 --> 00:27:25,756
让硬件可以

855
00:27:25,756 --> 00:27:27,356
加速编码

856
00:27:27,356 --> 00:27:27,816
和解码

857
00:27:29,826 --> 00:27:32,196
所有的样本都去到

858
00:27:32,196 --> 00:27:33,826
Upload 扩展 

859
00:27:33,826 --> 00:27:35,646
被 processSampleBuffer 功能管理

860
00:27:39,076 --> 00:27:40,986
这个功能会编码

861
00:27:40,986 --> 00:27:42,296
并上载媒体样本

862
00:27:43,236 --> 00:27:44,566
在这个例子里

863
00:27:44,566 --> 00:27:45,586
我们要告诉你如何用

864
00:27:45,586 --> 00:27:48,166
VideoToolbox 来编码 

865
00:27:48,166 --> 00:27:48,616
视频样本

866
00:27:50,536 --> 00:27:51,776
在实际代码中

867
00:27:51,776 --> 00:27:53,676
你还需要执行回叫

868
00:27:53,676 --> 00:27:55,346
来接收编码数据

869
00:27:55,346 --> 00:27:56,286
等等

870
00:27:57,126 --> 00:27:58,506
但是在这 我想说一下

871
00:27:58,506 --> 00:28:00,596
VideoToolbox

872
00:27:58,506 --> 00:28:00,596
VideoToolbox

873
00:28:00,596 --> 00:28:02,286
因为它对你在 App 扩展中

874
00:28:02,286 --> 00:28:03,936
进行视频处理时

875
00:28:03,936 --> 00:28:05,146
非常重要

876
00:28:05,146 --> 00:28:07,136
因为 App 扩展

877
00:28:07,136 --> 00:28:09,306
跟编程 App 比 

878
00:28:09,306 --> 00:28:10,756
内存限制低很多

879
00:28:11,706 --> 00:28:13,086
能够有硬件

880
00:28:13,146 --> 00:28:15,326
快速视频编码

881
00:28:15,326 --> 00:28:17,526
对 ReplayKit 上载扩展

882
00:28:17,526 --> 00:28:19,186
非常重要

883
00:28:19,496 --> 00:28:21,136
今年 有一个好消息

884
00:28:21,136 --> 00:28:24,036
VideoToolbox 现在

885
00:28:24,036 --> 00:28:25,626
也可以在 tvOS 使用

886
00:28:25,786 --> 00:28:27,006
所以 你为两个平台

887
00:28:27,006 --> 00:28:28,776
都可以创建

888
00:28:28,776 --> 00:28:29,956
优化的高效的扩展

889
00:28:36,046 --> 00:28:37,076
这是一个关于

890
00:28:37,166 --> 00:28:39,756
直播如何运作的高层图

891
00:28:39,756 --> 00:28:41,296
谁执行哪个部分

892
00:28:43,576 --> 00:28:44,916
如果你是游戏开发员

893
00:28:44,916 --> 00:28:46,366
或者客户端 App 开发员

894
00:28:46,366 --> 00:28:48,036
你只需要考虑

895
00:28:48,036 --> 00:28:50,266
展示 ViewController

896
00:28:50,266 --> 00:28:52,546
开始或者停止

897
00:28:52,546 --> 00:28:56,686
直播

898
00:28:56,686 --> 00:28:59,116
你可以执行这个 API

899
00:28:59,116 --> 00:29:00,786
并等进程结束就好了

900
00:28:59,116 --> 00:29:00,786
并等进程结束就好了

901
00:29:01,996 --> 00:29:03,786
如果你是

902
00:29:03,786 --> 00:29:05,666
直播服务开发员

903
00:29:05,666 --> 00:29:07,036
你要做的更多一点

904
00:29:07,766 --> 00:29:10,566
你需要接收这些样本

905
00:29:10,566 --> 00:29:12,766
编码它们 并上载到

906
00:29:12,766 --> 00:29:13,746
直播服务

907
00:29:17,576 --> 00:29:19,916
结束这部分之前

908
00:29:19,916 --> 00:29:21,486
还有一点

909
00:29:21,486 --> 00:29:23,166
需要讲一讲

910
00:29:23,816 --> 00:29:25,496
到目前为止

911
00:29:25,496 --> 00:29:28,626
我们都假设所有的数据

912
00:29:28,626 --> 00:29:30,386
都从 App 流向

913
00:29:30,386 --> 00:29:32,236
线上服务 

914
00:29:32,636 --> 00:29:34,336
但是其实也有可能

915
00:29:34,336 --> 00:29:36,886
数据会从线上服务

916
00:29:36,886 --> 00:29:39,706
流回到

917
00:29:39,706 --> 00:29:40,546
App

918
00:29:40,636 --> 00:29:42,116
它可以是观众的反馈

919
00:29:42,116 --> 00:29:43,826
比如观众的评论

920
00:29:43,826 --> 00:29:45,716
或者点赞

921
00:29:45,716 --> 00:29:47,556
或者其他任何数据

922
00:29:49,776 --> 00:29:51,866
为此 我们提供一个 API

923
00:29:51,866 --> 00:29:53,776
帮助你从扩展中

924
00:29:53,776 --> 00:29:55,246
把这些信息

925
00:29:55,246 --> 00:29:55,976
传输到客户 App   

926
00:29:58,476 --> 00:30:01,366
你只需要把这些数据

927
00:29:58,476 --> 00:30:01,366
你只需要把这些数据

928
00:30:01,366 --> 00:30:02,926
放到字典里

929
00:30:02,926 --> 00:30:03,866
并从你的扩展中

930
00:30:04,656 --> 00:30:06,466
使用这个叫

931
00:30:06,466 --> 00:30:07,326
updateServiceInfo 的功能

932
00:30:07,326 --> 00:30:08,626
这个字典

933
00:30:08,626 --> 00:30:10,196
对 App 来说可以当作

934
00:30:10,196 --> 00:30:11,546
broadcastController 的

935
00:30:11,546 --> 00:30:12,146
一个属性

936
00:30:12,376 --> 00:30:13,596
这个属性的名字叫

937
00:30:13,796 --> 00:30:16,536
serviceInfo 

938
00:30:16,536 --> 00:30:19,136
而且是可以通过 KVO 观察的 

939
00:30:19,136 --> 00:30:21,276
所以你可以监控并适时的

940
00:30:21,276 --> 00:30:22,036
更新 UI  

941
00:30:23,346 --> 00:30:24,756
这就是关于直播 API 

942
00:30:25,166 --> 00:30:27,086
的全部 

943
00:30:27,086 --> 00:30:29,916
用这些信息

944
00:30:29,916 --> 00:30:32,536
你可以创建新的

945
00:30:32,536 --> 00:30:34,576
产品

946
00:30:34,576 --> 00:30:35,706
如果你从控制中心

947
00:30:35,706 --> 00:30:37,116
创建了直播

948
00:30:37,176 --> 00:30:38,686
你就可以创建第三方屏幕镜像

949
00:30:38,686 --> 00:30:41,796
视频分享

950
00:30:41,796 --> 00:30:43,156
或者在视频会议中

951
00:30:43,156 --> 00:30:43,756
分享屏幕

952
00:30:46,086 --> 00:30:47,766
谢谢 

953
00:30:47,766 --> 00:30:48,976
有请 Johnny 回到

954
00:30:48,976 --> 00:30:49,336
台上

955
00:30:50,516 --> 00:30:54,396
[ 鼓掌 ]

956
00:30:54,896 --> 00:30:55,996
&gt;&gt; 谢谢 Alexander

957
00:30:56,356 --> 00:30:58,656
就像 Alexander 说的

958
00:30:58,656 --> 00:31:00,626
现在的直播 App

959
00:30:58,656 --> 00:31:00,626
现在的直播 App

960
00:31:00,626 --> 00:31:02,606
你需要

961
00:31:02,606 --> 00:31:04,346
给用户提供一个

962
00:31:04,346 --> 00:31:05,586
RPBroadcastActivityViewController

963
00:31:05,586 --> 00:31:07,066
让他们选择

964
00:31:07,066 --> 00:31:08,526
一个公共服务

965
00:31:08,526 --> 00:31:09,986
来直播你的 App

966
00:31:10,916 --> 00:31:12,966
有的时候也许

967
00:31:12,966 --> 00:31:14,536
你不想把你的 App    

968
00:31:14,536 --> 00:31:15,486
直播到公共服务 

969
00:31:15,846 --> 00:31:17,856
有的时候 你希望

970
00:31:17,856 --> 00:31:19,506
你的 App 使用

971
00:31:19,506 --> 00:31:20,676
你的直播服务 

972
00:31:21,326 --> 00:31:23,016
用 ReplayKit 2

973
00:31:23,016 --> 00:31:24,386
和直播配对

974
00:31:24,386 --> 00:31:24,896
你可以做到

975
00:31:25,766 --> 00:31:27,806
直播配对让你可以

976
00:31:27,886 --> 00:31:29,526
完全在你的 App 里

977
00:31:29,526 --> 00:31:31,576
完美地集合

978
00:31:31,776 --> 00:31:32,706
你的整个

979
00:31:32,706 --> 00:31:33,266
流媒体解决方案

980
00:31:35,076 --> 00:31:36,586
我们这有 

981
00:31:36,586 --> 00:31:38,186
预算 App  

982
00:31:38,186 --> 00:31:39,466
和会议 App

983
00:31:39,466 --> 00:31:40,676
支持 ReplayKit 直播

984
00:31:40,676 --> 00:31:42,946
并执行了

985
00:31:42,946 --> 00:31:44,016
一个直播扩展

986
00:31:44,976 --> 00:31:46,996
我想要把预算 App  

987
00:31:46,996 --> 00:31:48,996
单独流式传输到

988
00:31:48,996 --> 00:31:50,096
会议 App 的

989
00:31:50,096 --> 00:31:51,126
直播扩展

990
00:31:51,726 --> 00:31:53,246
因此 我要开启

991
00:31:53,246 --> 00:31:54,796
直播配对 

992
00:31:55,646 --> 00:31:57,666
预算 App 要  

993
00:31:57,666 --> 00:31:59,126
在 RPActivityViewController 类

994
00:31:59,126 --> 00:32:00,526
加载

995
00:31:59,126 --> 00:32:00,526
加载

996
00:32:00,706 --> 00:32:02,526
优先的扩展

997
00:32:03,646 --> 00:32:05,076
我们会从

998
00:32:05,076 --> 00:32:06,316
RPBroadcastActivityViewController

999
00:32:06,316 --> 00:32:07,806
得到一个实例

1000
00:32:07,806 --> 00:32:09,016
和一般直播开启

1001
00:32:09,016 --> 00:32:11,626
差不多

1002
00:32:11,626 --> 00:32:13,156
但这是直播配对和

1003
00:32:13,156 --> 00:32:14,766
一般的直播开始

1004
00:32:14,766 --> 00:32:15,436
的主要区别

1005
00:32:15,916 --> 00:32:17,346
因为当你 

1006
00:32:17,386 --> 00:32:19,586
展示 ViewController 时

1007
00:32:19,586 --> 00:32:21,306
用户不再会

1008
00:32:21,406 --> 00:32:22,486
看到一个选项

1009
00:32:22,486 --> 00:32:24,796
让他们选择一个公共服务

1010
00:32:24,796 --> 00:32:26,726
而是会看到一个提示

1011
00:32:26,726 --> 00:32:28,156
告诉他们

1012
00:32:28,156 --> 00:32:30,066
你的 App 要用  

1013
00:32:30,116 --> 00:32:32,076
某个特定的直播服务

1014
00:32:32,566 --> 00:32:34,316
在这里 预算 App   

1015
00:32:34,316 --> 00:32:35,156
想要流式传输到 

1016
00:32:35,156 --> 00:32:36,276
会议 App 的

1017
00:32:36,276 --> 00:32:37,366
直播服务

1018
00:32:38,076 --> 00:32:39,596
当用户选择同意

1019
00:32:40,536 --> 00:32:41,966
ReplayKit 会立刻

1020
00:32:41,966 --> 00:32:43,216
开启配对直播扩展

1021
00:32:43,216 --> 00:32:45,046
让用户输入

1022
00:32:45,046 --> 00:32:47,166
任何对直播进程

1023
00:32:47,166 --> 00:32:48,446
很重要的

1024
00:32:48,446 --> 00:32:48,796
信息

1025
00:32:50,086 --> 00:32:51,196
当用户输入完

1026
00:32:51,196 --> 00:32:52,766
信息后

1027
00:32:54,076 --> 00:32:55,696
ReplayKit 会开始 

1028
00:32:55,906 --> 00:32:58,046
对配对直播扩展

1029
00:32:58,046 --> 00:32:59,016
进行直播

1030
00:32:59,446 --> 00:33:00,966
就这样 预算 App

1031
00:32:59,446 --> 00:33:00,966
就这样 预算 App

1032
00:33:00,966 --> 00:33:03,046
现在就在

1033
00:33:03,046 --> 00:33:04,886
单独流式传输到

1034
00:33:04,886 --> 00:33:05,836
它的配对直播扩展

1035
00:33:06,366 --> 00:33:08,916
让我们来看看 

1036
00:33:08,916 --> 00:33:10,196
直播配对 API

1037
00:33:10,936 --> 00:33:13,876
直播配对 API   

1038
00:33:13,876 --> 00:33:14,546
很简单 

1039
00:33:15,506 --> 00:33:16,936
它是

1040
00:33:16,986 --> 00:33:18,386
RPBroadcastActivityViewController

1041
00:33:18,386 --> 00:33:19,566
的一个新类方法 

1042
00:33:19,566 --> 00:33:21,046
叫 loadwithPreferredExtension

1043
00:33:21,896 --> 00:33:23,256
我们会给你提供一个

1044
00:33:23,256 --> 00:33:23,496
broadcastActivityViewController

1045
00:33:23,496 --> 00:33:25,046
的实例

1046
00:33:25,136 --> 00:33:26,346
用来展示给

1047
00:33:26,346 --> 00:33:26,926
你的用户

1048
00:33:28,026 --> 00:33:29,276
让我们直接来看一下

1049
00:33:29,276 --> 00:33:30,806
关于如何让预算 App 

1050
00:33:30,806 --> 00:33:32,066
仿效

1051
00:33:32,066 --> 00:33:34,066
直播配对

1052
00:33:34,736 --> 00:33:34,886
的更多细节   

1053
00:33:35,046 --> 00:33:36,366
这有个方法

1054
00:33:36,576 --> 00:33:38,266
叫 didPressBroadcastPairButton

1055
00:33:38,826 --> 00:33:40,536
在里面

1056
00:33:40,536 --> 00:33:40,816
我只需要

1057
00:33:40,816 --> 00:33:42,936
在 RPBroadcastActivity ViewController 类

1058
00:33:42,936 --> 00:33:44,756
调入 

1059
00:33:44,756 --> 00:33:45,316
LoadwithPreferredExtension

1060
00:33:45,976 --> 00:33:47,206
我们会得到一个

1061
00:33:47,206 --> 00:33:48,956
RPBroadcastActivityViewController

1062
00:33:48,956 --> 00:33:49,966
的实例

1063
00:33:50,316 --> 00:33:52,106
当我们

1064
00:33:52,106 --> 00:33:54,456
给用户显示一个提醒

1065
00:33:54,456 --> 00:33:55,746
告诉他们

1066
00:33:55,746 --> 00:33:57,086
我的 App 希望使用

1067
00:33:57,086 --> 00:33:58,936
某一个特定的直播服务时

1068
00:33:59,616 --> 00:34:01,286
一旦用户同意 

1069
00:33:59,616 --> 00:34:01,286
一旦用户同意 

1070
00:34:01,286 --> 00:34:02,386
ReplayKit 会处理剩下的事情

1071
00:34:02,536 --> 00:34:05,166
并开启配对的

1072
00:34:05,166 --> 00:34:05,836
直播扩展

1073
00:34:09,235 --> 00:34:10,636
直播配对

1074
00:34:10,636 --> 00:34:11,826
是为了让

1075
00:34:11,826 --> 00:34:13,356
直播 App 

1076
00:34:13,356 --> 00:34:15,136
和直播服务 

1077
00:34:15,136 --> 00:34:15,576
紧密配对 

1078
00:34:16,065 --> 00:34:18,576
所以开启一个

1079
00:34:18,576 --> 00:34:20,226
直播配对进程

1080
00:34:20,226 --> 00:34:22,106
开发者要提供

1081
00:34:22,106 --> 00:34:23,596
一个 bundleID 

1082
00:34:23,596 --> 00:34:24,056
给直播扩展 

1083
00:34:25,085 --> 00:34:26,926
用户也需要

1084
00:34:26,926 --> 00:34:28,746
通过提示同意直播配对

1085
00:34:28,746 --> 00:34:30,346
每次当你想开启

1086
00:34:30,416 --> 00:34:32,096
直播配对进程时

1087
00:34:32,096 --> 00:34:33,235
提示都会出现

1088
00:34:35,065 --> 00:34:37,036
直播配对让你可以

1089
00:34:37,036 --> 00:34:38,906
在你的 App 里

1090
00:34:38,906 --> 00:34:40,565
完美集合你的

1091
00:34:40,565 --> 00:34:41,386
整个流媒体解决方案

1092
00:34:43,896 --> 00:34:46,005
我们现在知道了 

1093
00:34:46,005 --> 00:34:47,726
以用户评论录制回放和直播

1094
00:34:47,726 --> 00:34:49,716
对于吸引新用户

1095
00:34:49,716 --> 00:34:51,746
到你的 App

1096
00:34:51,746 --> 00:34:53,656
和围绕 App 

1097
00:34:53,656 --> 00:34:55,036
创建一个社区

1098
00:34:55,036 --> 00:34:55,835
是非常有用的

1099
00:34:56,856 --> 00:34:57,996
这是为什么 去年我们

1100
00:34:57,996 --> 00:34:59,476
引入了 ReplayKit 

1101
00:34:59,476 --> 00:35:00,086
前置摄像头支持

1102
00:34:59,476 --> 00:35:00,086
前置摄像头支持

1103
00:35:00,466 --> 00:35:01,846
这也是为什么 今年

1104
00:35:01,846 --> 00:35:03,826
我们为 ReplayKit 2 引入了

1105
00:35:03,826 --> 00:35:07,246
快速摄像头转换 

1106
00:35:07,366 --> 00:35:09,256
这让你可以在 

1107
00:35:09,256 --> 00:35:11,586
RPScreenRecorder 的

1108
00:35:11,586 --> 00:35:13,196
cameraPreviewView 里

1109
00:35:13,196 --> 00:35:15,006
改变摄像头来源

1110
00:35:15,006 --> 00:35:16,606
选择前置摄像头或者

1111
00:35:16,606 --> 00:35:16,946
后置摄像头

1112
00:35:18,066 --> 00:35:19,606
RPScreenRecorder 里的

1113
00:35:19,606 --> 00:35:21,406
cameraPreviewView

1114
00:35:21,406 --> 00:35:23,356
是 UIView 的一个子类

1115
00:35:23,356 --> 00:35:24,656
所以可以添加到几乎任何 App

1116
00:35:25,936 --> 00:35:27,656
开发者要负责

1117
00:35:27,656 --> 00:35:29,846
让用户调出或者取消

1118
00:35:29,846 --> 00:35:31,476
cameraPreviewViewcamera 

1119
00:35:31,646 --> 00:35:33,126
的 UI 元素

1120
00:35:33,126 --> 00:35:35,566
以及让用户转换

1121
00:35:35,566 --> 00:35:36,806
cameraPreviewView 的UI元素

1122
00:35:37,836 --> 00:35:39,156
让我们看一看

1123
00:35:39,156 --> 00:35:40,546
快速摄像头转换

1124
00:35:40,546 --> 00:35:40,856
的 API

1125
00:35:42,376 --> 00:35:43,836
快速摄像头转换

1126
00:35:43,836 --> 00:35:45,236
的 API 很简单

1127
00:35:45,536 --> 00:35:47,266
它包含 RPScreenRecorder 里的 

1128
00:35:47,266 --> 00:35:48,756
一个新的属性

1129
00:35:48,756 --> 00:35:50,966
叫 cameraPosition

1130
00:35:50,966 --> 00:35:52,486
用来记录 sharedRecorder 单例

1131
00:35:52,536 --> 00:35:54,016
的目前摄像头位置

1132
00:35:54,956 --> 00:35:56,826
CameraPosition 是一个

1133
00:35:56,906 --> 00:35:58,886
列举 RPCameraPosition 

1134
00:35:59,076 --> 00:36:01,196
包含 RPCameraPosition front

1135
00:35:59,076 --> 00:36:01,196
包含 RPCameraPosition front

1136
00:36:01,346 --> 00:36:03,256
和 RPCameraPosition back

1137
00:36:03,256 --> 00:36:04,486
分别用于前置摄像头

1138
00:36:04,486 --> 00:36:05,556
和后置摄像头

1139
00:36:06,516 --> 00:36:07,536
现在我们直接通过

1140
00:36:07,536 --> 00:36:08,756
一个例子来看一下 如何开始

1141
00:36:08,756 --> 00:36:12,156
使用快速摄像头转换

1142
00:36:12,296 --> 00:36:13,936
看 照片在小屏幕上

1143
00:36:13,936 --> 00:36:15,806
看起来好多了

1144
00:36:16,426 --> 00:36:17,656
我们这有一个功能

1145
00:36:17,656 --> 00:36:18,456
叫 showPreviewView

1146
00:36:19,036 --> 00:36:20,356
在里面 我们只需要

1147
00:36:20,356 --> 00:36:21,546
在 RPScreenRecorder

1148
00:36:21,546 --> 00:36:23,256
抓取这个 sharedRecorder 单例

1149
00:36:23,756 --> 00:36:25,056
然后 我要从

1150
00:36:25,056 --> 00:36:26,826
sharedRecorder 单例

1151
00:36:26,826 --> 00:36:28,296
抓取 cameraPreviewView 

1152
00:36:28,696 --> 00:36:29,856
因为 sharedRecorder 单例

1153
00:36:29,856 --> 00:36:32,126
和它的 cameraView

1154
00:36:32,126 --> 00:36:33,856
是 UIView 的一个子类

1155
00:36:33,856 --> 00:36:35,396
我只要把把它作为 subview

1156
00:36:35,396 --> 00:36:36,676
添加到我 App 的 view 里

1157
00:36:37,476 --> 00:36:38,926
就这样 我们现在

1158
00:36:38,926 --> 00:36:40,786
在使用 cameraPreviewView 

1159
00:36:40,786 --> 00:36:42,646
和前摄像头

1160
00:36:42,646 --> 00:36:43,426
来录制视频评论

1161
00:36:44,366 --> 00:36:45,626
现在让我们看看

1162
00:36:45,626 --> 00:36:46,836
如何使用

1163
00:36:46,836 --> 00:36:47,406
快速摄像头转换

1164
00:36:49,156 --> 00:36:50,676
有一个方法

1165
00:36:50,676 --> 00:36:52,066
叫 didPressCameraSwitch

1166
00:36:52,326 --> 00:36:53,786
再一次 我要从

1167
00:36:53,786 --> 00:36:55,896
RPScreenRecorder 抓取

1168
00:36:55,896 --> 00:36:56,846
sharedRecorder 单例 

1169
00:36:57,526 --> 00:36:58,876
我很想知道

1170
00:36:58,876 --> 00:37:00,326
现在的 cameraPosition

1171
00:36:58,876 --> 00:37:00,326
现在的 cameraPosition

1172
00:37:00,326 --> 00:37:00,576
是什么

1173
00:37:00,736 --> 00:37:01,876
在我们的这个方法里 

1174
00:37:02,336 --> 00:37:03,356
我们要看一下

1175
00:37:03,356 --> 00:37:04,616
现在的 cameraPosition 是什么

1176
00:37:04,896 --> 00:37:06,096
无论是什么

1177
00:37:06,096 --> 00:37:07,236
我都要把它换成相反的

1178
00:37:07,486 --> 00:37:09,116
我们可以看到

1179
00:37:09,116 --> 00:37:10,196
sharedRecorder 的

1180
00:37:10,196 --> 00:37:11,456
cameraPosition 使用的是

1181
00:37:11,456 --> 00:37:12,996
RPCameraPosition.front

1182
00:37:13,456 --> 00:37:14,536
只需要把

1183
00:37:14,536 --> 00:37:16,336
shareRecorder 的 cameraPosition

1184
00:37:16,436 --> 00:37:18,086
设为 RPCameraPosition.back

1185
00:37:18,876 --> 00:37:20,516
这样 我们的 PreviewView

1186
00:37:20,516 --> 00:37:21,556
使用的就是

1187
00:37:21,556 --> 00:37:23,096
后摄像头了

1188
00:37:23,936 --> 00:37:26,506
就这么容易

1189
00:37:26,506 --> 00:37:28,306
这么快

1190
00:37:29,566 --> 00:37:31,756
快速摄像头转换

1191
00:37:31,756 --> 00:37:33,616
让你可以给用户提供

1192
00:37:33,616 --> 00:37:35,126
更多的工具

1193
00:37:35,126 --> 00:37:36,936
让他们可以用

1194
00:37:36,936 --> 00:37:37,966
在你的 App 里制作的内容

1195
00:37:37,966 --> 00:37:38,546
来创造更多的视频评论

1196
00:37:40,616 --> 00:37:42,956
我们今天讲了很多

1197
00:37:43,216 --> 00:37:44,336
所以让我们来

1198
00:37:44,336 --> 00:37:45,106
回顾一下

1199
00:37:45,656 --> 00:37:47,686
在 ReplayKit 2 里

1200
00:37:47,956 --> 00:37:49,676
我们介绍了 App 内视频捕捉 

1201
00:37:49,676 --> 00:37:51,556
是一个强大的新 API 

1202
00:37:51,556 --> 00:37:53,826
让你可以直接

1203
00:37:53,826 --> 00:37:55,776
从 ReplayKit 访问

1204
00:37:56,186 --> 00:37:58,066
你的 App 的音频 

1205
00:37:58,156 --> 00:37:59,236
视频和麦克风内容

1206
00:38:00,816 --> 00:38:02,506
用 iOS 屏幕录制和直播 

1207
00:38:02,506 --> 00:38:04,736
用户可以直接从

1208
00:38:04,956 --> 00:38:07,236
控制中心 

1209
00:38:07,236 --> 00:38:09,176
录制和直播他们的整个

1210
00:38:09,176 --> 00:38:09,746
iOS 屏幕体验 

1211
00:38:11,626 --> 00:38:13,046
我们介绍了直播配对

1212
00:38:13,256 --> 00:38:15,026
让你可以在自己的 App 里

1213
00:38:15,026 --> 00:38:16,566
集合整个 

1214
00:38:16,566 --> 00:38:17,976
流媒体解决方案

1215
00:38:19,766 --> 00:38:21,756
最后 用快速摄像头转换

1216
00:38:21,756 --> 00:38:23,166
你将有更多的工具

1217
00:38:23,166 --> 00:38:24,996
提供给你的用户

1218
00:38:25,126 --> 00:38:26,596
来创造更多吸引人的

1219
00:38:26,596 --> 00:38:27,106
视频评论

1220
00:38:28,856 --> 00:38:30,256
想了解更多关于今天课程的内容

1221
00:38:30,256 --> 00:38:31,546
请访问

1222
00:38:31,546 --> 00:38:33,036
developer.apple.com

1223
00:38:33,096 --> 00:38:34,856
我们是第 606 课程

1224
00:38:35,316 --> 00:38:36,286
希望你们享受

1225
00:38:36,356 --> 00:38:37,076
WWDC

1226
00:38:37,396 --> 00:38:37,716
谢谢
