1
00:00:07,516 --> 0:00:21,106
[ 音乐 ]

2
00:00:21,606 --> 0:00:22,216
&gt;&gt; 大家好

3
00:00:22,216 --> 0:00:23,846
早上好

4
00:00:24,516 --> 0:00:28,036
[ 掌声 ]

5
00:00:28,536 --> 0:00:30,136
感谢大家今天的到来

6
00:00:30,376 --> 0:00:31,516
我叫 Jesse Pease

7
00:00:31,516 --> 0:00:32,476
是一名来自

8
00:00:32,476 --> 0:00:33,666
Health Engineering 团队的工程师

9
00:00:34,036 --> 0:00:35,266
今天 我将向大家展示

10
00:00:35,266 --> 0:00:37,606
如何制作自己的第一个 App

11
00:00:38,516 --> 0:00:40,286
今天 我们将踏出

12
00:00:40,286 --> 0:00:41,256
自己的舒适圈

13
00:00:41,516 --> 0:00:42,736
我们将要去探索

14
00:00:43,006 --> 0:00:44,006
我们将要去开发

15
00:00:44,006 --> 0:00:44,866
一款你梦想中的 App

16
00:00:45,506 --> 0:00:47,316
还记得那个早上排队买咖啡时

17
00:00:47,316 --> 0:00:49,016
在你脑海深处迸发的灵感

18
00:00:49,566 --> 0:00:50,716
又或者是来参加 WWDC 的飞机上

19
00:00:50,716 --> 0:00:53,096
你在餐巾纸上描绘的草图

20
00:00:53,896 --> 0:00:54,746
还是那个

21
00:00:54,746 --> 0:00:55,676
你叫朋友们

22
00:00:55,676 --> 0:00:57,256
一定要保密的好点子

23
00:00:58,136 --> 0:00:59,446
就是它 这个想法

24
00:00:59,446 --> 0:01:03,286
就是我们今天要探讨的

25
00:00:59,446 --> 0:01:03,286
就是我们今天要探讨的

26
00:01:03,466 --> 0:01:05,016
Joseph Chilton Pearce 曾经说过

27
00:01:05,385 --> 0:01:07,106
“如果想要充满创意的生活

28
00:01:07,106 --> 0:01:08,346
就一定要摆脱对错误的恐惧”

29
00:01:09,166 --> 0:01:10,286
当我们尝试新想法时

30
00:01:10,286 --> 0:01:11,986
遇到阻碍

31
00:01:11,986 --> 0:01:12,836
是在所难免的

32
00:01:13,286 --> 0:01:14,836
但是我们今天的目的是向大家展示

33
00:01:14,836 --> 0:01:16,126
将梦想中的 App 化为现实

34
00:01:16,126 --> 0:01:18,286
所需要的基本要素

35
00:01:18,286 --> 0:01:21,386
首先我们要

36
00:01:21,386 --> 0:01:22,976
组织自己的想法

37
00:01:23,686 --> 0:01:24,696
其次我们要学会

38
00:01:24,696 --> 0:01:25,546
如何操作 Xcode

39
00:01:25,546 --> 0:01:27,776
然后使用 Swift

40
00:01:27,976 --> 0:01:28,526
制作一个简单的游戏

41
00:01:29,266 --> 0:01:30,546
如果你对一个编程语言很熟悉

42
00:01:30,546 --> 0:01:32,366
那将对你的帮助很大

43
00:01:32,986 --> 0:01:34,206
但是如果你是个 Swift 新手

44
00:01:34,206 --> 0:01:35,516
想要找一些学习资源

45
00:01:35,806 --> 0:01:37,296
我建议你

46
00:01:37,456 --> 0:01:39,146
从 Apple 书店下载一本

47
00:01:39,146 --> 0:01:40,036
“App Development with Swift”

48
00:01:40,456 --> 0:01:41,486
或者下载一个 iPad App

49
00:01:41,486 --> 0:01:44,506
“Swift Playgrounds”

50
00:01:44,716 --> 0:01:46,026
一会儿 [ 音质不清晰 ] 将会

51
00:01:46,026 --> 0:01:47,696
给大家展示

52
00:01:47,696 --> 0:01:49,286
如何在一个 App 里添加多个视图

53
00:01:49,286 --> 0:01:50,856
能够持续为用户

54
00:01:50,856 --> 0:01:52,496
展示数据

55
00:01:53,716 --> 0:01:55,046
我和 Tono [音译] 最近去了

56
00:01:55,046 --> 0:01:56,806
一个独角兽动物园

57
00:01:57,316 --> 0:01:58,806
没错 我们加州的确有这样的地方

58
00:01:58,806 --> 0:02:02,516
在经历了漫无止境的

59
00:01:58,806 --> 0:02:02,516
在经历了漫无止境的

60
00:02:02,516 --> 0:02:03,336
排队等待后

61
00:02:03,716 --> 0:02:04,956
我们觉得

62
00:02:04,956 --> 0:02:06,016
需要做出点东西

63
00:02:06,016 --> 0:02:07,116
来填补这些等待时光

64
00:02:07,706 --> 0:02:08,966
所以我们决定做一款游戏

65
00:02:09,446 --> 0:02:11,106
一款上手快 又有趣的游戏

66
00:02:11,106 --> 0:02:12,806
来填补我们的碎片时间

67
00:02:13,526 --> 0:02:14,726
我对他说 “如果我们要做一款游戏

68
00:02:14,726 --> 0:02:16,526
游戏里当然一定要有独角兽”

69
00:02:17,576 --> 0:02:18,566
但是我们也需要一些

70
00:02:18,566 --> 0:02:20,006
人们避之不及的元素

71
00:02:20,666 --> 0:02:21,726
比如说 大便

72
00:02:22,176 --> 0:02:25,296
所以我们就决定去做一款

73
00:02:25,296 --> 0:02:26,636
同时有独角兽和大便的

74
00:02:26,636 --> 0:02:27,836
“打地鼠” 类型的游戏

75
00:02:28,216 --> 0:02:29,966
游戏界面包含你的分数

76
00:02:29,966 --> 0:02:31,586
最后还会有排行榜

77
00:02:31,586 --> 0:02:32,896
玩家可以一直跟进自己的分数

78
00:02:33,146 --> 0:02:33,976
因为我们的本性里都是

79
00:02:33,976 --> 0:02:34,916
有点胜负欲的

80
00:02:34,916 --> 0:02:37,816
让我们来看看

81
00:02:37,816 --> 0:02:39,086
游戏的游玩界面吧

82
00:02:39,866 --> 0:02:42,006
点击开始游戏

83
00:02:42,006 --> 0:02:43,496
任意的 emoji 会随机地

84
00:02:43,696 --> 0:02:45,006
出现在屏幕的任意位置

85
00:02:45,506 --> 0:02:46,896
可能是独角兽 也可能是大便

86
00:02:46,896 --> 0:02:49,556
这时候 玩家有一秒钟的时间

87
00:02:49,556 --> 0:02:51,086
去点击它们

88
00:02:52,586 --> 0:02:54,286
如果玩家点到独角兽

89
00:02:54,656 --> 0:02:55,876
则得一分

90
00:02:56,276 --> 0:02:57,446
如果不小心点到了大便

91
00:02:57,486 --> 0:02:59,416
那么游戏就结束了

92
00:03:00,286 --> 0:03:01,686
除此之外

93
00:03:01,686 --> 0:03:03,076
如果玩家错过了独角兽

94
00:03:03,076 --> 0:03:05,276
错过了这个并不太孤独的独角兽

95
00:03:05,446 --> 0:03:06,856
那就自动输掉了游戏

96
00:03:07,366 --> 0:03:09,316
所以目标就是 要点到所有的独角兽

97
00:03:09,596 --> 0:03:11,116
不能点大便

98
00:03:11,636 --> 0:03:12,356
我们来看看吧

99
00:03:16,076 --> 0:03:17,356
点 不错

100
00:03:18,716 --> 0:03:19,516
点独角兽

101
00:03:20,086 --> 0:03:23,346
喔 又得了一分

102
00:03:23,446 --> 0:03:24,426
喔 糟糕

103
00:03:24,766 --> 0:03:25,686
移动得太快了

104
00:03:25,686 --> 0:03:27,736
不小心点到了大便

105
00:03:28,246 --> 0:03:29,276
让我们直入正题

106
00:03:29,866 --> 0:03:32,016
对新手们科普一下

107
00:03:32,016 --> 0:03:34,256
Xcode 是在 macOS 中

108
00:03:34,256 --> 0:03:35,916
帮助我们制作 iOS

109
00:03:36,376 --> 0:03:38,666
macOS watchOS 和 tvOS App 的工具

110
00:03:38,666 --> 0:03:41,276
如果你还没有这个软件

111
00:03:41,276 --> 0:03:42,576
你可以去 App Store 中下载

112
00:03:43,566 --> 0:03:45,206
当我们打开 Xcode

113
00:03:45,206 --> 0:03:46,736
首先要选择

114
00:03:46,736 --> 0:03:47,826
“create a new Xcode project”

115
00:03:49,046 --> 0:03:51,126
之后 我们可以看到

116
00:03:51,126 --> 0:03:52,556
所有我们可以创建的

117
00:03:52,556 --> 0:03:53,316
不同的 App 模版

118
00:03:54,146 --> 0:03:55,076
根据我们的需要

119
00:03:55,076 --> 0:03:56,126
我们选择 “single view app（单视图 App）”

120
00:03:56,716 --> 0:03:57,736
但是在这里你同样也可以选择

121
00:03:57,736 --> 0:03:59,706
“page based app（基于页面的 App）”

122
00:03:59,776 --> 0:04:01,196
“sticker pack app（表情包 App）”

123
00:03:59,776 --> 0:04:01,196
“sticker pack app（表情包 App）”

124
00:04:01,196 --> 0:04:01,656
甚至是 “game（游戏）”

125
00:04:02,066 --> 0:04:03,596
但是我们要做的游戏非常简单

126
00:04:03,596 --> 0:04:05,976
所以选择 “single view app” 就可以

127
00:04:05,976 --> 0:04:08,886
然后点击下一步

128
00:04:08,886 --> 0:04:10,146
在这里输入 App 的名字

129
00:04:10,316 --> 0:04:11,216
我们的名字是

130
00:04:11,216 --> 0:04:12,416
“消失的独角兽”

131
00:04:12,666 --> 0:04:14,066
我们的 “team” 名称是

132
00:04:14,066 --> 0:04:14,926
“示例团队”

133
00:04:15,456 --> 0:04:16,296
然后点击下一步

134
00:04:17,366 --> 0:04:18,875
在选择完储存位置后

135
00:04:18,875 --> 0:04:20,245
我们来到了

136
00:04:20,245 --> 0:04:21,255
“project settings（项目设置）”

137
00:04:21,625 --> 0:04:22,766
今天我们先不做任何修改

138
00:04:22,766 --> 0:04:24,376
我们直接去看在屏幕左手边的

139
00:04:24,376 --> 0:04:25,336
“Project Navigator（项目导航器）”

140
00:04:25,336 --> 0:04:26,736
查看一些我们项目中

141
00:04:26,736 --> 0:04:28,436
其他重要的文件

142
00:04:29,226 --> 0:04:30,896
第一个是 “AppDelegate（App 委托）”

143
00:04:31,506 --> 0:04:34,156
AppDelegate 是为每个 App 创造的

144
00:04:34,156 --> 0:04:35,856
它可以帮助我们管理

145
00:04:35,856 --> 0:04:37,416
每个 App 的生命周期

146
00:04:38,586 --> 0:04:39,626
当我们进入后台

147
00:04:39,626 --> 0:04:40,936
或是进入前端

148
00:04:40,936 --> 0:04:42,866
都可以调用特定的方法

149
00:04:43,346 --> 0:04:44,586
但是我们今天

150
00:04:44,586 --> 0:04:45,756
不用 AppDelegate

151
00:04:45,756 --> 0:04:46,416
对前端或者后端进行调整

152
00:04:46,926 --> 0:04:49,966
下一步我们来选择

153
00:04:49,966 --> 0:04:51,356
“Main.storyboard（主要界面描述板）”文件

154
00:04:52,106 --> 0:04:53,746
Storyboard 是我们

155
00:04:53,746 --> 0:04:55,336
为 App 打造 UI 

156
00:04:55,336 --> 0:04:56,116
也就是用户接口的地方

157
00:04:56,596 --> 0:04:58,006
在这里我们可以添加所有的 UI 元素

158
00:04:58,006 --> 0:04:59,806
例如 按钮

159
00:04:59,996 --> 0:05:01,336
标签和图片

160
00:04:59,996 --> 0:05:01,336
标签和图片

161
00:05:02,116 --> 0:05:03,056
但是在这里

162
00:05:03,056 --> 0:05:04,626
我们不止可以做出单视图

163
00:05:04,856 --> 0:05:06,306
这里也是我们布置一个 App

164
00:05:06,306 --> 0:05:09,416
所有逻辑流程的地方 也就是故事

165
00:05:09,886 --> 0:05:12,506
下一步我们选择 “View

166
00:05:12,506 --> 0:05:13,036
Controller（视图控制器）”

167
00:05:13,636 --> 0:05:16,536
View Controller 能帮助我们控制视图

168
00:05:16,536 --> 0:05:17,966
我们也要在这里

169
00:05:17,966 --> 0:05:22,126
写下 App 的所有逻辑代码

170
00:05:22,406 --> 0:05:23,436
我们来看看如何用

171
00:05:23,436 --> 0:05:25,866
storyboard 来创建视图

172
00:05:26,876 --> 0:05:28,536
我们再回到刚刚的

173
00:05:28,536 --> 0:05:29,846
Main.storyboard 文件

174
00:05:30,206 --> 0:05:32,006
在这里一定要注意

175
00:05:32,006 --> 0:05:32,656
不要选成 “Launch

176
00:05:32,656 --> 0:05:34,276
Screen.storyboard（启动画面描述版）”

177
00:05:34,876 --> 0:05:36,586
LaunchScreen.storyboard

178
00:05:36,586 --> 0:05:38,206
是我们用来制作

179
00:05:38,206 --> 0:05:39,296
App 启动或加载时

180
00:05:39,296 --> 0:05:42,646
首先出现在屏幕上的视图

181
00:05:43,166 --> 0:05:44,166
在 storyboard 的右上角

182
00:05:44,166 --> 0:05:47,646
你会注意到有一个

183
00:05:47,726 --> 0:05:48,976
对象库按钮

184
00:05:49,146 --> 0:05:50,476
这个按钮的图标是

185
00:05:50,476 --> 0:05:51,816
一个圆圈中间套了个小方块

186
00:05:52,336 --> 0:05:53,886
我们可以在这里

187
00:05:53,886 --> 0:05:56,326
制作按钮 标签和图像

188
00:05:56,576 --> 0:05:57,766
然后可以把它们拖到

189
00:05:57,766 --> 0:05:58,446
storyboard

190
00:05:58,876 --> 0:06:01,346
在左手边

191
00:05:58,876 --> 0:06:01,346
在左手边

192
00:06:01,416 --> 0:06:04,026
你可以看到我们 App 的概览

193
00:06:04,606 --> 0:06:05,916
点击这个小三角

194
00:06:05,916 --> 0:06:08,336
就可以将现在 storyboard 中

195
00:06:08,336 --> 0:06:09,836
所有的内容展开

196
00:06:09,836 --> 0:06:11,346
现在你会想

197
00:06:11,556 --> 0:06:12,896
“这个 storyboard 上什么都没有

198
00:06:12,986 --> 0:06:13,736
这能有什么用呢？”

199
00:06:14,266 --> 0:06:15,546
将来在你的 storyboard 上

200
00:06:15,546 --> 0:06:17,436
将会充斥着各种各样的元素

201
00:06:17,846 --> 0:06:19,106
到最后 你可能都很难找到想要的东西

202
00:06:19,106 --> 0:06:20,176
因为它很有可能

203
00:06:20,176 --> 0:06:21,466
藏在了某些文件下

204
00:06:21,576 --> 0:06:22,456
你也有可能会不小心

205
00:06:22,456 --> 0:06:23,356
创建了副本

206
00:06:23,566 --> 0:06:24,846
所以 如果想查看

207
00:06:24,846 --> 0:06:25,816
你添加到 storyboard 里的

208
00:06:25,816 --> 0:06:26,776
所有内容

209
00:06:26,776 --> 0:06:27,356
这里是最合适的地方

210
00:06:28,576 --> 0:06:30,306
好了 现在让我们直接

211
00:06:30,306 --> 0:06:31,756
进入到演示

212
00:06:31,756 --> 0:06:31,976
开始制作 App 吧

213
00:06:32,046 --> 0:06:35,796
现在我要来这边

214
00:06:35,796 --> 0:06:37,426
使用我的电脑

215
00:06:37,546 --> 0:06:39,136
它已经打开了 Xcode

216
00:06:39,896 --> 0:06:41,796
好的 现在我们已经有了

217
00:06:41,796 --> 0:06:43,896
“消失的独角兽” 文件

218
00:06:44,066 --> 0:06:45,496
现在我们来到了

219
00:06:45,496 --> 0:06:46,286
“Main.storyboard”

220
00:06:46,516 --> 0:06:47,746
在一开始

221
00:06:47,746 --> 0:06:48,946
让我们先加入

222
00:06:49,056 --> 0:06:50,376
制作游戏 App 所需的

223
00:06:50,376 --> 0:06:50,776
所有 UI 元素

224
00:06:51,396 --> 0:06:52,436
现在我要点击上方的

225
00:06:52,436 --> 0:06:53,506
对象库按钮

226
00:06:53,766 --> 0:06:55,276
我可以滚动查看

227
00:06:55,436 --> 0:06:56,486
各种各样我们可以

228
00:06:56,486 --> 0:06:57,636
使用的内容

229
00:06:58,436 --> 0:07:01,136
这里有标签 按钮 文本框

230
00:06:58,436 --> 0:07:01,136
这里有标签 按钮 文本框

231
00:07:01,246 --> 0:07:04,836
活动指示标甚至图像

232
00:07:05,736 --> 0:07:07,576
让我们首先来添加

233
00:07:07,576 --> 0:07:08,656
“开始游戏”按钮吧

234
00:07:08,796 --> 0:07:10,306
所以现在我要搜索“按钮”

235
00:07:11,136 --> 0:07:13,356
点击并拖拽这个按钮

236
00:07:13,356 --> 0:07:14,526
放到 storyboard 的正中心

237
00:07:15,386 --> 0:07:17,506
在这里双击修改文本

238
00:07:17,506 --> 0:07:19,106
改为 “开始游戏”

239
00:07:19,156 --> 0:07:20,346
感叹号

240
00:07:20,346 --> 0:07:22,886
但是这样有点小了

241
00:07:23,306 --> 0:07:24,816
所以 如果要把它变大

242
00:07:24,906 --> 0:07:26,306
我们可以去 Xcode 的右上角

243
00:07:26,306 --> 0:07:27,716
Xcode 的右上角

244
00:07:27,716 --> 0:07:28,586
打开检查窗格

245
00:07:28,586 --> 0:07:30,276
然后选择

246
00:07:30,356 --> 0:07:31,466
这个小的滑块按钮

247
00:07:31,466 --> 0:07:32,486
这就是属性检查器

248
00:07:32,916 --> 0:07:33,886
在这里 我们可以修改

249
00:07:33,886 --> 0:07:36,556
storyboard 上项目的属性

250
00:07:36,976 --> 0:07:38,326
现在 我要让

251
00:07:38,326 --> 0:07:39,286
我的字号变大

252
00:07:39,746 --> 0:07:42,856
从 15 号调整到 50 号

253
00:07:43,336 --> 0:07:45,056
点击“完成”

254
00:07:45,056 --> 0:07:46,726
如果想要快速复制

255
00:07:46,726 --> 0:07:48,716
storyboard 上的项目

256
00:07:48,936 --> 0:07:50,526
按住键盘上的 option 按钮

257
00:07:50,526 --> 0:07:52,526
在 storyboard 上点击并拖拽

258
00:07:52,526 --> 0:07:53,776
就能快速复制

259
00:07:53,776 --> 0:07:54,446
这个按钮了

260
00:07:55,406 --> 0:07:56,926
现在我将要

261
00:07:56,926 --> 0:07:59,656
把“开始游戏”改为

262
00:07:59,656 --> 0:08:01,026
一个独角兽 emoji

263
00:07:59,656 --> 0:08:01,026
一个独角兽 emoji

264
00:08:01,216 --> 0:08:02,206
如果要调出 emoji 键盘

265
00:08:02,206 --> 0:08:03,216
你可以同时按下

266
00:08:03,216 --> 0:08:06,886
control-command-空格

267
00:08:06,916 --> 0:08:07,816
然后选择独角兽

268
00:08:08,916 --> 0:08:11,576
很棒 现在让我们

269
00:08:11,576 --> 0:08:13,966
再做一次快速复制

270
00:08:13,966 --> 0:08:14,946
添加大便

271
00:08:16,016 --> 0:08:20,206
Control-command-空格 选大便

272
00:08:21,206 --> 0:08:22,986
棒极了 现在再给“排行榜”

273
00:08:22,986 --> 0:08:24,076
添加一个按钮

274
00:08:24,456 --> 0:08:26,596
点击 option 再拖拽

275
00:08:27,346 --> 0:08:29,676
双击 输入“排行榜”

276
00:08:29,826 --> 0:08:31,906
噢 不是大写喔

277
00:08:32,775 --> 0:08:34,676
然后修改字体大小

278
00:08:34,676 --> 0:08:37,096
把 50 号的字变小

279
00:08:37,155 --> 0:08:37,616
差不多 25 号 

280
00:08:37,706 --> 0:08:39,046
很好

281
00:08:39,676 --> 0:08:42,316
现在我们的 storyboard

282
00:08:42,316 --> 0:08:45,496
还需要一个元素

283
00:08:45,496 --> 0:08:46,106
那就是得分标签

284
00:08:47,016 --> 0:08:48,666
我们返回对象库

285
00:08:48,666 --> 0:08:49,846
搜索“标签”

286
00:08:49,846 --> 0:08:52,116
然后点击 并把它拖拽

287
00:08:52,276 --> 0:08:53,016
到屏幕上

288
00:08:53,946 --> 0:08:54,986
现在我们把文本

289
00:08:54,986 --> 0:08:56,696
改成零分

290
00:08:57,166 --> 0:08:58,246
然后把字

291
00:08:58,246 --> 0:09:00,836
调到很大很大 90 号

292
00:08:58,246 --> 0:09:00,836
调到很大很大 90 号

293
00:09:01,386 --> 0:09:04,036
非常好 做好了

294
00:09:04,376 --> 0:09:05,606
现在我们已经拥有了

295
00:09:05,666 --> 0:09:07,296
所有制作游戏需要的 UI 元素

296
00:09:08,426 --> 0:09:09,516
现在我们继续

297
00:09:09,546 --> 0:09:11,536
将 UI 和代码连接起来

298
00:09:12,386 --> 0:09:14,046
如果要把 storyboard 和 view controller

299
00:09:14,046 --> 0:09:15,376
同时用代码连接起来

300
00:09:15,376 --> 0:09:17,246
我们可以打开

301
00:09:17,276 --> 0:09:18,566
“Assistant Editor（辅助编辑器）”

302
00:09:18,836 --> 0:09:19,956
就是图标是两个圆圈套起来

303
00:09:19,956 --> 0:09:21,176
这个按钮

304
00:09:21,846 --> 0:09:25,576
很好 现在我们有了很多

305
00:09:25,626 --> 0:09:26,756
能将 storyboard 上的

306
00:09:26,756 --> 0:09:28,396
项目和代码

307
00:09:28,396 --> 0:09:30,146
连接起来的方法

308
00:09:30,646 --> 0:09:31,966
第一种叫做

309
00:09:31,966 --> 0:09:33,906
“outlet（插口）” outlet 可以在代码中

310
00:09:33,906 --> 0:09:35,516
使我们跳转到

311
00:09:35,706 --> 0:09:36,466
用户界面

312
00:09:37,016 --> 0:09:38,306
让我们先为

313
00:09:38,306 --> 0:09:39,516
“开始游戏”按钮

314
00:09:39,516 --> 0:09:40,036
设置一个 outlet

315
00:09:41,116 --> 0:09:42,866
要创建一个 outlet

316
00:09:42,866 --> 0:09:44,016
先选中 storyboard 上的“开始游戏”

317
00:09:44,016 --> 0:09:45,396
按住 control 键

318
00:09:45,396 --> 0:09:47,786
点击并拖动到

319
00:09:47,786 --> 0:09:49,146
storyboard 上

320
00:09:49,146 --> 0:09:50,136
抱歉 是拖动到

321
00:09:50,136 --> 0:09:52,686
控制者代码上 然后松开鼠标

322
00:09:53,096 --> 0:09:54,576
到这一步 

323
00:09:54,576 --> 0:09:56,626
要将连接形式修改为

324
00:09:56,846 --> 0:09:57,606
喔 已经是 outlet 了

325
00:09:57,656 --> 0:09:59,536
非常好 现在我要给

326
00:09:59,536 --> 0:10:02,596
“开始游戏”按钮命名 

327
00:09:59,536 --> 0:10:02,596
“开始游戏”按钮命名 

328
00:10:02,636 --> 0:10:02,896
点击“连接”

329
00:10:04,526 --> 0:10:05,776
非常好

330
00:10:05,776 --> 0:10:07,586
现在我们的代码和 storyboard

331
00:10:07,586 --> 0:10:08,356
已经连接起来了

332
00:10:08,656 --> 0:10:09,806
现在我们可以检查一遍

333
00:10:09,806 --> 0:10:10,696
连接是否正确

334
00:10:10,696 --> 0:10:13,226
我们看到

335
00:10:13,226 --> 0:10:14,976
“开始游戏”按钮

336
00:10:14,976 --> 0:10:15,836
左边的灰色小圆圈

337
00:10:16,176 --> 0:10:17,896
如果把鼠标停留在上方

338
00:10:17,896 --> 0:10:18,916
此代码连接的项目

339
00:10:18,916 --> 0:10:20,986
就会在 storyboard 上

340
00:10:20,986 --> 0:10:22,416
高亮显示

341
00:10:22,686 --> 0:10:25,036
因为时间的关系

342
00:10:25,036 --> 0:10:26,546
我已经将其他 outlet 的

343
00:10:26,676 --> 0:10:27,866
代码写好

344
00:10:28,346 --> 0:10:29,736
但是你会发现

345
00:10:29,736 --> 0:10:31,646
在他们左边的是空心圆圈

346
00:10:31,966 --> 0:10:33,126
这就表明这条代码还没有跟

347
00:10:33,126 --> 0:10:34,556
storyboard 上的项目连接起来

348
00:10:35,516 --> 0:10:37,116
要创建一个连接

349
00:10:37,116 --> 0:10:38,716
我们只需点击

350
00:10:38,716 --> 0:10:40,246
“good button（得分按钮）”

351
00:10:40,246 --> 0:10:40,626
左边的圆圈

352
00:10:40,856 --> 0:10:42,586
然后将它拖拽到

353
00:10:42,586 --> 0:10:43,796
独角兽按钮上

354
00:10:43,796 --> 0:10:45,776
也就是我们想让这条代码连接的按钮上

355
00:10:46,116 --> 0:10:46,626
然后松开鼠标

356
00:10:47,736 --> 0:10:49,276
我们可以对 “bad button（失分按钮）”

357
00:10:49,276 --> 0:10:53,836
排行榜按钮 和分数标签

358
00:10:53,836 --> 0:10:54,506
做同样的操作

359
00:10:55,776 --> 0:10:57,016
很好 所有的连接

360
00:10:57,016 --> 0:10:58,116
都已经完成了

361
00:10:59,086 --> 0:11:00,316
另一种我们可以创建的连接

362
00:10:59,086 --> 0:11:00,316
另一种我们可以创建的连接

363
00:11:00,316 --> 0:11:02,116
叫做 “action（动作）”

364
00:11:02,996 --> 0:11:04,596
action 是一句连接

365
00:11:04,596 --> 0:11:07,176
触发 App 内某一事件的代码

366
00:11:07,946 --> 0:11:09,706
在这里 我想为

367
00:11:09,846 --> 0:11:11,416
每一次点击“开始游戏”按钮

368
00:11:11,586 --> 0:11:12,856
添加一个 action

369
00:11:14,036 --> 0:11:15,766
要想创建这个连接

370
00:11:15,766 --> 0:11:17,046
我要再次选中“开始游戏”按钮

371
00:11:17,046 --> 0:11:18,786
按住 control 键

372
00:11:18,786 --> 0:11:21,346
再点击并拖拽它

373
00:11:21,346 --> 0:11:22,656
到 View Controller 的代码上

374
00:11:22,986 --> 0:11:24,886
然后松开鼠标

375
00:11:25,136 --> 0:11:26,386
这次我要将连接类型

376
00:11:26,386 --> 0:11:28,916
修改为 “action”

377
00:11:28,916 --> 0:11:31,306
然后命名为“点击开始”

378
00:11:31,546 --> 0:11:33,576
我想要这个事件变为

379
00:11:33,576 --> 0:11:35,836
“touchup inside” 点击连接

380
00:11:37,366 --> 0:11:38,836
非常好 你会发现

381
00:11:38,836 --> 0:11:41,106
这又出现了一个实心圆圈

382
00:11:41,156 --> 0:11:43,426
当我把鼠标放上去时

383
00:11:43,426 --> 0:11:44,726
“开始游戏”按钮会高亮显示

384
00:11:45,846 --> 0:11:47,186
我已经提前为另外两个动作

385
00:11:47,186 --> 0:11:49,096
“得分点击”

386
00:11:49,096 --> 0:11:50,456
和“失分点击”

387
00:11:50,546 --> 0:11:51,126
写好了两条代码

388
00:11:52,086 --> 0:11:53,286
但是这一次

389
00:11:53,286 --> 0:11:54,716
我想要做一个

390
00:11:54,716 --> 0:11:55,276
完全不同的连接

391
00:11:56,046 --> 0:11:58,986
我想创建一个事件 或是动作事件

392
00:11:58,986 --> 0:12:00,726
就是每次点击按钮

393
00:11:58,986 --> 0:12:00,726
就是每次点击按钮

394
00:12:00,726 --> 0:12:02,316
即可立即触发的事件

395
00:12:02,796 --> 0:12:04,116
因为我想让用户

396
00:12:04,116 --> 0:12:06,256
点击按钮即可立即得分

397
00:12:06,346 --> 0:12:08,446
而不是点击后 手指离开屏幕再得分

398
00:12:08,446 --> 0:12:10,706
现在我要选择

399
00:12:10,706 --> 0:12:12,776
跟这个动作关联的项目

400
00:12:12,776 --> 0:12:14,866
在这里 就是我们的“得分按钮”

401
00:12:14,866 --> 0:12:15,556
也就是独角兽

402
00:12:16,166 --> 0:12:17,466
然后我们来到检查窗格

403
00:12:17,466 --> 0:12:19,186
点击这个

404
00:12:19,186 --> 0:12:22,296
圆圈中套着小箭头的按钮

405
00:12:22,606 --> 0:12:24,536
它叫做 “Connections Inspector（连接检查器）”

406
00:12:24,806 --> 0:12:26,506
你可以在这里看到所有

407
00:12:26,506 --> 0:12:27,916
我可以为之创造连接的

408
00:12:28,056 --> 0:12:29,166
不同种类的

409
00:12:29,166 --> 0:12:29,416
已发送事件

410
00:12:29,696 --> 0:12:31,766
在这里 我们要为一个

411
00:12:31,766 --> 0:12:34,046
touch-down 事件创建连接

412
00:12:34,616 --> 0:12:36,236
我要点击一下这个空心圆圈

413
00:12:36,236 --> 0:12:38,836
让后将他拖到

414
00:12:38,956 --> 0:12:40,166
我想与这一事件连接

415
00:12:40,166 --> 0:12:41,796
的动作方法上

416
00:12:41,796 --> 0:12:43,566
然后松开鼠标

417
00:12:43,676 --> 0:12:45,996
同样的操作也适用于“减分按钮”

418
00:12:46,896 --> 0:12:49,656
Touch-down 点击 然后拖拽

419
00:12:49,656 --> 0:12:52,786
到“失分点击”松开鼠标 好了 很棒

420
00:12:53,216 --> 0:12:54,606
距离建成并运行

421
00:12:54,606 --> 0:12:55,996
我们的第一个 App

422
00:12:55,996 --> 0:12:57,836
只差两个步骤了

423
00:12:58,806 --> 0:13:00,146
下一步需要做的是

424
00:12:58,806 --> 0:13:00,146
下一步需要做的是

425
00:13:00,146 --> 0:13:01,376
为我们的 App

426
00:13:01,376 --> 0:13:02,316
添加一些设置

427
00:13:02,836 --> 0:13:04,076
我们可以用一种名为 viewDidLoad 

428
00:13:04,076 --> 0:13:04,966
的方法做到

429
00:13:05,636 --> 0:13:07,486
viewDidLoad 会在最开始

430
00:13:07,486 --> 0:13:09,126
为视图控制器

431
00:13:09,126 --> 0:13:10,206
自动生成

432
00:13:10,696 --> 0:13:12,496
在这里 我们需要

433
00:13:12,496 --> 0:13:13,316
做出一点设置

434
00:13:13,646 --> 0:13:16,496
根据我们的情况 我需要将一些东西藏起来

435
00:13:16,816 --> 0:13:18,116
第一个我想藏起来的项目

436
00:13:18,116 --> 0:13:19,166
就是分数标签

437
00:13:19,306 --> 0:13:21,006
我不想让它游戏的最开始

438
00:13:21,106 --> 0:13:22,386
出现在屏幕上

439
00:13:23,346 --> 0:13:25,766
所以我要输入

440
00:13:26,186 --> 0:13:27,716
“pointlabel.”

441
00:13:28,186 --> 0:13:29,086
“hide（隐藏）”

442
00:13:30,126 --> 0:13:32,086
看到了吗

443
00:13:32,086 --> 0:13:33,616
这里有一个属性叫 “isHidden”

444
00:13:33,936 --> 0:13:35,286
我点击回车

445
00:13:35,316 --> 0:13:37,106
就会自动为我变成 Xcode

446
00:13:37,866 --> 0:13:40,036
为了了解 “isHidden” 的作用

447
00:13:40,036 --> 0:13:41,376
你可以按住键盘上的 option 键

448
00:13:41,376 --> 0:13:43,736
将鼠标放在 “isHidden” 上

449
00:13:43,736 --> 0:13:45,226
然后点击

450
00:13:45,446 --> 0:13:46,916
这样操作 我可以对 “isHidden”

451
00:13:46,916 --> 0:13:48,746
和它的作用

452
00:13:48,746 --> 0:13:49,506
有更深入的了解

453
00:13:49,506 --> 0:13:51,576
在这里 我们可以看到

454
00:13:51,576 --> 0:13:52,886
它既是 getter 也是 setter

455
00:13:53,176 --> 0:13:54,116
也就是说我可以将

456
00:13:54,166 --> 0:13:56,596
给 isHidden 赋值为真

457
00:13:56,596 --> 0:13:57,976
这样在游戏一开始

458
00:13:57,976 --> 0:14:00,646
就能将标签隐藏了

459
00:13:57,976 --> 0:14:00,646
就能将标签隐藏了

460
00:14:00,846 --> 0:14:03,126
同时我们也需要一些变量

461
00:14:03,126 --> 0:14:05,046
来持续记录游戏过程

462
00:14:05,416 --> 0:14:06,626
我已经提前写好了代码

463
00:14:06,666 --> 0:14:08,606
所以我现在将它们快速添加进来

464
00:14:10,086 --> 0:14:12,466
他们其中之一需要 噢

465
00:14:12,826 --> 0:14:13,736
已经初始化了

466
00:14:13,736 --> 0:14:15,176
但是其实我还需要

467
00:14:15,176 --> 0:14:15,706
填充一些数据进去

468
00:14:15,706 --> 0:14:18,146
这里是游戏按钮列表

469
00:14:18,946 --> 0:14:19,926
现在你可能会想

470
00:14:20,356 --> 0:14:21,716
"Jessie 如果我们

471
00:14:21,716 --> 0:14:23,326
只有独角兽和一个大便

472
00:14:23,326 --> 0:14:25,546
那为什么要创建这么多的按钮呢

473
00:14:26,246 --> 0:14:27,826
那是因为 我们需要让我们的代码

474
00:14:27,826 --> 0:14:29,426
有更强的可扩充性

475
00:14:29,596 --> 0:14:30,956
也是为了后续的构建

476
00:14:30,956 --> 0:14:32,036
提供便利

477
00:14:32,366 --> 0:14:34,056
因为 在以后

478
00:14:34,056 --> 0:14:35,916
我们的游戏可能不会只有独角兽和大便

479
00:14:35,916 --> 0:14:37,266
我们有可能会添加大拇指 emoji

480
00:14:37,266 --> 0:14:39,306
可能会添加皱眉 emoji

481
00:14:39,806 --> 0:14:41,556
所以在这里 我们要输入

482
00:14:42,346 --> 0:14:47,436
“gamebuttons=

483
00:14:47,436 --> 0:14:50,256
[good button，bad button]”

484
00:14:51,596 --> 0:14:53,856
好的 我也提前

485
00:14:53,856 --> 0:14:55,476
写好了一些辅助方法

486
00:14:55,476 --> 0:14:56,316
来完善游戏可玩性

487
00:14:56,926 --> 0:14:58,266
我现在把它们加进来

488
00:14:59,316 --> 0:15:00,866
其中一个方法叫做

489
00:14:59,316 --> 0:15:00,866
其中一个方法叫做

490
00:15:00,866 --> 0:15:02,826
“setupFreshGameState”

491
00:15:03,476 --> 0:15:06,666
你可以看到 他们可以确保“开始游戏”

492
00:15:06,666 --> 0:15:08,556
和“排行榜”按钮是不被隐藏的

493
00:15:08,556 --> 0:15:09,346
它们都显示在屏幕上

494
00:15:10,006 --> 0:15:11,946
它将游戏按钮都隐藏了起来

495
00:15:12,306 --> 0:15:13,876
也为游戏得分

496
00:15:13,946 --> 0:15:15,666
设置了初始值

497
00:15:17,176 --> 0:15:19,036
所以在我的 viewDidLoad 中

498
00:15:19,036 --> 0:15:21,116
我同样也要调出

499
00:15:21,576 --> 0:15:23,196
“setupFreshGameState”

500
00:15:24,056 --> 0:15:25,126
大家可以看到

501
00:15:25,126 --> 0:15:27,756
随着我的输入 Xcode 可以自动填充

502
00:15:27,936 --> 0:15:29,016
所有我可能

503
00:15:29,016 --> 0:15:31,046
会输入的代码

504
00:15:31,046 --> 0:15:33,236
现在 如果我按下回车

505
00:15:33,356 --> 0:15:34,646
在 “setupFreshGameState”

506
00:15:34,916 --> 0:15:36,276
已经高亮的情况下

507
00:15:36,276 --> 0:15:39,543
系统会自动为我们将其填充完整

508
00:15:39,543 --> 0:15:41,606
好的 距离完成和运行 App

509
00:15:41,606 --> 0:15:43,066
我们还有最后一个步骤

510
00:15:44,156 --> 0:15:46,396
为了更明智一些 

511
00:15:46,396 --> 0:15:48,366
我要给“点击开始”方法“动作”方法

512
00:15:48,366 --> 0:15:49,376
添加一个

513
00:15:49,446 --> 0:15:50,356
打印语句 然后输入

514
00:15:51,176 --> 0:15:53,686
“Start game button was pressed”

515
00:15:54,356 --> 0:15:56,706
我希望每次点击

516
00:15:56,706 --> 0:15:58,096
“开始游戏” 按钮时

517
00:15:58,426 --> 0:15:59,746
这句代码都能记录到

518
00:15:59,746 --> 0:16:00,466
我的控制台中

519
00:15:59,746 --> 0:16:00,466
我的控制台中

520
00:16:00,956 --> 0:16:03,666
点开中间的这个

521
00:16:03,736 --> 0:16:05,466
图标是方块下有条横线的按钮

522
00:16:05,466 --> 0:16:07,586
就可以打开调试区域

523
00:16:08,616 --> 0:16:10,266
我把检查窗格关掉吧

524
00:16:10,266 --> 0:16:11,126
现在不需要它了

525
00:16:11,946 --> 0:16:13,816
好了 终于到了

526
00:16:13,816 --> 0:16:15,426
我们建成并可以运行 App 的时候了

527
00:16:15,956 --> 0:16:17,036
在左上角

528
00:16:17,036 --> 0:16:18,676
你可以看到 App 的名字

529
00:16:18,846 --> 0:16:20,206
“消失的独角兽”

530
00:16:20,206 --> 0:16:22,176
和一个箭头指着 iPhone X

531
00:16:22,756 --> 0:16:24,636
如果点击 iPhone X

532
00:16:24,636 --> 0:16:26,276
你可以看到所有可以

533
00:16:26,276 --> 0:16:27,456
运行我们 App 的模拟器

534
00:16:28,126 --> 0:16:30,046
模拟器就是让某一个设备

535
00:16:30,176 --> 0:16:31,526
在 Mac 上模拟运行

536
00:16:32,666 --> 0:16:34,676
在这里我们选择 iPhone X

537
00:16:35,236 --> 0:16:37,016
如果现在我将手机接入电脑

538
00:16:37,016 --> 0:16:39,036
我同样也可以

539
00:16:39,036 --> 0:16:40,646
在我自己的手机上运行这个 App

540
00:16:40,646 --> 0:16:42,236
非常酷

541
00:16:43,556 --> 0:16:45,396
选中 iPhone X 后

542
00:16:45,546 --> 0:16:47,456
我可以点击 “play” 按钮

543
00:16:47,456 --> 0:16:48,996
这样模拟器就会

544
00:16:49,256 --> 0:16:51,976
运行我的 App 出来了

545
00:16:57,266 --> 0:17:00,566
噢 很好 我们点击

546
00:16:57,266 --> 0:17:00,566
噢 很好 我们点击

547
00:17:00,566 --> 0:17:02,196
“开始游戏”按钮

548
00:17:02,196 --> 0:17:04,406
我们可以看到 点击按钮的动作

549
00:17:04,406 --> 0:17:05,566
已经被记录到了

550
00:17:05,566 --> 0:17:06,366
下面的控制台中

551
00:17:07,126 --> 0:17:09,036
非常好 我们刚刚创建了一个 UI

552
00:17:09,036 --> 0:17:10,476
我们也将它与代码

553
00:17:10,476 --> 0:17:10,925
连接了起来

554
00:17:11,856 --> 0:17:13,465
让我们回头再聊聊

555
00:17:13,465 --> 0:17:15,536
我们 App 的游戏逻辑

556
00:17:19,046 --> 0:17:20,336
好的 在游戏的最一开始

557
00:17:20,336 --> 0:17:21,506
我们知道

558
00:17:21,506 --> 0:17:23,316
我们的开始界面上

559
00:17:23,396 --> 0:17:24,695
有两个按钮

560
00:17:24,695 --> 0:17:25,986
“开始游戏”按钮

561
00:17:26,036 --> 0:17:27,215
和“排行榜”按钮

562
00:17:27,586 --> 0:17:28,756
但是我们现在要讲的是

563
00:17:28,756 --> 0:17:29,696
游戏的可玩性

564
00:17:30,016 --> 0:17:31,436
我们会等着

565
00:17:31,646 --> 0:17:34,236
玩家去按下“开始游戏”

566
00:17:34,236 --> 0:17:35,536
当这个按钮被按下时

567
00:17:35,806 --> 0:17:37,236
我们就进入了游玩模式

568
00:17:37,996 --> 0:17:39,266
在游玩模式的最初

569
00:17:39,266 --> 0:17:41,796
一个随机的 emoji 会随机地出现在

570
00:17:41,796 --> 0:17:43,386
屏幕的任何一个地方

571
00:17:43,666 --> 0:17:45,216
可能是独角兽 或是大便

572
00:17:46,066 --> 0:17:48,096
这时候 我们留出一秒钟

573
00:17:48,096 --> 0:17:50,396
让用户有时间

574
00:17:50,396 --> 0:17:52,746
与这个按钮进行互动

575
00:17:54,136 --> 0:17:55,476
在这一秒结束时

576
00:17:55,476 --> 0:17:57,376
如果用户没有点击按钮

577
00:17:57,626 --> 0:17:59,196
点击独角兽

578
00:17:59,196 --> 0:18:00,706
独角兽被冷落了

579
00:17:59,196 --> 0:18:00,706
独角兽被冷落了

580
00:18:00,706 --> 0:18:01,016
用户也输了游戏

581
00:18:02,566 --> 0:18:04,466
如果用户成功地避开了大便

582
00:18:04,466 --> 0:18:06,126
那么就可以继续进行

583
00:18:06,126 --> 0:18:07,966
另一轮游戏

584
00:18:08,456 --> 0:18:10,446
现在我们也想讨论

585
00:18:10,446 --> 0:18:11,886
如果用户点击了

586
00:18:11,886 --> 0:18:13,116
某一按钮

587
00:18:13,116 --> 0:18:13,496
会发生些什么

588
00:18:14,636 --> 0:18:16,066
如果用户点击了独角兽按钮

589
00:18:16,066 --> 0:18:18,206
我们就可以让他

590
00:18:18,206 --> 0:18:19,436
再进行一轮游戏

591
00:18:19,436 --> 0:18:19,876
并且得一分

592
00:18:20,486 --> 0:18:21,806
否则 如果用户不小心

593
00:18:21,806 --> 0:18:24,316
选择了大便 游戏则结束

594
00:18:25,366 --> 0:18:26,736
好的 我们来聊聊它的

595
00:18:26,736 --> 0:18:27,496
代码是什么样的

596
00:18:28,166 --> 0:18:29,786
我们从开始界面开始

597
00:18:29,786 --> 0:18:32,236
现在我们要把我们的代码

598
00:18:32,236 --> 0:18:33,656
分解成逻辑块

599
00:18:33,866 --> 0:18:34,786
在这里 我们要用

600
00:18:34,786 --> 0:18:36,056
多种方法做到这一点

601
00:18:36,056 --> 0:18:37,856
所以它不仅仅是一个

602
00:18:37,856 --> 0:18:39,376
充满代码的长文件

603
00:18:39,516 --> 0:18:41,096
关注一个特定的部分

604
00:18:41,096 --> 0:18:42,346
对我们来说更容易

605
00:18:43,396 --> 0:18:44,706
我们要写的第一个方法

606
00:18:44,706 --> 0:18:46,146
叫做 “Start New Game”

607
00:18:46,286 --> 0:18:48,006
我们要在这里调入

608
00:18:48,166 --> 0:18:48,676
“startPressed”

609
00:18:49,266 --> 0:18:52,846
这将为最一开始的游戏

610
00:18:53,666 --> 0:18:53,766
做出一些设置

611
00:18:55,656 --> 0:18:57,266
“StartNewGame” 下

612
00:18:57,266 --> 0:18:58,726
第一个要实现的功能是

613
00:18:58,726 --> 0:19:00,346
隐藏“开始游戏”按钮

614
00:18:58,726 --> 0:19:00,346
隐藏“开始游戏”按钮

615
00:19:00,346 --> 0:19:01,746
和隐藏“排行榜”按钮

616
00:19:02,656 --> 0:19:04,206
然后我们需要更新得分标签

617
00:19:04,206 --> 0:19:05,726
设置为零分

618
00:19:06,366 --> 0:19:07,706
我们甚至

619
00:19:07,706 --> 0:19:09,576
可以用代码

620
00:19:09,576 --> 0:19:11,666
做一些酷炫效果

621
00:19:11,666 --> 0:19:13,016
比如动态变化分数颜色

622
00:19:13,226 --> 0:19:14,576
我将要把

623
00:19:14,576 --> 0:19:15,996
游戏期间的文本颜色

624
00:19:16,046 --> 0:19:16,706
设置成洋红色

625
00:19:17,756 --> 0:19:21,486
在设置 “StartNewGame” 的最后

626
00:19:21,486 --> 0:19:23,196
我要调入我们游戏的第一轮

627
00:19:24,646 --> 0:19:27,326
好的 我们来看看

628
00:19:27,526 --> 0:19:29,196
在 “oneGameRound()” 中

629
00:19:29,196 --> 0:19:30,706
我们首先要更新得分标签

630
00:19:30,706 --> 0:19:31,626
保证分数是最新的

631
00:19:32,286 --> 0:19:34,116
然后我们要放置一个随机按钮

632
00:19:34,116 --> 0:19:35,586
使独角兽或是大便

633
00:19:35,646 --> 0:19:37,816
随机地出现在屏幕上

634
00:19:38,316 --> 0:19:39,716
我已经写好了这个辅助方法

635
00:19:39,716 --> 0:19:41,046
"displayRandomButton()"

636
00:19:41,046 --> 0:19:42,376
它会随机地选择 x y 坐标

637
00:19:42,376 --> 0:19:44,276
来放置我们的按钮

638
00:19:45,406 --> 0:19:47,156
然后我们设置

639
00:19:47,156 --> 0:19:47,606
一秒的定时

640
00:19:48,726 --> 0:19:51,026
现在 如果一秒之后

641
00:19:51,116 --> 0:19:53,216
计时结束

642
00:19:53,216 --> 0:19:54,596
那么方块中的代码

643
00:19:54,596 --> 0:19:55,306
则会被调用

644
00:19:55,796 --> 0:19:58,226
这种情况下 我们需要确认

645
00:19:58,226 --> 0:19:59,676
现在屏幕上的按钮

646
00:19:59,676 --> 0:20:01,486
是否是独角兽

647
00:19:59,676 --> 0:20:01,486
是否是独角兽

648
00:20:02,006 --> 0:20:03,216
游戏也就结束了

649
00:20:03,586 --> 0:20:05,326
因为用户没有

650
00:20:05,326 --> 0:20:07,716
点击独角兽

651
00:20:07,916 --> 0:20:09,806
否则 如果用户

652
00:20:09,806 --> 0:20:11,116
成功避开了大便

653
00:20:11,116 --> 0:20:12,796
大便还显示在屏幕上

654
00:20:12,796 --> 0:20:13,616
那么就能进入下一轮游戏

655
00:20:15,056 --> 0:20:15,826
现在让我们来看看

656
00:20:15,826 --> 0:20:17,346
如果用户点击了我们其中一个按钮之后

657
00:20:17,346 --> 0:20:18,026
会发生什么

658
00:20:18,626 --> 0:20:19,636
如果用户点击了“得分按钮”

659
00:20:19,636 --> 0:20:21,306
我们就会给他加一分

660
00:20:21,996 --> 0:20:25,176
我们要把定时取消

661
00:20:25,176 --> 0:20:27,716
要通过让这条代码失效的方法

662
00:20:27,716 --> 0:20:29,746
所以游戏还会继续

663
00:20:29,746 --> 0:20:32,936
我们会再调出新一轮游戏

664
00:20:33,056 --> 0:20:34,176
然而 如果用户点击了

665
00:20:34,376 --> 0:20:36,176
“失分按钮”

666
00:20:36,176 --> 0:20:37,376
我们就让这个按钮消失

667
00:20:37,376 --> 0:20:39,046
所以用户就不能再与之进行互动了

668
00:20:39,636 --> 0:20:41,176
我们要再使定时失效

669
00:20:41,526 --> 0:20:42,756
来取消定时

670
00:20:42,756 --> 0:20:45,736
然后再调用我提前写好的

671
00:20:45,736 --> 0:20:46,686
辅助方法 “game over()”

672
00:20:46,686 --> 0:20:49,946
还帮助我们终止游戏

673
00:20:50,446 --> 0:20:52,016
好的 让我们把这条游戏逻辑

674
00:20:52,016 --> 0:20:53,226
加入进来

675
00:20:54,516 --> 0:20:57,936
再回到我们的

676
00:20:58,036 --> 0:20:58,886
Xcode 项目

677
00:20:58,886 --> 0:21:01,896
现在 我已经不需要

678
00:20:58,886 --> 0:21:01,896
现在 我已经不需要

679
00:21:01,896 --> 0:21:03,306
storyboard 了

680
00:21:03,436 --> 0:21:04,586
我只需要

681
00:21:04,586 --> 0:21:05,816
在 View Controller 上做出改变

682
00:21:06,266 --> 0:21:07,676
所以现在我选择

683
00:21:07,676 --> 0:21:10,146
“standard editor（标准编辑器）” 

684
00:21:10,146 --> 0:21:11,156
然后再从 Project Navigator 中

685
00:21:11,156 --> 0:21:12,156
选择 View Controller

686
00:21:13,266 --> 0:21:15,046
我们已经提前在幻灯片里

687
00:21:15,126 --> 0:21:17,266
写好了代码

688
00:21:17,656 --> 0:21:19,086
所以我要

689
00:21:19,086 --> 0:21:21,206
将他们快速添加到

690
00:21:21,296 --> 0:21:22,216
View Controller 中

691
00:21:22,506 --> 0:21:24,856
现在我们有 “startNewGame()”

692
00:21:25,176 --> 0:21:26,716
“开始游戏”和“排行榜”按钮

693
00:21:26,716 --> 0:21:27,906
都藏在这里

694
00:21:28,176 --> 0:21:29,506
还有一些初始化设置

695
00:21:29,506 --> 0:21:31,546
得分设置

696
00:21:31,546 --> 0:21:32,546
和调用新一轮游戏

697
00:21:33,066 --> 0:21:35,906
然后添加 “oneGameRound()”

698
00:21:36,506 --> 0:21:39,386
再添加 “update our points label()”

699
00:21:39,386 --> 0:21:41,646
“display random button()”

700
00:21:41,646 --> 0:21:42,576
然后调出定时

701
00:21:43,706 --> 0:21:45,996
最后我们要为了我们的

702
00:21:45,996 --> 0:21:47,766
“开始游戏”按下

703
00:21:47,766 --> 0:21:50,766
和“得分按钮”按下

704
00:21:50,766 --> 0:21:52,196
填写代码

705
00:21:53,426 --> 0:21:57,886
最后是“失分按钮”

706
00:21:58,036 --> 0:22:00,256
好的 所有的代码都输好了

707
00:21:58,036 --> 0:22:00,256
好的 所有的代码都输好了

708
00:22:00,606 --> 0:22:03,156
让我们看看效果怎样

709
00:22:03,376 --> 0:22:05,936
我要点击 “Play” 按钮

710
00:22:05,936 --> 0:22:07,316
在模拟器上运行我们的 App

711
00:22:09,506 --> 0:22:10,816
好的 我好紧张

712
00:22:11,166 --> 0:22:14,496
开始吧 噢 得了一分

713
00:22:15,936 --> 0:22:17,436
下一个在哪 有好多大便啊

714
00:22:18,136 --> 0:22:20,086
很好

715
00:22:20,336 --> 0:22:21,566
好的 我可以就这样玩一整天

716
00:22:21,566 --> 0:22:23,096
但是我应该让

717
00:22:23,096 --> 0:22:24,086
[ 音质不清晰 ] 给大家展示

718
00:22:24,086 --> 0:22:25,416
如何迁入排行榜了

719
00:22:25,756 --> 0:22:27,976
所以我要故意输掉游戏了

720
00:22:29,226 --> 0:22:30,626
噢 游戏结束了

721
00:22:31,236 --> 0:22:33,886
好的 喔 非常好

722
00:22:34,516 --> 0:22:37,896
[ 掌声 ]

723
00:22:38,396 --> 0:22:39,426
太棒了

724
00:22:39,736 --> 0:22:41,596
我们刚刚在三十分钟内

725
00:22:41,596 --> 0:22:42,326
就制作了一款游戏

726
00:22:42,846 --> 0:22:44,106
设想一下 如果有更多的时间

727
00:22:44,106 --> 0:22:45,066
你能做到多少呢

728
00:22:46,266 --> 0:22:47,456
首先我们学习了

729
00:22:47,456 --> 0:22:48,986
如何操作 Xcode

730
00:22:49,526 --> 0:22:52,116
然后我们用 storyboard

731
00:22:52,266 --> 0:22:53,926
创建了一个简单的 UI

732
00:22:53,926 --> 0:22:56,156
把这个 UI 和代码连接了起来

733
00:22:56,476 --> 0:22:58,556
最后我们用 Swift

734
00:22:58,616 --> 0:22:59,236
加入了一些游戏逻辑

735
00:22:59,846 --> 0:23:01,106
所有的不到三十分钟就完成了

736
00:22:59,846 --> 0:23:01,106
所有的不到三十分钟就完成了

737
00:23:01,816 --> 0:23:03,676
如果我们有更充沛的时间

738
00:23:03,676 --> 0:23:04,636
试想一下

739
00:23:04,636 --> 0:23:05,836
我们还可以做出哪些优化

740
00:23:06,716 --> 0:23:08,016
我们刚刚使用了按钮 标签

741
00:23:08,096 --> 0:23:09,666
这样简单的 UI 元素

742
00:23:10,076 --> 0:23:11,246
但是你也可以使用

743
00:23:11,246 --> 0:23:13,796
SpriteKit 等框架

744
00:23:14,156 --> 0:23:15,826
来创建更多的

745
00:23:15,826 --> 0:23:18,036
有重力或物理感应功能的

746
00:23:18,036 --> 0:23:19,066
更有想象力的按钮

747
00:23:20,296 --> 0:23:21,476
我们同样也可以融合 MusicKit

748
00:23:21,476 --> 0:23:23,046
使用 Apple music 中的音乐

749
00:23:23,046 --> 0:23:24,306
在游戏进行时

750
00:23:24,306 --> 0:23:25,396
作为背景音乐

751
00:23:26,536 --> 0:23:28,166
我们也可以读取传感器数据

752
00:23:28,466 --> 0:23:29,736
可以基于用户的动作

753
00:23:29,736 --> 0:23:31,086
来调整游戏的速度

754
00:23:32,046 --> 0:23:33,176
这里是三个 WWDC 早先的演讲

755
00:23:33,176 --> 0:23:35,066
我强烈建议大家

756
00:23:35,066 --> 0:23:36,146
去看一看 2013 年的

757
00:23:36,796 --> 0:23:39,106
“Introduction to SpriteKit”  去年的

758
00:23:39,546 --> 0:23:41,446
“Introducing MusicKit（MusicKit 入门）”

759
00:23:41,596 --> 0:23:43,036
同样也是去年的 “Creating Immersive Apps

760
00:23:43,036 --> 0:23:44,236
with Core Motion

761
00:23:44,236 --> 0:23:44,476
（用核心动作创建沉浸式 App）”

762
00:23:45,436 --> 0:23:46,966
非常感谢 现在有请 [ 音质不清晰 ] 

763
00:23:47,006 --> 0:23:48,506
为大家讲解

764
00:23:48,506 --> 0:23:50,706
“如何为你的 App 创建更多的屏幕”

765
00:23:51,516 --> 0:23:57,500
[ 掌声 ]

766
00:24:06,086 --> 0:24:07,246
&gt;&gt; 大家早上好

767
00:24:08,106 --> 0:24:09,306
我希望刚刚大便和

768
00:24:09,306 --> 0:24:10,466
独角兽的游戏

769
00:24:10,466 --> 0:24:11,126
大家学得愉快

770
00:24:12,706 --> 0:24:13,886
我叫 [ 音质不清晰 ]

771
00:24:13,886 --> 0:24:16,856
今天我来帮助大家 给你们的 App

772
00:24:16,986 --> 0:24:18,786
增加一些更棒的元素

773
00:24:20,006 --> 0:24:22,156
我们将会学习

774
00:24:22,156 --> 0:24:24,816
在 iOS 系统中

775
00:24:24,816 --> 0:24:26,766
常用的 API 和框架

776
00:24:28,456 --> 0:24:30,536
首先让我们看看

777
00:24:30,536 --> 0:24:32,946
想要在游戏中添加些什么元素

778
00:24:34,256 --> 0:24:35,986
我们要引入一个“排行榜”

779
00:24:35,986 --> 0:24:38,306
我们可以在这里看到

780
00:24:38,306 --> 0:24:40,376
每个玩过游戏的用户

781
00:24:40,376 --> 0:24:42,206
的名字和分数

782
00:24:43,576 --> 0:24:46,206
当我们点击他的名字时

783
00:24:46,206 --> 0:24:48,236
我们想要看到关于这个人

784
00:24:48,236 --> 0:24:49,006
更多的信息

785
00:24:49,536 --> 0:24:53,646
今天我们开发的 App

786
00:24:53,716 --> 0:24:55,626
主要有三个侧重点

787
00:24:56,906 --> 0:24:58,416
第一个是数据

788
00:24:58,416 --> 0:25:00,416
我们要把用户的信息

789
00:24:58,416 --> 0:25:00,416
我们要把用户的信息

790
00:25:00,416 --> 0:25:02,126
储存在哪里

791
00:25:03,006 --> 0:25:04,466
我们如何检索这些数据

792
00:25:05,946 --> 0:25:08,006
第二点是用户界面

793
00:25:08,936 --> 0:25:10,626
“排行榜”要做成什么样子

794
00:25:11,166 --> 0:25:13,056
它要具备什么功能

795
00:25:13,666 --> 0:25:15,666
最后 我们要看看

796
00:25:15,666 --> 0:25:17,936
管理和储存数据

797
00:25:18,016 --> 0:25:19,786
和在 App 内

798
00:25:19,786 --> 0:25:22,756
完成其他任务的逻辑

799
00:25:23,826 --> 0:25:26,826
如果把我们的 App

800
00:25:26,826 --> 0:25:29,326
拆分成这三部分

801
00:25:29,326 --> 0:25:31,286
那么我们也在

802
00:25:31,636 --> 0:25:33,526
遵循一个非常流行的架构模式

803
00:25:33,526 --> 0:25:37,046
也就是 “model-view-controller

804
00:25:38,716 --> 0:25:40,596
（模型-视图-控制器）”

805
00:25:41,456 --> 0:25:43,976
模型-视图-控制器代表了

806
00:25:43,976 --> 0:25:44,696
模型中的数据

807
00:25:49,566 --> 0:25:52,286
控制器就是

808
00:25:52,646 --> 0:25:56,606
连接模型和视图的逻辑

809
00:25:57,146 --> 0:26:00,346
这个模型可以帮助我们

810
00:25:57,146 --> 0:26:00,346
这个模型可以帮助我们

811
00:26:00,346 --> 0:26:01,666
将类似的任务集合起来

812
00:26:02,786 --> 0:26:04,706
也可以帮助我们

813
00:26:04,706 --> 0:26:06,976
在不影响其他部分的情况下

814
00:26:06,976 --> 0:26:08,656
对 App 某一部分的修改

815
00:26:08,656 --> 0:26:14,286
更加容易在 iOS 中

816
00:26:14,286 --> 0:26:16,676
控制器可以被视为 “UIViewController

817
00:26:16,676 --> 0:26:18,086
（UI 视图控制器）” 类下的子类

818
00:26:19,816 --> 0:26:22,656
视图可以被视为

819
00:26:22,656 --> 0:26:23,766
UIView 的子类

820
00:26:25,076 --> 0:26:29,326
模型可以被视为

821
00:26:29,866 --> 0:26:30,936
NSObject 的子类

822
00:26:31,116 --> 0:26:33,026
在今天的 App 开发中

823
00:26:33,356 --> 0:26:35,236
我们将仔细研究一下

824
00:26:35,376 --> 0:26:36,786
“model-view-controller” 模型

825
00:26:36,786 --> 0:26:38,006
的不同部分

826
00:26:39,556 --> 0:26:41,196
现在我们来看一个演示

827
00:26:41,656 --> 0:26:43,876
来为储存数据创建一个模型

828
00:26:46,206 --> 0:26:48,206
这是刚刚 Jessie 创建的

829
00:26:48,276 --> 0:26:49,976
“消失的独角兽”项目

830
00:26:51,396 --> 0:26:52,906
我现在右键点击

831
00:26:52,906 --> 0:26:55,426
“消失的独角兽”文件夹

832
00:26:55,426 --> 0:26:56,376
点击 “new file（新文件）”

833
00:26:57,846 --> 0:26:59,186
选择 “Cocoa Touch Class”

834
00:27:00,066 --> 0:27:02,426
这是在 iOS 常见的类

835
00:27:03,486 --> 0:27:05,906
点击下一步

836
00:27:05,906 --> 0:27:07,646
在类中输入 [ 音质不清晰 ] Data

837
00:27:08,426 --> 0:27:11,966
这是 NSobject 的子类

838
00:27:11,966 --> 0:27:14,236
NSobject 是我数据的

839
00:27:14,236 --> 0:27:15,406
一个很好的父类

840
00:27:16,526 --> 0:27:19,086
点击下一步 创建

841
00:27:19,796 --> 0:27:23,636
在这个类中

842
00:27:23,636 --> 0:27:25,336
我们要储存玩家信息

843
00:27:26,156 --> 0:27:28,236
现在我要使用 shortcut

844
00:27:28,526 --> 0:27:29,926
添加一些我已经写好的代码

845
00:27:30,556 --> 0:27:33,916
我们有储存每个人

846
00:27:33,916 --> 0:27:38,006
姓名 得分 排名 和图片的变量

847
00:27:38,006 --> 0:27:41,596
除此之外 我还加入了

848
00:27:41,676 --> 0:27:43,906
一些初始化器来设置这些数据

849
00:27:44,716 --> 0:27:46,406
但是我们不用管那些

850
00:27:47,626 --> 0:27:49,496
让我们再去右键点击文件夹

851
00:27:49,496 --> 0:27:51,626
添加一个新类

852
00:27:51,626 --> 0:27:54,366
然后点击 “Add Files”

853
00:27:55,046 --> 0:27:58,216
这是一个我已经写好的

854
00:27:58,216 --> 0:27:59,366
游戏数据类

855
00:28:02,136 --> 0:28:04,306
让我们看一看

856
00:28:04,306 --> 0:28:06,246
在这一类中已经实施的方法

857
00:28:09,756 --> 0:28:13,056
首先 我们有 “savePoints

858
00:28:13,136 --> 0:28:14,156
(for name)” 方法

859
00:28:14,916 --> 0:28:17,876
这是用来储存任意玩家

860
00:28:17,876 --> 0:28:20,366
游戏总分数的

861
00:28:21,576 --> 0:28:23,926
接下来 我们有 “playerData(forRank)” 方法 

862
00:28:23,926 --> 0:28:26,406
它能给我们提供

863
00:28:26,436 --> 0:28:28,616
在特定排名下

864
00:28:28,616 --> 0:28:30,986
某玩家的所有信息

865
00:28:32,006 --> 0:28:34,406
最后 我们有一个属性

866
00:28:34,766 --> 0:28:36,536
能计算出

867
00:28:36,536 --> 0:28:38,396
玩过我们游戏的总人数

868
00:28:39,616 --> 0:28:40,996
今天 我们不去关注

869
00:28:40,996 --> 0:28:42,876
这些方法的

870
00:28:42,876 --> 0:28:43,786
实现细节

871
00:28:44,716 --> 0:28:45,996
重要的是 我们要知道

872
00:28:45,996 --> 0:28:48,316
我们创建了一组

873
00:28:48,316 --> 0:28:51,336
单独的文件来保存数据

874
00:28:52,106 --> 0:28:55,146
当你开发自己的 App 时

875
00:28:55,146 --> 0:28:56,616
我鼓励你

876
00:28:56,616 --> 0:28:59,226
将数据视为独立的实体

877
00:28:59,226 --> 0:29:01,706
并使其独立于

878
00:28:59,226 --> 0:29:01,706
并使其独立于

879
00:29:01,706 --> 0:29:03,126
用户界面

880
00:29:03,656 --> 0:29:05,776
就像我们现在做的一样

881
00:29:06,396 --> 0:29:08,816
当涉及到在后台保存

882
00:29:08,816 --> 0:29:10,306
和检索数据时

883
00:29:10,306 --> 0:29:13,266
我们有几个

884
00:29:13,266 --> 0:29:14,276
不同的选项

885
00:29:14,936 --> 0:29:18,146
其中一个是使用核心数据

886
00:29:18,146 --> 0:29:21,536
核心数据对于管理磁盘上的数据

887
00:29:21,906 --> 0:29:23,136
非常有用

888
00:29:24,266 --> 0:29:26,056
它为你提供了

889
00:29:26,686 --> 0:29:29,046
验证 查询 筛选和组织对象的

890
00:29:29,046 --> 0:29:30,506
解决方案

891
00:29:31,136 --> 0:29:34,756
如果你的数据位于某个 web 服务器上

892
00:29:34,826 --> 0:29:36,936
那么你可以使用

893
00:29:36,936 --> 0:29:40,106
NSURLSessions

894
00:29:40,106 --> 0:29:42,706
下载并上传数据

895
00:29:42,786 --> 0:29:44,936
另一个不错的选择是

896
00:29:44,936 --> 0:29:47,226
使用 CloudKit 来

897
00:29:47,326 --> 0:29:47,696
云储存数据

898
00:29:48,496 --> 0:29:50,686
你甚至可以使用

899
00:29:50,686 --> 0:29:52,656
第三方云提供商来

900
00:29:52,656 --> 0:29:53,336
管理你的云数据

901
00:29:53,336 --> 0:29:55,476
现在我们已经设置好了数据

902
00:29:56,286 --> 0:29:58,666
让我们进入

903
00:29:59,096 --> 0:30:00,956
构建用户界面的下一部分

904
00:29:59,096 --> 0:30:00,956
构建用户界面的下一部分

905
00:30:03,096 --> 0:30:03,856
这是我们

906
00:30:03,856 --> 0:30:05,116
想要的排行榜

907
00:30:06,476 --> 0:30:08,276
我将把它分解成

908
00:30:08,276 --> 0:30:09,936
屏幕上几个不同的观察器

909
00:30:11,266 --> 0:30:14,056
在顶部我们有导航栏

910
00:30:15,306 --> 0:30:18,846
下面是一个表格视图

911
00:30:18,846 --> 0:30:20,896
它的行叫做

912
00:30:21,086 --> 0:30:22,226
表视图单元格

913
00:30:23,486 --> 0:30:26,376
在每个单元格中

914
00:30:26,456 --> 0:30:29,266
左边有一个图像视图

915
00:30:29,266 --> 0:30:31,966
右边有一些标签显示文本

916
00:30:33,456 --> 0:30:36,006
除了排行榜

917
00:30:36,006 --> 0:30:37,786
我们还需要设置

918
00:30:37,786 --> 0:30:39,766
细节页面

919
00:30:39,766 --> 0:30:40,656
这个很简单

920
00:30:41,236 --> 0:30:43,846
它有一个图像视图和一些标签

921
00:30:45,366 --> 0:30:47,376
现在我们知道了

922
00:30:47,486 --> 0:30:50,056
我们的 UI 是如何组成的

923
00:30:50,056 --> 0:30:52,196
让我们回到另一个演示中

924
00:30:52,236 --> 0:30:54,586
并设置这个用户界面

925
00:31:01,886 --> 0:31:03,726
我会选择我们和 Jessie

926
00:31:03,976 --> 0:31:06,966
一起创建的 “Main.storyboard”

927
00:31:07,156 --> 0:31:08,006
这里我们有一个

928
00:31:08,096 --> 0:31:10,626
单视图控制器

929
00:31:10,626 --> 0:31:12,766
用于管理游戏的

930
00:31:12,766 --> 0:31:14,156
整个屏幕内容

931
00:31:15,396 --> 0:31:17,706
现在我们想在细节视图中

932
00:31:18,386 --> 0:31:20,506
添加更多的屏幕

933
00:31:20,506 --> 0:31:21,586
来显示我们的排行榜

934
00:31:22,656 --> 0:31:25,236
为此 我们可以从对象库中

935
00:31:25,236 --> 0:31:27,646
添加另一个 View Controller

936
00:31:28,426 --> 0:31:29,986
我来搜索 “View Controller”

937
00:31:31,406 --> 0:31:32,666
我们注意到 View Controller

938
00:31:32,666 --> 0:31:34,716
有几个不同的选项

939
00:31:35,746 --> 0:31:37,356
因为我希望我的排行榜

940
00:31:37,356 --> 0:31:39,416
看起来更像一个表格

941
00:31:39,416 --> 0:31:41,296
所以我选择 “table view controller”

942
00:31:41,866 --> 0:31:43,516
然后把它拖拽到 storyboard 上

943
00:31:46,186 --> 0:31:47,626
“table view controller”

944
00:31:48,326 --> 0:31:50,756
会自动生成表视图

945
00:31:51,826 --> 0:31:53,196
让我们选择表视图

946
00:31:53,196 --> 0:31:56,166
并查看右边的

947
00:31:56,166 --> 0:31:56,816
属性检查器

948
00:31:58,096 --> 0:32:00,956
这里的内容类型设置为

949
00:31:58,096 --> 0:32:00,956
这里的内容类型设置为

950
00:32:00,956 --> 0:32:02,316
“dynamic prototypes（动态原型）”

951
00:32:03,206 --> 0:32:04,836
我把它改成

952
00:32:04,956 --> 0:32:05,296
“static cells（静态单元格）”

953
00:32:06,646 --> 0:32:08,216
静态单元格

954
00:32:08,216 --> 0:32:09,656
非常适合显示静态数据

955
00:32:10,576 --> 0:32:12,316
这些可以容易地

956
00:32:12,466 --> 0:32:13,416
在 storyboard 中设置

957
00:32:14,786 --> 0:32:17,146
现在 我们选择一个单元格

958
00:32:17,256 --> 0:32:19,516
从属性检查器中

959
00:32:19,516 --> 0:32:21,186
将其样式更改为

960
00:32:21,246 --> 0:32:21,966
“subtitle（副标题）”

961
00:32:23,456 --> 0:32:25,126
我们有了一个标题和副标题

962
00:32:25,126 --> 0:32:27,386
在这里我可以在排行榜上

963
00:32:27,386 --> 0:32:29,486
显示名字和分数

964
00:32:31,046 --> 0:32:33,426
我还想在行左边

965
00:32:33,426 --> 0:32:34,496
添加一个图像

966
00:32:35,476 --> 0:32:38,136
为此 我可以在

967
00:32:38,136 --> 0:32:39,986
属性检查器的

968
00:32:39,986 --> 0:32:42,086
图像字段中输入

969
00:32:42,086 --> 0:32:42,736
一个图像的名称

970
00:32:43,856 --> 0:32:46,776
我在项目中导入了一张图片

971
00:32:46,846 --> 0:32:48,686
作为示例

972
00:32:49,266 --> 0:32:51,306
让我补充进来

973
00:32:51,866 --> 0:32:55,666
好的 现在单元格都设置好了

974
00:32:55,666 --> 0:32:57,776
我们的排行榜

975
00:32:57,776 --> 0:32:58,716
有了很好的框架

976
00:32:59,586 --> 0:33:02,066
让我们继续添加细节 UI

977
00:32:59,586 --> 0:33:02,066
让我们继续添加细节 UI

978
00:33:02,066 --> 0:33:05,276
我要返回到对象库

979
00:33:05,276 --> 0:33:07,686
这次我们取一个

980
00:33:07,686 --> 0:33:10,176
空白的视图控制器

981
00:33:10,176 --> 0:33:11,896
添加到 storyboard 中

982
00:33:14,236 --> 0:33:16,876
在这个 View Controller 中

983
00:33:16,876 --> 0:33:18,526
我们将添加一个图像视图

984
00:33:22,076 --> 0:33:24,036
让我从属性检查器中

985
00:33:24,036 --> 0:33:25,366
设置图像

986
00:33:27,076 --> 0:33:27,786
稍等

987
00:33:27,786 --> 0:33:29,676
这个有点变形

988
00:33:30,336 --> 0:33:32,676
让我将 “content mode（内容模式）”

989
00:33:32,676 --> 0:33:36,656
调节为适应比例 好多了

990
00:33:37,796 --> 0:33:39,376
现在我要回到对象库

991
00:33:39,376 --> 0:33:40,976
添加一些标签

992
00:33:44,046 --> 0:33:45,356
这些将用于

993
00:33:45,356 --> 0:33:46,456
存储名称

994
00:33:47,076 --> 0:33:48,186
我要做一个副本

995
00:33:49,066 --> 0:33:51,516
下一个是排名

996
00:33:51,606 --> 0:33:53,146
最后是另一个标签

997
00:33:53,846 --> 0:33:54,716
再做一个副本

998
00:33:54,966 --> 0:33:56,256
另一个分数标签

999
00:33:57,496 --> 0:34:00,186
好的 现在我们的 View Controllers 

1000
00:33:57,496 --> 0:34:00,186
好的 现在我们的 View Controllers 

1001
00:34:00,186 --> 0:34:02,496
都设置好了

1002
00:34:02,496 --> 0:34:03,586
还有一件事要做

1003
00:34:03,586 --> 0:34:06,756
我们要让 App 知道

1004
00:34:06,756 --> 0:34:08,335
在我们在 App 中

1005
00:34:08,335 --> 0:34:10,466
做了某个动作后

1006
00:34:11,466 --> 0:34:13,335
要显示排行榜或细节视图

1007
00:34:13,335 --> 0:34:13,545
因为我们想要在

1008
00:34:14,936 --> 0:34:17,076
点击按钮之后

1009
00:34:17,076 --> 0:34:19,376
让排行榜

1010
00:34:19,376 --> 0:34:20,696
显示出来

1011
00:34:20,896 --> 0:34:23,356
我将在排行榜按钮

1012
00:34:23,356 --> 0:34:25,065
和 table view controller 之间

1013
00:34:25,106 --> 0:34:26,176
创建一个连接

1014
00:34:27,286 --> 0:34:29,045
让我们按住

1015
00:34:29,045 --> 0:34:31,036
键盘上的 control 键

1016
00:34:31,036 --> 0:34:32,466
并将鼠标

1017
00:34:32,466 --> 0:34:33,246
从排行榜按钮

1018
00:34:33,246 --> 0:34:34,376
拖到 table view controller

1019
00:34:34,916 --> 0:34:38,235
当我松开鼠标

1020
00:34:38,235 --> 0:34:40,235
会看到菜单上有几个不同的选项

1021
00:34:40,755 --> 0:34:43,376
这里是一些

1022
00:34:43,376 --> 0:34:45,496
我们可以将

1023
00:34:45,496 --> 0:34:47,476
第二个 View Controller

1024
00:34:47,476 --> 0:34:48,116
置于第一个之上的方法

1025
00:34:49,416 --> 0:34:51,196
现在 我要选择 “show” 选项

1026
00:34:51,196 --> 0:34:53,866
这是此类型 App

1027
00:34:53,936 --> 0:34:55,106
很常用的连续

1028
00:34:56,716 --> 0:34:58,856
我们注意到

1029
00:34:58,986 --> 0:35:00,856
两个视图控制器之间已经

1030
00:34:58,986 --> 0:35:00,856
两个视图控制器之间已经

1031
00:35:00,856 --> 0:35:01,526
创建了连接

1032
00:35:02,496 --> 0:35:04,726
这就叫做“连续”

1033
00:35:05,636 --> 0:35:07,946
现在 当我点击

1034
00:35:07,946 --> 0:35:09,626
排行榜中的单元格时

1035
00:35:09,926 --> 0:35:11,646
我想要显示 “details view 

1036
00:35:11,646 --> 0:35:12,256
controller（细节视图控制器）”

1037
00:35:13,106 --> 0:35:14,306
我们再按住 control 键

1038
00:35:14,306 --> 0:35:16,346
将鼠标拖到

1039
00:35:16,976 --> 0:35:18,556
“details view controller”

1040
00:35:18,946 --> 0:35:21,126
再次选择 “show”

1041
00:35:21,836 --> 0:35:24,486
现在我们已经准备好

1042
00:35:24,486 --> 0:35:25,706
第一次运行我们的 App 了

1043
00:35:28,436 --> 0:35:30,276
我们来看看模拟器

1044
00:35:30,936 --> 0:35:35,356
如果点击排行榜

1045
00:35:35,356 --> 0:35:37,486
我发现它有一个

1046
00:35:37,486 --> 0:35:38,156
很好的模型

1047
00:35:39,016 --> 0:35:41,306
我可以点击单元格

1048
00:35:41,306 --> 0:35:43,896
就可以显示详细

1049
00:35:43,896 --> 0:35:44,706
信息视图

1050
00:35:45,336 --> 0:35:46,706
看起来不错

1051
00:35:46,706 --> 0:35:50,306
但我该如何回到

1052
00:35:50,306 --> 0:35:51,906
排行榜或游戏呢

1053
00:35:52,946 --> 0:35:54,756
让我们来解决这个问题

1054
00:35:56,076 --> 0:35:58,926
为此 我将选择

1055
00:35:58,926 --> 0:36:01,036
装载游戏的

1056
00:35:58,926 --> 0:36:01,036
装载游戏的

1057
00:36:01,036 --> 0:36:01,556
主要 View Controller

1058
00:36:02,516 --> 0:36:04,206
然后选择 Xcode 菜单中的 “editor（编辑器）”

1059
00:36:04,246 --> 0:36:07,186
选择 嵌入

1060
00:36:07,526 --> 0:36:08,906
“Navigation Controller”

1061
00:36:09,466 --> 0:36:12,676
这为我们的 App

1062
00:36:12,676 --> 0:36:13,796
添加了一个导航控制器

1063
00:36:14,536 --> 0:36:16,816
导航控制器是一种

1064
00:36:16,816 --> 0:36:18,776
特殊类型的视图控制器

1065
00:36:19,216 --> 0:36:21,266
用于管理

1066
00:36:21,266 --> 0:36:22,956
视图控制器之间的

1067
00:36:23,056 --> 0:36:24,736
来回转换

1068
00:36:26,066 --> 0:36:29,046
它也在视图控制器的顶部

1069
00:36:29,046 --> 0:36:31,146
添加了一个导航栏

1070
00:36:31,146 --> 0:36:33,256
如果我从属性检查器中

1071
00:36:33,256 --> 0:36:36,226
为排行榜设置了标题

1072
00:36:36,646 --> 0:36:38,856
它现在会显示在

1073
00:36:38,856 --> 0:36:41,556
导航条中

1074
00:36:42,936 --> 0:36:44,966
现在我们已经添加了

1075
00:36:44,966 --> 0:36:47,396
所有需要为 UI 添加的观察器

1076
00:36:48,726 --> 0:36:50,616
最后 我要给这个 App

1077
00:36:50,616 --> 0:36:53,066
添加一个图标

1078
00:36:54,376 --> 0:36:56,426
让我们进入项目导航器

1079
00:36:57,156 --> 0:36:59,276
选择名为 “assets” 的

1080
00:36:59,556 --> 0:36:59,876
蓝色文件夹

1081
00:37:01,146 --> 0:37:03,366
选择 App 图标图像设置

1082
00:37:04,836 --> 0:37:06,956
现在这里有一些

1083
00:37:06,956 --> 0:37:08,016
设计师已经做好的图标

1084
00:37:08,736 --> 0:37:11,446
选择这些

1085
00:37:11,546 --> 0:37:12,666
添加到 Xcode 中

1086
00:37:14,656 --> 0:37:16,756
创建这些图标

1087
00:37:16,756 --> 0:37:18,436
有一种特定的方式

1088
00:37:18,686 --> 0:37:20,116
在 developer.apple.com 上

1089
00:37:20,116 --> 0:37:21,766
提供了教程

1090
00:37:22,346 --> 0:37:25,676
这一次 当我们运行 App 时

1091
00:37:26,116 --> 0:37:28,296
先把这个关闭

1092
00:37:28,296 --> 0:37:30,976
在主页上就可以看到图标了

1093
00:37:31,646 --> 0:37:32,406
可爱吗

1094
00:37:33,516 --> 0:37:36,856
[ 掌声 ] 谢谢

1095
00:37:38,026 --> 0:37:39,166
让我们回到 App 中

1096
00:37:40,586 --> 0:37:42,126
然后点击排行榜

1097
00:37:43,496 --> 0:37:45,936
现在 我们可以在

1098
00:37:45,936 --> 0:37:47,826
所有视图之间来回切换了

1099
00:37:47,826 --> 0:37:50,926
太棒了 现在让我们

1100
00:37:51,016 --> 0:37:52,286
[ 掌声 ]

1101
00:37:52,286 --> 0:37:53,546
很高兴大家能喜欢

1102
00:37:54,656 --> 0:37:56,686
现在让我们转动手机

1103
00:37:56,746 --> 0:37:57,726
看看会发生什么

1104
00:37:58,346 --> 0:38:01,206
哦不 标签都被

1105
00:37:58,346 --> 0:38:01,206
哦不 标签都被

1106
00:38:01,206 --> 0:38:04,266
挡住了 图片又太靠左了

1107
00:38:04,956 --> 0:38:07,256
为了让我的布局看起来正确

1108
00:38:07,256 --> 0:38:08,976
把手机转回来

1109
00:38:10,076 --> 0:38:12,196
我将使用一种

1110
00:38:12,316 --> 0:38:13,066
叫做自动布局的技术

1111
00:38:14,616 --> 0:38:16,536
自动布局是一组规则

1112
00:38:16,776 --> 0:38:19,706
通过定义规则

1113
00:38:19,706 --> 0:38:21,846
我们可以让 App 视图

1114
00:38:21,896 --> 0:38:22,216
按照我们的意愿布局

1115
00:38:23,866 --> 0:38:26,846
因此 自动布局中的每个规则

1116
00:38:26,846 --> 0:38:28,366
都被称为约束

1117
00:38:29,386 --> 0:38:31,336
现在 我们要在 details view controller 中

1118
00:38:31,856 --> 0:38:33,316
为这个图像视图

1119
00:38:33,316 --> 0:38:34,696
添加一些约束

1120
00:38:36,206 --> 0:38:40,156
看看 storyboard 右下角的按钮

1121
00:38:41,356 --> 0:38:43,506
我们点击“排列”按钮

1122
00:38:43,896 --> 0:38:45,756
按钮的图标是两条横条

1123
00:38:46,566 --> 0:38:48,356
勾选 “horizontally

1124
00:38:48,386 --> 0:38:48,876
in container”

1125
00:38:48,876 --> 0:38:51,026
添加一个约束

1126
00:38:51,026 --> 0:38:54,346
这就在 App 中设置了

1127
00:38:54,346 --> 0:38:56,546
图像视图

1128
00:38:56,546 --> 0:38:57,926
总是在水平中心

1129
00:38:58,656 --> 0:39:01,146
我们再单击“排列按钮”

1130
00:38:58,656 --> 0:39:01,146
我们再单击“排列按钮”

1131
00:39:01,146 --> 0:39:03,306
旁边的这个按钮

1132
00:39:03,446 --> 0:39:04,996
叫做 “Add New Constraints（添加新约束）”

1133
00:39:05,736 --> 0:39:08,926
最上面的文本框

1134
00:39:09,256 --> 0:39:11,926
表示我的图像视图

1135
00:39:12,016 --> 0:39:14,586
与其上方最近的项目

1136
00:39:14,586 --> 0:39:15,516
之间的距离

1137
00:39:16,706 --> 0:39:19,086
如果我设置这个数值

1138
00:39:19,086 --> 0:39:21,516
就能确保

1139
00:39:21,516 --> 0:39:23,566
我的图像视图

1140
00:39:23,606 --> 0:39:26,456
距离顶部最近的项目

1141
00:39:26,456 --> 0:39:27,366
有 10 点的距离

1142
00:39:27,566 --> 0:39:28,696
也可能是

1143
00:39:28,696 --> 0:39:29,456
距离屏幕的边缘

1144
00:39:30,556 --> 0:39:32,876
让我们再设置下宽度和高度

1145
00:39:39,046 --> 0:39:41,826
现在我们的图像视图都设置好

1146
00:39:41,826 --> 0:39:43,026
可以使用自动布局了

1147
00:39:43,876 --> 0:39:45,396
我将给所有标签

1148
00:39:45,396 --> 0:39:47,226
添加相似的约束

1149
00:39:48,086 --> 0:39:49,736
我们将它们可以全选

1150
00:39:49,736 --> 0:39:51,386
来一次性完成更改

1151
00:39:54,996 --> 0:39:58,326
现在如果我们运行 App

1152
00:39:58,326 --> 0:40:00,336
然后旋转

1153
00:39:58,326 --> 0:40:00,336
然后旋转

1154
00:40:00,446 --> 0:40:02,976
应该就可以看到视图正确分布了

1155
00:40:04,026 --> 0:40:05,936
还有一种更简单的方式

1156
00:40:05,936 --> 0:40:07,166
来验证我们的布局

1157
00:40:08,136 --> 0:40:09,516
我们可以看到

1158
00:40:09,606 --> 0:40:11,786
storyboard 左下角的

1159
00:40:11,786 --> 0:40:13,126
设备配置窗格

1160
00:40:14,466 --> 0:40:18,066
把方向转变成横屏

1161
00:40:18,796 --> 0:40:21,836
现在我可以看到

1162
00:40:21,836 --> 0:40:23,276
横向的视窗了

1163
00:40:24,016 --> 0:40:25,436
我的图片

1164
00:40:25,436 --> 0:40:27,796
在正中央

1165
00:40:27,796 --> 0:40:30,976
标签都在同一个页面上

1166
00:40:32,436 --> 0:40:34,086
你甚至可以

1167
00:40:34,126 --> 0:40:36,056
从设备配置窗格中更改设备

1168
00:40:36,056 --> 0:40:38,476
看看在 iPad 上

1169
00:40:38,716 --> 0:40:40,966
或更小的手机上会是什么样子

1170
00:40:41,506 --> 0:40:46,486
这样 UI 就都设置好了

1171
00:40:47,116 --> 0:40:48,866
让我们快速回顾一下

1172
00:40:48,866 --> 0:40:50,336
刚刚在这部分中

1173
00:40:50,556 --> 0:40:51,056
学到的内容

1174
00:40:52,036 --> 0:40:55,006
我们从一个

1175
00:40:55,006 --> 0:40:57,596
单视图控制器开始

1176
00:40:57,816 --> 0:40:59,426
它管理着

1177
00:40:59,586 --> 0:41:00,636
整个游戏的屏幕

1178
00:40:59,586 --> 0:41:00,636
整个游戏的屏幕

1179
00:41:01,826 --> 0:41:03,406
我们了解到可

1180
00:41:03,566 --> 0:41:05,846
以创建多个视图控制器

1181
00:41:05,846 --> 0:41:08,426
来显示多个内容屏幕

1182
00:41:09,016 --> 0:41:11,846
如果我们创建了多屏幕的内容

1183
00:41:11,846 --> 0:41:16,016
那么我们需要告诉 iOS

1184
00:41:16,506 --> 0:41:18,596
如何从一个视图控制器

1185
00:41:18,596 --> 0:41:19,946
切换到另一个

1186
00:41:20,976 --> 0:41:23,486
我们通过添加连接

1187
00:41:24,046 --> 0:41:25,506
也就是“连续”来实现这一点

1188
00:41:27,296 --> 0:41:28,046
我们创建了一个

1189
00:41:28,046 --> 0:41:29,506
表格视图控制器

1190
00:41:30,006 --> 0:41:32,596
它非常适合显示数据列表

1191
00:41:34,186 --> 0:41:36,236
我们还在导航控制器中

1192
00:41:36,236 --> 0:41:37,696
添加了它

1193
00:41:38,656 --> 0:41:40,776
导航控制器

1194
00:41:40,776 --> 0:41:42,636
帮助我们在表视图和细节页面之间

1195
00:41:42,636 --> 0:41:45,826
来回切换

1196
00:41:46,966 --> 0:41:49,386
这种使用

1197
00:41:49,386 --> 0:41:51,016
表视图和导航控制器的模式

1198
00:41:51,016 --> 0:41:54,586
在 iOS App 中很常见

1199
00:41:55,756 --> 0:41:56,966
这里有一些例子

1200
00:41:59,676 --> 0:42:01,086
要了解更多

1201
00:41:59,676 --> 0:42:01,086
要了解更多

1202
00:42:01,086 --> 0:42:02,866
关于视图控制器的信息

1203
00:42:02,866 --> 0:42:05,846
请查看 developer.apple.com 上的文档

1204
00:42:07,186 --> 0:42:08,856
我们还学习了自动布局

1205
00:42:08,856 --> 0:42:10,636
这是一种很好的技术

1206
00:42:10,696 --> 0:42:12,726
可以为不同的屏幕尺寸

1207
00:42:12,726 --> 0:42:15,096
和不同的方向

1208
00:42:15,156 --> 0:42:16,346
构建良好的

1209
00:42:16,346 --> 0:42:17,236
用户界面

1210
00:42:18,016 --> 0:42:19,586
我建议大家去

1211
00:42:19,586 --> 0:42:22,076
看看这些 WWDC 课程

1212
00:42:22,076 --> 0:42:23,516
来了解更多关于自动布局的知识

1213
00:42:25,146 --> 0:42:28,686
最后 我们可以将数据模型

1214
00:42:28,876 --> 0:42:31,566
与 UI 连接起来

1215
00:42:31,566 --> 0:42:34,016
并写入逻辑 将所有东西

1216
00:42:34,016 --> 0:42:34,546
组合在一起

1217
00:42:35,346 --> 0:42:37,446
让我们看看另一个演示

1218
00:42:41,216 --> 0:42:43,526
我们需要在每次游戏结束时

1219
00:42:43,566 --> 0:42:44,816
保存分数

1220
00:42:45,736 --> 0:42:48,306
为此 我选择

1221
00:42:48,306 --> 0:42:50,046
与 Jessie 一起编写的

1222
00:42:50,046 --> 0:42:50,696
视图控制器

1223
00:42:51,266 --> 0:42:54,226
在 “game over()” 方法中

1224
00:42:55,396 --> 0:42:58,916
我将调用之前编写的数据模型

1225
00:42:59,286 --> 0:43:01,446
上的一个方法来保存分数

1226
00:42:59,286 --> 0:43:01,446
上的一个方法来保存分数

1227
00:43:03,256 --> 0:43:06,186
这个 “save points()” 方法

1228
00:43:06,186 --> 0:43:07,646
有两个参数

1229
00:43:08,536 --> 0:43:10,456
一个是我们已经保存在

1230
00:43:11,226 --> 0:43:14,066
游戏分数变量中的总分数

1231
00:43:15,336 --> 0:43:18,746
第二个参数是

1232
00:43:18,746 --> 0:43:20,376
正在玩游戏的玩家的用户名

1233
00:43:20,806 --> 0:43:22,896
总结一下

1234
00:43:22,896 --> 0:43:24,826
我在之前创建的

1235
00:43:25,146 --> 0:43:26,876
视图控制器中

1236
00:43:26,876 --> 0:43:27,356
添加了一些代码

1237
00:43:28,066 --> 0:43:30,466
游戏中的

1238
00:43:30,546 --> 0:43:32,926
“save points()” 方法

1239
00:43:32,926 --> 0:43:33,706
有两个参数

1240
00:43:34,336 --> 0:43:36,266
第一个是我们已经

1241
00:43:36,956 --> 0:43:39,616
存储在变量中的游戏分数

1242
00:43:40,596 --> 0:43:44,346
第二个参数是

1243
00:43:44,346 --> 0:43:46,156
正在玩游戏的玩家的用户名

1244
00:43:47,476 --> 0:43:49,916
在实际的 App 中

1245
00:43:49,916 --> 0:43:51,866
你可能会创建一个

1246
00:43:51,866 --> 0:43:53,636
配置文件屏幕或设置屏幕

1247
00:43:53,636 --> 0:43:55,946
用户可以在其中

1248
00:43:55,946 --> 0:43:56,726
输入自己的名字

1249
00:43:57,496 --> 0:43:59,056
但为了这个演示

1250
00:43:59,056 --> 0:44:01,566
我要将自己的名字

1251
00:43:59,056 --> 0:44:01,566
我要将自己的名字

1252
00:44:01,566 --> 0:44:02,366
硬编码进来

1253
00:44:02,946 --> 0:44:05,856
现在 我们已经保存了分数

1254
00:44:05,856 --> 0:44:08,356
我们需要写一些代码

1255
00:44:08,356 --> 0:44:11,236
来在排行榜上正确显示

1256
00:44:11,576 --> 0:44:13,866
分数和名字

1257
00:44:14,756 --> 0:44:16,386
让我们继续创建一个类

1258
00:44:16,386 --> 0:44:18,956
右键单击

1259
00:44:19,066 --> 0:44:21,506
独角兽的文件夹

1260
00:44:21,506 --> 0:44:22,646
点击 “New File (新文件)”

1261
00:44:23,806 --> 0:44:25,426
再次选择 “Cocoa Touch Class”

1262
00:44:25,946 --> 0:44:30,466
这是 UI “Table View Controller” 的子类

1263
00:44:31,606 --> 0:44:33,656
记得我们在 storyboard 上

1264
00:44:33,656 --> 0:44:35,266
创建的排行榜吗

1265
00:44:35,616 --> 0:44:37,336
那就是一个表格视图控制器

1266
00:44:37,696 --> 0:44:40,256
所以我要再次使用 Table View Controller 类

1267
00:44:40,256 --> 0:44:42,816
来为排行榜

1268
00:44:42,916 --> 0:44:44,096
输入一些代码

1269
00:44:45,166 --> 0:44:46,626
让我们称它为

1270
00:44:46,626 --> 0:44:48,476
“Leaderboard View Controller”

1271
00:44:49,796 --> 0:44:51,636
点击下一步 创建

1272
00:44:56,096 --> 0:44:58,106
它已经有了一些

1273
00:44:58,106 --> 0:45:00,726
由 Xcode 生成的代码

1274
00:44:58,106 --> 0:45:00,726
由 Xcode 生成的代码

1275
00:45:01,536 --> 0:45:03,156
这些是开发者们

1276
00:45:03,646 --> 0:45:05,956
在构建自己的

1277
00:45:05,956 --> 0:45:06,756
Table View Controller 时

1278
00:45:06,756 --> 0:45:07,916
发现有用的方法

1279
00:45:08,976 --> 0:45:11,536
我们将实现其中两种方法

1280
00:45:12,766 --> 0:45:15,666
首先是 “table view number of

1281
00:45:15,736 --> 0:45:16,866
rows in sections（）”

1282
00:45:17,936 --> 0:45:20,916
这个方法

1283
00:45:21,066 --> 0:45:22,906
决定着我们

1284
00:45:22,906 --> 0:45:24,836
想要在表格视图中显示的总行数

1285
00:45:25,966 --> 0:45:30,656
在我们的例子中总行数

1286
00:45:30,766 --> 0:45:32,146
等于参与游戏的

1287
00:45:32,146 --> 0:45:33,336
玩家总数

1288
00:45:33,336 --> 0:45:36,026
我们可以从数据模型中

1289
00:45:36,026 --> 0:45:37,736
得到这些信息

1290
00:45:38,706 --> 0:45:40,586
所以玩家变量的数量

1291
00:45:40,586 --> 0:45:43,616
会给出我们所有的行数

1292
00:45:45,056 --> 0:45:46,986
我们需要实现的

1293
00:45:46,986 --> 0:45:49,396
第二种方法是

1294
00:45:49,396 --> 0:45:50,976
“cell [ 音质不清晰 ] at index path” 方法

1295
00:45:52,536 --> 0:45:55,906
每当排行榜上需要

1296
00:45:56,116 --> 0:45:59,006
显示单元格时

1297
00:45:59,006 --> 0:45:59,746
就会调用此方法

1298
00:46:00,776 --> 0:46:03,766
索引路径参数

1299
00:46:03,856 --> 0:46:06,636
告诉我们将显示的

1300
00:46:06,636 --> 0:46:07,576
单元格的行号

1301
00:46:08,856 --> 0:46:10,706
在这里 我们需要像

1302
00:46:10,756 --> 0:46:13,256
评论所说的那样

1303
00:46:13,306 --> 0:46:14,116
配置单元格

1304
00:46:15,526 --> 0:46:18,146
让我插入一些代码

1305
00:46:18,256 --> 0:46:18,956
来设置这个单元格

1306
00:46:18,956 --> 0:46:22,126
我们再次使用了

1307
00:46:22,386 --> 0:46:22,876
“gameData” 类

1308
00:46:23,886 --> 0:46:26,256
索引路径行会

1309
00:46:26,256 --> 0:46:28,366
告诉我们玩家的排名

1310
00:46:28,976 --> 0:46:30,046
因为我们想

1311
00:46:30,046 --> 0:46:31,566
按升序显示玩家

1312
00:46:32,726 --> 0:46:35,036
一旦我们有了玩家的排名

1313
00:46:35,036 --> 0:46:36,816
我们就可以把它发送到

1314
00:46:36,816 --> 0:46:38,806
“gameData” 类下的 “player data” 方法

1315
00:46:39,316 --> 0:46:41,466
来获取更多关于此玩家的信息

1316
00:46:42,906 --> 0:46:45,006
使用这些信息

1317
00:46:45,136 --> 0:46:46,336
我们可以设置单元格

1318
00:46:47,246 --> 0:46:49,626
文本标签就是标题

1319
00:46:50,326 --> 0:46:52,826
细节文本标签就是副标题

1320
00:46:53,296 --> 0:46:54,996
图像视图就是

1321
00:46:54,996 --> 0:46:56,486
照片的图像

1322
00:46:56,486 --> 0:46:59,216
现在 我将不再重复创建

1323
00:46:59,256 --> 0:47:01,136
该游戏数据实例

1324
00:46:59,256 --> 0:47:01,136
该游戏数据实例

1325
00:47:01,136 --> 0:47:02,406
而是将其放在该类的顶部

1326
00:47:02,406 --> 0:47:04,556
以便可以再使用

1327
00:47:06,136 --> 0:47:08,136
让我也删除

1328
00:47:08,236 --> 0:47:09,976
默认添加的分

1329
00:47:09,976 --> 0:47:11,936
段方法的数量

1330
00:47:11,936 --> 0:47:12,936
我们今天不需要

1331
00:47:13,506 --> 0:47:15,576
现在我们已经为排行榜

1332
00:47:15,656 --> 0:47:17,996
写好了代码

1333
00:47:18,076 --> 0:47:20,546
让我们打开 “Main.storyboard”

1334
00:47:20,546 --> 0:47:21,986
和右边的助理编辑器

1335
00:47:23,546 --> 0:47:25,486
我把界面旋转一下

1336
00:47:25,676 --> 0:47:26,646
这样我们就能看清楚了

1337
00:47:30,476 --> 0:47:33,116
我们需要告诉 Xcode

1338
00:47:33,256 --> 0:47:35,786
排行榜的代码

1339
00:47:35,786 --> 0:47:38,426
写在我们刚刚创建的类中

1340
00:47:39,466 --> 0:47:41,786
为此 我将为排行榜选择视图控制器

1341
00:47:41,786 --> 0:47:43,516
选择 “View Controller”

1342
00:47:44,466 --> 0:47:46,616
点击身份检查器

1343
00:47:47,306 --> 0:47:49,386
将类名改成

1344
00:47:49,386 --> 0:47:50,806
“leaderboard view controller”

1345
00:47:51,346 --> 0:47:54,216
在此之后

1346
00:47:54,316 --> 0:47:57,366
我在 storyboard 中选择 “Table View”

1347
00:47:58,066 --> 0:48:00,146
转到属性检查器

1348
00:47:58,066 --> 0:48:00,146
转到属性检查器

1349
00:48:00,816 --> 0:48:02,746
并将内容类型更改为

1350
00:48:02,746 --> 0:48:03,926
“dynamic prototypes”

1351
00:48:05,736 --> 0:48:08,136
这意味着现在

1352
00:48:08,136 --> 0:48:10,736
单元格正在我们编写的代码中

1353
00:48:10,736 --> 0:48:12,006
动态创建

1354
00:48:13,576 --> 0:48:16,306
我们再选择一个单元格

1355
00:48:19,356 --> 0:48:22,156
在属性检查器的

1356
00:48:22,156 --> 0:48:24,626
标识符部分

1357
00:48:24,626 --> 0:48:27,606
我要从类中的

1358
00:48:28,106 --> 0:48:29,706
“cell [ 音质不清晰 ] path()” 方法

1359
00:48:29,706 --> 0:48:31,046
复制重用标识符

1360
00:48:32,926 --> 0:48:35,456
通过这样做

1361
00:48:35,456 --> 0:48:37,876
我想在我的表视图中

1362
00:48:37,926 --> 0:48:38,916
重用单元格

1363
00:48:39,686 --> 0:48:40,966
这将有助于改进

1364
00:48:41,026 --> 0:48:42,716
表视图的性能

1365
00:48:45,276 --> 0:48:47,346
最后 我们已经为这个排行榜类

1366
00:48:47,486 --> 0:48:49,976
编写了代码

1367
00:48:50,086 --> 0:48:51,606
我们仍然需要为

1368
00:48:51,606 --> 0:48:52,956
“Details View Controller” 编写代码

1369
00:48:56,356 --> 0:48:58,286
幸运的是 我已经添加了一些代码

1370
00:48:58,286 --> 0:49:01,156
我们将把它们导入项目中

1371
00:48:58,286 --> 0:49:01,156
我们将把它们导入项目中

1372
00:49:03,336 --> 0:49:06,586
这是 “Details View Controller” 类

1373
00:49:07,116 --> 0:49:09,466
让我们从跳转栏里直接跳转

1374
00:49:11,226 --> 0:49:14,326
这里有一些 IBOutlets

1375
00:49:14,326 --> 0:49:15,746
用于我们 “Details View Controller” 中的

1376
00:49:15,746 --> 0:49:17,126
不同视图

1377
00:49:18,196 --> 0:49:20,506
记住 当我们写游戏时

1378
00:49:20,506 --> 0:49:22,526
我们要将 IBOutlets 连接到

1379
00:49:22,526 --> 0:49:24,236
storyboard 中的视图

1380
00:49:25,226 --> 0:49:27,196
但我们现在不能这么做

1381
00:49:28,026 --> 0:49:30,376
是因为我们

1382
00:49:30,436 --> 0:49:32,526
还没有告诉 Xcode

1383
00:49:32,526 --> 0:49:34,196
这个视图控制器的代码就在这里

1384
00:49:35,076 --> 0:49:36,636
让我们到标识检查器

1385
00:49:36,636 --> 0:49:38,466
通过将类名更改为

1386
00:49:38,466 --> 0:49:39,936
“details view controller”

1387
00:49:39,936 --> 0:49:41,246
来再次执行此操作

1388
00:49:42,456 --> 0:49:44,806
现在我们就可以

1389
00:49:44,896 --> 0:49:45,476
轻松地连接 IBOutlets 了

1390
00:49:52,256 --> 0:49:55,166
通过这样做

1391
00:49:55,166 --> 0:49:57,506
我们可以从代码中设置视图

1392
00:49:57,506 --> 0:50:00,226
就像我在 “view load()” 方法中所做的那样

1393
00:49:57,506 --> 0:50:00,226
就像我在 “view load()” 方法中所做的那样

1394
00:50:01,456 --> 0:50:02,966
我把 “Main.storyboard”

1395
00:50:02,966 --> 0:50:05,446
暂时隐藏起来

1396
00:50:05,586 --> 0:50:07,686
这里还有一个

1397
00:50:07,686 --> 0:50:08,366
玩家信息变量

1398
00:50:08,366 --> 0:50:11,046
我们使用玩家信息

1399
00:50:11,046 --> 0:50:13,426
来建立我们的视图

1400
00:50:14,876 --> 0:50:16,706
你可能在想

1401
00:50:16,706 --> 0:50:18,166
我们并没有把这个玩家的信息

1402
00:50:18,166 --> 0:50:19,356
发送到任何地方

1403
00:50:20,246 --> 0:50:21,756
那么我们如何得到这些数据呢

1404
00:50:23,136 --> 0:50:25,106
实际上 我们需要询问排行榜

1405
00:50:25,106 --> 0:50:27,266
是谁的名字

1406
00:50:27,266 --> 0:50:28,166
被点击了

1407
00:50:29,576 --> 0:50:30,946
因此 我们要回到

1408
00:50:30,946 --> 0:50:32,906
排行榜的记分板

1409
00:50:33,006 --> 0:50:35,266
找出我们需要

1410
00:50:35,266 --> 0:50:37,336
展示更多信息的人

1411
00:50:38,526 --> 0:50:39,226
让我们跳转到

1412
00:50:39,226 --> 0:50:40,626
“Leaderboard View Controller”

1413
00:50:41,876 --> 0:50:44,336
在这个类的底部

1414
00:50:44,336 --> 0:50:46,226
我们有一个方法

1415
00:50:46,226 --> 0:50:48,506
是由 Xcode 为我们编写的

1416
00:50:48,506 --> 0:50:49,916
叫做 “prepare for segue()” 方法

1417
00:50:50,946 --> 0:50:54,476
当我们在一个视图控制器

1418
00:50:54,476 --> 0:50:56,146
和另一个视图控制器之间转换时

1419
00:50:56,146 --> 0:50:57,946
会调用它

1420
00:50:58,466 --> 0:51:00,946
当我们点击

1421
00:50:58,466 --> 0:51:00,946
当我们点击

1422
00:51:00,946 --> 0:51:03,346
Table View Controller 中的一个单元格时

1423
00:51:03,346 --> 0:51:04,506
它就立刻会被调用

1424
00:51:05,226 --> 0:51:10,216
在这里我将根据排名

1425
00:51:10,686 --> 0:51:11,786
获得更多关于玩家的信息

1426
00:51:11,786 --> 0:51:14,206
我可以得知排名

1427
00:51:14,616 --> 0:51:16,866
因为表视图中

1428
00:51:16,866 --> 0:51:18,816
有一个属性叫做

1429
00:51:19,196 --> 0:51:20,256
索引路径

1430
00:51:20,256 --> 0:51:23,456
它能告诉我

1431
00:51:23,456 --> 0:51:24,946
我选择的单元格的行号

1432
00:51:25,476 --> 0:51:29,036
我们还在这个方法中

1433
00:51:29,036 --> 0:51:29,566
得到一个延续参数

1434
00:51:29,566 --> 0:51:32,706
还记得 “延续” 如何连接

1435
00:51:32,706 --> 0:51:33,686
两个视图控制器吗

1436
00:51:33,776 --> 0:51:36,286
延续的目标属性

1437
00:51:36,286 --> 0:51:38,686
会告诉我们

1438
00:51:38,686 --> 0:51:40,146
要导航到哪个

1439
00:51:40,146 --> 0:51:40,666
视图控制器

1440
00:51:41,956 --> 0:51:44,236
一旦我们有了

1441
00:51:44,236 --> 0:51:46,456
“details view controller” 的示例

1442
00:51:46,456 --> 0:51:47,686
这就是我们的目的

1443
00:51:48,286 --> 0:51:50,496
然后我们就可以用我们现有的细节

1444
00:51:50,786 --> 0:51:52,206
设置玩家信息了

1445
00:51:53,776 --> 0:51:55,686
最后 我们准备

1446
00:51:55,686 --> 0:51:58,426
最后一次运行我们的 App

1447
00:51:58,426 --> 0:51:59,686
看看所有东西是如何结合在一起的

1448
00:52:01,496 --> 0:52:02,756
现在我们来玩这个游戏

1449
00:52:02,756 --> 0:52:06,186
我们去看排行榜

1450
00:52:06,716 --> 0:52:07,826
我们可以看到

1451
00:52:07,826 --> 0:52:10,516
所有来自数据模型的信息

1452
00:52:11,516 --> 0:52:16,976
[ 掌声 ]

1453
00:52:17,476 --> 0:52:19,546
我只得了一分

1454
00:52:19,546 --> 0:52:20,136
所以我在最后

1455
00:52:20,536 --> 0:52:22,196
让我看看我的排名

1456
00:52:23,096 --> 0:52:24,706
第十一名 还不错

1457
00:52:25,016 --> 0:52:26,616
至少我的 App 都设置好了

1458
00:52:28,586 --> 0:52:31,206
现在我们已经建好了我们的 App

1459
00:52:31,476 --> 0:52:33,426
让我们看看接下来的一些步骤

1460
00:52:35,226 --> 0:52:36,366
在发布 App 之前

1461
00:52:36,956 --> 0:52:38,446
进行测试是很重要的

1462
00:52:39,376 --> 0:52:41,176
XCTest 框架

1463
00:52:41,176 --> 0:52:44,516
可以用来编写单元测试

1464
00:52:44,666 --> 0:52:46,076
你也可以看看

1465
00:52:46,076 --> 0:52:47,756
App Store 的审核指南

1466
00:52:48,646 --> 0:52:50,116
这些都是为了

1467
00:52:50,116 --> 0:52:52,206
给用户和开发者

1468
00:52:52,206 --> 0:52:53,286
创造良好的体验

1469
00:52:54,056 --> 0:52:57,006
总有一天 你会加入

1470
00:52:57,006 --> 0:52:58,616
Apple Developer

1471
00:52:58,616 --> 0:52:59,266
Program

1472
00:53:00,216 --> 0:53:01,896
在你创建发布 App 时

1473
00:53:01,896 --> 0:53:03,536
它将为你获取证书

1474
00:53:03,536 --> 0:53:06,976
和概要文件提供帮助

1475
00:53:08,046 --> 0:53:10,696
最后 提交 App 以供审查

1476
00:53:11,756 --> 0:53:13,926
一旦通过审查

1477
00:53:13,926 --> 0:53:15,396
就去告知你的朋友 家人

1478
00:53:15,396 --> 0:53:16,076
甚至是整个世界吧

1479
00:53:16,346 --> 0:53:17,186
你已经建好了自己的 App

1480
00:53:18,746 --> 0:53:20,396
要了解更多关于这些后续步骤的信息

1481
00:53:20,396 --> 0:53:22,546
你可以在 WWDC App 上

1482
00:53:22,596 --> 0:53:25,046
查看此演讲

1483
00:53:25,046 --> 0:53:27,316
的参考资料

1484
00:53:27,836 --> 0:53:30,896
总之 我鼓励大家

1485
00:53:30,896 --> 0:53:32,756
去探索 Xcode

1486
00:53:33,056 --> 0:53:35,476
它有许多工具和模板

1487
00:53:35,596 --> 0:53:38,216
可以让 iOS 开发变得非常简单

1488
00:53:38,746 --> 0:53:42,046
你可以用 storyboard

1489
00:53:42,046 --> 0:53:44,006
轻松地设置用户界面

1490
00:53:44,596 --> 0:53:46,826
尝试一些视图

1491
00:53:46,826 --> 0:53:48,626
看看你的 App 可能是什么样子

1492
00:53:50,146 --> 0:53:52,106
想想你可能需要的数据

1493
00:53:52,106 --> 0:53:54,826
以及你要如何储存它

1494
00:53:56,266 --> 0:53:58,186
为所有设备

1495
00:53:58,186 --> 0:54:01,086
创建良好的用户体验是很重要的

1496
00:53:58,186 --> 0:54:01,086
创建良好的用户体验是很重要的

1497
00:54:01,796 --> 0:54:03,356
这可能意味着要

1498
00:54:03,406 --> 0:54:05,856
优化旧设备的性能

1499
00:54:05,856 --> 0:54:08,266
或者照顾不同的屏幕大小

1500
00:54:10,216 --> 0:54:12,236
作出好的 App

1501
00:54:12,236 --> 0:54:14,096
要遵循指导和加以练习

1502
00:54:14,096 --> 0:54:18,216
如果你已经完成了所有这些

1503
00:54:18,216 --> 0:54:20,866
那么你就能正式成为了一名 iOS App 开发者

1504
00:54:21,516 --> 0:54:22,676
祝贺大家

1505
00:54:22,846 --> 0:54:24,456
祝大家 WWDC 愉快

1506
00:54:25,016 --> 0:54:26,000
[ 掌声 ]
