1
00:00:07,516 --> 0:00:20,516
［ 音乐 ］

2
00:00:21,246 --> 0:00:23,246
［ 掌声 ］

3
00:00:23,476 --> 0:00:23,976
&gt;&gt; 早上好

4
00:00:25,526 --> 0:00:27,136
早上好 欢迎来到

5
00:00:27,136 --> 0:00:29,756
管理你的 iOS App 上的文稿

6
00:00:30,836 --> 0:00:32,436
我是 Brandon Tennant 一名

7
00:00:32,436 --> 0:00:33,446
Apple 和文稿管理团队的

8
00:00:33,446 --> 0:00:34,736
软件工程师

9
00:00:35,156 --> 0:00:36,276
稍后 一起加入我的还有

10
00:00:36,276 --> 0:00:38,786
我的同事 Thomas Deniau 和 Rony Fadel

11
00:00:39,386 --> 0:00:41,476
今天我们将

12
00:00:41,476 --> 0:00:43,316
为你简单描述

13
00:00:43,316 --> 0:00:45,076
iOS 上的文稿管理是什么

14
00:00:45,106 --> 0:00:46,286
接下来我们将分享一些

15
00:00:46,286 --> 0:00:47,246
这个领域的新发现

16
00:00:48,376 --> 0:00:49,576
Thomas 将上台

17
00:00:49,576 --> 0:00:51,966
展示如何在你的 App 上 

18
00:00:51,966 --> 0:00:54,236
使用文稿管理 API

19
00:00:55,056 --> 0:00:56,886
最后 Rony 将加入我们 

20
00:00:56,886 --> 0:00:58,576
上台展示几个小建议

21
00:00:58,576 --> 0:01:00,136
和小窍门来提升

22
00:00:58,576 --> 0:01:00,136
和小窍门来提升

23
00:01:00,326 --> 0:01:01,256
App 的性能

24
00:01:02,436 --> 0:01:04,385
让我们先开始

25
00:01:04,385 --> 0:01:05,686
复习一下 iOS 上的文稿

26
00:01:05,686 --> 0:01:07,026
管理是什么

27
00:01:08,486 --> 0:01:10,096
它是一个多种技术的集合

28
00:01:10,416 --> 0:01:13,056
首先 为 App 开发人员提供一个 API

29
00:01:13,946 --> 0:01:15,206
为云服务供应商也提供

30
00:01:15,206 --> 0:01:16,286
File Provider API

31
00:01:16,286 --> 0:01:19,406
还有 Files App

32
00:01:20,796 --> 0:01:22,976
在 iOS 11 中 我们引入了

33
00:01:23,046 --> 0:01:24,766
UIDocumentBrowserViewController

34
00:01:25,046 --> 0:01:26,686
也显著地改进了

35
00:01:26,756 --> 0:01:28,266
UIDocumentPickerViewController

36
00:01:30,166 --> 0:01:31,406
在你的 App 中使用这个新的控制器

37
00:01:31,406 --> 0:01:33,776
你的顾客将

38
00:01:33,776 --> 0:01:35,186
能够从所有最喜欢的云服务

39
00:01:35,186 --> 0:01:36,716
供应商中 管理和浏览

40
00:01:36,716 --> 0:01:37,466
他们的文件

41
00:01:38,396 --> 0:01:39,836
搜索功能也很强大

42
00:01:39,836 --> 0:01:41,146
可以搜索所有的

43
00:01:41,146 --> 0:01:42,046
云服务供应商

44
00:01:43,276 --> 0:01:44,236
能够发现你喜欢用的文件夹

45
00:01:45,096 --> 0:01:46,276
这些你最喜欢的文件夹

46
00:01:46,276 --> 0:01:47,586
将会出现在侧边栏

47
00:01:48,636 --> 0:01:51,946
也能够用标签来管理文件夹

48
00:01:53,006 --> 0:01:55,196
最近项目使用的文件夹也会出现在

49
00:01:55,286 --> 0:01:55,946
最近项目标签中

50
00:02:00,186 --> 0:02:01,316
所以 通过在你的 App 中使用

51
00:02:01,316 --> 0:02:02,826
UIDocumentBrowserViewController

52
00:02:02,896 --> 0:02:04,276
你将为顾客提供

53
00:02:04,276 --> 0:02:05,796
一种连贯的体验

54
00:02:05,796 --> 0:02:07,166
把文件中的所有优势

55
00:02:07,166 --> 0:02:08,925
都聚集到你的 App 中

56
00:02:09,425 --> 0:02:11,026
它也使得你

57
00:02:11,026 --> 0:02:12,416
不需要编写自己的文稿浏览器

58
00:02:14,406 --> 0:02:15,686
这也允许你将精力放在

59
00:02:15,686 --> 0:02:16,846
完善你顾客的体验上

60
00:02:16,846 --> 0:02:18,966
当他们用你的 App 浏览

61
00:02:18,966 --> 0:02:20,566
或者编辑文稿时

62
00:02:21,716 --> 0:02:24,916
首先让我们看看去年的大会

63
00:02:24,916 --> 0:02:28,566
“建立伟大的基于文稿的 iOS App”

64
00:02:29,876 --> 0:02:32,096
为云服务供应商也提供了 API

65
00:02:33,786 --> 0:02:35,306
这个叫做 File Provider API

66
00:02:36,076 --> 0:02:37,506
你用这个来编写

67
00:02:37,506 --> 0:02:39,576
文件提供程序扩展

68
00:02:39,796 --> 0:02:42,196
和客户 UI 行为

69
00:02:42,196 --> 0:02:43,656
包括帐户登录界面

70
00:02:45,766 --> 0:02:47,466
对于 App 开发人员来说

71
00:02:47,466 --> 0:02:48,826
你不必通过 API 来

72
00:02:48,826 --> 0:02:50,246
让大家访问文件

73
00:02:50,246 --> 0:02:53,586
当你编写一个

74
00:02:53,996 --> 0:02:56,086
文件提供程序扩展 时

75
00:02:56,086 --> 0:02:57,336
它将会出现在文件 App 中

76
00:02:57,336 --> 0:02:58,296
出现在 UIDocumentBrowserView

77
00:02:58,296 --> 0:03:00,256
Controllers 中 在定位

78
00:02:58,296 --> 0:03:00,256
Controllers 中 在定位

79
00:03:00,256 --> 0:03:01,896
标签下 位于 Locations 这个部分

80
00:03:03,946 --> 0:03:07,746
因为登录是通过 FPUI

81
00:03:07,816 --> 0:03:09,596
ActionExtensionViewController 实现的

82
00:03:10,376 --> 0:03:11,646
你想要使用这个

83
00:03:11,646 --> 0:03:12,646
来减少和你的顾客之间的摩擦

84
00:03:12,646 --> 0:03:14,306
通过这种方式

85
00:03:14,306 --> 0:03:15,206
使得登录你的服务器更简单

86
00:03:16,096 --> 0:03:19,696
让我们通过几个例子来说明一下

87
00:03:19,916 --> 0:03:23,126
首先 在这个例子当中 

88
00:03:23,126 --> 0:03:24,136
你可以做的 或者用户

89
00:03:24,136 --> 0:03:25,796
可以做的 是登录到

90
00:03:25,796 --> 0:03:27,016
服务系统中 不被

91
00:03:27,016 --> 0:03:28,286
他们的工作流程所打断

92
00:03:28,366 --> 0:03:29,456
他们也不用离开 App 

93
00:03:29,676 --> 0:03:30,566
他们仅仅需要登录

94
00:03:30,566 --> 0:03:32,326
然后继续他们的工作就行

95
00:03:32,866 --> 0:03:35,056
应该尝试避免的是

96
00:03:35,056 --> 0:03:37,066
一些类似这样的东西

97
00:03:37,066 --> 0:03:39,096
有多余的 UI 元素

98
00:03:39,096 --> 0:03:40,576
或者屏幕商标

99
00:03:40,726 --> 0:03:41,766
你可以看到这个例子中的

100
00:03:41,766 --> 0:03:43,516
两个导航栏 或者两个取消按钮

101
00:03:44,386 --> 0:03:46,216
另一个尝试避免的例子是

102
00:03:46,216 --> 0:03:48,906
有一个简单的登录按钮

103
00:03:48,906 --> 0:03:50,616
在按钮中 登录所要做的是

104
00:03:50,616 --> 0:03:52,186
启动你的 App

105
00:03:53,046 --> 0:03:54,656
这会中断顾客的工作流程

106
00:03:55,036 --> 0:03:58,256
所以 我们应该努力避免这些

107
00:03:58,876 --> 0:04:00,136
最后 我们已经看到 

108
00:03:58,876 --> 0:04:00,136
最后 我们已经看到 

109
00:04:00,136 --> 0:04:02,996
所有开发人员和云服务供应商在去年

110
00:04:02,996 --> 0:04:04,246
所采用的这些技术

111
00:04:05,026 --> 0:04:06,966
所以有很多 App 早已使用了

112
00:04:06,966 --> 0:04:07,826
这项技术

113
00:04:08,706 --> 0:04:10,686
所以现在是在你的 App 中尝试采用

114
00:04:10,686 --> 0:04:12,236
UIDocumentBrowserViewController 

115
00:04:12,236 --> 0:04:13,536
的最佳时机

116
00:04:14,426 --> 0:04:15,516
如果你是一个

117
00:04:15,516 --> 0:04:17,396
现在还未被提供

118
00:04:17,476 --> 0:04:18,946
文件提供程序扩展 的云服务供应商

119
00:04:18,946 --> 0:04:19,805
如今是时候这样做了

120
00:04:20,696 --> 0:04:23,836
让我们谈谈一些新的东西

121
00:04:24,616 --> 0:04:26,636
首先 对于云服务供应商来说 

122
00:04:26,636 --> 0:04:28,956
我们在从事文件提供程序扩展时

123
00:04:28,956 --> 0:04:30,586
已经遇到了一些困难

124
00:04:31,316 --> 0:04:32,056
今天我们很开心地宣布

125
00:04:32,056 --> 0:04:34,036
有新工具的出现可以解决这些难题

126
00:04:34,446 --> 0:04:35,126
这个工具叫做 File 

127
00:04:35,126 --> 0:04:36,586
Provider-Validation 工具

128
00:04:37,756 --> 0:04:39,486
这个工具将指导你帮助你

129
00:04:39,486 --> 0:04:41,376
将运行测试

130
00:04:41,376 --> 0:04:42,376
向你展示 文件提供程序扩展 中的问题

131
00:04:42,376 --> 0:04:44,836
指导你修复这些问题

132
00:04:45,496 --> 0:04:46,466
如今从 developer.apple.com 中

133
00:04:46,466 --> 0:04:48,206
下载也是可行的

134
00:04:48,336 --> 0:04:49,886
当你下载的时候

135
00:04:50,666 --> 0:04:51,876
你将遇到一些东西

136
00:04:52,706 --> 0:04:53,746
你将遇到一组资源文件

137
00:04:53,746 --> 0:04:56,196
你需要添加到你的 文件提供程序扩展中

138
00:04:56,196 --> 0:04:58,666
安装一个 iOS App

139
00:04:58,666 --> 0:05:01,306
在你的 iPad 中运行

140
00:04:58,666 --> 0:05:01,306
在你的 iPad 中运行

141
00:05:03,046 --> 0:05:04,506
一旦你修改了你的文件提供程序项目

142
00:05:04,506 --> 0:05:07,076
在你的 iPad 上安装了这个 App

143
00:05:07,076 --> 0:05:08,486
并且运行它

144
00:05:08,946 --> 0:05:09,876
将会出现一个

145
00:05:09,876 --> 0:05:11,446
像这样的屏幕

146
00:05:11,866 --> 0:05:13,056
你的文件提供程序将会被列出来

147
00:05:13,056 --> 0:05:14,106
在左侧进行展示

148
00:05:14,106 --> 0:05:15,566
当你轻点时

149
00:05:15,626 --> 0:05:16,886
会有一个运行按钮

150
00:05:16,886 --> 0:05:18,676
你可以点按然后

151
00:05:18,676 --> 0:05:21,136
按照你的文件提供拓展程序 来运行全套测试

152
00:05:22,246 --> 0:05:23,106
当你做完这件事情 

153
00:05:23,106 --> 0:05:25,466
你会看到一个成功和失败的列表

154
00:05:26,066 --> 0:05:26,846
你想要轻点那些失败的

155
00:05:26,846 --> 0:05:29,446
搞清楚失败的原因

156
00:05:29,446 --> 0:05:30,376
找出你代码中的错误

157
00:05:31,186 --> 0:05:32,056
在周四和周五的实验室

158
00:05:32,056 --> 0:05:33,676
我们将对你们

159
00:05:33,676 --> 0:05:36,956
提供帮助

160
00:05:38,516 --> 0:05:40,656
今年要宣布的还有一个令人激动的消息

161
00:05:40,656 --> 0:05:43,096
就是 Siri 捷径

162
00:05:43,126 --> 0:05:45,946
我们很高兴的地说 Siri 捷径

163
00:05:45,946 --> 0:05:47,386
也列入文件提供程序拓展中了

164
00:05:48,266 --> 0:05:50,136
这个所做的是屏幕会出现

165
00:05:50,196 --> 0:05:52,306
最近项目使用的

166
00:05:52,306 --> 0:05:54,116
被打开或者被创建的文件

167
00:05:54,116 --> 0:05:55,326
它们在搜索者锁屏

168
00:05:55,326 --> 0:05:57,896
中都会出现

169
00:05:58,986 --> 0:06:01,796
你能够你的顾客也能够

170
00:05:58,986 --> 0:06:01,796
你能够你的顾客也能够

171
00:06:01,796 --> 0:06:05,096
在设备之间同步使用捷径

172
00:06:05,566 --> 0:06:06,436
需要注意的是

173
00:06:06,436 --> 0:06:07,686
在设备之间同步时

174
00:06:08,666 --> 0:06:10,526
为了支持这项功能

175
00:06:10,526 --> 0:06:12,396
你的文件提供程序

176
00:06:12,396 --> 0:06:14,376
需要为每一个特定客户

177
00:06:14,486 --> 0:06:16,656
的所有使用设备

178
00:06:16,656 --> 0:06:18,616
使用特定标识符

179
00:06:19,426 --> 0:06:21,266
如果是这样

180
00:06:21,316 --> 0:06:22,976
或者你可以使其发生

181
00:06:22,976 --> 0:06:24,456
你所需要做的是在你的文件提供程序中

182
00:06:24,456 --> 0:06:26,366
支持 Siri 捷径

183
00:06:26,366 --> 0:06:27,986
即添加 NSFileProvider

184
00:06:28,116 --> 0:06:30,136
UsesUniqueItemIdentifiers

185
00:06:30,136 --> 0:06:32,296
AcrossDevices 到你的文件提供拓展程序

186
00:06:32,296 --> 0:06:34,406
中的 info.plist 文件

187
00:06:35,126 --> 0:06:36,026
一旦你完成这个

188
00:06:36,026 --> 0:06:37,846
提交到商店 你就操作好了

189
00:06:38,726 --> 0:06:40,476
对于 App 的开发人员来说

190
00:06:40,476 --> 0:06:41,416
你不需要做任何事

191
00:06:42,616 --> 0:06:44,196
有关 Siri 捷径的信息

192
00:06:44,196 --> 0:06:45,736
请查看一下昨天的大会

193
00:06:45,736 --> 0:06:47,836
介绍 Siri 捷径

194
00:06:50,596 --> 0:06:54,176
今年同样 我们很高兴地宣布

195
00:06:54,176 --> 0:06:55,256
我们正在发布

196
00:06:55,256 --> 0:06:56,426
Particle Sample App

197
00:06:57,206 --> 0:06:58,196
这是一个我们示例代码

198
00:06:58,196 --> 0:06:59,516
我们去年在大会上使用过

199
00:06:59,516 --> 0:07:00,516
来展示如何在你的 App 中使用

200
00:06:59,516 --> 0:07:00,516
来展示如何在你的 App 中使用

201
00:07:00,516 --> 0:07:03,056
UIDocumentBrowserViewController 的

202
00:07:03,056 --> 0:07:05,826
它看起来是这样的 

203
00:07:06,366 --> 0:07:07,836
使用 UIDocumentBrowserViewController

204
00:07:08,206 --> 0:07:09,416
作为它主要的 viewController

205
00:07:09,806 --> 0:07:12,546
它定义一个文件的格式

206
00:07:13,296 --> 0:07:17,046
完成状态的恢复

207
00:07:17,606 --> 0:07:20,056
并且运用 UIDocumentPickerViewController

208
00:07:20,056 --> 0:07:21,796
来输入素材

209
00:07:23,406 --> 0:07:24,676
现在你能够下载这个了

210
00:07:25,336 --> 0:07:27,266
在 WW App 中可以获得链接

211
00:07:27,266 --> 0:07:29,226
你也可以上网找

212
00:07:29,786 --> 0:07:31,656
这就是 Particles

213
00:07:33,356 --> 0:07:34,636
所以 为此 我想要 

214
00:07:34,636 --> 0:07:35,976
介绍 Thomas 来到台上 

215
00:07:36,516 --> 0:07:41,546
[ 掌声 ]

216
00:07:42,046 --> 0:07:42,676
&gt;&gt; 大家好

217
00:07:43,286 --> 0:07:44,856
我是 Thomas 一名

218
00:07:44,856 --> 0:07:46,136
文稿管理团队的软件工程师

219
00:07:46,526 --> 0:07:47,796
我将要教大家

220
00:07:47,796 --> 0:07:49,806
如何利用你的 App 中的

221
00:07:49,806 --> 0:07:54,026
iOS 的文稿管理功能

222
00:07:54,616 --> 0:07:56,836
我们还会一起讨论

223
00:07:56,946 --> 0:07:58,536
文稿选取器

224
00:07:58,536 --> 0:08:01,686
和文稿浏览器是什么

225
00:07:58,536 --> 0:08:01,686
和文稿浏览器是什么

226
00:08:01,686 --> 0:08:02,476
什么时候以及如何使用它们

227
00:08:03,566 --> 0:08:05,356
我们将添加一个文稿选取器到

228
00:08:05,356 --> 0:08:07,676
我们的样本 App Particles 中

229
00:08:08,696 --> 0:08:11,266
最后我们讨论文稿的类型

230
00:08:11,356 --> 0:08:13,016
以及如何

231
00:08:13,016 --> 0:08:14,696
在 Xcode 中正确地配置它们

232
00:08:17,256 --> 0:08:18,936
如今与这些文稿

233
00:08:18,936 --> 0:08:21,146
交互意味着什么呢

234
00:08:21,626 --> 0:08:26,926
当然 这意味着你需要提供 UI

235
00:08:26,926 --> 0:08:29,356
让你的顾客组织他们文稿

236
00:08:29,816 --> 0:08:32,246
在你的 App 容器中开始

237
00:08:32,846 --> 0:08:35,846
但是由于大多数文稿

238
00:08:35,846 --> 0:08:38,265
现在都在云端中 这意味着

239
00:08:38,426 --> 0:08:39,556
你需要让它们访问

240
00:08:39,556 --> 0:08:41,246
储存在云服务的文稿

241
00:08:41,936 --> 0:08:43,946
以及其他 App 中的文稿

242
00:08:44,876 --> 0:08:47,346
你应该怎么做

243
00:08:47,546 --> 0:08:50,196
我们为你准备两种解决方案

244
00:08:50,966 --> 0:08:53,336
文稿选取器

245
00:08:53,336 --> 0:08:55,136
和文稿浏览器

246
00:08:55,246 --> 0:08:56,936
二者之间的区别

247
00:08:56,936 --> 0:08:57,936
又是什么呢

248
00:08:59,636 --> 0:09:02,956
它们都让你浏览

249
00:08:59,636 --> 0:09:02,956
它们都让你浏览

250
00:09:02,956 --> 0:09:04,606
存储在你的 iOS 设备中的文件

251
00:09:04,606 --> 0:09:06,946
和在多种云服务中的文件

252
00:09:07,426 --> 0:09:11,796
也让你从其他 App 中访问文件

253
00:09:13,616 --> 0:09:16,076
然而 它们有不同的使用案例

254
00:09:16,656 --> 0:09:19,186
在很短的时间内

255
00:09:19,416 --> 0:09:21,286
你可以使用文稿选取器

256
00:09:21,286 --> 0:09:23,496
和你想要寻找的文件

257
00:09:23,496 --> 0:09:26,566
进行快速的用户交互

258
00:09:27,096 --> 0:09:29,906
另一方面文稿浏览器

259
00:09:29,906 --> 0:09:35,906
有望成为你 App 中主要的文稿浏览 UI

260
00:09:38,616 --> 0:09:41,146
让我们先开始看文稿浏览器

261
00:09:44,936 --> 0:09:46,986
就像 Brandon 提到的

262
00:09:46,986 --> 0:09:48,536
文稿浏览器是

263
00:09:48,646 --> 0:09:49,956
当你启动任何 UI App 时

264
00:09:49,956 --> 0:09:50,876
所看到的东西

265
00:09:50,876 --> 0:09:54,136
如果你的 App 是基于文稿的

266
00:09:54,696 --> 0:09:56,206
你应该使用一个

267
00:09:56,236 --> 0:09:58,786
文稿浏览器来展示这些文件

268
00:10:00,316 --> 0:10:01,686
如果你这样做了

269
00:10:02,596 --> 0:10:04,026
你的顾客启动 App 时会

270
00:10:04,026 --> 0:10:06,266
看到这些

271
00:10:06,936 --> 0:10:08,796
他们会立马找到这些文件

272
00:10:08,796 --> 0:10:11,796
这是很重要的事情

273
00:10:13,176 --> 0:10:14,756
文稿浏览器是全屏的

274
00:10:14,756 --> 0:10:17,236
可以让你的顾客

275
00:10:17,236 --> 0:10:19,506
打开和组织你的 App

276
00:10:19,506 --> 0:10:21,496
所处理的文稿

277
00:10:25,076 --> 0:10:26,966
就像 Brandon 所说

278
00:10:26,966 --> 0:10:28,206
它拥有所有文件 App 的功能

279
00:10:29,556 --> 0:10:32,326
所以搜索 标签 收藏

280
00:10:32,456 --> 0:10:34,546
最近项目 所有的这些都是免费的

281
00:10:34,546 --> 0:10:36,976
我们可以为你编辑所有内容

282
00:10:41,046 --> 0:10:43,966
可以使用自己的按钮

283
00:10:43,966 --> 0:10:46,096
进行自定义 比如

284
00:10:46,096 --> 0:10:47,116
右上角的按钮

285
00:10:47,116 --> 0:10:51,486
或者来匹配你的 App 外观

286
00:10:52,316 --> 0:10:53,986
正如你所看到的 Numbers 表格和

287
00:10:53,986 --> 0:10:56,106
Keynote 讲演看起来完全不同

288
00:10:56,106 --> 0:10:58,206
但是都在文稿浏览器控制器的

289
00:10:58,206 --> 0:10:59,036
基础上建立的

290
00:11:00,616 --> 0:11:02,856
当然 一旦你的顾客

291
00:11:02,856 --> 0:11:05,096
打开一个文稿

292
00:11:05,096 --> 0:11:08,186
你将会在浏览器顶端

293
00:11:08,356 --> 0:11:10,076
呈现你自己的 UI

294
00:11:10,076 --> 0:11:11,576
例如呈现你的文稿 UI

295
00:11:12,146 --> 0:11:13,866
如今 因为文稿 

296
00:11:13,866 --> 0:11:15,466
浏览器是你 App 的入口点

297
00:11:15,466 --> 0:11:18,916
最好让它成为根视图控制器

298
00:11:18,916 --> 0:11:21,996
然而 我们去年从你们那里

299
00:11:21,996 --> 0:11:23,616
得到很多反馈说

300
00:11:23,616 --> 0:11:25,696
使它成为

301
00:11:25,696 --> 0:11:27,626
根视图控制器并不容易

302
00:11:28,156 --> 0:11:31,116
如果是这样 我们想要

303
00:11:31,116 --> 0:11:33,246
说明一下去年给出的指南

304
00:11:33,776 --> 0:11:36,556
文稿浏览器也可以

305
00:11:36,556 --> 0:11:38,016
以全屏的方式进行呈现文稿 

306
00:11:38,016 --> 0:11:41,976
很可能就在启动后不久

307
00:11:43,496 --> 0:11:45,956
然而 这也意味着

308
00:11:45,956 --> 0:11:48,466
你 App 的起点

309
00:11:48,466 --> 0:11:50,806
在基于文稿的 App 中

310
00:11:50,806 --> 0:11:52,976
我们首先应该看到的是文稿

311
00:11:55,956 --> 0:11:58,286
所以 我们不建议

312
00:11:58,286 --> 0:12:01,996
离开浏览器

313
00:11:58,286 --> 0:12:01,996
离开浏览器

314
00:12:02,636 --> 0:12:04,686
如果你认为你需要隐藏

315
00:12:04,866 --> 0:12:07,816
浏览器 也许你可能

316
00:12:07,816 --> 0:12:09,586
需要寻找的是文稿

317
00:12:09,586 --> 0:12:11,686
选取起 我们接下来会进行讨论

318
00:12:14,056 --> 0:12:16,156
如何通过新的

319
00:12:16,226 --> 0:12:18,296
文稿浏览器控制器开始

320
00:12:18,626 --> 0:12:19,806
你可以在 Xcode 中打开一个新的 App

321
00:12:19,806 --> 0:12:21,676
然后使用

322
00:12:21,676 --> 0:12:23,006
基于文稿的 App 模板

323
00:12:24,446 --> 0:12:26,016
这个模板将给你

324
00:12:26,106 --> 0:12:28,116
基于文稿浏览器控制器的 App

325
00:12:29,226 --> 0:12:31,286
如果你有正在用的 App

326
00:12:31,286 --> 0:12:32,576
你想向其中添加一个

327
00:12:32,576 --> 0:12:34,226
DocumentBrowserViewController

328
00:12:34,226 --> 0:12:36,946
你可以拖一个文稿浏览器

329
00:12:36,946 --> 0:12:39,336
到你的 Storyboard 中

330
00:12:39,336 --> 0:12:41,976
并且在 Xcode 中用初始试图控制器复选框

331
00:12:47,606 --> 0:12:48,966
一旦你有了文稿

332
00:12:48,966 --> 0:12:50,846
浏览器控制器 你就可以进行自定义

333
00:12:52,216 --> 0:12:54,096
你可以把自己的按钮加到

334
00:12:54,096 --> 0:12:55,496
栏和菜单中

335
00:12:56,036 --> 0:12:58,966
你也可以设置自己的颜色

336
00:12:58,966 --> 0:12:59,966
和主题来匹配你 App 的外观

337
00:13:04,536 --> 0:13:07,356
你也可以自定义开关

338
00:13:07,356 --> 0:13:08,796
文稿动画

339
00:13:09,186 --> 0:13:10,436
这样一来你就可以放大

340
00:13:10,436 --> 0:13:12,016
从文稿的中心 

341
00:13:12,016 --> 0:13:14,376
转换到你自己的文件附加 UI

342
00:13:14,376 --> 0:13:16,136
想要了解这个

343
00:13:16,136 --> 0:13:18,196
请观看去年的大会

344
00:13:18,196 --> 0:13:19,986
我们在其中详细讲解了这些

345
00:13:22,046 --> 0:13:24,776
正如 Brandon 所说 我们

346
00:13:24,776 --> 0:13:26,906
在去年的大会上已经制作了示例 App

347
00:13:26,906 --> 0:13:28,816
就像现在可以获得的

348
00:13:28,846 --> 0:13:30,356
示例代码

349
00:13:32,766 --> 0:13:34,816
如今文稿选取器是一件

350
00:13:34,816 --> 0:13:36,606
截然不同的东西

351
00:13:36,656 --> 0:13:40,896
你使用它来让你的客户

352
00:13:41,016 --> 0:13:42,986
打开存储在

353
00:13:43,046 --> 0:13:45,046
云服务或者其他

354
00:13:45,046 --> 0:13:47,886
App 中的文稿或素材 但是只在

355
00:13:47,886 --> 0:13:50,226
选择文稿的时候它出现 一会就消失了

356
00:13:51,556 --> 0:13:53,576
文稿选取起就是我们

357
00:13:53,576 --> 0:13:54,236
在邮件中使用的东西

358
00:13:55,776 --> 0:13:57,686
当你想在邮件中加入一个文件

359
00:13:57,686 --> 0:14:00,316
你点击添加附件按钮

360
00:13:57,686 --> 0:14:00,316
你点击添加附件按钮

361
00:14:00,316 --> 0:14:03,526
这张表单就会弹出来

362
00:14:04,576 --> 0:14:05,976
这就是一个文稿选取器

363
00:14:06,986 --> 0:14:09,416
你选择一个添加一个文件

364
00:14:10,206 --> 0:14:11,236
这个表就消失了

365
00:14:11,806 --> 0:14:15,086
在 iWork 中是一样的

366
00:14:15,976 --> 0:14:18,056
如果你想添加一个 PDF

367
00:14:18,376 --> 0:14:20,516
到你的 Pages 文稿中

368
00:14:22,066 --> 0:14:23,736
你将从按钮轻点插入

369
00:14:23,736 --> 0:14:26,226
相同的表单会弹出来

370
00:14:26,866 --> 0:14:28,506
你选择一个文件 表单就消失了

371
00:14:29,856 --> 0:14:31,436
所以如果你需要展示用户

372
00:14:31,436 --> 0:14:33,676
界面来让你的客户

373
00:14:34,556 --> 0:14:36,406
打开 从云端中浏览东西

374
00:14:36,406 --> 0:14:39,176
一旦选中文件它就会藏起来

375
00:14:39,176 --> 0:14:41,136
文稿选取器对你来说

376
00:14:41,136 --> 0:14:42,726
是个很好的选择

377
00:14:45,336 --> 0:14:48,746
我们为什么需要给你一个文稿选取器呢

378
00:14:50,066 --> 0:14:52,156
因为正如我们所说的

379
00:14:52,426 --> 0:14:54,696
文稿可能在多个位置中

380
00:14:55,276 --> 0:14:57,386
它们可能在云端中

381
00:14:57,386 --> 0:14:58,316
也可能在其他 App 容器中

382
00:14:59,106 --> 0:15:03,576
而且在默认情况下 你无法添加访问权限

383
00:14:59,106 --> 0:15:03,576
而且在默认情况下 你无法添加访问权限

384
00:15:03,796 --> 0:15:06,226
所以 你需要做一些事情来获得

385
00:15:06,256 --> 0:15:08,586
访问权限 在这些不同的位置中

386
00:15:08,586 --> 0:15:10,236
复制和移动文稿

387
00:15:10,236 --> 0:15:16,986
这就是文稿选取器所做的事

388
00:15:17,636 --> 0:15:19,676
一旦文件被选中 它就消失

389
00:15:19,676 --> 0:15:21,756
所以如果你想让

390
00:15:21,866 --> 0:15:23,566
什么在屏幕上待的久一点

391
00:15:23,566 --> 0:15:24,986
你应该查看 

392
00:15:24,986 --> 0:15:25,916
文稿浏览器

393
00:15:31,406 --> 0:15:33,136
你可以用文件选取器做什么呢

394
00:15:33,996 --> 0:15:35,466
你可以用它干很多事情

395
00:15:36,346 --> 0:15:38,216
你可以用它在云端中

396
00:15:38,316 --> 0:15:39,466
直接访问文件

397
00:15:42,536 --> 0:15:45,646
现在 通过复制 你可以

398
00:15:45,786 --> 0:15:50,106
把文件移动到

399
00:15:50,106 --> 0:15:52,366
云端中来实现一个安全的

400
00:15:52,366 --> 0:15:52,956
云服务功能

401
00:15:53,456 --> 0:15:56,556
复制文稿通常令人

402
00:15:56,676 --> 0:15:59,106
很困惑 但是如果你

403
00:15:59,106 --> 0:16:00,896
真的想复制文件 你可以使用它

404
00:15:59,106 --> 0:16:00,896
真的想复制文件 你可以使用它

405
00:16:01,366 --> 0:16:04,796
从云端复制东西或者复制东西到云端中去

406
00:16:09,336 --> 0:16:12,506
让我们假设我们的顾客

407
00:16:12,506 --> 0:16:14,646
想要访问一部

408
00:16:14,646 --> 0:16:15,646
他们储存在云服务中的电影

409
00:16:16,506 --> 0:16:18,076
这就是使用文稿

410
00:16:18,076 --> 0:16:18,746
选取器控制器的一个绝佳例子

411
00:16:20,116 --> 0:16:21,626
你创建一个文稿选取器

412
00:16:21,626 --> 0:16:23,426
控制器 你指定

413
00:16:23,426 --> 0:16:25,566
你想让用户选择的文件类型

414
00:16:25,566 --> 0:16:27,306
作为第一个文稿

415
00:16:28,166 --> 0:16:29,666
第二个文稿是

416
00:16:29,666 --> 0:16:34,276
我们在之前的幻灯片中描述的常量之一

417
00:16:34,366 --> 0:16:36,046
然后你设置文稿

418
00:16:36,046 --> 0:16:38,026
picker.delegate 因为这是

419
00:16:38,026 --> 0:16:41,446
我们得知你的

420
00:16:41,706 --> 0:16:43,106
顾客已经选择他们的文件的一种方式

421
00:16:43,106 --> 0:16:45,866
然后你将它呈现出来

422
00:16:47,016 --> 0:16:49,376
一旦文件被选中 你将

423
00:16:49,376 --> 0:16:53,976
调用这个委托方法

424
00:16:54,136 --> 0:16:55,296
你用这种方法获得 

425
00:16:55,296 --> 0:16:56,766
你的文件 URL

426
00:16:57,426 --> 0:16:58,586
你可以直接使用它们

427
00:17:00,076 --> 0:17:03,196
你可以获得不止一个 URL

428
00:17:03,636 --> 0:17:05,236
因为你可以在

429
00:17:05,236 --> 0:17:07,646
选取器中设置一种属性

430
00:17:07,646 --> 0:17:09,566
你的顾客可以一次同时选择

431
00:17:09,566 --> 0:17:11,185
多种文件

432
00:17:15,386 --> 0:17:17,156
所以 让我们继续

433
00:17:17,286 --> 0:17:20,286
添加一个文稿选取器到我们去年的

434
00:17:20,286 --> 0:17:21,886
示例 App Particles 中 

435
00:17:26,455 --> 0:17:28,626
这是去年选择的 App

436
00:17:28,986 --> 0:17:30,316
它在文稿浏览器的基础之上

437
00:17:30,316 --> 0:17:32,486
允许我选择一个文件来打开

438
00:17:33,496 --> 0:17:35,116
正如你所看到的 我有最近项目

439
00:17:35,116 --> 0:17:36,876
有标签 有搜索

440
00:17:36,876 --> 0:17:39,276
有浏览 来列出所有的来源

441
00:17:39,796 --> 0:17:41,136
所有这些都是免费的

442
00:17:42,506 --> 0:17:44,976
现在 我可以继续 打开

443
00:17:44,976 --> 0:17:48,006
这个文件 可以微调这个

444
00:17:48,006 --> 0:17:49,536
漂亮的粒子系统

445
00:17:50,076 --> 0:17:53,586
现在 我的顾客喜欢这款 App

446
00:17:54,436 --> 0:17:56,546
但是他们想要 

447
00:17:56,546 --> 0:17:59,906
粒子变得更好看一点儿

448
00:18:00,086 --> 0:18:02,386
所以他们要求设计师们

449
00:18:02,426 --> 0:18:03,926
设计出一些更好看的

450
00:18:03,976 --> 0:18:05,586
粒子图像 

451
00:18:05,586 --> 0:18:07,336
设计师们已经在 iCloud 中共享了

452
00:18:07,336 --> 0:18:08,476
这些图像

453
00:18:09,346 --> 0:18:11,456
所以我们怎样获取这些图像然后

454
00:18:11,746 --> 0:18:12,496
对它们进行自定义呢

455
00:18:13,246 --> 0:18:15,726
我们将要做的是添加一个

456
00:18:15,726 --> 0:18:17,146
选择图像按钮在

457
00:18:17,146 --> 0:18:19,866
导航栏中 从 iCloud 中选择一个

458
00:18:19,866 --> 0:18:22,546
文件 然后自定义

459
00:18:22,816 --> 0:18:23,496
这些粒子

460
00:18:25,196 --> 0:18:26,476
所以 你可以打开你的

461
00:18:26,476 --> 0:18:29,946
Storyboard 在这里我在操作控制器

462
00:18:30,836 --> 0:18:32,306
我将拖一个新的按钮

463
00:18:32,306 --> 0:18:34,966
到编辑器中

464
00:18:40,616 --> 0:18:44,846
我将设置选择图像

465
00:18:51,156 --> 0:18:54,586
选择图像 现在 我要写代码来呈现

466
00:18:55,066 --> 0:18:59,206
控制器中的 

467
00:18:59,206 --> 0:19:00,696
文稿选取器

468
00:18:59,206 --> 0:19:00,696
文稿选取器

469
00:19:01,116 --> 0:19:05,956
我可以从我的按钮中

470
00:19:06,786 --> 0:19:10,036
拖到源代码中

471
00:19:10,036 --> 0:19:11,996
我同意叫它选择图像

472
00:19:12,556 --> 0:19:14,986
然后选择这里再连接

473
00:19:16,386 --> 0:19:17,546
现在我的代码出现了两次

474
00:19:17,886 --> 0:19:20,406
让我在一个更大的窗口

475
00:19:21,156 --> 0:19:21,976
为大家进行展示

476
00:19:26,076 --> 0:19:28,556
我在使用我的 ChooseImage 方法

477
00:19:28,996 --> 0:19:31,396
我首先要创建

478
00:19:31,486 --> 0:19:32,696
一个 UIDocumentPickerController

479
00:19:32,776 --> 0:19:34,826
我指定了

480
00:19:34,826 --> 0:19:36,006
想让顾客选择的文件类型

481
00:19:36,396 --> 0:19:40,666
这是 UTTypeImage 和模式

482
00:19:40,966 --> 0:19:42,306
我在使用输入因为我

483
00:19:42,306 --> 0:19:44,896
想把粒子图像嵌入到

484
00:19:44,896 --> 0:19:45,536
我的文稿中

485
00:19:46,236 --> 0:19:49,316
但是在大多数情况下 你将使用的是打开

486
00:19:51,536 --> 0:19:54,256
你设置你的文稿 picker.delegate

487
00:19:54,796 --> 0:19:56,056
然后将其呈现出来

488
00:19:57,406 --> 0:19:59,986
当文稿选取器被调用

489
00:19:59,986 --> 0:20:02,796
文件被选中

490
00:19:59,986 --> 0:20:02,796
文件被选中

491
00:20:02,796 --> 0:20:03,976
你又返回到了原来的界面

492
00:20:04,046 --> 0:20:07,436
所以 我们需要用这种方法完成 document.Picker

493
00:20:08,136 --> 0:20:10,516
我不知道你注意到没有 但是

494
00:20:10,986 --> 0:20:14,136
我没有设置一种属性来

495
00:20:14,446 --> 0:20:16,416
选择文件夹

496
00:20:17,716 --> 0:20:20,006
所以 我将要检查

497
00:20:20,006 --> 0:20:22,046
这儿只有一个 URL

498
00:20:24,296 --> 0:20:27,016
找到第一个 URL

499
00:20:27,076 --> 0:20:28,306
从那创建一个图像

500
00:20:29,296 --> 0:20:31,756
在我们的粒子系统中设置它

501
00:20:31,756 --> 0:20:32,976
这也许是[ 音质不清晰 ]

502
00:20:34,396 --> 0:20:36,156
让我们再运行一次

503
00:20:37,836 --> 0:20:39,796
它启动我的 App 并且会

504
00:20:39,796 --> 0:20:40,976
迅速打开我的模拟器

505
00:20:47,776 --> 0:20:48,566
所以 我现在到这了

506
00:20:48,636 --> 0:20:49,976
我在模拟器里

507
00:20:50,026 --> 0:20:51,076
我可以打开我的文件

508
00:20:51,076 --> 0:20:52,716
在我的导航栏中

509
00:20:52,716 --> 0:20:55,426
我有了这个新的选择 图像按钮

510
00:20:55,426 --> 0:20:58,236
我可以轻点它 然后我的文稿

511
00:20:58,236 --> 0:20:59,446
选取器就出来了

512
00:20:59,446 --> 0:21:01,136
正如你所看到的 再一次 我们

513
00:20:59,446 --> 0:21:01,136
正如你所看到的 再一次 我们

514
00:21:01,166 --> 0:21:02,296
在文件 App 中有了所有的图像

515
00:21:02,296 --> 0:21:03,926
我们可以搜索我们的文件 你有标签

516
00:21:04,256 --> 0:21:06,476
你可以浏览

517
00:21:06,476 --> 0:21:07,696
所有这些都是免费的

518
00:21:09,266 --> 0:21:12,146
现在 我的粒子图像

519
00:21:12,146 --> 0:21:13,066
分享到了 

520
00:21:13,066 --> 0:21:14,576
iCloud 所以它们出现在

521
00:21:14,576 --> 0:21:15,536
［ 音质不清晰 ］

522
00:21:15,536 --> 0:21:18,166
再一次 使用这个小星星的图像

523
00:21:18,866 --> 0:21:21,976
选择它 我的粒子就变成了小星星

524
00:21:22,516 --> 0:21:28,616
［ 掌声 ］

525
00:21:29,116 --> 0:21:30,126
这个很简单

526
00:21:30,736 --> 0:21:32,646
当你回来工作时

527
00:21:32,646 --> 0:21:33,816
你将能够立刻添加

528
00:21:33,816 --> 0:21:36,796
一个文稿选取器到你的 App 中

529
00:21:37,386 --> 0:21:39,836
它没有很多代码

530
00:21:39,836 --> 0:21:41,806
也不依赖任何

531
00:21:41,806 --> 0:21:42,736
第三方资料库

532
00:21:43,576 --> 0:21:45,416
你的顾客可以很简单地访问

533
00:21:45,416 --> 0:21:47,916
他们的文件 不管文件存储在哪儿

534
00:21:48,446 --> 0:21:51,116
现在 你注意到

535
00:21:51,116 --> 0:21:53,536
在演示中 我们再一次提到了文件类型

536
00:21:53,866 --> 0:21:55,596
你们当中的很多人可能

537
00:21:55,596 --> 0:21:56,866
不知道文件类型是什么

538
00:21:57,246 --> 0:22:01,296
让我们谈一谈文件类型

539
00:21:57,246 --> 0:22:01,296
让我们谈一谈文件类型

540
00:22:02,186 --> 0:22:04,126
文件类型可以让系统

541
00:22:04,126 --> 0:22:05,706
识别 你的 App 知道如何处理

542
00:22:05,706 --> 0:22:07,516
哪种文件

543
00:22:08,036 --> 0:22:12,176
它们很重要因为

544
00:22:12,366 --> 0:22:16,376
当在文件 App 中选择文件时

545
00:22:16,376 --> 0:22:17,916
它们让 iOS 打开你的 App

546
00:22:19,096 --> 0:22:21,456
它们也会让它在

547
00:22:21,596 --> 0:22:22,406
分享表单中显示你的 App

548
00:22:23,016 --> 0:22:26,436
最后它允许 iOS

549
00:22:26,436 --> 0:22:27,976
为你的文稿选择合适的图标

550
00:22:29,126 --> 0:22:30,626
所以 如果我想正确配置我的类型

551
00:22:30,626 --> 0:22:32,336
如果我想

552
00:22:32,336 --> 0:22:35,406
进行扩展 我将在浏览

553
00:22:35,406 --> 0:22:37,426
粒子文件时在文件 App 中看到这个

554
00:22:37,906 --> 0:22:40,606
如果我没有 我将看到的

555
00:22:40,606 --> 0:22:42,456
是这个 不太美观

556
00:22:42,456 --> 0:22:44,236
我的客户也不能

557
00:22:44,236 --> 0:22:46,056
从文件 App 中打开我的文件

558
00:22:47,256 --> 0:22:48,856
所以 让我们一起设置这个

559
00:22:51,376 --> 0:22:55,036
当你想设置文稿类型 这有两个步骤

560
00:22:55,966 --> 0:22:57,376
首先你需要声明类型

561
00:22:57,376 --> 0:22:58,986
如果不是已被 iOS

562
00:22:58,986 --> 0:23:00,936
声明过的 接下来你需要 

563
00:22:58,986 --> 0:23:00,936
声明过的 接下来你需要 

564
00:23:00,936 --> 0:23:04,216
确认 告诉 iOS 你可以

565
00:23:04,216 --> 0:23:06,486
浏览或者编辑这种文件类型

566
00:23:07,136 --> 0:23:10,326
首先开始声明类型

567
00:23:10,836 --> 0:23:13,056
第一个问题是你需要

568
00:23:13,056 --> 0:23:15,616
问问自己 你需要声明它吗

569
00:23:16,486 --> 0:23:19,146
因为在多数情况下 你将

570
00:23:19,146 --> 0:23:20,666
处理普通的文件类型

571
00:23:21,176 --> 0:23:23,316
比如视频 图像 PDF

572
00:23:23,366 --> 0:23:24,896
展示和电子表格

573
00:23:25,966 --> 0:23:28,226
如果是这样 iOS

574
00:23:28,226 --> 0:23:30,416
很可能已为你声明了类型

575
00:23:31,266 --> 0:23:32,626
想要知道是否属实

576
00:23:32,626 --> 0:23:35,056
你可以在这个短的

577
00:23:35,056 --> 0:23:37,846
URL 中查看文件

578
00:23:40,536 --> 0:23:42,996
如果是这样 很好 你

579
00:23:42,996 --> 0:23:45,386
不需要再做任何事 

580
00:23:45,386 --> 0:23:47,746
你可以立即确认类型了

581
00:23:50,496 --> 0:23:53,276
另一种常见的情况是

582
00:23:53,276 --> 0:23:55,326
当你写入一个 App 它定义

583
00:23:55,446 --> 0:23:56,756
它自己的文件格式

584
00:23:57,856 --> 0:23:58,996
你创造了自己的文件

585
00:23:58,996 --> 0:24:01,546
格式 你定义它的类型

586
00:23:58,996 --> 0:24:01,546
格式 你定义它的类型

587
00:24:02,466 --> 0:24:03,716
接下来你应该声明你的

588
00:24:03,716 --> 0:24:06,406
类型 正如输出的那样 告诉

589
00:24:06,406 --> 0:24:08,986
iOS 你有权力声明

590
00:24:08,986 --> 0:24:10,166
这个文件类型

591
00:24:12,216 --> 0:24:14,316
这就是我所在的情景

592
00:24:14,316 --> 0:24:17,536
在文件 App 中 对不起

593
00:24:18,016 --> 0:24:18,816
在 Particles App 中

594
00:24:19,236 --> 0:24:21,956
我的 Particles 文件格式是我自己设置的

595
00:24:21,996 --> 0:24:25,976
所以我可以打开 Xcode

596
00:24:25,976 --> 0:24:29,346
来设置这种类型

597
00:24:29,536 --> 0:24:31,996
在这个输出的 UI

598
00:24:31,996 --> 0:24:34,346
部分 可以让我编辑自己的 

599
00:24:34,346 --> 0:24:37,176
info.plist 我指定类型标识符

600
00:24:37,176 --> 0:24:40,846
这是一个我选择的字符串

601
00:24:41,516 --> 0:24:42,696
所以 接下来是

602
00:24:42,696 --> 0:24:44,766
一个例子 有关示例

603
00:24:44,766 --> 0:24:50,026
代码 粒子 我需要

604
00:24:50,026 --> 0:24:51,276
声明一系列父类型

605
00:24:51,276 --> 0:24:53,186
在 Conforms To 字段中

606
00:24:54,396 --> 0:24:58,356
什么是父类型

607
00:24:58,536 --> 0:25:01,406
类型形成一棵树 

608
00:24:58,536 --> 0:25:01,406
类型形成一棵树 

609
00:25:01,406 --> 0:25:02,946
我们叫做［ 音质不清晰 ］树

610
00:25:03,906 --> 0:25:08,276
你可以把它想成一个

611
00:25:08,276 --> 0:25:09,196
［ 音质不清晰 ］比如 Swift

612
00:25:10,546 --> 0:25:13,856
例如 JPEG 图像和

613
00:25:14,256 --> 0:25:17,556
HEIF 图像都是图像

614
00:25:18,626 --> 0:25:21,116
图像符合我们的根

615
00:25:21,116 --> 0:25:23,536
类型 为客户所创建或

616
00:25:23,536 --> 0:25:26,156
客户所见文稿

617
00:25:26,156 --> 0:25:29,976
叫做 public.content

618
00:25:30,076 --> 0:25:31,416
现在 public.content 有其他 

619
00:25:31,416 --> 0:25:33,366
孩子 比如像

620
00:25:33,366 --> 0:25:34,166
public.spreadsheet

621
00:25:35,996 --> 0:25:38,666
你可以在我之前

622
00:25:38,786 --> 0:25:42,586
指出的文件中找到这一类型系列

623
00:25:42,586 --> 0:25:43,776
现在 我们需要在这棵树中

624
00:25:43,776 --> 0:25:45,706
为我的类型 Particle 找到一个点

625
00:25:46,956 --> 0:25:49,186
因为 Particle 系统不是

626
00:25:49,296 --> 0:25:51,916
一个普通的文件种类

627
00:25:51,916 --> 0:25:53,516
没有任何［ 音质不清晰 ］种类 

628
00:25:54,076 --> 0:25:55,736
所以 我不能仅仅直接

629
00:25:55,736 --> 0:25:58,786
遵照 public.content 

630
00:25:58,876 --> 0:26:00,226
我需要通过 public.spreadsheet 

631
00:25:58,876 --> 0:26:00,226
我需要通过 public.spreadsheet 

632
00:26:00,226 --> 0:26:02,196
或者图像直接

633
00:26:02,506 --> 0:26:03,786
或间接遵照

634
00:26:03,786 --> 0:26:06,326
public.content 如果

635
00:26:06,326 --> 0:26:07,956
我想要我的文件在

636
00:26:07,956 --> 0:26:11,616
最近项目或者搜索中出现

637
00:26:12,456 --> 0:26:13,766
接下来你有了第二棵树

638
00:26:14,166 --> 0:26:15,446
我们叫做物理树

639
00:26:16,046 --> 0:26:17,706
它可以让 iOS 知道

640
00:26:17,706 --> 0:26:19,316
文件怎样在磁盘中显示

641
00:26:20,216 --> 0:26:21,706
这个就简单多了

642
00:26:22,036 --> 0:26:23,926
因为你只有两种选择

643
00:26:25,406 --> 0:26:27,556
多数情况下 你将为 

644
00:26:27,556 --> 0:26:29,286
你的文稿处理磁盘上的

645
00:26:29,286 --> 0:26:31,496
单个文件

646
00:26:32,136 --> 0:26:35,956
如果你需要把很多

647
00:26:35,956 --> 0:26:38,446
资源聚集起来 你有

648
00:26:38,446 --> 0:26:40,446
文件包 你将

649
00:26:40,446 --> 0:26:42,006
使用 com.apple.package

650
00:26:42,466 --> 0:26:43,536
但多数情况下 你有一个

651
00:26:43,536 --> 0:26:45,926
单独的文件磁盘 它是 public.data

652
00:26:47,656 --> 0:26:49,146
这是因为我现在在用

653
00:26:49,186 --> 0:26:52,156
Particle 我要遵守 public.data

654
00:26:52,746 --> 0:26:55,936
现在 因为这是一棵树

655
00:26:56,346 --> 0:26:58,666
从物理体系结构和根类型中

656
00:26:58,666 --> 0:27:00,786
迭代 .data 和 .pakage

657
00:26:58,666 --> 0:27:00,786
迭代 .data 和 .pakage

658
00:27:00,786 --> 0:27:04,366
这就是 public.item

659
00:27:04,816 --> 0:27:06,566
但是 如果你不在乎这个

660
00:27:06,616 --> 0:27:08,476
你只需要在

661
00:27:08,476 --> 0:27:10,546
.data 和 .package 进行选择 

662
00:27:11,026 --> 0:27:12,126
因此 你有两个父母

663
00:27:12,726 --> 0:27:14,536
public.data 和 public.content

664
00:27:15,586 --> 0:27:17,756
所以在我的 Xcode UI 中 我将要

665
00:27:17,756 --> 0:27:20,266
遵循 public.data 和

666
00:27:20,266 --> 0:27:21,726
public.content 来编写

667
00:27:22,196 --> 0:27:26,336
我需要做的最后一件事是

668
00:27:26,456 --> 0:27:28,966
告诉 iOS 哪个文件扩展和 

669
00:27:29,026 --> 0:27:31,786
我的类型有联系

670
00:27:33,016 --> 0:27:35,046
这就是 iOS 如何知道 

671
00:27:35,046 --> 0:27:37,796
Particle 文件是这种定义的类型

672
00:27:38,336 --> 0:27:41,326
为此 我将 UTType

673
00:27:41,386 --> 0:27:45,786
分类属性添加到我的属性中 

674
00:27:46,776 --> 0:27:50,036
在这个词典当中 我添加一把钥匙

675
00:27:50,076 --> 0:27:53,436
叫做 public.filename-extension 和

676
00:27:53,436 --> 0:27:55,286
你想与你的类型相联系的

677
00:27:55,286 --> 0:27:58,926
［ 音质不清晰 ］文件拓展

678
00:27:59,066 --> 0:28:01,996
我在 Particle 上有一个新项目

679
00:27:59,066 --> 0:28:01,996
我在 Particle 上有一个新项目

680
00:28:02,656 --> 0:28:06,396
说完这话 我们的声明

681
00:28:06,886 --> 0:28:07,286
就完成了

682
00:28:08,856 --> 0:28:11,876
还有一件事我没提

683
00:28:12,406 --> 0:28:19,056
就是我们声明自己类型的情况

684
00:28:19,746 --> 0:28:21,026
但是 你可能想使用

685
00:28:21,026 --> 0:28:22,926
另一 App定义的类型

686
00:28:23,476 --> 0:28:26,286
如果是这样 你也

687
00:28:26,286 --> 0:28:28,616
需要声明类型以便

688
00:28:28,616 --> 0:28:31,596
iOS 知道 以防 App 不安全

689
00:28:32,486 --> 0:28:34,486
因为这是一个输入的

690
00:28:34,636 --> 0:28:39,096
类型声明 这意味着

691
00:28:39,486 --> 0:28:41,856
如果 iOS 发现一个额外的

692
00:28:41,856 --> 0:28:42,956
别处的类型定义

693
00:28:43,006 --> 0:28:44,856
它可能更喜欢这个定义

694
00:28:44,856 --> 0:28:46,366
胜过你的定义

695
00:28:47,476 --> 0:28:48,826
这也是你需要做的事

696
00:28:49,236 --> 0:28:50,606
如果你想使用一个至今 iOS

697
00:28:50,606 --> 0:28:53,396
还没有声明的类型

698
00:28:54,536 --> 0:28:55,736
现在 不要惊慌 这个 UI

699
00:28:55,736 --> 0:28:58,976
与我们刚才所做的一样

700
00:28:58,976 --> 0:29:02,136
除了它是输入

701
00:28:58,976 --> 0:29:02,136
除了它是输入

702
00:29:02,136 --> 0:29:03,946
而不是输出

703
00:29:08,046 --> 0:29:09,696
一旦你定义了类型

704
00:29:10,066 --> 0:29:11,846
你可以要求支持它

705
00:29:12,256 --> 0:29:14,966
这仍然在你的 info.plist 里或者 Xcode UI 里

706
00:29:15,596 --> 0:29:19,996
为此 你指定

707
00:29:19,996 --> 0:29:21,336
你已定义的类型标识符

708
00:29:21,336 --> 0:29:23,586
你需要做的

709
00:29:23,836 --> 0:29:26,176
另一件事是

710
00:29:26,276 --> 0:29:27,276
定义一个等级

711
00:29:28,016 --> 0:29:30,596
这让 iOS 知道 

712
00:29:30,596 --> 0:29:32,476
当你轻点文件时做什么

713
00:29:32,526 --> 0:29:35,026
且多个 App 可以打开这个文件

714
00:29:36,796 --> 0:29:39,046
为此 你有三种选择

715
00:29:42,316 --> 0:29:44,646
第一种是如果是你自己的文件类型

716
00:29:45,716 --> 0:29:46,496
你选择 Owner 

717
00:29:47,026 --> 0:29:48,316
要清楚的是

718
00:29:48,316 --> 0:29:50,396
只有当你碰巧建立

719
00:29:50,396 --> 0:29:52,586
自己的文件类型时才可以使用

720
00:29:53,896 --> 0:29:56,346
大多数情况 你想使用

721
00:29:56,426 --> 0:30:00,386
Default 如果你可以编辑

722
00:29:56,426 --> 0:30:00,386
Default 如果你可以编辑

723
00:30:00,386 --> 0:30:02,466
这种类型的文件 或者 Alternate 如果

724
00:30:02,586 --> 0:30:03,996
你可以阅读这种类型的文件

725
00:30:03,996 --> 0:30:04,976
但是不编辑它们

726
00:30:05,876 --> 0:30:09,786
以及一系列的规则

727
00:30:09,786 --> 0:30:12,946
在 macOS 上是不同的 如果是

728
00:30:12,946 --> 0:30:14,936
是 macOS 请

729
00:30:14,936 --> 0:30:17,166
看这个其他的短链接

730
00:30:20,616 --> 0:30:21,756
当声明支持一个

731
00:30:21,756 --> 0:30:24,156
类型 请尽可能具体化

732
00:30:25,086 --> 0:30:26,666
我们刚声明支持

733
00:30:26,666 --> 0:30:28,076
一个很具体的文件类型 所以是

734
00:30:28,076 --> 0:30:28,986
Particle 文件类型

735
00:30:29,616 --> 0:30:30,656
但你也可以声明支持

736
00:30:30,656 --> 0:30:32,346
不同类别 比如任何

737
00:30:32,346 --> 0:30:34,206
用 public.image 的图像

738
00:30:35,336 --> 0:30:37,396
这很好 但你需要 

739
00:30:37,396 --> 0:30:39,106
尽可能具体地使

740
00:30:39,106 --> 0:30:41,826
你的 App 准确展示出它需要展示的内容

741
00:30:42,926 --> 0:30:44,646
不要声明支持

742
00:30:44,646 --> 0:30:46,156
更宽泛的类型 比如 

743
00:30:46,156 --> 0:30:48,086
public.data 或者 public.content

744
00:30:49,766 --> 0:30:51,076
因为这会使你的 App

745
00:30:51,076 --> 0:30:52,696
出现在你的顾客

746
00:30:52,696 --> 0:30:54,596
不希望看到它出现的地方

747
00:30:54,596 --> 0:30:55,946
它会使他们困惑

748
00:31:00,246 --> 0:31:02,006
所以 有了这些信息你可以做什么

749
00:31:02,506 --> 0:31:05,866
首先 如果你需要

750
00:31:05,936 --> 0:31:07,566
在云端中访问文件

751
00:31:07,906 --> 0:31:09,106
你应该使用文稿

752
00:31:09,106 --> 0:31:10,336
浏览器或文稿选取器

753
00:31:10,626 --> 0:31:11,676
来获取这些文件

754
00:31:12,646 --> 0:31:15,216
大多数云服务供应商已采用

755
00:31:15,836 --> 0:31:18,836
我们的 API 所以如果你使用 

756
00:31:18,836 --> 0:31:20,206
这些 viewControllers 中的一个 

757
00:31:20,206 --> 0:31:21,976
你的顾客就能够访问

758
00:31:21,976 --> 0:31:24,186
他们的文件 不管文件在哪儿

759
00:31:24,546 --> 0:31:26,136
你不必为每个

760
00:31:26,136 --> 0:31:28,256
云服务供应商写代码

761
00:31:29,896 --> 0:31:32,736
如果你在 iOS 11 前写了自己

762
00:31:32,816 --> 0:31:35,356
自定的文件浏览 UI

763
00:31:35,356 --> 0:31:38,216
现在是时候换到

764
00:31:38,216 --> 0:31:39,556
UIDocumentBrowserViewController 了

765
00:31:40,896 --> 0:31:42,856
它有很多功能

766
00:31:43,996 --> 0:31:47,316
它有很多功能 所以

767
00:31:47,316 --> 0:31:49,336
困难的工作交给我们

768
00:31:49,336 --> 0:31:50,626
为你免费提供你 App 中的

769
00:31:50,626 --> 0:31:51,996
所有功能

770
00:31:54,196 --> 0:31:55,626
最后 请保证你的

771
00:31:55,626 --> 0:31:57,226
文稿类型在 Xcode 中得到

772
00:31:57,226 --> 0:31:59,276
正确设置以便你的 App

773
00:31:59,276 --> 0:32:02,386
在它需要的地方准确出现

774
00:31:59,276 --> 0:32:02,386
在它需要的地方准确出现

775
00:32:02,386 --> 0:32:05,676
并帮助客户找到它

776
00:32:05,676 --> 0:32:08,676
说到这 我接下来要

777
00:32:08,676 --> 0:32:09,976
把舞台交给我的同事 Ronny

778
00:32:10,516 --> 0:32:15,576
［ 掌声 ］

779
00:32:16,076 --> 0:32:16,846
&gt;&gt; 谢谢 Thomas

780
00:32:17,336 --> 0:32:18,136
大家好

781
00:32:18,516 --> 0:32:20,026
我是 Rony Fadel

782
00:32:20,026 --> 0:32:21,346
文稿管理团队的一名

783
00:32:21,346 --> 0:32:22,836
软件工程师

784
00:32:23,356 --> 0:32:25,306
Thomas 已经解释了

785
00:32:25,306 --> 0:32:27,256
在你的 App 中

786
00:32:27,486 --> 0:32:29,486
使用文稿浏览器和文稿选取器

787
00:32:29,486 --> 0:32:30,946
API 是多么简单 

788
00:32:31,426 --> 0:32:32,826
现在 你已使用这些

789
00:32:32,826 --> 0:32:34,586
API 我们想介绍一些

790
00:32:34,586 --> 0:32:36,526
最佳做法来确保

791
00:32:36,526 --> 0:32:38,066
你的 App 在 iOS 生态体系中

792
00:32:38,126 --> 0:32:40,736
表现良好

793
00:32:41,196 --> 0:32:44,856
在你向 App Store 提交它的时候

794
00:32:44,856 --> 0:32:46,906
既然我们已经完成一个

795
00:32:46,906 --> 0:32:48,986
基于文稿浏览器的 App 或者

796
00:32:48,986 --> 0:32:51,596
增加了选取器的支持 现在我们准备

797
00:32:51,596 --> 0:32:53,366
好最后选择一些文稿

798
00:32:54,446 --> 0:32:56,146
你的 App 可能想要

799
00:32:56,146 --> 0:32:58,816
直接访问文件 避免

800
00:32:58,816 --> 0:33:00,906
Thomas 提过的输入复制模式

801
00:32:58,816 --> 0:33:00,906
Thomas 提过的输入复制模式

802
00:33:00,906 --> 0:33:03,236
或者如果你

803
00:33:03,296 --> 0:33:04,956
想直接编辑你的文稿

804
00:33:05,376 --> 0:33:06,816
为此 你需要在

805
00:33:06,816 --> 0:33:08,076
打开模式下激活选取器

806
00:33:09,536 --> 0:33:11,096
在此例中

807
00:33:11,096 --> 0:33:13,476
我们在 Particle App 中 我们已经

808
00:33:13,476 --> 0:33:15,726
在打开模式中创建和呈现了选取器

809
00:33:16,366 --> 0:33:17,616
我们想选择一个图像

810
00:33:17,616 --> 0:33:19,146
文件来改变粒子

811
00:33:19,146 --> 0:33:19,936
系统的图像

812
00:33:21,436 --> 0:33:23,936
一旦我们选中一个文件 我们

813
00:33:23,936 --> 0:33:26,686
调用两个委托方法中的一个

814
00:33:27,566 --> 0:33:29,616
第一 如果我们在

815
00:33:29,616 --> 0:33:32,126
浏览器中选择文稿或者

816
00:33:32,346 --> 0:33:34,216
第二 如果我们

817
00:33:34,216 --> 0:33:36,326
在选取器中选择 就像我们的示例

818
00:33:36,326 --> 0:33:40,716
我们在这看到了文稿

819
00:33:40,936 --> 0:33:43,466
我们看到的实际是这个文稿选取器

820
00:33:43,466 --> 0:33:46,956
为我们刚刚选择 URL 为我们的 App 服务

821
00:33:48,066 --> 0:33:50,036
如果我们想直接

822
00:33:50,036 --> 0:33:52,536
访问文稿 我们冒着

823
00:33:52,536 --> 0:33:53,976
权限错误的风险

824
00:33:55,356 --> 0:33:57,546
让我们试着理解这种情况发生的原因

825
00:33:58,546 --> 0:34:00,376
你也许知道 你在 iOS 的

826
00:33:58,546 --> 0:34:00,376
你也许知道 你在 iOS 的

827
00:34:00,506 --> 0:34:01,966
App 是沙箱

828
00:34:02,816 --> 0:34:04,666
这个沙箱 App 是一个安全

829
00:34:04,666 --> 0:34:07,286
功能 然而每个 App 在

830
00:34:07,356 --> 0:34:09,426
它自己的 App 容器中都可以

831
00:34:09,426 --> 0:34:12,126
不受限地进行访问

832
00:34:12,126 --> 0:34:14,896
默认情况下 在其他容器内 

833
00:34:14,896 --> 0:34:16,775
访问文件

834
00:34:17,085 --> 0:34:18,735
也就是在其他 App 容器

835
00:34:18,735 --> 0:34:20,196
和云服务容器内

836
00:34:21,466 --> 0:34:23,636
因此 这个安全功能

837
00:34:23,906 --> 0:34:25,585
可保证其他 App 和

838
00:34:25,585 --> 0:34:27,426
进程不能

839
00:34:27,426 --> 0:34:29,036
偷窥你的 App

840
00:34:29,036 --> 0:34:31,016
容器 访问你的文件

841
00:34:31,356 --> 0:34:33,166
而且要确保如果

842
00:34:33,166 --> 0:34:35,076
他们想访问 访问

843
00:34:35,076 --> 0:34:37,815
这些文稿 需要

844
00:34:37,906 --> 0:34:39,126
用户许可

845
00:34:40,636 --> 0:34:43,916
所以 既然从其他容器内

846
00:34:43,916 --> 0:34:45,656
访问文件受限

847
00:34:46,106 --> 0:34:48,065
你的 App 怎么获取

848
00:34:48,065 --> 0:34:50,485
这些你的顾客已经挑选好的文件呢

849
00:34:51,585 --> 0:34:53,666
我们必须要做的是扩展 App

850
00:34:53,666 --> 0:34:56,065
沙箱使它包含这些文稿

851
00:34:56,775 --> 0:34:59,246
再一次回到 URL 通过 

852
00:34:59,246 --> 0:35:00,266
浏览器或选取器返回

853
00:34:59,246 --> 0:35:00,266
浏览器或选取器返回

854
00:35:01,716 --> 0:35:03,896
这个 URL 有一个附加的 

855
00:35:03,896 --> 0:35:06,026
安全范围资源

856
00:35:06,326 --> 0:35:07,676
你可以认为这个资源

857
00:35:07,676 --> 0:35:11,246
是一个系统赠予你的令牌 

858
00:35:11,306 --> 0:35:13,126
获得这个令牌可以允许

859
00:35:13,126 --> 0:35:15,936
你的 App 访问此文稿

860
00:35:16,356 --> 0:35:19,446
我们可以用

861
00:35:19,446 --> 0:35:21,646
下面的 URL API 来访问文件

862
00:35:22,846 --> 0:35:23,666
当我们调用

863
00:35:23,836 --> 0:35:25,826
startAccessingSecurityScopedResource

864
00:35:25,826 --> 0:35:28,576
你的 App 就可以访问

865
00:35:28,576 --> 0:35:30,206
这个文稿 你也可以

866
00:35:30,206 --> 0:35:32,166
开始展示或者编辑此文稿

867
00:35:32,896 --> 0:35:34,386
一旦你用完

868
00:35:34,386 --> 0:35:36,796
这个文稿 你应该在 URL 上调用

869
00:35:36,796 --> 0:35:38,806
stopAccessingSecurityScopedResource

870
00:35:38,806 --> 0:35:42,856
API 正如你所见 

871
00:35:42,856 --> 0:35:45,196
该文件访问权限受限

872
00:35:47,676 --> 0:35:50,546
这有一个简单的秘诀来

873
00:35:50,546 --> 0:35:51,866
保证你和

874
00:35:51,866 --> 0:35:54,596
沙箱文稿总可以成功交互

875
00:35:55,136 --> 0:35:57,556
我们快速看一下这个例子中

876
00:35:57,626 --> 0:35:58,716
我们调用的地方

877
00:35:59,996 --> 0:36:01,586
首先 我们在 URL 上

878
00:35:59,996 --> 0:36:01,586
首先 我们在 URL 上

879
00:36:01,586 --> 0:36:03,716
调用 startAccessing 

880
00:36:04,256 --> 0:36:05,706
然后我们可以开始

881
00:36:05,706 --> 0:36:06,376
和这个文稿互动

882
00:36:07,386 --> 0:36:09,036
你注意到在这个 Defer 代码块中

883
00:36:09,036 --> 0:36:10,856
一旦我们用完该文件

884
00:36:10,856 --> 0:36:12,886
我们会调用 stopAccessing

885
00:36:14,546 --> 0:36:16,576
你注意到这些调用是

886
00:36:16,576 --> 0:36:19,476
平衡的 如果 startAccessing

887
00:36:19,476 --> 0:36:21,946
返回 true 值

888
00:36:21,946 --> 0:36:25,116
我们只调用 stopAccessing 

889
00:36:25,336 --> 0:36:27,166
我们尽可能使资源

890
00:36:27,166 --> 0:36:29,426
访问时间短 因为当

891
00:36:29,426 --> 0:36:30,826
我们调用 startAccessing

892
00:36:30,826 --> 0:36:33,196
我们消耗有限的系统

893
00:36:33,196 --> 0:36:35,266
资源 为你的 App 进行保留

894
00:36:35,806 --> 0:36:37,276
所以一旦我们用完这个文稿 

895
00:36:37,276 --> 0:36:40,696
我们需要放弃这些资源来确保

896
00:36:40,696 --> 0:36:43,066
我们可以在进程中

897
00:36:43,066 --> 0:36:45,496
访问文件

898
00:36:47,376 --> 0:36:49,116
如果你确定这个

899
00:36:49,116 --> 0:36:50,906
文稿存在于你的

900
00:36:50,906 --> 0:36:52,626
App 容器中 你不需要

901
00:36:52,626 --> 0:36:53,436
调用这些

902
00:36:54,206 --> 0:36:56,376
但是如有疑问

903
00:36:56,376 --> 0:36:57,036
可以调用这些

904
00:36:57,736 --> 0:36:59,196
如果它们不被需要

905
00:36:59,366 --> 0:37:01,126
它们就是无操作指令

906
00:36:59,366 --> 0:37:01,126
它们就是无操作指令

907
00:37:03,176 --> 0:37:05,336
很好 现在我们知道如何

908
00:37:05,336 --> 0:37:06,626
访问我们的文件

909
00:37:06,766 --> 0:37:08,816
我们可以继续选择

910
00:37:08,816 --> 0:37:10,396
文稿 像我们示例中的

911
00:37:10,396 --> 0:37:11,386
粒子图像

912
00:37:11,666 --> 0:37:14,466
开始访问

913
00:37:14,466 --> 0:37:16,316
你可以看到 云

914
00:37:16,316 --> 0:37:17,726
服务管理着这个

915
00:37:17,726 --> 0:37:19,706
文稿 其他 App 也

916
00:37:20,046 --> 0:37:21,606
可以访问这个文件

917
00:37:21,746 --> 0:37:23,716
有时候和你的 App

918
00:37:23,716 --> 0:37:24,966
同时运行

919
00:37:25,236 --> 0:37:26,746
我们在这里需要的是一个

920
00:37:26,746 --> 0:37:29,046
全系统机制来

921
00:37:29,046 --> 0:37:30,396
确保访问这个文件

922
00:37:30,396 --> 0:37:32,166
总是协调的

923
00:37:32,656 --> 0:37:34,326
这样的话各项进程之间

924
00:37:34,326 --> 0:37:35,666
不会互相干扰

925
00:37:36,076 --> 0:37:39,466
访问 读取 编写这个文稿

926
00:37:40,916 --> 0:37:43,806
在 iOS 上 这个机制叫做

927
00:37:43,986 --> 0:37:46,076
文件协调性

928
00:37:46,076 --> 0:37:48,956
通过 NSFileCoordinator 和

929
00:37:49,046 --> 0:37:50,486
NSFilePresenter API 来展现

930
00:37:51,616 --> 0:37:53,316
它充当全系统的

931
00:37:53,486 --> 0:37:55,166
多阅读器／单独写

932
00:37:55,166 --> 0:37:58,546
锁 也是

933
00:37:58,546 --> 0:38:00,506
你的 App 指导系统

934
00:37:58,546 --> 0:38:00,506
你的 App 指导系统

935
00:38:00,586 --> 0:38:02,576
下载本地不可用文稿

936
00:38:02,576 --> 0:38:03,886
的一种方式

937
00:38:04,146 --> 0:38:05,856
因为你知道

938
00:38:05,856 --> 0:38:07,306
这些文件许多都可以放入

939
00:38:07,306 --> 0:38:09,136
云端 而不是在设备里

940
00:38:10,896 --> 0:38:12,566
所以 你可能发现自己

941
00:38:12,566 --> 0:38:14,496
写很多样板文件和

942
00:38:14,496 --> 0:38:16,056
易于出错的代码来处理

943
00:38:16,056 --> 0:38:18,756
沙箱 来处理文件协调性

944
00:38:19,846 --> 0:38:21,556
如果你只是

945
00:38:21,976 --> 0:38:23,456
对展示和编辑你的

946
00:38:23,456 --> 0:38:25,936
文件感兴趣 解决方法就更容易

947
00:38:26,176 --> 0:38:27,986
在 iOS 上 它以 UIDocument 的

948
00:38:27,986 --> 0:38:29,376
形式出现

949
00:38:30,346 --> 0:38:32,006
UIDocument 自从 iOS 5

950
00:38:32,006 --> 0:38:32,956
就开始有了

951
00:38:33,946 --> 0:38:36,016
建议使用

952
00:38:36,016 --> 0:38:38,246
当你的 App 展示和编辑文稿时

953
00:38:39,256 --> 0:38:40,946
它为你处理沙箱

954
00:38:41,256 --> 0:38:44,466
所以没必要调动 stopAccessing

955
00:38:45,336 --> 0:38:46,696
它也为你处理

956
00:38:46,696 --> 0:38:47,736
文件协调性

957
00:38:47,986 --> 0:38:49,246
所以 你不需要

958
00:38:49,286 --> 0:38:50,896
手动协调这些文件的

959
00:38:50,896 --> 0:38:51,706
访问权限

960
00:38:53,256 --> 0:38:55,646
想要获取更多关于文件

961
00:38:55,646 --> 0:38:58,186
协调和 UIDocument 的消息

962
00:38:58,186 --> 0:38:59,386
我们邀请你回去看

963
00:38:59,386 --> 0:39:02,176
2015 年的全球开发人员大会

964
00:38:59,386 --> 0:39:02,176
2015 年的全球开发人员大会

965
00:39:02,176 --> 0:39:06,056
建立基于文稿的 App

966
00:39:06,056 --> 0:39:09,526
大会中详细包含了这些主题

967
00:39:10,036 --> 0:39:11,976
好 我们现在可以访问

968
00:39:11,976 --> 0:39:13,466
文件 我们确定

969
00:39:13,466 --> 0:39:15,586
读写处于一致状态

970
00:39:16,446 --> 0:39:18,026
我们可以编辑我们的粒子系统

971
00:39:18,316 --> 0:39:19,526
现在我们要做的是

972
00:39:19,526 --> 0:39:21,106
只用一秒钟切换 App

973
00:39:21,106 --> 0:39:22,716
查看网页上的全球开发人员大会

974
00:39:22,716 --> 0:39:25,566
再跳转到我们的 App 中

975
00:39:26,136 --> 0:39:28,526
正如你所看到的

976
00:39:28,526 --> 0:39:30,236
我们现在在编辑器中 但是我们

977
00:39:30,236 --> 0:39:31,576
回到刚刚的浏览器中

978
00:39:32,366 --> 0:39:34,016
你的顾客总是期待

979
00:39:34,016 --> 0:39:35,576
回到刚刚他们

980
00:39:35,576 --> 0:39:38,726
使用你 App 时所在的地方

981
00:39:39,076 --> 0:39:40,426
让我们尝试理解一下

982
00:39:40,426 --> 0:39:42,166
之前的示例发生了什么

983
00:39:42,976 --> 0:39:45,796
这是我们 App 的生命周期图表

984
00:39:47,196 --> 0:39:48,586
当我们编辑 App

985
00:39:48,846 --> 0:39:49,946
粒子系统时 我们被带到前台

986
00:39:49,946 --> 0:39:52,436
当我们从 App Switcher 转到 Safari 时

987
00:39:52,806 --> 0:39:57,726
我们被带到后台

988
00:39:59,096 --> 0:40:00,816
系统暂停了我们的 App

989
00:39:59,096 --> 0:40:00,816
系统暂停了我们的 App

990
00:40:00,816 --> 0:40:01,906
当它在后台的时候

991
00:40:02,716 --> 0:40:04,486
事实证明在这个时候

992
00:40:04,716 --> 0:40:06,236
我们的系统遭受内存

993
00:40:06,236 --> 0:40:08,126
压力 所以系统 

994
00:40:08,586 --> 0:40:09,566
终止了我们的 App

995
00:40:10,776 --> 0:40:12,866
当我们使用 App Switcher 来

996
00:40:12,866 --> 0:40:14,866
转换到我们的 App 中 我们的 App

997
00:40:14,866 --> 0:40:15,546
开始重新启动

998
00:40:16,246 --> 0:40:18,046
我们在这并没有做成功的是

999
00:40:18,046 --> 0:40:19,176
恢复 UI 状态

1000
00:40:19,726 --> 0:40:21,196
这个时间是

1001
00:40:21,196 --> 0:40:22,956
恢复 UI 状态的最佳时机

1002
00:40:22,956 --> 0:40:24,736
把我们的顾客带到他们原来所在的地方

1003
00:40:26,206 --> 0:40:28,736
所以 我们怎样实现状态的 恢复呢

1004
00:40:29,136 --> 0:40:31,266
一个简单的方法是

1005
00:40:31,266 --> 0:40:32,686
存留我们从

1006
00:40:32,726 --> 0:40:34,146
文稿浏览器或文稿选取器

1007
00:40:34,146 --> 0:40:35,726
中获取的 URL

1008
00:40:36,166 --> 0:40:37,856
然后在 App 重启时恢复它

1009
00:40:39,246 --> 0:40:40,846
但这并不管用 因为

1010
00:40:40,846 --> 0:40:41,586
以下两个原因

1011
00:40:42,236 --> 0:40:44,856
第一 URL 指向的文稿

1012
00:40:44,926 --> 0:40:47,306
很有可能已被移动或者重命名

1013
00:40:47,586 --> 0:40:48,826
所以 App 重启时

1014
00:40:48,826 --> 0:40:50,406
我们链接也中断了

1015
00:40:51,266 --> 0:40:53,286
第二 附在我们 URL 中的

1016
00:40:53,286 --> 0:40:55,436
安全范围资源

1017
00:40:55,436 --> 0:40:59,166
在 URL 起作用时不可编码

1018
00:40:59,866 --> 0:41:01,446
所以 我们重启我们的

1019
00:40:59,866 --> 0:41:01,446
所以 我们重启我们的

1020
00:41:01,446 --> 0:41:03,886
App 我们不能访问

1021
00:41:03,886 --> 0:41:05,986
该文稿 即使这个

1022
00:41:05,986 --> 0:41:07,646
文件没有移动也没有改名

1023
00:41:08,076 --> 0:41:12,026
正确的解决方式是使用一个

1024
00:41:12,026 --> 0:41:13,886
安全范围书签

1025
00:41:13,886 --> 0:41:15,176
我们可以从 URL 中获取

1026
00:41:15,556 --> 0:41:17,376
正如你所看到的 这个

1027
00:41:17,376 --> 0:41:18,886
书签可以正确地查阅

1028
00:41:18,886 --> 0:41:20,906
文稿 即使它

1029
00:41:20,906 --> 0:41:21,966
被移动或重命名

1030
00:41:27,316 --> 0:41:29,206
为了保持这个安全范围

1031
00:41:29,206 --> 0:41:31,326
书签  我们必须首先

1032
00:41:31,326 --> 0:41:33,166
从 URL 中获取

1033
00:41:33,166 --> 0:41:35,356
在 URL 上使用 bookmarkData API

1034
00:41:35,676 --> 0:41:37,566
让它在磁盘继续存在

1035
00:41:38,636 --> 0:41:40,596
一旦重启我们的 App 我们

1036
00:41:40,596 --> 0:41:42,386
可以还原原来的 URL 

1037
00:41:42,736 --> 0:41:47,546
调用 URL 产生的 bookmarkData

1038
00:41:47,746 --> 0:41:49,636
好的 既然我们做好了 

1039
00:41:49,636 --> 0:41:51,036
所有准备来保存和

1040
00:41:51,036 --> 0:41:53,076
还原 UI 状态 让我们快速跳转到

1041
00:41:53,076 --> 0:41:53,926
一个示例中看看工作中的它

1042
00:42:02,046 --> 0:42:04,296
所以 我们来到了

1043
00:42:04,366 --> 0:42:07,266
模拟器中 运行 Particle App     

1044
00:42:07,266 --> 0:42:08,736
就像之前看到的那样

1045
00:42:10,286 --> 0:42:11,556
我们接下来要做的是

1046
00:42:11,556 --> 0:42:13,056
带着我们的 App 来到后台

1047
00:42:13,546 --> 0:42:14,606
现在 我们将要

1048
00:42:14,606 --> 0:42:15,966
模拟一个现实

1049
00:42:15,966 --> 0:42:17,596
系统正在关闭我们的 App 

1050
00:42:17,636 --> 0:42:18,976
在 Xcode 中关闭它

1051
00:42:23,056 --> 0:42:25,596
如果我们重启我们的 App 我们

1052
00:42:25,596 --> 0:42:27,336
看到我们跳到了浏览器中

1053
00:42:28,086 --> 0:42:29,276
所以 现在我们将要做的

1054
00:42:29,276 --> 0:42:31,646
是完成状态的保存

1055
00:42:31,686 --> 0:42:33,336
和还原 来回到

1056
00:42:33,336 --> 0:42:34,456
我们原来所在的地方

1057
00:42:35,776 --> 0:42:37,536
所以 我将移动到 Xcode 中

1058
00:42:38,086 --> 0:42:39,716
首先 在我们的 App

1059
00:42:39,716 --> 0:42:41,096
委托中 我们要向我们的

1060
00:42:41,096 --> 0:42:42,546
App 声明我们对

1061
00:42:42,546 --> 0:42:44,706
状态保存和恢复感兴趣

1062
00:42:45,206 --> 0:42:48,936
为了做到上述这些首先

1063
00:42:48,936 --> 0:42:49,946
在 App shouldSaveApplicationState 中 

1064
00:42:49,946 --> 0:42:51,746
返回一个真值 也在

1065
00:42:52,466 --> 0:42:54,306
App shouldRestoreApplicationState 中    

1066
00:42:54,306 --> 0:42:55,896
返回真值          

1067
00:42:57,716 --> 0:42:59,536
第二点 我们要到我们的

1068
00:42:59,536 --> 0:43:01,406
Storyboard 中 给我们的

1069
00:42:59,536 --> 0:43:01,406
Storyboard 中 给我们的

1070
00:43:01,406 --> 0:43:02,886
DocumentBrowserViewController

1071
00:43:02,886 --> 0:43:05,296
子类一个恢复身份

1072
00:43:05,296 --> 0:43:08,926
以便系统可以恢复它

1073
00:43:09,846 --> 0:43:11,366
在这个例子中 我们将

1074
00:43:11,366 --> 0:43:16,306
只使用 Storyboard ID

1075
00:43:16,566 --> 0:43:18,326
接下来 我们将要完成

1076
00:43:18,376 --> 0:43:19,716
状态的保存和

1077
00:43:19,716 --> 0:43:21,256
还原 在这个

1078
00:43:21,256 --> 0:43:22,726
documentBrowserViewController

1079
00:43:22,726 --> 0:43:23,316
子类别中

1080
00:43:25,996 --> 0:43:28,846
首先 我通过完成

1081
00:43:28,846 --> 0:43:30,166
encodeRestorableState 来开始

1082
00:43:31,436 --> 0:43:35,036
我们来到这个 editorViewController

1083
00:43:35,086 --> 0:43:36,856
如果它存在 从它当中

1084
00:43:36,856 --> 0:43:39,366
获取文稿 URL       

1085
00:43:39,736 --> 0:43:40,716
一旦我们有了 URL       

1086
00:43:40,716 --> 0:43:42,856
我把这个弄大一点   

1087
00:43:43,376 --> 0:43:45,976
一旦我们有了这个URL 我们开始

1088
00:43:45,976 --> 0:43:47,276
访问它来扩展我们的

1089
00:43:47,276 --> 0:43:49,176
沙箱 像之前描述的那样

1090
00:43:50,626 --> 0:43:52,596
在这个 Defer 代码块中 我们停止 

1091
00:43:52,596 --> 0:43:58,886
访问 一旦我们结束使用

1092
00:43:59,836 --> 0:44:01,606
如果我们可以访问这个

1093
00:43:59,836 --> 0:44:01,606
如果我们可以访问这个

1094
00:44:01,606 --> 0:44:04,826
文稿 我们从这个文稿中

1095
00:44:04,826 --> 0:44:06,666
简单创立一个 bookmarkData 代码块   

1096
00:44:06,666 --> 0:44:08,076
然后进行编码

1097
00:44:08,576 --> 0:44:12,556
最后 我们不要忘记调用 Super

1098
00:44:13,816 --> 0:44:16,116
好啦 既然我们知道了怎样

1099
00:44:16,116 --> 0:44:17,506
对我们的恢复状态进行编码

1100
00:44:17,846 --> 0:44:20,486
我们将进行恢复状态的解码

1101
00:44:21,146 --> 0:44:23,916
为此 我们开始执行

1102
00:44:23,916 --> 0:44:25,126
decodeRestorableState

1103
00:44:25,686 --> 0:44:27,266
我们将反着来

1104
00:44:28,036 --> 0:44:29,506
所以 首先我们从编码器中    

1105
00:44:29,506 --> 0:44:30,896
获取 bookmarkData      

1106
00:44:31,526 --> 0:44:34,396
如果它存在 建立       

1107
00:44:34,396 --> 0:44:36,166
文件 URL 调用

1108
00:44:36,166 --> 0:44:38,346
resolvingBookmarkData        

1109
00:44:38,886 --> 0:44:42,556
我们在 URL 中       

1110
00:44:42,556 --> 0:44:45,506
展示这个文件       

1111
00:44:45,506 --> 0:44:47,956
最后 我们    

1112
00:44:47,956 --> 0:44:49,106
不要忘记调用 Super     

1113
00:44:50,496 --> 0:44:51,916
好的 所以 让我们运行我们的 App 吧  

1114
00:44:57,646 --> 0:44:59,156
我们的 App 将要     

1115
00:44:59,156 --> 0:45:00,686
在模拟器中启动     

1116
00:44:59,156 --> 0:45:00,686
在模拟器中启动     

1117
00:45:02,116 --> 0:45:03,916
正如你所见 我们可以开始   

1118
00:45:04,786 --> 0:45:05,726
使用我们的文稿了  

1119
00:45:06,616 --> 0:45:09,556
再一次 把我们的 App 放到后台去   

1120
00:45:09,886 --> 0:45:11,886
模仿系统关闭我们的 App     

1121
00:45:16,156 --> 0:45:18,186
接下来我们要重启我们的  

1122
00:45:18,886 --> 0:45:19,926
App 正如你在这所见  

1123
00:45:20,246 --> 0:45:20,976
我们回到了编辑器中   

1124
00:45:21,516 --> 0:45:28,546
［ 掌声 ］

1125
00:45:29,046 --> 0:45:31,046
了不起 我们现在可以访问 

1126
00:45:31,046 --> 0:45:32,936
文稿 读写文稿  

1127
00:45:32,936 --> 0:45:34,306
不必害怕数据

1128
00:45:34,306 --> 0:45:36,336
损毁 我们甚至可以

1129
00:45:36,336 --> 0:45:37,776
恢复状态 把我们的

1130
00:45:37,776 --> 0:45:39,406
顾客带到他们一开始所在的地方

1131
00:45:39,716 --> 0:45:40,886
当他们在用我们的 App 时所在的地方

1132
00:45:41,386 --> 0:45:44,946
即使我们的 App 在后台被关闭

1133
00:45:45,286 --> 0:45:47,246
所以 如果你打开文件

1134
00:45:47,706 --> 0:45:48,936
我们在弹出菜单中  

1135
00:45:48,936 --> 0:45:50,956
点击分享 在你的 App   

1136
00:45:50,956 --> 0:45:52,976
可以处理的文件中 你会注意到   

1137
00:45:52,976 --> 0:45:55,136
我们的 App 现在在分享表单中可以获得

1138
00:45:56,096 --> 0:45:58,726
然而 它显示复制

1139
00:45:58,906 --> 0:45:59,926
而不是打开

1140
00:46:00,856 --> 0:46:03,106
这就意味着一旦我们  

1141
00:46:03,106 --> 0:46:04,726
在分享表单轻点我们的 App 图标  

1142
00:46:04,726 --> 0:46:06,456
系统就会  

1143
00:46:06,456 --> 0:46:09,096
复制这个文稿 复制到  

1144
00:46:09,096 --> 0:46:10,986
我们的 App 中  

1145
00:46:10,986 --> 0:46:12,596
这意味着 

1146
00:46:12,596 --> 0:46:14,326
客户将开始编辑

1147
00:46:14,326 --> 0:46:15,616
这个文稿的副本

1148
00:46:17,096 --> 0:46:19,056
为了让你的客户打开  

1149
00:46:19,056 --> 0:46:20,816
和编辑原来的文件 

1150
00:46:21,756 --> 0:46:23,696
我们希望在你的 App 中访问  

1151
00:46:23,696 --> 0:46:26,206
的文稿 你需要使用 

1152
00:46:26,206 --> 0:46:28,106
就地打开的功能   

1153
00:46:28,636 --> 0:46:32,066
如果你使用就地打开

1154
00:46:32,456 --> 0:46:34,276
你将在你的 App 分享表单里   

1155
00:46:34,536 --> 0:46:35,856
看到打开而不是  

1156
00:46:35,856 --> 0:46:38,576
在之前的复制

1157
00:46:38,826 --> 0:46:41,076
使用就地打开很简单  

1158
00:46:41,816 --> 0:46:43,676
如果你使用基于文稿的

1159
00:46:43,676 --> 0:46:45,586
App Xcode 模板 你将

1160
00:46:45,586 --> 0:46:47,656
可以免费获得 仿佛   

1161
00:46:47,656 --> 0:46:49,856
就地打开这是默认的   

1162
00:46:50,876 --> 0:46:52,966
否则  你需要添加这个 

1163
00:46:52,966 --> 0:46:55,026
LSSupportsOpeningDocumentInPlace

1164
00:46:55,026 --> 0:46:57,756
到你的 info.plist 中

1165
00:46:57,756 --> 0:46:58,806
一旦你向系统声明 

1166
00:46:58,806 --> 0:47:00,956
你的 App 在处理  

1167
00:46:58,806 --> 0:47:00,956
你的 App 在处理  

1168
00:47:00,956 --> 0:47:03,056
就地打开 我们必须

1169
00:47:03,056 --> 0:47:05,076
使用下面的 UI App 委托方法

1170
00:47:05,076 --> 0:47:06,356
来访问文件

1171
00:47:08,076 --> 0:47:09,876
再一次 如果你的 App 是

1172
00:47:09,876 --> 0:47:12,996
基于文稿浏览器 通常是用这种

1173
00:47:12,996 --> 0:47:14,646
方法 你要在            

1174
00:47:14,646 --> 0:47:16,646
documentBrowserViewController 中  

1175
00:47:16,646 --> 0:47:18,166
调用 revealDocument    

1176
00:47:19,376 --> 0:47:21,016
一旦你用这个方法

1177
00:47:21,016 --> 0:47:22,596
调用完成处理程序

1178
00:47:22,596 --> 0:47:23,686
你将在完成处理程序中

1179
00:47:23,686 --> 0:47:24,476
展示该文件

1180
00:47:25,126 --> 0:47:26,926
在 Xcode 模板中  

1181
00:47:26,926 --> 0:47:27,676
早已为你完成

1182
00:47:28,016 --> 0:47:31,246
我们可以在分享表单中 

1183
00:47:31,466 --> 0:47:32,806
轻点 App 图标   

1184
00:47:32,806 --> 0:47:34,506
直接进入我们的 App    

1185
00:47:34,506 --> 0:47:36,176
正如你在这所见的 我们在  

1186
00:47:36,246 --> 0:47:38,266
UI 中报告进度 因为这个  

1187
00:47:38,266 --> 0:47:41,116
文稿可以放到云端中   

1188
00:47:41,276 --> 0:47:42,866
既然下载需要

1189
00:47:42,866 --> 0:47:44,926
一会儿 我们也支持

1190
00:47:44,926 --> 0:47:46,626
用户取消 所以我们可以 

1191
00:47:46,666 --> 0:47:48,096
取消打开这个文稿

1192
00:47:48,096 --> 0:47:51,116
然后跳回到浏览器中 

1193
00:47:51,596 --> 0:47:52,946
这是你如何在你的 App 中

1194
00:47:52,996 --> 0:47:56,186
实现进度支持

1195
00:47:56,456 --> 0:47:57,216
如果你调用

1196
00:47:57,216 --> 0:47:58,666
documentBrowserViewController

1197
00:47:58,666 --> 0:48:00,896
revealDocument API 而这是之前已经   

1198
00:47:58,666 --> 0:48:00,896
revealDocument API 而这是之前已经   

1199
00:48:00,896 --> 0:48:02,736
描述过的 你可以  

1200
00:48:02,736 --> 0:48:03,886
免费得到那个 UI  

1201
00:48:04,216 --> 0:48:06,436
所以 你将在浏览器图标 

1202
00:48:06,526 --> 0:48:08,426
的顶部看到一个载入的 UI 

1203
00:48:09,556 --> 0:48:11,646
否则 你可能选择  

1204
00:48:11,646 --> 0:48:13,366
展示你自己的进程 UI  

1205
00:48:14,336 --> 0:48:16,376
如果你的 App 使用 UIDocument 你  

1206
00:48:16,376 --> 0:48:17,906
应该知道 UIDocument    

1207
00:48:18,256 --> 0:48:20,116
遵循 progressReporting

1208
00:48:20,876 --> 0:48:22,506
这样 展示你自己的

1209
00:48:22,506 --> 0:48:24,796
进度 UI 你可以简单设置

1210
00:48:24,796 --> 0:48:26,786
访问进程属性来展示

1211
00:48:26,786 --> 0:48:30,326
你自己的进度

1212
00:48:30,706 --> 0:48:32,306
好的 我们的 App 很了不起 

1213
00:48:32,416 --> 0:48:36,566
我们也已经准备好了

1214
00:48:36,846 --> 0:48:38,946
所以 今天带走什么

1215
00:48:38,946 --> 0:48:41,126
会使你的 App 在

1216
00:48:41,126 --> 0:48:43,466
管理 iOS 文稿时更出色

1217
00:48:45,036 --> 0:48:47,636
在展示和编辑文稿时

1218
00:48:47,636 --> 0:48:49,396
使用 UIDocument 因为它

1219
00:48:49,536 --> 0:48:51,396
消除很多样板文件

1220
00:48:51,396 --> 0:48:52,436
和易于出错的代码

1221
00:48:54,786 --> 0:48:56,276
然而 如果你早已

1222
00:48:56,346 --> 0:48:57,586
使用文件编码

1223
00:48:57,586 --> 0:48:59,866
不使用 UIDocument  

1224
00:48:59,866 --> 0:49:01,436
而是使用 start- 和 stopAccessing

1225
00:48:59,866 --> 0:49:01,436
而是使用 start- 和 stopAccessing

1226
00:49:01,436 --> 0:49:03,696
是最好的做法来确保

1227
00:49:03,696 --> 0:49:05,036
你和沙箱文稿

1228
00:49:05,036 --> 0:49:07,726
或者沙箱 App 的沙箱技术 

1229
00:49:08,356 --> 0:49:09,576
成功交互 

1230
00:49:11,096 --> 0:49:13,456
也要协调好各种

1231
00:49:13,456 --> 0:49:15,346
文稿的访问来确保

1232
00:49:15,346 --> 0:49:19,656
你可以持续地读写它们

1233
00:49:19,826 --> 0:49:21,476
实现状态恢复可以

1234
00:49:21,476 --> 0:49:22,986
把你的顾客带到

1235
00:49:22,986 --> 0:49:24,396
他们使用你的

1236
00:49:24,396 --> 0:49:26,186
App 时所在的位置 即使

1237
00:49:26,186 --> 0:49:29,086
你的 App 在后台被关闭了

1238
00:49:29,086 --> 0:49:31,166
使用就地打开以便

1239
00:49:31,306 --> 0:49:32,876
你的顾客总是编辑

1240
00:49:32,876 --> 0:49:34,926
原始文件 而

1241
00:49:34,926 --> 0:49:37,366
不需要开始复制

1242
00:49:37,366 --> 0:49:40,346
这个文件报告进程  

1243
00:49:40,466 --> 0:49:43,356
特别是当大多数文稿在云端

1244
00:49:43,356 --> 0:49:45,116
而在本地不可用时

1245
00:49:46,816 --> 0:49:49,136
所以 我们今天都涉及了什么

1246
00:49:49,936 --> 0:49:51,996
我们向你展示了使用

1247
00:49:52,116 --> 0:49:53,866
文稿浏览器和

1248
00:49:53,866 --> 0:49:55,116
文稿选取器 API 是多么简单

1249
00:49:55,686 --> 0:49:58,836
今天在你的 App 中试一下吧

1250
00:49:59,016 --> 0:50:02,026
我们学到了一些最佳做法

1251
00:49:59,016 --> 0:50:02,026
我们学到了一些最佳做法

1252
00:50:02,166 --> 0:50:03,486
以便我们的 App 在 

1253
00:50:03,486 --> 0:50:05,266
管理文稿方面表现卓越  

1254
00:50:06,326 --> 0:50:09,296
对你们云服务供应商来说

1255
00:50:09,296 --> 0:50:10,406
我们讨论了新的 Siri 的

1256
00:50:10,406 --> 0:50:12,456
捷径 以及他们怎样允许

1257
00:50:12,456 --> 0:50:15,276
你的 App 对不起 你的文稿

1258
00:50:15,686 --> 0:50:17,866
通过系统可以

1259
00:50:17,866 --> 0:50:20,296
频繁地被顾客访问

1260
00:50:20,816 --> 0:50:23,486
我们谈论了

1261
00:50:23,486 --> 0:50:25,206
fileProvider 验证工具  

1262
00:50:26,466 --> 0:50:28,296
并且关于怎样   

1263
00:50:28,296 --> 0:50:29,616
在你的 fileProviderUI 扩展中实现 

1264
00:50:29,616 --> 0:50:31,016
有效的身份验证给出  

1265
00:50:31,016 --> 0:50:32,736
指导意见  

1266
00:50:34,126 --> 0:50:36,056
更多关于这个会议的

1267
00:50:36,056 --> 0:50:39,356
消息 请查看在下面 URL 中的会议网站

1268
00:50:40,016 --> 0:50:41,606
确保查看今年的 

1269
00:50:41,606 --> 0:50:43,826
介绍 Siri 捷径会议

1270
00:50:44,386 --> 0:50:45,606
谢谢大家的到来

1271
00:50:45,946 --> 0:50:47,976
下午愉快 实验室见啦 谢谢

1272
00:50:48,516 --> 0:50:51,500
［ 掌声 ］
