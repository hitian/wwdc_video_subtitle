1
00:00:07,516 --> 0:00:15,500
[ 音乐 ]

2
00:00:27,266 --> 0:00:27,956
&gt;&gt; 大家好

3
00:00:28,516 --> 0:00:31,716
[ 掌声 ]

4
00:00:32,216 --> 0:00:33,006
谢谢

5
00:00:34,116 --> 0:00:35,296
欢迎你们

6
00:00:36,326 --> 0:00:38,576
欢迎来听

7
00:00:38,576 --> 0:00:39,216
设计流畅界面

8
00:00:39,456 --> 0:00:40,456
我是 Chan

9
00:00:40,766 --> 0:00:43,206
Apple 人机界面团队的一员

10
00:00:43,856 --> 0:00:45,536
最近我主要

11
00:00:45,536 --> 0:00:47,536
在研究 iPhone X 的

12
00:00:47,536 --> 0:00:49,176
流畅手势界面

13
00:00:49,926 --> 0:00:53,756
我 Marcos 和 Nathan 三个人

14
00:00:53,796 --> 0:00:55,146
想分享一些

15
00:00:55,146 --> 0:00:56,676
关于我们对这个

16
00:00:57,336 --> 0:00:59,056
以及过去类似项目的研究发现

17
00:01:00,026 --> 0:01:01,576
那么我们经常

18
00:01:01,826 --> 0:01:04,536
问自己的一个问题是

19
00:01:04,676 --> 0:01:07,156
究竟什么才能使界面流畅

20
00:01:08,296 --> 0:01:09,826
我们注意到事实上

21
00:01:09,986 --> 0:01:11,826
每个人对它的描述都不同

22
00:01:12,276 --> 0:01:14,026
大家都知道 有时

23
00:01:14,026 --> 0:01:15,226
当人们真的使用了界面

24
00:01:15,226 --> 0:01:16,516
当我们给他们一个样品试用

25
00:01:16,516 --> 0:01:17,296
他们只有在拿到手中体验之后

26
00:01:17,356 --> 0:01:19,226
有时候才会说

27
00:01:19,226 --> 0:01:19,636
这感觉很快速

28
00:01:20,106 --> 0:01:21,356
或者有时其他人会说

29
00:01:21,356 --> 0:01:22,496
这感觉很平滑

30
00:01:22,896 --> 0:01:24,146
当使用感真的很棒

31
00:01:24,146 --> 0:01:25,606
有时他们甚至会说

32
00:01:25,606 --> 0:01:27,476
这感觉很自然或者很神奇

33
00:01:28,426 --> 0:01:29,766
但是说到底

34
00:01:30,476 --> 0:01:32,356
它给人的感觉就是

35
00:01:32,356 --> 0:01:33,636
你感觉到了

36
00:01:33,636 --> 0:01:34,656
它就对了

37
00:01:35,176 --> 0:01:36,206
它就是那样的一件东西

38
00:01:37,186 --> 0:01:38,526
你可以有手势用户界面

39
00:01:38,806 --> 0:01:41,076
我们已经看到市场上 有很多手势用户界面了

40
00:01:41,076 --> 0:01:42,866
但如果处理不当

41
00:01:43,016 --> 0:01:44,526
有些使用感觉可能

42
00:01:44,636 --> 0:01:45,426
就是不对

43
00:01:45,896 --> 0:01:48,556
而且你常常不能明确知道原因

44
00:01:49,496 --> 0:01:50,776
大家知道

45
00:01:50,946 --> 0:01:51,956
这不仅仅和帧率相关

46
00:01:52,066 --> 0:01:53,236
每秒显示帧数为 60 时

47
00:01:53,236 --> 0:01:54,906
你也可以缓慢进行操作

48
00:01:54,906 --> 0:01:57,746
但那感觉就是不对

49
00:01:57,776 --> 0:01:59,626
那究竟是什么 能给我们这种感觉呢

50
00:02:00,756 --> 0:02:02,916
我想把这种感觉归结于

51
00:02:03,306 --> 0:02:04,676
当这个工具就像我们

52
00:02:04,676 --> 0:02:06,176
大脑的延伸的感觉

53
00:02:06,856 --> 0:02:08,506
没错 大脑的延伸

54
00:02:09,256 --> 0:02:10,895
那么为何这点如此重要呢

55
00:02:12,056 --> 0:02:13,526
我们来看看

56
00:02:13,526 --> 0:02:15,226
iPhone 是个工具 对吧

57
00:02:15,226 --> 0:02:17,486
它是一个用来获取信息 并且进行沟通的

58
00:02:17,486 --> 0:02:18,396
手持工具

59
00:02:18,916 --> 0:02:22,986
通过融合完美的触觉和视觉

60
00:02:22,986 --> 0:02:23,396
发挥作用

61
00:02:24,316 --> 0:02:25,536
但如果我们仔细考虑

62
00:02:25,536 --> 0:02:27,846
就会发现它实际上是千百年来

63
00:02:28,006 --> 0:02:31,056
手持工具发展长河中的一部分

64
00:02:32,066 --> 0:02:33,286
左面的是

65
00:02:33,286 --> 0:02:35,036
150，000 年前

66
00:02:35,036 --> 0:02:37,846
用于提取骨髓的工具

67
00:02:37,846 --> 0:02:39,226
它拓展了手指的锋利程度

68
00:02:39,776 --> 0:02:41,586
因此人类制造手持工具

69
00:02:41,586 --> 0:02:42,686
已经有一段时间了

70
00:02:43,076 --> 0:02:45,276
最令人惊奇的是

71
00:02:45,276 --> 0:02:46,326
我们的双手已经进化

72
00:02:46,326 --> 0:02:49,666
并且适应了我们制造的工具

73
00:02:49,946 --> 0:02:51,296
我们进化出了一双富集肌肉

74
00:02:51,296 --> 0:02:52,726
神经 血管的双手

75
00:02:52,726 --> 0:02:54,766
能够完成

76
00:02:54,766 --> 0:02:56,136
最精细的手势操作

77
00:02:56,136 --> 0:02:58,196
以及作出最轻柔的触摸

78
00:02:59,306 --> 0:03:01,386
因此我们已经完全

79
00:02:59,306 --> 0:03:01,386
因此我们已经完全

80
00:03:01,536 --> 0:03:03,156
适应了这个触觉世界

81
00:03:04,206 --> 0:03:06,106
但是如果回顾电脑的历史

82
00:03:06,106 --> 0:03:09,536
我们从人机之间的

83
00:03:09,536 --> 0:03:11,846
多个抽象层起步

84
00:03:12,306 --> 0:03:13,636
你要学习各种

85
00:03:13,636 --> 0:03:15,026
复杂的操作

86
00:03:15,466 --> 0:03:17,956
这将大多数人拒之门外

87
00:03:19,446 --> 0:03:21,756
但是过去的几十年间

88
00:03:21,756 --> 0:03:24,596
我们通过一对一的

89
00:03:24,596 --> 0:03:25,696
间接操控装置

90
00:03:25,696 --> 0:03:27,316
将这些抽象层

91
00:03:27,316 --> 0:03:28,436
进行了剥离

92
00:03:28,436 --> 0:03:30,836
每一步都剥离一点点

93
00:03:30,836 --> 0:03:33,946
最终我们剥离了

94
00:03:34,076 --> 0:03:35,776
所有那些抽象层

95
00:03:35,816 --> 0:03:38,736
直接和内容进行交互

96
00:03:39,056 --> 0:03:40,916
这对于我们就像是

97
00:03:40,916 --> 0:03:41,266
魔法一般

98
00:03:41,266 --> 0:03:42,586
这种感觉不再像

99
00:03:42,586 --> 0:03:44,906
是一台电脑

100
00:03:45,456 --> 0:03:49,266
而更像是自然世界的延伸

101
00:03:49,976 --> 0:03:51,916
这意味着现在的界面

102
00:03:51,956 --> 0:03:53,976
正在以有史以来

103
00:03:53,976 --> 0:03:55,606
最古老的方式

104
00:03:55,606 --> 0:03:57,366
和我们沟通

105
00:03:57,886 --> 0:03:59,286
而且我们对此有

106
00:03:59,416 --> 0:04:00,136
相当高的标准

107
00:03:59,416 --> 0:04:00,136
相当高的标准

108
00:04:00,586 --> 0:04:01,796
大家知道只要有一点点东西

109
00:04:01,796 --> 0:04:03,166
感觉不对 这种幻想

110
00:04:03,166 --> 0:04:04,136
就会被粉碎

111
00:04:04,136 --> 0:04:06,566
但是如果感觉良好

112
00:04:06,566 --> 0:04:07,866
这就会像是你的延伸

113
00:04:07,866 --> 0:04:10,056
你身体的延伸

114
00:04:10,736 --> 0:04:13,066
它会跟你的思想同步

115
00:04:13,066 --> 0:04:14,786
使用起来会很愉悦

116
00:04:14,786 --> 0:04:16,356
几乎没有阻力

117
00:04:16,356 --> 0:04:17,466
甚至会非常愉悦

118
00:04:18,396 --> 0:04:19,966
那么究竟是什么 给了我们这样的感觉

119
00:04:20,456 --> 0:04:21,805
当感觉不好的时候

120
00:04:21,805 --> 0:04:22,866
我们要怎么调整

121
00:04:23,586 --> 0:04:25,606
这就是今天我要展示的内容

122
00:04:27,006 --> 0:04:28,016
今天我们将谈到

123
00:04:28,096 --> 0:04:28,586
四个部分

124
00:04:28,586 --> 0:04:30,736
首先就是

125
00:04:31,126 --> 0:04:32,546
制定一些原则

126
00:04:32,546 --> 0:04:34,106
明确如何设计出

127
00:04:34,146 --> 0:04:36,636
像是我们的延伸的界面

128
00:04:37,426 --> 0:04:39,516
如何设计出

129
00:04:39,516 --> 0:04:40,776
与我们身体运动和周边世界

130
00:04:40,776 --> 0:04:42,736
相匹配的动作

131
00:04:43,716 --> 0:04:47,476
设计出优雅 智能的手势

132
00:04:48,036 --> 0:04:50,206
那么既然我们已经设计出了

133
00:04:50,206 --> 0:04:51,806
这样东西 我们还将谈谈

134
00:04:51,806 --> 0:04:53,436
如何在此基础上

135
00:04:53,436 --> 0:04:54,786
打造天生适用于媒介的

136
00:04:54,866 --> 0:04:57,786
就像媒介本身的互动

137
00:04:57,786 --> 0:05:00,246
让我们开始吧

138
00:04:57,786 --> 0:05:00,246
让我们开始吧

139
00:05:00,346 --> 0:05:02,556
我们如何设计出

140
00:05:02,656 --> 0:05:04,316
真正延伸大脑的界面呢

141
00:05:04,316 --> 0:05:05,046
如何做到这一点呢

142
00:05:05,786 --> 0:05:07,996
好吧 我们认为这就需要

143
00:05:08,546 --> 0:05:10,406
将界面与我们思考和

144
00:05:10,406 --> 0:05:12,396
运动的方式

145
00:05:12,396 --> 0:05:12,786
相匹配

146
00:05:13,666 --> 0:05:14,916
最重要的一点是

147
00:05:14,956 --> 0:05:17,626
我们的思维会不断地

148
00:05:17,676 --> 0:05:19,386
对变化 刺激和思维

149
00:05:19,386 --> 0:05:21,766
作出反应 对吧

150
00:05:21,926 --> 0:05:22,856
我们的思维和身体

151
00:05:23,006 --> 0:05:25,286
一直处于这种动态变化的状态

152
00:05:25,746 --> 0:05:27,226
因此并非界面需要

153
00:05:27,226 --> 0:05:28,746
是流畅变化的

154
00:05:28,856 --> 0:05:30,236
而是我们本身就是流畅变化的

155
00:05:30,236 --> 0:05:31,626
我们的界面需要对此作出回应

156
00:05:33,046 --> 0:05:35,666
所以界面始于响应

157
00:05:37,176 --> 0:05:38,986
大家知道我们对工具的使用感受

158
00:05:39,036 --> 0:05:39,736
取决于延迟

159
00:05:40,126 --> 0:05:41,236
现实世界中

160
00:05:41,236 --> 0:05:44,336
如果工具或其他任何东西

161
00:05:44,336 --> 0:05:45,436
在使用时有响应延迟

162
00:05:45,436 --> 0:05:46,536
那将是多么艰难

163
00:05:47,206 --> 0:05:48,516
而且我们发现人们

164
00:05:48,736 --> 0:05:49,926
对于延迟真的

165
00:05:49,926 --> 0:05:50,416
非常非常敏感

166
00:05:50,766 --> 0:05:52,386
大家知道吗

167
00:05:52,386 --> 0:05:54,876
如果有时间间隔

168
00:05:54,876 --> 0:05:56,026
那么它的响应表现

169
00:05:56,026 --> 0:05:57,466
突然间就有点像

170
00:05:57,466 --> 0:05:58,106
掉下了悬崖

171
00:05:58,106 --> 0:05:59,436
有了额外的

172
00:05:59,436 --> 0:06:00,246
精神负担

173
00:05:59,436 --> 0:06:00,246
精神负担

174
00:06:00,546 --> 0:06:01,736
感觉非常脱节

175
00:06:01,736 --> 0:06:02,776
它不再像是

176
00:06:02,776 --> 0:06:03,966
自我的延伸

177
00:06:04,756 --> 0:06:06,526
这就是为什么我们如此努力试图

178
00:06:06,596 --> 0:06:07,126
减少延迟感

179
00:06:07,716 --> 0:06:09,276
实际上最新的 iPhone

180
00:06:09,276 --> 0:06:10,696
能更快地响应

181
00:06:10,696 --> 0:06:12,286
你的手指操作

182
00:06:12,286 --> 0:06:13,916
因此我们才能实时

183
00:06:13,916 --> 0:06:15,396
检测到你手势的所有

184
00:06:15,426 --> 0:06:15,876
细微差别

185
00:06:16,696 --> 0:06:18,086
我们对此十分关注

186
00:06:18,146 --> 0:06:19,486
并且认为所有开发者

187
00:06:19,486 --> 0:06:19,826
都应如此

188
00:06:19,826 --> 0:06:23,166
这意味着寻找

189
00:06:23,296 --> 0:06:23,936
各处的延迟

190
00:06:23,986 --> 0:06:25,016
这并不局限于滑动手势

191
00:06:25,016 --> 0:06:26,306
还包括轻敲 按压等

192
00:06:26,446 --> 0:06:28,066
所有的界面交互操作

193
00:06:28,586 --> 0:06:30,606
所有元素都应该及时响应

194
00:06:31,466 --> 0:06:32,486
大家知道

195
00:06:32,486 --> 0:06:34,076
在设计界面的过程中

196
00:06:34,076 --> 0:06:38,796
非常容易出现延迟

197
00:06:38,986 --> 0:06:39,956
大家懂吧 

198
00:06:39,956 --> 0:06:42,236
因此我们必须时刻警惕延迟

199
00:06:42,306 --> 0:06:44,136
警惕所有那些

200
00:06:44,136 --> 0:06:46,046
在界面中

201
00:06:46,046 --> 0:06:47,086
可能出现的延迟

202
00:06:47,226 --> 0:06:49,026
只有这样界面才能始终

203
00:06:49,096 --> 0:06:50,016
及时响应

204
00:06:51,576 --> 0:06:52,406
这就是响应

205
00:06:52,406 --> 0:06:54,906
这个话题虽然简单

206
00:06:54,906 --> 0:06:57,326
但却是让界面感觉充满活力和动感

207
00:06:58,556 --> 0:06:58,786
的关键

208
00:06:59,046 --> 0:07:02,756
接下来我们想考虑

209
00:06:59,046 --> 0:07:02,756
接下来我们想考虑

210
00:07:02,756 --> 0:07:04,896
持续的重新定向与中断

211
00:07:05,136 --> 0:07:05,866
这一点很重要

212
00:07:06,706 --> 0:07:08,526
那么我们的思维和身体

213
00:07:08,756 --> 0:07:09,876
始终处于

214
00:07:09,876 --> 0:07:12,206
对变化重新定向的状态

215
00:07:12,206 --> 0:07:12,736
就像我们刚才谈到的那样

216
00:07:13,586 --> 0:07:14,916
如果我在走向舞台

217
00:07:14,916 --> 0:07:16,496
另一端的过程中意识到

218
00:07:16,496 --> 0:07:17,736
我把东西落在了后面

219
00:07:17,766 --> 0:07:19,706
我会马上掉头

220
00:07:19,706 --> 0:07:20,656
而不用非得等到

221
00:07:20,656 --> 0:07:22,676
走到舞台另一头

222
00:07:23,146 --> 0:07:23,936
才那样做 对吧

223
00:07:24,336 --> 0:07:25,376
因此我们的界面能

224
00:07:25,376 --> 0:07:26,896
展示出这种持续

225
00:07:26,986 --> 0:07:28,666
重新定向能力

226
00:07:28,666 --> 0:07:29,246
十分重要

227
00:07:29,246 --> 0:07:31,486
这种感觉与你紧密相连

228
00:07:32,276 --> 0:07:34,286
这也是我们为什么要在 iPhone X 中

229
00:07:34,286 --> 0:07:36,416
建立可重新定向界面的原因

230
00:07:37,336 --> 0:07:38,546
那么 它究竟是什么呢

231
00:07:39,006 --> 0:07:41,206
iPhone X 实际上

232
00:07:41,206 --> 0:07:43,416
非常易于手势操作

233
00:07:43,416 --> 0:07:44,836
你可以横向轻扫 切换 App

234
00:07:45,306 --> 0:07:46,646
竖向轻扫 回到桌面

235
00:07:47,106 --> 0:07:48,586
也可以将这两个方向的操作混合

236
00:07:48,586 --> 0:07:50,136
因此你可以在返回桌面的过程中

237
00:07:50,196 --> 0:07:52,036
看下多任务界面

238
00:07:52,036 --> 0:07:53,336
来决定是否点进去

239
00:07:54,046 --> 0:07:55,306
也可以进入多任务界面的时候

240
00:07:55,306 --> 0:07:57,426
直接返回桌面

241
00:07:58,286 --> 0:07:59,926
这些看起来不太重要

242
00:07:59,926 --> 0:08:01,596
但如果我们没有提供这个功能

243
00:07:59,926 --> 0:08:01,596
但如果我们没有提供这个功能

244
00:08:01,596 --> 0:08:01,916
将会怎么样呢

245
00:08:02,026 --> 0:08:03,266
如果它不支持重新定向 将会怎么样呢

246
00:08:03,266 --> 0:08:07,706
假如你唯一能做的手势

247
00:08:07,706 --> 0:08:09,246
就是横向轻扫

248
00:08:09,246 --> 0:08:11,226
不同的 App

249
00:08:11,226 --> 0:08:12,666
竖向轻扫返回桌面

250
00:08:12,666 --> 0:08:13,256
仅仅只能这样

251
00:08:13,256 --> 0:08:14,316
你无法进行

252
00:08:14,316 --> 0:08:15,416
我刚才提到的

253
00:08:15,416 --> 0:08:15,776
任何中间操作

254
00:08:16,636 --> 0:08:17,846
这样的结果是

255
00:08:17,846 --> 0:08:19,406
你将不得不

256
00:08:19,696 --> 0:08:21,136
在进行手势操作前

257
00:08:21,136 --> 0:08:23,153
想清楚 自己想做什么

258
00:08:23,986 --> 0:08:25,156
那么这一系列事件

259
00:08:25,156 --> 0:08:26,276
就会是先行操作 对吧

260
00:08:26,316 --> 0:08:27,276
你需要思考

261
00:08:27,276 --> 0:08:28,106
我要不要回到桌面

262
00:08:28,106 --> 0:08:29,396
要不要进入多任务

263
00:08:29,826 --> 0:08:30,876
然后做出决定

264
00:08:30,876 --> 0:08:32,306
进行手势操作

265
00:08:32,306 --> 0:08:32,905
然后松手

266
00:08:34,206 --> 0:08:35,876
但很酷的是 如果它是

267
00:08:35,956 --> 0:08:37,876
可重新定向的

268
00:08:37,876 --> 0:08:39,746
你的思考和手势就可以并行

269
00:08:40,426 --> 0:08:42,535
你可以边思考边操作

270
00:08:42,635 --> 0:08:47,386
这样会比在做之前想好 快得多

271
00:08:47,386 --> 0:08:48,826
因为这是一个

272
00:08:48,856 --> 0:08:52,326
多方向手势操作

273
00:08:52,326 --> 0:08:53,676
而不是独立操作

274
00:08:53,986 --> 0:08:55,976
它是一个可以完成所有这些事情的手势

275
00:08:55,976 --> 0:08:57,306
桌面 多任务 快速 App 切换

276
00:08:57,306 --> 0:08:58,266
因此你不必把它当作

277
00:08:58,646 --> 0:09:00,166
是一个独立的手势

278
00:08:58,646 --> 0:09:00,166
是一个独立的手势

279
00:09:01,206 --> 0:09:03,796
而且还能帮助你探索

280
00:09:03,916 --> 0:09:05,346
因为你可以在现有手势的

281
00:09:05,346 --> 0:09:07,656
基础上探索一个新的手势操作

282
00:09:08,546 --> 0:09:10,886
并让你伴随思考

283
00:09:10,886 --> 0:09:12,706
做出对应手势

284
00:09:13,256 --> 0:09:14,286
那么最后一点 是什么意思呢

285
00:09:14,896 --> 0:09:16,566
让我给你们看几个例子

286
00:09:16,826 --> 0:09:17,846
我们已经放慢了

287
00:09:17,846 --> 0:09:19,196
模拟中的动作

288
00:09:19,196 --> 0:09:20,626
因此你们实际上能看到

289
00:09:20,626 --> 0:09:21,616
一些我刚才所说的内容

290
00:09:22,506 --> 0:09:26,006
我可以滑动到桌面

291
00:09:26,006 --> 0:09:27,566
再滑动到下一页

292
00:09:27,566 --> 0:09:28,946
或者在返回桌面的过程中

293
00:09:28,946 --> 0:09:29,176
滑动切换主屏幕

294
00:09:29,176 --> 0:09:30,616
一旦我把这两个手势内化了

295
00:09:30,616 --> 0:09:31,806
就能把它们叠加在一起

296
00:09:33,186 --> 0:09:34,796
还有一个例子是

297
00:09:34,796 --> 0:09:35,846
我在启动 App 的过程中

298
00:09:35,846 --> 0:09:37,126
突然意识到

299
00:09:37,126 --> 0:09:38,186
我实际上要打开多任务界面

300
00:09:38,316 --> 0:09:39,806
那么我就可以

301
00:09:39,806 --> 0:09:41,396
在 App 启动的过程中

302
00:09:41,396 --> 0:09:42,256
直接进入多任务界面

303
00:09:43,566 --> 0:09:47,296
或者我打开了一个 App

304
00:09:47,296 --> 0:09:49,136
但突然意识到点错了 App

305
00:09:49,846 --> 0:09:51,096
我可以在打开过程中

306
00:09:51,246 --> 0:09:53,066
直接将其关闭 返回桌面

307
00:09:53,756 --> 0:09:56,406
还有一个例子是

308
00:09:56,406 --> 0:09:58,516
假设我很匆忙

309
00:09:58,516 --> 0:10:00,166
我可以在打开 App

310
00:09:58,516 --> 0:10:00,166
我可以在打开 App

311
00:10:00,166 --> 0:10:01,976
的过程中开始进行交互操作

312
00:10:03,436 --> 0:10:05,366
这些事情看起来可能

313
00:10:05,366 --> 0:10:06,766
没有那么重要

314
00:10:06,876 --> 0:10:08,256
但我们发现如果想要界面

315
00:10:08,256 --> 0:10:09,786
一直能及时响应

316
00:10:09,786 --> 0:10:11,426
并理解你的意图

317
00:10:11,426 --> 0:10:11,576
这非常重要

318
00:10:12,006 --> 0:10:13,566
能让人感到灵活

319
00:10:13,566 --> 0:10:16,306
而且这对于

320
00:10:16,306 --> 0:10:17,416
你对界面的期待和理解

321
00:10:17,416 --> 0:10:18,776
以及使用的舒适度

322
00:10:19,196 --> 0:10:20,396
也非常重要

323
00:10:20,716 --> 0:10:22,766
要明白 当你需要的时候

324
00:10:22,766 --> 0:10:23,436
它必须永远能及时响应

325
00:10:23,966 --> 0:10:27,776
这也适用于

326
00:10:27,776 --> 0:10:29,476
动作的改变

327
00:10:29,756 --> 0:10:31,496
不仅是交互的开始

328
00:10:31,496 --> 0:10:33,526
还包括交互的中间过程

329
00:10:33,526 --> 0:10:34,106
你也在改变

330
00:10:34,666 --> 0:10:37,196
我们同样需要对中断

331
00:10:37,196 --> 0:10:37,486
及时响应

332
00:10:38,046 --> 0:10:39,236
一个好的案例是

333
00:10:39,236 --> 0:10:40,606
iPhone X 的多任务界面触发机制

334
00:10:41,456 --> 0:10:42,936
当你向上轻扫手指

335
00:10:42,936 --> 0:10:44,136
至屏幕的一半并暂停

336
00:10:44,136 --> 0:10:45,506
这就是暂停手势

337
00:10:45,506 --> 0:10:47,726
那么我们需要弄明白

338
00:10:47,726 --> 0:10:50,896
如何检测 这个运动中的变化

339
00:10:50,896 --> 0:10:52,166
我们要如何做呢

340
00:10:52,166 --> 0:10:53,576
如何检测这个动作中的变化

341
00:10:53,956 --> 0:10:55,036
是否需要用到定时器

342
00:10:55,306 --> 0:10:56,586
是否需要等到

343
00:10:56,586 --> 0:10:57,756
手指降低到某个速度

344
00:10:57,756 --> 0:10:59,486
并保持一段时间

345
00:10:59,536 --> 0:11:01,836
然后 [ 音质不清晰 ] 才能进入

346
00:10:59,536 --> 0:11:01,836
然后 [ 音质不清晰 ] 才能进入

347
00:11:01,836 --> 0:11:02,886
多任务界面呢

348
00:11:02,886 --> 0:11:04,976
事实证明这样太慢了

349
00:11:05,196 --> 0:11:06,636
人们期待能立刻

350
00:11:06,636 --> 0:11:08,086
进入多任务界面

351
00:11:08,786 --> 0:11:10,856
那么我们就需要想办法

352
00:11:10,856 --> 0:11:13,986
和他们响应得一样快

353
00:11:14,206 --> 0:11:15,116
我们不需要关注

354
00:11:15,116 --> 0:11:16,376
手指的加速度

355
00:11:17,266 --> 0:11:18,636
实际上当你暂停时

356
00:11:18,636 --> 0:11:20,336
你的手指滑动速度

357
00:11:20,336 --> 0:11:21,416
会急剧提高

358
00:11:21,816 --> 0:11:23,056
而且你暂停得越快

359
00:11:23,056 --> 0:11:25,226
iPhone X 检测到的也就越快

360
00:11:25,776 --> 0:11:27,016
因此这种响应运动变化的方式

361
00:11:27,016 --> 0:11:30,886
其实和我们所知的一样快

362
00:11:30,886 --> 0:11:31,676
而不是使用等待定时器的方式

363
00:11:33,006 --> 0:11:34,326
这就是尽快响应

364
00:11:34,326 --> 0:11:35,666
重新定向的

365
00:11:35,666 --> 0:11:37,006
一个好案例

366
00:11:37,586 --> 0:11:42,436
这就是中断和重新定向的概念

367
00:11:43,096 --> 0:11:44,426
它们让界面和你

368
00:11:44,426 --> 0:11:46,246
非常非常匹配

369
00:11:47,596 --> 0:11:50,576
接下来我们将稍微谈谈

370
00:11:50,576 --> 0:11:52,096
界面的构造

371
00:11:52,096 --> 0:11:52,976
从概念上讲

372
00:11:53,716 --> 0:11:54,406
就是你如何布局

373
00:11:55,696 --> 0:11:56,596
我们认为当你布局的时候

374
00:11:56,596 --> 0:11:58,006
必须保持

375
00:11:58,116 --> 0:11:59,846
在移动中的

376
00:11:59,956 --> 0:12:00,246
空间一致性

377
00:11:59,956 --> 0:12:00,246
空间一致性

378
00:12:01,126 --> 0:12:01,686
这是什么意思 

379
00:12:02,526 --> 0:12:03,716
这有点模仿了

380
00:12:03,766 --> 0:12:05,656
现实生活中客体连续性记忆

381
00:12:05,806 --> 0:12:06,436
的工作原理

382
00:12:07,116 --> 0:12:08,766
所以在现实生活中我们会感受到

383
00:12:08,766 --> 0:12:09,756
物体以对称路径的方式

384
00:12:09,866 --> 0:12:10,426
出现和消失

385
00:12:11,866 --> 0:12:13,246
假如某个事物以某种方式消失了

386
00:12:13,246 --> 0:12:15,556
我们会期望它从出现的地方

387
00:12:15,556 --> 0:12:16,146
再次显露 对吧

388
00:12:16,306 --> 0:12:18,056
如果我从舞台的一侧消失

389
00:12:18,056 --> 0:12:20,006
然后从舞台的另一侧出现

390
00:12:20,136 --> 0:12:22,496
你们就会非常疑惑 对吗

391
00:12:22,846 --> 0:12:24,776
因为这是不可能的

392
00:12:25,486 --> 0:12:27,256
所以我们希望延续这种

393
00:12:27,736 --> 0:12:29,516
现实世界中的

394
00:12:29,516 --> 0:12:31,246
空间一致感

395
00:12:31,806 --> 0:12:34,776
这也就意味着

396
00:12:34,776 --> 0:12:36,116
在界面中如果某个元素

397
00:12:36,116 --> 0:12:37,186
在你的视野中消失

398
00:12:37,186 --> 0:12:39,156
然后再出现

399
00:12:39,156 --> 0:12:40,386
它应该是以对称路径的方式进行

400
00:12:40,796 --> 0:12:42,006
并拥有一致的

401
00:12:42,096 --> 0:12:44,836
出现消失路径

402
00:12:44,836 --> 0:12:45,756
比如 

403
00:12:45,916 --> 0:12:47,246
在 iOS 的导航中

404
00:12:47,246 --> 0:12:48,706
如果我点击列表中的元素

405
00:12:48,706 --> 0:12:50,406
它从屏幕右边滑入

406
00:12:51,196 --> 0:12:52,636
当我点击返回按钮时

407
00:12:52,636 --> 0:12:53,866
它将返回右侧

408
00:12:53,926 --> 0:12:55,656
这就是对称式路径

409
00:12:55,656 --> 0:12:57,276
两个状态下

410
00:12:57,276 --> 0:12:58,626
每个元素都有一个存在的

411
00:12:58,716 --> 0:12:59,286
固定区域

412
00:12:59,966 --> 0:13:01,646
这也强化了手势

413
00:12:59,966 --> 0:13:01,646
这也强化了手势

414
00:13:01,646 --> 0:13:03,336
如果我将其滑回右侧

415
00:13:03,416 --> 0:13:04,576
因为我知道

416
00:13:04,576 --> 0:13:05,586
它属于那里

417
00:13:05,586 --> 0:13:05,786
我就能这么做

418
00:13:05,786 --> 0:13:06,466
这是可以预期的

419
00:13:07,426 --> 0:13:08,686
如果我们不这么做

420
00:13:09,146 --> 0:13:10,236
看这个例子

421
00:13:10,236 --> 0:13:11,816
我轻敲后 页面从右侧滑入

422
00:13:11,816 --> 0:13:13,926
然后我点击返回

423
00:13:13,926 --> 0:13:14,316
它下移消失

424
00:13:14,316 --> 0:13:15,916
这就会有种割裂感

425
00:13:15,916 --> 0:13:16,796
并让人疑惑

426
00:13:17,476 --> 0:13:18,826
就好像我正在把它

427
00:13:19,136 --> 0:13:19,576
发送到哪里

428
00:13:19,576 --> 0:13:20,626
事实上 如果我想传达

429
00:13:20,626 --> 0:13:21,736
我正在把它发送到哪里

430
00:13:21,736 --> 0:13:22,746
这就是我操作的方式

431
00:13:22,746 --> 0:13:23,616
对吧

432
00:13:24,816 --> 0:13:26,496
所以这就是

433
00:13:26,496 --> 0:13:27,246
空间一致性

434
00:13:28,056 --> 0:13:29,396
它让手势操作

435
00:13:29,396 --> 0:13:30,736
与我们对物理世界空间

436
00:13:30,736 --> 0:13:33,796
的理解相匹配

437
00:13:33,796 --> 0:13:37,906
接下来是 暗示手势操作方向

438
00:13:38,796 --> 0:13:40,216
大家知道 我们人类总是

439
00:13:40,306 --> 0:13:41,596
会根据经验

440
00:13:41,596 --> 0:13:43,356
来预测下一步

441
00:13:43,746 --> 0:13:44,906
我们总是

442
00:13:44,906 --> 0:13:46,026
通过世界中

443
00:13:46,026 --> 0:13:47,546
万物的轨迹

444
00:13:47,546 --> 0:13:49,296
来预测接下来的运动

445
00:13:50,316 --> 0:13:52,016
所以我们认为界面中

446
00:13:52,046 --> 0:13:53,456
引入预测

447
00:13:53,456 --> 0:13:53,906
是非常好的

448
00:13:54,556 --> 0:13:56,246
如果你有两个状态

449
00:13:56,966 --> 0:13:58,706
初始态和终止态

450
00:13:59,336 --> 0:14:01,996
当然你还有中间过渡

451
00:13:59,336 --> 0:14:01,996
当然你还有中间过渡

452
00:14:01,996 --> 0:14:03,746
物体需要在两种状态中

453
00:14:04,006 --> 0:14:05,586
平滑转换

454
00:14:05,586 --> 0:14:07,176
从初始态平滑过渡

455
00:14:07,176 --> 0:14:08,416
到终止态

456
00:14:08,536 --> 0:14:10,086
不管是通过

457
00:14:10,086 --> 0:14:11,396
手势操作还是动效变化

458
00:14:12,666 --> 0:14:13,856
一个很好的例子就是

459
00:14:13,856 --> 0:14:14,486
控制中心

460
00:14:15,206 --> 0:14:16,476
控制中心的模块

461
00:14:16,476 --> 0:14:17,516
会根据你的

462
00:14:17,636 --> 0:14:19,286
按下操作变大

463
00:14:19,516 --> 0:14:22,696
并向你手指移动

464
00:14:22,696 --> 0:14:26,426
最终 弹开

465
00:14:26,566 --> 0:14:27,596
这就是暗示

466
00:14:28,216 --> 0:14:29,586
它让手势操作充满预期

467
00:14:29,586 --> 0:14:33,626
并可预测

468
00:14:33,626 --> 0:14:35,646
接下来一个重要的原则是

469
00:14:35,646 --> 0:14:37,556
触摸交互

470
00:14:37,606 --> 0:14:38,786
轻量化

471
00:14:39,546 --> 0:14:40,526
我想大家都知道

472
00:14:40,526 --> 0:14:41,836
多点触控的轻盈

473
00:14:41,946 --> 0:14:43,686
是其最被低估的一面

474
00:14:44,046 --> 0:14:46,386
它可以检测到空气般的轻扫

475
00:14:46,386 --> 0:14:48,576
滑动 轻敲等

476
00:14:48,576 --> 0:14:49,646
我们习以为常的操作

477
00:14:49,646 --> 0:14:51,236
这些操作是如此轻柔

478
00:14:51,736 --> 0:14:53,876
但我们希望放大

479
00:14:53,876 --> 0:14:54,436
它们的动作

480
00:14:54,926 --> 0:14:56,726
我们希望在移动

481
00:14:56,726 --> 0:14:58,566
或投掷某物的时候

482
00:14:58,566 --> 0:15:00,336
让小的投入产生大的效果

483
00:14:58,566 --> 0:15:00,336
让小的投入产生大的效果

484
00:15:00,336 --> 0:15:01,656
从而产生

485
00:15:01,656 --> 0:15:03,066
令人满意的感觉

486
00:15:03,096 --> 0:15:05,416
那么这将如何应用到我们的

487
00:15:05,416 --> 0:15:06,006
界面上呢

488
00:15:06,086 --> 0:15:07,816
这就需要从短交互

489
00:15:07,876 --> 0:15:08,476
开始说起

490
00:15:09,226 --> 0:15:11,016
这是短小轻量的交互

491
00:15:11,856 --> 0:15:14,256
我们运用了所有传感器

492
00:15:14,256 --> 0:15:16,586
和技术来尽可能地理解

493
00:15:17,096 --> 0:15:18,956
并建立手势操作的

494
00:15:18,956 --> 0:15:21,836
能量和动量文档

495
00:15:23,306 --> 0:15:24,426
运用一切已知信息

496
00:15:24,426 --> 0:15:26,256
包括位置 速度

497
00:15:26,416 --> 0:15:30,566
速率 力度来产生

498
00:15:30,566 --> 0:15:32,746
这个手势的惯性文档

499
00:15:32,746 --> 0:15:34,506
然后我们检测并

500
00:15:34,506 --> 0:15:37,986
放大移动的效果

501
00:15:37,986 --> 0:15:39,556
使其仍然感觉像是你自身的延伸

502
00:15:40,146 --> 0:15:41,696
因此你通过一个轻量的交互

503
00:15:41,926 --> 0:15:43,666
就可以获得满意的结果

504
00:15:45,156 --> 0:15:46,936
例如在滚动页面

505
00:15:46,936 --> 0:15:47,876
的过程中

506
00:15:47,876 --> 0:15:49,756
你的手指实际上只停留在

507
00:15:49,836 --> 0:15:51,876
屏幕上一小段时间

508
00:15:51,876 --> 0:15:53,496
但系统能保留你所有的

509
00:15:53,576 --> 0:15:54,926
能量和动量

510
00:15:54,986 --> 0:15:56,466
并将其优雅地转入到

511
00:15:56,466 --> 0:15:57,066
界面中

512
00:15:58,276 --> 0:15:59,506
那么如果它不能这么做呢

513
00:16:00,566 --> 0:16:02,566
如果没有这些相同的滑动

514
00:16:02,566 --> 0:16:03,526
你将无法移动这么远的距离

515
00:16:04,416 --> 0:16:07,946
而且为了滚动页面

516
00:16:07,946 --> 0:16:09,816
你将不得不进行一些

517
00:16:09,946 --> 0:16:11,766
需要更多手指运动的费劲的

518
00:16:11,766 --> 0:16:12,686
滑动操作

519
00:16:12,686 --> 0:16:14,616
使用的时候将会异常痛苦

520
00:16:15,816 --> 0:16:17,196
另一个案例是

521
00:16:17,296 --> 0:16:18,326
上滑返回桌面

522
00:16:19,076 --> 0:16:20,026
你只需要在屏幕上

523
00:16:20,026 --> 0:16:22,026
轻轻一滑

524
00:16:22,736 --> 0:16:26,016
就会呈现出一个

525
00:16:26,016 --> 0:16:27,656
流畅并且轻量的多点触控手势操作

526
00:16:27,686 --> 0:16:29,466
感觉就像是

527
00:16:29,466 --> 0:16:30,706
天生内置的

528
00:16:31,506 --> 0:16:32,726
同时仅凭一个按钮

529
00:16:32,726 --> 0:16:33,976
就能大量重复使用

530
00:16:33,976 --> 0:16:35,346
你的肌肉信息

531
00:16:35,346 --> 0:16:36,676
因为当你松手的时候

532
00:16:36,676 --> 0:16:37,686
屏幕就会返回面板状态

533
00:16:38,306 --> 0:16:43,336
不仅滑动

534
00:16:43,376 --> 0:16:44,446
点击也是如此

535
00:16:44,886 --> 0:16:46,166
界面对每个交互进行

536
00:16:46,166 --> 0:16:48,186
令人满意的响应

537
00:16:48,186 --> 0:16:48,746
是一件非常重要的事情

538
00:16:49,136 --> 0:16:50,416
界面不停向你传递

539
00:16:50,416 --> 0:16:51,886
它理解你的信号

540
00:16:52,336 --> 0:16:53,676
让你感觉界面

541
00:16:53,676 --> 0:16:55,096
充满活力

542
00:16:55,096 --> 0:16:55,816
并与你相联

543
00:16:56,916 --> 0:16:57,956
这就是我要说的

544
00:16:57,956 --> 0:16:59,766
轻量化和放大

545
00:17:01,596 --> 0:17:03,246
接下来要说的是

546
00:17:03,416 --> 0:17:04,006
Rubber Banding

547
00:17:05,066 --> 0:17:07,156
它指我们柔和地

548
00:17:07,156 --> 0:17:08,665
表明边界

549
00:17:08,665 --> 0:17:12,296
在这个例子中

550
00:17:12,296 --> 0:17:14,215
界面渐进且柔和地

551
00:17:14,296 --> 0:17:16,266
让你知道那边没有内容

552
00:17:16,266 --> 0:17:17,346
全程追踪

553
00:17:17,425 --> 0:17:17,796
你的操作

554
00:17:18,086 --> 0:17:19,266
并让你知道

555
00:17:19,266 --> 0:17:20,165
它很理解你

556
00:17:21,016 --> 0:17:22,026
如果没这么做的话

557
00:17:22,026 --> 0:17:22,246
会怎么样呢

558
00:17:22,246 --> 0:17:23,846
结果会是这样

559
00:17:23,846 --> 0:17:25,106
移动整个界面的手将会

560
00:17:25,106 --> 0:17:25,726
非常粘涩 令人不安

561
00:17:25,726 --> 0:17:27,126
就像撞上了一堵墙

562
00:17:27,126 --> 0:17:28,326
感觉就像坏了 对吧

563
00:17:28,776 --> 0:17:29,976
你将无法理解

564
00:17:29,976 --> 0:17:31,476
冻结的手机

565
00:17:31,476 --> 0:17:33,076
和上滑到屏幕边缘的

566
00:17:33,076 --> 0:17:34,696
手机之间的区别

567
00:17:34,786 --> 0:17:36,406
所以告诉你

568
00:17:36,406 --> 0:17:37,456
已经抵达了边缘

569
00:17:37,456 --> 0:17:38,346
是一件重要的事情

570
00:17:38,736 --> 0:17:41,706
这同样也适用于从一个状态

571
00:17:41,706 --> 0:17:42,666
到另一个状态的过渡

572
00:17:42,666 --> 0:17:43,736
这不仅仅是当你轻敲边缘

573
00:17:43,736 --> 0:17:45,086
还有你从一件事

574
00:17:45,086 --> 0:17:47,466
接力到另一件事

575
00:17:47,846 --> 0:17:50,926
追踪

576
00:17:50,926 --> 0:17:53,026
以上滑桌面

577
00:17:53,026 --> 0:17:54,876
和上滑 App 为例

578
00:17:55,566 --> 0:17:56,926
这并不像撞上了一面墙

579
00:17:56,926 --> 0:17:58,006
停止追踪物体

580
00:17:58,006 --> 0:17:59,196
然后由另一个物体接管

581
00:17:59,536 --> 0:18:01,466
它们都以顺滑的曲线

582
00:17:59,536 --> 0:18:01,466
它们都以顺滑的曲线

583
00:18:01,526 --> 0:18:04,026
进行平滑切换

584
00:18:04,026 --> 0:18:06,166
不会让你感觉这是

585
00:18:06,166 --> 0:18:07,696
一个物体接管另一个物体的

586
00:18:07,696 --> 0:18:10,146
粗糙时刻

587
00:18:10,146 --> 0:18:12,236
接下来是设计平滑的

588
00:18:12,236 --> 0:18:13,216
运动效果

589
00:18:14,546 --> 0:18:16,166
假设有一个小物体

590
00:18:16,666 --> 0:18:18,206
在这儿上下移动

591
00:18:18,206 --> 0:18:18,936
非常简单

592
00:18:19,636 --> 0:18:22,396
但是我们都知道这个物体

593
00:18:22,396 --> 0:18:23,626
实际上并没有动 对吧

594
00:18:24,316 --> 0:18:25,456
我们只是视觉上感到

595
00:18:25,456 --> 0:18:26,676
它在移动

596
00:18:26,676 --> 0:18:27,536
因为我们同时

597
00:18:27,636 --> 0:18:29,466
在屏幕上看到很多帧

598
00:18:29,466 --> 0:18:31,456
它们让我们有物体在运动

599
00:18:31,456 --> 0:18:32,476
的错觉

600
00:18:33,096 --> 0:18:33,916
如果我们把所有这些

601
00:18:33,916 --> 0:18:35,306
构成运动的帧

602
00:18:35,306 --> 0:18:36,176
分散开来

603
00:18:36,176 --> 0:18:37,806
就能看到小球运动

604
00:18:37,806 --> 0:18:40,356
的全过程

605
00:18:40,356 --> 0:18:42,746
我们关心的问题是

606
00:18:42,746 --> 0:18:44,566
这里相邻的两帧

607
00:18:44,566 --> 0:18:46,686
出现了明显的

608
00:18:47,176 --> 0:18:48,246
视觉变化

609
00:18:48,626 --> 0:18:50,846
这时候整个界面

610
00:18:50,846 --> 0:18:52,866
会感觉有点 不连贯

611
00:18:53,326 --> 0:18:54,786
出现视觉频闪

612
00:18:55,796 --> 0:18:57,246
这是因为

613
00:18:57,246 --> 0:18:59,776
这两帧的差别实在太大了

614
00:19:00,966 --> 0:19:02,736
以至于你的视觉跟不上

615
00:19:02,736 --> 0:19:03,626
出现了频闪

616
00:19:03,626 --> 0:19:04,576
看这个例子

617
00:19:04,576 --> 0:19:07,766
两个物体都以 30 每帧传输帧数运动

618
00:19:08,266 --> 0:19:09,276
但左边的看起来

619
00:19:09,356 --> 0:19:10,596
要比右边的稍微顺畅些

620
00:19:10,596 --> 0:19:11,476
因为右边的

621
00:19:11,476 --> 0:19:14,036
运动得太快了

622
00:19:14,606 --> 0:19:15,336
产生了频闪

623
00:19:15,416 --> 0:19:19,946
我的视觉感受有点被破坏了

624
00:19:19,946 --> 0:19:21,806
我不再相信它正在

625
00:19:21,806 --> 0:19:22,676
平滑运动

626
00:19:23,566 --> 0:19:24,896
在设计中重要的

627
00:19:24,896 --> 0:19:27,016
不是帧速率

628
00:19:27,556 --> 0:19:28,876
而是帧内容

629
00:19:29,746 --> 0:19:31,426
我们有点被帧速率

630
00:19:31,466 --> 0:19:32,956
和我们能在保持顺畅运动的同时

631
00:19:32,956 --> 0:19:34,736
运动多快

632
00:19:34,736 --> 0:19:35,186
限制住了

633
00:19:36,036 --> 0:19:38,216
那么这个是 30 每秒传输帧数

634
00:19:38,526 --> 0:19:40,016
如果我们将它提高到 60 每秒传输帧数

635
00:19:40,016 --> 0:19:42,036
大家能够看到

636
00:19:42,036 --> 0:19:43,286
我们实际上能变得更快一点

637
00:19:43,286 --> 0:19:45,486
而且还能保持

638
00:19:45,576 --> 0:19:46,406
流畅的运动

639
00:19:46,606 --> 0:19:47,776
我们可以呈现更快的运动

640
00:19:47,776 --> 0:19:48,586
并且不会出现频闪

641
00:19:49,556 --> 0:19:50,736
我们还能做得更多

642
00:19:50,736 --> 0:19:52,556
比如 动态模糊

643
00:19:52,556 --> 0:19:55,696
它能在呈现运动状态的每帧中

644
00:19:55,696 --> 0:19:57,476
加入更多信息

645
00:19:57,476 --> 0:19:59,276
就像我们的眼睛

646
00:19:59,276 --> 0:20:00,406
或者照相机

647
00:19:59,276 --> 0:20:00,406
或者照相机

648
00:20:00,406 --> 0:20:01,086
的工作原理

649
00:20:02,256 --> 0:20:03,316
你还可以通过拉伸

650
00:20:03,356 --> 0:20:05,396
从 2D 动画和视频游戏中

651
00:20:05,396 --> 0:20:07,026
选取一页

652
00:20:07,026 --> 0:20:07,786
从每一帧中拉伸内容

653
00:20:07,786 --> 0:20:09,536
这样物体在高速运动时

654
00:20:09,536 --> 0:20:12,376
还能看起来很流畅

655
00:20:12,376 --> 0:20:15,466
这就是运动拉伸技术

656
00:20:16,126 --> 0:20:19,246
那么在运动中

657
00:20:19,246 --> 0:20:20,086
看起来就是这样的

658
00:20:20,746 --> 0:20:22,126
上面的每种方式

659
00:20:22,126 --> 0:20:23,866
都像是试图

660
00:20:23,866 --> 0:20:26,556
在运动中将更多的

661
00:20:26,776 --> 0:20:28,466
信息进行

662
00:20:28,466 --> 0:20:28,896
视觉编码

663
00:20:29,546 --> 0:20:30,386
我想再稍微多谈一下

664
00:20:30,386 --> 0:20:31,286
这里的最后一点

665
00:20:31,286 --> 0:20:32,906
运动拉伸

666
00:20:32,906 --> 0:20:34,206
因为我们实际上在 iPhone X 上操作

667
00:20:34,876 --> 0:20:36,136
大家知道当你启动 App 的时候

668
00:20:36,136 --> 0:20:40,606
图标会弹性伸缩成

669
00:20:41,076 --> 0:20:41,636
App 界面

670
00:20:42,366 --> 0:20:43,726
并在你关闭 App 的时候

671
00:20:43,726 --> 0:20:45,096
以相反的方向

672
00:20:45,096 --> 0:20:45,556
进行伸缩

673
00:20:45,946 --> 0:20:46,876
由于在运动的每帧之间

674
00:20:46,876 --> 0:20:48,486
增加了一点额外信息

675
00:20:48,486 --> 0:20:49,786
因此整个运动看起来

676
00:20:49,786 --> 0:20:53,366
更加顺滑

677
00:20:53,366 --> 0:20:55,356
最后 我们想考虑操作

678
00:20:55,396 --> 0:20:57,546
而非动画

679
00:20:58,226 --> 0:20:59,226
大家知道现实世界中的事物

680
00:20:59,226 --> 0:21:00,836
总是处于

681
00:20:59,226 --> 0:21:00,836
总是处于

682
00:21:00,836 --> 0:21:02,006
动态变化中

683
00:21:02,006 --> 0:21:03,516
并且总是会受到你的影响

684
00:21:03,886 --> 0:21:05,316
并不像动画片中的

685
00:21:05,356 --> 0:21:06,886
那样运动

686
00:21:06,936 --> 0:21:07,366
对吧

687
00:21:07,366 --> 0:21:09,336
也没有现实生活

688
00:21:09,336 --> 0:21:10,786
制定的动画曲线

689
00:21:11,406 --> 0:21:12,256
所以我们认为

690
00:21:12,256 --> 0:21:13,816
动画和操作更像是

691
00:21:13,866 --> 0:21:15,216
你和物体之间的

692
00:21:15,216 --> 0:21:15,626
一场对话

693
00:21:15,956 --> 0:21:17,376
而非界面的描述

694
00:21:17,956 --> 0:21:21,436
所以 不要试图把静态的事物转化为动画

695
00:21:21,436 --> 0:21:22,926
而应该更多地去思考

696
00:21:22,956 --> 0:21:23,806
行为本身

697
00:21:24,506 --> 0:21:26,206
Nathan 稍后将具体谈到

698
00:21:26,206 --> 0:21:26,826
这一点

699
00:21:27,186 --> 0:21:28,546
但是让我快速举个例子

700
00:21:29,186 --> 0:21:33,036
在照片这个 App 中

701
00:21:33,036 --> 0:21:36,256
滑动照片的阻力很小

702
00:21:36,826 --> 0:21:38,586
因为它在概念上就很轻量化

703
00:21:38,716 --> 0:21:40,596
但是当你滑动切换 App 时

704
00:21:40,766 --> 0:21:42,386
阻力会稍微大些

705
00:21:42,386 --> 0:21:44,366
因为它在概念上更重

706
00:21:44,366 --> 0:21:45,936
所以我们赋予了系统更重的质量

707
00:21:48,516 --> 0:21:54,696
[ 掌声 ]

708
00:21:55,196 --> 0:21:56,366
好了 这就是我想说的

709
00:21:56,476 --> 0:21:58,606
如何设计像我们一样

710
00:21:58,736 --> 0:22:01,606
思考和工作的界面

711
00:21:58,736 --> 0:22:01,606
思考和工作的界面

712
00:22:02,876 --> 0:22:04,906
界面通过响应

713
00:22:05,496 --> 0:22:06,586
让我们感受到与事物的连接

714
00:22:06,616 --> 0:22:08,546
并且适应我们

715
00:22:08,546 --> 0:22:10,286
不停变化的思维

716
00:22:11,156 --> 0:22:12,986
保持空间一致性

717
00:22:13,246 --> 0:22:17,286
来加强统一的空间感

718
00:22:17,286 --> 0:22:18,626
以及对称的过渡方式

719
00:22:19,466 --> 0:22:21,646
暗示手势操作的方向

720
00:22:22,046 --> 0:22:23,526
来影响我们

721
00:22:23,526 --> 0:22:24,036
对未来的预期

722
00:22:24,156 --> 0:22:26,586
保持交互轻量化

723
00:22:26,586 --> 0:22:28,686
但放大其效果

724
00:22:29,536 --> 0:22:31,286
在保持互动的轻盈性

725
00:22:31,366 --> 0:22:32,196
和轻量的同时

726
00:22:32,196 --> 0:22:33,836
获得令人满意的响应

727
00:22:34,506 --> 0:22:38,036
在界面中采用

728
00:22:38,036 --> 0:22:39,076
柔性边界

729
00:22:39,516 --> 0:22:42,066
并在你触及边界

730
00:22:42,066 --> 0:22:44,696
以及转换追踪物体时

731
00:22:44,696 --> 0:22:45,726
进行优雅的响应

732
00:22:46,446 --> 0:22:49,456
设计与你同步工作的

733
00:22:49,486 --> 0:22:51,976
顺滑动态的行为

734
00:22:52,566 --> 0:22:57,516
好了 这就是如何设计

735
00:22:57,516 --> 0:22:58,366
像我们大脑延伸般的

736
00:22:58,366 --> 0:23:00,936
界面的几点原则

737
00:22:58,366 --> 0:23:00,936
界面的几点原则

738
00:23:01,846 --> 0:23:03,136
让我们再深入一点

739
00:23:03,136 --> 0:23:04,096
我将把舞台交给我的同事

740
00:23:04,096 --> 0:23:05,396
Nathan de Vries

741
00:23:05,756 --> 0:23:07,616
他将谈到

742
00:23:07,616 --> 0:23:09,006
如何设计动作

743
00:23:09,056 --> 0:23:10,566
使其与你自身

744
00:23:10,566 --> 0:23:12,346
和自然世界

745
00:23:12,346 --> 0:23:12,976
完美连接

746
00:23:13,516 --> 0:23:22,006
[ 掌声 ]

747
00:23:22,506 --> 0:23:23,036
&gt;&gt; 谢谢 Chan

748
00:23:24,016 --> 0:23:24,686
大家好

749
00:23:24,736 --> 0:23:26,866
我叫 Nathan

750
00:23:26,866 --> 0:23:28,406
今天非常激动能站在这里

751
00:23:28,406 --> 0:23:29,796
和大家谈谈

752
00:23:29,866 --> 0:23:30,806
用动态运动进行设计

753
00:23:32,196 --> 0:23:34,666
正如 Chan 刚刚提到的

754
00:23:34,666 --> 0:23:36,326
我们的思维和身体总是

755
00:23:36,326 --> 0:23:37,276
处于运动状态

756
00:23:37,396 --> 0:23:38,636
我们周围的世界

757
00:23:38,636 --> 0:23:39,556
也处于运动状态

758
00:23:40,046 --> 0:23:42,366
这就导致了

759
00:23:42,366 --> 0:23:44,566
我们希望当界面

760
00:23:44,756 --> 0:23:46,396
变得更加有触感时

761
00:23:46,396 --> 0:23:48,466
界面也同样

762
00:23:48,466 --> 0:23:50,766
能将我们的期望

763
00:23:50,766 --> 0:23:51,676
变得更加真实

764
00:23:53,026 --> 0:23:54,686
现在在界面中使用动态的

765
00:23:54,686 --> 0:23:57,576
一种方式是定时动画

766
00:23:58,286 --> 0:23:59,366
只要敲屏幕上的一个按钮

767
00:23:59,366 --> 0:24:01,746
控制权就像是

768
00:23:59,366 --> 0:24:01,746
控制权就像是

769
00:24:01,746 --> 0:24:03,406
完全交给了设计者

770
00:24:04,256 --> 0:24:06,016
他们的职责就是

771
00:24:06,066 --> 0:24:08,206
在时间中精心制作

772
00:24:08,206 --> 0:24:09,076
这些完美的帧

773
00:24:09,656 --> 0:24:11,816
一旦动画完成

774
00:24:11,816 --> 0:24:13,306
控制权又交还给了

775
00:24:13,306 --> 0:24:14,706
界面的使用者

776
00:24:14,706 --> 0:24:17,466
让他们继续互动

777
00:24:18,336 --> 0:24:19,536
所以你们可以把

778
00:24:19,536 --> 0:24:21,286
动画和互动看成是

779
00:24:21,356 --> 0:24:23,716
一段时间内

780
00:24:23,716 --> 0:24:24,836
在调用和响应模式间的

781
00:24:24,886 --> 0:24:28,006
线性移动

782
00:24:28,166 --> 0:24:30,056
在一个流畅的界面中

783
00:24:30,056 --> 0:24:33,026
使用者动态化的本质是

784
00:24:33,026 --> 0:24:35,046
从我们这些设计者手中

785
00:24:35,046 --> 0:24:36,146
拿走控制权

786
00:24:37,196 --> 0:24:39,016
那么我们的作用就是

787
00:24:39,016 --> 0:24:42,186
想办法设计如何让动态

788
00:24:42,186 --> 0:24:43,686
与互动同步运行

789
00:24:44,366 --> 0:24:46,676
这就需要通过这些

790
00:24:46,676 --> 0:24:49,016
持续运行和活跃的

791
00:24:49,346 --> 0:24:51,646
动态行为来完成

792
00:24:52,206 --> 0:24:55,016
那么今天

793
00:24:55,056 --> 0:24:57,156
我主要想讲的就是

794
00:24:57,156 --> 0:24:57,676
这些动态操作

795
00:24:58,236 --> 0:25:00,746
首先我们来谈谈

796
00:24:58,236 --> 0:25:00,746
首先我们来谈谈

797
00:25:00,816 --> 0:25:02,756
无缝动态

798
00:25:03,476 --> 0:25:06,226
就是这个动态元素

799
00:25:06,226 --> 0:25:07,486
让我们感觉

800
00:25:07,486 --> 0:25:09,656
动态动作是自身的延伸

801
00:25:11,076 --> 0:25:12,386
下面让我们来看看人像

802
00:25:12,386 --> 0:25:14,806
如何在即便没有时间曲线

803
00:25:14,806 --> 0:25:16,196
和定时动画的情况下

804
00:25:16,196 --> 0:25:19,836
也能在你的界面的运动中

805
00:25:19,956 --> 0:25:22,566
引入可玩性

806
00:25:22,566 --> 0:25:23,206
个性 以及纹理的概念

807
00:25:24,696 --> 0:25:26,196
最后我们还将看看

808
00:25:26,196 --> 0:25:27,816
动态自身如何给我们提供一些

809
00:25:27,906 --> 0:25:29,916
关于人们想要对界面

810
00:25:29,996 --> 0:25:32,126
做的事情的线索

811
00:25:32,366 --> 0:25:33,456
我们如何通过

812
00:25:33,456 --> 0:25:35,176
观看手势的动作

813
00:25:35,176 --> 0:25:36,796
来解决一些

814
00:25:36,796 --> 0:25:38,816
手势想要做的事件

815
00:25:38,816 --> 0:25:39,206
的不确定性

816
00:25:39,906 --> 0:25:44,206
那么首先

817
00:25:44,296 --> 0:25:45,516
让我们来看看无缝动态

818
00:25:45,916 --> 0:25:47,466
这是什么意思呢

819
00:25:48,696 --> 0:25:49,866
先来看个

820
00:25:49,866 --> 0:25:51,116
我想大家都很熟悉的

821
00:25:51,936 --> 0:25:53,496
例子吧

822
00:25:54,236 --> 0:25:56,086
这儿有辆车

823
00:25:56,266 --> 0:25:58,086
正在以持续的速度前进

824
00:25:58,776 --> 0:25:59,636
然后驾驶员踩了刹车

825
00:25:59,636 --> 0:26:01,336
车子完全

826
00:25:59,636 --> 0:26:01,336
车子完全

827
00:26:01,336 --> 0:26:02,126
停下来了

828
00:26:02,126 --> 0:26:05,636
我们再来看一遍

829
00:26:05,756 --> 0:26:07,756
但这次我们将汽车在这段时间内的位置

830
00:26:07,756 --> 0:26:08,946
划分成小块

831
00:26:09,466 --> 0:26:12,826
在曲线的最前段

832
00:26:12,826 --> 0:26:14,186
它几乎是直线

833
00:26:14,236 --> 0:26:15,816
向右上方延伸

834
00:26:16,176 --> 0:26:17,376
这表明汽车

835
00:26:17,376 --> 0:26:19,056
正在以几乎恒定的速率移动

836
00:26:19,056 --> 0:26:20,906
几乎不变

837
00:26:21,706 --> 0:26:22,626
但是之后你会注意到

838
00:26:22,626 --> 0:26:24,356
曲线开始弯曲了

839
00:26:24,546 --> 0:26:27,406
光滑地偏离了一开始的

840
00:26:27,406 --> 0:26:28,206
这条直线

841
00:26:28,496 --> 0:26:30,166
这是因为踩了刹车

842
00:26:30,406 --> 0:26:32,016
由于阻力

843
00:26:32,016 --> 0:26:33,346
汽车减速了

844
00:26:34,336 --> 0:26:35,796
然后在曲线的末尾

845
00:26:35,796 --> 0:26:36,986
它完全平了

846
00:26:37,056 --> 0:26:38,206
是水平的

847
00:26:38,206 --> 0:26:40,106
表明位置不再变化

848
00:26:40,676 --> 0:26:41,676
汽车停下来了

849
00:26:42,386 --> 0:26:45,916
因此这条位置曲线

850
00:26:46,006 --> 0:26:47,726
基本上就从视觉上展示了

851
00:26:47,766 --> 0:26:49,236
什么叫无痕动态

852
00:26:49,236 --> 0:26:51,446
线条完全是未被破坏的

853
00:26:52,286 --> 0:26:54,426
方向也没有突然的变化

854
00:26:55,916 --> 0:26:57,916
所以它是平滑无痕的

855
00:26:58,426 --> 0:27:00,136
实际上 即便汽车

856
00:26:58,426 --> 0:27:00,136
实际上 即便汽车

857
00:27:00,196 --> 0:27:02,816
将有新的动态动作

858
00:27:02,816 --> 0:27:06,866
比如导致摩擦阻力的刹车

859
00:27:08,346 --> 0:27:09,536
即便汽车完全停下了

860
00:27:09,536 --> 0:27:11,396
你也会注意到

861
00:27:11,396 --> 0:27:13,656
这条曲线是完全平滑的

862
00:27:13,656 --> 0:27:16,126
它难以察觉

863
00:27:16,126 --> 0:27:17,436
你无法指出汽车

864
00:27:17,476 --> 0:27:18,486
究竟是什么时候停下的

865
00:27:18,926 --> 0:27:21,936
那么为什么我要说汽车呢

866
00:27:21,936 --> 0:27:23,806
我们谈论的应该是界面

867
00:27:23,806 --> 0:27:24,666
对吧

868
00:27:25,866 --> 0:27:28,056
我们感觉

869
00:27:28,056 --> 0:27:29,596
物理世界的特征

870
00:27:29,596 --> 0:27:31,556
创造了完美的动作

871
00:27:32,636 --> 0:27:34,256
在座的每一位都会觉得

872
00:27:34,326 --> 0:27:36,786
这个汽车的例子是如此的简单

873
00:27:36,786 --> 0:27:38,276
因为我们有共识

874
00:27:38,276 --> 0:27:40,486
或者说都知道

875
00:27:40,486 --> 0:27:42,206
像汽车这样的物体在现实世界中

876
00:27:42,206 --> 0:27:42,676
是如何运动的

877
00:27:43,966 --> 0:27:47,086
这就给了我们一个参考点

878
00:27:47,276 --> 0:27:48,186
现在我并不是说我们需要

879
00:27:48,186 --> 0:27:49,736
打造一个完美的

880
00:27:49,806 --> 0:27:51,516
汽车物理模拟

881
00:27:51,516 --> 0:27:53,086
来运转我们的界面

882
00:27:53,616 --> 0:27:55,476
而是说我们可以参考汽车

883
00:27:55,556 --> 0:27:57,406
或在现实世界中

884
00:27:57,576 --> 0:27:58,896
我们抛掷或移动的

885
00:27:58,896 --> 0:28:01,636
其他物体的运动

886
00:27:58,896 --> 0:28:01,636
其他物体的运动

887
00:28:01,636 --> 0:28:02,676
并将它们运用到动态操作中去

888
00:28:02,726 --> 0:28:04,986
让动态变得更熟悉

889
00:28:04,986 --> 0:28:07,466
有联系

890
00:28:07,466 --> 0:28:09,086
或是让人信服

891
00:28:09,086 --> 0:28:11,756
这才是最重要的

892
00:28:11,986 --> 0:28:13,666
这个参考现实世界

893
00:28:13,666 --> 0:28:15,646
打造动态行为的想法

894
00:28:15,696 --> 0:28:17,906
从一开始的滑动中

895
00:28:17,906 --> 0:28:19,846
就已经运用到 iPhone 上了

896
00:28:21,016 --> 0:28:22,766
孩子可以随手拿起一台 iPhone

897
00:28:22,766 --> 0:28:24,156
然后在主屏幕

898
00:28:24,156 --> 0:28:25,936
滑动找到最喜欢的 App

899
00:28:25,936 --> 0:28:27,376
这就像在地上推动玩具小汽车

900
00:28:27,376 --> 0:28:30,666
一样简单

901
00:28:30,926 --> 0:28:32,716
那么这个滚动

902
00:28:32,796 --> 0:28:34,556
动态行为的

903
00:28:34,556 --> 0:28:36,116
一些特点

904
00:28:36,116 --> 0:28:36,606
是什么呢

905
00:28:37,646 --> 0:28:39,376
首先它利用了

906
00:28:39,376 --> 0:28:41,236
我们在现实世界中

907
00:28:41,236 --> 0:28:42,756
都有的关于

908
00:28:43,336 --> 0:28:45,276
物体运动的

909
00:28:45,276 --> 0:28:45,706
直觉和认知

910
00:28:45,706 --> 0:28:47,866
以及我们对于那些物体的影响

911
00:28:49,296 --> 0:28:51,366
这些物体的运动

912
00:28:51,686 --> 0:28:53,786
是完全无缝的

913
00:28:53,786 --> 0:28:55,086
因此当我和它们互动的时候

914
00:28:55,086 --> 0:28:57,306
当我拖拽它们的时候

915
00:28:57,396 --> 0:28:59,096
我的身体提供了运动的流畅性

916
00:28:59,096 --> 0:29:00,776
因为我的身体

917
00:28:59,096 --> 0:29:00,776
因为我的身体

918
00:29:00,776 --> 0:29:01,386
是流动的

919
00:29:02,476 --> 0:29:03,766
但是一旦我放开了那个物体

920
00:29:03,766 --> 0:29:06,926
它就会因为惯性

921
00:29:06,926 --> 0:29:07,716
慢慢地停下来

922
00:29:08,046 --> 0:29:09,346
因此我们有点像是在

923
00:29:09,346 --> 0:29:11,146
保持放入界面中的精力

924
00:29:11,146 --> 0:29:12,896
的动能

925
00:29:14,496 --> 0:29:15,896
用来滚动的阻力

926
00:29:15,956 --> 0:29:17,966
数量是持续不变的

927
00:29:18,066 --> 0:29:19,806
这就使得它是可预测的

928
00:29:19,876 --> 0:29:22,026
并且非常容易掌控

929
00:29:23,636 --> 0:29:25,956
最后 这个物体不可察觉地

930
00:29:25,986 --> 0:29:28,096
停下了

931
00:29:28,096 --> 0:29:29,246
有点像这辆车

932
00:29:29,246 --> 0:29:31,186
我们无法明确得知

933
00:29:31,186 --> 0:29:31,696
它究竟是何时停下的

934
00:29:32,566 --> 0:29:34,016
我们认为

935
00:29:34,516 --> 0:29:36,366
这种明显感觉不到的结尾

936
00:29:36,366 --> 0:29:38,446
加强了内容是永远运动

937
00:29:38,446 --> 0:29:39,966
并且能够运动

938
00:29:39,966 --> 0:29:42,066
的这一想法

939
00:29:42,066 --> 0:29:43,226
因此当滑动内容时

940
00:29:43,276 --> 0:29:44,866
感觉就像是

941
00:29:44,866 --> 0:29:46,366
只要你将手往下拉

942
00:29:46,466 --> 0:29:47,346
它就可以就能持续滚动

943
00:29:47,346 --> 0:29:48,226
你不必等待

944
00:29:48,226 --> 0:29:49,166
什么东西的结束

945
00:29:49,746 --> 0:29:53,186
因此有无数

946
00:29:53,186 --> 0:29:55,116
现实世界的特征

947
00:29:55,116 --> 0:29:57,406
可以被借鉴 用来设计出更好的运动

948
00:29:58,136 --> 0:29:59,296
我们没有时间来逐一探讨

949
00:29:59,296 --> 0:30:01,086
但我接下来主要

950
00:29:59,296 --> 0:30:01,086
但我接下来主要

951
00:30:01,086 --> 0:30:02,346
想谈谈这个

952
00:30:02,346 --> 0:30:04,276
因为我们真的觉得

953
00:30:04,276 --> 0:30:05,886
它在我们的设计工作中

954
00:30:05,886 --> 0:30:05,976
必不可少

955
00:30:08,076 --> 0:30:10,116
这儿有一朵

956
00:30:10,826 --> 0:30:12,626
漂亮的花

957
00:30:12,626 --> 0:30:14,386
它的自然纤维

958
00:30:15,136 --> 0:30:18,546
有弹性这一自然特点

959
00:30:20,046 --> 0:30:21,926
弹性指的是

960
00:30:21,926 --> 0:30:23,776
移除压力或拉力后

961
00:30:23,776 --> 0:30:26,526
物体有优雅地

962
00:30:26,526 --> 0:30:28,036
回到静息状态下的趋势

963
00:30:29,646 --> 0:30:31,766
我们人类的身体就

964
00:30:31,766 --> 0:30:32,286
非常有弹性

965
00:30:33,216 --> 0:30:34,746
我们可以持续跑

966
00:30:35,196 --> 0:30:37,626
一段非常长的距离

967
00:30:37,626 --> 0:30:38,956
并不是因为肌肉有多强壮

968
00:30:38,956 --> 0:30:41,786
而是因为它们可以放松

969
00:30:43,296 --> 0:30:44,596
正是它们的弹性

970
00:30:44,656 --> 0:30:45,156
做到了这一点

971
00:30:46,296 --> 0:30:47,726
一旦压力或张力被移除

972
00:30:47,726 --> 0:30:49,786
肌肉就会缩紧并放松

973
00:30:49,896 --> 0:30:51,556
这就是我们保存力量的方式

974
00:30:51,776 --> 0:30:54,806
让我们感觉自然 有机

975
00:30:55,456 --> 0:30:58,476
同样的弹性被运用到了

976
00:30:58,686 --> 0:30:59,206
iPhone X 中

977
00:30:59,966 --> 0:31:01,546
在主屏幕轻敲一个图标

978
00:30:59,966 --> 0:31:01,546
在主屏幕轻敲一个图标

979
00:31:01,936 --> 0:31:03,836
随后一个富有弹性的运动

980
00:31:03,836 --> 0:31:05,156
就将一个软件在你面前打开

981
00:31:05,986 --> 0:31:08,076
完全是你想要的样子

982
00:31:08,136 --> 0:31:09,566
当你从底部轻扫

983
00:31:09,566 --> 0:31:12,046
这个 App 就会重新

984
00:31:12,046 --> 0:31:13,176
回到主屏幕上

985
00:31:13,176 --> 0:31:14,136
刚刚好的位置

986
00:31:14,686 --> 0:31:18,966
我们在滑动中 也运用了弹性

987
00:31:19,366 --> 0:31:20,706
因此如果我滑动得太远 并且产生了 

988
00:31:20,706 --> 0:31:21,966
Rubber Band 就像 Chan 刚才提到的那样

989
00:31:21,966 --> 0:31:23,996
当你放手的时候

990
00:31:23,996 --> 0:31:26,736
内容就会因为弹性

991
00:31:26,856 --> 0:31:29,256
在界面中返回

992
00:31:29,256 --> 0:31:30,496
帮助你回到

993
00:31:30,576 --> 0:31:32,466
静息位置

994
00:31:32,466 --> 0:31:33,656
为下一次滑动作准备

995
00:31:33,726 --> 0:31:37,126
让我们深入探讨一下

996
00:31:37,126 --> 0:31:39,596
这种弹性在后台

997
00:31:39,726 --> 0:31:40,636
是如何工作的

998
00:31:41,266 --> 0:31:44,466
大家可以把滑动内容

999
00:31:44,466 --> 0:31:48,306
当作连接在弹簧上的

1000
00:31:49,456 --> 0:31:49,606
一个小球

1001
00:31:49,786 --> 0:31:51,276
在弹簧的一端

1002
00:31:51,416 --> 0:31:52,246
是当前值

1003
00:31:52,326 --> 0:31:55,626
这就是展示内容的位置

1004
00:31:56,616 --> 0:31:58,316
弹簧的另一端是

1005
00:31:58,316 --> 0:32:00,146
内容由于弹性

1006
00:31:58,316 --> 0:32:00,146
内容由于弹性

1007
00:32:00,146 --> 0:32:01,596
将要去的地方

1008
00:32:01,746 --> 0:32:02,616
那么我们就得到了这样一个弹簧

1009
00:32:02,616 --> 0:32:05,896
它把当前值拉向目标

1010
00:32:06,136 --> 0:32:08,276
这个行为正在影响

1011
00:32:08,276 --> 0:32:09,376
内容的位置

1012
00:32:11,176 --> 0:32:13,126
现在弹簧事实上

1013
00:32:13,126 --> 0:32:15,596
就在把当前值拉向目标

1014
00:32:16,636 --> 0:32:18,016
有趣的是

1015
00:32:18,016 --> 0:32:19,986
弹簧的运动是无缝的

1016
00:32:19,986 --> 0:32:21,396
这种无缝对于行为来说

1017
00:32:21,556 --> 0:32:23,756
有点像内置的

1018
00:32:25,056 --> 0:32:26,256
这就是为何它们是

1019
00:32:26,256 --> 0:32:28,356
进行流畅界面设计的

1020
00:32:28,356 --> 0:32:30,176
多功能工具

1021
00:32:30,926 --> 0:32:32,426
你可以几乎免费

1022
00:32:32,426 --> 0:32:33,196
获得这样东西

1023
00:32:33,536 --> 0:32:35,476
因为它就在行为本身内部

1024
00:32:35,626 --> 0:32:40,326
我们喜爱这个

1025
00:32:40,326 --> 0:32:41,876
值移向目标的行为

1026
00:32:41,876 --> 0:32:43,766
我们可以指出 这个小球将运动到哪里

1027
00:32:43,766 --> 0:32:45,126
并能得到

1028
00:32:45,246 --> 0:32:47,696
小球移向目标的

1029
00:32:47,696 --> 0:32:48,896
无痕动态

1030
00:32:48,896 --> 0:32:50,506
但是我们想稍微控制一下

1031
00:32:50,506 --> 0:32:52,446
它运动的速度

1032
00:32:53,016 --> 0:32:54,736
以及是否会出现过冲

1033
00:32:55,236 --> 0:32:55,986
要怎么做呢

1034
00:32:57,166 --> 0:32:58,326
我们可以给这个小球一些质量

1035
00:32:58,326 --> 0:33:00,046
比如让它变大一点

1036
00:32:58,326 --> 0:33:00,046
比如让它变大一点

1037
00:33:00,106 --> 0:33:01,266
或者重一点

1038
00:33:02,296 --> 0:33:03,796
如果这样做的话

1039
00:33:04,236 --> 0:33:05,776
就会改变小球的惯性

1040
00:33:06,106 --> 0:33:08,536
或者说是它想要开始运动的意愿

1041
00:33:09,116 --> 0:33:12,126
它不想停下运动的抗拒

1042
00:33:12,616 --> 0:33:16,526
然后小球就可能有过冲

1043
00:33:16,716 --> 0:33:17,786
另一种可能性是

1044
00:33:17,786 --> 0:33:19,166
我们可以改变弹簧的硬度

1045
00:33:19,166 --> 0:33:20,886
或者说是弹簧的

1046
00:33:20,886 --> 0:33:21,566
可伸展长度

1047
00:33:22,206 --> 0:33:23,066
这么做的后果就是

1048
00:33:23,066 --> 0:33:24,696
会影响对小球施加的力

1049
00:33:24,696 --> 0:33:26,726
改变小球

1050
00:33:26,726 --> 0:33:28,526
移向目标的速度

1051
00:33:29,156 --> 0:33:31,786
最后 与汽车运用刹车

1052
00:33:31,786 --> 0:33:34,506
非常类似

1053
00:33:34,646 --> 0:33:36,156
我们可以改变

1054
00:33:36,226 --> 0:33:37,936
小球表面的

1055
00:33:37,936 --> 0:33:39,076
阻尼或阻力

1056
00:33:39,696 --> 0:33:40,876
它的作用就像刹车

1057
00:33:40,876 --> 0:33:42,626
可以在一段时间内减缓小球的速度

1058
00:33:42,626 --> 0:33:46,046
同样影响过冲的能力

1059
00:33:46,596 --> 0:33:50,576
因此小球和弹簧的物理特性

1060
00:33:50,576 --> 0:33:51,946
就有点像是物理学科的东西

1061
00:33:52,176 --> 0:33:53,686
对吧

1062
00:33:53,686 --> 0:33:54,666
在科学领域中

1063
00:33:54,706 --> 0:33:55,996
它非常有用

1064
00:33:55,996 --> 0:33:57,946
但我们发现在设计工作中

1065
00:33:57,946 --> 0:33:59,196
它们对于在屏幕上 

1066
00:33:59,196 --> 0:34:01,336
控制物体行为

1067
00:33:59,196 --> 0:34:01,336
控制物体行为

1068
00:34:01,636 --> 0:34:02,996
太具有压倒性了

1069
00:34:03,416 --> 0:34:04,426
有些难操作

1070
00:34:05,876 --> 0:34:07,376
因此我们认为我们的设计工具

1071
00:34:07,376 --> 0:34:09,366
必须有一点

1072
00:34:09,366 --> 0:34:10,346
人类界面

1073
00:34:10,786 --> 0:34:11,806
它们需要反映

1074
00:34:11,806 --> 0:34:13,746
使用工具的设计者的需求

1075
00:34:14,886 --> 0:34:16,255
那么我们要怎么做呢

1076
00:34:16,255 --> 0:34:17,246
我们如何简化这些特性

1077
00:34:17,246 --> 0:34:18,806
让它对设计者

1078
00:34:19,815 --> 0:34:20,626
更加友好呢

1079
00:34:22,516 --> 0:34:24,396
质量硬度和阻尼

1080
00:34:24,396 --> 0:34:25,815
将仍保留在后台

1081
00:34:25,815 --> 0:34:26,606
它们是我们使用的

1082
00:34:26,606 --> 0:34:28,016
弹簧系统

1083
00:34:28,016 --> 0:34:28,696
最根本的特性

1084
00:34:28,696 --> 0:34:30,226
但是我们可以简化界面

1085
00:34:30,226 --> 0:34:32,266
仅保留两个最基本的特性

1086
00:34:33,446 --> 0:34:35,176
第一个就是阻尼

1087
00:34:35,176 --> 0:34:36,835
控制 100% 的阻尼

1088
00:34:36,886 --> 0:34:39,306
剩下多少

1089
00:34:39,306 --> 0:34:40,565
这样当阻尼为 0 时

1090
00:34:40,565 --> 0:34:43,136
就不会出现过冲

1091
00:34:43,136 --> 0:34:44,545
弹簧将永远

1092
00:34:44,545 --> 0:34:45,246
来回摆动

1093
00:34:47,126 --> 0:34:50,485
第二个特性是响应

1094
00:34:52,025 --> 0:34:55,186
它决定着值将以多快的速度

1095
00:34:55,186 --> 0:34:55,735
到达目标

1096
00:34:56,956 --> 0:34:58,296
大家可能会注意到

1097
00:34:58,296 --> 0:34:59,956
我从来没有用到过持续时间这个词

1098
00:35:00,446 --> 0:35:02,506
事实上我们往往避免

1099
00:35:02,506 --> 0:35:03,986
用这个词来形容

1100
00:35:03,986 --> 0:35:05,456
弹性行为

1101
00:35:05,456 --> 0:35:07,356
因为它强调了

1102
00:35:07,726 --> 0:35:09,506
持续动态变化这一概念

1103
00:35:09,756 --> 0:35:11,656
弹簧总是在运动中

1104
00:35:11,656 --> 0:35:13,066
时刻准备着移动到别的地方

1105
00:35:14,346 --> 0:35:15,466
那么这两个特性的

1106
00:35:15,466 --> 0:35:17,016
专业术语是阻尼比

1107
00:35:17,016 --> 0:35:18,836
和频率响应

1108
00:35:18,876 --> 0:35:20,426
如果你想在自己的设计工作中

1109
00:35:20,426 --> 0:35:21,666
运用到这两个特性

1110
00:35:21,666 --> 0:35:23,396
可以查找一下这两个术语

1111
00:35:23,456 --> 0:35:27,546
你将会发现 轻松转换它们的办法

1112
00:35:27,776 --> 0:35:29,836
这就是控制

1113
00:35:29,906 --> 0:35:31,116
弹性行为的两个

1114
00:35:31,116 --> 0:35:32,086
简单特性

1115
00:35:32,806 --> 0:35:35,166
但是这个曲线

1116
00:35:35,166 --> 0:35:38,106
还带来了无数可能性

1117
00:35:38,106 --> 0:35:39,836
比如 我们有成百上千

1118
00:35:39,866 --> 0:35:41,176
成千上万种方法

1119
00:35:41,176 --> 0:35:42,756
来配置这两个简单的特性

1120
00:35:42,756 --> 0:35:45,826
并得到不同的行为

1121
00:35:47,106 --> 0:35:49,636
那我们如何运用它们来精心制作

1122
00:35:49,636 --> 0:35:50,786
App 中的一个特性

1123
00:35:50,786 --> 0:35:53,996
来控制 App 的感受呢

1124
00:35:54,246 --> 0:35:56,286
首先

1125
00:35:56,286 --> 0:35:57,516
我们必须牢记

1126
00:35:57,516 --> 0:35:59,246
设备是工具

1127
00:36:00,326 --> 0:36:02,716
我们要尊重它们

1128
00:36:03,276 --> 0:36:04,736
因为我们带有目的地使用它们

1129
00:36:04,736 --> 0:36:08,186
这就要求我们不要

1130
00:36:08,186 --> 0:36:09,836
引入不必要的运动

1131
00:36:09,836 --> 0:36:12,146
来妨碍它们

1132
00:36:13,366 --> 0:36:14,496
所以我们认为你应该

1133
00:36:14,496 --> 0:36:15,386
从简单的开始

1134
00:36:16,166 --> 0:36:18,146
弹簧不需要过冲

1135
00:36:18,346 --> 0:36:20,246
你不需要用有弹性的弹簧

1136
00:36:21,576 --> 0:36:23,426
我们建议你调试弹性行为的时候

1137
00:36:23,426 --> 0:36:26,146
一开始就让阻尼为 100%

1138
00:36:26,386 --> 0:36:28,026
或者不要有过冲

1139
00:36:28,776 --> 0:36:30,056
这样你将会得到流畅

1140
00:36:30,286 --> 0:36:32,266
优雅 无缝的动态

1141
00:36:32,806 --> 0:36:33,996
且丝毫没有扰乱

1142
00:36:34,086 --> 0:36:34,916
正在执行的任务

1143
00:36:35,176 --> 0:36:36,446
就像很快地发送一封

1144
00:36:36,446 --> 0:36:36,986
电子邮件

1145
00:36:39,156 --> 0:36:40,836
那什么时候使用反弹

1146
00:36:40,836 --> 0:36:41,766
才合适

1147
00:36:42,306 --> 0:36:43,346
一定要有合适的时间

1148
00:36:43,346 --> 0:36:44,196
对吧

1149
00:36:44,936 --> 0:36:46,526
我们认为当

1150
00:36:46,526 --> 0:36:48,796
驱动动态的手势

1151
00:36:48,796 --> 0:36:50,886
自身有了动量

1152
00:36:50,886 --> 0:36:52,056
你就可以给它

1153
00:36:52,056 --> 0:36:53,066
一点点过冲

1154
00:36:54,256 --> 0:36:56,496
换句话说

1155
00:36:56,616 --> 0:36:58,126
如果一个手势有动量

1156
00:36:58,126 --> 0:37:00,116
并且没有任何过冲

1157
00:36:58,126 --> 0:37:00,116
并且没有任何过冲

1158
00:37:00,116 --> 0:37:03,506
那么跟随它的那个动态

1159
00:37:03,566 --> 0:37:05,236
就会像坏了 让人不满意

1160
00:37:05,786 --> 0:37:08,796
一个很好的例子就是

1161
00:37:08,796 --> 0:37:09,696
Apple 的音乐 App

1162
00:37:10,516 --> 0:37:12,186
在屏幕底部

1163
00:37:12,186 --> 0:37:14,076
有一个很小的迷你栏

1164
00:37:14,076 --> 0:37:15,796
显示正在播放

1165
00:37:15,796 --> 0:37:18,076
你可以轻敲这一栏

1166
00:37:18,076 --> 0:37:18,456
显示正在播放

1167
00:37:18,946 --> 0:37:22,306
由于在查看正在播放

1168
00:37:22,356 --> 0:37:24,316
的这个方向

1169
00:37:24,356 --> 0:37:26,286
轻敲这一动作没有任何的动量

1170
00:37:26,286 --> 0:37:28,606
我们用 100% 阻尼来确保

1171
00:37:28,636 --> 0:37:29,486
它不会过冲

1172
00:37:30,126 --> 0:37:32,656
但如果你轻扫

1173
00:37:32,736 --> 0:37:34,506
离开正在播放

1174
00:37:34,506 --> 0:37:36,566
这个方向就会有动量

1175
00:37:37,016 --> 0:37:39,166
所以我们用了 80% 阻尼

1176
00:37:39,166 --> 0:37:40,426
来获得一些弹性和挤压

1177
00:37:40,426 --> 0:37:42,306
让这个手势更加

1178
00:37:42,306 --> 0:37:43,126
令人满意

1179
00:37:46,416 --> 0:37:48,766
反弹还可以作为一个

1180
00:37:48,766 --> 0:37:50,696
实用程序

1181
00:37:51,476 --> 0:37:53,106
它能提供有用的提示

1182
00:37:53,176 --> 0:37:54,576
告诉你有东西

1183
00:37:54,666 --> 0:37:57,166
在屏幕下方

1184
00:37:57,306 --> 0:37:59,056
在 iPhone X 上

1185
00:37:59,056 --> 0:38:01,136
我们在屏保上引入了两个按钮

1186
00:37:59,056 --> 0:38:01,136
我们在屏保上引入了两个按钮

1187
00:38:01,776 --> 0:38:03,056
分别是打开手电筒

1188
00:38:03,056 --> 0:38:04,476
和打开相机

1189
00:38:06,336 --> 0:38:08,246
为了避免无意间错误地

1190
00:38:08,246 --> 0:38:09,906
打开手电筒

1191
00:38:09,906 --> 0:38:11,416
我们要求用一个更加刻意的

1192
00:38:11,416 --> 0:38:13,976
手势来打开手电筒

1193
00:38:14,726 --> 0:38:16,006
但是假如你不知道

1194
00:38:16,006 --> 0:38:17,066
需要用更加刻意的手势

1195
00:38:17,066 --> 0:38:18,906
来打开它

1196
00:38:19,696 --> 0:38:22,466
当你轻敲这个按钮

1197
00:38:22,466 --> 0:38:24,206
它会以反弹的形式响应你的操作

1198
00:38:24,386 --> 0:38:26,196
这个感觉有点好玩

1199
00:38:27,116 --> 0:38:28,756
这个暗示告诉你

1200
00:38:28,756 --> 0:38:29,776
这个按钮不仅能正常工作

1201
00:38:29,836 --> 0:38:31,466
而且它正在响应你

1202
00:38:31,636 --> 0:38:33,146
但是它就像在教你

1203
00:38:33,146 --> 0:38:34,836
如果你再用力一点按它

1204
00:38:34,836 --> 0:38:37,426
它就会打开手电筒了

1205
00:38:37,426 --> 0:38:38,236
它就像真的在教你

1206
00:38:38,236 --> 0:38:39,446
并通过动态的方向

1207
00:38:39,446 --> 0:38:40,086
给予暗示

1208
00:38:40,696 --> 0:38:42,936
因此反弹可以用来

1209
00:38:42,936 --> 0:38:47,396
暗示这类东西

1210
00:38:47,576 --> 0:38:48,706
那么到目前为止

1211
00:38:48,706 --> 0:38:50,806
我们都在谈用动态移动事物

1212
00:38:50,866 --> 0:38:52,286
或者改变它们的规模

1213
00:38:52,286 --> 0:38:54,096
改变它们在屏幕上的

1214
00:38:54,096 --> 0:38:55,596
视觉呈现

1215
00:38:56,556 --> 0:38:58,666
但是我们能以很多不同的方式

1216
00:38:58,666 --> 0:38:59,386
感知动态

1217
00:39:00,226 --> 0:39:01,746
比如通过灯光 色彩

1218
00:39:01,776 --> 0:39:04,056
或纹理和触觉

1219
00:39:04,866 --> 0:39:05,756
甚至是声音

1220
00:39:06,036 --> 0:39:07,876
我们许多其他的感官

1221
00:39:08,386 --> 0:39:11,656
都能感受到

1222
00:39:11,766 --> 0:39:13,036
我们认为这是一个

1223
00:39:13,036 --> 0:39:15,556
在调试 App 特征时

1224
00:39:15,666 --> 0:39:17,626
让我们走得更远的机遇

1225
00:39:17,626 --> 0:39:18,886
不止是动态

1226
00:39:19,946 --> 0:39:21,606
通过结合运动的

1227
00:39:21,696 --> 0:39:23,256
动态行为与

1228
00:39:23,256 --> 0:39:25,766
声音和触觉的动态行为

1229
00:39:26,346 --> 0:39:28,256
你可以真正彻底地

1230
00:39:28,256 --> 0:39:29,976
改变界面的感受

1231
00:39:35,216 --> 0:39:37,746
当你看到 听到

1232
00:39:38,256 --> 0:39:40,036
并感觉到手势操作的结果

1233
00:39:40,076 --> 0:39:42,506
它可以将本来

1234
00:39:42,506 --> 0:39:43,986
只是滑动的行为

1235
00:39:43,986 --> 0:39:45,316
变成一个

1236
00:39:45,316 --> 0:39:48,746
仿佛是有触感的界面

1237
00:39:49,356 --> 0:39:53,206
最后我想谈的是

1238
00:39:53,206 --> 0:39:54,556
当你精心制作

1239
00:39:54,556 --> 0:39:56,006
App 的特征时

1240
00:39:56,006 --> 0:39:56,396
你在想什么

1241
00:39:57,336 --> 0:39:59,086
那就是它必须给人连贯的感觉

1242
00:39:59,086 --> 0:40:00,976
你始终处于特征中

1243
00:39:59,086 --> 0:40:00,976
你始终处于特征中

1244
00:40:01,186 --> 0:40:03,506
这是什么意思呢

1245
00:40:04,816 --> 0:40:07,156
即便是在你的 App 中

1246
00:40:07,156 --> 0:40:08,726
或者是在整个系统上

1247
00:40:08,726 --> 0:40:10,056
你必须把单个行为

1248
00:40:10,056 --> 0:40:12,136
当作整个行为家族中的一份子来对待

1249
00:40:13,166 --> 0:40:15,206
比如在滑动时

1250
00:40:15,706 --> 0:40:17,936
当我用滑动操作

1251
00:40:17,936 --> 0:40:19,946
向下滑动一个页面时

1252
00:40:19,946 --> 0:40:21,946
只要用一个弹性行为

1253
00:40:21,946 --> 0:40:23,196
轻敲状态栏

1254
00:40:23,196 --> 0:40:24,176
就能回到页面顶端

1255
00:40:24,946 --> 0:40:27,316
在这两种情况中

1256
00:40:27,356 --> 0:40:28,626
尽管实际上有两种不同的行为

1257
00:40:28,626 --> 0:40:30,766
促使它运动

1258
00:40:30,766 --> 0:40:32,086
影响这个动作

1259
00:40:32,086 --> 0:40:33,506
但页面就像是

1260
00:40:33,506 --> 0:40:34,496
以相同的方式运动

1261
00:40:34,546 --> 0:40:35,726
和我们有相同的行为

1262
00:40:37,036 --> 0:40:38,276
现在它不止适用于

1263
00:40:38,336 --> 0:40:40,576
滑动这一单个互动

1264
00:40:41,376 --> 0:40:42,716
还适用于你整个 App 

1265
00:40:43,236 --> 0:40:45,046
如果你有一个好玩的 App

1266
00:40:45,046 --> 0:40:46,016
你应该接受它的特征

1267
00:40:46,016 --> 0:40:47,676
然后让你整个 App

1268
00:40:47,676 --> 0:40:49,666
都展现相同的感觉

1269
00:40:49,876 --> 0:40:50,996
一旦人们学会了

1270
00:40:50,996 --> 0:40:52,506
App 的一个行为

1271
00:40:53,066 --> 0:40:53,936
他们就可以很轻松地

1272
00:40:53,936 --> 0:40:55,666
学会另一个

1273
00:40:55,666 --> 0:40:57,146
因为我们通过重复来学习

1274
00:40:57,566 --> 0:40:59,636
我们学到的东西会

1275
00:40:59,636 --> 0:41:00,896
渗透到我们的行为中

1276
00:40:59,636 --> 0:41:00,896
渗透到我们的行为中

1277
00:41:06,386 --> 0:41:07,396
接下来 我想稍微谈谈

1278
00:41:07,396 --> 0:41:10,156
有意图的

1279
00:41:10,186 --> 0:41:12,466
定向手势

1280
00:41:12,506 --> 0:41:12,976
或者说动态手势

1281
00:41:17,216 --> 0:41:19,146
对于一个离散的互动

1282
00:41:19,146 --> 0:41:21,906
比如按钮

1283
00:41:21,906 --> 0:41:23,406
手势的意图

1284
00:41:23,406 --> 0:41:23,756
非常明确

1285
00:41:23,966 --> 0:41:26,086
对吧 你们可以在大屏幕上

1286
00:41:26,226 --> 0:41:28,276
看到三个很明确的图标

1287
00:41:29,226 --> 0:41:31,256
然后我轻敲它们中的一个

1288
00:41:31,256 --> 0:41:32,196
结果也很明显

1289
00:41:33,856 --> 0:41:35,096
但是 例如轻扫这一手势

1290
00:41:35,216 --> 0:41:37,796
意图就不会马上

1291
00:41:37,866 --> 0:41:39,246
那么明显了

1292
00:41:39,686 --> 0:41:41,456
你可以说意图基本上

1293
00:41:41,456 --> 0:41:43,126
藏在手势的运动中

1294
00:41:43,126 --> 0:41:45,176
因此解释运动的意思

1295
00:41:45,176 --> 0:41:47,736
决定你们应该

1296
00:41:47,736 --> 0:41:50,006
对此做些什么

1297
00:41:50,226 --> 0:41:51,786
就是我们的工作和任务

1298
00:41:52,276 --> 0:41:53,696
我们来看个例子

1299
00:41:55,086 --> 0:41:56,546
比如我打了个一对一的

1300
00:41:56,546 --> 0:41:58,046
FaceTime 视频通话

1301
00:41:58,046 --> 0:42:01,216
在 FaceTime视频通话中

1302
00:41:58,046 --> 0:42:01,216
在 FaceTime视频通话中

1303
00:42:01,356 --> 0:42:03,036
屏幕角落有一个

1304
00:42:03,036 --> 0:42:04,816
小的视频播放器代表着

1305
00:42:04,816 --> 0:42:05,296
我自己

1306
00:42:05,396 --> 0:42:07,276
这样我就能看到

1307
00:42:07,276 --> 0:42:08,596
电话那头的人将看到什么

1308
00:42:09,766 --> 0:42:11,086
我们把这个悬浮视频播放器

1309
00:42:11,236 --> 0:42:13,306
叫做 PIP 它是画中画的缩写

1310
00:42:14,886 --> 0:42:16,466
我们将 PIP 的外表做成是浮动的

1311
00:42:16,466 --> 0:42:18,146
这样大家就能明确知道

1312
00:42:18,146 --> 0:42:19,166
它是可以被移动的

1313
00:42:20,026 --> 0:42:22,166
只要非常轻量地拂动它

1314
00:42:22,166 --> 0:42:23,566
它可以被移到

1315
00:42:23,566 --> 0:42:25,846
屏幕的任意角落

1316
00:42:27,636 --> 0:42:29,136
那么如果我们将它与

1317
00:42:29,296 --> 0:42:31,676
播放 暂停 跳过按钮比较

1318
00:42:32,646 --> 0:42:33,546
它们的区别

1319
00:42:33,586 --> 0:42:33,826
在哪里呢

1320
00:42:35,266 --> 0:42:36,116
在这个情况下

1321
00:42:36,116 --> 0:42:38,796
我们实际上在处理

1322
00:42:39,076 --> 0:42:39,976
四块看不见的区域

1323
00:42:40,656 --> 0:42:42,126
我们不能再在屏幕上

1324
00:42:42,126 --> 0:42:44,196
看到被轻敲的

1325
00:42:44,196 --> 0:42:45,476
三个明显的按钮

1326
00:42:46,066 --> 0:42:47,176
我们必须透过手势

1327
00:42:47,176 --> 0:42:49,436
看正在发生的运动

1328
00:42:49,436 --> 0:42:52,786
然后凭直觉猜出它的意思

1329
00:42:52,786 --> 0:42:54,516
我们想把它放到哪个角落

1330
00:42:55,686 --> 0:42:57,236
我们把屏幕的这些区域

1331
00:42:57,236 --> 0:42:59,676
叫做手势的终点

1332
00:43:00,506 --> 0:43:02,816
当轻轻弹出 PIP 

1333
00:43:02,816 --> 0:43:04,986
我们的目标是找到

1334
00:43:04,986 --> 0:43:06,746
我们想要的正确的终点

1335
00:43:07,426 --> 0:43:09,726
我们把这叫做

1336
00:43:10,216 --> 0:43:12,306
终点和手势意图的一致

1337
00:43:12,986 --> 0:43:17,446
一种方法是

1338
00:43:17,596 --> 0:43:18,936
当我拖拽 PIP 时

1339
00:43:18,936 --> 0:43:22,046
留意追踪最近的终点

1340
00:43:22,226 --> 0:43:24,056
这有点用

1341
00:43:24,056 --> 0:43:25,286
我能把 PIP 拖动到

1342
00:43:25,286 --> 0:43:29,086
屏幕的角落

1343
00:43:29,086 --> 0:43:30,366
但一旦我把它拖得有点远了

1344
00:43:30,366 --> 0:43:33,596
它就开始不好用了

1345
00:43:33,776 --> 0:43:35,796
现在我就需要把 PIP 拖到很远

1346
00:43:35,886 --> 0:43:38,506
差不多超过

1347
00:43:38,676 --> 0:43:39,516
屏幕的一半

1348
00:43:39,636 --> 0:43:40,836
很接近另一端的角落

1349
00:43:40,836 --> 0:43:42,606
所以它并没有真的放大

1350
00:43:42,606 --> 0:43:43,046
我的手势操作

1351
00:43:43,046 --> 0:43:44,656
对我来说不管用

1352
00:43:44,656 --> 0:43:47,056
但假如我试着轻拂 PIP

1353
00:43:48,196 --> 0:43:50,586
它就会去最近的那个角落

1354
00:43:50,586 --> 0:43:52,036
这却不一定是我想要的结果

1355
00:43:52,146 --> 0:43:54,726
这儿的问题就是

1356
00:43:54,816 --> 0:43:56,206
我们只关注了位置

1357
00:43:56,366 --> 0:43:58,756
却忽略了移动 PIP 时

1358
00:43:58,756 --> 0:44:02,236
它拥有的动量和速度

1359
00:43:58,756 --> 0:44:02,236
它拥有的动量和速度

1360
00:44:03,446 --> 0:44:05,486
那么我们要怎么将动量融入到

1361
00:44:06,306 --> 0:44:08,696
如何决定我们想去的终点

1362
00:44:08,696 --> 0:44:09,646
中去呢

1363
00:44:10,256 --> 0:44:13,396
想象一下

1364
00:44:13,396 --> 0:44:15,346
我们可以退一步

1365
00:44:15,346 --> 0:44:16,896
暂时把终点放在一边

1366
00:44:17,816 --> 0:44:22,326
简化这个问题

1367
00:44:22,386 --> 0:44:23,686
我最终想要做的是

1368
00:44:23,736 --> 0:44:27,026
在屏幕上移动内容

1369
00:44:27,796 --> 0:44:29,206
我已经有的是

1370
00:44:29,206 --> 0:44:31,126
用滑动来完成它

1371
00:44:31,436 --> 0:44:35,466
的大量肌肉记忆

1372
00:44:35,876 --> 0:44:37,186
那我们为什么不用这些记忆呢

1373
00:44:38,616 --> 0:44:40,326
我们一直在用滑动操作

1374
00:44:40,326 --> 0:44:41,496
因此我们就有天生的直觉

1375
00:44:41,496 --> 0:44:44,596
能够知道当我滑动时

1376
00:44:44,596 --> 0:44:45,936
这些内容能够达到多远

1377
00:44:47,366 --> 0:44:50,096
大家能看到

1378
00:44:50,096 --> 0:44:52,706
当我滚动 PIP 时

1379
00:44:52,706 --> 0:44:54,586
它慢慢地挪动然后速度慢下来了

1380
00:44:54,866 --> 0:44:57,536
正是这个我们

1381
00:44:58,176 --> 0:44:59,796
从滑动中熟悉的减速

1382
00:45:01,026 --> 0:45:02,896
基本上我们在这儿运用这个优势

1383
00:45:02,896 --> 0:45:05,066
可以加强

1384
00:45:05,146 --> 0:45:06,906
人们从别的地方

1385
00:45:06,906 --> 0:45:07,876
学到的东西

1386
00:45:08,146 --> 0:45:10,786
即行为仅仅是在执行

1387
00:45:10,786 --> 0:45:15,426
系统被期待做的事情

1388
00:45:15,566 --> 0:45:17,756
现在这个新的 基于假定的

1389
00:45:18,126 --> 0:45:21,566
想象中的 PIP 位置并不是真的

1390
00:45:21,566 --> 0:45:22,756
我们将不会在

1391
00:45:22,756 --> 0:45:24,056
这个界面中展示 PIP

1392
00:45:24,266 --> 0:45:25,826
我们把这个叫做预测

1393
00:45:27,136 --> 0:45:28,656
我们获得了 PIP

1394
00:45:28,656 --> 0:45:30,526
被投掷时的速度

1395
00:45:30,936 --> 0:45:32,066
我们混入了减速率

1396
00:45:32,066 --> 0:45:34,336
并最终得到了

1397
00:45:34,336 --> 0:45:35,926
如果我们滑动它

1398
00:45:36,196 --> 0:45:40,936
将得到的预测位置

1399
00:45:41,166 --> 0:45:42,666
当投掷时我们不需要

1400
00:45:42,666 --> 0:45:44,346
找离 PIP 最近的终点

1401
00:45:45,056 --> 0:45:47,096
相反 我们可以计算预计位置

1402
00:45:47,096 --> 0:45:50,946
并直接移动到那儿

1403
00:45:51,476 --> 0:45:53,346
当我仅用一个轻量级的拂动

1404
00:45:53,346 --> 0:45:55,036
从屏幕的一个角落

1405
00:45:55,036 --> 0:45:56,216
轻扫至另一个角落时

1406
00:45:56,306 --> 0:45:58,956
它移动到了我预期的位置

1407
00:46:03,176 --> 0:46:05,306
因此预测动量这一概念

1408
00:46:05,306 --> 0:46:08,346
十分有用

1409
00:46:08,766 --> 0:46:10,806
我们认为它非常重要

1410
00:46:10,806 --> 0:46:12,136
我想和你们分享一些其中的代码

1411
00:46:12,136 --> 0:46:13,536
这样你们可以在自己的 App 中

1412
00:46:13,536 --> 0:46:16,196
也这样做

1413
00:46:16,336 --> 0:46:17,596
这个功能将用到一个速度

1414
00:46:17,596 --> 0:46:19,366
就像 PIP 位置的速度那样

1415
00:46:19,366 --> 0:46:22,086
和减速率

1416
00:46:22,956 --> 0:46:24,966
它会给你一个值

1417
00:46:24,996 --> 0:46:28,206
你可以把它当作动态操作的终点

1418
00:46:29,076 --> 0:46:29,876
非常简单

1419
00:46:30,556 --> 0:46:33,056
我们来看一下 FaceTime 视频通话

1420
00:46:33,056 --> 0:46:35,606
滑动手势结束代码

1421
00:46:35,606 --> 0:46:38,556
大家能看到

1422
00:46:38,556 --> 0:46:39,186
我只用了

1423
00:46:39,186 --> 0:46:41,326
UIScrollView.DecelerationRate 这一指令

1424
00:46:41,506 --> 0:46:43,106
这是建立在

1425
00:46:43,106 --> 0:46:44,556
人们熟悉滑动操作

1426
00:46:44,556 --> 0:46:46,186
和滑动内容

1427
00:46:46,186 --> 0:46:47,106
能移动到多远的基础上

1428
00:46:48,256 --> 0:46:50,966
而且我也用了这一认知

1429
00:46:51,176 --> 0:46:51,846
来进行预测

1430
00:46:52,226 --> 0:46:53,536
我得到了 PIP 的速度

1431
00:46:53,606 --> 0:46:55,546
和减速率

1432
00:46:55,546 --> 0:46:57,976
然后创建了想象中的 PIP 位置

1433
00:46:58,546 --> 0:47:01,336
我后来正是用了这个想象中的

1434
00:46:58,546 --> 0:47:01,336
我后来正是用了这个想象中的

1435
00:47:01,336 --> 0:47:03,196
预测位置

1436
00:47:03,196 --> 0:47:05,246
作为最近的角落位置

1437
00:47:06,246 --> 0:47:07,616
然后重新定位

1438
00:47:07,616 --> 0:47:09,166
将 PIP 送到那里

1439
00:47:11,236 --> 0:47:13,406
因此通过预测

1440
00:47:13,836 --> 0:47:17,156
找到一个位置的终点

1441
00:47:17,216 --> 0:47:19,266
的这一想法对拖拽

1442
00:47:19,416 --> 0:47:21,026
或轻扫内容

1443
00:47:21,026 --> 0:47:22,366
非常有用

1444
00:47:22,366 --> 0:47:23,676
你必须尊重

1445
00:47:23,676 --> 0:47:24,856
手势的动量

1446
00:47:26,396 --> 0:47:27,516
但是这个预测功能

1447
00:47:27,516 --> 0:47:29,706
不仅仅对位置有用

1448
00:47:29,706 --> 0:47:34,126
你还能在大小旋转

1449
00:47:35,026 --> 0:47:36,506
甚至大小和旋转的结合中

1450
00:47:36,506 --> 0:47:36,876
运用它

1451
00:47:37,866 --> 0:47:39,496
这是一个多功能的工具

1452
00:47:39,496 --> 0:47:40,696
在使用时你

1453
00:47:40,696 --> 0:47:41,796
必须确保

1454
00:47:41,836 --> 0:47:43,866
尊重手势的动量

1455
00:47:43,866 --> 0:47:45,856
并且让它感到

1456
00:47:46,036 --> 0:47:47,326
App 中的动态动作

1457
00:47:47,766 --> 0:47:49,186
是你自身的延伸

1458
00:47:51,086 --> 0:47:54,496
这就是用运动来设计

1459
00:47:54,976 --> 0:47:55,936
动态运动

1460
00:47:56,896 --> 0:47:58,916
行为必须一直

1461
00:47:58,916 --> 0:48:00,986
无缝地与互动

1462
00:47:58,916 --> 0:48:00,986
无缝地与互动

1463
00:48:01,106 --> 0:48:02,946
完美配合

1464
00:48:05,276 --> 0:48:06,976
我们必须依靠那个大家都有的

1465
00:48:06,976 --> 0:48:08,646
对我们身边现实世界

1466
00:48:08,646 --> 0:48:10,086
的直觉

1467
00:48:10,086 --> 0:48:11,916
那就是 当我们还是孩子时

1468
00:48:11,916 --> 0:48:13,316
就已经知道的

1469
00:48:13,366 --> 0:48:14,766
在现实世界中物体是怎么运动的

1470
00:48:14,766 --> 0:48:17,506
并时刻准备着

1471
00:48:17,906 --> 0:48:19,236
将其运用到动态界面中

1472
00:48:21,076 --> 0:48:22,246
你们要记住

1473
00:48:22,246 --> 0:48:23,416
反弹一定是

1474
00:48:23,476 --> 0:48:24,146
有目的的

1475
00:48:24,856 --> 0:48:26,346
想一想你为什么在用它

1476
00:48:26,456 --> 0:48:27,666
用它是否合适

1477
00:48:28,336 --> 0:48:29,686
还要确保当你增加特征

1478
00:48:30,206 --> 0:48:32,856
和纹理时

1479
00:48:32,856 --> 0:48:33,726
你将其与这个实用工具

1480
00:48:33,766 --> 0:48:34,326
完美平衡

1481
00:48:35,066 --> 0:48:38,866
最后记住要预测动量

1482
00:48:39,226 --> 0:48:40,836
不要光用位置

1483
00:48:40,836 --> 0:48:41,826
而要利用所有可用信息

1484
00:48:41,826 --> 0:48:43,586
来确保动作

1485
00:48:43,586 --> 0:48:45,576
和人们真正

1486
00:48:45,576 --> 0:48:47,166
想要挪动的地方

1487
00:48:47,166 --> 0:48:47,616
是一致的

1488
00:48:48,166 --> 0:48:51,376
并且将他们带过去

1489
00:48:51,376 --> 0:48:52,356
那么接下来我将

1490
00:48:52,356 --> 0:48:54,126
把舞台交给我的同事 Marcos

1491
00:48:54,276 --> 0:48:56,146
由他为大家进一步介绍

1492
00:48:56,146 --> 0:48:57,466
如何流畅地响应

1493
00:48:57,466 --> 0:48:58,626
手势和互动

1494
00:48:59,006 --> 0:48:59,956
谢谢大家

1495
00:49:00,516 --> 0:49:05,086
[ 掌声 ]

1496
00:49:05,586 --> 0:49:06,066
&gt;&gt; 你刚刚说得很棒

1497
00:49:06,836 --> 0:49:07,906
谢谢 Nathan

1498
00:49:13,446 --> 0:49:14,176
大家好

1499
00:49:15,006 --> 0:49:15,936
我是 Marcos

1500
00:49:16,726 --> 0:49:18,816
到目前为止 我们已经看到了

1501
00:49:18,816 --> 0:49:20,266
流畅度在设计界面时的

1502
00:49:20,266 --> 0:49:20,956
重要性

1503
00:49:21,786 --> 0:49:24,096
很大一部分来自于

1504
00:49:24,096 --> 0:49:25,366
你和设备的互动

1505
00:49:26,776 --> 0:49:28,366
接下来我将为大家展示

1506
00:49:28,366 --> 0:49:29,996
轻触屏幕

1507
00:49:29,996 --> 0:49:32,566
如何编程你 App 中的手势

1508
00:49:33,036 --> 0:49:34,316
以及如何设计这些手势

1509
00:49:34,366 --> 0:49:36,106
来为你的界面

1510
00:49:36,106 --> 0:49:38,476
捕捉所有的表达和意图

1511
00:49:42,356 --> 0:49:43,206
我们首先来看看

1512
00:49:43,206 --> 0:49:44,656
一些最主要的手势的设计

1513
00:49:44,656 --> 0:49:46,936
比如轻敲和轻扫

1514
00:49:47,966 --> 0:49:48,956
然后我们将看到一些

1515
00:49:48,956 --> 0:49:50,586
在给界面

1516
00:49:50,586 --> 0:49:51,606
设计手势时的

1517
00:49:51,606 --> 0:49:52,956
互动原则

1518
00:49:54,176 --> 0:49:55,686
最后我们将会看到

1519
00:49:55,686 --> 0:49:57,386
如何处理多个手势

1520
00:49:57,386 --> 0:49:59,376
如何将它们结合到你的 App 中

1521
00:50:00,116 --> 0:50:01,956
那么首先我们来看一下

1522
00:50:01,956 --> 0:50:04,926
一个看起来很简单的手势 轻敲

1523
00:50:05,786 --> 0:50:07,006
大家可能会觉得

1524
00:50:07,006 --> 0:50:09,786
轻敲不需要设计

1525
00:50:09,786 --> 0:50:11,396
但是你们将看到

1526
00:50:11,396 --> 0:50:13,006
它动作中的细微差别

1527
00:50:13,006 --> 0:50:13,766
要比看上去多

1528
00:50:14,896 --> 0:50:16,926
在这个例子中

1529
00:50:16,926 --> 0:50:18,856
我们将在计算器 App 中

1530
00:50:18,856 --> 0:50:19,983
轻敲一个按钮

1531
00:50:24,476 --> 0:50:26,216
我们要记住的第一件事就是

1532
00:50:26,216 --> 0:50:27,276
当我们轻触按钮时

1533
00:50:27,276 --> 0:50:29,346
它必须马上高亮

1534
00:50:30,226 --> 0:50:31,246
这告诉我

1535
00:50:31,246 --> 0:50:32,916
按钮能正常工作

1536
00:50:32,916 --> 0:50:34,026
系统也在响应我的手势

1537
00:50:34,766 --> 0:50:36,526
但是只有当手指离开屏幕

1538
00:50:36,576 --> 0:50:39,006
我们才正式完成了轻敲这一动作

1539
00:50:39,976 --> 0:50:41,866
第二件要记住的事情是

1540
00:50:41,866 --> 0:50:43,456
在轻敲区域附近

1541
00:50:43,456 --> 0:50:44,006
创建一圈额外的边缘

1542
00:50:44,636 --> 0:50:46,516
它将让我们的轻敲

1543
00:50:46,516 --> 0:50:48,506
更加舒服

1544
00:50:48,506 --> 0:50:50,336
并且避免在互动过程中

1545
00:50:50,336 --> 0:50:51,906
额外移动后轻触意外取消

1546
00:50:52,376 --> 0:50:54,746
正如我的同事 Chan 刚才说的那样

1547
00:50:54,746 --> 0:50:56,276
我很可能

1548
00:50:56,276 --> 0:50:57,386
在触碰按钮后

1549
00:50:57,456 --> 0:50:58,566
想改变主意

1550
00:50:59,066 --> 0:51:00,686
那么如果我把手指

1551
00:50:59,066 --> 0:51:00,686
那么如果我把手指

1552
00:51:00,686 --> 0:51:02,976
拖拽出轻敲区域并且抬起手指

1553
00:51:02,976 --> 0:51:04,346
就能取消轻敲

1554
00:51:05,056 --> 0:51:07,266
同样地 如果我轻扫回按钮

1555
00:51:07,266 --> 0:51:09,896
它应该能再一次高亮并让我

1556
00:51:09,896 --> 0:51:11,226
确认完成轻敲

1557
00:51:12,956 --> 0:51:17,756
接下来 要讲的手势是轻扫

1558
00:51:18,666 --> 0:51:19,816
它是 iOS 最核心的手势之一

1559
00:51:19,856 --> 0:51:21,786
并且它在许多动作中

1560
00:51:21,786 --> 0:51:23,466
都会被用到

1561
00:51:23,466 --> 0:51:25,316
比如滑动 拖拽和分页

1562
00:51:26,606 --> 0:51:27,826
但是无论你轻扫的目的是什么

1563
00:51:27,826 --> 0:51:30,006
或者随便你怎么称呼它

1564
00:51:30,006 --> 0:51:31,506
手势最核心的原则

1565
00:51:31,506 --> 0:51:32,106
都是一样的

1566
00:51:32,106 --> 0:51:35,026
在这个例子中

1567
00:51:35,026 --> 0:51:36,626
我们将用轻扫这一手势

1568
00:51:36,626 --> 0:51:37,116
将这一图像拖动到屏幕右侧

1569
00:51:38,026 --> 0:51:39,956
这个互动从我带着拖动的目的

1570
00:51:39,956 --> 0:51:40,976
手指触碰到图像的那一瞬间

1571
00:51:40,976 --> 0:51:41,976
就开始了

1572
00:51:46,696 --> 0:51:49,126
但在我们能确认它是轻扫前

1573
00:51:49,126 --> 0:51:50,716
这一触碰必须移动

1574
00:51:50,716 --> 0:51:51,576
一定距离

1575
00:51:52,166 --> 0:51:53,876
我们知道分辨轻扫和

1576
00:51:53,876 --> 0:51:54,976
其他手势

1577
00:51:55,516 --> 0:51:56,956
这段距离就叫做滞后现象

1578
00:51:56,956 --> 0:52:00,006
在 iOS 系统中 通常表现为 10 个点

1579
00:51:56,956 --> 0:52:00,006
在 iOS 系统中 通常表现为 10 个点

1580
00:52:01,456 --> 0:52:03,266
因此一旦触碰达到了这个距离

1581
00:52:03,266 --> 0:52:04,776
轻扫就开始了

1582
00:52:05,976 --> 0:52:07,706
这也是确定

1583
00:52:07,706 --> 0:52:09,086
轻扫方向的时候

1584
00:52:09,516 --> 0:52:11,366
确定它是水平的

1585
00:52:11,366 --> 0:52:12,136
还是垂直的

1586
00:52:12,526 --> 0:52:13,796
我们不需要真正拿它举例

1587
00:52:13,796 --> 0:52:15,766
但在某些情况下

1588
00:52:15,766 --> 0:52:16,626
这真的非常有用

1589
00:52:16,626 --> 0:52:19,356
那么既然已经检测到了轻扫

1590
00:52:19,356 --> 0:52:21,976
这就是一个手势最开始的位置

1591
00:52:22,816 --> 0:52:24,746
之后 轻触这一手势

1592
00:52:24,746 --> 0:52:26,516
和这个图像就成为一体

1593
00:52:26,516 --> 0:52:27,686
同步运动

1594
00:52:28,286 --> 0:52:29,426
我们必须尊重相对位置

1595
00:52:29,426 --> 0:52:31,106
坚决不要

1596
00:52:31,106 --> 0:52:32,396
以图像中心

1597
00:52:32,396 --> 0:52:33,186
为拖拽点

1598
00:52:34,266 --> 0:52:35,456
在拖拽过程中

1599
00:52:35,456 --> 0:52:36,926
我们还要留意

1600
00:52:36,926 --> 0:52:38,576
位置和速度

1601
00:52:38,576 --> 0:52:40,136
当拖拽结束

1602
00:52:40,136 --> 0:52:41,036
我们不使用最后的位置

1603
00:52:41,406 --> 0:52:42,846
而是用触碰历史

1604
00:52:42,966 --> 0:52:44,876
来确保所有的动作

1605
00:52:44,876 --> 0:52:46,896
都流畅地转移到了图片中

1606
00:52:50,296 --> 0:52:52,286
正如大家看到的

1607
00:52:52,316 --> 0:52:53,906
轻触和内容应该同步运动

1608
00:52:54,436 --> 0:52:56,136
一对一追踪

1609
00:52:56,136 --> 0:52:56,806
十分重要

1610
00:52:57,406 --> 0:52:59,436
当轻扫或拖拽时

1611
00:52:59,436 --> 0:53:00,696
内容必须和手势

1612
00:52:59,436 --> 0:53:00,696
内容必须和手势

1613
00:53:00,696 --> 0:53:01,326
联结在一起

1614
00:53:02,566 --> 0:53:04,516
这就是 iOS 的原则之一

1615
00:53:05,086 --> 0:53:06,706
你用了滑动这一手势

1616
00:53:06,706 --> 0:53:08,106
让设备使用起来感到自然

1617
00:53:08,106 --> 0:53:08,466
而有直觉

1618
00:53:08,996 --> 0:53:11,406
一旦轻触和内容

1619
00:53:11,406 --> 0:53:13,196
不再一对一追踪

1620
00:53:13,196 --> 0:53:14,446
我们立刻就能注意到

1621
00:53:14,446 --> 0:53:16,076
这是非常明显

1622
00:53:16,076 --> 0:53:16,646
并且令人期待的

1623
00:53:17,106 --> 0:53:18,346
在滑动的情况下

1624
00:53:18,406 --> 0:53:20,106
它告诉我们

1625
00:53:20,106 --> 0:53:21,836
我们已经到达了所有内容的底部

1626
00:53:22,216 --> 0:53:25,826
但是一对一追踪

1627
00:53:25,826 --> 0:53:27,106
不限于轻触屏幕

1628
00:53:27,686 --> 0:53:30,096
比如 在 Apple TV 上操纵用户界面

1629
00:53:30,096 --> 0:53:32,426
就是根据这一理念设计的

1630
00:53:33,486 --> 0:53:34,686
即便轻触没有直接

1631
00:53:34,686 --> 0:53:35,796
操纵内容

1632
00:53:35,796 --> 0:53:37,316
在手势和界面间

1633
00:53:37,316 --> 0:53:38,736
获得直接联系

1634
00:53:38,816 --> 0:53:40,436
也让你能

1635
00:53:40,436 --> 0:53:42,106
操控整个动作

1636
00:53:42,106 --> 0:53:43,246
并让互动富有直觉

1637
00:53:47,256 --> 0:53:48,776
设计手势的另外一个

1638
00:53:48,776 --> 0:53:50,146
核心原则是

1639
00:53:50,146 --> 0:53:51,366
在互动过程中

1640
00:53:51,366 --> 0:53:52,456
持续提供反馈

1641
00:53:52,796 --> 0:53:54,176
这不仅限于

1642
00:53:54,176 --> 0:53:55,166
轻扫或拖拽

1643
00:53:55,706 --> 0:53:57,536
还适用于所有互动

1644
00:53:58,146 --> 0:53:59,706
如果你们再回过头来

1645
00:53:59,706 --> 0:54:00,956
看看 iPhone X 上的闪光灯按钮

1646
00:53:59,706 --> 0:54:00,956
看看 iPhone X 上的闪光灯按钮

1647
00:54:00,956 --> 0:54:03,296
它的大小

1648
00:54:03,626 --> 0:54:05,176
会根据我触碰的压力而变化

1649
00:54:05,786 --> 0:54:06,426
这就让我对自己的动作

1650
00:54:06,426 --> 0:54:07,846
有把握

1651
00:54:08,136 --> 0:54:09,376
它让我知道

1652
00:54:09,376 --> 0:54:11,206
系统正在响应我的手势

1653
00:54:11,206 --> 0:54:12,946
但它同时也告诉我

1654
00:54:12,946 --> 0:54:14,706
再按得用力些

1655
00:54:14,706 --> 0:54:15,306
就能打开闪光灯

1656
00:54:15,736 --> 0:54:19,966
另一个持续反馈的例子是

1657
00:54:19,966 --> 0:54:21,446
Apple TV 上的焦点引擎

1658
00:54:22,466 --> 0:54:23,606
Siri 遥控器上的运动

1659
00:54:23,606 --> 0:54:26,486
一直显示在屏幕上

1660
00:54:26,956 --> 0:54:28,596
它会显示

1661
00:54:28,596 --> 0:54:30,456
当前选中的项目

1662
00:54:30,456 --> 0:54:31,736
改变选中的项目

1663
00:54:31,736 --> 0:54:33,666
选中的方向就会

1664
00:54:33,666 --> 0:54:37,516
跟随着移动

1665
00:54:37,736 --> 0:54:39,286
因此 让我们的用户界面

1666
00:54:39,286 --> 0:54:41,176
在手势操作过程中及时响应

1667
00:54:41,176 --> 0:54:42,496
对提供流畅的体验至关重要

1668
00:54:42,886 --> 0:54:44,416
为此

1669
00:54:44,416 --> 0:54:46,146
当给出手势操作时

1670
00:54:46,146 --> 0:54:47,566
你应该避免做那些

1671
00:54:47,566 --> 0:54:48,906
仅会在结束才会被检测到的手势

1672
00:54:48,906 --> 0:54:51,566
比如 UI Swipe Gesture Recognizer （轻扫）

1673
00:54:52,236 --> 0:54:53,586
你应该用真实的轻触

1674
00:54:53,586 --> 0:54:54,876
或其他的

1675
00:54:54,926 --> 0:54:56,916
手势识别器

1676
00:54:56,916 --> 0:54:58,306
提供关于手势的

1677
00:54:58,306 --> 0:54:59,466
所有可能信息

1678
00:55:00,586 --> 0:55:01,846
因此不止是位置

1679
00:55:01,846 --> 0:55:03,996
还有轻触的速度

1680
00:55:04,266 --> 0:55:07,886
压力和大小

1681
00:55:08,096 --> 0:55:10,106
然而在大多数情况下

1682
00:55:10,106 --> 0:55:12,006
界面必须对多个手势

1683
00:55:12,006 --> 0:55:12,856
做出响应

1684
00:55:13,586 --> 0:55:14,836
当你不停地往 App 中加入特征

1685
00:55:14,836 --> 0:55:16,766
手势的复杂程度

1686
00:55:16,766 --> 0:55:19,296
和个数也都会增加

1687
00:55:19,836 --> 0:55:21,976
比如说 

1688
00:55:21,976 --> 0:55:23,476
在几乎所有采用滚动视图的用户界面中

1689
00:55:23,476 --> 0:55:25,196
轻触和轻扫等

1690
00:55:25,196 --> 0:55:26,996
其他手势会彼此竞争

1691
00:55:27,476 --> 0:55:29,116
就像在这个例子中

1692
00:55:29,116 --> 0:55:30,846
我可以滑动联系人列表

1693
00:55:30,846 --> 0:55:32,306
或自由地轻触他们中的任意一个

1694
00:55:32,306 --> 0:55:33,486
进行预览

1695
00:55:34,996 --> 0:55:36,846
假如在得到任何反馈前

1696
00:55:36,846 --> 0:55:39,006
我必须等待最终手势

1697
00:55:39,006 --> 0:55:41,656
那么就会带来延迟

1698
00:55:42,276 --> 0:55:43,566
在那段等待时间中

1699
00:55:43,566 --> 0:55:44,566
界面就像是

1700
00:55:44,566 --> 0:55:45,236
不在反应

1701
00:55:45,726 --> 0:55:48,306
为此 我们必须

1702
00:55:48,306 --> 0:55:49,896
从动作的一开始

1703
00:55:50,146 --> 0:55:51,536
就检测所有可能的手势

1704
00:55:52,106 --> 0:55:53,456
一旦我们确认了意图

1705
00:55:53,456 --> 0:55:55,286
就取消所有

1706
00:55:55,286 --> 0:55:55,976
其他手势

1707
00:55:58,556 --> 0:55:59,856
那么我们回过头来看看 刚刚那个例子

1708
00:55:59,856 --> 0:56:01,756
我开始按压联系人

1709
00:55:59,856 --> 0:56:01,756
我开始按压联系人

1710
00:56:01,756 --> 0:56:03,646
但是后来决定

1711
00:56:03,646 --> 0:56:04,166
我要滑动

1712
00:56:04,836 --> 0:56:06,426
也就是在那个时候

1713
00:56:06,426 --> 0:56:08,336
我们取消了三维触控动作

1714
00:56:08,336 --> 0:56:09,956
过渡到了正确的手势

1715
00:56:14,116 --> 0:56:15,506
然而有时

1716
00:56:15,506 --> 0:56:17,006
延迟是不可避免的

1717
00:56:17,816 --> 0:56:19,496
比如每次我们在用户界面中双击时

1718
00:56:19,496 --> 0:56:21,306
所有正常的触摸

1719
00:56:21,306 --> 0:56:22,716
都会被延迟

1720
00:56:23,596 --> 0:56:25,446
系统必须等到触摸结束之后

1721
00:56:25,446 --> 0:56:27,366
才能分辨这是单次轻触

1722
00:56:27,366 --> 0:56:27,936
还是双击

1723
00:56:28,476 --> 0:56:32,146
在这个例子中

1724
00:56:32,146 --> 0:56:33,576
由于我可以双击以缩放照片

1725
00:56:33,726 --> 0:56:36,336
轻触以显示 App 菜单

1726
00:56:36,336 --> 0:56:38,766
就被延迟了大约半秒钟

1727
00:56:39,826 --> 0:56:41,056
因此当为你的 App 设计手势时

1728
00:56:41,056 --> 0:56:42,676
你应该

1729
00:56:42,676 --> 0:56:44,256
意识到这些情况

1730
00:56:44,256 --> 0:56:45,516
并尽可能想办法

1731
00:56:45,516 --> 0:56:46,046
避免这些延迟

1732
00:56:49,216 --> 0:56:51,406
那么来总结一下

1733
00:56:51,406 --> 0:56:53,506
我们已经看过了如何设计一些核心手势

1734
00:56:53,616 --> 0:56:54,826
比如轻触和轻扫

1735
00:56:55,496 --> 0:56:56,636
我们看到了内容和轻触手势

1736
00:56:56,636 --> 0:57:00,326
必须一对一地移动

1737
00:56:56,636 --> 0:57:00,326
必须一对一地移动

1738
00:57:00,536 --> 0:57:02,536
这是 iOS 的核心理念之一

1739
00:57:03,426 --> 0:57:04,286
在互动的全过程中

1740
00:57:04,316 --> 0:57:05,836
你还要持续提供反馈

1741
00:57:05,836 --> 0:57:08,106
并且当出现多个手势时

1742
00:57:08,106 --> 0:57:10,146
从一开始就要

1743
00:57:10,146 --> 0:57:11,866
同步监测它们

1744
00:57:12,416 --> 0:57:15,246
现在我想把舞台交还给 Chan

1745
00:57:15,246 --> 0:57:16,876
他将谈谈

1746
00:57:16,876 --> 0:57:19,106
使用流畅的界面

1747
00:57:19,456 --> 0:57:19,976
谢谢大家

1748
00:57:20,516 --> 0:57:25,196
[ 掌声 ]

1749
00:57:25,696 --> 0:57:26,086
&gt;&gt; 干得漂亮

1750
00:57:28,446 --> 0:57:29,656
好的 我又回来了

1751
00:57:30,776 --> 0:57:32,046
我们刚刚学习了

1752
00:57:32,046 --> 0:57:33,816
如何打造

1753
00:57:34,216 --> 0:57:35,466
和我们一样流畅

1754
00:57:35,506 --> 0:57:37,636
能及时响应的

1755
00:57:37,636 --> 0:57:37,886
活跃的界面

1756
00:57:38,746 --> 0:57:39,796
那么既然我们现在

1757
00:57:39,796 --> 0:57:41,096
已经有点得心应手了

1758
00:57:41,096 --> 0:57:41,926
让我们来谈谈

1759
00:57:41,926 --> 0:57:43,036
在流畅界面的

1760
00:57:43,036 --> 0:57:44,646
媒介中工作

1761
00:57:44,676 --> 0:57:45,586
的一些考量

1762
00:57:46,136 --> 0:57:47,816
首先就是教学

1763
00:57:48,706 --> 0:57:50,716
手势界面的一个缺点在于

1764
00:57:50,716 --> 0:57:52,406
它不能立刻确定

1765
00:57:52,526 --> 0:57:55,476
究竟是哪个手势

1766
00:57:55,826 --> 0:57:57,266
我们必须友善并机智地

1767
00:57:57,266 --> 0:57:59,376
以一种友好

1768
00:57:59,376 --> 0:58:00,476
吸引人的方式

1769
00:57:59,376 --> 0:58:00,476
吸引人的方式

1770
00:58:00,476 --> 0:58:01,336
引导用户

1771
00:58:02,716 --> 0:58:04,196
一种方法是

1772
00:58:04,196 --> 0:58:05,606
利用视觉线索

1773
00:58:06,316 --> 0:58:08,136
它们充斥着世界

1774
00:58:08,136 --> 0:58:08,936
对吧

1775
00:58:09,726 --> 0:58:10,996
你只需学习一次

1776
00:58:10,996 --> 0:58:12,116
然后就可以到处用它们

1777
00:58:12,116 --> 0:58:12,986
它们非常便携

1778
00:58:12,986 --> 0:58:15,226
当你一看到它

1779
00:58:15,226 --> 0:58:16,046
就会知道如何使用

1780
00:58:17,686 --> 0:58:19,156
我们已经在 iOS 中

1781
00:58:19,156 --> 0:58:20,766
试着建立起相似的习惯

1782
00:58:21,106 --> 0:58:22,146
这里有一些例子

1783
00:58:23,196 --> 0:58:24,396
这里有一列滚动内容

1784
00:58:24,396 --> 0:58:25,726
你可以在底部

1785
00:58:25,726 --> 0:58:27,566
裁剪掉一些内容

1786
00:58:27,566 --> 0:58:28,786
来表示下面还有更多内容

1787
00:58:28,836 --> 0:58:30,596
让人试着发现

1788
00:58:30,596 --> 0:58:31,666
下面还有什么

1789
00:58:31,706 --> 0:58:34,036
假如我们处理的是好几页的内容

1790
00:58:34,036 --> 0:58:36,106
那就可以用页面指示物

1791
00:58:36,106 --> 0:58:37,916
来表明

1792
00:58:37,916 --> 0:58:39,576
有好几页的内容

1793
00:58:40,316 --> 0:58:41,676
对于滑动窗口内容

1794
00:58:41,676 --> 0:58:42,636
你能用

1795
00:58:42,636 --> 0:58:44,166
像这样的一个

1796
00:58:44,166 --> 0:58:46,646
把手来暗示它是

1797
00:58:46,646 --> 0:58:47,776
可以被抓取并滑动的

1798
00:58:49,326 --> 0:58:50,926
另外一个可以用到的技术是

1799
00:58:50,926 --> 0:58:53,146
把互动元素提高到

1800
00:58:53,146 --> 0:58:54,136
一个单独的平面

1801
00:58:54,566 --> 0:58:55,946
假如你有一个互动元素

1802
00:58:55,946 --> 0:58:57,576
将它提升到单独的平面

1803
00:58:57,626 --> 0:58:58,676
可以帮助你

1804
00:58:58,716 --> 0:59:00,286
将它与其他内容区分开来

1805
00:58:58,716 --> 0:59:00,286
将它与其他内容区分开来

1806
00:59:01,586 --> 0:59:03,006
一个很好的例子是

1807
00:59:03,006 --> 0:59:04,056
打开/关闭按钮

1808
00:59:04,496 --> 0:59:05,696
我们想要表明

1809
00:59:05,696 --> 0:59:07,136
开关的旋钮是可以被抓取的

1810
00:59:07,586 --> 0:59:09,396
因此我们把它 提升到了另一个平面

1811
00:59:10,036 --> 0:59:11,656
这在视觉上就将其分开

1812
00:59:11,816 --> 0:59:13,776
并且展现了它可以被抓取的本质

1813
00:59:14,696 --> 0:59:16,096
因此像这样

1814
00:59:16,456 --> 0:59:17,716
在界面上方的

1815
00:59:17,716 --> 0:59:19,406
悬浮元素 互动元素

1816
00:59:19,556 --> 0:59:20,816
能表明它们是可以被抓取的

1817
00:59:21,506 --> 0:59:26,136
接下来我们将用动作

1818
00:59:26,136 --> 0:59:28,156
来展示 而不是简单地说

1819
00:59:28,516 --> 0:59:30,136
如何使用界面

1820
00:59:30,426 --> 0:59:32,356
我们可以用静止的动画

1821
00:59:32,396 --> 0:59:34,106
来增强动态行为

1822
00:59:35,006 --> 0:59:35,976
一个例子就是

1823
00:59:36,006 --> 0:59:36,446
Safari 浏览器

1824
00:59:37,076 --> 0:59:39,166
在 Safari 浏览器中

1825
00:59:39,166 --> 0:59:40,456
左上角靠近标签页的地方有这个 x 型图标

1826
00:59:40,456 --> 0:59:41,816
当你轻敲那个按钮

1827
00:59:41,866 --> 0:59:43,646
标签页就向左轻扫了

1828
00:59:43,646 --> 0:59:44,766
表明它已被关闭

1829
00:59:45,596 --> 0:59:46,846
这就暗示我

1830
00:59:46,846 --> 0:59:48,576
可以自己向左轻扫

1831
00:59:48,676 --> 0:59:50,536
通过一个手势操作来

1832
00:59:50,536 --> 0:59:52,116
同样完成关闭标签页

1833
00:59:52,116 --> 0:59:52,586
这个动作

1834
00:59:53,436 --> 0:59:54,886
通过使离散的动画

1835
00:59:55,046 --> 0:59:56,246
和手势一致

1836
00:59:56,246 --> 0:59:58,786
我们可以用其中一个

1837
00:59:58,826 --> 1:00:00,246
去教另一个

1838
00:59:58,826 --> 1:00:00,246
去教另一个

1839
01:00:02,296 --> 1:00:03,196
还有另外一种可以用的技术

1840
01:00:03,196 --> 1:00:05,306
那就是解释

1841
01:00:05,476 --> 1:00:07,196
你明确告诉用户

1842
01:00:07,196 --> 1:00:08,576
如何使用一个手势

1843
01:00:09,666 --> 1:00:10,796
这最好是适度使用

1844
01:00:10,796 --> 1:00:12,456
最理想的情况是

1845
01:00:12,456 --> 1:00:14,196
当你在很多地方

1846
01:00:14,196 --> 1:00:15,766
重复使用一个手势

1847
01:00:16,186 --> 1:00:18,216
因为你只要到前台解释一次

1848
01:00:18,216 --> 1:00:19,246
然后继续用它

1849
01:00:19,286 --> 1:00:21,036
就能继续加强它

1850
01:00:21,896 --> 1:00:23,136
不要把它运用到

1851
01:00:23,136 --> 1:00:24,836
间歇使用的手势上

1852
01:00:24,836 --> 1:00:25,976
人们记不住它的

1853
01:00:26,946 --> 1:00:29,706
接下来我想稍微谈谈

1854
01:00:29,706 --> 1:00:31,786
乐趣和可玩性

1855
01:00:32,496 --> 1:00:33,606
因为这是流畅界面

1856
01:00:33,606 --> 1:00:35,976
最重要的方面之一

1857
01:00:36,366 --> 1:00:37,906
只有当你确定了一切

1858
01:00:37,906 --> 1:00:39,076
它才有效

1859
01:00:40,326 --> 1:00:42,196
这是流畅界面的

1860
01:00:42,196 --> 1:00:43,136
自然结果

1861
01:00:43,136 --> 1:00:44,056
当界面即时响应

1862
01:00:44,056 --> 1:00:46,186
并表现得令人满意

1863
01:00:46,506 --> 1:00:47,686
当它是可重新定向

1864
01:00:47,686 --> 1:00:48,216
并宽容的

1865
01:00:48,676 --> 1:00:50,496
当动作和手势是流畅的

1866
01:00:50,496 --> 1:00:51,816
所有一切我们刚刚提到的

1867
01:00:52,426 --> 1:00:54,546
界面开始和你感觉同步了

1868
01:00:55,336 --> 1:00:57,486
神奇的事情发生了

1869
01:00:57,486 --> 1:00:58,996
你不再感觉

1870
01:00:58,996 --> 1:01:00,446
你需要学习界面

1871
01:00:58,996 --> 1:01:00,446
你需要学习界面

1872
01:01:00,546 --> 1:01:02,326
相反 你感觉你正在发现界面

1873
01:01:03,806 --> 1:01:06,016
因此我们认为

1874
01:01:06,016 --> 1:01:08,026
当能让用户通过玩耍来发现界面

1875
01:01:08,026 --> 1:01:09,026
这是最好的情况

1876
01:01:09,026 --> 1:01:10,076
这甚至不会让人感觉

1877
01:01:10,076 --> 1:01:11,216
他们在学习它

1878
01:01:11,216 --> 1:01:11,626
这真的很有趣

1879
01:01:12,876 --> 1:01:15,836
人们喜欢玩东西

1880
01:01:16,146 --> 1:01:18,176
我们认为如果能发挥与生俱来拨弄的本性

1881
01:01:18,176 --> 1:01:19,936
这是最好的

1882
01:01:20,696 --> 1:01:22,486
玩是我们大脑

1883
01:01:22,486 --> 1:01:24,146
正在内化

1884
01:01:24,146 --> 1:01:24,646
界面的感觉

1885
01:01:25,356 --> 1:01:26,306
所以当我们仅仅是为了打造而打造这东西

1886
01:01:26,306 --> 1:01:27,256
制作它的原型时

1887
01:01:27,256 --> 1:01:29,646
这才是最棒的

1888
01:01:29,646 --> 1:01:30,736
亲自玩它

1889
01:01:30,796 --> 1:01:32,176
看你能怎么摆弄它

1890
01:01:32,266 --> 1:01:33,426
把它给别人

1891
01:01:33,426 --> 1:01:33,976
看看别人会怎么玩

1892
01:01:34,376 --> 1:01:35,486
然后考虑你将如何通过

1893
01:01:35,486 --> 1:01:37,536
类似动画 动作

1894
01:01:37,536 --> 1:01:39,106
或解释等行为

1895
01:01:39,106 --> 1:01:39,926
来加强它

1896
01:01:41,336 --> 1:01:43,006
令人惊讶的是

1897
01:01:43,126 --> 1:01:45,076
玩居然可以有这么大的效果

1898
01:01:45,076 --> 1:01:46,726
让界面向人类展示

1899
01:01:46,726 --> 1:01:47,056
自我学习

1900
01:01:47,626 --> 1:01:51,486
让我们再来谈谈

1901
01:01:51,486 --> 1:01:52,696
作为媒介的流畅度

1902
01:01:53,216 --> 1:01:54,146
我们如何真正开始

1903
01:01:54,206 --> 1:01:55,056
打造这东西

1904
01:01:55,666 --> 1:01:56,716
我们把像这样的界面

1905
01:01:56,716 --> 1:01:58,426
看成是独一无二的介质

1906
01:01:58,426 --> 1:01:59,426
因此必须正确地

1907
01:01:59,616 --> 1:02:00,606
处理它

1908
01:01:59,616 --> 1:02:00,606
处理它

1909
01:02:02,376 --> 1:02:04,296
那么第一件事就是

1910
01:02:04,296 --> 1:02:05,356
将互动与视觉

1911
01:02:05,396 --> 1:02:07,036
打造成不可分割的状态

1912
01:02:07,616 --> 1:02:08,936
而不是后来添加的东西

1913
01:02:09,566 --> 1:02:11,506
互动设计必须

1914
01:02:11,506 --> 1:02:12,776
与视觉效果

1915
01:02:12,776 --> 1:02:13,196
同步完成

1916
01:02:13,196 --> 1:02:14,166
你甚至不应该能分得清

1917
01:02:14,306 --> 1:02:15,776
什么时候一个结束了

1918
01:02:15,776 --> 1:02:16,226
而另一个开始了

1919
01:02:17,466 --> 1:02:18,526
我们必须建立

1920
01:02:18,526 --> 1:02:19,926
这种东西的样本

1921
01:02:19,926 --> 1:02:21,326
我们认为互动演示

1922
01:02:21,326 --> 1:02:23,006
绝对值得一百万个

1923
01:02:23,046 --> 1:02:23,476
静态设计

1924
01:02:23,926 --> 1:02:25,766
不只是为了展示给别人看

1925
01:02:25,996 --> 1:02:27,806
还要你自身理解

1926
01:02:27,806 --> 1:02:29,606
界面的真正内涵

1927
01:02:30,996 --> 1:02:33,646
当你制作它的原型时

1928
01:02:33,646 --> 1:02:35,806
非常珍贵

1929
01:02:35,806 --> 1:02:36,846
因为你在搭建时

1930
01:02:36,846 --> 1:02:38,886
就几乎发现了界面

1931
01:02:39,696 --> 1:02:40,436
这个技术实际上就是

1932
01:02:40,436 --> 1:02:41,796
我们在搭建 iPhone X 界面时

1933
01:02:41,886 --> 1:02:42,566
用到的

1934
01:02:43,886 --> 1:02:45,016
它真的非常重要

1935
01:02:45,016 --> 1:02:46,636
因为它同时为实施

1936
01:02:46,636 --> 1:02:47,406
设立了目标

1937
01:02:47,826 --> 1:02:49,416
非常幸运在 Apple

1938
01:02:49,416 --> 1:02:50,596
我们有这支

1939
01:02:50,596 --> 1:02:52,056
令人惊艳的工程设计团队来建造它

1940
01:02:52,056 --> 1:02:53,386
因为建造过程

1941
01:02:53,386 --> 1:02:53,826
真的很难

1942
01:02:53,936 --> 1:02:56,866
还需要有一些

1943
01:02:57,006 --> 1:02:58,126
神奇的例子

1944
01:02:58,126 --> 1:02:59,706
提醒你自己和

1945
01:02:59,706 --> 1:03:01,446
工程设计团队

1946
01:02:59,706 --> 1:03:01,446
工程设计团队

1947
01:03:01,586 --> 1:03:05,066
它将会有什么感觉

1948
01:03:05,066 --> 1:03:05,746
明白吗

1949
01:03:05,746 --> 1:03:10,476
记住 这真的是在提醒你自己

1950
01:03:11,896 --> 1:03:15,086
当你真的搭建时

1951
01:03:15,086 --> 1:03:16,426
它是非常难以

1952
01:03:16,426 --> 1:03:17,626
被复制的

1953
01:03:17,896 --> 1:03:19,386
这就给了你的 App

1954
01:03:19,426 --> 1:03:19,936
独一无二的特性

1955
01:03:21,006 --> 1:03:27,286
因此多点触控

1956
01:03:27,286 --> 1:03:28,726
是我们发挥的一个

1957
01:03:28,726 --> 1:03:29,156
神奇的媒介

1958
01:03:30,196 --> 1:03:31,446
我们用科技

1959
01:03:31,446 --> 1:03:32,596
在古老 触觉的层面上

1960
01:03:32,726 --> 1:03:34,106
与人们联系

1961
01:03:34,756 --> 1:03:36,126
这真的非常酷

1962
01:03:38,206 --> 1:03:40,066
今天我们谈论的

1963
01:03:40,066 --> 1:03:42,226
所有原则

1964
01:03:42,226 --> 1:03:43,616
都是 iPhone X 手势界面

1965
01:03:43,746 --> 1:03:45,646
设计的核心

1966
01:03:46,336 --> 1:03:47,526
及时响应

1967
01:03:47,526 --> 1:03:48,976
可重新定向 可中断的手势

1968
01:03:48,976 --> 1:03:50,926
动态动作

1969
01:03:51,306 --> 1:03:52,876
优雅的手势操作

1970
01:03:53,636 --> 1:03:55,056
这在很多方面

1971
01:03:55,056 --> 1:03:57,646
体现了我们认为的

1972
01:03:58,996 --> 1:04:01,246
流畅界面

1973
01:03:58,996 --> 1:04:01,246
流畅界面

1974
01:04:01,246 --> 1:04:02,586
我们的思维和行动一致时

1975
01:04:03,376 --> 1:04:05,166
神奇的事情发生了

1976
01:04:05,986 --> 1:04:07,796
它不再像是一台电脑

1977
01:04:07,796 --> 1:04:09,906
而是开始像

1978
01:04:09,906 --> 1:04:11,596
我们自身的无缝延伸

1979
01:04:14,416 --> 1:04:16,206
当我们设计

1980
01:04:16,276 --> 1:04:18,336
界面的未来

1981
01:04:18,336 --> 1:04:19,776
我们认为必须像这样

1982
01:04:20,056 --> 1:04:21,716
在科技中

1983
01:04:21,716 --> 1:04:22,626
试图捕捉人性

1984
01:04:23,626 --> 1:04:24,416
这个人类最重要的

1985
01:04:24,416 --> 1:04:26,596
工具之一

1986
01:04:26,596 --> 1:04:28,966
使用起来不是负担

1987
01:04:28,966 --> 1:04:30,086
而是快乐和愉悦

1988
01:04:30,966 --> 1:04:31,956
非常感谢

1989
01:04:32,516 --> 1:04:36,500
[ 掌声 ]
