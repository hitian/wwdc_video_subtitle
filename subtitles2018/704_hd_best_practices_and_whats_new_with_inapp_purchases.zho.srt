1
00:00:17,985 --> 00:00:20,020
（app内购买项目的

2
00:00:20,087 --> 00:00:20,921
(演讲704)

3
00:00:21,421 --> 00:00:22,289
下午好

4
00:00:27,261 --> 00:00:30,130
欢迎来听“app内购买项目的

5
00:00:30,197 --> 00:00:33,567
我叫Dana DuBois

6
00:00:34,368 --> 00:00:36,436
app内购买项目是

7
00:00:36,503 --> 00:00:39,339
开展业务的必要组成部分

8
00:00:39,773 --> 00:00:42,643
不管你是有订阅模型 可能是

9
00:00:42,709 --> 00:00:48,182
视频流服务或是报纸、杂志订阅

10
00:00:48,582 --> 00:00:52,452
用户可以重复购买的消耗性产品

11
00:00:52,653 --> 00:00:53,820
或是一些非消耗性产品

12
00:00:53,887 --> 00:00:57,457
用户只要买一次就可以一直用

13
00:00:58,125 --> 00:01:01,395
将用户体验搞好是很重要的

14
00:00:58,125 --> 00:01:01,395
将用户体验搞好是很重要的

15
00:01:02,262 --> 00:01:04,031
毕竟这是你的生意

16
00:01:05,432 --> 00:01:07,901
我们会介绍一些不错的实践方法

17
00:01:07,968 --> 00:01:09,970
来帮助你提升用户体验

18
00:01:10,204 --> 00:01:12,639
我们还会介绍一些我们一直在做的

19
00:01:13,106 --> 00:01:15,242
致力于提升用户体验的内容

20
00:01:18,512 --> 00:01:21,381
首先我要请同事Ross上台来

21
00:01:21,448 --> 00:01:22,950
请他来介绍下推广性定价

22
00:01:23,016 --> 00:01:25,786
这是我们去年十二月发布的一个功能

23
00:01:25,853 --> 00:01:28,956
它可以帮助你吸引新用户

24
00:01:29,823 --> 00:01:32,960
我会介绍下

25
00:01:34,361 --> 00:01:35,996
我们会介绍评分与评价

26
00:01:36,063 --> 00:01:40,200
及如何让用户到App Store

27
00:01:41,101 --> 00:01:42,803
我会介绍你该如何使用

28
00:01:42,870 --> 00:01:47,941
Apple App Store沙盒环境

29
00:01:48,976 --> 00:01:52,379
Ross会回来给你们介绍

30
00:01:52,446 --> 00:01:54,948
在这个时候你会实际购买

31
00:01:56,517 --> 00:02:00,354
最后我会给你们概述

32
00:01:56,517 --> 00:02:00,354
最后我会给你们概述

33
00:02:01,688 --> 00:02:04,525
首先让我的同事Ross来介绍

34
00:02:06,994 --> 00:02:07,828
谢谢 Dana

35
00:02:09,663 --> 00:02:12,766
在iOS 11.2和

36
00:02:13,100 --> 00:02:16,203
我们向app内购买的订阅中

37
00:02:17,104 --> 00:02:20,174
你可以给新订阅者

38
00:02:21,508 --> 00:02:23,544
我们在App Store

39
00:02:24,912 --> 00:02:28,282
而且每个订阅

40
00:02:29,183 --> 00:02:31,752
当有合格的用户

41
00:02:32,953 --> 00:02:35,422
App Store

42
00:02:36,456 --> 00:02:38,659
根据订阅群组 每个用户

43
00:02:39,159 --> 00:02:40,294
都会符合一个单独的推广性定价

44
00:02:40,761 --> 00:02:41,995
我会在晚些时候进行介绍

45
00:02:44,097 --> 00:02:45,365
除了推广性定价

46
00:02:45,799 --> 00:02:47,868
我们还在StoreKit中

47
00:02:49,369 --> 00:02:52,172
这些API反应了你在App Store

48
00:02:53,207 --> 00:02:55,375
你可以使用它们格式化你的用户界面

49
00:02:55,442 --> 00:02:57,878
给你的用户显示订阅条款

50
00:02:58,645 --> 00:03:02,216
还可以决定哪些用户

51
00:02:58,645 --> 00:03:02,216
还可以决定哪些用户

52
00:03:04,117 --> 00:03:04,952
例如

53
00:03:05,919 --> 00:03:07,454
当你对一个促销的app内购买项目

54
00:03:07,521 --> 00:03:10,557
App Store看起来是这样的

55
00:03:11,692 --> 00:03:13,427
你们会发现 它很清晰自然地

56
00:03:13,694 --> 00:03:15,929
将订阅的条款介绍给了用户

57
00:03:16,396 --> 00:03:20,434
第一年是19.99

58
00:03:21,835 --> 00:03:22,769
推广性定价对于

59
00:03:22,836 --> 00:03:25,239
促进你app内购买项目的销售

60
00:03:25,572 --> 00:03:27,908
用户甚至能在安装你的app前

61
00:03:29,910 --> 00:03:32,746
今天我会和你们谈谈这些新API

62
00:03:32,813 --> 00:03:34,615
有哪些办法可以设置推广性定价

63
00:03:37,818 --> 00:03:40,687
首先在SKProduct上

64
00:03:40,888 --> 00:03:43,524
恰如其分地叫

65
00:03:44,391 --> 00:03:46,760
有个新的类叫做

66
00:03:47,628 --> 00:03:50,397
这个类包含了所有你需要用来

67
00:03:51,632 --> 00:03:53,133
如你所见 这是个可选的属性

68
00:03:53,200 --> 00:03:56,136
那是因为只有订阅才有推广价

69
00:03:56,403 --> 00:03:58,005
而且不是所有的订阅都有推广价

70
00:03:59,406 --> 00:04:00,908
让我们来仔细看下

71
00:03:59,406 --> 00:04:00,908
让我们来仔细看下

72
00:04:03,944 --> 00:04:05,913
反映了你所设置的

73
00:04:05,979 --> 00:04:08,382
在App Store Connect中

74
00:04:09,550 --> 00:04:12,653
它有price

75
00:04:12,719 --> 00:04:15,489
与SKProduct中

76
00:04:17,891 --> 00:04:19,660
还有个

77
00:04:20,394 --> 00:04:23,030
这是个叫

78
00:04:24,064 --> 00:04:26,733
它反映了关于推广价付款和续费

79
00:04:26,800 --> 00:04:27,935
的全部数据

80
00:04:29,536 --> 00:04:31,205
它是通过自己的两个属性来实现的

81
00:04:32,139 --> 00:04:35,809
第一个属性是Unit

82
00:04:37,477 --> 00:04:38,846
第二个属性是

83
00:04:39,313 --> 00:04:44,885
例如 如果你有一个月的Unit

84
00:04:45,419 --> 00:04:47,888
这就意味着推广价

85
00:04:50,424 --> 00:04:53,560
在SKProductDiscount上

86
00:04:54,962 --> 00:04:56,964
它反映了推广价有效的

87
00:04:57,030 --> 00:04:58,665
订阅周期数

88
00:04:59,633 --> 00:05:01,969
比方说 你有个两个月的推广价

89
00:04:59,633 --> 00:05:01,969
比方说 你有个两个月的推广价

90
00:05:02,035 --> 00:05:03,303
周期数为3

91
00:05:03,637 --> 00:05:06,306
这就意味着

92
00:05:10,043 --> 00:05:14,248
最后在SKProductDiscount上

93
00:05:15,215 --> 00:05:17,751
这个新的枚举有三个值

94
00:05:19,186 --> 00:05:20,454
第一个值是payAsYouGo

95
00:05:21,688 --> 00:05:23,156
这就像是个普通的订阅

96
00:05:23,524 --> 00:05:25,559
用户在每个续费周期只付一次款

97
00:05:27,327 --> 00:05:29,396
而这些订阅的续费周期必须跟

98
00:05:29,463 --> 00:05:31,265
你所设置的基本订阅推广价

99
00:05:31,331 --> 00:05:32,699
的续费周期相一致

100
00:05:33,267 --> 00:05:36,103
如果你有个一个月长的订阅

101
00:05:36,370 --> 00:05:39,273
你就不能在这里设置两周长的推广价

102
00:05:40,874 --> 00:05:43,477
你可以使用这些类型的推广价

103
00:05:43,544 --> 00:05:46,980
更长 更提前 没有分歧的推广期

104
00:05:48,348 --> 00:05:52,786
例如 如果你有个三个月的续订

105
00:05:53,554 --> 00:05:54,922
需要付9.99

106
00:05:55,822 --> 00:05:57,658
你就可以设置一个6个月的推广价

107
00:05:58,258 --> 00:06:00,527
一共续费两次 每次1.99

108
00:05:58,258 --> 00:06:00,527
一共续费两次 每次1.99

109
00:06:02,663 --> 00:06:06,667
付费期看起来是这样的 用户购买了

110
00:06:06,733 --> 00:06:11,104
推广价为1.99的订阅

111
00:06:11,738 --> 00:06:15,609
到期后他们可以

112
00:06:17,344 --> 00:06:18,212
在那之后 他们会

113
00:06:18,278 --> 00:06:20,881
以9.99的常规订阅条款

114
00:06:23,684 --> 00:06:25,719
在本例中 来自StoreKit的

115
00:06:26,954 --> 00:06:29,189
你能看到subscriptionPeriod

116
00:06:29,857 --> 00:06:32,659
而单位数为三

117
00:06:33,393 --> 00:06:34,528
而周期数为2

118
00:06:34,595 --> 00:06:36,496
这样我们就有总共六个月的推广期了

119
00:06:38,265 --> 00:06:39,433
付款模式是即买即用

120
00:06:39,800 --> 00:06:42,302
推广价是1.99

121
00:06:45,873 --> 00:06:47,908
接下来的付款模式是

122
00:06:49,877 --> 00:06:52,346
这类的推广价就是

123
00:06:52,412 --> 00:06:54,181
就可以收到整个的推广期订阅

124
00:06:55,782 --> 00:06:58,785
这并不限于你的多个订阅续费期

125
00:06:59,152 --> 00:07:02,523
在本例中

126
00:06:59,152 --> 00:07:02,523
在本例中

127
00:07:02,756 --> 00:07:04,591
并提供一个月的推广价

128
00:07:07,060 --> 00:07:08,595
拿我们前面的例子来说

129
00:07:09,062 --> 00:07:11,231
我们有个三个月的自动续费订阅

130
00:07:12,633 --> 00:07:15,869
这次我们提供一个

131
00:07:18,071 --> 00:07:21,608
你要付3.99

132
00:07:21,875 --> 00:07:25,946
但这次用户提前付3.99

133
00:07:27,514 --> 00:07:30,217
在那之后

134
00:07:30,751 --> 00:07:32,519
这个常规订阅条款来续费

135
00:07:35,789 --> 00:07:37,724
StoreKit中的数据

136
00:07:38,358 --> 00:07:40,294
订阅周期的单位还是月

137
00:07:40,360 --> 00:07:42,095
但这次我们有六个单位

138
00:07:42,596 --> 00:07:44,298
而周期数是1

139
00:07:44,364 --> 00:07:46,166
因为这是个提前付款的推广价

140
00:07:51,171 --> 00:07:52,973
最后一个付款模式是

141
00:07:54,274 --> 00:07:56,243
它跟老的freeTrial

142
00:07:56,677 --> 00:07:59,079
用户不需要付款

143
00:08:00,414 --> 00:08:03,851
它在从三天到一年的范围都是可用的

144
00:08:08,055 --> 00:08:08,889
抱歉

145
00:08:10,657 --> 00:08:13,260
在iOS 12

146
00:08:14,728 --> 00:08:17,698
我们向SKProduct添加了

147
00:08:18,866 --> 00:08:20,934
这样你就可以访问

148
00:08:21,235 --> 00:08:22,803
付款和续费条款

149
00:08:22,870 --> 00:08:24,238
不仅仅是推广价

150
00:08:26,507 --> 00:08:28,775
我们在iOS 12

151
00:08:29,476 --> 00:08:31,245
还向SKProduct加入了

152
00:08:31,311 --> 00:08:32,212
subscriptionGroupIdentifier

153
00:08:34,414 --> 00:08:37,150
这很重要 因为推广性定价的资格

154
00:08:37,217 --> 00:08:39,886
是基于订阅群组的

155
00:08:41,154 --> 00:08:44,858
每个用户对应一个订阅群组的

156
00:08:46,326 --> 00:08:49,096
这是因为订阅群组就是要为

157
00:08:49,162 --> 00:08:52,299
不同的续费期和价格点

158
00:08:52,499 --> 00:08:56,069
例如 许多app为相同的内容

159
00:08:56,136 --> 00:08:59,139
而年度的会随着时间加长更便宜些

160
00:09:00,307 --> 00:09:03,043
用户如果为相同的内容

161
00:09:03,110 --> 00:09:06,079
收到月度和年度的推广价是不合理的

162
00:09:09,683 --> 00:09:12,519
由于推广价是在购买的时候

163
00:09:12,586 --> 00:09:14,655
你的app

164
00:09:14,721 --> 00:09:17,858
要在显示价格时正确地决定

165
00:09:19,359 --> 00:09:21,094
关于决定资格的更多信息

166
00:09:21,695 --> 00:09:23,463
你可以听下“工程订阅”这个演讲

167
00:09:23,530 --> 00:09:25,532
就在本场演讲结束后的三点开始

168
00:09:27,401 --> 00:09:30,070
现在有了这些新API

169
00:09:30,137 --> 00:09:32,306
你在App Store Connect中

170
00:09:32,639 --> 00:09:34,374
这样你的app不需要更新二进制

171
00:09:34,608 --> 00:09:36,677
就可以反映出你所做出的任何变化

172
00:09:38,612 --> 00:09:42,082
我想请Dana回到台上来

173
00:09:47,521 --> 00:09:48,355
谢谢 Ross

174
00:09:49,590 --> 00:09:53,994
如果你的商业模型是订阅的话

175
00:09:54,795 --> 00:09:56,430
推广性定价

176
00:09:57,664 --> 00:10:01,235
但是如果你的app和商业模型

177
00:09:57,664 --> 00:10:01,235
但是如果你的app和商业模型

178
00:10:01,435 --> 00:10:03,036
不适合开展订阅服务呢？

179
00:10:03,937 --> 00:10:07,608
从今天开始

180
00:10:07,674 --> 00:10:11,044
你可以为没有订阅的app

181
00:10:12,045 --> 00:10:15,482
你可以在购买前先试用一下

182
00:10:17,351 --> 00:10:18,585
你要如何实现呢？

183
00:10:19,720 --> 00:10:26,026
你要把你提前付款的app做成

184
00:10:26,894 --> 00:10:30,597
然后你要添加一个解锁用的

185
00:10:30,664 --> 00:10:32,733
若我的app在App Store

186
00:10:32,799 --> 00:10:37,104
你就要将这个非消耗性的

187
00:10:38,238 --> 00:10:42,209
重要的是 你要让用户自己决定

188
00:10:42,276 --> 00:10:44,211
要这么做的话 你需要再做一个

189
00:10:44,278 --> 00:10:48,615
0级价位的

190
00:10:48,682 --> 00:10:51,218
这是个免费的非消耗性内容

191
00:10:52,019 --> 00:10:54,955
用户可以用它来开始试用期

192
00:10:56,490 --> 00:10:59,660
该免费非消耗性内容的命名规范

193
00:11:00,093 --> 00:11:04,031
要详细说明推广期有多长

194
00:11:04,097 --> 00:11:06,400
在本例中 是14天试用

195
00:11:08,101 --> 00:11:12,806
在用户开始他们的使用之前

196
00:11:13,073 --> 00:11:15,809
清楚地知道试用期有多长

197
00:11:17,177 --> 00:11:21,615
在免费试用结束时

198
00:11:22,316 --> 00:11:26,587
最后还有就是

199
00:11:26,854 --> 00:11:31,058
并且不购买完全解锁的话

200
00:11:31,291 --> 00:11:33,227
该信息需要被提前呈现出来

201
00:11:33,894 --> 00:11:36,129
它会让你对变化有个快速了解

202
00:11:36,196 --> 00:11:37,898
我会在介绍收据的时候

203
00:11:37,965 --> 00:11:40,267
应该如何在你的app中实现它

204
00:11:41,935 --> 00:11:42,803
而现在

205
00:11:44,171 --> 00:11:47,741
我想介绍下

206
00:11:48,909 --> 00:11:51,245
不管你的app中

207
00:11:51,512 --> 00:11:55,449
只要在App Store中上架了

208
00:11:55,816 --> 00:11:59,820
App Store和StoreKit

209
00:12:01,355 --> 00:12:05,926
首先在iOS 10.3中 我们引入了

210
00:12:05,993 --> 00:12:11,965
这是个很棒的API

211
00:12:12,032 --> 00:12:15,736
让用户选择一个星级评分

212
00:12:15,802 --> 00:12:17,504
然后回来接着用你的app

213
00:12:18,438 --> 00:12:22,242
不过这么厉害的功能肯定是有限制的

214
00:12:22,976 --> 00:12:27,614
首先我们限制了每个app

215
00:12:27,848 --> 00:12:31,285
能弹出此窗口的次数

216
00:12:32,819 --> 00:12:36,924
其次 如果用户永远都

217
00:12:37,291 --> 00:12:40,327
他们只需要去App Store

218
00:12:41,295 --> 00:12:46,400
有了这两个限制 你可以用什么策略

219
00:12:46,466 --> 00:12:51,138
来决定什么时候

220
00:12:52,172 --> 00:12:55,175
首先就是我们不要打扰到用户

221
00:12:56,176 --> 00:12:58,178
如果用户正在玩某个关卡

222
00:12:58,245 --> 00:13:00,414
而且正在打关底的首领

223
00:12:58,245 --> 00:13:00,414
而且正在打关底的首领

224
00:13:01,048 --> 00:13:05,152
这不是让他们对你游戏评分的好时机

225
00:13:07,054 --> 00:13:10,791
你还应该等到

226
00:13:10,858 --> 00:13:13,327
对其形成了完整的看法

227
00:13:13,694 --> 00:13:16,163
还要等他们对你的app

228
00:13:16,230 --> 00:13:20,100
可能他们刚刚打完了首领

229
00:13:20,167 --> 00:13:23,770
刚通过你的app订了餐

230
00:13:25,172 --> 00:13:26,840
最后 我之前提过我们限制了

231
00:13:26,907 --> 00:13:32,312
这个app每台设备每年

232
00:13:32,813 --> 00:13:34,815
但是我们没有限制评分

233
00:13:35,816 --> 00:13:40,921
所以如果在一次会话中你调用了

234
00:13:41,088 --> 00:13:45,459
并且用户一直在点击现在不要

235
00:13:45,526 --> 00:13:48,428
你可以自己决定app中的

236
00:13:49,429 --> 00:13:50,631
它在代码中是什么样？

237
00:13:51,798 --> 00:13:56,069
正如我一直在说的 将对于

238
00:13:56,136 --> 00:13:58,138
隐藏到你自己app的业务逻辑中

239
00:13:58,372 --> 00:14:01,241
你要检查下

240
00:13:58,372 --> 00:14:01,241
你要检查下

241
00:14:01,441 --> 00:14:05,045
他们是还在某项任务中

242
00:14:05,679 --> 00:14:09,316
他们是不是刚收获了正面的体验呢？

243
00:14:09,683 --> 00:14:10,918
你要在检查中加入这些判断条件

244
00:14:11,151 --> 00:14:12,920
如果所有这些判断条件都通过了

245
00:14:13,220 --> 00:14:17,457
你就可以调用SKStoreReviewController.

246
00:14:17,858 --> 00:14:22,362
它没有输入和输出

247
00:14:23,697 --> 00:14:27,534
我们已经收到了很多来自开发者的

248
00:14:28,068 --> 00:14:29,303
我很高兴能给你们分享其中的一些

249
00:14:30,137 --> 00:14:35,542
Zappos说道 他们通过使用

250
00:14:35,709 --> 00:14:39,446
收到了原来十倍的评价

251
00:14:39,513 --> 00:14:42,149
他们是在将正确的内容给用户

252
00:14:42,816 --> 00:14:48,822
Frosty Pop是Kingpin Bowling

253
00:14:49,156 --> 00:14:53,126
他们在App Store

254
00:14:53,660 --> 00:14:57,331
因为有了更大的样本

255
00:14:57,397 --> 00:15:00,501
获得相关用户群体提供的反馈

256
00:14:57,397 --> 00:15:00,501
获得相关用户群体提供的反馈

257
00:15:01,768 --> 00:15:03,804
我希望这类反馈能说服你

258
00:15:03,871 --> 00:15:07,140
不要用自己的弹出窗口来请求评价了

259
00:15:07,207 --> 00:15:09,877
你应该使用

260
00:15:11,044 --> 00:15:13,247
它真的能为你带来很大的收获

261
00:15:16,450 --> 00:15:21,255
我相信你们看到我们昨天发布了全新

262
00:15:21,688 --> 00:15:25,425
我知道你们会去赶紧开发一些

263
00:15:25,926 --> 00:15:28,095
所以我们很激动地宣布

264
00:15:28,328 --> 00:15:32,633
我们给Mac带来了写评价API

265
00:15:37,004 --> 00:15:38,872
我提过了 你有几种

266
00:15:38,939 --> 00:15:42,676
让你的用户

267
00:15:44,178 --> 00:15:48,448
另一种方法就是你可以设置

268
00:15:49,183 --> 00:15:51,018
我们也在iOS 10.3中

269
00:15:51,084 --> 00:15:53,420
今年我们也会将它带到Mac中

270
00:15:54,721 --> 00:15:57,357
它基本上就是一个

271
00:15:57,424 --> 00:16:00,127
你告诉App Store

272
00:15:57,424 --> 00:16:00,127
你告诉App Store

273
00:16:00,194 --> 00:16:02,296
用户可以随时随地填写这个表单

274
00:16:02,629 --> 00:16:05,332
作为SKStoreReviewController

275
00:16:05,399 --> 00:16:08,735
这可以在用户需要

276
00:16:08,802 --> 00:16:11,305
表现得更出色

277
00:16:11,905 --> 00:16:16,510
例如 如果你的app中的

278
00:16:16,577 --> 00:16:19,479
要请用户写个评价的话

279
00:16:19,546 --> 00:16:23,517
这时候在你的产品页面中

280
00:16:24,017 --> 00:16:25,018
那要如何实现呢？

281
00:16:25,953 --> 00:16:29,823
非常简单 你只要在产品页面URL

282
00:16:30,057 --> 00:16:32,759
的后面加上action=write-review

283
00:16:32,826 --> 00:16:35,829
这会让App Store

284
00:16:36,296 --> 00:16:41,168
如果你不知道如何获得

285
00:16:41,735 --> 00:16:45,973
linkmaker.itunes.apple.com中

286
00:16:46,373 --> 00:16:49,076
你可以获得

287
00:16:49,142 --> 00:16:53,213
包括如何直接在开发者网站上

288
00:16:55,949 --> 00:16:59,620
我接下来想深入介绍下

289
00:17:00,954 --> 00:17:02,990
我说的沙盒是什么意思呢？

290
00:17:03,624 --> 00:17:05,992
首先我说的不是什么呢？

291
00:17:06,059 --> 00:17:10,931
我不是在说

292
00:17:10,998 --> 00:17:14,835
它限制了你的app可以访问的资源

293
00:17:15,102 --> 00:17:18,172
我所介绍的是一个专用的环境

294
00:17:18,238 --> 00:17:22,509
它是服务器端App Store

295
00:17:22,776 --> 00:17:26,880
你可以在那里对你的app

296
00:17:28,715 --> 00:17:32,152
StoreKit知道什么时候

297
00:17:32,219 --> 00:17:34,121
它根据你app

298
00:17:34,788 --> 00:17:37,257
例如 如果你是在Xcode中

299
00:17:37,324 --> 00:17:39,960
它就是由开发者证书签署的

300
00:17:40,527 --> 00:17:42,062
StoreKit知道何时

301
00:17:42,462 --> 00:17:44,765
将你的所有请求发送到沙盒环境

302
00:17:46,533 --> 00:17:49,236
如果用户是从生产

303
00:17:49,536 --> 00:17:51,371
这时候就是生产签名的

304
00:17:51,872 --> 00:17:55,475
StoreKit知道

305
00:17:56,877 --> 00:17:59,279
那沙盒环境有什么不同呢？

306
00:17:59,346 --> 00:18:02,082
首先我们不会扣款

307
00:17:59,346 --> 00:18:02,082
首先我们不会扣款

308
00:18:02,482 --> 00:18:05,385
这是个让你用来测试

309
00:18:05,719 --> 00:18:07,588
你会一次又一次地进行测试

310
00:18:07,855 --> 00:18:09,423
是没有理由扣款的

311
00:18:10,157 --> 00:18:14,761
其次我们在App Store

312
00:18:14,828 --> 00:18:19,366
可以让你的开发者在沙盒环境中使用

313
00:18:19,433 --> 00:18:23,637
这些账号跟你的普通iTunes

314
00:18:25,239 --> 00:18:28,709
正如我之前提过的

315
00:18:28,775 --> 00:18:31,078
这意味着在你做服务器

316
00:18:31,144 --> 00:18:34,414
会有个完全不同的URL

317
00:18:34,715 --> 00:18:38,719
这很重要 如果你要将开发测试收据

318
00:18:38,852 --> 00:18:42,823
从你的设备中发送到QA服务器

319
00:18:42,890 --> 00:18:46,360
在验证收据端点进行验证的话

320
00:18:47,261 --> 00:18:49,329
我接下来会再介绍一些相关内容

321
00:18:50,397 --> 00:18:53,133
我们还在StoreKit中

322
00:18:53,567 --> 00:18:57,304
例如

323
00:18:57,738 --> 00:19:01,241
可以传入参数来获得一个过期的收据

324
00:18:57,738 --> 00:19:01,241
可以传入参数来获得一个过期的收据

325
00:19:01,542 --> 00:19:03,243
这样你就可以测试

326
00:19:03,410 --> 00:19:06,780
“如果我得到了一张过期的数据

327
00:19:08,315 --> 00:19:11,952
我们还可以让你模拟

328
00:19:12,219 --> 00:19:15,856
如果孩子要家长

329
00:19:16,623 --> 00:19:19,026
我们在沙盒中有

330
00:19:20,961 --> 00:19:24,665
可能其中的一个很大不同就是当你在

331
00:19:24,731 --> 00:19:29,169
处理app内订阅的时候

332
00:19:29,736 --> 00:19:33,674
如果你在app中有个年度订阅的话

333
00:19:33,740 --> 00:19:37,511
我们让你等一年才能测试

334
00:19:38,979 --> 00:19:45,152
一个基本原则就是

335
00:19:46,153 --> 00:19:48,589
你还可以看到 如果你有个月度订阅

336
00:19:48,789 --> 00:19:50,123
那在沙盒中就是五分钟

337
00:19:51,925 --> 00:19:55,963
我们还将沙盒中的

338
00:19:56,563 --> 00:20:00,234
当你购买初始订阅的时候

339
00:19:56,563 --> 00:20:00,234
当你购买初始订阅的时候

340
00:20:00,467 --> 00:20:04,438
你会有五次自动续费依次出现

341
00:20:04,771 --> 00:20:06,039
最后会自己停掉

342
00:20:06,106 --> 00:20:09,877
这是为了模拟用户进入管理账号

343
00:20:09,943 --> 00:20:12,379
禁用订阅的时候会发生什么

344
00:20:12,846 --> 00:20:14,915
或者我们称之为自愿转换

345
00:20:15,115 --> 00:20:17,317
他们决定不想再用你的服务了

346
00:20:20,254 --> 00:20:22,990
你该如何对这些内容进行设置

347
00:20:23,056 --> 00:20:26,527
首先你要进入App Store

348
00:20:28,095 --> 00:20:30,430
你要创建想卖的产品

349
00:20:30,631 --> 00:20:32,499
在你配置app之前

350
00:20:32,566 --> 00:20:34,134
要先把服务器端配置好

351
00:20:35,402 --> 00:20:38,272
一如既往 在Xcode中

352
00:20:39,106 --> 00:20:41,642
你要启动你的app

353
00:20:42,209 --> 00:20:45,546
然后在弹出窗口登录你的沙盒账号

354
00:20:47,881 --> 00:20:50,551
如果你注意到的话

355
00:20:52,085 --> 00:20:57,624
如果我已经登录了产品app或

356
00:20:58,125 --> 00:21:00,994
难道你不用在使用

357
00:20:58,125 --> 00:21:00,994
难道你不用在使用

358
00:21:01,828 --> 00:21:04,498
从iOS 12开始

359
00:21:11,538 --> 00:21:14,908
我们将你的产品账号

360
00:21:14,975 --> 00:21:17,411
与你的沙盒账号分开了

361
00:21:17,711 --> 00:21:21,949
就像我们如何用数据

362
00:21:22,249 --> 00:21:23,917
抱歉 就像我们如何用证书

363
00:21:23,984 --> 00:21:25,619
来决定要使用哪个环境

364
00:21:25,919 --> 00:21:30,023
我们知道在开发模式的时候

365
00:21:30,858 --> 00:21:32,192
我很期待iOS 12中的该功能

366
00:21:32,259 --> 00:21:33,493
我觉得这会让在你的个人设备上

367
00:21:33,560 --> 00:21:36,363
长期测试这些app

368
00:21:36,430 --> 00:21:37,598
发生一个很大的变化

369
00:21:40,000 --> 00:21:41,435
我想请Ross回到台上来

370
00:21:41,502 --> 00:21:43,504
他会介绍一些最佳实践

371
00:21:43,570 --> 00:21:46,773
一些你在处理交易的时候

372
00:21:47,140 --> 00:21:47,975
Ross

373
00:21:55,516 --> 00:21:58,218
我想介绍一些常见的问题

374
00:21:58,285 --> 00:21:59,620
讨论下处理它们的最好方式

375
00:22:01,021 --> 00:22:03,991
首先你应该将交易观察器

376
00:22:04,057 --> 00:22:07,427
尽早在你app的生命周期中

377
00:22:09,730 --> 00:22:13,000
这是我们遇到的一个常见问题

378
00:22:13,066 --> 00:22:15,269
直到用户到了

379
00:22:15,569 --> 00:22:17,271
或者甚至开始交易的时候才加上

380
00:22:18,172 --> 00:22:19,940
其实我建议就把它加到

381
00:22:20,340 --> 00:22:22,709
application:

382
00:22:22,776 --> 00:22:23,810
这个AppDelegate方法上

383
00:22:25,879 --> 00:22:26,947
为何我们要这样建议？

384
00:22:27,781 --> 00:22:30,150
交易观察器是

385
00:22:30,217 --> 00:22:33,153
用户在你app进行交易时

386
00:22:34,021 --> 00:22:35,656
所有这些变化通常都是很重要的

387
00:22:36,423 --> 00:22:38,692
迅速地处理好所有交易能保证

388
00:22:38,759 --> 00:22:40,761
你获得很好的用户体验和业务

389
00:22:42,796 --> 00:22:45,132
有些时候交易可能会被干扰

390
00:22:46,433 --> 00:22:48,902
例如 如果用户在交易中

391
00:22:49,236 --> 00:22:51,038
可能他们在上课时玩游戏被抓到了

392
00:22:52,472 --> 00:22:55,576
你的app可能会随后

393
00:22:56,343 --> 00:22:57,744
然后当它再被打开的时候

394
00:22:57,945 --> 00:22:59,880
StoreKit在你加上

395
00:22:59,947 --> 00:23:01,582
就不知道要继续交易

396
00:22:59,947 --> 00:23:01,582
就不知道要继续交易

397
00:23:02,416 --> 00:23:05,185
如果用户决定再买点别的东西

398
00:23:05,252 --> 00:23:08,589
这可能会让他们收到两个弹出窗口时

399
00:23:08,655 --> 00:23:11,391
或对你最后加上交易观察器时

400
00:23:12,092 --> 00:23:12,926
这样的用户交互体验不是很好

401
00:23:15,095 --> 00:23:17,097
另一个常见的问题就是

402
00:23:17,164 --> 00:23:19,466
因为他们要编辑他们的支付信息

403
00:23:19,900 --> 00:23:20,801
这些问题一直会发生

404
00:23:21,134 --> 00:23:22,736
你会离开app 并且保证

405
00:23:22,803 --> 00:23:24,771
在他们返回app时

406
00:23:27,174 --> 00:23:29,776
最后就是有时候你的app会崩溃

407
00:23:30,244 --> 00:23:32,913
在这种情况下

408
00:23:35,983 --> 00:23:37,451
还有其他一些原因

409
00:23:37,784 --> 00:23:39,753
你要尽早添加这个内容

410
00:23:41,021 --> 00:23:42,322
还有几种类型的交易

411
00:23:42,389 --> 00:23:43,924
可能来自你的app之外

412
00:23:45,225 --> 00:23:47,961
例如来自交易观察器的续订

413
00:23:49,096 --> 00:23:51,298
当一个自动续订的订阅

414
00:23:51,732 --> 00:23:53,567
你会在付款队列中收到一笔交易

415
00:23:54,735 --> 00:23:57,504
你要尽可能早地收到此信息

416
00:23:57,571 --> 00:24:00,707
这样你就不会在用户已付款的情况下

417
00:23:57,571 --> 00:24:00,707
这样你就不会在用户已付款的情况下

418
00:24:03,110 --> 00:24:06,713
在推广的app内程序购买中

419
00:24:07,147 --> 00:24:08,882
交易会转移到你的app

420
00:24:09,483 --> 00:24:11,518
所以你要确保衔接顺利

421
00:24:13,587 --> 00:24:15,822
最后如果你为app内购买

422
00:24:16,089 --> 00:24:17,524
这些会从App Store兑换

423
00:24:17,591 --> 00:24:18,592
然后也会被发送到你的app

424
00:24:23,263 --> 00:24:26,600
我们遇到的另一个问题是何时该调用

425
00:24:27,968 --> 00:24:30,404
一般来说你应该

426
00:24:30,838 --> 00:24:32,906
调用finishTransaction

427
00:24:33,273 --> 00:24:35,909
还有已下载并向用户交付了所有内容

428
00:24:36,844 --> 00:24:39,379
或是在交易未成功完成的时候

429
00:24:41,048 --> 00:24:44,651
为了更具体地解释

430
00:24:45,118 --> 00:24:46,687
并讨论下如何处理它们

431
00:24:48,188 --> 00:24:50,958
你目前无需在购买状态下

432
00:24:51,024 --> 00:24:54,294
只需继续观察付款队列

433
00:24:56,463 --> 00:24:59,132
在已购买状态下

434
00:25:00,000 --> 00:25:02,102
你应该下载并向用户提供所有内容

435
00:25:02,402 --> 00:25:03,604
然后调用

436
00:25:06,139 --> 00:25:09,343
在失败状态下

437
00:25:10,043 --> 00:25:12,145
你应该检查错误并妥善处理

438
00:25:12,446 --> 00:25:14,882
你可能要更新用户界面

439
00:25:15,549 --> 00:25:17,084
然后你应该调用

440
00:25:18,118 --> 00:25:22,055
此处还需要注意的是

441
00:25:22,122 --> 00:25:23,891
如果用户取消这些交易

442
00:25:24,458 --> 00:25:26,960
所以你要检查错误 并确保

443
00:25:27,027 --> 00:25:29,997
这不是由于用户取消交易产生的错误

444
00:25:30,063 --> 00:25:32,366
用户刚选择取消了

445
00:25:35,836 --> 00:25:38,305
恢复状态

446
00:25:39,072 --> 00:25:41,241
它表示交易已经成功完成

447
00:25:41,308 --> 00:25:43,977
所以你应该再次下载

448
00:25:44,545 --> 00:25:45,812
然后你应该调用

449
00:25:48,649 --> 00:25:49,783
最后 延迟状态

450
00:25:50,717 --> 00:25:54,421
它类似于购买状态

451
00:25:54,488 --> 00:25:56,323
正在等待一些外部行动后继续

452
00:25:57,257 --> 00:25:59,493
例如

453
00:26:00,494 --> 00:26:02,696
请求购买功能可以让家长

454
00:26:02,763 --> 00:26:06,166
手动批准或拒绝子女进行的交易

455
00:26:07,568 --> 00:26:09,403
任何用户都可以设置请求购买

456
00:26:10,137 --> 00:26:11,972
但它可能会发生在

457
00:26:12,039 --> 00:26:13,874
所以你需要恰当地处理这种情况

458
00:26:17,711 --> 00:26:18,712
说到请求购买的话

459
00:26:20,113 --> 00:26:22,349
如果你的交易由于请求购买而延期

460
00:26:23,283 --> 00:26:25,385
用户将从App Store

461
00:26:25,452 --> 00:26:27,788
他们的父母已被通知批准交易

462
00:26:29,523 --> 00:26:33,961
如果交易被批准

463
00:26:34,228 --> 00:26:35,262
返回到交易观察器

464
00:26:35,996 --> 00:26:37,531
你应该让用户知道它已被批准

465
00:26:38,065 --> 00:26:40,501
当然还要发送内容并调用

466
00:26:42,970 --> 00:26:44,671
如果它被拒绝

467
00:26:44,738 --> 00:26:46,406
它将在失败状态

468
00:26:47,074 --> 00:26:48,976
这里你应该让用户知道它被拒绝了

469
00:26:49,510 --> 00:26:51,178
然后调用

470
00:26:52,179 --> 00:26:57,684
但是如果在24小时内

471
00:26:57,751 --> 00:27:01,054
那么交易就会静默地失败

472
00:26:57,751 --> 00:27:01,054
那么交易就会静默地失败

473
00:27:02,189 --> 00:27:04,825
这意味着什么都

474
00:27:05,659 --> 00:27:09,630
此外 24小时内的

475
00:27:09,696 --> 00:27:12,099
都会合并为一个任务

476
00:27:13,467 --> 00:27:15,502
所以重要的一点是

477
00:27:15,569 --> 00:27:18,672
甚至不要期望它们会回来

478
00:27:19,273 --> 00:27:21,875
你该确保你不要锁定用户界面

479
00:27:21,942 --> 00:27:23,210
继续使用你的app

480
00:27:24,645 --> 00:27:28,048
另一个重要提示是 在app内购买

481
00:27:28,115 --> 00:27:31,418
已经通过Apple托管

482
00:27:31,485 --> 00:27:35,455
你该在调用finishTransaction前

483
00:27:36,890 --> 00:27:38,792
这是因为在你调用了

484
00:27:39,259 --> 00:27:43,430
所有SKDownloads

485
00:27:44,231 --> 00:27:45,199
如果你不小心这么做了

486
00:27:45,666 --> 00:27:49,069
你须调用restoreTransactions

487
00:27:49,303 --> 00:27:51,038
即使你的下载失败了

488
00:27:51,805 --> 00:27:55,108
也应该先暂停调用finishTransaction

489
00:27:55,175 --> 00:27:58,378
并且成功下载

490
00:28:01,014 --> 00:28:03,083
最后如果你使用了收据验证

491
00:28:04,484 --> 00:28:07,855
你需要确保在调用finishTransaction之前

492
00:28:08,755 --> 00:28:11,225
这对可消耗性app内购买尤为重要

493
00:28:11,291 --> 00:28:13,126
因为可消耗性app内购买

494
00:28:13,193 --> 00:28:15,929
只有在未完成时才会出现在收据中

495
00:28:16,697 --> 00:28:17,931
在你调用了

496
00:28:17,998 --> 00:28:21,001
它们就不会再出现在自己的位置上

497
00:28:21,768 --> 00:28:23,203
因此如果你使用了收据验证

498
00:28:23,270 --> 00:28:26,740
请确保它是真正的Apple签名的

499
00:28:27,508 --> 00:28:29,543
在调用finishTransaction之前

500
00:28:31,912 --> 00:28:32,813
我想把舞台交还给Dana

501
00:28:32,880 --> 00:28:34,481
来讨论管理收据的一些技巧

502
00:28:39,753 --> 00:28:40,654
再次谢谢你 Ross

503
00:28:43,790 --> 00:28:44,791
那么收据是什么呢？

504
00:28:46,026 --> 00:28:50,297
这就像它的名字所暗示的那样

505
00:28:50,364 --> 00:28:53,934
这很像你买零售品时

506
00:28:56,436 --> 00:28:58,338
它存储在设备上 它是一个文件

507
00:28:58,405 --> 00:29:00,641
它其实是从App Store

508
00:28:58,405 --> 00:29:00,641
它其实是从App Store

509
00:29:00,707 --> 00:29:02,809
文件来自服务器

510
00:29:03,043 --> 00:29:06,013
我们将其存储在设备上

511
00:29:07,748 --> 00:29:11,518
它由App Store签署

512
00:29:12,986 --> 00:29:16,590
最后 它适用于你的app和该设备

513
00:29:17,291 --> 00:29:19,459
收据是一个重要的媒介

514
00:29:19,526 --> 00:29:24,298
它可以确保在设备上运行的

515
00:29:26,500 --> 00:29:28,001
你应该如何验证收据呢？

516
00:29:28,068 --> 00:29:29,570
你可以做两件事

517
00:29:29,636 --> 00:29:32,372
首先你可以查看设备上的收据验证

518
00:29:32,673 --> 00:29:36,710
你可以在设备上使用加密技术

519
00:29:36,844 --> 00:29:40,214
来验证收据以及解锁内容

520
00:29:40,614 --> 00:29:44,117
或者你可以做服务器对服务器的验证

521
00:29:44,585 --> 00:29:48,155
你可以在这里获得收据

522
00:29:48,355 --> 00:29:49,690
服务器会为你管理它

523
00:29:51,625 --> 00:29:55,996
在这里它会调用

524
00:29:56,230 --> 00:30:01,101
将收据发送到App Store

525
00:29:56,230 --> 00:30:01,101
将收据发送到App Store

526
00:30:01,568 --> 00:30:04,805
如果你在后台有订阅服务的话

527
00:30:05,939 --> 00:30:08,942
但是 我的演讲会重点关注

528
00:30:09,009 --> 00:30:10,544
设备上的验证

529
00:30:11,111 --> 00:30:15,082
如果你在用订阅服务

530
00:30:15,148 --> 00:30:18,185
在本场演讲过后

531
00:30:18,252 --> 00:30:20,120
举行的“工程订阅”演讲

532
00:30:22,222 --> 00:30:25,792
但我想说一点

533
00:30:27,227 --> 00:30:29,830
正如我说过的那样

534
00:30:29,897 --> 00:30:32,966
并将其发送到你的服务器

535
00:30:34,268 --> 00:30:36,436
但是你绝不应该将收据直接

536
00:30:36,503 --> 00:30:39,873
从你的设备上发送到收据验证

537
00:30:40,841 --> 00:30:42,709
你不控制该连接的任何一端

538
00:30:42,776 --> 00:30:45,646
你无法控制用户的设备

539
00:30:45,879 --> 00:30:48,015
你也无法控制另一边

540
00:30:48,215 --> 00:30:49,249
你无法在

541
00:30:49,316 --> 00:30:51,718
app与App Store间

542
00:30:51,952 --> 00:30:54,821
你应该将它发送到

543
00:30:57,758 --> 00:30:59,493
那么收据的结构是什么样的呢？

544
00:31:00,827 --> 00:31:04,164
它有一些购买信息

545
00:31:04,631 --> 00:31:07,568
我们有个API可以让你

546
00:31:08,602 --> 00:31:10,137
我说过这是一个单一的文件

547
00:31:12,105 --> 00:31:14,541
我们使用开源标准

548
00:31:15,075 --> 00:31:19,379
PKCS加密容器

549
00:31:19,580 --> 00:31:21,415
来存储收据中的元数据

550
00:31:21,481 --> 00:31:26,253
这些都是文档完整并且

551
00:31:27,788 --> 00:31:31,758
而且有很多可以用来

552
00:31:32,326 --> 00:31:37,698
例如OpenSSL asn1c等

553
00:31:38,532 --> 00:31:41,168
不管你打算使用哪种API

554
00:31:41,235 --> 00:31:46,406
在你调用Bundle.appStoreReceiptURL时

555
00:31:46,473 --> 00:31:49,409
但它只是到达文件系统中

556
00:31:50,210 --> 00:31:52,179
你需要阅读该内容

557
00:31:52,379 --> 00:31:54,314
把那一小块数据写入内存

558
00:31:54,548 --> 00:31:57,985
如果你在做服务器到服务器验证的话

559
00:31:58,185 --> 00:32:00,621
或者你也可以直接

560
00:31:58,185 --> 00:32:00,621
或者你也可以直接

561
00:32:01,889 --> 00:32:04,758
如果你在使用OpenSSL

562
00:32:05,392 --> 00:32:06,927
那么你需要遵循一些提示

563
00:32:07,127 --> 00:32:11,365
首先要建立一个静态库

564
00:32:11,431 --> 00:32:14,101
如果你用静态库的话会更安全些

565
00:32:15,602 --> 00:32:19,106
最后如果你要包含

566
00:32:19,173 --> 00:32:22,543
你需要验证从网上获取的收据

567
00:32:22,743 --> 00:32:24,411
你能找到很多的文档

568
00:32:24,611 --> 00:32:26,947
但要留意

569
00:32:30,484 --> 00:32:33,654
正如我之前提到的那样

570
00:32:34,288 --> 00:32:37,591
但请记住

571
00:32:37,791 --> 00:32:40,594
这是你的生意

572
00:32:40,661 --> 00:32:43,430
伴随着你所实施的解决方案的风险

573
00:32:44,331 --> 00:32:47,701
如果你用了一些流行的

574
00:32:47,768 --> 00:32:49,403
并且其中有个漏洞

575
00:32:50,137 --> 00:32:52,539
那么你的app也会变得脆弱

576
00:32:54,041 --> 00:32:55,242
这是你的收入流

577
00:32:55,309 --> 00:32:58,245
请确保你了解你所选择的产品

578
00:33:02,115 --> 00:33:04,651
我提过了

579
00:33:04,718 --> 00:33:06,320
在收据中有签名和证书

580
00:33:07,087 --> 00:33:11,658
我们的好办法就是 不要检查

581
00:33:11,725 --> 00:33:15,062
收据中的这些证书的过期时间

582
00:33:15,729 --> 00:33:19,566
首先 用户其实是可以

583
00:33:20,667 --> 00:33:27,241
更重要的是

584
00:33:27,307 --> 00:33:29,943
就因为证书过期了

585
00:33:30,711 --> 00:33:32,312
你应该将其与

586
00:33:32,379 --> 00:33:34,982
收据上的交易日期进行比较

587
00:33:35,048 --> 00:33:39,720
只要所有的交易

588
00:33:39,987 --> 00:33:41,021
那这就是有效的收据

589
00:33:44,157 --> 00:33:47,427
让我们深入了解下收据内的内容

590
00:33:48,495 --> 00:33:52,399
购买信息只包含了一些类型和属性

591
00:33:53,133 --> 00:33:55,669
在这里你可以看到有一个包标识符

592
00:33:56,436 --> 00:33:58,572
以及与之相伴的其他一些值

593
00:34:01,375 --> 00:34:04,678
如果你要检查收据

594
00:34:05,045 --> 00:34:07,181
首先你需要检查该包标识符

595
00:34:07,781 --> 00:34:09,583
你还需要检查类型3

596
00:34:09,815 --> 00:34:12,252
它会给你提供app的版本

597
00:34:14,087 --> 00:34:15,722
但这里最好的做法是

598
00:34:15,989 --> 00:34:17,591
使用硬编码的值

599
00:34:17,658 --> 00:34:20,661
不要只从app的

600
00:34:20,726 --> 00:34:25,065
将Info.plist

601
00:34:25,132 --> 00:34:26,600
欺骗你的app运行非常容易

602
00:34:27,801 --> 00:34:31,338
现在你已经将这个包标识符

603
00:34:31,405 --> 00:34:33,873
和版本与收据进行了匹配

604
00:34:33,940 --> 00:34:36,009
你需要确保它对你的设备有效

605
00:34:36,210 --> 00:34:38,812
要这么做的话

606
00:34:39,279 --> 00:34:43,550
属性5是一些值的

607
00:34:44,484 --> 00:34:47,588
包括包标识符

608
00:34:47,654 --> 00:34:51,391
这些表示了正在运行app的硬件

609
00:34:51,859 --> 00:34:53,126
和一个不透明的值

610
00:34:53,493 --> 00:34:55,362
这是一个神秘的不稳定的熵

611
00:34:55,429 --> 00:34:58,932
它会随着时间而改变

612
00:34:59,399 --> 00:35:05,606
你要用这三个值

613
00:34:59,399 --> 00:35:05,606
你要用这三个值

614
00:35:06,073 --> 00:35:07,207
如果它与

615
00:35:07,774 --> 00:35:09,743
收据中所生成

616
00:35:09,810 --> 00:35:14,281
那么你就可以知道该收据是为

617
00:35:17,351 --> 00:35:19,887
那么如果你收到无效的收据

618
00:35:21,221 --> 00:35:23,457
或是不管出于何种原因

619
00:35:24,858 --> 00:35:29,429
StoreKit为你提供了从

620
00:35:30,163 --> 00:35:33,300
收据来自我们的商业后台

621
00:35:33,367 --> 00:35:35,435
所以你需要连网

622
00:35:35,502 --> 00:35:37,771
才能完成这个操作

623
00:35:38,605 --> 00:35:42,042
为了确保我们使用的是

624
00:35:42,109 --> 00:35:44,178
来自真实的用户的真实收据

625
00:35:44,244 --> 00:35:46,013
你需要用一个登录界面

626
00:35:48,382 --> 00:35:49,783
当你收到更新的收据时

627
00:35:49,850 --> 00:35:51,418
你需要小心地避免

628
00:35:51,485 --> 00:35:54,555
任何形式的连续循环验证和刷新

629
00:35:54,621 --> 00:35:57,191
如果你收到更新的收据

630
00:35:57,257 --> 00:35:59,560
如果它仍然无效 你就需要报告错误

631
00:36:00,494 --> 00:36:02,095
它在代码中看起来是什么样的？

632
00:36:02,829 --> 00:36:05,799
你只需要调用

633
00:36:05,999 --> 00:36:09,970
你只要在ReceiptRefresh上

634
00:36:10,037 --> 00:36:12,840
你调用开始后

635
00:36:12,906 --> 00:36:15,008
我们会进行回调

636
00:36:17,244 --> 00:36:20,714
在macOS上

637
00:36:20,781 --> 00:36:23,984
173代码会告诉操作系统

638
00:36:24,051 --> 00:36:28,722
并且让StoreKit

639
00:36:29,256 --> 00:36:32,392
在收到新的收据后

640
00:36:34,728 --> 00:36:38,565
正如我前面提到的那样

641
00:36:38,632 --> 00:36:42,269
进行免费试用

642
00:36:42,336 --> 00:36:44,738
在试用过程中对用户进行了解

643
00:36:44,805 --> 00:36:50,010
或是让他们购买完整解锁的

644
00:36:52,079 --> 00:36:56,350
要做到这一点

645
00:36:56,550 --> 00:36:59,820
它包括了你所有的订阅中的可消耗性

646
00:36:59,887 --> 00:37:01,822
与非消耗性app内购买项目

647
00:36:59,887 --> 00:37:01,822
与非消耗性app内购买项目

648
00:37:03,223 --> 00:37:04,658
在类型17中

649
00:37:04,925 --> 00:37:08,061
有一些数据的副字典

650
00:37:10,464 --> 00:37:13,767
类型1702就是

651
00:37:13,834 --> 00:37:17,671
跟你非消耗性app内购买项目

652
00:37:18,438 --> 00:37:22,543
你要在这里查看

653
00:37:22,609 --> 00:37:24,711
代表了试用的开始

654
00:37:24,778 --> 00:37:27,915
还是说非消耗性app购买

655
00:37:29,249 --> 00:37:31,285
你还会用到类型1704

656
00:37:31,351 --> 00:37:33,020
你可以检查购买日期

657
00:37:33,086 --> 00:37:35,389
也就是什么时候进行了

658
00:37:38,358 --> 00:37:40,594
那么你要用什么算法呢？

659
00:37:40,661 --> 00:37:43,897
首先你要遍历所有类型为17

660
00:37:43,964 --> 00:37:45,966
的app内购买项目

661
00:37:47,034 --> 00:37:51,104
如果你在收据中找到

662
00:37:51,171 --> 00:37:54,708
这说明你已完成了

663
00:37:54,775 --> 00:37:58,245
你知道用户已经购买了

664
00:37:58,312 --> 00:37:59,713
为他们提供了访问权限

665
00:38:01,215 --> 00:38:05,352
相应地 如果你找到了

666
00:38:05,419 --> 00:38:08,989
产品标识符表示了

667
00:38:09,056 --> 00:38:11,458
你需要查看与该免费试用

668
00:38:11,525 --> 00:38:12,659
相关的购买日期

669
00:38:13,627 --> 00:38:15,195
这里会有些棘手的地方

670
00:38:15,963 --> 00:38:18,031
你不能总是相信设备上的时钟

671
00:38:18,098 --> 00:38:19,566
用户是可以更改时钟的

672
00:38:19,633 --> 00:38:21,835
所以你想使用

673
00:38:21,902 --> 00:38:24,071
或某些时间服务器来确保

674
00:38:24,137 --> 00:38:26,673
仍在你的免费试用期的话

675
00:38:27,641 --> 00:38:30,010
还有些设备检查API

676
00:38:30,077 --> 00:38:32,479
我强烈建议你们看看

677
00:38:32,546 --> 00:38:35,349
是否已经完成了

678
00:38:35,415 --> 00:38:37,885
先前在该设备上的免费试用窗口

679
00:38:39,686 --> 00:38:43,590
最后如果两者均不存在

680
00:38:43,657 --> 00:38:47,528
免费试用追加销售

681
00:38:47,594 --> 00:38:50,130
但是你需要确保 你告知了

682
00:38:50,197 --> 00:38:52,065
他们免费试用的长度

683
00:38:52,132 --> 00:38:56,470
让他们知晓如果他们不购买解锁版

684
00:38:56,537 --> 00:38:58,739
以及完全解锁的最终价格

685
00:39:01,642 --> 00:39:03,944
若你已在App Store中

686
00:39:04,011 --> 00:39:05,579
你正在销售它

687
00:39:05,646 --> 00:39:09,016
或你在使用订阅模型

688
00:39:09,983 --> 00:39:12,085
你还可以利用收据来实现一些功能

689
00:39:12,152 --> 00:39:13,487
来让这一过程更为容易

690
00:39:14,588 --> 00:39:17,724
如果你已经提前付清并转到了订阅

691
00:39:17,791 --> 00:39:18,992
或是你付清了

692
00:39:19,059 --> 00:39:23,130
提前付清了 并且你想转而使用

693
00:39:23,730 --> 00:39:26,233
它会告诉你用户从App Store中

694
00:39:26,300 --> 00:39:29,036
初始版本

695
00:39:29,903 --> 00:39:32,539
即使他们删除了app

696
00:39:32,606 --> 00:39:37,244
类型19会告诉你

697
00:39:39,446 --> 00:39:42,416
如果用户确实提前付款了

698
00:39:42,749 --> 00:39:45,752
请确保为他们提供他们购买的功能

699
00:39:46,220 --> 00:39:48,322
因为你转到了订阅模型

700
00:39:48,522 --> 00:39:52,259
而他们在App Store

701
00:39:52,326 --> 00:39:56,163
你需要让他们可以访问

702
00:39:58,098 --> 00:40:02,569
所以我们要使用收据中的类型19

703
00:39:58,098 --> 00:40:02,569
所以我们要使用收据中的类型19

704
00:40:02,636 --> 00:40:03,837
来了解他们购买了app的什么内容

705
00:40:05,839 --> 00:40:08,976
我们今天介绍了很多内容

706
00:40:09,042 --> 00:40:13,380
这是个不错的方法

707
00:40:13,780 --> 00:40:16,016
如果你在推销你的

708
00:40:17,050 --> 00:40:19,987
你可以直接在App Store上

709
00:40:20,954 --> 00:40:25,425
我还介绍了

710
00:40:25,492 --> 00:40:26,693
非订阅免费试用

711
00:40:27,761 --> 00:40:31,698
我们介绍了SKStoreReviewController

712
00:40:31,765 --> 00:40:33,467
对它的反响有多好

713
00:40:33,534 --> 00:40:36,036
我们今年如何将其引入了

714
00:40:37,070 --> 00:40:41,408
我们还介绍了沙盒环境

715
00:40:41,475 --> 00:40:44,811
你的常规iTunes和App Store生产账号中

716
00:40:45,679 --> 00:40:48,348
Ross很好地介绍了在处理交易时

717
00:40:48,415 --> 00:40:52,719
你需要留意的事情

718
00:40:52,786 --> 00:40:56,256
并且知道什么时候要调用

719
00:40:56,590 --> 00:40:59,960
最后我介绍了关于如何

720
00:41:00,027 --> 00:41:02,462
在设备上验证app中

721
00:41:02,529 --> 00:41:06,233
以保证你的免费试用

722
00:41:08,135 --> 00:41:08,969
要了解更多的有关信息

723
00:41:09,036 --> 00:41:12,072
我强烈建议你们坚持

724
00:41:12,139 --> 00:41:14,408
如果你有订阅业务模型的话

725
00:41:14,575 --> 00:41:17,277
我们今天下午四点钟还有个实验室

726
00:41:17,344 --> 00:41:19,613
然后周四早上9点还有一个实验室

727
00:41:19,680 --> 00:41:22,382
我们很乐意回答你的问题

728
00:41:22,783 --> 00:41:23,984
非常感谢大家的光临
