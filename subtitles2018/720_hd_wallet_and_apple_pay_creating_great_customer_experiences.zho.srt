1
00:00:18,185 --> 0:00:22,055
（使用Wallet和Apple Pay

2
00:00:22,122 --> 0:00:22,990
（演讲720）

3
00:00:26,393 --> 0:00:27,694
欢迎大家 你们好

4
00:00:27,961 --> 0:00:31,231
我叫Ben Chester 是Wallet

5
00:00:31,532 --> 0:00:35,569
今天我在此与你们讨论如何使用

6
00:00:35,936 --> 0:00:37,137
来创造卓越的用户体验

7
00:00:37,871 --> 0:00:40,040
为此我们将涵盖四个主题

8
00:00:40,274 --> 0:00:42,209
还会看到我同事带来的精彩演示

9
00:00:44,344 --> 0:00:46,346
首先我们将介绍去年发生的

10
00:00:46,413 --> 0:00:47,881
一些关键事情

11
00:00:48,982 --> 0:00:52,619
其次是如何在Apple Pay中

12
00:00:52,686 --> 0:00:54,788
这将用到我们今天宣布的

13
00:00:55,722 --> 0:00:58,659
第三 如何充分利用凭证

14
00:00:58,959 --> 0:01:00,427
其在设计上有一些更新

15
00:00:58,959 --> 0:01:00,427
其在设计上有一些更新

16
00:01:00,861 --> 0:01:03,230
以及你可以采用的

17
00:01:04,298 --> 0:01:07,668
最后 我们将讨论数字到实体商务

18
00:01:08,035 --> 0:01:10,270
为此我将向你展示一个例子

19
00:01:10,337 --> 0:01:13,907
即我们在Apple Park每天都使用的

20
00:01:14,942 --> 0:01:17,211
首先让我介绍一下

21
00:01:18,512 --> 0:01:23,984
Apple Pay Cash可让你轻松获得付款

22
00:01:24,585 --> 0:01:28,021
你现在可以用它在实体店内

23
00:01:28,522 --> 0:01:29,857
并且它在美国可用

24
00:01:30,791 --> 0:01:35,462
对你来说最重要的是

25
00:01:35,529 --> 0:01:39,099
接受Discover借记卡以便你

26
00:01:40,634 --> 0:01:42,836
我们去年宣布的另一项升级选项功能

27
00:01:42,903 --> 0:01:45,906
是内联设置

28
00:01:46,940 --> 0:01:51,078
内联设置可让你的无卡用户

29
00:01:51,144 --> 0:01:53,647
并继续购买

30
00:01:54,581 --> 0:01:55,649
你需要做的

31
00:01:55,716 --> 0:01:59,186
只是在设备支持Apple Pay

32
00:02:00,320 --> 0:02:03,690
如果用户没有卡 你可以使用

33
00:02:03,757 --> 0:02:07,027
使用户更清楚

34
00:02:07,895 --> 0:02:09,496
当用户点击该按钮时

35
00:02:09,863 --> 0:02:12,399
设置流程将显示在你的app中

36
00:02:12,699 --> 0:02:16,203
它可以降低用户离开你的体验的风险

37
00:02:16,570 --> 0:02:18,338
而且这通常被称为抛弃

38
00:02:19,640 --> 0:02:22,242
而为了支持这一点

39
00:02:24,211 --> 0:02:27,714
一旦卡设置好后

40
00:02:28,515 --> 0:02:31,418
我们甚至会通过短信自动激活卡片

41
00:02:32,586 --> 0:02:35,789
即使有了所有这些步骤

42
00:02:36,523 --> 0:02:37,925
为了获得卓越的用户体验

43
00:02:38,058 --> 0:02:40,260
你该在app中采用此功能

44
00:02:41,795 --> 0:02:43,897
这不是我们去年宣布的唯一功能

45
00:02:44,331 --> 0:02:45,732
为了帮助你更快地结帐

46
00:02:46,166 --> 0:02:49,336
我们还引入了错误处理

47
00:02:50,938 --> 0:02:52,873
错误处理使你可以掌控

48
00:02:52,940 --> 0:02:55,175
Apple Pay Sheet中

49
00:02:55,742 --> 0:02:58,912
并且这允许你向用户提供

50
00:02:59,079 --> 0:03:01,715
你的自定义错误消息

51
00:02:59,079 --> 0:03:01,715
你的自定义错误消息

52
00:03:02,549 --> 0:03:04,852
这样他们就可以更轻松地

53
00:03:05,018 --> 0:03:06,220
并继续购买

54
00:03:07,187 --> 0:03:08,856
这对于更高的转化率来说非常有用

55
00:03:10,157 --> 0:03:11,658
这里是一些错误处理的提示

56
00:03:12,492 --> 0:03:13,927
我们想强调一件事

57
00:03:14,228 --> 0:03:17,431
那就是预期得到模糊数据仍然很重要

58
00:03:18,432 --> 0:03:20,434
用户在Apple Pay中

59
00:03:20,634 --> 0:03:23,170
并且这些数据

60
00:03:23,904 --> 0:03:26,406
我们不想强迫用户

61
00:03:26,473 --> 0:03:29,176
遵守每个人的个人业务逻辑

62
00:03:30,043 --> 0:03:32,246
因为这需要用户重新输入信息

63
00:03:33,280 --> 0:03:34,715
这只会增加摩擦

64
00:03:35,082 --> 0:03:37,150
并会降低整体转化率

65
00:03:38,018 --> 0:03:41,288
相反 你应该尽量接受

66
00:03:41,555 --> 0:03:43,490
例如 Zip和Zip+4

67
00:03:44,725 --> 0:03:47,194
并从其它字段推断出更多细节

68
00:03:47,261 --> 0:03:49,129
比如从Zip推出城市或州

69
00:03:50,330 --> 0:03:52,432
这并不是我们宣布的所有功能

70
00:03:52,499 --> 0:03:54,101
我们还支持了一些新的国家

71
00:03:55,235 --> 0:03:57,237
你可能还记得去年的这张幻灯片

72
00:03:58,138 --> 0:04:01,208
今年 我们支持了以下国家

73
00:03:58,138 --> 0:04:01,208
今年 我们支持了以下国家

74
00:04:02,543 --> 0:04:04,845
我们很快也会支持挪威和波兰

75
00:04:06,113 --> 0:04:07,848
这个范围很大

76
00:04:07,915 --> 0:04:10,551
但是我想单独谈的一个国家是中国

77
00:04:12,519 --> 0:04:15,389
今年 我们将Express

78
00:04:16,055 --> 0:04:18,524
它是我们与北京交通和上海交通

79
00:04:19,059 --> 0:04:22,429
它的效果非常棒

80
00:04:22,596 --> 0:04:23,730
并立即开始使用

81
00:04:25,199 --> 0:04:27,100
但Transit并不仅限于中国

82
00:04:28,268 --> 0:04:30,170
你可以使用Apple Pay

83
00:04:30,237 --> 0:04:32,606
只要是接受信用卡和借记卡的国家

84
00:04:32,873 --> 0:04:34,341
如莫斯科和伦敦

85
00:04:35,676 --> 0:04:37,544
以上就是去年的更新

86
00:04:38,078 --> 0:04:40,914
让我们谈谈如何创造

87
00:04:42,449 --> 0:04:45,118
Apple Pay

88
00:04:46,820 --> 0:04:48,222
它需要更易于使用

89
00:04:48,655 --> 0:04:51,758
即通过我们称之为上行的技术

90
00:04:52,159 --> 0:04:53,460
允许用户尽早结帐

91
00:04:54,828 --> 0:04:58,532
它还需要更快

92
00:04:58,799 --> 0:05:00,167
将Apple Pay

93
00:04:58,799 --> 0:05:00,167
将Apple Pay

94
00:05:01,268 --> 0:05:05,072
并且它应该更简洁

95
00:05:05,572 --> 0:05:06,840
尽可能简化Apple Pay流程

96
00:05:07,774 --> 0:05:10,844
我会详细介绍其中的每一个

97
00:05:12,513 --> 0:05:14,681
这里有一个精简化的精彩例子

98
00:05:14,915 --> 0:05:18,051
Apple Pay按钮直接

99
00:05:18,552 --> 0:05:19,953
这让它变得如此简单

100
00:05:20,220 --> 0:05:23,590
因为Apple Pay尽可能

101
00:05:24,892 --> 0:05:28,962
然而如果你的经验更专注于多项结帐

102
00:05:29,763 --> 0:05:32,199
将Apple Pay按钮

103
00:05:32,699 --> 0:05:34,134
可能不适合你

104
00:05:34,801 --> 0:05:37,004
相反 你应该专注于快速结账

105
00:05:38,272 --> 0:05:40,207
在此示例中 客户可以选择

106
00:05:40,274 --> 0:05:42,276
直接从购物车中

107
00:05:43,110 --> 0:05:44,945
并且用户也应该能够从你的流程中的

108
00:05:45,012 --> 0:05:46,380
任何地方到达此结帐界面

109
00:05:47,347 --> 0:05:49,449
你可以将这两种体验结合起来

110
00:05:50,617 --> 0:05:52,953
以获得最佳效果

111
00:05:55,422 --> 0:05:57,024
每当你使用

112
00:05:57,391 --> 0:05:59,993
使用SDK中提供的该按钮至关重要

113
00:06:00,794 --> 0:06:01,728
让我告诉你原因

114
00:06:02,996 --> 0:06:05,699
它针对所有设备语言进行了本地化

115
00:06:06,300 --> 0:06:08,402
并且它有多种样式和颜色可供选择

116
00:06:09,670 --> 0:06:11,905
它可以扩展所有受支持的设备

117
00:06:12,539 --> 0:06:14,908
并且我们所做的任何更改

118
00:06:14,975 --> 0:06:16,443
在将来你都可以轻松获得

119
00:06:17,945 --> 0:06:20,547
它也支持更老的版本

120
00:06:20,714 --> 0:06:24,518
iOS和macOS 10.12.1上的

121
00:06:25,853 --> 0:06:29,122
但我们听说该按钮

122
00:06:29,690 --> 0:06:32,626
因此今天我们在iOS 12中

123
00:06:33,026 --> 0:06:34,127
我想向你展示它们

124
00:06:35,996 --> 0:06:38,198
第一个是Book with Apple Pay

125
00:06:38,765 --> 0:06:41,401
你可以在如预订酒店

126
00:06:41,835 --> 0:06:43,504
或使用拼车服务时使用它

127
00:06:44,571 --> 0:06:47,007
只需传递新的book类型

128
00:06:49,443 --> 0:06:52,246
其次是Subscribe with Apple Pay

129
00:06:53,113 --> 0:06:55,048
你可以将其用于基于订阅的购买

130
00:06:55,782 --> 0:06:56,917
这时传递subscribe类型

131
00:06:59,186 --> 0:07:01,255
第三个是

132
00:06:59,186 --> 0:07:01,255
第三个是

133
00:07:02,155 --> 0:07:04,424
如果你在同一页面上

134
00:07:04,491 --> 0:07:06,560
最好使用此选项

135
00:07:07,427 --> 0:07:09,563
这确实让用户弄清楚了

136
00:07:09,630 --> 0:07:12,733
究竟是哪种结帐方式

137
00:07:14,468 --> 0:07:16,270
这还不是按钮的所有改变

138
00:07:17,204 --> 0:07:20,073
你知道我们喜欢圆角和连续曲线

139
00:07:20,474 --> 0:07:23,143
但我们知道并非每个人

140
00:07:23,644 --> 0:07:27,114
所以今年 我们允许你控制

141
00:07:29,016 --> 0:07:31,118
你可以根据需要配置它

142
00:07:31,351 --> 0:07:33,987
来匹配你的app或网站的现有样式

143
00:07:35,789 --> 0:07:38,992
如果你想要方角

144
00:07:40,594 --> 0:07:43,697
如果你没有设置任何值

145
00:07:44,765 --> 0:07:48,168
类似地 在旧版本上

146
00:07:48,235 --> 0:07:51,538
使用当前的圆角半径

147
00:07:54,541 --> 0:07:56,844
新类型和角半径

148
00:07:57,244 --> 0:07:58,912
它们将包含在未来版本的

149
00:08:00,113 --> 0:08:04,117
最重要的是

150
00:08:04,718 --> 0:08:05,919
你可以把这想象成级联

151
00:08:07,254 --> 0:08:09,957
使用新类型将帮助你的客户

152
00:08:10,023 --> 0:08:11,358
比以往更轻松简洁地支付

153
00:08:12,426 --> 0:08:14,795
Apple Pay按钮

154
00:08:15,295 --> 0:08:16,897
是简化结帐的一种方式

155
00:08:17,931 --> 0:08:20,100
但如果你将其与访客结账结合起来

156
00:08:20,167 --> 0:08:23,403
其对用户体验的提升就可以成倍增加

157
00:08:25,172 --> 0:08:30,143
你应该将访客结帐视为

158
00:08:30,978 --> 0:08:33,914
而失败的首次购买会增加摩擦

159
00:08:33,981 --> 0:08:36,183
这会导致抛弃

160
00:08:38,217 --> 0:08:40,153
用户应该自愿在你这里创建一个帐户

161
00:08:41,154 --> 0:08:42,389
而不是被强迫这样做

162
00:08:43,490 --> 0:08:45,626
为此Apple Pay

163
00:08:46,793 --> 0:08:49,897
你可以在购买后使用

164
00:08:50,030 --> 0:08:51,865
来轻松创建帐户

165
00:08:52,699 --> 0:08:53,934
我想向你展示一个例子

166
00:08:55,669 --> 0:08:59,206
购买完成并显示确认信息后

167
00:08:59,439 --> 0:09:00,941
帐户创建页面将被展示给用户

168
00:08:59,439 --> 0:09:00,941
帐户创建页面将被展示给用户

169
00:09:01,708 --> 0:09:04,011
Apple Pay交易中的

170
00:09:04,444 --> 0:09:06,046
用户所要做的只是

171
00:09:06,113 --> 0:09:08,682
输入密码以确认帐户的创建

172
00:09:10,017 --> 0:09:12,953
你可通过使用“密码自动填充”

173
00:09:13,153 --> 0:09:15,489
添加的增强功能

174
00:09:18,225 --> 0:09:19,693
以上就是上行的内容

175
00:09:20,494 --> 0:09:22,863
现在让我们讨论

176
00:09:26,099 --> 0:09:27,334
关于默认化 最重要的是

177
00:09:27,401 --> 0:09:30,704
你的用户将寻找

178
00:09:31,872 --> 0:09:33,674
所以你该通过将Apple Pay

179
00:09:34,074 --> 0:09:36,877
设为默认选项来加快购买速度

180
00:09:37,845 --> 0:09:39,947
Apple Pay

181
00:09:40,180 --> 0:09:43,016
因为它拥有用户最新的客户信息

182
00:09:44,551 --> 0:09:47,955
即使用户在Apple Pay中

183
00:09:48,088 --> 0:09:49,289
它仍是一个很好的选择

184
00:09:50,557 --> 0:09:52,326
让我们看一个默认化的实际例子

185
00:09:54,361 --> 0:09:57,130
我们可以在顶部看到

186
00:09:57,998 --> 0:10:00,467
而且Buy with

187
00:09:57,998 --> 0:10:00,467
而且Buy with

188
00:10:00,534 --> 0:10:02,069
并且用户可以轻松触摸到它

189
00:10:03,437 --> 0:10:05,839
如果你实践这些指南

190
00:10:05,906 --> 0:10:07,641
让你的用户

191
00:10:09,276 --> 0:10:12,012
这是更简单更快捷的方式

192
00:10:12,312 --> 0:10:15,282
现在我们来看看如何通过精简化

193
00:10:19,052 --> 0:10:21,688
你需要了解关于精简化的

194
00:10:22,389 --> 0:10:24,691
是你应该更倾向于使用

195
00:10:25,993 --> 0:10:27,895
用户已设置此数据

196
00:10:28,595 --> 0:10:31,398
你可以通过使用它们

197
00:10:33,100 --> 0:10:34,701
当你请求用户的数据时

198
00:10:34,768 --> 0:10:37,104
仅请求相关字段非常重要

199
00:10:37,671 --> 0:10:41,608
你添加的任何其他字段

200
00:10:43,143 --> 0:10:45,712
如果需要Apple Pay

201
00:10:46,180 --> 0:10:47,981
你应该在结账前收集它们

202
00:10:48,448 --> 0:10:51,118
例如特定产品的数量

203
00:10:51,318 --> 0:10:52,352
或优惠券代码

204
00:10:53,921 --> 0:10:57,191
今年 我们通过两项改变

205
00:10:58,325 --> 0:10:59,459
进一步精简化了

206
00:11:00,894 --> 0:11:03,430
我想谈的第一个是零总额支持

207
00:11:04,431 --> 0:11:05,866
我想告诉你为什么这很重要

208
00:11:08,135 --> 0:11:10,771
我们看到Apple Pay Sheet中

209
00:11:10,838 --> 0:11:12,272
且总额大于零

210
00:11:13,173 --> 0:11:15,843
但如果那个折扣一直降到零

211
00:11:16,643 --> 0:11:18,846
我们以前将无法提供此单据

212
00:11:19,313 --> 0:11:20,881
但我们现在可以了

213
00:11:21,548 --> 0:11:23,550
你可以看到折扣已将总额归零

214
00:11:23,617 --> 0:11:27,855
Apple Pay Sheet

215
00:11:27,988 --> 0:11:30,023
以及购买所需的其它信息

216
00:11:31,892 --> 0:11:34,494
而且零总额也适用于订阅

217
00:11:36,230 --> 0:11:37,998
如果推介月是免费的

218
00:11:38,565 --> 0:11:42,402
你可以向用户清楚地显示零总额

219
00:11:42,870 --> 0:11:45,939
明确说明订阅价格

220
00:11:46,473 --> 0:11:48,942
及他们可以获得的促销折扣非常重要

221
00:11:51,144 --> 0:11:53,614
当前iOS 12已经提供了

222
00:11:54,114 --> 0:11:55,749
它也会添加到将来的

223
00:11:56,950 --> 0:11:59,186
当旧版本不支持零总额时

224
00:11:59,253 --> 0:12:02,055
请确保回退到现有行为

225
00:11:59,253 --> 0:12:02,055
请确保回退到现有行为

226
00:12:03,690 --> 0:12:07,227
我们在iOS 12中

227
00:12:07,761 --> 0:12:09,563
是有了三个新支持的网络

228
00:12:10,531 --> 0:12:14,501
这意味着你可以更精细过滤

229
00:12:16,503 --> 0:12:20,374
三个新网络分别是Electron

230
00:12:22,176 --> 0:12:24,912
为了尽可能获得最佳体验

231
00:12:25,045 --> 0:12:27,014
尽可能多地接受网络非常重要

232
00:12:29,316 --> 0:12:32,119
这些可在iOS 12中使用

233
00:12:34,254 --> 0:12:37,558
我们已经介绍了

234
00:12:37,624 --> 0:12:39,126
更容易、更快且更精简的方法

235
00:12:40,060 --> 0:12:41,361
我希望你去试试它们

236
00:12:41,428 --> 0:12:43,063
使用我们新的增强功能

237
00:12:43,630 --> 0:12:44,865
让你的app体验比以往更好

238
00:12:45,999 --> 0:12:48,602
最后一个主题是

239
00:12:49,102 --> 0:12:51,305
以及W3C付款请求API

240
00:12:53,207 --> 0:12:55,509
Apple与W3C工作组

241
00:12:56,176 --> 0:12:59,146
以帮助其开发支付请求API

242
00:12:59,746 --> 0:13:00,948
现在它已宣布

243
00:12:59,746 --> 0:13:00,948
现在它已宣布

244
00:13:01,081 --> 0:13:03,016
你可能想知道你是否应该使用它

245
00:13:03,083 --> 0:13:05,285
还是使用我们现有的

246
00:13:06,353 --> 0:13:08,822
让我们比较一下使用其中一个

247
00:13:10,724 --> 0:13:13,427
付款请求API是一种

248
00:13:14,027 --> 0:13:15,495
然而重要的是要知道

249
00:13:15,562 --> 0:13:18,065
只有Safari

250
00:13:19,566 --> 0:13:21,268
如果你选择付款请求API

251
00:13:22,236 --> 0:13:24,304
你确实错过了以下某些功能

252
00:13:25,372 --> 0:13:27,407
使用自定义错误消息进行错误处理

253
00:13:27,474 --> 0:13:28,575
如我之前向你展示的

254
00:13:29,276 --> 0:13:33,113
还有“自动选择附属和联合品牌卡”

255
00:13:34,448 --> 0:13:36,717
因此你也会丧失

256
00:13:36,783 --> 0:13:38,218
调整用户所选卡价格的能力

257
00:13:39,553 --> 0:13:41,522
在重要的市场和地区

258
00:13:41,688 --> 0:13:44,091
拼音名称集合也不被支持

259
00:13:45,259 --> 0:13:48,795
而Apple Pay JavaScript API

260
00:13:48,862 --> 0:13:51,832
一直回到iOS 10

261
00:13:53,066 --> 0:13:55,402
你应该评估对你来说最重要的是什么

262
00:13:55,736 --> 0:13:58,105
而且如果你选择付款请求API

263
00:13:58,172 --> 0:14:02,376
Apple Pay JavaScript API

264
00:13:58,172 --> 0:14:02,376
Apple Pay JavaScript API

265
00:14:04,144 --> 0:14:07,614
为了让你更轻松开始使用

266
00:14:08,081 --> 0:14:10,717
今天我们推出了一个演示页面

267
00:14:12,553 --> 0:14:15,722
演示页面将指导你完成

268
00:14:16,590 --> 0:14:18,258
而这一切都从Apple Pay按钮开始

269
00:14:19,359 --> 0:14:22,296
你可以配置其大小 样式和位置

270
00:14:22,496 --> 0:14:23,897
并看到它们如何实时变化

271
00:14:24,631 --> 0:14:28,135
绘制按钮所需的代码在下面动态更新

272
00:14:29,269 --> 0:14:32,206
该页面甚至允许你测试

273
00:14:33,941 --> 0:14:37,644
只需在页面内的请求中配置JSON

274
00:14:37,711 --> 0:14:40,781
该处的Apple Pay按钮

275
00:14:41,849 --> 0:14:44,451
授权成功或失败的结果

276
00:14:44,518 --> 0:14:46,186
将被直接显示给你

277
00:14:47,054 --> 0:14:50,691
重要的是要知道 当你这样做时

278
00:14:51,758 --> 0:14:54,895
这是一个很好的入门资源

279
00:14:56,363 --> 0:14:58,332
该演示页面今天就可以

280
00:14:59,967 --> 0:15:02,569
以上就是我们今天

281
00:14:59,967 --> 0:15:02,569
以上就是我们今天

282
00:15:02,636 --> 0:15:05,939
现在我想继续谈谈

283
00:15:09,142 --> 0:15:10,811
凭证是我们开始的地方

284
00:15:10,878 --> 0:15:12,646
它们位于一个非常特殊的核心位置

285
00:15:13,514 --> 0:15:15,682
而我会告诉你它们的一些很棒的改进

286
00:15:16,183 --> 0:15:18,986
但首先我想回顾一下

287
00:15:20,754 --> 0:15:24,391
它们可以以非接触式

288
00:15:25,726 --> 0:15:28,195
并可以使用iCloud

289
00:15:29,696 --> 0:15:31,565
而且我们能够在锁屏

290
00:15:31,632 --> 0:15:33,767
和搜索快速访问中

291
00:15:35,335 --> 0:15:37,704
它们能够无缝地

292
00:15:37,771 --> 0:15:41,742
带到真实世界中

293
00:15:43,644 --> 0:15:45,646
这些都是你应该使用凭证的重要原因

294
00:15:46,113 --> 0:15:48,348
但你如何为用户充分利用凭证呢？

295
00:15:49,316 --> 0:15:51,251
为此我们将讨论四个主题

296
00:15:52,920 --> 0:15:55,756
我们将首先讨论

297
00:15:56,456 --> 0:15:58,525
我们也有一些你可以遵循的最佳实践

298
00:15:59,760 --> 0:16:02,029
其次 如何让凭证看起来更棒

299
00:15:59,760 --> 0:16:02,029
其次 如何让凭证看起来更棒

300
00:16:02,563 --> 0:16:03,797
我们有一些新的设计选项

301
00:16:03,864 --> 0:16:06,867
以及能够让凭证

302
00:16:08,602 --> 0:16:10,904
第三 富凭证内容

303
00:16:11,672 --> 0:16:14,608
让你的凭证更深入地

304
00:16:15,909 --> 0:16:19,313
最后 非接触式凭证

305
00:16:20,848 --> 0:16:22,749
我们先来讨论

306
00:16:23,550 --> 0:16:26,787
许多人已经看过或体验过

307
00:16:27,521 --> 0:16:29,223
但还有一种更好的方法

308
00:16:31,592 --> 0:16:36,230
对于几乎所有情况

309
00:16:37,364 --> 0:16:41,368
要使用它 只需调用

310
00:16:41,568 --> 0:16:43,437
并传入你要添加的凭证数组

311
00:16:44,338 --> 0:16:46,573
这将向用户显示一个简单的警报

312
00:16:46,773 --> 0:16:49,042
要求他们添加或审核这些凭证

313
00:16:49,710 --> 0:16:52,846
这与全屏模型UI相比

314
00:16:53,981 --> 0:16:57,017
并且用户仍然可以选择

315
00:16:57,417 --> 0:16:59,219
你应该在完成时对其进行处理

316
00:16:59,987 --> 0:17:02,022
并在收到请求时 显示

317
00:16:59,987 --> 0:17:02,022
并在收到请求时 显示

318
00:17:02,956 --> 0:17:04,491
在稍后的演示中

319
00:17:04,625 --> 0:17:06,292
你将看到这如何改善体验

320
00:17:07,794 --> 0:17:09,195
让我告诉你一些其它的

321
00:17:09,262 --> 0:17:10,497
关于添加凭证的最佳实践

322
00:17:11,632 --> 0:17:14,401
我们建议当用户首次进入app时

323
00:17:14,468 --> 0:17:16,403
添加在你的体验之外

324
00:17:17,037 --> 0:17:18,638
创建的凭证

325
00:17:18,704 --> 0:17:20,641
如果他们来自不受支持的平台的话

326
00:17:21,275 --> 0:17:23,609
他们之前没有机会添加这些凭证

327
00:17:23,676 --> 0:17:25,244
这是向他们提供该机会的好时候

328
00:17:26,380 --> 0:17:28,949
并且你应该将相关的凭证

329
00:17:30,050 --> 0:17:31,151
以减少摩擦

330
00:17:31,852 --> 0:17:33,787
你还可以让用户简单的根据

331
00:17:33,854 --> 0:17:35,956
历史订单视图

332
00:17:36,223 --> 0:17:39,092
来快速添加他们目前没有的凭证

333
00:17:40,360 --> 0:17:43,830
对于这些视图 如果你的用户

334
00:17:44,331 --> 0:17:45,666
你应直接将用户与其联系起来

335
00:17:46,166 --> 0:17:48,902
这样无论用户在哪里开始他们的旅程

336
00:17:48,969 --> 0:17:51,338
或在你的体验中

337
00:17:52,739 --> 0:17:54,141
如果你遵循所有这些提示

338
00:17:54,341 --> 0:17:57,244
并使用自动添加凭证

339
00:17:59,012 --> 0:18:00,981
但你怎么让一个凭证看起来很棒呢？

340
00:17:59,012 --> 0:18:00,981
但你怎么让一个凭证看起来很棒呢？

341
00:18:03,250 --> 0:18:04,818
对你来说最重要的是

342
00:18:04,885 --> 0:18:09,957
你显示给用户的凭证字段

343
00:18:10,023 --> 0:18:11,358
并且最重要的信息

344
00:18:12,793 --> 0:18:14,628
即用户必定需要的东西

345
00:18:15,629 --> 0:18:18,065
你可以使用鲜艳的色彩让它们更明显

346
00:18:19,867 --> 0:18:22,836
你也应该设计一个在所有设备上

347
00:18:24,438 --> 0:18:29,343
要做到这一点

348
00:18:29,776 --> 0:18:30,711
实体凭证

349
00:18:31,512 --> 0:18:34,348
我们有一些很棒的模板和布局选项

350
00:18:34,414 --> 0:18:39,620
来让这些字段更明显

351
00:18:40,120 --> 0:18:41,989
这些凭证 因为它们很易于使用

352
00:18:44,324 --> 0:18:47,327
其次 不要在图中所示的条形图像中

353
00:18:47,394 --> 0:18:48,395
对用户信息进行编码

354
00:18:49,096 --> 0:18:50,831
你应该将其留给字段值

355
00:18:51,899 --> 0:18:53,867
这对Apple Watch

356
00:18:54,801 --> 0:18:56,870
因为没有空间可以显示它们

357
00:18:57,104 --> 0:18:58,739
其字段位于前面和中间

358
00:18:59,907 --> 0:19:03,110
同样 缩略图也不会显示

359
00:18:59,907 --> 0:19:03,110
同样 缩略图也不会显示

360
00:19:03,777 --> 0:19:05,979
并且用户无法访问凭证详细信息

361
00:19:07,414 --> 0:19:10,217
我们知道这些信息有时候

362
00:19:10,384 --> 0:19:12,686
很难全部放在凭证的正面

363
00:19:13,120 --> 0:19:15,189
今天我们想通过添加对额外行的支持

364
00:19:15,789 --> 0:19:17,491
让事情变得更简单一点

365
00:19:18,559 --> 0:19:19,860
我们先来看下实际效果

366
00:19:21,595 --> 0:19:25,933
这里我们看到启用了新的第三行

367
00:19:27,467 --> 0:19:29,970
当你的现有信息已经有点长时

368
00:19:30,204 --> 0:19:32,606
这是分层其他内容的好方法

369
00:19:33,574 --> 0:19:35,509
而且这很容易添加到你的凭证中

370
00:19:35,642 --> 0:19:37,511
让我告诉你

371
00:19:39,746 --> 0:19:42,883
这里我们看到

372
00:19:43,517 --> 0:19:45,085
其值可为0或1

373
00:19:45,652 --> 0:19:47,487
你可以指明该字段

374
00:19:47,721 --> 0:19:49,790
应该在凭证正面拆分为两部分

375
00:19:53,961 --> 0:19:56,163
“row”只能在辅助字段中使用

376
00:19:56,630 --> 0:19:58,765
且仅适用于活动票证类型的凭证

377
00:19:59,466 --> 0:20:01,201
我们支持0和1的取值

378
00:19:59,466 --> 0:20:01,201
我们支持0和1的取值

379
00:20:01,702 --> 0:20:03,437
该功能将在未来种子版中引入

380
00:20:04,538 --> 0:20:06,773
在旧版本中 “row”将被忽略

381
00:20:07,641 --> 0:20:10,644
在这种情况下

382
00:20:11,278 --> 0:20:13,747
每行最多四个字段

383
00:20:14,915 --> 0:20:17,217
所以请务必在设计凭证时考虑这一点

384
00:20:17,818 --> 0:20:20,387
并在支持的设备和版本上进行测试

385
00:20:22,689 --> 0:20:25,792
现在我们已经

386
00:20:26,260 --> 0:20:28,328
我们如何让其内容更丰富呢？

387
00:20:30,030 --> 0:20:31,598
让我们充分利用凭证

388
00:20:31,665 --> 0:20:34,535
你可以包含系统可以利用的信息

389
00:20:34,601 --> 0:20:36,703
来为用户提供更好的体验

390
00:20:37,538 --> 0:20:39,873
你可能已经知道的

391
00:20:41,675 --> 0:20:45,245
你可以通过设置locations

392
00:20:45,312 --> 0:20:47,381
这些凭证JSON字段

393
00:20:48,649 --> 0:20:50,450
这允许系统

394
00:20:50,517 --> 0:20:53,153
在恰当的时刻向用户展示凭证

395
00:20:53,954 --> 0:20:55,822
我们处理多种相关的凭证

396
00:20:56,657 --> 0:20:59,793
如果你要为一次旅行发行多个凭证

397
00:21:00,761 --> 0:21:03,497
那你应该确保为每个凭证

398
00:21:03,730 --> 0:21:07,100
并且允许系统正确地逐个展示给用户

399
00:21:08,202 --> 0:21:09,336
这根本不是问题

400
00:21:09,503 --> 0:21:12,806
当他们的凭证很容易使用时

401
00:21:13,807 --> 0:21:16,376
今天 我们通过

402
00:21:16,710 --> 0:21:18,378
来让凭证变得更为丰富

403
00:21:21,615 --> 0:21:22,916
我们之前展示的凭证JSON字段

404
00:21:23,350 --> 0:21:26,153
是一种很好的显示机制

405
00:21:26,820 --> 0:21:28,388
作为开发人员 你可以完全控制

406
00:21:28,455 --> 0:21:31,124
字段名称以及该内容的格式

407
00:21:32,693 --> 0:21:35,863
然而这意味着

408
00:21:36,396 --> 0:21:38,665
因为每个人都使用

409
00:21:39,967 --> 0:21:41,602
语义标签改变了这一点

410
00:21:42,269 --> 0:21:45,973
它为你提供一种结构化的方式

411
00:21:46,440 --> 0:21:47,774
具有固定格式的数据

412
00:21:48,775 --> 0:21:51,278
让我向你展示将其添加到

413
00:21:51,578 --> 0:21:53,046
凭证中是多么容易

414
00:21:55,449 --> 0:21:57,618
这里我们看到的凭证JSON样本

415
00:21:57,684 --> 0:22:00,420
包含主要的 次要的和辅助的字段

416
00:21:57,684 --> 0:22:00,420
包含主要的 次要的和辅助的字段

417
00:22:01,555 --> 0:22:03,123
这部电影叫做

418
00:22:03,590 --> 0:22:04,825
它在Apple Park放映

419
00:22:05,125 --> 0:22:07,861
并且它在F5剧院中

420
00:22:08,462 --> 0:22:10,464
这就是我去那看电影时

421
00:22:10,531 --> 0:22:12,633
需要的所有信息

422
00:22:12,833 --> 0:22:14,334
它随时可供我使用

423
00:22:15,602 --> 0:22:17,204
让我们为顶部的“event”字段

424
00:22:17,271 --> 0:22:18,639
添加一些语义标签

425
00:22:20,841 --> 0:22:23,343
为此我们在字段中添加了

426
00:22:23,977 --> 0:22:28,015
你可以在该字典中使用

427
00:22:28,448 --> 0:22:30,350
从而提供机器可读的内容

428
00:22:31,385 --> 0:22:34,321
例如对于电影

429
00:22:34,388 --> 0:22:37,624
可能与国际上使用的

430
00:22:38,325 --> 0:22:40,127
这同样适用于你的场地名称

431
00:22:40,961 --> 0:22:44,131
它们应该是与所显示内容不同的

432
00:22:45,465 --> 0:22:48,135
你还可以添加其它相关数据

433
00:22:48,335 --> 0:22:49,837
它可能对显示不重要

434
00:22:50,237 --> 0:22:53,173
但与该字段相关联

435
00:22:54,474 --> 0:22:58,879
有时候 你需要与字段无关的

436
00:22:59,546 --> 0:23:03,016
为了捕获它

437
00:22:59,546 --> 0:23:03,016
为了捕获它

438
00:23:03,784 --> 0:23:07,020
我在这里添加了一个语义标签

439
00:23:07,154 --> 0:23:08,655
保持安静是一项要求

440
00:23:09,957 --> 0:23:12,459
我还以秒为单位指出了

441
00:23:12,826 --> 0:23:14,328
并且指定了事件类型

442
00:23:15,863 --> 0:23:19,333
你可能已经在Keynote演讲中

443
00:23:19,399 --> 0:23:22,503
Siri将能够在合适的时间

444
00:23:24,037 --> 0:23:27,674
它非常有效

445
00:23:30,844 --> 0:23:33,013
总而言之 语义标签是一种

446
00:23:33,080 --> 0:23:35,115
来为你的凭证添加机器可读的内容

447
00:23:36,049 --> 0:23:40,053
并且我们支持超过70种

448
00:23:40,821 --> 0:23:44,091
所有这些键很快就会

449
00:23:45,559 --> 0:23:46,860
还有一点需要注意

450
00:23:47,561 --> 0:23:50,731
相关性信息可以与语义标签结合使用

451
00:23:51,198 --> 0:23:53,901
所以你应该将两者都添加到凭证中

452
00:23:55,602 --> 0:23:57,070
将所有这些结合起来

453
00:23:57,271 --> 0:23:59,206
我想跟你谈谈非接触式凭证

454
00:24:01,642 --> 0:24:05,946
非接触式凭证是用户

455
00:24:06,513 --> 0:24:09,716
它比扫描条形码具有更好的体验

456
00:24:11,285 --> 0:24:14,054
我想向你展示一个我们最喜欢的

457
00:24:14,988 --> 0:24:17,291
国际知名的伦敦温布利球场

458
00:24:17,658 --> 0:24:19,526
让著名的足球运动员录制了一个广告

459
00:24:19,593 --> 0:24:21,295
就为了表明它的易用性

460
00:24:23,397 --> 0:24:24,398
（将你的门票添加到）

461
00:24:24,464 --> 0:24:25,666
（Apple Wallet）

462
00:24:25,732 --> 0:24:26,900
（并使用你的

463
00:24:26,967 --> 0:24:27,801
（进入温布利球场）

464
00:24:29,436 --> 0:24:32,005
（下滑查看通知）

465
00:24:33,941 --> 0:24:35,375
（双击app）

466
00:24:38,045 --> 0:24:39,379
（靠近感应器）

467
00:24:40,814 --> 0:24:42,683
（进入！）

468
00:24:42,749 --> 0:24:45,152
（非接触门票）

469
00:24:45,219 --> 0:24:49,089
（就在Apple Wallet）

470
00:24:51,925 --> 0:24:53,560
无法比这更简单了

471
00:24:54,194 --> 0:24:57,064
当你将其与锁屏访问

472
00:24:57,130 --> 0:25:00,367
结合起来时

473
00:24:57,130 --> 0:25:00,367
结合起来时

474
00:25:01,869 --> 0:25:05,439
非接触式凭证需要

475
00:25:06,507 --> 0:25:11,211
如果你有一个很好的用例

476
00:25:13,046 --> 0:25:16,783
要记住的另一件重要的事

477
00:25:17,784 --> 0:25:20,487
必须支持Apple的增值服务协议

478
00:25:21,588 --> 0:25:23,023
然而这比以往更容易

479
00:25:24,591 --> 0:25:26,894
你可以在这些公司中找到

480
00:25:26,960 --> 0:25:28,161
支持此协议的感应器

481
00:25:30,163 --> 0:25:33,767
最后 你可能在Keynote

482
00:25:34,568 --> 0:25:35,903
是学生证

483
00:25:37,471 --> 0:25:40,707
学生将能够直接在Wallet中

484
00:25:40,774 --> 0:25:44,344
任何实体学生卡被用到的地方

485
00:25:45,546 --> 0:25:46,914
我们与两家公司密切合作

486
00:25:46,980 --> 0:25:49,516
来将这种学生卡带到

487
00:25:49,583 --> 0:25:50,784
遍布美国的教育机构

488
00:25:51,585 --> 0:25:54,888
为了演示我们今天介绍的一些功能

489
00:25:55,155 --> 0:25:57,824
我想邀请我的同事Katie

490
00:26:07,401 --> 0:26:08,235
谢谢 Ben

491
00:26:08,902 --> 0:26:12,806
大家好 我的名字是Katie

492
00:26:13,207 --> 0:26:16,543
今天我将向你

493
00:26:16,610 --> 0:26:18,779
用户可以在其中购买活动门票

494
00:26:18,846 --> 0:26:21,415
该活动是本周末

495
00:26:22,182 --> 0:26:25,853
我的同事可以使用该app购买门票

496
00:26:26,186 --> 0:26:27,921
这让我能小赚一笔

497
00:26:28,655 --> 0:26:30,924
此app将展示两件事

498
00:26:31,758 --> 0:26:35,329
首先 如何使用Ben之前提到的

499
00:26:35,395 --> 0:26:36,864
最佳实践和新API

500
00:26:36,930 --> 0:26:40,667
来创建最无缝的Wallet

501
00:26:41,468 --> 0:26:45,172
其次 如何构造凭证JSON

502
00:26:45,239 --> 0:26:47,441
以增强用户体验

503
00:26:48,408 --> 0:26:50,377
我们来看看这个app

504
00:26:50,644 --> 0:26:54,047
这里我们显示了有关该事件的摘要

505
00:26:54,414 --> 0:26:57,918
日期、时间、地点和费用

506
00:26:59,086 --> 0:27:01,688
这是上行的一个例子

507
00:26:59,086 --> 0:27:01,688
这是上行的一个例子

508
00:27:01,755 --> 0:27:04,725
我们将Apple Pay按钮

509
00:27:05,692 --> 0:27:07,361
让我们试着购买这张票

510
00:27:09,596 --> 0:27:12,165
你可以看到

511
00:27:12,933 --> 0:27:16,970
这是精简化的一个很好的例子

512
00:27:17,371 --> 0:27:20,040
要求用户提供尽可能少的信息

513
00:27:20,107 --> 0:27:21,942
在这个例子中

514
00:27:23,010 --> 0:27:25,846
让我使用面容ID以完成此次购买

515
00:27:32,119 --> 0:27:36,123
这里我们可以看到刚购买的

516
00:27:36,190 --> 0:27:37,324
关于此事件的更多信息

517
00:27:37,925 --> 0:27:41,995
并且在底部有一个二维码

518
00:27:42,062 --> 0:27:45,098
Add to Apple Wallet按钮

519
00:27:45,399 --> 0:27:48,302
你可能在App Store中

520
00:27:48,368 --> 0:27:51,638
在做这样的事情

521
00:27:52,306 --> 0:27:54,775
如果你的凭证正面有二维码

522
00:27:54,842 --> 0:27:57,311
你不必将其嵌入你的app中

523
00:27:58,178 --> 0:28:00,914
让我们将此凭证添加到Wallet

524
00:27:58,178 --> 0:28:00,914
让我们将此凭证添加到Wallet

525
00:28:03,150 --> 0:28:07,721
你可以看到 用户可以在此页面

526
00:28:08,021 --> 0:28:12,593
它包含活动的相关信息和二维码

527
00:28:15,829 --> 0:28:19,766
这是这个凭证的JSON

528
00:28:19,833 --> 0:28:22,603
以增强客户的体验

529
00:28:25,239 --> 0:28:27,474
我想在这里做两个主要的改变

530
00:28:28,208 --> 0:28:30,377
首先 当人们参加我的活动时

531
00:28:30,444 --> 0:28:33,180
我想使用非接触式感应器检查他们

532
00:28:34,147 --> 0:28:38,385
其次 当用户接近我的活动地点时

533
00:28:38,552 --> 0:28:41,154
在这个例子中为

534
00:28:41,221 --> 0:28:44,057
我希望锁屏上的凭证有相应的变化

535
00:28:45,893 --> 0:28:48,629
我们先来看看这个条码字典

536
00:28:49,696 --> 0:28:53,000
由于我要使用非接触式感应器

537
00:28:53,500 --> 0:28:56,069
所以不再需要前面的二维码了

538
00:28:56,303 --> 0:28:57,871
所以让我们删除这个字典

539
00:28:59,006 --> 0:29:02,109
并让我们用NFC字典替换它

540
00:28:59,006 --> 0:29:02,109
并让我们用NFC字典替换它

541
00:29:04,444 --> 0:29:08,649
这里 这个字典包含

542
00:29:08,715 --> 0:29:11,818
以便在用户登记时识别他们

543
00:29:13,453 --> 0:29:16,156
接下来我们将位置数据

544
00:29:16,223 --> 0:29:18,292
从而使它可以在锁屏上变得相关

545
00:29:20,561 --> 0:29:26,300
我们在这里设置纬度、经度

546
00:29:26,600 --> 0:29:30,270
以及将在锁屏通知中

547
00:29:32,005 --> 0:29:35,876
现在让我们看看Swift app

548
00:29:35,943 --> 0:29:37,878
看我们可以在那里做哪些改变

549
00:29:41,181 --> 0:29:44,251
让我们先来看看这个

550
00:29:44,751 --> 0:29:48,555
当我们点击Add to Wallet按钮时

551
00:29:49,723 --> 0:29:54,528
这里 我们从一个名为

552
00:29:55,128 --> 0:29:57,965
让我们用新修改的凭证替换它

553
00:30:01,401 --> 0:30:04,705
然后我们使用该凭证实例化一个

554
00:30:04,771 --> 0:30:07,441
并呈现它

555
00:30:08,876 --> 0:30:11,945
但正如Ben之前提到的

556
00:30:12,012 --> 0:30:14,515
来自动将凭证添加到Wallet

557
00:30:15,282 --> 0:30:17,417
所以让我们删除这两行代码

558
00:30:17,484 --> 0:30:19,052
并将其替换为那个API

559
00:30:20,954 --> 0:30:25,125
那个API在PKPassLibrary中

560
00:30:27,294 --> 0:30:29,296
然后让我们调用该API

561
00:30:31,398 --> 0:30:33,133
该函数名为addPasses

562
00:30:33,767 --> 0:30:38,172
它需要一个凭证数组

563
00:30:38,605 --> 0:30:41,108
返回的状态有三种可能

564
00:30:41,842 --> 0:30:45,913
didAddPasses 这表示用户想要

565
00:30:46,713 --> 0:30:48,148
didCancelAddPasses

566
00:30:48,215 --> 0:30:50,384
这意味着用户不希望

567
00:30:51,185 --> 0:30:52,653
以及shouldReviewPasses

568
00:30:53,453 --> 0:30:56,957
在这种情况下

569
00:30:57,558 --> 0:30:59,726
再决定是否将其添加到Wallet

570
00:31:00,127 --> 0:31:04,565
如果是这种情况

571
00:31:04,631 --> 0:31:08,035
实例化一个PKAddPassesViewController

572
00:31:10,204 --> 0:31:12,973
现在我们来看看

573
00:31:14,241 --> 0:31:16,410
正如我们刚才所见

574
00:31:17,277 --> 0:31:19,379
同样的 如果你的凭证正面有二维码

575
00:31:19,446 --> 0:31:20,848
你没必要在app中使用它

576
00:31:20,981 --> 0:31:25,018
由于我们的凭证现在具有NFC功能

577
00:31:25,085 --> 0:31:27,688
所以让我们删除这些代码

578
00:31:31,525 --> 0:31:38,265
这个PKAddPassButton

579
00:31:39,099 --> 0:31:42,135
另一种增强用户体验的方法

580
00:31:42,202 --> 0:31:46,573
是在他们购买门票后

581
00:31:46,874 --> 0:31:51,111
我们立即询问他们

582
00:31:51,178 --> 0:31:53,247
而不是在屏幕上显示一个按钮

583
00:31:53,981 --> 0:31:57,284
当然你也可以将此

584
00:31:57,351 --> 0:32:00,854
放到app中的其他位置

585
00:31:57,351 --> 0:32:00,854
放到app中的其他位置

586
00:32:02,122 --> 0:32:04,124
所以让我们删除此按钮

587
00:32:06,727 --> 0:32:10,831
并用View in Wallet

588
00:32:13,834 --> 0:32:16,904
这样 用户可以点击此按钮

589
00:32:16,970 --> 0:32:20,674
并看到刚刚添加的凭证

590
00:32:22,876 --> 0:32:26,013
最后 当视图显示出来时

591
00:32:26,079 --> 0:32:28,382
让我们立即询问他们是否要添加凭证

592
00:32:31,852 --> 0:32:33,353
现在我们已经做了这些改变

593
00:32:33,420 --> 0:32:36,256
让我们将其部署到设备

594
00:32:45,299 --> 0:32:48,268
我们会看到相同的视图

595
00:32:48,902 --> 0:32:50,971
我会再次购买此凭证

596
00:32:59,980 --> 0:33:01,882
现在你可以看到

597
00:32:59,980 --> 0:33:01,882
现在你可以看到

598
00:33:01,949 --> 0:33:03,584
我们是否想将凭证

599
00:33:04,084 --> 0:33:08,422
而且你可以在背景中看到

600
00:33:08,889 --> 0:33:11,158
并且Add to Apple Wallet按钮

601
00:33:11,225 --> 0:33:13,060
被替换为

602
00:33:13,861 --> 0:33:15,329
将该凭证添加到Wallet

603
00:33:16,930 --> 0:33:18,131
然后我们来看一下

604
00:33:20,133 --> 0:33:22,069
你看 我们马上被带到了凭证页面

605
00:33:22,536 --> 0:33:24,872
你也可以看到前面不再有二维码了

606
00:33:25,172 --> 0:33:28,308
并且在底部显示了一个

607
00:33:28,375 --> 0:33:32,713
这意味着我们的凭证是非接触式的

608
00:33:32,779 --> 0:33:34,181
在感应器上扫描它

609
00:33:35,649 --> 0:33:38,919
现在让我们锁定设备

610
00:33:38,986 --> 0:33:43,223
且离Discovery Meadow很近

611
00:33:46,393 --> 0:33:50,497
这就是凭证的通知 它显示了

612
00:33:51,031 --> 0:33:52,332
让我们点击该通知

613
00:33:53,467 --> 0:33:55,235
凭证将立即显示

614
00:33:55,802 --> 0:33:58,472
我碰巧在台上有一个非接触式感应器

615
00:33:58,539 --> 0:34:00,807
所以让我们模拟我到达活动的情况

616
00:33:58,539 --> 0:34:00,807
所以让我们模拟我到达活动的情况

617
00:34:03,510 --> 0:34:04,511
就这么简单

618
00:34:07,548 --> 0:34:09,116
我们希望你能采纳

619
00:34:09,183 --> 0:34:12,886
这些简单的改变以增强当用户

620
00:34:12,953 --> 0:34:16,156
和Apple Pay

621
00:34:17,056 --> 0:34:18,792
现在我将话筒交回给Ben

622
00:34:23,496 --> 0:34:25,431
谢谢Katie带来的精彩演示

623
00:34:25,899 --> 0:34:28,467
这些变化对体验带来了多么大的改进

624
00:34:29,570 --> 0:34:31,905
我们今天讨论的最后一个话题

625
00:34:32,572 --> 0:34:34,675
是数字到实体商务

626
00:34:35,141 --> 0:34:37,643
使用Apple Pay是一种

627
00:34:38,110 --> 0:34:39,847
但这不是用户旅程结束的地方

628
00:34:40,714 --> 0:34:42,949
将这种无缝体验带到

629
00:34:43,016 --> 0:34:44,284
真实世界非常重要

630
00:34:45,052 --> 0:34:47,154
为此我想向你展示两个例子

631
00:34:47,588 --> 0:34:48,922
从Caffe Macs app

632
00:34:49,356 --> 0:34:52,192
每天都有数千名员工

633
00:34:54,194 --> 0:34:55,329
我在这里打开了app

634
00:34:55,529 --> 0:34:58,565
我立即获得了今天提供的最佳优惠

635
00:34:59,566 --> 0:35:01,134
这是吸引我的好方法

636
00:34:59,566 --> 0:35:01,134
这是吸引我的好方法

637
00:35:01,268 --> 0:35:04,404
它不需要我浏览app中的所有项目

638
00:35:05,539 --> 0:35:08,609
你可能在想为什么没立即

639
00:35:09,142 --> 0:35:11,345
那是因为我不在

640
00:35:12,613 --> 0:35:16,083
一旦我使用GPS和蓝牙信标靠近它

641
00:35:16,283 --> 0:35:18,785
该app将会检测到此变化

642
00:35:19,486 --> 0:35:21,889
这允许我在起始页面直接购买

643
00:35:21,955 --> 0:35:23,524
这是上行的一个很好的例子

644
00:35:24,424 --> 0:35:27,895
有时我订购了不止一件东西

645
00:35:28,896 --> 0:35:31,698
它们同时支持多项快速结账

646
00:35:32,032 --> 0:35:35,536
以及产品页面中的单项购买流程

647
00:35:36,603 --> 0:35:40,507
我还可以使用下面的Pay标签

648
00:35:41,975 --> 0:35:44,611
这是一个很好的模式

649
00:35:45,579 --> 0:35:48,949
当我准备付款时

650
00:35:50,017 --> 0:35:52,085
这里 你可以看到他们

651
00:35:52,152 --> 0:35:54,354
并请求尽可能少的信息

652
00:35:55,155 --> 0:35:57,724
我已经登录过

653
00:35:57,791 --> 0:35:59,459
所以不需要其他字段

654
00:36:00,027 --> 0:36:03,297
但如果我没有的话

655
00:36:03,463 --> 0:36:06,767
来请求最少的信息

656
00:36:08,202 --> 0:36:11,605
最后 一条确认信息让我知道

657
00:36:11,672 --> 0:36:13,273
并且我应该等待通知

658
00:36:13,907 --> 0:36:15,742
当我走到比萨饼店时

659
00:36:15,809 --> 0:36:18,612
通知到达

660
00:36:19,780 --> 0:36:22,349
当我到达那里时

661
00:36:22,516 --> 0:36:25,853
它上面带有写着我名字的票据

662
00:36:26,286 --> 0:36:29,456
会确认我的名字信息

663
00:36:30,490 --> 0:36:32,860
从开始到结束

664
00:36:34,294 --> 0:36:37,731
我们喜欢的另一种体验

665
00:36:37,865 --> 0:36:39,166
美团点评

666
00:36:40,534 --> 0:36:44,471
用户进入餐厅时

667
00:36:44,538 --> 0:36:45,572
扫描二维码

668
00:36:45,839 --> 0:36:48,509
这会将他们直接带到

669
00:36:50,577 --> 0:36:53,780
他们在菜单中使用图片

670
00:36:54,248 --> 0:36:55,549
以及如何快速结账

671
00:36:58,418 --> 0:37:02,456
在结帐流程中

672
00:36:58,418 --> 0:37:02,456
在结帐流程中

673
00:37:02,523 --> 0:37:04,124
虚拟支付凭证

674
00:37:04,658 --> 0:37:08,228
它使用我们的配置流程

675
00:37:09,096 --> 0:37:11,932
即使用户在Wallet或其它地方

676
00:37:12,165 --> 0:37:13,433
这也很有用

677
00:37:14,168 --> 0:37:16,537
他们可以设置一个

678
00:37:17,571 --> 0:37:20,707
并且该绑定的卡可用于

679
00:37:20,841 --> 0:37:23,944
电子商务和实体店

680
00:37:26,013 --> 0:37:27,681
如果用户将该卡

681
00:37:28,248 --> 0:37:30,250
Apple Pay

682
00:37:30,784 --> 0:37:32,352
这是默认化的绝佳例子

683
00:37:34,922 --> 0:37:36,890
一旦我用面容ID付款

684
00:37:37,991 --> 0:37:39,693
这是一次极佳的体验

685
00:37:39,760 --> 0:37:41,495
它汇集了所有这些技术

686
00:37:41,828 --> 0:37:46,200
GPS、信标、相机

687
00:37:47,267 --> 0:37:50,804
如果你将其与线下客户体验相结合

688
00:37:51,805 --> 0:37:53,807
若你利用我们今天在这里

689
00:37:53,874 --> 0:37:57,211
你也可以构建出卓越的

690
00:37:58,178 --> 0:38:00,214
最后还有一点

691
00:37:58,178 --> 0:38:00,214
最后还有一点

692
00:38:01,348 --> 0:38:03,717
如果你是付款处理商或商家

693
00:38:04,184 --> 0:38:06,753
你们中大多数人不需要担心

694
00:38:07,054 --> 0:38:09,489
你在开发者门户中的

695
00:38:10,224 --> 0:38:11,692
它们很容易更新

696
00:38:12,860 --> 0:38:16,730
你应该在到期前进行更新

697
00:38:18,265 --> 0:38:20,033
这就是我们今天要讨论的所有内容

698
00:38:20,534 --> 0:38:21,468
如果你想了解更多

699
00:38:22,369 --> 0:38:24,238
我们的在线文档可以在这里找到

700
00:38:24,838 --> 0:38:27,875
如果你对Wallet、Apple Pay

701
00:38:28,275 --> 0:38:30,077
请在本次演讲结束后

702
00:38:30,310 --> 0:38:31,945
到1号技术实验室与我们讨论

703
00:38:32,679 --> 0:38:36,283
感谢大家的到来
