1
00:00:17,918 --> 0:00:22,155
（车载音频及导航app

2
00:00:29,196 --> 0:00:32,466
欢迎参加车载音频及导航app演讲

3
00:00:32,900 --> 0:00:36,303
我是Jonathan

4
00:00:36,703 --> 0:00:39,873
今天我们非常高兴

5
00:00:39,940 --> 0:00:42,576
帮你们在CarPlay车载中

6
00:00:44,111 --> 0:00:46,947
我们从CarPlay车载

7
00:00:47,247 --> 0:00:50,150
然后我们要介绍

8
00:00:50,217 --> 0:00:51,618
可以在你导航app中应用

9
00:00:52,052 --> 0:00:55,656
并且我们还要进行快速演示

10
00:00:55,722 --> 0:00:58,325
在CarPlay车载系统中

11
00:00:58,825 --> 0:01:01,028
我们首先快速回顾一下

12
00:00:58,825 --> 0:01:01,028
我们首先快速回顾一下

13
00:01:03,297 --> 0:01:07,201
CarPlay车载系统是在汽车中

14
00:01:07,701 --> 0:01:10,938
你可以毫无压力地处理

15
00:01:11,171 --> 0:01:13,073
通过汽车内置播放按钮

16
00:01:13,807 --> 0:01:16,743
你可以打电话、发送和接收信息

17
00:01:17,010 --> 0:01:21,348
听音乐、播客和收音机

18
00:01:21,415 --> 0:01:25,118
这些都可以在路上驾车时完成

19
00:01:26,153 --> 0:01:30,524
你可以把汽车屏幕

20
00:01:31,358 --> 0:01:35,229
你的app可以在汽车屏幕上

21
00:01:35,295 --> 0:01:38,665
拥有面向汽车优化的用户界面和功能

22
00:01:39,833 --> 0:01:42,703
还会有一些特别的设计考虑

23
00:01:42,769 --> 0:01:44,471
当在CarPlay车载系统中

24
00:01:46,373 --> 0:01:49,510
CarPlay车载车辆

25
00:01:49,810 --> 0:01:51,578
有些汽车有触控屏幕

26
00:01:51,879 --> 0:01:56,149
有些汽车有旋钮

27
00:01:56,517 --> 0:01:59,620
还有一些汽车有触控板

28
00:01:59,786 --> 0:02:02,623
你甚至可以

29
00:01:59,786 --> 0:02:02,623
你甚至可以

30
00:02:04,057 --> 0:02:05,893
在靠右驾驶的汽车中

31
00:02:06,360 --> 0:02:10,997
CarPlay车载状态栏

32
00:02:11,064 --> 0:02:12,366
从而使它更靠近驾驶员

33
00:02:13,834 --> 0:02:17,371
有些汽车还会通知iOS

34
00:02:18,038 --> 0:02:19,873
一种较暗的界面模式时

35
00:02:19,940 --> 0:02:21,408
通常这种情况发生在夜晚

36
00:02:21,475 --> 0:02:23,377
或当汽车的车灯打开时

37
00:02:24,678 --> 0:02:26,713
你的app可以此为信号

38
00:02:26,780 --> 0:02:29,516
比如更新地图碎片的显示样式

39
00:02:31,518 --> 0:02:34,888
CarPlay车载汽车

40
00:02:34,955 --> 0:02:36,456
和纵横比

41
00:02:37,191 --> 0:02:39,860
iOS会为你处理所有输入方式

42
00:02:40,194 --> 0:02:43,397
因此你只需要针对CarPlay

43
00:02:43,463 --> 0:02:46,033
请放心 所有配置都会支持它

44
00:02:46,633 --> 0:02:48,702
你可以在CarPlay车载系统中

45
00:02:49,169 --> 0:02:51,872
这些是CarPlay车载app的

46
00:02:52,406 --> 0:02:54,408
车里是一个特殊的地方

47
00:02:54,474 --> 0:02:57,144
如果你有一款app属于这五个分类

48
00:02:57,211 --> 0:03:00,714
你需为app申请能在CarPlay

49
00:02:57,211 --> 0:03:00,714
你需为app申请能在CarPlay

50
00:03:02,182 --> 0:03:05,018
如果你不确定app

51
00:03:05,085 --> 0:03:06,386
并且你也参加了本次演讲

52
00:03:06,687 --> 0:03:08,822
请在今天晚些时候

53
00:03:09,256 --> 0:03:10,624
稍后我们再具体讲一下

54
00:03:11,024 --> 0:03:14,461
你可以通过这个URL

55
00:03:15,495 --> 0:03:18,098
让我们快速了解一下

56
00:03:19,900 --> 0:03:23,003
汽车生产商app是CarPlay

57
00:03:23,337 --> 0:03:25,305
这些app是由汽车生产商创建的

58
00:03:25,372 --> 0:03:28,275
并且只能在该生产商

59
00:03:29,142 --> 0:03:33,480
它们可以显示全部自定义用户界面

60
00:03:33,780 --> 0:03:34,915
座椅控制

61
00:03:34,982 --> 0:03:37,184
以及其它与汽车相关的直接集成

62
00:03:37,784 --> 0:03:41,788
如果这些app集成了SiriKit

63
00:03:41,855 --> 0:03:42,956
只需要通过语音控件

64
00:03:45,292 --> 0:03:49,096
去年我们向CarPlay车载系统

65
00:03:49,563 --> 0:03:52,499
你的信息和VoIP app

66
00:03:52,566 --> 0:03:55,969
因此 你的用户可以实施

67
00:03:56,170 --> 0:03:59,773
当连接到CarPlay车载系统时

68
00:04:00,440 --> 0:04:03,977
请查看SiriKit了解更多信息

69
00:04:04,044 --> 0:04:05,646
名字叫做为你的app

70
00:04:08,348 --> 0:04:12,786
先前发布的iOS中 我们向CarPlay

71
00:04:13,387 --> 0:04:16,589
音频app使用了针对汽车

72
00:04:16,656 --> 0:04:19,860
即你的app会针对汽车屏幕

73
00:04:20,560 --> 0:04:22,896
今天我们要跟大家分享一些

74
00:04:22,963 --> 0:04:26,099
针对音频app所进行的

75
00:04:27,968 --> 0:04:29,069
最后但同样重要的是

76
00:04:29,136 --> 0:04:31,572
今天我们要介绍CarPlay框架

77
00:04:31,839 --> 0:04:35,709
是针对CarPlay车载

78
00:04:42,516 --> 0:04:43,750
就像音频app一样

79
00:04:43,817 --> 0:04:47,921
iOS在汽车屏幕中显示你的app

80
00:04:48,455 --> 0:04:50,057
你的app不需要担心

81
00:04:50,123 --> 0:04:53,794
输入硬件或许多针对汽车的特别考虑

82
00:04:54,228 --> 0:04:56,630
你只需要更新地图碎片体验

83
00:04:56,697 --> 0:04:58,031
让它适合汽车显示屏即可

84
00:04:59,366 --> 0:05:03,003
CarPlay车载框架

85
00:04:59,366 --> 0:05:03,003
CarPlay车载框架

86
00:05:03,070 --> 0:05:04,838
是iOS针对汽车显示屏进行渲染的

87
00:05:05,739 --> 0:05:08,909
你的app会决定

88
00:05:08,976 --> 0:05:11,445
以及需要采取何种操作

89
00:05:11,512 --> 0:05:13,547
通过app模板

90
00:05:13,614 --> 0:05:16,250
稍后我们会详述

91
00:05:18,151 --> 0:05:21,288
现在回头看CarPlay

92
00:05:21,355 --> 0:05:24,591
其中两个分类：音频和导航

93
00:05:24,992 --> 0:05:26,827
让我们先讲一下

94
00:05:33,433 --> 0:05:34,501
谢谢Jonathan

95
00:05:35,235 --> 0:05:39,006
今天跟大家分享CarPlay车载

96
00:05:39,640 --> 0:05:41,341
我们首先看一个概述

97
00:05:41,408 --> 0:05:43,677
如何将音频设置为

98
00:05:44,077 --> 0:05:46,246
还有我们在iOS 12中

99
00:05:46,313 --> 0:05:50,050
以及一些最佳范例

100
00:05:50,117 --> 0:05:52,019
还有一些常见场景

101
00:05:52,286 --> 0:05:54,288
当把你的音频app

102
00:05:55,756 --> 0:05:58,759
现在驾车和音乐是息息相关的

103
00:05:58,825 --> 0:06:03,197
很明显 当你驾驶车辆时

104
00:05:58,825 --> 0:06:03,197
很明显 当你驾驶车辆时

105
00:06:03,263 --> 0:06:06,667
古典乐或甚至是一些播客片段

106
00:06:07,100 --> 0:06:09,670
或收听收音机的最新新闻

107
00:06:10,671 --> 0:06:13,307
我们想确保

108
00:06:13,373 --> 0:06:16,276
并且你希望给驾驶员提供最好的体验

109
00:06:17,211 --> 0:06:19,446
现在为了说明这个问题 我想让你们

110
00:06:19,513 --> 0:06:21,515
看一下我一直在做的一个小项目

111
00:06:21,849 --> 0:06:24,418
它是一款小app 我觉得一定会很火

112
00:06:25,919 --> 0:06:27,454
我的app叫做Srirocka

113
00:06:28,655 --> 0:06:31,625
它主要结合了我最喜欢的两个功能：

114
00:06:31,959 --> 0:06:33,927
最火的频道和最火的专辑

115
00:06:34,461 --> 0:06:39,099
通过协同效应 当我们发布它以后

116
00:06:39,166 --> 0:06:40,033
最受欢迎的音频app之一

117
00:06:41,301 --> 0:06:44,104
现在Srirocka已是

118
00:06:44,438 --> 0:06:46,640
但我们需要给它添加

119
00:06:46,707 --> 0:06:48,575
那么让我来说明该如何做

120
00:06:50,577 --> 0:06:53,580
就像Jonathan刚才提到的

121
00:06:53,647 --> 0:06:57,184
会抽象剥离CarPlay车载中

122
00:06:57,251 --> 0:07:00,220
比如输入方式和屏幕尺寸等等

123
00:06:57,251 --> 0:07:00,220
比如输入方式和屏幕尺寸等等

124
00:07:00,521 --> 0:07:04,024
因此你的音频app只需能在

125
00:07:04,391 --> 0:07:07,027
显示信息并提供最好的内容即可

126
00:07:07,528 --> 0:07:10,464
这通常是通过表视图或标签来实现的

127
00:07:10,531 --> 0:07:12,633
取决于你希望如何呈现你的数据

128
00:07:13,734 --> 0:07:17,137
你需要关注的是向CarPlay

129
00:07:17,204 --> 0:07:19,239
并且如果你已经在开发一款音频app

130
00:07:19,306 --> 0:07:22,242
并且它使用的是现有的API

131
00:07:22,809 --> 0:07:24,645
那么让我们具体看一下

132
00:07:26,547 --> 0:07:28,782
那么这是你要在

133
00:07:28,849 --> 0:07:30,717
发布app所需要了解的三个API

134
00:07:31,585 --> 0:07:34,621
如果你想了解具体信息

135
00:07:34,688 --> 0:07:37,157
详细解释了每一个API

136
00:07:37,224 --> 0:07:39,893
但我会大概介绍一下每一种API

137
00:07:40,727 --> 0:07:42,863
要在CarPlay车载显示屏上

138
00:07:43,063 --> 0:07:45,265
你需要使用

139
00:07:45,499 --> 0:07:48,468
MPPlayableContent

140
00:07:48,535 --> 0:07:51,772
因此你或你的音频app

141
00:07:51,839 --> 0:07:53,273
在CarPlay车载显示屏上

142
00:07:53,440 --> 0:07:55,576
并且委托会接收回调

143
00:07:55,642 --> 0:07:58,412
无论何时当用户在CarPlay

144
00:07:59,346 --> 0:08:01,782
现在如果你已将

145
00:07:59,346 --> 0:08:01,782
现在如果你已将

146
00:08:01,849 --> 0:08:03,483
控制中心或锁定屏幕

147
00:08:03,550 --> 0:08:06,253
或你正在现有的音频app中

148
00:08:06,520 --> 0:08:08,555
那么你一定已经很熟悉这两个API

149
00:08:10,090 --> 0:08:12,659
MPNowPlayingInfo

150
00:08:12,726 --> 0:08:17,331
填充立即播放元数据及其它元素

151
00:08:17,397 --> 0:08:20,334
在CarPlay车载系统的

152
00:08:20,400 --> 0:08:23,737
以及控制中心和锁定屏幕

153
00:08:24,438 --> 0:08:28,175
MPRemoteCommandCenter

154
00:08:28,509 --> 0:08:31,111
比如播放命令、下一曲等等

155
00:08:32,111 --> 0:08:35,716
我们希望让CarPlay车载app

156
00:08:35,782 --> 0:08:37,751
现在让我们看看

157
00:08:39,086 --> 0:08:40,419
当打开Srirocka后

158
00:08:40,486 --> 0:08:42,188
我要把Srirocka当个例子

159
00:08:42,556 --> 0:08:45,559
这是支持CarPlay车载

160
00:08:45,993 --> 0:08:48,629
Srirocka会提供一个数据源

161
00:08:49,029 --> 0:08:52,833
给MPPlayableContentManager

162
00:08:52,900 --> 0:08:56,236
到CarPlay车载显示屏

163
00:08:57,437 --> 0:09:02,509
接下来我会设置NowPlayingInfoCenter

164
00:08:57,437 --> 0:09:02,509
接下来我会设置NowPlayingInfoCenter

165
00:09:02,576 --> 0:09:05,045
我的app将提供立即播放元数据

166
00:09:05,112 --> 0:09:06,647
当它成为立即播放app时

167
00:09:07,781 --> 0:09:10,851
最后我会响应

168
00:09:10,918 --> 0:09:14,888
特别注意的是在本例中只需

169
00:09:14,955 --> 0:09:17,624
成为立即播放app时

170
00:09:18,892 --> 0:09:22,996
我们可以在此看到CarPlay

171
00:09:23,063 --> 0:09:24,398
就是MPPlayableContent

172
00:09:24,898 --> 0:09:28,569
对于iOS 12 我们针对如何

173
00:09:28,969 --> 0:09:32,906
我们可以安全地说在iOS 12中

174
00:09:32,973 --> 0:09:39,046
（重新灌录

175
00:09:39,112 --> 0:09:43,617
我们深度分析了MPPlayableContent

176
00:09:43,684 --> 0:09:46,186
在如何调取数据源

177
00:09:47,054 --> 0:09:50,257
你不需要修改当前音频app

178
00:09:50,624 --> 0:09:53,927
我们加速了启动过程

179
00:09:53,994 --> 0:09:56,396
无论何时当CarPlay

180
00:09:57,331 --> 0:10:00,067
我们还向你的app提供更好的通讯

181
00:09:57,331 --> 0:10:00,067
我们还向你的app提供更好的通讯

182
00:10:00,434 --> 0:10:02,669
以预估用户可能希望播放什么内容

183
00:10:02,736 --> 0:10:04,505
或在CarPlay车载显示屏上

184
00:10:05,639 --> 0:10:08,175
现在你有更大的空间

185
00:10:08,242 --> 0:10:09,643
让我们看看该如何实现

186
00:10:09,710 --> 0:10:13,247
首先要查看

187
00:10:13,313 --> 0:10:15,082
这是MPPlayableContent中的

188
00:10:15,148 --> 0:10:18,285
它会了解如何为你的音频app

189
00:10:19,186 --> 0:10:22,589
我们发现你其实

190
00:10:22,656 --> 0:10:23,957
当绝对必要时

191
00:10:24,725 --> 0:10:26,793
它的功能是拆解

192
00:10:26,860 --> 0:10:29,696
整个app的层级

193
00:10:29,763 --> 0:10:32,799
并请求你的音频app

194
00:10:32,866 --> 0:10:34,801
这可能是一个非常昂贵的操作

195
00:10:34,868 --> 0:10:36,537
让你app的响应性变得不那么强

196
00:10:37,771 --> 0:10:40,707
相反 如果你只需要更新一些内容

197
00:10:40,774 --> 0:10:44,711
你应该把它们一起打包到一个

198
00:10:44,778 --> 0:10:47,047
从而可以适当地更新内容

199
00:10:48,348 --> 0:10:51,685
现在MPPlayableContent

200
00:10:51,752 --> 0:10:55,022
是异步操作

201
00:10:55,422 --> 0:10:57,791
因此 需要在你app的某个位置

202
00:10:57,858 --> 0:11:01,328
保存内部陈述或信息缓存

203
00:10:57,858 --> 0:11:01,328
保存内部陈述或信息缓存

204
00:11:01,395 --> 0:11:03,530
那么当我们请求你的内容信息时

205
00:11:03,597 --> 0:11:07,501
你就能迅速给我们提供信息

206
00:11:08,902 --> 0:11:10,237
接下来让我们讨论一些办法

207
00:11:10,304 --> 0:11:13,273
关于进一步优化音频app

208
00:11:14,441 --> 0:11:17,277
Srirocka已经有一些实施了

209
00:11:17,344 --> 0:11:19,713
并且是部分实施 用户需要决定

210
00:11:19,780 --> 0:11:22,549
在Heating Habaneros

211
00:11:22,616 --> 0:11:25,452
它是现在超级火

212
00:11:26,253 --> 0:11:28,488
但它的加载看起来似乎不顺畅

213
00:11:28,555 --> 0:11:30,591
我们并不能完全确信

214
00:11:30,657 --> 0:11:32,559
CarPlay车载系统实际会超时

215
00:11:32,626 --> 0:11:34,728
如果app不及时提供内容的话

216
00:11:34,928 --> 0:11:36,530
因为它不会调用完成处理器

217
00:11:36,597 --> 0:11:38,665
或就只是不会返回信息

218
00:11:39,600 --> 0:11:41,235
手机上到底发生了什么？

219
00:11:42,236 --> 0:11:45,405
CarPlay

220
00:11:45,472 --> 0:11:48,775
不能快速连接的区域

221
00:11:49,076 --> 0:11:51,879
绝大多数CarPlay车载用户

222
00:11:51,945 --> 0:11:54,181
且需解锁密码的情况下驾车

223
00:11:55,415 --> 0:11:57,718
如果你的app的数据保护政策

224
00:11:57,784 --> 0:12:00,087
依赖于手机处于解锁状态

225
00:11:57,784 --> 0:12:00,087
依赖于手机处于解锁状态

226
00:12:00,153 --> 0:12:02,122
你将不能获取你app的信息

227
00:12:02,189 --> 0:12:04,224
并且最终CarPlay车载

228
00:12:04,691 --> 0:12:07,494
因此如果你的数据

229
00:12:07,561 --> 0:12:10,631
你就需要审查

230
00:12:12,966 --> 0:12:14,768
另一个问题是…

231
00:12:16,170 --> 0:12:19,339
你或CarPlay车载用户

232
00:12:19,406 --> 0:12:21,475
很少或没有蜂窝网络活动的区域驾驶

233
00:12:22,409 --> 0:12:26,246
驾驶员们会开车去任何地方

234
00:12:26,313 --> 0:12:27,314
再到大城市

235
00:12:27,381 --> 0:12:30,784
这些是非常多变的区域

236
00:12:30,851 --> 0:12:33,620
有不同的CarPlay车载系统

237
00:12:33,687 --> 0:12:35,722
并且你需要测试

238
00:12:35,789 --> 0:12:37,724
没有恒定WIFI网络连接的情况

239
00:12:39,059 --> 0:12:41,528
现在Srirocka

240
00:12:41,595 --> 0:12:44,364
但它使用了一些非常先进的机器学习

241
00:12:44,698 --> 0:12:46,600
来了解哪个是最火的频道

242
00:12:46,667 --> 0:12:48,836
毕竟这一切都发生在移动设备上

243
00:12:48,902 --> 0:12:50,704
因为隐私是非常重要的问题

244
00:12:50,938 --> 0:12:52,806
这只需要一点时间去处理

245
00:12:53,240 --> 0:12:54,675
嗯 在本例中发生了什么？

246
00:12:56,009 --> 0:12:59,079
我们在indexPath有一个API

247
00:12:59,546 --> 0:13:01,148
用于发起获取内容

248
00:12:59,546 --> 0:13:01,148
用于发起获取内容

249
00:13:01,915 --> 0:13:03,350
这个API会被调用

250
00:13:03,417 --> 0:13:06,987
无论何时当你的任意一个索引路径

251
00:13:07,054 --> 0:13:10,858
当用户在表单元格间滚动

252
00:13:11,558 --> 0:13:14,561
会调用beginLoadingChildItems

253
00:13:14,628 --> 0:13:15,896
显示在显示屏上的独立索引路径

254
00:13:17,097 --> 0:13:20,033
这样你的app就有机会开始加载

255
00:13:20,100 --> 0:13:21,568
在用户实际选择内容之前

256
00:13:22,402 --> 0:13:24,571
这是Srirocka中的

257
00:13:24,872 --> 0:13:28,542
当用户在CarPlay车载显示屏上

258
00:13:28,609 --> 0:13:32,579
我们就开始处理

259
00:13:32,646 --> 0:13:35,816
当用户做出选择时

260
00:13:35,883 --> 0:13:37,284
通过网络请求

261
00:13:37,351 --> 0:13:39,887
或立即提供内容

262
00:13:41,455 --> 0:13:45,492
那么让我们看一些app场景

263
00:13:45,726 --> 0:13:47,528
可能会在你开发

264
00:13:48,729 --> 0:13:53,333
当你注销时 Srirocka

265
00:13:53,400 --> 0:13:55,836
这里非常清楚 有漂亮的排版

266
00:13:55,903 --> 0:14:00,541
很棒的图形设计

267
00:13:55,903 --> 0:14:00,541
很棒的图形设计

268
00:14:01,508 --> 0:14:03,043
但这在CarPlay车载显示屏上

269
00:14:04,444 --> 0:14:06,914
Srirocka实际上在注销时

270
00:14:06,980 --> 0:14:10,017
这会导致一种非常坏的用户体验

271
00:14:10,350 --> 0:14:12,319
用户实际上不知道发生了什么

272
00:14:12,619 --> 0:14:15,289
也不能和你的app进行交互

273
00:14:16,657 --> 0:14:19,793
你应该确保你提供某种类型的体验

274
00:14:19,860 --> 0:14:22,396
从而用户起码可以

275
00:14:22,462 --> 0:14:23,864
即使当用户注销时

276
00:14:24,164 --> 0:14:27,100
营造了一种很好的音频app用户体验

277
00:14:28,535 --> 0:14:30,037
那么总结一下

278
00:14:30,103 --> 0:14:32,673
CarPlay车载音频app

279
00:14:33,640 --> 0:14:35,809
MPPlayableContent

280
00:14:35,876 --> 0:14:38,579
提供CarPlay车载显示屏模板

281
00:14:38,645 --> 0:14:42,049
可以在CarPlay车载

282
00:14:42,983 --> 0:14:44,518
你该关注一些现实世界的场景

283
00:14:44,585 --> 0:14:47,354
比如当你的app被注销时

284
00:14:47,654 --> 0:14:50,557
你的app在CarPlay

285
00:14:51,725 --> 0:14:54,628
在iOS 12中

286
00:14:54,695 --> 0:14:57,831
和性能改善 让你的app

287
00:14:58,131 --> 0:15:01,101
你需要再次运行你的app

288
00:14:58,131 --> 0:15:01,101
你需要再次运行你的app

289
00:15:01,168 --> 0:15:03,337
从而让你的app变得越来越好

290
00:15:04,338 --> 0:15:06,940
现在为了确保我们不跑题

291
00:15:07,007 --> 0:15:08,475
我想邀请同事Mike上台

292
00:15:08,542 --> 0:15:10,944
谈谈CarPlay

293
00:15:11,144 --> 0:15:12,145
谢谢

294
00:15:17,050 --> 0:15:18,485
好的 谢谢Albert

295
00:15:19,319 --> 0:15:21,188
今天我很高兴跟大家分享

296
00:15:21,255 --> 0:15:24,558
如何向你的导航app中

297
00:15:24,958 --> 0:15:28,896
导航是CarPlay车载系统

298
00:15:29,363 --> 0:15:33,800
你的用户会非常乐意

299
00:15:34,935 --> 0:15:36,803
正如Jonathan

300
00:15:37,237 --> 0:15:40,841
我们针对之前的app类别

301
00:15:42,276 --> 0:15:44,611
你的app要能提供数据和元数据

302
00:15:44,678 --> 0:15:46,747
这样iOS会显示在汽车显示屏上

303
00:15:46,813 --> 0:15:49,283
并且以你app的名义管理这些交互

304
00:15:49,850 --> 0:15:51,818
这用起来非常棒

305
00:15:52,586 --> 0:15:56,089
但我们意识到导航app有一些不同

306
00:15:56,790 --> 0:15:59,693
你的app有漂亮的地图

307
00:16:00,127 --> 0:16:02,863
还有如此美好和身临其境的导航体验

308
00:16:03,363 --> 0:16:06,200
并且你的用户会期待

309
00:16:07,201 --> 0:16:11,138
在iOS 12中 我们引入了

310
00:16:11,805 --> 0:16:16,677
CarPlay车载框架是你用来

311
00:16:16,743 --> 0:16:17,878
在汽车显示屏上

312
00:16:18,478 --> 0:16:22,783
它使用了你的app可以创建并使用的

313
00:16:22,850 --> 0:16:26,854
iOS将会把它转化为用户界面

314
00:16:27,688 --> 0:16:30,290
通过这个以及你需要付出的

315
00:16:30,357 --> 0:16:33,293
你的app就会支持

316
00:16:34,228 --> 0:16:36,230
让我们看看CarPlay

317
00:16:36,930 --> 0:16:40,200
我们一直在创建自己的导航app

318
00:16:40,467 --> 0:16:43,470
它通过路线

319
00:16:44,071 --> 0:16:45,939
让我们看看它在

320
00:16:47,508 --> 0:16:50,844
现在我们位于CarPlay车载主屏幕上

321
00:16:50,911 --> 0:16:53,046
就在这里 还有iOS上的其它app

322
00:16:53,947 --> 0:16:56,250
当我们打开它时

323
00:16:56,984 --> 0:16:58,352
就是我们漂亮的地图碎片

324
00:16:59,186 --> 0:17:00,354
当我们连接到

325
00:16:59,186 --> 0:17:00,354
当我们连接到

326
00:17:00,420 --> 0:17:03,790
导航app会打开一个窗口

327
00:17:04,391 --> 0:17:06,993
这个窗口就是你的画布

328
00:17:07,060 --> 0:17:11,298
用于显示所有漂亮的非交互式地图

329
00:17:12,266 --> 0:17:16,002
因为app使用了模板

330
00:17:16,069 --> 0:17:19,039
转化为一个能在app顶部

331
00:17:20,307 --> 0:17:21,541
让我们看看代码

332
00:17:21,608 --> 0:17:24,411
当你的app连接到

333
00:17:25,712 --> 0:17:28,782
你需要注意的第一件事

334
00:17:28,849 --> 0:17:32,219
要遵守CarPlay车载

335
00:17:32,486 --> 0:17:33,787
CP app委托

336
00:17:35,122 --> 0:17:37,558
那个协议中的一个函数是

337
00:17:37,624 --> 0:17:40,093
didConnectCar

338
00:17:41,161 --> 0:17:44,164
这个函数会给你的app

339
00:17:44,765 --> 0:17:47,801
第一个是

340
00:17:48,802 --> 0:17:52,773
CPInterfaceController

341
00:17:52,840 --> 0:17:55,342
将用什么来管理

342
00:17:56,009 --> 0:17:58,111
此外 你将会获得

343
00:17:58,178 --> 0:18:00,514
就是你可以绘制全部地图内容的地方

344
00:17:58,178 --> 0:18:00,514
就是你可以绘制全部地图内容的地方

345
00:18:01,849 --> 0:18:03,150
你必须保持对全部两个对象的引用

346
00:18:03,217 --> 0:18:05,986
在CarPlay车载会话的

347
00:18:07,254 --> 0:18:11,225
接下来你要创建一个新的视图控制器

348
00:18:11,291 --> 0:18:13,026
并将它分配到你的窗口浏览控制器

349
00:18:13,260 --> 0:18:15,195
然后创建一个根模板

350
00:18:15,495 --> 0:18:17,064
通过那个界面控制器对象

351
00:18:17,130 --> 0:18:19,066
你可以在汽车显示屏上

352
00:18:20,234 --> 0:18:22,536
让我们谈谈

353
00:18:22,603 --> 0:18:23,804
在CarPlay车载框架中

354
00:18:24,238 --> 0:18:26,840
让我们从一个你们已经看到

355
00:18:27,174 --> 0:18:29,943
并且用户会花费大部分时间

356
00:18:30,344 --> 0:18:31,979
那就是地图模板

357
00:18:32,980 --> 0:18:34,147
地图模板与其它模板不同

358
00:18:34,214 --> 0:18:37,918
因为它在app窗口中是透明的

359
00:18:38,552 --> 0:18:42,089
那么你在那个窗口中所绘制的内容

360
00:18:42,155 --> 0:18:44,491
将在由地图模板

361
00:18:45,492 --> 0:18:48,195
地图模板可以在几个

362
00:18:48,629 --> 0:18:50,564
你可以在导航栏中放置一个按钮

363
00:18:51,098 --> 0:18:52,533
你最多可以放置四个：

364
00:18:52,599 --> 0:18:55,602
两个在导航栏 两个在路径栏

365
00:18:56,270 --> 0:19:02,075
这些是CPBarButton实例

366
00:18:56,270 --> 0:19:02,075
这些是CPBarButton实例

367
00:19:02,342 --> 0:19:05,245
并且系统会自动调整其尺寸和样式

368
00:19:06,046 --> 0:19:08,916
并没有任何预定义按钮行动的概念

369
00:19:08,982 --> 0:19:10,117
在CarPlay车载框架中

370
00:19:10,517 --> 0:19:13,520
但当你创建按钮时

371
00:19:13,921 --> 0:19:16,823
当用户与汽车显示屏上的按钮交互时

372
00:19:17,224 --> 0:19:19,593
将会在你的app中

373
00:19:20,794 --> 0:19:24,665
你还可以在地图窗口上方

374
00:19:25,098 --> 0:19:26,466
这些是地图按钮

375
00:19:26,834 --> 0:19:28,435
你可以通过图像创建

376
00:19:28,502 --> 0:19:31,805
跟杆状按钮不同

377
00:19:33,006 --> 0:19:34,474
地图模板还是

378
00:19:34,541 --> 0:19:38,045
许多其它地图

379
00:19:38,478 --> 0:19:40,247
比如拖动地图

380
00:19:41,148 --> 0:19:45,219
通过导航警告向你的用户

381
00:19:45,686 --> 0:19:47,921
当然 还有路线指引

382
00:19:48,755 --> 0:19:50,390
我们稍微谈谈路线指引

383
00:19:50,824 --> 0:19:54,194
让我们从拖动地图和导航警告开始谈

384
00:19:54,895 --> 0:19:56,964
如果你的app支持拖动地图

385
00:19:57,464 --> 0:20:00,300
我们要求你在地图模板上

386
00:19:57,464 --> 0:20:00,300
我们要求你在地图模板上

387
00:20:00,767 --> 0:20:03,303
无论在导航栏

388
00:20:04,071 --> 0:20:05,606
只要能进入拖动模式就可以

389
00:20:06,373 --> 0:20:09,910
当地图模板进入拖动模式时

390
00:20:09,977 --> 0:20:13,647
你的用户可以与之交互

391
00:20:13,714 --> 0:20:16,583
你的app只需要了解

392
00:20:17,451 --> 0:20:20,320
这个示例 展示CarPlay

393
00:20:20,387 --> 0:20:23,223
不同的CarPlay车载系统

394
00:20:23,891 --> 0:20:25,526
这些按钮可以通过触摸进行交互

395
00:20:25,592 --> 0:20:29,096
高延迟或低延迟触摸屏都可以

396
00:20:29,730 --> 0:20:33,133
通过一个旋钮或触控板

397
00:20:33,734 --> 0:20:35,469
此外在CarPlay车载系统中

398
00:20:35,536 --> 0:20:39,706
如果旋钮也支持控制杆或定向移动

399
00:20:40,040 --> 0:20:42,676
同样的移动也会

400
00:20:42,910 --> 0:20:45,512
你的app不需要担心它来自哪里

401
00:20:46,947 --> 0:20:50,350
当你的用户在驾车时

402
00:20:50,417 --> 0:20:54,788
比如前方道路关闭

403
00:20:55,322 --> 0:20:57,558
为此你可以使用导航警告

404
00:20:58,192 --> 0:21:00,627
导航警告呈现在地图模板上

405
00:20:58,192 --> 0:21:00,627
导航警告呈现在地图模板上

406
00:21:00,994 --> 0:21:04,831
可以配置一个标题、副标题、图像

407
00:21:05,232 --> 0:21:07,901
主行动和第二行动 如果适用的话

408
00:21:07,968 --> 0:21:11,638
你还可以使用遣散区间

409
00:21:13,240 --> 0:21:16,343
让我们看一下如何创建根模板的代码

410
00:21:16,677 --> 0:21:18,145
让我们添加一个新按钮

411
00:21:18,478 --> 0:21:20,547
在Country Roads上

412
00:21:22,416 --> 0:21:24,585
因为这是创建我们根模板的函数

413
00:21:24,651 --> 0:21:28,388
我们要做的第一件事就是创建

414
00:21:29,590 --> 0:21:32,392
然后我们要针对迷路功能

415
00:21:33,560 --> 0:21:35,996
Country Roads

416
00:21:36,063 --> 0:21:37,898
可以搜索他们最喜欢的类别

417
00:21:38,732 --> 0:21:40,167
我们也为此添加一个新按钮

418
00:21:40,234 --> 0:21:42,369
让我们创建CPBarButton

419
00:21:42,870 --> 0:21:44,404
在它的自定义行动处理器中

420
00:21:44,571 --> 0:21:47,908
我们会调用一个我们自己的函数

421
00:21:48,742 --> 0:21:51,345
然后我们会取回一个图像

422
00:21:51,945 --> 0:21:54,047
我们希望这个按钮出现在路径空间中

423
00:21:54,114 --> 0:21:55,482
在交通按钮的旁边

424
00:21:55,916 --> 0:21:57,451
我们把这两个按钮

425
00:21:57,518 --> 0:22:00,120
分配到地图模板上的

426
00:21:57,518 --> 0:22:00,120
分配到地图模板上的

427
00:22:00,554 --> 0:22:02,089
然后返回我们的地图模板

428
00:22:03,090 --> 0:22:06,126
很棒 现在我们在地图模板上

429
00:22:06,193 --> 0:22:08,462
可以向用户显示

430
00:22:09,062 --> 0:22:11,398
为此CarPlay车载框架

431
00:22:11,598 --> 0:22:12,933
即网格模板

432
00:22:13,534 --> 0:22:18,438
网格模板会在一个网格格式中

433
00:22:19,573 --> 0:22:21,375
这些按钮出现在这里

434
00:22:21,708 --> 0:22:24,511
并且可以配置一个图像和一个标题

435
00:22:25,779 --> 0:22:28,048
网格模板还有一个导航栏

436
00:22:28,282 --> 0:22:30,751
你可以放置同样的导航和路径按钮

437
00:22:31,185 --> 0:22:32,619
但你还可创建一个网格模板

438
00:22:32,920 --> 0:22:35,355
它的标题会出现在导航栏中

439
00:22:36,523 --> 0:22:39,393
让我们跳过代码并创建一个网格模板

440
00:22:41,762 --> 0:22:44,665
我们要从给网格按钮取回图像开始

441
00:22:45,365 --> 0:22:46,900
我们要添加一个停车场按钮

442
00:22:48,635 --> 0:22:52,039
然后我们要创建一个

443
00:22:52,472 --> 0:22:53,740
图像是我们刚取回的图像

444
00:22:55,609 --> 0:22:58,212
那么和其它按钮一样

445
00:22:58,445 --> 0:23:00,948
然后创建一个

446
00:22:58,445 --> 0:23:00,948
然后创建一个

447
00:23:01,215 --> 0:23:03,884
标题是收藏夹

448
00:23:04,384 --> 0:23:07,054
还有我们在代码中创建的

449
00:23:07,955 --> 0:23:10,490
我们要从这里

450
00:23:10,557 --> 0:23:11,458
我刚才提到过

451
00:23:12,092 --> 0:23:14,761
这就是我们如何在汽车显示屏上

452
00:23:15,395 --> 0:23:17,130
我们会使用那个界面控制器

453
00:23:17,197 --> 0:23:20,267
把这个新网格模板

454
00:23:22,169 --> 0:23:25,105
现在我们有一种方法

455
00:23:25,172 --> 0:23:26,240
以及我们喜欢的内容

456
00:23:26,473 --> 0:23:28,842
我们需要一种方式

457
00:23:29,376 --> 0:23:31,445
为此我们可以使用一个列表模板

458
00:23:32,746 --> 0:23:35,349
列表模板将显示

459
00:23:35,849 --> 0:23:39,319
它们可以是文本、详细文本、图像

460
00:23:39,586 --> 0:23:40,787
和披露指示器

461
00:23:41,355 --> 0:23:42,923
你可以提供多个节段

462
00:23:42,990 --> 0:23:45,592
你还可以有一个导航栏

463
00:23:45,659 --> 0:23:47,594
以及同样的导航和路径按钮

464
00:23:48,228 --> 0:23:50,063
CarPlay车载框架的

465
00:23:50,130 --> 0:23:53,667
如果适用

466
00:23:53,734 --> 0:23:56,837
可以帮助你的用户

467
00:23:57,971 --> 0:23:59,439
让我们创建一个列表模板

468
00:24:01,008 --> 0:24:02,376
我们要做的第一件事

469
00:24:02,709 --> 0:24:05,412
就是把我们自己的搜索结果的数组

470
00:24:05,479 --> 0:24:08,949
转化到一个

471
00:24:09,349 --> 0:24:10,317
我们可以通过

472
00:24:10,384 --> 0:24:12,586
在我们的搜索结果类中

473
00:24:14,588 --> 0:24:17,524
然后我们初始化一个新的

474
00:24:18,058 --> 0:24:22,262
将这些项作为一个节段

475
00:24:22,563 --> 0:24:25,432
也可以分配一个委托

476
00:24:26,233 --> 0:24:28,035
我们要使用界面控制器

477
00:24:28,101 --> 0:24:30,170
把我们的新模板放到汽车显示屏上

478
00:24:31,505 --> 0:24:33,841
当用户在屏幕上

479
00:24:35,609 --> 0:24:37,311
listTemplate

480
00:24:37,377 --> 0:24:40,147
完成处理器

481
00:24:41,648 --> 0:24:44,451
在CarPlay车载框架中

482
00:24:44,518 --> 0:24:45,652
我想要快速地提一下

483
00:24:47,120 --> 0:24:51,458
第一个是关于CarPlay

484
00:24:51,525 --> 0:24:54,695
以及CarPlay车载框架如何

485
00:24:55,762 --> 0:24:58,365
我们现在看的是搜索模板

486
00:24:58,432 --> 0:25:01,869
它是CarPlay车载框架中

487
00:24:58,432 --> 0:25:01,869
它是CarPlay车载框架中

488
00:25:02,536 --> 0:25:05,138
但我们了解到

489
00:25:05,205 --> 0:25:06,139
都有一个触控屏

490
00:25:06,707 --> 0:25:10,244
很多都只有一个旋钮或触控板

491
00:25:10,878 --> 0:25:12,546
在那些系统中 如果适用

492
00:25:12,880 --> 0:25:15,749
CarPlay车载框架

493
00:25:16,650 --> 0:25:19,753
当然 对于那些

494
00:25:20,187 --> 0:25:22,089
通过同样的搜索模板API

495
00:25:22,356 --> 0:25:25,726
你的app将免费接收所键入的文字

496
00:25:27,261 --> 0:25:28,629
你可能还想向用户呈现信息

497
00:25:28,695 --> 0:25:31,932
以一种需要引起用户更多专注的方式

498
00:25:32,466 --> 0:25:35,936
为此你可在ActionSheetStyle中

499
00:25:36,436 --> 0:25:38,972
或呈现真正需要用户注意的信息

500
00:25:39,039 --> 0:25:41,108
你可以使用全屏模板

501
00:25:42,576 --> 0:25:46,547
最后 因为语音是app中的一大部分

502
00:25:47,247 --> 0:25:50,584
我们提供了一个能帮助你

503
00:25:51,451 --> 0:25:53,353
我想邀请Jonathan返回舞台

504
00:25:53,420 --> 0:25:55,455
给大家演示

505
00:25:55,522 --> 0:25:56,356
Jonathan

506
00:26:01,828 --> 0:26:02,829
谢谢Mike

507
00:26:03,197 --> 0:26:05,632
让我们快速看一下

508
00:26:11,805 --> 0:26:14,641
这是一个CarPlay车载模拟器

509
00:26:15,475 --> 0:26:17,678
让我们从CarPlay

510
00:26:17,744 --> 0:26:21,114
我们可以看到我们为CarPlay

511
00:26:21,181 --> 0:26:23,050
让我们轻触图标打开app

512
00:26:25,052 --> 0:26:27,554
当我们的app打开后

513
00:26:27,955 --> 0:26:31,358
app展示了 Mike刚提到

514
00:26:31,425 --> 0:26:34,561
并且它允许app的漂亮地图

515
00:26:35,095 --> 0:26:36,864
这幅地图太出色了

516
00:26:38,165 --> 0:26:39,967
在这幅地图上

517
00:26:40,767 --> 0:26:43,670
比如用ECP地图按钮进行缩放

518
00:26:46,039 --> 0:26:49,343
我还可以用这个拖动按钮

519
00:26:52,679 --> 0:26:56,283
全部这些按钮都是简单的

520
00:26:56,483 --> 0:27:00,020
CarPlay车载系统会告诉app

521
00:26:56,483 --> 0:27:00,020
CarPlay车载系统会告诉app

522
00:27:00,220 --> 0:27:04,658
并且app可以进行缩放或采取

523
00:27:05,826 --> 0:27:07,895
Mike刚添加了

524
00:27:07,961 --> 0:27:10,797
它显示在路径一侧的导航栏上

525
00:27:11,465 --> 0:27:16,436
当轻触它时 我们的app就会创建

526
00:27:16,737 --> 0:27:19,806
可以让我们导航到

527
00:27:20,507 --> 0:27:25,679
如果我们选择停车场 app就会

528
00:27:26,280 --> 0:27:29,349
我们可以看到周围停车场的搜索结果

529
00:27:29,917 --> 0:27:33,220
稍后再谈Country Roads

530
00:27:40,694 --> 0:27:41,962
好的 谢谢Jonathan

531
00:27:43,864 --> 0:27:45,899
让我们谈谈

532
00:27:45,966 --> 0:27:48,468
你的app向正在驾车的用户

533
00:27:49,002 --> 0:27:51,305
那当然是路线指引

534
00:27:52,039 --> 0:27:55,976
让我们根据用户在开始导航会话时

535
00:27:56,410 --> 0:27:58,212
可能会看到的典型流程来了解一下

536
00:27:59,513 --> 0:28:01,715
他们所需要的第一个要素就是目的地

537
00:27:59,513 --> 0:28:01,715
他们所需要的第一个要素就是目的地

538
00:28:02,449 --> 0:28:06,053
这可能是由你的app

539
00:28:06,753 --> 0:28:07,988
或者也许他们通过搜索

540
00:28:08,055 --> 0:28:09,957
所发现的想要去的目的地

541
00:28:11,158 --> 0:28:14,361
他们可能想预览路线

542
00:28:14,428 --> 0:28:16,797
比如开车到那儿需要多长时间

543
00:28:16,864 --> 0:28:18,699
以及预计到达时间

544
00:28:19,600 --> 0:28:22,603
如果他们有多重路线可以选择

545
00:28:22,903 --> 0:28:25,005
他们很可能想要预览每一种路线

546
00:28:25,072 --> 0:28:26,840
并选择最适合他们的路线

547
00:28:28,408 --> 0:28:29,610
他们选择其中一条路线

548
00:28:29,676 --> 0:28:30,777
并开始导航

549
00:28:31,378 --> 0:28:35,649
然后你的app就向用户提供路线更新

550
00:28:36,717 --> 0:28:40,387
最终他们到达目的地或取消导航

551
00:28:41,388 --> 0:28:44,157
让我们看看如何完成同样的流程

552
00:28:44,224 --> 0:28:45,659
通过使用CarPlay车载框架

553
00:28:47,060 --> 0:28:49,129
让我们先谈谈路线预览

554
00:28:49,997 --> 0:28:54,434
你的app要提供数据

555
00:28:55,035 --> 0:28:58,539
他们即将进行的旅程的

556
00:28:59,173 --> 0:29:02,042
你可以提供目的地名称

557
00:28:59,173 --> 0:29:02,042
你可以提供目的地名称

558
00:29:02,109 --> 0:29:05,179
与路线有关的信息 比如建议性通知

559
00:29:05,946 --> 0:29:07,047
还可以提供预计时间

560
00:29:07,114 --> 0:29:08,815
让他们了解他们何时会到达目的地

561
00:29:09,650 --> 0:29:12,419
并且如果旅程有多重路线选择

562
00:29:12,486 --> 0:29:14,855
会自动显示一个更多路线按钮

563
00:29:15,756 --> 0:29:19,092
那会允许你的用户

564
00:29:19,593 --> 0:29:21,161
并选择他们所需要的路线

565
00:29:22,296 --> 0:29:25,766
让我们看看在CarPlay

566
00:29:25,832 --> 0:29:28,569
创建体验所需要了解的类和方法

567
00:29:30,170 --> 0:29:31,672
第一个是CPTrip

568
00:29:32,105 --> 0:29:35,809
这是给用户显示即将进行的旅程

569
00:29:36,243 --> 0:29:38,579
它包括一些项 比如起点和目的地

570
00:29:38,979 --> 0:29:42,816
以及多个CPRouteChoice 每一条

571
00:29:44,151 --> 0:29:47,988
CPTravelEstimates

572
00:29:48,055 --> 0:29:49,690
以及个人操作

573
00:29:50,724 --> 0:29:54,928
在你的地图模板上

574
00:29:55,262 --> 0:29:57,898
你需要在地图模板上调用

575
00:29:57,965 --> 0:29:59,700
它要带有你所创建的

576
00:30:00,734 --> 0:30:03,003
因为用户要在单一路线之间切换

577
00:30:03,136 --> 0:30:05,105
那么你就有机会更新

578
00:30:05,172 --> 0:30:06,940
在窗口中所显示的内容了

579
00:30:07,608 --> 0:30:11,311
将会调用使用routeChoice的

580
00:30:11,378 --> 0:30:13,180
并且你可以修改所显示的内容

581
00:30:14,248 --> 0:30:18,285
这是一个了解地图模板

582
00:30:18,352 --> 0:30:20,254
如何绘制

583
00:30:21,321 --> 0:30:23,457
你要确保你所绘制的内容

584
00:30:23,524 --> 0:30:25,225
对你的用户可见

585
00:30:26,126 --> 0:30:29,129
为此我们需要利用现有的

586
00:30:29,196 --> 0:30:30,464
你可能已经很熟悉它了

587
00:30:31,298 --> 0:30:34,968
随着地图模板中的内容变更

588
00:30:35,035 --> 0:30:39,039
你窗口中的safeArea插入

589
00:30:39,573 --> 0:30:42,276
你只需要实施

590
00:30:42,342 --> 0:30:43,977
并紧密关注那些插入

591
00:30:44,044 --> 0:30:46,146
并确保你的内容

592
00:30:47,748 --> 0:30:49,416
现在让我们谈谈路线指引

593
00:30:50,484 --> 0:30:54,621
与预览相似 你的app可以向

594
00:30:54,988 --> 0:30:57,257
并让它绘制路线指引卡片

595
00:30:57,758 --> 0:31:00,794
卡片内填充有信息

596
00:30:57,758 --> 0:31:00,794
卡片内填充有信息

597
00:31:01,161 --> 0:31:03,230
你离目的地还有多远

598
00:31:04,198 --> 0:31:06,800
当然了 还有如何到达目的地的指示

599
00:31:06,867 --> 0:31:08,802
比如左拐或继续直行

600
00:31:11,138 --> 0:31:13,173
让我们看看你需要了解哪些信息

601
00:31:13,240 --> 0:31:16,410
从而在CarPlay车载框架中

602
00:31:19,346 --> 0:31:21,515
CPMapTemplateDelegate

603
00:31:21,849 --> 0:31:23,217
你可以从这两个地方开始

604
00:31:23,684 --> 0:31:25,986
首先 当用户从路线预览中

605
00:31:26,653 --> 0:31:29,423
会在模板委托中调用使用了

606
00:31:29,489 --> 0:31:30,591
startedTrip

607
00:31:31,191 --> 0:31:35,062
这是你要开始导航到目的地的指示

608
00:31:35,128 --> 0:31:37,097
通过用户所选择的路线

609
00:31:38,232 --> 0:31:41,502
这也是何时开始在app中

610
00:31:41,568 --> 0:31:44,304
亦开始向CarPlay车载框架

611
00:31:45,138 --> 0:31:46,006
你需要调用

612
00:31:46,073 --> 0:31:49,209
在你的地图模板上

613
00:31:49,576 --> 0:31:52,880
这将给你提供

614
00:31:53,547 --> 0:31:56,116
这就是你要管理

615
00:31:58,218 --> 0:32:00,621
使用CPNavigationSession

616
00:31:58,218 --> 0:32:00,621
使用CPNavigationSession

617
00:32:00,954 --> 0:32:02,422
你可以设置即将发生的移动方向

618
00:32:02,789 --> 0:32:05,492
并且系统会自动显示一个主方向

619
00:32:05,893 --> 0:32:09,196
如果你提供了第二个移动方向

620
00:32:09,263 --> 0:32:10,264
显示在路线指引卡上

621
00:32:11,465 --> 0:32:13,901
然后你就可以

622
00:32:14,134 --> 0:32:17,437
来持续更新

623
00:32:17,504 --> 0:32:20,440
并让你的用户了解

624
00:32:21,308 --> 0:32:24,178
你的app很可能会重放音频提示

625
00:32:24,244 --> 0:32:25,412
从而让用户了解信息

626
00:32:25,979 --> 0:32:28,282
为此你需要确保你的音频会话

627
00:32:28,348 --> 0:32:30,284
已针对CarPlay车载系统

628
00:32:31,118 --> 0:32:34,922
我们必须要记住 当我们在车里时

629
00:32:34,988 --> 0:32:37,824
来自iOS系统的音频源

630
00:32:37,891 --> 0:32:40,194
来自汽车系统的音频源

631
00:32:40,994 --> 0:32:42,729
要用

632
00:32:42,796 --> 0:32:44,831
配置你的音频会话

633
00:32:45,232 --> 0:32:47,167
因为这会让CarPlay车载系统

634
00:32:47,768 --> 0:32:50,103
了解何时可以适当地躲避音频源

635
00:32:50,170 --> 0:32:51,605
无论它来自哪里

636
00:32:51,672 --> 0:32:56,043
你还可以用类别选项配置

637
00:32:56,109 --> 0:32:58,111
和interruptSpokenAudio

638
00:32:58,178 --> 0:33:02,149
这将帮助确保你的音频

639
00:32:58,178 --> 0:33:02,149
这将帮助确保你的音频

640
00:33:03,350 --> 0:33:07,454
那么接下来会发生什么？

641
00:33:07,855 --> 0:33:11,225
你想继续提供

642
00:33:11,291 --> 0:33:13,861
从而当他们需要时 帮助他们转弯

643
00:33:15,762 --> 0:33:17,397
若他们突然离开现有路线会如何？

644
00:33:17,464 --> 0:33:20,634
你可能要计算一条新路线

645
00:33:21,034 --> 0:33:22,236
你可设置一个暂停原因

646
00:33:22,302 --> 0:33:24,505
它会向用户显示一个

647
00:33:25,839 --> 0:33:29,209
也许会有一条新路线

648
00:33:29,276 --> 0:33:32,412
那么你可以利用导航警告

649
00:33:32,479 --> 0:33:33,914
就在地图模板上

650
00:33:35,048 --> 0:33:38,619
最终他们会到达目的地

651
00:33:39,553 --> 0:33:41,455
我们谈了很多东西

652
00:33:41,522 --> 0:33:43,957
在汽车显示屏上

653
00:33:44,591 --> 0:33:48,495
但我们知道CarPlay车载用户

654
00:33:48,762 --> 0:33:51,431
比如我们最喜欢的

655
00:33:52,533 --> 0:33:53,967
当app在后台时发生什么？

656
00:33:54,034 --> 0:33:56,703
当你需要向用户

657
00:33:57,538 --> 0:34:01,708
你可以提供横幅通知

658
00:33:57,538 --> 0:34:01,708
你可以提供横幅通知

659
00:34:01,775 --> 0:34:03,410
当你的app在后台时会显示

660
00:34:03,944 --> 0:34:08,415
这适用于移动方向更新以及导航警告

661
00:34:09,949 --> 0:34:11,051
在你的地图模板委托中

662
00:34:11,118 --> 0:34:13,387
有三个方法可以实施

663
00:34:14,087 --> 0:34:17,090
第一个是mapTemplate

664
00:34:17,558 --> 0:34:20,860
当你设置了新的移动方向

665
00:34:21,328 --> 0:34:22,596
系统就会调用这个方法

666
00:34:22,728 --> 0:34:26,934
如果你返回真

667
00:34:27,000 --> 0:34:28,202
一个横幅通知

668
00:34:29,335 --> 0:34:31,972
如果你已经针对某个移动方向

669
00:34:32,039 --> 0:34:34,007
你只需要简单更新旅行预估

670
00:34:34,274 --> 0:34:37,043
带travelEstimates的mapTemplate

671
00:34:37,110 --> 0:34:37,945
移动方向

672
00:34:38,011 --> 0:34:41,581
将会被调用 从而允许你更新

673
00:34:41,982 --> 0:34:44,284
那么 现在不需要一个新的通知

674
00:34:44,351 --> 0:34:46,920
你可以简单地更新

675
00:34:47,855 --> 0:34:52,092
对于导航警告

676
00:34:52,159 --> 0:34:53,060
使用mapTemplate

677
00:34:53,126 --> 0:34:55,495
shouldShowNotificationFor

678
00:34:56,429 --> 0:34:59,933
我想邀请Jonathan

679
00:35:00,000 --> 0:35:01,835
我们如何把

680
00:35:01,902 --> 0:35:02,769
与CarPlay车载框架集成

681
00:35:02,836 --> 0:35:06,106
从而实现路线预览和路线指引

682
00:35:10,844 --> 0:35:11,678
谢谢Mike

683
00:35:12,479 --> 0:35:15,482
让我们快速了解一些代码

684
00:35:15,549 --> 0:35:19,086
在CarPlay车载中提供导航

685
00:35:20,754 --> 0:35:22,289
当用户选择某个目的地后

686
00:35:22,756 --> 0:35:25,993
我们会抓取那个地标并把当前位置

687
00:35:26,059 --> 0:35:30,264
和目的地提交给我们的导航引擎

688
00:35:31,365 --> 0:35:33,967
为了达到演示目的

689
00:35:34,168 --> 0:35:38,172
但你的导航引擎可以提供

690
00:35:38,238 --> 0:35:39,106
如果适用

691
00:35:39,306 --> 0:35:43,243
此外 我们要包含一些额外的细节

692
00:35:43,310 --> 0:35:44,178
针对某一路线

693
00:35:44,811 --> 0:35:46,780
我们要创建一个CPTrip并调用

694
00:35:46,847 --> 0:35:51,285
showTripPreviews来告诉CarPlay

695
00:35:51,852 --> 0:35:56,523
最后我们要更新预估

696
00:35:57,024 --> 0:35:59,293
让我们快速了解一下要如何提供

697
00:35:59,359 --> 0:36:00,928
CarPlay车载系统导航

698
00:35:59,359 --> 0:36:00,928
CarPlay车载系统导航

699
00:36:03,797 --> 0:36:07,100
当我们的用户已经选择了一条路线

700
00:36:07,301 --> 0:36:10,204
我们首先要隐藏

701
00:36:11,405 --> 0:36:14,107
我们要告诉地图模板开始导航会话

702
00:36:14,341 --> 0:36:16,476
并且我们可以把会话改为加载状态

703
00:36:16,543 --> 0:36:18,078
当我们计算移动方向时

704
00:36:18,579 --> 0:36:22,683
我们要从导航引擎中

705
00:36:23,150 --> 0:36:24,551
最后但同样重要的是

706
00:36:24,618 --> 0:36:27,821
我们会向导航会话提供第一个指示

707
00:36:27,888 --> 0:36:29,356
我们现已准备好驾车出发了

708
00:36:29,423 --> 0:36:30,757
在行动中查看一下具体情况

709
00:36:38,532 --> 0:36:42,769
好的 让我们浏览一下

710
00:36:44,571 --> 0:36:47,975
当我们轻触其中一个地点时

711
00:36:48,041 --> 0:36:50,711
弹回到地图模板

712
00:36:51,578 --> 0:36:54,848
如果我们轻触这里的开始按钮

713
00:36:55,215 --> 0:36:57,317
我们会看到app进入导航模式

714
00:36:58,051 --> 0:37:02,089
你的app还可以更新导航栏

715
00:36:58,051 --> 0:37:02,089
你的app还可以更新导航栏

716
00:37:02,155 --> 0:37:05,926
在导航模式

717
00:37:06,360 --> 0:37:08,128
看起来我们做得非常棒

718
00:37:09,296 --> 0:37:13,267
当我们到达目的地后

719
00:37:15,736 --> 0:37:17,771
这就是CarPlay车载框架中的

720
00:37:18,305 --> 0:37:21,308
让我们回顾一下今天所讲的内容

721
00:37:22,109 --> 0:37:25,512
我们演示了一些关于CarPlay

722
00:37:25,579 --> 0:37:28,549
和优化 为了让你的用户

723
00:37:29,249 --> 0:37:32,219
我们引入了全新CarPlay框架

724
00:37:32,486 --> 0:37:34,821
用于导航和指路app

725
00:37:35,522 --> 0:37:39,226
你的app可以顺畅地

726
00:37:39,526 --> 0:37:42,996
你是最棒的导航专家

727
00:37:43,263 --> 0:37:45,832
在你漂亮的app中绘制漂亮的地图

728
00:37:46,300 --> 0:37:47,734
我们会替你处理其余的事

729
00:37:48,402 --> 0:37:49,970
你可以绘制你的地图模板

730
00:37:50,037 --> 0:37:52,773
使用CPMapTemplate

731
00:37:52,840 --> 0:37:54,274
来管理导航

732
00:37:54,341 --> 0:37:56,276
并按照需要显示其它模板

733
00:37:56,343 --> 0:37:59,079
用于呈现信息和处理用户交互

734
00:38:00,581 --> 0:38:03,750
如果你有任何疑问

735
00:38:03,817 --> 0:38:07,454
今天稍晚些时候

736
00:38:07,921 --> 0:38:08,789
你还可以浏览

737
00:38:08,856 --> 0:38:11,992
developer.apple.com/carplay

738
00:38:12,326 --> 0:38:16,196
此外 你已经拥有了创建很棒的

739
00:38:16,363 --> 0:38:19,099
我们非常期待看到你们所创建的app

740
00:38:19,166 --> 0:38:20,133
非常感谢
