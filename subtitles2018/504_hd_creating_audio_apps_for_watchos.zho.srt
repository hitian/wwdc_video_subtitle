1
00:00:07,516 --> 0:00:14,500
[ 音乐 ]

2
00:00:20,516 --> 0:00:26,936
[ 掌声 ]

3
00:00:27,436 --> 0:00:29,726
&gt;&gt; 大家好 我叫 Neil Desai

4
00:00:29,726 --> 0:00:31,456
是 watchOS 框架工程师  

5
00:00:31,456 --> 0:00:33,116
我很激动能在这里

6
00:00:33,116 --> 0:00:34,216
探讨如何为

7
00:00:34,216 --> 0:00:36,116
watchOS 创建一些杰出的音频 App  

8
00:00:36,616 --> 0:00:38,276
说实话  我已经等待了

9
00:00:38,276 --> 0:00:39,336
超过一年才轮到我跟大家

10
00:00:39,336 --> 0:00:40,566
探讨这些  我真十分开心

11
00:00:40,566 --> 0:00:42,626
能站在这里 让我们直截了当

12
00:00:42,626 --> 0:00:43,616
进入正题吧  

13
00:00:44,576 --> 0:00:46,596
在 watchOS 4 中 我们展示了一个

14
00:00:46,596 --> 0:00:48,906
修订版的音乐和广播 App

15
00:00:48,906 --> 0:00:51,016
在 watchOS 5 中 我们展示了一个

16
00:00:51,016 --> 0:00:52,386
全新的播客 App 

17
00:00:52,486 --> 0:00:53,906
我们发现用户

18
00:00:53,986 --> 0:00:56,156
十分喜欢

19
00:00:56,156 --> 0:00:58,366
在路上或者

20
00:00:58,366 --> 0:00:59,286
在锻炼的时候播放音乐  

21
00:01:02,046 --> 0:01:02,686
我们也发现了

22
00:01:02,686 --> 0:01:04,275
用户真的特别喜欢能够

23
00:01:04,275 --> 0:01:05,696
远程控制

24
00:01:05,696 --> 0:01:06,776
在另一个设备上

25
00:01:06,776 --> 0:01:07,316
播放的音乐

26
00:01:07,766 --> 0:01:09,956
比如你的 iPhone 或者 HomePod  

27
00:01:10,296 --> 0:01:12,016
我也特别喜欢这一项功能  

28
00:01:12,016 --> 0:01:13,636
我很喜欢能够

29
00:01:13,636 --> 0:01:15,916
在 iPhone 上播放音乐

30
00:01:15,916 --> 0:01:17,196
于此同时也可以

31
00:01:17,196 --> 0:01:18,716
通过我的手表

32
00:01:18,716 --> 0:01:19,456
直接控制播放的设置 比如音量  

33
00:01:19,916 --> 0:01:20,996
这是个伟大的功能  

34
00:01:21,756 --> 0:01:23,426
今天 在 watchOS 5 上

35
00:01:23,426 --> 0:01:25,086
我们将展示如何创造

36
00:01:25,086 --> 0:01:27,016
美好的体验 如同

37
00:01:27,016 --> 0:01:28,396
在 Keynote 上看到的一样

38
00:01:28,396 --> 0:01:30,466
在 Audible 中和在

39
00:01:30,536 --> 0:01:31,626
Pandora 中能做到的一样 

40
00:01:32,496 --> 0:01:34,516
并且他们可以使用

41
00:01:34,516 --> 0:01:36,756
一些 watchOS 5 提供的

42
00:01:36,756 --> 0:01:37,726
新的功能

43
00:01:37,766 --> 0:01:39,526
今天我要介绍

44
00:01:39,526 --> 0:01:41,436
我们是如何做到这些同样的事情的

45
00:01:42,216 --> 0:01:43,156
为了达成这个目标 我们先要

46
00:01:43,156 --> 0:01:44,686
讲一下四个今天的主要主题  

47
00:01:44,966 --> 0:01:46,736
我们将要介绍

48
00:01:46,736 --> 0:01:48,276
原生的控制 以及如何

49
00:01:48,276 --> 0:01:49,926
把我们的系统控制

50
00:01:50,266 --> 0:01:51,926
直接嵌入你的 App

51
00:01:52,826 --> 0:01:53,856
我们要介绍如何

52
00:01:53,856 --> 0:01:55,846
把信息内容推送到手表上  

53
00:01:56,196 --> 0:01:57,496
在我们获得了信息内容之后

54
00:01:57,496 --> 0:01:59,186
如何为用户播放

55
00:01:59,186 --> 0:02:00,416
一些东西  

56
00:01:59,186 --> 0:02:00,416
一些东西  

57
00:02:01,716 --> 0:02:02,766
最后我们会再

58
00:02:02,766 --> 0:02:04,296
梳理一遍整体的音频体验

59
00:02:04,296 --> 0:02:05,656
以及如何给我们的用户们

60
00:02:05,656 --> 0:02:07,296
提供丰富的体验  

61
00:02:07,296 --> 0:02:08,536
并且这些体验要始终良好地

62
00:02:08,536 --> 0:02:09,356
集成在整个系统里  

63
00:02:11,276 --> 0:02:13,326
首先让我们先探讨原生的控制吧  

64
00:02:15,776 --> 0:02:17,736
在 watchOS 5 中 我们展示了两种

65
00:02:17,736 --> 0:02:19,046
新的控制并且它们

66
00:02:19,046 --> 0:02:20,936
都可以直接植入在你的 App 之中  

67
00:02:21,926 --> 0:02:23,756
第一个是 Now Playing

68
00:02:23,756 --> 0:02:25,696
视图 它可以被嵌入到你的

69
00:02:25,696 --> 0:02:26,746
watchOS App 之中  

70
00:02:27,136 --> 0:02:29,306
这个很适合用于

71
00:02:29,306 --> 0:02:31,966
播放那些也许不属于你的内容  

72
00:02:32,456 --> 0:02:34,876
你还可以嵌入一个音量

73
00:02:34,876 --> 0:02:36,286
控制 这样你可以做一个

74
00:02:36,286 --> 0:02:38,166
自己定制的 UI 来方便用户

75
00:02:38,166 --> 0:02:40,016
控制音量  

76
00:02:41,146 --> 0:02:42,306
你也许会在想

77
00:02:42,306 --> 0:02:45,686
这个 Now Playing 界面 到底什么时候才会

78
00:02:45,686 --> 0:02:47,446
允许用户

79
00:02:47,526 --> 0:02:49,646
控制那些音频内容却不属于

80
00:02:49,646 --> 0:02:50,986
我的音频播放呢

81
00:02:52,086 --> 0:02:53,676
让我来举个例子  

82
00:02:53,676 --> 0:02:54,756
我自己在使用健身 App 的时候

83
00:02:54,756 --> 0:02:55,406
就是这么做的  

84
00:02:55,846 --> 0:02:57,606
我正在做 HIIT 健身  

85
00:02:57,606 --> 0:02:58,636
我向左划一下  

86
00:02:58,636 --> 0:03:00,426
我需要一个健身背景音乐 “Eye of the

87
00:02:58,636 --> 0:03:00,426
我需要一个健身背景音乐 “Eye of the

88
00:03:00,426 --> 0:03:02,096
Tiger” 我有一点点

89
00:03:02,096 --> 0:03:03,376
无趣 但是我实际上

90
00:03:03,376 --> 0:03:05,016
真的有时候在健身时候

91
00:03:05,016 --> 0:03:05,956
听这首歌 我很喜欢这首歌  

92
00:03:06,406 --> 0:03:07,596
并且这是一个很棒的体验

93
00:03:07,596 --> 0:03:08,896
只要这么划过来

94
00:03:08,896 --> 0:03:11,546
就可以让用户控制播放  

95
00:03:12,236 --> 0:03:15,066
所以如果你在制作一个健身 App 

96
00:03:15,066 --> 0:03:16,736
你也可以做出同样的

97
00:03:16,736 --> 0:03:18,006
用户体验 只要你

98
00:03:18,006 --> 0:03:19,856
把 Now Playing 直接嵌入到

99
00:03:19,856 --> 0:03:20,656
你的 App 里  

100
00:03:22,036 --> 0:03:22,826
让我们探讨一下

101
00:03:22,826 --> 0:03:24,846
Now Playing 的一些特性  

102
00:03:24,846 --> 0:03:26,796
第一个我要说的是

103
00:03:26,796 --> 0:03:28,346
Digital Crown

104
00:03:28,346 --> 0:03:29,426
它控制了音量

105
00:03:30,006 --> 0:03:31,396
正因为如此

106
00:03:31,396 --> 0:03:32,536
你要把这个视图

107
00:03:32,536 --> 0:03:34,026
放在不可滚动的控制器里  

108
00:03:34,526 --> 0:03:36,326
比如在我的这个 App 里

109
00:03:36,326 --> 0:03:38,686
我实际上仅仅把

110
00:03:38,686 --> 0:03:40,126
Now Playing 直接塞进了

111
00:03:40,126 --> 0:03:41,886
控制器里  

112
00:03:41,886 --> 0:03:43,746
或者你可以重新加载一个

113
00:03:43,746 --> 0:03:45,726
包含这个控制器的页面  

114
00:03:45,726 --> 0:03:47,486
或者把他放到一个类似健身 App

115
00:03:47,806 --> 0:03:48,966
的接口之中  

116
00:03:49,436 --> 0:03:52,366
之后这个视图

117
00:03:52,366 --> 0:03:54,646
就可以自动控制他所代表的内容  

118
00:03:54,736 --> 0:03:56,606
这意味着无论是提供播放

119
00:03:56,606 --> 0:03:58,256
的原始数据的 iPhone 

120
00:03:58,256 --> 0:03:59,766
还是手表也好

121
00:04:00,236 --> 0:04:01,356
这个视图将会

122
00:04:01,356 --> 0:04:01,966
为你把其他事情都处理好  

123
00:04:01,966 --> 0:04:03,846
你完全不必担心这个问题  

124
00:04:04,916 --> 0:04:06,466
最后 Now Playing

125
00:04:06,466 --> 0:04:07,696
可以自动获取你

126
00:04:07,696 --> 0:04:09,426
App 色调 所以

127
00:04:09,426 --> 0:04:10,956
它能跟你的 App 的外观与感觉

128
00:04:10,956 --> 0:04:11,846
匹配起来  

129
00:04:13,076 --> 0:04:15,616
现在 我们在 Interface Builder

130
00:04:15,616 --> 0:04:17,336
使用一下它  

131
00:04:17,726 --> 0:04:19,446
我们现打开了 Xcode  

132
00:04:19,446 --> 0:04:20,916
选定了 Object Library  

133
00:04:21,016 --> 0:04:22,696
之后我们可以拖动

134
00:04:22,696 --> 0:04:24,866
Now Playing 到控制器里  

135
00:04:25,176 --> 0:04:26,496
一旦我的用户点进来  

136
00:04:26,496 --> 0:04:28,496
所有的事情都为你做好了

137
00:04:28,496 --> 0:04:29,816
这个系统会把其他工作都处理好  

138
00:04:30,196 --> 0:04:32,096
就是如此简单  

139
00:04:33,536 --> 0:04:35,046
这就是我们的 Now Playing 视图  

140
00:04:35,746 --> 0:04:37,386
我们现在说说音量控制

141
00:04:38,176 --> 0:04:39,606
这个音量控制

142
00:04:39,606 --> 0:04:41,616
可以设置成控制

143
00:04:41,616 --> 0:04:43,936
iPhone 的音量或本地手表的音量  

144
00:04:44,616 --> 0:04:46,216
跟 Now Playing 一样

145
00:04:46,216 --> 0:04:47,606
我们会获取

146
00:04:47,606 --> 0:04:48,946
App 的色调

147
00:04:48,946 --> 0:04:51,896
并且在使用这个控制的时候调整好它  

148
00:04:54,636 --> 0:04:58,426
当用户在在转动

149
00:04:58,426 --> 0:05:00,126
Digital Crown 的时候

150
00:04:58,426 --> 0:05:00,126
Digital Crown 的时候

151
00:05:00,126 --> 0:05:01,646
音量控制的色调

152
00:05:01,956 --> 0:05:04,026
将会调整到系统绿色

153
00:05:04,026 --> 0:05:05,746
以匹配其他的部分  

154
00:05:06,276 --> 0:05:09,796
至于用这个音量控制调整

155
00:05:09,796 --> 0:05:12,376
本地播放的音量

156
00:05:12,626 --> 0:05:14,596
还是 iPhone 的音量

157
00:05:14,596 --> 0:05:18,506
在 Attributes Inspector 有个选择框

158
00:05:18,506 --> 0:05:19,746
可以控制本地音量  

159
00:05:20,486 --> 0:05:21,696
如果你没有选中它  

160
00:05:21,926 --> 0:05:22,866
这个音量控制

161
00:05:22,866 --> 0:05:24,316
将默认控制 iPhone 上的音量 

162
00:05:25,086 --> 0:05:27,056
如果你选中了它

163
00:05:27,166 --> 0:05:28,676
音量控制将控制

164
00:05:28,676 --> 0:05:29,676
手表上的音量 

165
00:05:30,216 --> 0:05:32,656
如果你的 App

166
00:05:32,656 --> 0:05:34,366
有多个应用场景  

167
00:05:34,366 --> 0:05:35,506
分别要远程控制播放内容

168
00:05:35,506 --> 0:05:37,466
或者要控制本地播放内容  

169
00:05:37,466 --> 0:05:39,236
这样的话  

170
00:05:39,236 --> 0:05:40,446
你可能需要多个控制器

171
00:05:40,446 --> 0:05:41,616
来控制着不同的音量

172
00:05:41,616 --> 0:05:43,136
你需要在设计的时候

173
00:05:43,136 --> 0:05:44,436
就要做好这些相关的决定

174
00:05:45,516 --> 0:05:47,176
好的 这些就是

175
00:05:47,176 --> 0:05:49,276
我们的系统控制的内容 

176
00:05:49,276 --> 0:05:50,466
接下来让我们介绍一下

177
00:05:50,466 --> 0:05:51,996
如何在实际操作中将

178
00:05:51,996 --> 0:05:53,266
内容数据传递给设备

179
00:05:55,096 --> 0:05:57,606
我做了一个

180
00:05:57,606 --> 0:05:59,306
博物馆导览的 App 

181
00:05:59,466 --> 0:06:01,166
我希望我的用户

182
00:05:59,466 --> 0:06:01,166
我希望我的用户

183
00:06:01,456 --> 0:06:03,336
直接点一下就可以在博物馆里

184
00:06:03,336 --> 0:06:04,836
听导览并且

185
00:06:04,836 --> 0:06:06,116
这是一个在手表上很棒的应用体验是  

186
00:06:06,116 --> 0:06:09,496
因为我们可以把手机放到一边  

187
00:06:09,496 --> 0:06:10,716
我们可以在

188
00:06:10,716 --> 0:06:12,666
手腕之上得到完整的体验并且

189
00:06:12,666 --> 0:06:14,656
可以欣赏身边的艺术  

190
00:06:15,046 --> 0:06:17,936
比如说我做了一个

191
00:06:17,936 --> 0:06:19,706
缓冲区让用户

192
00:06:19,816 --> 0:06:23,446
在去博物馆的路上下载内容  

193
00:06:24,236 --> 0:06:25,616
这样的话 我需要

194
00:06:25,616 --> 0:06:27,926
使用 URLSession 然后

195
00:06:27,926 --> 0:06:29,726
直接从服务器获取数据

196
00:06:29,726 --> 0:06:31,906
让手表自己把数据下载下来  

197
00:06:33,326 --> 0:06:35,546
让我们看一眼代码

198
00:06:35,546 --> 0:06:38,026
是如何实现的  

199
00:06:38,226 --> 0:06:39,256
请看这里  

200
00:06:39,256 --> 0:06:41,626
我有一个 IBAction 绑定到了

201
00:06:41,626 --> 0:06:43,206
我的 WK Interface 按钮  

202
00:06:43,446 --> 0:06:44,246
首先你需要

203
00:06:44,246 --> 0:06:46,776
注意的就是 isFrontmostTimeoutExtended

204
00:06:46,816 --> 0:06:48,776
的属性设置成了 true  

205
00:06:50,006 --> 0:06:51,096
我们等下还要再讨论

206
00:06:51,096 --> 0:06:52,546
一下这件事情  

207
00:06:52,686 --> 0:06:53,586
但是我想说的是

208
00:06:53,586 --> 0:06:55,416
我们的用户

209
00:06:55,416 --> 0:06:57,526
和设备进行了交互 

210
00:06:57,616 --> 0:07:00,526
可以说当用户再一次抬起手时

211
00:06:57,616 --> 0:07:00,526
可以说当用户再一次抬起手时

212
00:07:00,526 --> 0:07:01,356
他们希望看到

213
00:07:01,356 --> 0:07:02,076
我们的 App  

214
00:07:02,586 --> 0:07:04,476
因为我们延长了

215
00:07:04,476 --> 0:07:05,946
最前超时 我们从

216
00:07:05,946 --> 0:07:07,266
系统得到了更多的优先级

217
00:07:07,266 --> 0:07:09,256
来帮助我们使用的 URLSessions  

218
00:07:09,636 --> 0:07:10,766
同样的 这个我们

219
00:07:10,766 --> 0:07:11,776
等一下再说

220
00:07:12,186 --> 0:07:15,656
当然了 用户在任何时候

221
00:07:15,656 --> 0:07:16,926
都可以把手垂下

222
00:07:17,176 --> 0:07:18,476
所以我使用

223
00:07:18,476 --> 0:07:19,416
backgroundSession 来保证这一点

224
00:07:19,826 --> 0:07:21,276
这样的话当我的 App

225
00:07:21,276 --> 0:07:22,516
进入后台

226
00:07:22,516 --> 0:07:23,886
下载还在继续

227
00:07:24,566 --> 0:07:26,186
然后 我们可以直接启动

228
00:07:26,186 --> 0:07:27,706
下载任务然后

229
00:07:27,906 --> 0:07:28,816
将它忽略 

230
00:07:29,686 --> 0:07:30,926
当你在构建这样的

231
00:07:30,926 --> 0:07:32,886
用户体验时候 你希望

232
00:07:32,886 --> 0:07:34,556
显示下载进度

233
00:07:34,626 --> 0:07:36,216
并且当然要处理各种错误

234
00:07:36,586 --> 0:07:40,406
让我们看看这是如何实现的  

235
00:07:40,406 --> 0:07:41,926
看一下这里我建造了一个类

236
00:07:41,926 --> 0:07:43,796
DownloadManager 它是我的

237
00:07:44,026 --> 0:07:45,536
SessionTaskDelegate 也是

238
00:07:45,566 --> 0:07:47,176
URLSessionDownload Delegate  

239
00:07:47,666 --> 0:07:49,886
在第一个函数里

240
00:07:49,886 --> 0:07:51,296
我可以获取总共下载了的

241
00:07:51,296 --> 0:07:52,646
数据大小并把它除以

242
00:07:52,646 --> 0:07:54,076
要写入的总字节数  

243
00:07:54,356 --> 0:07:55,366
这样 我们可以获得

244
00:07:55,366 --> 0:07:56,676
某个下载任务的进度  

245
00:07:56,676 --> 0:07:58,606
在 URLSession

246
00:07:59,006 --> 0:08:00,796
提醒我并且给我发出相关

247
00:07:59,006 --> 0:08:00,796
提醒我并且给我发出相关

248
00:08:00,796 --> 0:08:01,436
信息的时候

249
00:08:01,926 --> 0:08:04,086
这样一来 我可以在

250
00:08:04,086 --> 0:08:07,026
UI 上更新下载进度  

251
00:08:07,726 --> 0:08:10,266
之后当下载完成时

252
00:08:10,266 --> 0:08:12,316
我当然可以

253
00:08:12,316 --> 0:08:13,686
操作文件 我也许

254
00:08:13,686 --> 0:08:15,426
想要发送一个通知

255
00:08:15,426 --> 0:08:17,156
提醒用户

256
00:08:17,156 --> 0:08:18,246
文件已经准备好播放了  

257
00:08:18,766 --> 0:08:21,976
当然了 我的程序

258
00:08:21,976 --> 0:08:22,936
也会调用 didCompleteWithError   

259
00:08:22,936 --> 0:08:24,946
用于适当地清理

260
00:08:24,946 --> 0:08:26,266
并处理该点

261
00:08:26,496 --> 0:08:28,066
任何存在的

262
00:08:28,066 --> 0:08:28,916
任何错误

263
00:08:29,946 --> 0:08:31,466
这非常棒  

264
00:08:31,466 --> 0:08:32,976
使用 URLSession 我们可以

265
00:08:32,976 --> 0:08:34,265
直接把数据下载到手表上 

266
00:08:34,816 --> 0:08:36,416
但有时 iPhone

267
00:08:36,416 --> 0:08:38,056
上已经有了数据了

268
00:08:39,106 --> 0:08:40,576
这样的话我们可以用

269
00:08:40,576 --> 0:08:44,416
WatchConnectivity 直接传送

270
00:08:42,135 --> 0:08:44,416
文件到手表上

271
00:08:48,536 --> 0:08:50,336
为了完成这个 我们可以使用

272
00:08:50,336 --> 0:08:51,426
transfer file 的 API  

273
00:08:51,426 --> 0:08:53,946
watchOS 5 有个可以

274
00:08:53,946 --> 0:08:56,256
获取传输进度的新功能  

275
00:08:57,376 --> 0:08:58,306
让我们来看一眼  

276
00:08:58,956 --> 0:09:00,546
在代码里 我们可以看到

277
00:08:58,956 --> 0:09:00,546
在代码里 我们可以看到

278
00:09:00,546 --> 0:09:02,236
WCSession FileTransfer 的 App

279
00:09:02,596 --> 0:09:03,996
正如新功能

280
00:09:03,996 --> 0:09:05,526
进度属性已经可以在

281
00:09:05,526 --> 0:09:08,166
watchOS 5 and iOS 12 查看了  

282
00:09:12,996 --> 0:09:14,666
我可以在我的 iOS 界面上

283
00:09:14,666 --> 0:09:16,186
获得 fileTransfer 

284
00:09:16,186 --> 0:09:18,966
获取进度 更新数据  

285
00:09:20,566 --> 0:09:21,476
如果你希望了解更多

286
00:09:21,476 --> 0:09:22,766
WatchConnectivity 相关内容

287
00:09:23,156 --> 0:09:24,346
网上有完备的

288
00:09:24,346 --> 0:09:25,596
示例代码 

289
00:09:25,936 --> 0:09:27,056
强烈推荐你去看一看

290
00:09:27,056 --> 0:09:28,196
simple WatchConnectivity

291
00:09:28,196 --> 0:09:29,426
的实例代码

292
00:09:29,906 --> 0:09:33,196
你可能会思考

293
00:09:33,776 --> 0:09:34,936
我们有 URLSession 也有

294
00:09:34,936 --> 0:09:36,896
WatchConnectivity 我究竟

295
00:09:37,106 --> 0:09:38,176
应该用哪个呢

296
00:09:38,176 --> 0:09:39,486
究竟什么时候这么用 会比较合理呢

297
00:09:41,016 --> 0:09:43,126
对于 URLSession 我们希望在

298
00:09:43,126 --> 0:09:45,866
在用户在手表上启动下载的时候使用它  

299
00:09:46,646 --> 0:09:48,836
然后我们将向 connectivity property

300
00:09:48,836 --> 0:09:50,676
发送请求以获取

301
00:09:50,676 --> 0:09:54,136
在那里的网络连接  

302
00:09:54,306 --> 0:09:55,476
我还要提一下

303
00:09:55,476 --> 0:09:57,006
如果 iPhone 在旁边

304
00:09:57,006 --> 0:09:58,306
那么你的请求将会

305
00:09:58,606 --> 0:10:00,336
由在信号范围内的 iPhone 进行代理中转  

306
00:09:58,606 --> 0:10:00,336
由在信号范围内的 iPhone 进行代理中转  

307
00:10:01,566 --> 0:10:02,906
如果你希望了解一些

308
00:10:03,176 --> 0:10:05,216
URLSession 的细枝末节  

309
00:10:05,486 --> 0:10:06,516
有一个去年的讲座

310
00:10:06,516 --> 0:10:07,826
可以在网上找到

311
00:10:07,826 --> 0:10:09,426
Advances in Networking Part 2  

312
00:10:09,726 --> 0:10:11,296
我强烈建议你去看一下  

313
00:10:11,816 --> 0:10:14,646
然后呢 另一方面

314
00:10:14,646 --> 0:10:16,706
对于 watchConnectivity   

315
00:10:16,706 --> 0:10:17,856
它会变得十分重要

316
00:10:17,856 --> 0:10:19,336
当用户在 iPhone 上

317
00:10:19,336 --> 0:10:20,696
启动了下载任务

318
00:10:20,696 --> 0:10:22,806
或者已经有

319
00:10:22,806 --> 0:10:23,726
内容下载好了

320
00:10:23,726 --> 0:10:25,186
并且已经没有必要

321
00:10:25,186 --> 0:10:26,596
再向服务器请求了的时候

322
00:10:28,716 --> 0:10:30,446
这两个功能 特别是

323
00:10:30,446 --> 0:10:31,646
watchConnectivity 你需要

324
00:10:31,646 --> 0:10:33,606
对用户的操作进行一定的预测  

325
00:10:34,116 --> 0:10:35,476
不要忘了告诉用户

326
00:10:35,476 --> 0:10:36,526
下载任务或者

327
00:10:36,526 --> 0:10:38,376
文件传输的任务快完成了  

328
00:10:38,376 --> 0:10:40,596
还有那些把手表放在了

329
00:10:40,596 --> 0:10:42,306
充电器上之后会进行的操作  

330
00:10:42,846 --> 0:10:45,006
比如我们自己是这么做的  

331
00:10:45,336 --> 0:10:47,156
在 Apple Watch App 中的

332
00:10:47,156 --> 0:10:49,676
Music 界面 在最上面

333
00:10:49,676 --> 0:10:51,926
我们会给用户显示

334
00:10:51,926 --> 0:10:53,516
有多少歌被实际

335
00:10:53,516 --> 0:10:54,846
传送到了手表上

336
00:10:54,846 --> 0:10:56,956
我们甚至会告诉

337
00:10:56,956 --> 0:10:59,166
用户 当 Apple Watch 连上充电器的时候

338
00:10:59,166 --> 0:11:00,216
音乐将会被同步

339
00:10:59,166 --> 0:11:00,216
音乐将会被同步

340
00:11:00,216 --> 0:11:03,156
别把这个忘了  

341
00:11:03,326 --> 0:11:04,796
好了 我们聊了

342
00:11:04,796 --> 0:11:07,186
获取内容 现在

343
00:11:07,186 --> 0:11:08,216
我们有了内容

344
00:11:08,216 --> 0:11:09,466
我们说一下如何播放它们  

345
00:11:10,466 --> 0:11:12,326
在 watchOS 上 我们有好多

346
00:11:12,326 --> 0:11:13,736
不同的工具可以使用  

347
00:11:14,186 --> 0:11:16,226
一部分工具本身

348
00:11:16,226 --> 0:11:17,546
就在 WatchKit 里面了  

349
00:11:18,036 --> 0:11:20,646
这里有带有选项的

350
00:11:20,646 --> 0:11:22,216
presentMediaPlayerController

351
00:11:22,216 --> 0:11:23,966
你可以用它

352
00:11:24,426 --> 0:11:27,086
这里也有 WKAudioFile QueuePlayer  

353
00:11:27,306 --> 0:11:29,076
你可以提供一个列表的

354
00:11:29,076 --> 0:11:30,416
播放内容 之后队列播放器

355
00:11:30,416 --> 0:11:31,506
将按照排列播放

356
00:11:31,536 --> 0:11:32,126
相应的内容  

357
00:11:32,636 --> 0:11:35,536
所以 presentMediaPlayerController

358
00:11:35,536 --> 0:11:37,256
的选项

359
00:11:37,326 --> 0:11:38,716
将显示在 UI 之上  

360
00:11:38,716 --> 0:11:40,656
所以这个控制器将给你做好其他的工作  

361
00:11:41,056 --> 0:11:42,476
你真的不需要做很多的工作  

362
00:11:42,826 --> 0:11:44,456
这是个完美的选项

363
00:11:44,456 --> 0:11:46,306
尤其对于短时内容来说

364
00:11:46,306 --> 0:11:47,176
你不用在这件事情上

365
00:11:47,176 --> 0:11:48,686
考虑太多  

366
00:11:50,096 --> 0:11:52,536
并且 WKAudioFIleQueuePlayer 是

367
00:11:52,536 --> 0:11:53,416
在后台播放

368
00:11:53,416 --> 0:11:54,736
较长的内容时

369
00:11:54,736 --> 0:11:55,706
的一个绝佳选项  

370
00:11:56,126 --> 0:11:57,346
这是一个传送带式

371
00:11:57,346 --> 0:12:00,116
的方法 有了播放的内容

372
00:11:57,346 --> 0:12:00,116
的方法 有了播放的内容

373
00:12:00,116 --> 0:12:01,726
你可以直接

374
00:12:01,726 --> 0:12:02,896
把它移交给系统

375
00:12:02,896 --> 0:12:03,916
系统会代表你

376
00:12:03,916 --> 0:12:04,426
进行播放  

377
00:12:05,006 --> 0:12:06,936
这就是

378
00:12:06,936 --> 0:12:08,736
WKAudioFileQueuePlayer 的设计目的  

379
00:12:09,086 --> 0:12:12,696
这里也有个正在工作的 AVFoundation

380
00:12:16,386 --> 0:12:19,136
所以这里有 AVAudioPlayer 和

381
00:12:19,136 --> 0:12:19,866
AVAudioEngine  

382
00:12:20,396 --> 0:12:22,966
在 watchOS 5 之前

383
00:12:22,966 --> 0:12:24,396
他被绑定在健身后台模式

384
00:12:24,396 --> 0:12:26,486
或者当你的 App

385
00:12:26,486 --> 0:12:28,196
在前台并且屏幕已经点亮的时候

386
00:12:29,406 --> 0:12:31,736
比如 Nike Run Club App

387
00:12:31,796 --> 0:12:33,086
它就干了这个

388
00:12:33,086 --> 0:12:34,346
比如你正在

389
00:12:34,346 --> 0:12:36,346
跑步并且你想要一点禅修的感觉

390
00:12:36,686 --> 0:12:39,026
你可以用 Headspace 播放

391
00:12:39,026 --> 0:12:40,586
一点冥想的辅助内容  

392
00:12:41,956 --> 0:12:44,546
在 watchOS 5 之前

393
00:12:44,546 --> 0:12:46,406
利用 AVFoundation 的后台播放

394
00:12:46,406 --> 0:12:47,756
只可能在

395
00:12:47,756 --> 0:12:49,666
这些种类的健身 App 中使用  

396
00:12:50,166 --> 0:12:52,666
在现在的 watchOS 中 

397
00:12:52,666 --> 0:12:54,296
有一个全新的

398
00:12:54,456 --> 0:12:55,746
后台模式并且

399
00:12:55,746 --> 0:12:56,716
它令我很是激动  

400
00:12:57,846 --> 0:13:00,296
让我们说一下

401
00:12:57,846 --> 0:13:00,296
让我们说一下

402
00:13:00,296 --> 0:13:01,306
我现在正在做的东西  

403
00:13:02,096 --> 0:13:04,076
有点拓宽我们的 tool kit 的感觉  

404
00:13:07,376 --> 0:13:09,806
我们有 AVFoundation 并且

405
00:13:09,806 --> 0:13:11,026
它没有绑定在

406
00:13:11,026 --> 0:13:12,156
某种后台模式

407
00:13:12,156 --> 0:13:13,996
我们就可以直接用 AVFoundation

408
00:13:13,996 --> 0:13:15,266
在后台播放中  

409
00:13:16,616 --> 0:13:18,626
我们开放了权限

410
00:13:18,626 --> 0:13:21,586
允许你 允许用户

411
00:13:21,586 --> 0:13:22,776
选择一个播放的路线  

412
00:13:22,776 --> 0:13:24,256
比如不同的

413
00:13:24,256 --> 0:13:25,196
蓝牙耳机  

414
00:13:26,176 --> 0:13:28,146
在 watchOS 5 种我们也

415
00:13:28,146 --> 0:13:29,376
开放了 MediaPlayer.

416
00:13:29,376 --> 0:13:30,636
framework 并且你可以提供

417
00:13:30,636 --> 0:13:32,186
一些 Now Playing 信息

418
00:13:32,186 --> 0:13:36,026
同时处理远程控制的指令  

419
00:13:36,026 --> 0:13:37,626
就像 Music Podcasts

420
00:13:37,626 --> 0:13:39,366
和 Radio App 中的一样

421
00:13:39,366 --> 0:13:41,056
长的内容被限定到了

422
00:13:41,406 --> 0:13:43,516
蓝牙播放 也就是说

423
00:13:43,816 --> 0:13:45,406
这是一种更好的方式来

424
00:13:45,406 --> 0:13:46,776
使你使用

425
00:13:47,236 --> 0:13:49,276
扬声器播放  

426
00:13:49,446 --> 0:13:50,906
让我们一步一步的

427
00:13:51,306 --> 0:13:52,836
来看一下

428
00:13:52,836 --> 0:13:54,386
后台较长的内容

429
00:13:54,386 --> 0:13:55,206
是如何播放的

430
00:13:55,756 --> 0:13:59,886
首先把你的音乐添加到 info.plist

431
00:13:59,886 --> 0:14:00,726
的后台模式  

432
00:13:59,886 --> 0:14:00,726
的后台模式  

433
00:14:01,166 --> 0:14:04,366
之后你建立起

434
00:14:04,366 --> 0:14:05,656
合适的 session  

435
00:14:05,656 --> 0:14:06,806
然后告诉你的系统

436
00:14:06,806 --> 0:14:07,696
你想要播放

437
00:14:07,696 --> 0:14:09,646
较长的内容在系统后台  

438
00:14:09,956 --> 0:14:13,456
你希望允许用户选择

439
00:14:13,696 --> 0:14:14,736
不同的路线  

440
00:14:14,986 --> 0:14:16,976
之后呢你去

441
00:14:16,976 --> 0:14:18,416
调用播放函数

442
00:14:18,666 --> 0:14:19,656
并且在用户

443
00:14:19,656 --> 0:14:20,916
正在播放的时候

444
00:14:20,916 --> 0:14:23,006
适时处理播放任务  

445
00:14:23,866 --> 0:14:25,606
让我们再仔细分析一下

446
00:14:25,606 --> 0:14:28,266
内部的代码  

447
00:14:29,196 --> 0:14:30,956
在 Xcode 里面的 Project

448
00:14:30,956 --> 0:14:32,486
Settings 进入到 Capabilities 里

449
00:14:32,486 --> 0:14:34,696
你可以调整

450
00:14:34,696 --> 0:14:35,876
Background Mode 的开关 你选中

451
00:14:35,876 --> 0:14:37,396
Audio 然后这就好了  

452
00:14:37,396 --> 0:14:38,206
可以进行下一步了  

453
00:14:38,576 --> 0:14:42,056
现在开始建立你的 session  

454
00:14:42,236 --> 0:14:43,186
你需要设置在 AVAudioSession 之中  

455
00:14:43,186 --> 0:14:45,126
的 routeSharingPolicy 

456
00:14:45,346 --> 0:14:46,626
到 longform 模式

457
00:14:46,726 --> 0:14:49,026
之后你调用 在 AVAudioSession 里面的

458
00:14:49,026 --> 0:14:53,726
newActivate WithOptions Completion 方法

459
00:14:53,936 --> 0:14:55,276
在它完成之后

460
00:14:55,276 --> 0:14:56,216
你就可以调用播放了  

461
00:14:57,276 --> 0:14:58,946
在你第一次

462
00:14:58,946 --> 0:15:01,106
启动 activate 函数之前到

463
00:14:58,946 --> 0:15:01,106
启动 activate 函数之前到

464
00:15:01,266 --> 0:15:02,926
completion 返回之前这段时间内

465
00:15:02,966 --> 0:15:04,676
播放路线的选择器

466
00:15:04,676 --> 0:15:06,956
将会将你的选择显示出来  

467
00:15:07,336 --> 0:15:10,516
这是播放路线的选择器的样子  

468
00:15:10,516 --> 0:15:12,616
它将会在你的 App 内

469
00:15:12,616 --> 0:15:14,126
出现 然后它会

470
00:15:14,126 --> 0:15:15,966
允许用户选择

471
00:15:15,966 --> 0:15:17,266
使用哪个蓝牙耳机

472
00:15:17,266 --> 0:15:18,746
播放内容并且

473
00:15:18,746 --> 0:15:19,656
控制播放  

474
00:15:21,376 --> 0:15:22,636
我们再说一下

475
00:15:22,636 --> 0:15:23,486
播放路线的选择器  

476
00:15:23,986 --> 0:15:25,446
还是一样 调用一下

477
00:15:25,446 --> 0:15:26,796
asynchronous activate

478
00:15:27,166 --> 0:15:29,496
函数然后它就会

479
00:15:29,496 --> 0:15:32,036
显示播放路线的选择

480
00:15:32,276 --> 0:15:33,456
之后它会返回

481
00:15:33,796 --> 0:15:34,856
completion 在你处理掉它

482
00:15:34,856 --> 0:15:36,396
之后你就可以直接调用播放  

483
00:15:36,396 --> 0:15:39,146
每次要播放东西的时候

484
00:15:39,146 --> 0:15:40,016
你都需要这么做  

485
00:15:40,236 --> 0:15:41,566
这样呢 你就可以保证

486
00:15:41,566 --> 0:15:43,846
每次在播放的时候

487
00:15:43,846 --> 0:15:45,046
都可以选择合适的播放路线  

488
00:15:46,496 --> 0:15:47,956
然后我们进入代码

489
00:15:47,956 --> 0:15:49,246
看一下如何建立 session  

490
00:15:49,886 --> 0:15:50,836
现在我们有一个

491
00:15:50,836 --> 0:15:52,576
AVAudioSession 我们要

492
00:15:52,576 --> 0:15:54,256
把我们的类别设置到播放  

493
00:15:54,816 --> 0:15:56,606
之后我们把模式设置到默认  

494
00:15:57,256 --> 0:15:58,706
最重要的是

495
00:15:58,706 --> 0:15:59,596
我们要把 route

496
00:15:59,596 --> 0:16:01,176
sharing policy 设置到 longform  

497
00:15:59,596 --> 0:16:01,176
sharing policy 设置到 longform  

498
00:16:02,076 --> 0:16:03,656
之后我们启动 session

499
00:16:03,656 --> 0:16:07,316
它将会显示路线选择器

500
00:16:07,316 --> 0:16:08,946
之后你就可以调用播放  

501
00:16:10,006 --> 0:16:11,816
现在呢 关于线路选择器

502
00:16:11,816 --> 0:16:13,666
我要指出

503
00:16:13,666 --> 0:16:15,906
我们需要把播放路线想成两种不同的方式  

504
00:16:16,766 --> 0:16:18,536
第一种是基于 Apple

505
00:16:18,536 --> 0:16:19,906
无线芯片的播放路线

506
00:16:19,906 --> 0:16:21,866
我们经常叫它 W1 路线  

507
00:16:21,866 --> 0:16:24,256
这些是 AirPods 或者

508
00:16:24,256 --> 0:16:25,506
Beats Studio Wireless 使用的

509
00:16:26,476 --> 0:16:27,386
之后呢是我们的

510
00:16:27,386 --> 0:16:28,946
普通蓝牙耳机路线  

511
00:16:29,646 --> 0:16:30,986
在讨论路线选择器的时候

512
00:16:30,986 --> 0:16:32,836
区别这两种路线

513
00:16:33,196 --> 0:16:34,496
是十分重要的  

514
00:16:37,056 --> 0:16:39,206
如果用户正连着一个

515
00:16:39,206 --> 0:16:40,726
播放路线 那么

516
00:16:40,726 --> 0:16:41,846
选择器将代表你自动

517
00:16:41,846 --> 0:16:43,186
选择这个路线  

518
00:16:43,756 --> 0:16:44,666
这点非常好因为

519
00:16:44,666 --> 0:16:46,146
选择器甚至不会

520
00:16:46,146 --> 0:16:46,796
显示在界面上 

521
00:16:47,036 --> 0:16:47,926
你将马上

522
00:16:47,926 --> 0:16:50,066
得到 completion 的回复

523
00:16:50,506 --> 0:16:53,296
如果你的用户

524
00:16:53,296 --> 0:16:55,276
连到了一个 W1 线路

525
00:16:55,306 --> 0:16:57,416
但是它正在被 iPhone 占用

526
00:16:57,416 --> 0:16:58,806
系统将会直接从 iPhone

527
00:16:58,806 --> 0:17:00,346
接管这个播放线路

528
00:16:58,806 --> 0:17:00,346
接管这个播放线路

529
00:17:00,346 --> 0:17:01,586
并把它给你的手表  

530
00:17:02,616 --> 0:17:04,646
有时候这也不会发生  

531
00:17:04,646 --> 0:17:06,126
这就是当你的

532
00:17:06,126 --> 0:17:07,435
iPhone 有更高的优先级  

533
00:17:07,866 --> 0:17:09,205
比如我正在

534
00:17:09,205 --> 0:17:11,465
我的手机上打电话  

535
00:17:11,685 --> 0:17:12,636
这时候我们将

536
00:17:12,636 --> 0:17:13,766
不会为手表接管路线

537
00:17:13,766 --> 0:17:15,286
因为打电话

538
00:17:15,776 --> 0:17:16,945
可能更加重要  

539
00:17:17,425 --> 0:17:20,195
如果没有正在工作的

540
00:17:20,195 --> 0:17:21,356
路线 路线选择器

541
00:17:21,356 --> 0:17:23,685
将会显示出你的选择

542
00:17:24,636 --> 0:17:26,425
好了 这是路线选择器

543
00:17:26,425 --> 0:17:27,576
现在我们说一下

544
00:17:27,576 --> 0:17:29,296
究竟如何

545
00:17:29,296 --> 0:17:30,316
播放内容  

546
00:17:31,306 --> 0:17:32,686
你还是只需要用

547
00:17:32,686 --> 0:17:34,836
AVAudioPlayer 和 AVAudioEngine  

548
00:17:34,996 --> 0:17:35,946
watchOS 上支持了

549
00:17:35,946 --> 0:17:38,236
很多种内容格式 

550
00:17:38,946 --> 0:17:40,116
更好的一点是

551
00:17:40,226 --> 0:17:42,586
如果你有 iOS 代码使用了

552
00:17:42,586 --> 0:17:44,006
这些类 你可以在 iOS 和 watchOS

553
00:17:44,006 --> 0:17:48,026
播放操作中共享程序框架  

554
00:17:49,096 --> 0:17:51,206
在 AVAudioEngine 中

555
00:17:51,206 --> 0:17:53,736
你实际上可以

556
00:17:53,736 --> 0:17:55,506
配合着 AVAudioPlayer

557
00:17:55,506 --> 0:17:57,446
节点播放一些 DRM 内容

558
00:17:57,996 --> 0:17:59,666
你可以播放你自己的

559
00:17:59,666 --> 0:18:01,086
DRM 内容 你自己

560
00:17:59,666 --> 0:18:01,086
DRM 内容 你自己

561
00:18:01,086 --> 0:18:03,426
进行解密 然后给用户播放  

562
00:18:03,936 --> 0:18:06,476
请特别注意一下

563
00:18:06,476 --> 0:18:09,676
watchOS 本身的

564
00:18:09,676 --> 0:18:11,866
电力 所以请在真的十分

565
00:18:11,866 --> 0:18:14,056
必要时候使用音频播放

566
00:18:14,056 --> 0:18:15,476
比如用户真的就想

567
00:18:15,476 --> 0:18:16,326
在这放音频  

568
00:18:17,316 --> 0:18:19,386
对于 AVAudioEngine 来说

569
00:18:19,386 --> 0:18:21,886
autoShutdownEnabled 属性是

570
00:18:21,966 --> 0:18:24,096
默认开启的 所以如果没有

571
00:18:24,096 --> 0:18:25,946
在 AVAudioEngine 发现活动节点

572
00:18:25,946 --> 0:18:29,026
我们会在必要的时候

573
00:18:29,026 --> 0:18:31,026
自动关闭 AVAudioEngine  

574
00:18:31,516 --> 0:18:34,796
这就是我们的播放  

575
00:18:35,366 --> 0:18:37,366
现在我们说一下

576
00:18:37,366 --> 0:18:38,436
我们的 MediaPlayer framework  

577
00:18:38,826 --> 0:18:40,076
当然了 如果你要

578
00:18:40,076 --> 0:18:41,176
提供我们的 Now Playing

579
00:18:41,176 --> 0:18:44,136
信息给系统  

580
00:18:44,586 --> 0:18:47,576
那么 Now Playing UI

581
00:18:47,576 --> 0:18:48,826
会被更新 这是一个

582
00:18:48,826 --> 0:18:50,766
系统级的播放信息

583
00:18:50,796 --> 0:18:51,886
并且它会

584
00:18:51,886 --> 0:18:54,136
基于你提供的信息更新  

585
00:18:54,556 --> 0:18:55,506
所以这些信息

586
00:18:55,506 --> 0:18:57,156
会出现在 Now Playing App 或者在

587
00:18:57,156 --> 0:18:59,386
Workout 一类的 App 之内或者

588
00:18:59,386 --> 0:19:00,636
那些嵌入了 Now Playing

589
00:18:59,386 --> 0:19:00,636
那些嵌入了 Now Playing

590
00:19:00,636 --> 0:19:02,906
的第三方 App  

591
00:19:03,376 --> 0:19:04,796
这些地方都会显示  

592
00:19:04,796 --> 0:19:07,366
接下来 靠着 MediaPlayer

593
00:19:07,366 --> 0:19:08,326
framework 我们希望处理一些

594
00:19:08,326 --> 0:19:10,386
事件和各种媒体播放

595
00:19:10,386 --> 0:19:11,626
远程控制指令

596
00:19:11,626 --> 0:19:13,396
比如在 AirPods 上的

597
00:19:13,396 --> 0:19:14,526
播放下一曲

598
00:19:15,576 --> 0:19:16,846
让我们看看这些代码

599
00:19:16,846 --> 0:19:18,146
如何提供

600
00:19:18,146 --> 0:19:19,346
Now Playing 信息的  

601
00:19:23,216 --> 0:19:26,986
在这里我们有 MPNowPlaying InfoCenter  

602
00:19:26,986 --> 0:19:28,176
我们想要获取信息 

603
00:19:28,576 --> 0:19:30,406
然后接下来设置 nowPlayingInfo  

604
00:19:30,956 --> 0:19:35,046
之后我们需要设置

605
00:19:35,046 --> 0:19:36,526
我们的 artwork 我们的 MPMedia

606
00:19:36,526 --> 0:19:37,566
ItemArtwork  

607
00:19:37,866 --> 0:19:39,126
但是这个功能现在还没有在 seed 1 发布

608
00:19:39,126 --> 0:19:40,876
它将会在 seed 2 里面出现  

609
00:19:41,456 --> 0:19:43,526
这个例子里 你提供的 artwork

610
00:19:43,526 --> 0:19:46,436
显示在 Siri watch face  

611
00:19:46,956 --> 0:19:51,606
之后呢 我们设置好了 title album  

612
00:19:51,606 --> 0:19:53,646
artwork 我们它设置到

613
00:19:53,646 --> 0:19:55,436
我们的 nowPlaying InfoCenter  

614
00:19:56,206 --> 0:19:57,726
之后我们再做一些

615
00:19:57,726 --> 0:20:01,206
类似的工作 之后我们的数据

616
00:19:57,726 --> 0:20:01,206
类似的工作 之后我们的数据

617
00:20:01,206 --> 0:20:02,946
将在 Now Playing App 中出现  

618
00:20:02,946 --> 0:20:04,816
这就是 Now Playing App 

619
00:20:05,086 --> 0:20:07,516
我提供了一些关于

620
00:20:07,516 --> 0:20:10,296
在我的 App 正在播放音频的信息  

621
00:20:10,686 --> 0:20:15,196
然后 Now Playing 与此同时

622
00:20:15,196 --> 0:20:16,306
也会被更新  

623
00:20:16,576 --> 0:20:17,726
这个例子里 最底下

624
00:20:17,726 --> 0:20:18,866
显示着 "Lights in the Sky"

625
00:20:18,866 --> 0:20:19,956
正是我正在听的  

626
00:20:20,286 --> 0:20:22,786
之后呢  关于媒体播放

627
00:20:22,786 --> 0:20:24,246
远程控制指令 也是一样的

628
00:20:24,246 --> 0:20:25,256
用 MediaPlayer framework  

629
00:20:25,256 --> 0:20:27,416
现在在 watchOS 上你可以

630
00:20:27,416 --> 0:20:29,466
随心所欲处理这些指令  

631
00:20:31,366 --> 0:20:32,876
让我们看一些代码  

632
00:20:32,876 --> 0:20:34,456
我们获取

633
00:20:34,566 --> 0:20:35,986
MPRemoteCommandCenter  

634
00:20:36,836 --> 0:20:38,266
之后 不去播放

635
00:20:38,266 --> 0:20:40,046
下一曲 我们实际上

636
00:20:40,046 --> 0:20:42,156
可以为用户

637
00:20:42,656 --> 0:20:43,546
做得更好

638
00:20:43,666 --> 0:20:44,846
所以我有这样一个函数  

639
00:20:44,966 --> 0:20:46,966
它是 enableSkipForwardCommand

640
00:20:47,396 --> 0:20:49,866
它的默认是 15 秒

641
00:20:50,816 --> 0:20:52,646
我可以设置一个喜欢的

642
00:20:52,646 --> 0:20:53,836
快进时间  

643
00:20:53,946 --> 0:20:55,966
然后我又添加了 target

644
00:20:55,966 --> 0:20:57,836
和 selector 接下来我在 command center

645
00:20:57,836 --> 0:21:00,596
启动了远程指令  

646
00:20:57,836 --> 0:21:00,596
启动了远程指令  

647
00:21:01,896 --> 0:21:03,406
如果你想了解更多

648
00:21:03,406 --> 0:21:04,616
media player framework 的信息 特别是

649
00:21:04,616 --> 0:21:05,696
媒体播放远程指令

650
00:21:05,696 --> 0:21:07,296
我很推荐

651
00:21:07,296 --> 0:21:09,236
看一下 MP remote

652
00:21:09,236 --> 0:21:11,376
command sample 的例子 这个在网上可以找到  

653
00:21:11,946 --> 0:21:12,996
这个例子里

654
00:21:12,996 --> 0:21:14,536
设置好了想要的

655
00:21:14,536 --> 0:21:17,156
快进时间之后之后 Now

656
00:21:17,156 --> 0:21:19,226
Playing App 将会被适当地调整  

657
00:21:19,226 --> 0:21:21,056
这个 Now Playing UI  无论在哪里

658
00:21:21,056 --> 0:21:22,876
都会显示减 15 秒

659
00:21:22,876 --> 0:21:25,196
或者加 15 秒

660
00:21:25,196 --> 0:21:29,396
这些都可以按你的喜好进行调整  

661
00:21:29,546 --> 0:21:32,086
好了 这就是手表上的

662
00:21:32,086 --> 0:21:34,486
音频体验或者是

663
00:21:34,486 --> 0:21:35,826
音频播放 我们再说说

664
00:21:35,826 --> 0:21:37,016
音频体验吧  

665
00:21:42,216 --> 0:21:44,286
我想说音频体验主要

666
00:21:44,286 --> 0:21:46,086
有四个主要的方面  

667
00:21:46,476 --> 0:21:47,506
有我们的自动启动

668
00:21:47,506 --> 0:21:48,536
功能让你的 App

669
00:21:48,536 --> 0:21:49,686
自动启动  

670
00:21:50,236 --> 0:21:51,696
有最前 App 状态

671
00:21:51,696 --> 0:21:54,366
并且我们如何在 App 中利用它  

672
00:21:54,936 --> 0:21:56,396
有我们的新的

673
00:21:56,396 --> 0:21:57,356
交互式通知  

674
00:21:57,716 --> 0:22:00,066
和我们的 Siri 快捷启动  

675
00:21:57,716 --> 0:22:00,066
和我们的 Siri 快捷启动  

676
00:22:03,076 --> 0:22:05,566
我们已经说了

677
00:22:05,566 --> 0:22:06,856
很多在手表上的

678
00:22:06,856 --> 0:22:09,316
播放 但是现在我要

679
00:22:09,316 --> 0:22:10,836
说一说之前聊过的东西  

680
00:22:10,836 --> 0:22:11,986
我们还想再过一遍

681
00:22:11,986 --> 0:22:14,946
远程控制的例子  

682
00:22:15,136 --> 0:22:16,886
比方说我正在 iPhone 上

683
00:22:16,886 --> 0:22:19,026
用 Apple Music 放音乐

684
00:22:19,026 --> 0:22:20,426
Now Playing App 会自动

685
00:22:20,426 --> 0:22:22,726
在我的手表上显示相关信息  

686
00:22:23,016 --> 0:22:24,486
我很喜欢这个功能  

687
00:22:24,486 --> 0:22:25,986
就像魔法一样  

688
00:22:25,986 --> 0:22:27,396
看一眼我的手腕  

689
00:22:27,396 --> 0:22:28,896
我就可以控制播放了  

690
00:22:28,896 --> 0:22:31,876
这是最酷的事情了  

691
00:22:33,306 --> 0:22:34,456
这个例子中 我们的 App

692
00:22:34,456 --> 0:22:35,626
其实在 iPhone 上

693
00:22:35,626 --> 0:22:37,226
播放内容

694
00:22:37,226 --> 0:22:38,626
之后我们的

695
00:22:38,626 --> 0:22:40,936
手表 App 就自动开启了  

696
00:22:45,356 --> 0:22:46,766
我们把这个叫做

697
00:22:46,766 --> 0:22:47,886
自动启动音频 App 功能  

698
00:22:48,386 --> 0:22:49,766
只要 Now Playing

699
00:22:49,766 --> 0:22:51,496
session 正在 iPhone 上运行

700
00:22:51,806 --> 0:22:53,426
我们的 Apple Watch App

701
00:22:53,426 --> 0:22:55,116
就会被提到最前面显示  

702
00:22:56,126 --> 0:22:57,316
并且会在 session 中

703
00:22:57,316 --> 0:22:59,766
一直保持最前  

704
00:23:00,056 --> 0:23:01,406
只要用户在

705
00:23:01,406 --> 0:23:02,726
iPhone 上听内容

706
00:23:02,986 --> 0:23:04,736
我们的 App 就会

707
00:23:04,736 --> 0:23:06,076
保持在最前

708
00:23:06,076 --> 0:23:07,296
除非用户会到别的地方  

709
00:23:08,556 --> 0:23:11,196
在 watchOS 5 上我们

710
00:23:11,196 --> 0:23:12,756
开放了 Now Playing session

711
00:23:12,756 --> 0:23:14,816
API 这能让你知道

712
00:23:14,816 --> 0:23:16,236
何时你 iPhone 上的 Now Playing session

713
00:23:16,236 --> 0:23:17,756
被启动了

714
00:23:18,156 --> 0:23:19,496
这样你可以

715
00:23:19,496 --> 0:23:21,396
直接给用户显示合适的界面  

716
00:23:21,906 --> 0:23:24,026
做这个呢 你需要

717
00:23:24,026 --> 0:23:25,486
使用 handleRemoteNow

718
00:23:25,486 --> 0:23:27,216
PlayingActivity on

719
00:23:27,216 --> 0:23:28,326
WKExtension Delegate  

720
00:23:30,026 --> 0:23:31,636
让我们看看

721
00:23:31,636 --> 0:23:35,896
具体代码是怎么用  

722
00:23:36,086 --> 0:23:36,976
看这里  

723
00:23:36,976 --> 0:23:38,196
我有了我的 extension delegate

724
00:23:39,176 --> 0:23:40,406
我可以实现

725
00:23:40,406 --> 0:23:42,316
handleRemoteNow PlayingActivity  

726
00:23:43,216 --> 0:23:44,286
首先我需要

727
00:23:44,286 --> 0:23:46,846
检查一下我的用户界面正在显示什么

728
00:23:47,476 --> 0:23:50,256
所以我调用一下 visible

729
00:23:50,256 --> 0:23:51,926
interface controller 我可以

730
00:23:51,926 --> 0:23:54,016
知道我的用户现在界面的样子

731
00:23:54,016 --> 0:23:55,856
他是否在我的 Now

732
00:23:55,856 --> 0:23:57,576
Playing UI 上 如果在那么很棒  

733
00:23:57,776 --> 0:23:58,746
就留在这里  

734
00:23:59,896 --> 0:24:01,116
如果不在

735
00:23:59,896 --> 0:24:01,116
如果不在

736
00:24:01,116 --> 0:24:04,316
我们直接重新加载界面  

737
00:24:04,316 --> 0:24:05,836
这样我们就有了

738
00:24:05,836 --> 0:24:07,636
魔法般的体验 因为无论停在哪个界面

739
00:24:07,636 --> 0:24:09,536
我举起手

740
00:24:09,536 --> 0:24:10,976
就可以看到我想控制的东西  

741
00:24:16,116 --> 0:24:18,396
有时候呢 如果它不是很适合

742
00:24:18,396 --> 0:24:20,316
用户的需求

743
00:24:20,316 --> 0:24:22,056
你也许会选择主动退出  

744
00:24:22,506 --> 0:24:23,896
选择你觉得对的就好  

745
00:24:23,896 --> 0:24:25,066
做个决定  

746
00:24:25,376 --> 0:24:26,556
比如说你的 App

747
00:24:26,556 --> 0:24:28,616
跟你的手机 App 没什么关系

748
00:24:28,616 --> 0:24:29,946
那选择退出

749
00:24:29,946 --> 0:24:32,086
是一个非常合适的选择  

750
00:24:32,836 --> 0:24:34,756
要做到这样 在你的 WK extension 

751
00:24:34,946 --> 0:24:36,716
的 auto-launch feature 

752
00:24:36,716 --> 0:24:40,396
里使用 opt out

753
00:24:40,396 --> 0:24:41,306
info.plist  

754
00:24:41,796 --> 0:24:44,916
如果你选择了主动退出

755
00:24:44,996 --> 0:24:46,366
Now Playing App 将会

756
00:24:46,366 --> 0:24:47,146
顶上来出现在屏幕  

757
00:24:52,046 --> 0:24:53,716
现在呢 我们说说

758
00:24:53,716 --> 0:24:55,116
最前 App 状态

759
00:24:55,116 --> 0:24:56,906
我们先做一个它的小的回顾  

760
00:24:58,096 --> 0:25:00,196
我有个 App 

761
00:24:58,096 --> 0:25:00,196
我有个 App 

762
00:25:00,196 --> 0:25:01,276
它正在前台运行  

763
00:25:01,276 --> 0:25:02,196
我正在看着它  

764
00:25:02,526 --> 0:25:04,066
屏幕是亮着的并且这个 App

765
00:25:04,066 --> 0:25:06,176
被认为是活跃并且在最前  

766
00:25:06,826 --> 0:25:07,766
但是然后呢

767
00:25:07,766 --> 0:25:08,376
我把手垂下来  

768
00:25:09,546 --> 0:25:11,246
我的 App 还是

769
00:25:11,246 --> 0:25:12,646
被当作最前

770
00:25:13,106 --> 0:25:14,396
因为我把手再抬起来

771
00:25:14,396 --> 0:25:15,996
还是会见到这个 App

772
00:25:16,416 --> 0:25:18,356
这样的话

773
00:25:18,356 --> 0:25:20,506
这个 App 仅仅是进入了后台  

774
00:25:24,116 --> 0:25:26,066
依靠最前 App 状态

775
00:25:26,266 --> 0:25:27,226
我们在系统上

776
00:25:27,226 --> 0:25:28,586
增强了一些功能  

777
00:25:29,116 --> 0:25:32,286
从 iPhone 来的

778
00:25:32,406 --> 0:25:33,856
后台传输 比如说我们正在

779
00:25:33,856 --> 0:25:35,436
从 iPhone 向手表传输

780
00:25:35,576 --> 0:25:36,986
内容 这些

781
00:25:36,986 --> 0:25:39,036
后台传输任务 他们完成后

782
00:25:39,036 --> 0:25:40,326
它将直接唤醒恢复

783
00:25:40,476 --> 0:25:42,266
进入我们的 App 如果

784
00:25:42,266 --> 0:25:43,586
我们的 App 在最前状态  

785
00:25:44,486 --> 0:25:45,996
我们的 URL session 恢复

786
00:25:45,996 --> 0:25:47,286
也是这么工作的  

787
00:25:47,616 --> 0:25:49,886
比如这个 URL session 我们

788
00:25:49,886 --> 0:25:51,246
的后台 session 之前在下载  

789
00:25:51,246 --> 0:25:53,166
现在已经完成了  

790
00:25:53,166 --> 0:25:54,396
我们的 App

791
00:25:54,396 --> 0:25:56,346
会被直接唤醒并且播放相应内容  

792
00:25:56,826 --> 0:26:00,566
如果我们在最前  

793
00:25:56,826 --> 0:26:00,566
如果我们在最前  

794
00:26:00,566 --> 0:26:02,256
用户将会到我们这 所以我们

795
00:26:02,256 --> 0:26:03,776
可以决定何时或者是否

796
00:26:03,776 --> 0:26:06,036
让通知显示 还有

797
00:26:06,036 --> 0:26:07,916
我们需要适当地处理通知  

798
00:26:08,286 --> 0:26:09,686
也许我们想要让用户留在

799
00:26:09,686 --> 0:26:11,166
这个 App 或者可能我们想要

800
00:26:11,166 --> 0:26:12,716
向用户展示一个通知  

801
00:26:13,136 --> 0:26:14,566
在最前的 App 状态中

802
00:26:14,566 --> 0:26:15,826
我们可以做这个决定  

803
00:26:16,256 --> 0:26:18,786
如果我们 App 在最前

804
00:26:18,786 --> 0:26:20,626
状态 我们可以震动一下  

805
00:26:21,236 --> 0:26:23,516
如果你还想再

806
00:26:23,516 --> 0:26:24,706
了解一些最前 App

807
00:26:24,706 --> 0:26:26,646
状态 有个去年的演讲

808
00:26:26,646 --> 0:26:28,476
关于这个 The Life of a watchOS App  

809
00:26:28,956 --> 0:26:30,396
这是个不错的演讲  

810
00:26:30,396 --> 0:26:31,806
你也许能认出这是哪个演讲者  

811
00:26:31,806 --> 0:26:32,666
他挺不错的  

812
00:26:33,636 --> 0:26:35,956
你想要保持

813
00:26:35,956 --> 0:26:38,816
最前状态两分钟 但是如果你

814
00:26:38,816 --> 0:26:40,396
能够想起来 我之前延长了

815
00:26:40,396 --> 0:26:41,336
最前状态时间  

816
00:26:41,716 --> 0:26:43,066
这样的话 最前时间将会

817
00:26:43,066 --> 0:26:45,526
被默认延长到8 分钟  

818
00:26:45,986 --> 0:26:47,636
一样的 这个是很方便

819
00:26:47,636 --> 0:26:48,856
来用于下载内容

820
00:26:48,856 --> 0:26:50,666
所以我直接延长了

821
00:26:50,666 --> 0:26:52,666
最前时间

822
00:27:00,236 --> 0:27:01,446
如果我们正在播放

823
00:27:01,446 --> 0:27:03,996
一些音频 我们的 App

824
00:27:03,996 --> 0:27:06,046
会在整个 session 保持

825
00:27:06,046 --> 0:27:07,796
最前状态 就像远程控制

826
00:27:07,796 --> 0:27:10,006
iPhone 上正在播放的

827
00:27:10,006 --> 0:27:11,266
音频一样  

828
00:27:12,396 --> 0:27:13,566
还有呢 当用户

829
00:27:13,566 --> 0:27:15,716
离开了界面

830
00:27:15,716 --> 0:27:17,646
你的 App 将不是最前了

831
00:27:17,646 --> 0:27:19,066
但后台播放

832
00:27:19,066 --> 0:27:20,016
还是会正常运行  

833
00:27:21,166 --> 0:27:22,346
这个情况下 当然

834
00:27:22,346 --> 0:27:23,826
你需要处理好

835
00:27:23,826 --> 0:27:26,266
后台各种事件  

836
00:27:26,266 --> 0:27:30,786
好了 现在 当我们在最前

837
00:27:30,786 --> 0:27:33,746
的状态之中 我们可以

838
00:27:33,746 --> 0:27:36,116
和通知适当地结合起来

839
00:27:36,116 --> 0:27:38,406
我们可以显示个通知 比如

840
00:27:38,406 --> 0:27:39,586
当下载已完成了 我们可以显示个

841
00:27:39,586 --> 0:27:41,546
本地内容可以播放的通知  

842
00:27:42,006 --> 0:27:43,466
我们想把播放

843
00:27:43,466 --> 0:27:44,826
作为主要的用户操作  

844
00:27:45,596 --> 0:27:46,876
靠着我们新的在 watchOS 上的

845
00:27:46,876 --> 0:27:49,046
交互通知 我么可以让

846
00:27:49,046 --> 0:27:50,396
用户在通知里

847
00:27:50,396 --> 0:27:52,906
设置一些播放参数

848
00:27:52,906 --> 0:27:56,156
并且可以把启动播放

849
00:27:56,156 --> 0:27:57,946
作为主要操作 之后可以

850
00:27:57,946 --> 0:27:59,616
立即进入 App

851
00:27:59,616 --> 0:28:00,646
启动播放 

852
00:27:59,616 --> 0:28:00,646
启动播放 

853
00:28:01,576 --> 0:28:03,546
比如我们有

854
00:28:03,546 --> 0:28:06,146
Salvador Dali exhibit  

855
00:28:06,146 --> 0:28:07,226
它已经准备好了  

856
00:28:07,296 --> 0:28:08,556
我们可以调整播放速度

857
00:28:08,556 --> 0:28:10,496
并且直接启动播放

858
00:28:10,996 --> 0:28:12,976
它将启动我的 App 然后

859
00:28:12,976 --> 0:28:14,556
我可以以合适的

860
00:28:14,556 --> 0:28:16,326
速度给用户播放内容  

861
00:28:16,326 --> 0:28:19,796
如果你想要更多

862
00:28:19,796 --> 0:28:21,336
关于交互通知的内容

863
00:28:21,666 --> 0:28:22,856
可以看看 What's New in

864
00:28:22,856 --> 0:28:24,226
watchOS 之前的演讲

865
00:28:24,876 --> 0:28:26,056
他们都在网上可以找到  

866
00:28:26,056 --> 0:28:27,676
这是个很好的演讲 你可以

867
00:28:27,676 --> 0:28:28,756
学到很多关于

868
00:28:28,756 --> 0:28:30,176
交互式通知的内容

869
00:28:30,176 --> 0:28:31,206
在看完这个之后  

870
00:28:31,976 --> 0:28:33,526
好了 你还记得

871
00:28:33,526 --> 0:28:35,486
我之前这个

872
00:28:35,486 --> 0:28:36,456
发布通知

873
00:28:36,456 --> 0:28:39,316
提醒用户

874
00:28:39,316 --> 0:28:40,966
有东西可以播放了的功能吗

875
00:28:41,396 --> 0:28:42,716
比如说我们的 App

876
00:28:42,716 --> 0:28:45,046
现在在最前  

877
00:28:45,246 --> 0:28:46,336
这样呢当我们

878
00:28:46,336 --> 0:28:48,006
从最前状态的 App

879
00:28:48,006 --> 0:28:50,306
发布了通知

880
00:28:50,366 --> 0:28:52,126
这将会被调用

881
00:28:52,126 --> 0:28:53,866
并且显示一个有 completion handler

882
00:28:53,866 --> 0:28:55,276
的通知  

883
00:28:56,426 --> 0:28:57,886
这样的话 我实际上

884
00:28:57,886 --> 0:28:59,406
可以决定是否仍要

885
00:28:59,406 --> 0:29:00,846
发布这个通知  

886
00:28:59,406 --> 0:29:00,846
发布这个通知  

887
00:29:01,226 --> 0:29:02,436
或者因为我的 App

888
00:29:02,436 --> 0:29:04,176
已经在最前了 我可以直接

889
00:29:04,176 --> 0:29:06,076
震动一下让用户知道

890
00:29:06,076 --> 0:29:07,586
抬起你的手

891
00:29:07,586 --> 0:29:08,516
你就有新的内容了  

892
00:29:08,516 --> 0:29:09,556
我可以更新界面  

893
00:29:10,216 --> 0:29:11,436
同样 如果你想知道

894
00:29:11,436 --> 0:29:12,686
更多关于最前状态通知的信息

895
00:29:12,686 --> 0:29:14,396
可以去看一下

896
00:29:14,396 --> 0:29:15,636
Life of a watchOS App  

897
00:29:16,516 --> 0:29:18,396
好了 我们已经用了

898
00:29:18,396 --> 0:29:19,976
最前 App 状态和

899
00:29:19,976 --> 0:29:22,266
交互式通知

900
00:29:22,266 --> 0:29:24,756
但我们也想在 Siri watch face 上显示内容

901
00:29:25,756 --> 0:29:27,306
使用音频 App 我们可以

902
00:29:27,306 --> 0:29:28,906
靠着相关的快捷方式 

903
00:29:28,906 --> 0:29:30,806
向 Siri watch face 提供一些

904
00:29:30,856 --> 0:29:32,336
播放建议

905
00:29:32,976 --> 0:29:36,356
比如用户最喜欢的播客下一期

906
00:29:36,356 --> 0:29:38,506
内容或者

907
00:29:38,506 --> 0:29:40,506
刚刚同步到手表的音乐  

908
00:29:43,986 --> 0:29:46,116
举个例子 Audible 可以

909
00:29:46,116 --> 0:29:47,586
产生类似的体验

910
00:29:47,976 --> 0:29:49,726
它可以从 Siri watch face

911
00:29:49,726 --> 0:29:52,156
直接让用户进入App

912
00:29:52,156 --> 0:29:54,756
然后恢复播放有声读物  

913
00:29:55,236 --> 0:29:59,036
无论何时交互

914
00:29:59,036 --> 0:30:00,866
产生了 就是

915
00:29:59,036 --> 0:30:00,866
产生了 就是

916
00:30:00,866 --> 0:30:02,336
强调一下 一定要想一下

917
00:30:02,336 --> 0:30:03,136
你送出了什么  

918
00:30:03,586 --> 0:30:05,256
要确定你把你的 INMedia

919
00:30:05,256 --> 0:30:07,656
PlaybackIntent 送到系统

920
00:30:07,656 --> 0:30:08,836
这样之后系统可以知道

921
00:30:08,836 --> 0:30:10,816
大多数时候用户在干什么  

922
00:30:11,286 --> 0:30:14,396
这样呢 你会跟 Siri watch face 连接更紧密  

923
00:30:17,016 --> 0:30:19,016
同时也要想想你在 Siri

924
00:30:19,016 --> 0:30:21,116
中的快捷启动短语 比如

925
00:30:21,456 --> 0:30:23,836
设计一个合适的短语

926
00:30:23,926 --> 0:30:26,486
你的用户可以在 Siri 用它

927
00:30:26,516 --> 0:30:30,586
直接进入你的 App

928
00:30:30,586 --> 0:30:31,706
然后进行播放  

929
00:30:32,206 --> 0:30:35,826
总之 在 Siri watch face 

930
00:30:35,826 --> 0:30:38,296
你可以设计良好的体验  

931
00:30:38,556 --> 0:30:39,736
也许你有一些

932
00:30:39,736 --> 0:30:41,366
只能看一眼的信息类似  “嘿  

933
00:30:41,366 --> 0:30:42,666
展览就要开始了”  

934
00:30:43,266 --> 0:30:45,016
或者一下可以点进去的

935
00:30:45,016 --> 0:30:46,386
操作 像 Audible 做的

936
00:30:46,386 --> 0:30:47,946
“嘿 我们马上开始语音导览”

937
00:30:47,946 --> 0:30:53,446
然后直接进入 App 

938
00:30:53,706 --> 0:30:56,166
关于各种快捷方式 你要把你的

939
00:30:56,166 --> 0:30:57,966
INMediaPlaybackIntent 送出去  

940
00:30:58,876 --> 0:31:00,706
使用相关的快捷方式的 API

941
00:30:58,876 --> 0:31:00,706
使用相关的快捷方式的 API

942
00:31:00,706 --> 0:31:02,236
使之出现在 Siri watch face 上

943
00:31:03,436 --> 0:31:04,746
并且你要想好你的

944
00:31:04,746 --> 0:31:05,256
快捷启动短语  

945
00:31:06,786 --> 0:31:07,906
我们这个礼拜有了很多

946
00:31:07,906 --> 0:31:09,706
关于快捷方式的演讲

947
00:31:09,706 --> 0:31:12,326
我重申一下 Shortcuts on the

948
00:31:12,326 --> 0:31:13,396
Siri Watch Face 这个演讲的重要性  

949
00:31:13,706 --> 0:31:14,506
我自己这么觉得

950
00:31:14,506 --> 0:31:16,126
这个很棒

951
00:31:16,126 --> 0:31:16,706
我也从中学了很多

952
00:31:19,276 --> 0:31:21,556
总结一下 第一

953
00:31:21,556 --> 0:31:23,436
你可以把原生控制

954
00:31:23,436 --> 0:31:25,866
直接嵌入到你的 App

955
00:31:26,346 --> 0:31:27,676
你可以随意地使用

956
00:31:27,676 --> 0:31:29,226
后台播放来

957
00:31:29,226 --> 0:31:30,986
随心所欲地处理

958
00:31:30,986 --> 0:31:32,176
远程控制命令  

959
00:31:32,636 --> 0:31:35,686
同时也有了更好的

960
00:31:35,686 --> 0:31:37,326
向手表传输内容

961
00:31:37,326 --> 0:31:39,066
并且把他们

962
00:31:39,066 --> 0:31:40,416
呈现给用户的方法

963
00:31:41,556 --> 0:31:42,786
如果你想要更多的

964
00:31:43,126 --> 0:31:44,836
信息 请到网上

965
00:31:44,836 --> 0:31:47,816
查阅资料 或者加入我们下午的实验室活动  

966
00:31:49,016 --> 0:31:50,676
我真的十分激动

967
00:31:50,676 --> 0:31:52,216
能见到这样为 watchOS 构建的的音频 App

968
00:31:52,216 --> 0:31:54,816
谢谢大家  

969
00:31:55,166 --> 0:31:57,816
享受 WWWDC 大会吧 谢谢  

970
00:31:58,516 --> 0:32:03,500
[ 掌声 ]
