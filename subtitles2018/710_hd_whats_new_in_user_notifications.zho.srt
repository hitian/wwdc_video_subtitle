1
00:00:07,516 --> 0:00:15,500
[ 音乐 ]

2
00:00:22,516 --> 0:00:27,906
[ 掌声 ]

3
00:00:28,406 --> 0:00:29,736
&gt;&gt; 大家下午好

4
00:00:29,736 --> 0:00:31,566
欢迎来到我们的会场

5
00:00:31,566 --> 0:00:33,366
一起看一下 用户通知的一些更新

6
00:00:33,986 --> 0:00:35,316
我叫 Kritarth Jain [ 音质不清晰 ]

7
00:00:35,316 --> 0:00:38,066
是 iOS 用户通知团队的一名工程师

8
00:00:38,066 --> 0:00:39,956
很高兴回到 WWDC

9
00:00:39,956 --> 0:00:42,316
并跟大家分享

10
00:00:42,316 --> 0:00:43,896
在 iOS 12 中

11
00:00:43,896 --> 0:00:45,566
你的 App 可以采用的

12
00:00:45,566 --> 0:00:47,036
一些用户通知方面

13
00:00:47,246 --> 0:00:48,116
非常赞的新功能

14
00:00:49,476 --> 0:00:51,446
今天我们一起来看一下

15
00:00:51,446 --> 0:00:53,086
幻灯片上的

16
00:00:53,086 --> 0:00:54,256
几个主题

17
00:00:54,526 --> 0:00:57,996
首先是分组通知

18
00:00:57,996 --> 0:00:59,696
这是之前我们在 iOS 用户通知中

19
00:00:59,876 --> 0:01:01,476
添加的新范例

20
00:00:59,876 --> 0:01:01,476
添加的新范例

21
00:01:01,476 --> 0:01:02,736
在用户的通知列表中

22
00:01:02,736 --> 0:01:03,646
可以看到分组通知

23
00:01:04,626 --> 0:01:05,896
然后来看一下

24
00:01:05,896 --> 0:01:07,546
通知内容扩展

25
00:01:07,886 --> 0:01:09,106
其中包括

26
00:01:09,106 --> 0:01:10,696
现有的通知扩展

27
00:01:10,696 --> 0:01:13,266
以及新增的接口

28
00:01:14,606 --> 0:01:15,906
下一个主题包括

29
00:01:15,906 --> 0:01:17,816
通知管理

30
00:01:17,816 --> 0:01:19,116
还有针对你的 App

31
00:01:19,116 --> 0:01:20,916
用户可以调整的一些

32
00:01:20,916 --> 0:01:22,636
通知设置

33
00:01:22,636 --> 0:01:24,226
以及你要如何处理

34
00:01:24,426 --> 0:01:25,366
这些新增选项

35
00:01:26,556 --> 0:01:27,976
再然后是

36
00:01:27,976 --> 0:01:29,936
临时授权 这个机制

37
00:01:29,936 --> 0:01:31,806
让你的 App 在一段时间内

38
00:01:31,806 --> 0:01:33,706
可以给用户试发送通知

39
00:01:33,706 --> 0:01:35,676
无需用户明确允许

40
00:01:35,676 --> 0:01:37,366
但是也不会有声音提醒

41
00:01:38,596 --> 0:01:40,266
我们最后一个主题是

42
00:01:40,266 --> 0:01:42,006
重要提醒

43
00:01:42,006 --> 0:01:43,816
此功能让你的 App 可以

44
00:01:43,816 --> 0:01:45,446
在用户允许的情况下

45
00:01:46,036 --> 0:01:47,996
忽略一些系统设定

46
00:01:47,996 --> 0:01:49,846
从而给用户发送

47
00:01:49,846 --> 0:01:51,026
重要的提醒

48
00:01:51,886 --> 0:01:53,146
今天我们

49
00:01:53,146 --> 0:01:54,736
要讲的主题不少

50
00:01:54,736 --> 0:01:56,316
就让我们先来说说

51
00:01:56,346 --> 0:01:57,136
分组通知

52
00:01:57,136 --> 0:02:01,356
在 iOS 11 及之前版本的系统中

53
00:01:57,136 --> 0:02:01,356
在 iOS 11 及之前版本的系统中

54
00:02:01,356 --> 0:02:02,586
所有新的用户通知

55
00:02:02,586 --> 0:02:04,426
都是在通知列表中

56
00:02:04,426 --> 0:02:05,816
以时间顺序

57
00:02:05,816 --> 0:02:06,756
排列显示的

58
00:02:07,276 --> 0:02:08,735
这就造成多个 App 的通知

59
00:02:08,735 --> 0:02:10,376
穿插显示

60
00:02:10,705 --> 0:02:12,006
而用户很难

61
00:02:12,006 --> 0:02:13,886
一下找到某个通知

62
00:02:13,886 --> 0:02:16,746
或分流多个通知

63
00:02:17,796 --> 0:02:20,346
因此从 iOS 12 起

64
00:02:20,346 --> 0:02:22,216
我们决定加以改进

65
00:02:22,216 --> 0:02:23,676
新增分组通知功能

66
00:02:23,676 --> 0:02:25,696
现在大家可以看到

67
00:02:25,696 --> 0:02:27,586
多个 App 的

68
00:02:27,586 --> 0:02:30,526
各种通知都被分到了

69
00:02:30,526 --> 0:02:31,036
专属于它们的分组

70
00:02:32,056 --> 0:02:33,616
下面我们仔细谈谈

71
00:02:33,616 --> 0:02:34,866
分组通知

72
00:02:36,016 --> 0:02:38,426
所有通知

73
00:02:38,426 --> 0:02:39,856
会自动进行分组

74
00:02:39,856 --> 0:02:41,586
所以你不需要

75
00:02:41,716 --> 0:02:43,626
任何操作

76
00:02:43,706 --> 0:02:44,996
就可以使用该功能

77
00:02:45,406 --> 0:02:47,016
但是如果你想

78
00:02:47,136 --> 0:02:49,426
创建自定义分组

79
00:02:49,426 --> 0:02:51,176
那就需要使用线程标识

80
00:02:51,556 --> 0:02:53,566
线程标识

81
00:02:53,746 --> 0:02:55,556
是 UN notification content 对象中

82
00:02:55,556 --> 0:02:55,996
已有的属性

83
00:02:57,646 --> 0:02:59,096
你们当中可能有人

84
00:02:59,096 --> 0:03:01,276
给本地通知

85
00:02:59,096 --> 0:03:01,276
给本地通知

86
00:03:01,276 --> 0:03:02,406
加过线程标识

87
00:03:02,536 --> 0:03:03,636
正如所示 你可以在

88
00:03:03,806 --> 0:03:05,606
UNMutableNotificationContent

89
00:03:05,606 --> 0:03:06,906
的对象中进行添加

90
00:03:08,056 --> 0:03:10,096
而在远程通知的 payload 处

91
00:03:10,096 --> 0:03:11,876
你也可以将

92
00:03:11,876 --> 0:03:13,706
线程标识添加进去

93
00:03:15,756 --> 0:03:17,816
现在你们

94
00:03:17,816 --> 0:03:19,696
可能已经比较了解线程标识了

95
00:03:20,996 --> 0:03:23,616
现在我们用它

96
00:03:23,616 --> 0:03:25,486
将通知发送给

97
00:03:25,486 --> 0:03:27,126
App 的

98
00:03:27,126 --> 0:03:28,976
通知内容扩展

99
00:03:29,176 --> 0:03:30,406
App 必须带有

100
00:03:30,406 --> 0:03:32,336
同样的线程标识

101
00:03:32,336 --> 0:03:33,986
才能根据新通知

102
00:03:34,026 --> 0:03:35,846
来更新内容扩展视图

103
00:03:37,256 --> 0:03:39,346
我们从 iOS 11 起

104
00:03:39,346 --> 0:03:41,536
如果用户之前开启了 [ 音质不清晰 ]

105
00:03:41,536 --> 0:03:43,386
我们便可以使用线程标识

106
00:03:43,386 --> 0:03:46,326
对通知进行分组

107
00:03:47,156 --> 0:03:48,126
可以说

108
00:03:48,126 --> 0:03:50,006
我们拓展了线程标识的运用

109
00:03:50,006 --> 0:03:51,096
将其覆盖所有类型的通知

110
00:03:52,756 --> 0:03:54,726
那通知分组是如何实现的呢

111
00:03:55,446 --> 0:03:57,166
你的设备

112
00:03:57,166 --> 0:03:59,676
接收到新通知时

113
00:03:59,676 --> 0:04:01,556
如果该通知不包含

114
00:03:59,676 --> 0:04:01,556
如果该通知不包含

115
00:04:01,676 --> 0:04:03,826
线程标识

116
00:04:04,246 --> 0:04:05,496
那这条通知

117
00:04:05,496 --> 0:04:06,926
会根据所属 App 进行分组

118
00:04:08,146 --> 0:04:09,746
正如这个例子

119
00:04:09,746 --> 0:04:11,476
所展示的

120
00:04:11,476 --> 0:04:13,496
接收到的新通知

121
00:04:13,496 --> 0:04:14,446
都被分到了同一组

122
00:04:14,446 --> 0:04:16,796
而该分组显示的

123
00:04:16,796 --> 0:04:17,986
是接收到的

124
00:04:17,986 --> 0:04:18,406
最新通知

125
00:04:18,476 --> 0:04:20,286
然后用户可以

126
00:04:20,286 --> 0:04:21,766
轻松展开分组

127
00:04:21,935 --> 0:04:23,266
来阅读现有的

128
00:04:23,266 --> 0:04:27,086
所有通知

129
00:04:27,276 --> 0:04:28,706
另一方面

130
00:04:28,706 --> 0:04:30,296
如果通知带有

131
00:04:30,296 --> 0:04:32,536
线程标识

132
00:04:32,536 --> 0:04:33,976
这条通知会与

133
00:04:33,976 --> 0:04:35,556
相同 App

134
00:04:35,556 --> 0:04:37,436
且带有同样线程 ID 的通知

135
00:04:37,436 --> 0:04:38,116
分到一组

136
00:04:39,246 --> 0:04:40,666
这意味着

137
00:04:40,666 --> 0:04:42,296
相同 App 可以有

138
00:04:42,296 --> 0:04:43,446
多个自定义的

139
00:04:43,446 --> 0:04:44,596
通知分组

140
00:04:44,596 --> 0:04:46,046
通过你设置的不同的线程标识

141
00:04:46,046 --> 0:04:46,806
进行区分

142
00:04:47,326 --> 0:04:50,346
Messages 这个 App

143
00:04:50,346 --> 0:04:52,166
是一个很好的例子

144
00:04:52,166 --> 0:04:53,176
大家可以看到

145
00:04:53,176 --> 0:04:54,996
这里有两个分组

146
00:04:55,136 --> 0:04:56,596
当接收到新通知时

147
00:04:56,596 --> 0:04:57,636
新通知会被分到

148
00:04:57,636 --> 0:04:58,556
相对应的分组中

149
00:04:59,016 --> 0:05:02,516
用户可以打开

150
00:04:59,016 --> 0:05:02,516
用户可以打开

151
00:05:02,516 --> 0:05:03,906
其中一个分组

152
00:05:03,906 --> 0:05:05,356
来查看该分组中

153
00:05:05,396 --> 0:05:05,786
所包含的通知

154
00:05:06,956 --> 0:05:07,926
所以通过使用线程标识

155
00:05:07,926 --> 0:05:09,676
messages 也可以

156
00:05:09,676 --> 0:05:12,276
做到这一点

157
00:05:12,516 --> 0:05:14,426
使用你的 App 的用户

158
00:05:14,426 --> 0:05:16,356
也可以在每个 App 的

159
00:05:16,356 --> 0:05:17,636
通知设置页面

160
00:05:17,956 --> 0:05:19,276
来修改

161
00:05:19,276 --> 0:05:20,526
通知分组的设置

162
00:05:21,426 --> 0:05:23,216
用户有三个选项可以选择

163
00:05:23,696 --> 0:05:25,536
如果用户选择自动

164
00:05:25,536 --> 0:05:26,756
那他所得到的结果

165
00:05:26,756 --> 0:05:27,496
我们刚刚讲过

166
00:05:28,836 --> 0:05:30,786
然而用户还可以

167
00:05:30,786 --> 0:05:32,286
选择只按照 App

168
00:05:32,286 --> 0:05:34,146
进行分组

169
00:05:34,146 --> 0:05:35,156
此时系统会忽略

170
00:05:35,156 --> 0:05:36,706
线程标识

171
00:05:36,706 --> 0:05:38,376
并将同一个 App 的通知

172
00:05:38,376 --> 0:05:39,246
全部归为一组

173
00:05:39,996 --> 0:05:41,846
如果用户想要

174
00:05:41,846 --> 0:05:43,926
iOS 11 的分组方式

175
00:05:43,926 --> 0:05:45,596
他们现在可以

176
00:05:45,596 --> 0:05:46,586
关闭分组通知

177
00:05:46,586 --> 0:05:47,806
非常简单

178
00:05:48,486 --> 0:05:49,926
所以要记住

179
00:05:49,926 --> 0:05:50,986
当你创建了自定义分组

180
00:05:50,986 --> 0:05:53,436
这个分组

181
00:05:53,436 --> 0:05:55,486
要能在用户

182
00:05:55,486 --> 0:05:56,516
接收你的 App 的通知时

183
00:05:56,516 --> 0:05:57,246
对用户有一定的价值

184
00:05:58,756 --> 0:06:00,606
下面我们来看看

185
00:05:58,756 --> 0:06:00,606
下面我们来看看

186
00:06:00,606 --> 0:06:01,956
一个通知组

187
00:06:01,956 --> 0:06:02,186
有哪些部分组成

188
00:06:03,386 --> 0:06:05,076
这里显示的内容

189
00:06:05,076 --> 0:06:06,696
是该通知组中

190
00:06:06,696 --> 0:06:08,106
最新的一条通知

191
00:06:08,546 --> 0:06:11,996
用户只需点击这个分组

192
00:06:11,996 --> 0:06:13,936
就可以看见其中

193
00:06:13,936 --> 0:06:16,166
所有的通知

194
00:06:16,166 --> 0:06:17,196
通知的内容也同时展开

195
00:06:17,196 --> 0:06:19,086
然后用户可以

196
00:06:19,086 --> 0:06:20,356
单独处理

197
00:06:20,356 --> 0:06:21,216
每一个通知

198
00:06:22,236 --> 0:06:23,876
上方的两个按钮

199
00:06:23,876 --> 0:06:25,246
可以让用户更好地

200
00:06:25,246 --> 0:06:26,956
管理通知

201
00:06:26,956 --> 0:06:28,146
比如一键合并分组

202
00:06:28,146 --> 0:06:29,466
或清除该分组的所有通知

203
00:06:32,156 --> 0:06:34,206
通知分组

204
00:06:34,206 --> 0:06:35,806
让用户对通知的优先级管理

205
00:06:36,066 --> 0:06:36,646
变得更容易

206
00:06:37,036 --> 0:06:38,446
举个例子

207
00:06:38,746 --> 0:06:39,896
如果用户想要

208
00:06:39,896 --> 0:06:41,526
清除这些通知

209
00:06:41,526 --> 0:06:43,116
只需向左滑动

210
00:06:43,116 --> 0:06:43,526
然后点击清除所有即可

211
00:06:46,156 --> 0:06:47,916
除去显示

212
00:06:47,916 --> 0:06:49,936
通知组的内容

213
00:06:50,026 --> 0:06:50,986
我们还会显示一行概略文本

214
00:06:51,436 --> 0:06:52,906
这行概略文本

215
00:06:52,906 --> 0:06:54,886
默认显示

216
00:06:54,886 --> 0:06:56,486
该分组中包含的

217
00:06:56,486 --> 0:06:57,126
通知数量

218
00:06:58,436 --> 0:07:00,276
然而你也可以创建

219
00:06:58,436 --> 0:07:00,276
然而你也可以创建

220
00:07:00,276 --> 0:07:02,046
自定义的概略文本

221
00:07:02,046 --> 0:07:03,756
让用户能

222
00:07:03,756 --> 0:07:05,556
更好地理解

223
00:07:05,556 --> 0:07:07,906
该通知组中的内容

224
00:07:09,016 --> 0:07:11,066
我们会在下一场会议上

225
00:07:11,516 --> 0:07:14,276
给大家细讲这部分的接口

226
00:07:14,276 --> 0:07:15,586
并拓展更多用例

227
00:07:15,586 --> 0:07:17,406
告诉大家

228
00:07:17,496 --> 0:07:18,236
如何通过分组通知 

229
00:07:18,236 --> 0:07:20,136
创建自定义分组

230
00:07:22,036 --> 0:07:23,846
现在我给大家

231
00:07:23,846 --> 0:07:25,156
简单总结一下

232
00:07:25,156 --> 0:07:26,026
分组通知

233
00:07:26,696 --> 0:07:28,126
从 iOS 12 起

234
00:07:28,126 --> 0:07:29,966
所有 App 的通知

235
00:07:29,966 --> 0:07:31,376
将会被自动分组

236
00:07:31,886 --> 0:07:34,646
如果想创建

237
00:07:34,646 --> 0:07:36,486
自定义分组

238
00:07:36,486 --> 0:07:38,056
你需要使用

239
00:07:38,056 --> 0:07:40,896
线程标识

240
00:07:40,896 --> 0:07:42,736
但是用户

241
00:07:42,736 --> 0:07:43,806
可以改变

242
00:07:43,806 --> 0:07:45,166
这一分组设定

243
00:07:47,096 --> 0:07:48,486
最后就是

244
00:07:48,486 --> 0:07:50,716
你可以自定义

245
00:07:50,716 --> 0:07:51,996
概略文本的内容

246
00:07:51,996 --> 0:07:53,986
在通知组中

247
00:07:53,986 --> 0:07:55,006
展现给用户

248
00:07:55,256 --> 0:07:58,706
以上就是关于

249
00:07:58,706 --> 0:07:59,426
分组通知的内容

250
00:07:59,926 --> 0:08:01,416
我们的下一个主题

251
00:07:59,926 --> 0:08:01,416
我们的下一个主题

252
00:08:01,416 --> 0:08:03,016
有关于

253
00:08:03,016 --> 0:08:04,706
通知内容扩展

254
00:08:05,236 --> 0:08:07,466
你们当中有些人

255
00:08:07,466 --> 0:08:08,606
可能已经比较熟悉

256
00:08:08,606 --> 0:08:10,716
iOS 10 中的通知内容扩展了

257
00:08:11,976 --> 0:08:13,726
通知内容扩展

258
00:08:13,726 --> 0:08:15,776
可以丰富

259
00:08:15,776 --> 0:08:17,686
App 通知的

260
00:08:18,006 --> 0:08:20,076
展现形式

261
00:08:20,076 --> 0:08:21,996
这样用户看见的

262
00:08:21,996 --> 0:08:23,706
是更加量身定制

263
00:08:23,706 --> 0:08:25,936
交互性也更高的通知

264
00:08:25,936 --> 0:08:28,836
我们来简单回顾一下

265
00:08:28,836 --> 0:08:29,846
如何创建

266
00:08:29,846 --> 0:08:30,436
通知内容扩展

267
00:08:31,336 --> 0:08:32,686
Xcode 中提供了一个

268
00:08:32,686 --> 0:08:34,566
标准模板

269
00:08:34,635 --> 0:08:35,746
让你在你的 App 中

270
00:08:35,746 --> 0:08:39,456
为通知内容扩展

271
00:08:39,456 --> 0:08:40,986
添加一个 target

272
00:08:40,986 --> 0:08:42,306
一旦你设置好 我们就为通知的 view controller

273
00:08:42,306 --> 0:08:44,476
创建了一个默认的类

274
00:08:44,476 --> 0:08:46,296
这个类会执行

275
00:08:46,296 --> 0:08:46,716
UNNotificationContentExtension 协议

276
00:08:47,606 --> 0:08:49,026
在这里 did receive notification 方法

277
00:08:49,026 --> 0:08:51,186
非常重要

278
00:08:51,186 --> 0:08:52,516
因为这是创建

279
00:08:52,516 --> 0:08:53,576
内容扩展相关视图的

280
00:08:53,576 --> 0:08:55,116
第一步

281
00:08:55,116 --> 0:08:57,096
你可以用

282
00:08:57,096 --> 0:08:59,276
此处的通知对象

283
00:08:59,276 --> 0:09:01,006
来获取通知的相关信息

284
00:08:59,276 --> 0:09:01,006
来获取通知的相关信息

285
00:09:01,006 --> 0:09:02,586
然后创建你的

286
00:09:02,586 --> 0:09:03,126
自定义视图

287
00:09:05,436 --> 0:09:07,776
与内容扩展相关联的

288
00:09:07,776 --> 0:09:08,856
info.plist 文件

289
00:09:08,996 --> 0:09:10,076
让你有更多选择

290
00:09:11,226 --> 0:09:12,876
这里最重要的是

291
00:09:12,876 --> 0:09:14,026
类别标识

292
00:09:14,466 --> 0:09:16,056
此处的类别标识

293
00:09:16,056 --> 0:09:17,246
需要与你通知请求中的

294
00:09:17,246 --> 0:09:18,846
类别标识

295
00:09:18,846 --> 0:09:20,066
保持一致

296
00:09:20,476 --> 0:09:21,546
这样系统才知道

297
00:09:21,546 --> 0:09:23,076
哪个内容扩展

298
00:09:23,076 --> 0:09:24,566
对应哪条通知

299
00:09:26,236 --> 0:09:28,546
此外 你也可以

300
00:09:28,546 --> 0:09:30,516
快速配置

301
00:09:30,516 --> 0:09:31,756
内容扩展

302
00:09:31,756 --> 0:09:33,436
例如设置 initial content size ratio

303
00:09:33,436 --> 0:09:34,936
隐藏默认内容

304
00:09:34,936 --> 0:09:36,706
以及覆盖

305
00:09:36,836 --> 0:09:38,576
该内容扩展的标题

306
00:09:39,796 --> 0:09:41,896
用户与这些

307
00:09:41,896 --> 0:09:43,526
内容扩展产生交互的

308
00:09:43,526 --> 0:09:45,136
主要方式是

309
00:09:45,136 --> 0:09:47,086
通知的 action

310
00:09:47,086 --> 0:09:48,786
这些 action

311
00:09:48,786 --> 0:09:50,836
显示在内容扩展的内容下方

312
00:09:52,136 --> 0:09:53,786
我们也来回顾一下

313
00:09:53,786 --> 0:09:54,716
如何创建这些 action 吧

314
00:09:56,126 --> 0:09:57,976
这一步在代码中非常简单

315
00:09:58,506 --> 0:10:00,216
举个例子

316
00:09:58,506 --> 0:10:00,216
举个例子

317
00:10:00,216 --> 0:10:01,566
这里我们有两个 action 点赞和评论

318
00:10:01,566 --> 0:10:03,706
我们为点赞创建一个简单的

319
00:10:03,706 --> 0:10:05,336
UNNotificationAction

320
00:10:06,746 --> 0:10:08,966
为评论创建一个文字输入 action

321
00:10:11,596 --> 0:10:12,836
创建完之后

322
00:10:12,836 --> 0:10:14,236
我们创建一个

323
00:10:14,236 --> 0:10:16,186
新的类型

324
00:10:16,186 --> 0:10:17,616
让它的类型标识

325
00:10:17,616 --> 0:10:19,186
跟内容扩展的

326
00:10:19,186 --> 0:10:20,256
保持一致

327
00:10:20,256 --> 0:10:23,216
然后我们提交

328
00:10:23,216 --> 0:10:27,656
这两个新创建的 action

329
00:10:27,656 --> 0:10:29,476
建立好这个类型之后

330
00:10:29,476 --> 0:10:30,406
我们就可以调用

331
00:10:30,406 --> 0:10:32,576
与我们的 class 关联的

332
00:10:32,576 --> 0:10:34,436
UNNotificationCenter 对象的

333
00:10:34,436 --> 0:10:35,876
setNotificationCategories

334
00:10:36,176 --> 0:10:38,766
赋予它我们创建的新类型

335
00:10:40,856 --> 0:10:43,276
通过这个简单方法

336
00:10:43,276 --> 0:10:44,266
下次用户碰到

337
00:10:44,266 --> 0:10:46,226
你的内容扩展时

338
00:10:46,226 --> 0:10:47,486
用户可以通过这些 action

339
00:10:47,486 --> 0:10:49,066
与你的通知内容

340
00:10:49,066 --> 0:10:50,526
进行交互

341
00:10:51,636 --> 0:10:53,216
下面我们看一下

342
00:10:53,216 --> 0:10:54,856
如何处理从这些 action 中

343
00:10:54,856 --> 0:10:55,516
得到的响应

344
00:10:55,996 --> 0:10:57,306
有两种方式

345
00:10:58,636 --> 0:11:00,116
第一个

346
00:10:58,636 --> 0:11:00,116
第一个

347
00:11:00,116 --> 0:11:02,206
你可以在 App 关联的

348
00:11:02,206 --> 0:11:03,366
AppDelegate（App 委托）中进行处理

349
00:11:03,366 --> 0:11:05,386
App 需要执行

350
00:11:05,386 --> 0:11:07,836
UNUserNotificationCenter 的授权协议

351
00:11:08,626 --> 0:11:09,716
在这里

352
00:11:09,716 --> 0:11:11,206
UserNotificationCenter

353
00:11:11,206 --> 0:11:12,906
接收到响应

354
00:11:12,906 --> 0:11:15,496
其中包括

355
00:11:15,496 --> 0:11:17,176
请求的信息

356
00:11:17,516 --> 0:11:18,716
和用户行为的

357
00:11:18,716 --> 0:11:20,046
通知请求

358
00:11:21,346 --> 0:11:22,916
然而内容扩展

359
00:11:23,176 --> 0:11:24,826
也可以让你

360
00:11:24,946 --> 0:11:26,946
拦截这个 action 的响应

361
00:11:26,946 --> 0:11:28,906
这样你就可以运用内容扩展

362
00:11:28,906 --> 0:11:30,026
来更新视图

363
00:11:30,026 --> 0:11:31,906
并创建一个更具交互性的

364
00:11:31,906 --> 0:11:32,806
动态用户体验

365
00:11:33,586 --> 0:11:35,986
在这个示例中

366
00:11:35,986 --> 0:11:37,506
我们输入了 did receive response 方法

367
00:11:38,366 --> 0:11:39,416
并对点赞这个动作

368
00:11:39,416 --> 0:11:41,056
进行检测

369
00:11:42,006 --> 0:11:44,196
然后我们用新的 label

370
00:11:44,306 --> 0:11:45,956
更新 UI

371
00:11:45,956 --> 0:11:46,886
也更新 App 状态

372
00:11:48,476 --> 0:11:50,146
最后调用 completion

373
00:11:50,146 --> 0:11:51,376
设为 do not dismiss

374
00:11:51,956 --> 0:11:53,266
如果你想要在此处

375
00:11:53,266 --> 0:11:54,476
忽略内容扩展视图

376
00:11:54,696 --> 0:11:56,486
那么你只需将

377
00:11:56,486 --> 0:11:57,646
传送给 completion 的

378
00:11:57,646 --> 0:12:00,796
参数设为 dismiss 或

379
00:11:57,646 --> 0:12:00,796
参数设为 dismiss 或

380
00:12:00,796 --> 0:12:02,586
dismiss and forward

381
00:12:02,586 --> 0:12:03,896
后者会将响应发送给

382
00:12:03,896 --> 0:12:05,176
AppDelegate（App 委托）

383
00:12:05,176 --> 0:12:07,676
这个功能创建完毕后

384
00:12:07,676 --> 0:12:09,396
我们可以看到

385
00:12:09,396 --> 0:12:10,776
当用户点赞时

386
00:12:11,136 --> 0:12:13,206
内容扩展

387
00:12:13,206 --> 0:12:14,446
可以即时得到更新

388
00:12:14,966 --> 0:12:16,516
这种方式增强了

389
00:12:16,516 --> 0:12:17,946
用户交互

390
00:12:17,946 --> 0:12:18,846
他们也可以得到

391
00:12:18,846 --> 0:12:19,886
即时反馈

392
00:12:21,116 --> 0:12:22,566
但是如果观察

393
00:12:22,626 --> 0:12:23,966
内容扩展的当前状态

394
00:12:23,966 --> 0:12:26,576
我们会发现一些

395
00:12:26,576 --> 0:12:28,106
冗余的信息

396
00:12:28,996 --> 0:12:30,526
用户点赞后

397
00:12:30,526 --> 0:12:32,136
再保留

398
00:12:32,136 --> 0:12:33,506
点赞这个 action

399
00:12:33,506 --> 0:12:34,416
就没有意义了

400
00:12:36,236 --> 0:12:38,206
通常来说

401
00:12:38,206 --> 0:12:39,416
通知 action

402
00:12:39,416 --> 0:12:40,176
有一定局限

403
00:12:41,606 --> 0:12:43,506
通知不太具有动态

404
00:12:43,606 --> 0:12:45,316
也无法根据

405
00:12:45,316 --> 0:12:46,646
内容扩展的场景

406
00:12:46,646 --> 0:12:47,226
进行更新

407
00:12:48,696 --> 0:12:51,046
还有就是这些情况

408
00:12:51,046 --> 0:12:52,846
与通知的类型有关联

409
00:12:52,846 --> 0:12:54,336
而通知的类型在创建 App 时

410
00:12:54,586 --> 0:12:55,726
必须定义好

411
00:12:56,946 --> 0:12:58,526
我们想解决这个问题

412
00:12:58,526 --> 0:13:00,396
所以新增了一个

413
00:12:58,526 --> 0:13:00,396
所以新增了一个

414
00:13:00,396 --> 0:13:02,326
通知 action 的接口

415
00:13:02,326 --> 0:13:04,206
有了这个接口

416
00:13:04,206 --> 0:13:05,496
我们就将通知 action

417
00:13:05,496 --> 0:13:06,666
纳入

418
00:13:06,666 --> 0:13:08,736
NSExtensionContext

419
00:13:08,736 --> 0:13:09,596
从而绑定内容扩展

420
00:13:10,686 --> 0:13:12,356
这个接口

421
00:13:12,576 --> 0:13:14,146
让你可以访问

422
00:13:14,146 --> 0:13:15,626
现阶段面向用户的

423
00:13:15,626 --> 0:13:17,626
通知 action

424
00:13:17,626 --> 0:13:19,526
也可以通过

425
00:13:19,526 --> 0:13:20,766
为内容扩展建立

426
00:13:20,766 --> 0:13:25,556
全新的通知 action 数组进行替换

427
00:13:25,556 --> 0:13:27,016
我们再来看示例

428
00:13:27,076 --> 0:13:28,826
如果用户点赞后

429
00:13:28,826 --> 0:13:30,476
我们想将点赞的 action

430
00:13:30,476 --> 0:13:32,546
替换成撤销点赞的 action

431
00:13:32,546 --> 0:13:33,896
怎么让用户可以对刚才的操作

432
00:13:33,896 --> 0:13:36,776
进行反向操作呢

433
00:13:36,956 --> 0:13:39,226
我们看一下

434
00:13:39,226 --> 0:13:40,356
如何用新的接口

435
00:13:40,356 --> 0:13:41,286
进行设置

436
00:13:41,376 --> 0:13:42,816
我们回到 did receive response 方法

437
00:13:42,816 --> 0:13:44,206
再一次识别

438
00:13:44,626 --> 0:13:46,296
点赞行为

439
00:13:46,296 --> 0:13:47,716
并更新我们的 App 状态

440
00:13:48,916 --> 0:13:51,216
这一次我们还创建了

441
00:13:51,216 --> 0:13:53,446
一个新的撤销点赞的 action

442
00:13:53,446 --> 0:13:55,476
给它添加一个独有的标识和标题

443
00:13:56,056 --> 0:13:59,816
我们可以再看一下

444
00:13:59,816 --> 0:14:01,436
现有的 action

445
00:13:59,816 --> 0:14:01,436
现有的 action

446
00:14:01,436 --> 0:14:02,956
这样就可以提取

447
00:14:02,956 --> 0:14:04,606
评论的 action

448
00:14:04,606 --> 0:14:06,056
而不用再次创建

449
00:14:07,276 --> 0:14:09,276
然后我们创建一个

450
00:14:09,276 --> 0:14:10,326
新 action 的数组

451
00:14:10,326 --> 0:14:13,526
将数组设为

452
00:14:13,606 --> 0:14:14,936
通知 action 的变量就可以了

453
00:14:17,456 --> 0:14:19,536
这步完成后

454
00:14:19,536 --> 0:14:21,656
用户点赞之后

455
00:14:21,656 --> 0:14:23,666
UI 会自动变化

456
00:14:23,786 --> 0:14:26,236
展示新的 action

457
00:14:26,236 --> 0:14:27,416
然后用户可以再在

458
00:14:27,416 --> 0:14:28,356
两个 action 中进行选择

459
00:14:28,566 --> 0:14:29,796
这取决于你如何

460
00:14:29,796 --> 0:14:30,956
在内容扩展中

461
00:14:30,956 --> 0:14:31,486
处理状态

462
00:14:32,596 --> 0:14:34,726
这个接口

463
00:14:34,726 --> 0:14:36,026
还有其他多个用法

464
00:14:36,516 --> 0:14:38,696
例如

465
00:14:38,696 --> 0:14:40,446
在 did receive notification 方法中

466
00:14:40,446 --> 0:14:41,486
你可以在

467
00:14:41,486 --> 0:14:43,116
创建内容扩展视图的同时

468
00:14:43,116 --> 0:14:44,306
创建你的 action

469
00:14:45,036 --> 0:14:46,306
这意味着

470
00:14:46,306 --> 0:14:47,916
你的通知请求

471
00:14:47,916 --> 0:14:49,826
在定义

472
00:14:49,826 --> 0:14:51,386
通知的 action 时

473
00:14:51,386 --> 0:14:53,016
不再与类型绑定在一起

474
00:14:53,016 --> 0:14:57,126
现在你还可以

475
00:14:57,126 --> 0:14:58,956
展示二级 action

476
00:14:58,956 --> 0:15:00,846
只要将当前 action 替换掉就可以了

477
00:14:58,956 --> 0:15:00,846
只要将当前 action 替换掉就可以了

478
00:15:01,236 --> 0:15:03,306
例如

479
00:15:03,306 --> 0:15:05,326
如果首发 action 是评分

480
00:15:05,326 --> 0:15:07,046
下面你就可以建立一个

481
00:15:07,046 --> 0:15:08,406
包含不同评分类型的二级列表

482
00:15:08,406 --> 0:15:10,366
以供用户选择

483
00:15:12,156 --> 0:15:14,556
如果你认为

484
00:15:14,556 --> 0:15:16,176
内容扩展没有必要

485
00:15:16,176 --> 0:15:17,746
再显示这些 action 了

486
00:15:17,746 --> 0:15:19,316
你可以

487
00:15:19,316 --> 0:15:20,716
将它们去掉

488
00:15:21,106 --> 0:15:26,476
这就是通知动作的新接口

489
00:15:26,796 --> 0:15:28,456
我们认为

490
00:15:28,456 --> 0:15:30,706
这可以大大增强

491
00:15:30,706 --> 0:15:32,316
你的内容扩展的

492
00:15:32,316 --> 0:15:33,986
用户体验

493
00:15:33,986 --> 0:15:39,036
因为现在你可以 展示给用户多个选择

494
00:15:39,216 --> 0:15:40,576
我们来看下一个主题

495
00:15:40,576 --> 0:15:41,806
内容扩展的

496
00:15:41,806 --> 0:15:42,676
用户交互

497
00:15:43,836 --> 0:15:45,796
到目前为止

498
00:15:45,796 --> 0:15:47,726
通知 action 很重要

499
00:15:48,036 --> 0:15:51,146
因为 iOS 11 以前

500
00:15:51,146 --> 0:15:53,166
我们不允许在

501
00:15:53,256 --> 0:15:56,196
内容扩展视图中进行用户交互

502
00:15:56,416 --> 0:15:57,486
我们收到了

503
00:15:57,486 --> 0:15:58,536
很多相关反馈

504
00:15:58,906 --> 0:16:00,706
而我现在很高兴地宣布

505
00:15:58,906 --> 0:16:00,706
而我现在很高兴地宣布

506
00:16:00,836 --> 0:16:01,846
我们在 iOS 12 中

507
00:16:01,846 --> 0:16:03,126
去掉了这项限制

508
00:16:04,516 --> 0:16:07,546
[ 掌声 ]

509
00:16:08,046 --> 0:16:09,636
现在你在内容扩展中

510
00:16:09,636 --> 0:16:11,826
可以选择

511
00:16:11,826 --> 0:16:13,456
通过点触

512
00:16:13,456 --> 0:16:16,286
接收用户交互

513
00:16:16,286 --> 0:16:17,786
设置这个功能也很简单

514
00:16:18,046 --> 0:16:20,096
你只需在

515
00:16:20,096 --> 0:16:22,446
info.plist 文件中

516
00:16:22,446 --> 0:16:23,326
增添一个键值项

517
00:16:23,766 --> 0:16:26,556
也就是

518
00:16:26,556 --> 0:16:29,446
UNNotificationExtensionUser

519
00:16:29,446 --> 0:16:30,386
InteractionEnabled

520
00:16:32,586 --> 0:16:34,436
再来看示例

521
00:16:34,696 --> 0:16:36,576
如果我们想要

522
00:16:36,576 --> 0:16:38,416
去掉点赞这个 action

523
00:16:38,416 --> 0:16:40,556
将其改成

524
00:16:40,556 --> 0:16:42,626
融于视图的

525
00:16:42,626 --> 0:16:43,326
UI 点触交互

526
00:16:44,316 --> 0:16:45,506
我们再次配置

527
00:16:45,506 --> 0:16:48,376
info.plist 文件

528
00:16:48,376 --> 0:16:49,776
我们可以回到内容扩展视图

529
00:16:50,126 --> 0:16:51,976
创建自定义按钮

530
00:16:51,976 --> 0:16:53,366
来接收点赞

531
00:16:54,716 --> 0:16:56,396
我们在私有方法中添加了一个 target

532
00:16:56,396 --> 0:16:59,806
在这个函数中

533
00:16:59,806 --> 0:17:02,016
我们更新了 UI

534
00:16:59,806 --> 0:17:02,016
我们更新了 UI

535
00:17:02,016 --> 0:17:03,806
还有 App 的状态

536
00:17:05,316 --> 0:17:06,886
这里需要注意

537
00:17:06,886 --> 0:17:07,986
由于你在执行

538
00:17:07,986 --> 0:17:09,915
自定义的交互

539
00:17:09,915 --> 0:17:11,886
你要负责处理

540
00:17:11,886 --> 0:17:13,626
所有用户的 action

541
00:17:13,626 --> 0:17:14,846
response

542
00:17:14,846 --> 0:17:15,316
和 callback

543
00:17:17,976 --> 0:17:20,546
这部分完成后

544
00:17:20,546 --> 0:17:21,556
用户看到你的内容扩展时

545
00:17:21,556 --> 0:17:23,215
就可以看见

546
00:17:23,215 --> 0:17:24,556
这个点赞按钮

547
00:17:24,556 --> 0:17:26,705
它是 UI 中的一部分

548
00:17:26,705 --> 0:17:28,666
用户可以即时点击按钮 完成交互

549
00:17:33,126 --> 0:17:35,536
这个就是我们为

550
00:17:35,536 --> 0:17:37,096
内容扩展添加的新功能

551
00:17:37,396 --> 0:17:38,746
有了这个功能

552
00:17:38,746 --> 0:17:40,076
再加上通知 action

553
00:17:40,076 --> 0:17:41,686
还有用户交互点触

554
00:17:41,686 --> 0:17:44,966
你就可以利用这一组

555
00:17:44,966 --> 0:17:46,646
丰富的工具

556
00:17:46,646 --> 0:17:48,336
给你的 App 通知的用户

557
00:17:48,336 --> 0:17:49,986
带来更具交互性的

558
00:17:49,986 --> 0:17:50,416
动态内容扩展体验

559
00:17:52,516 --> 0:17:54,346
接下来是

560
00:17:54,346 --> 0:17:55,636
通过通知内容扩展

561
00:17:55,636 --> 0:17:56,906
启动 App

562
00:17:58,536 --> 0:18:01,146
现在 即使没有点触位置

563
00:17:58,536 --> 0:18:01,146
现在 即使没有点触位置

564
00:18:01,146 --> 0:18:03,216
用户只需点击

565
00:18:03,216 --> 0:18:04,706
内容扩展视图

566
00:18:04,916 --> 0:18:07,126
就可以轻松打开 App

567
00:18:08,036 --> 0:18:09,786
用户也可以点击

568
00:18:10,046 --> 0:18:12,116
通知左上角的

569
00:18:12,596 --> 0:18:14,126
App 图标

570
00:18:14,226 --> 0:18:15,966
或者你可以创建一个

571
00:18:15,966 --> 0:18:17,786
foreground action

572
00:18:17,786 --> 0:18:19,266
让用户打开 App

573
00:18:20,936 --> 0:18:22,926
那我们如何能

574
00:18:22,926 --> 0:18:24,646
自定义启动 App 的控制呢

575
00:18:25,986 --> 0:18:27,056
如果你想通过代码启动

576
00:18:27,056 --> 0:18:28,306
要怎么做呢

577
00:18:29,206 --> 0:18:30,746
使用 NSExtensionContext

578
00:18:30,746 --> 0:18:33,136
的一个新接口

579
00:18:33,136 --> 0:18:34,656
就可以做到这点

580
00:18:34,656 --> 0:18:36,476
这个接口是 performNotification

581
00:18:36,476 --> 0:18:40,936
DefaultAction

582
00:18:40,936 --> 0:18:42,546
那么 default action 是什么呢

583
00:18:43,156 --> 0:18:45,006
刚才说过 default action

584
00:18:45,006 --> 0:18:47,046
可以启动 App

585
00:18:47,046 --> 0:18:48,036
但是同时

586
00:18:48,036 --> 0:18:49,776
会在 App 委托

587
00:18:49,776 --> 0:18:51,826
调用 UserNotificationCenter 的

588
00:18:51,826 --> 0:18:52,656
did receive response 方法

589
00:18:54,066 --> 0:18:55,416
UNNotificationResponse 的对象

590
00:18:55,416 --> 0:18:56,876
记录用户

591
00:18:56,876 --> 0:18:58,316
是从哪条通知

592
00:18:58,316 --> 0:19:00,536
点进来的

593
00:18:58,316 --> 0:19:00,536
点进来的

594
00:19:00,536 --> 0:19:02,476
这样你就可以根据通知

595
00:19:02,686 --> 0:19:03,416
更新 App 状态

596
00:19:04,696 --> 0:19:06,256
这里使用的

597
00:19:06,256 --> 0:19:08,766
标识符是 UNNotificationDefault

598
00:19:08,766 --> 0:19:09,746
ActionIdentifier

599
00:19:10,246 --> 0:19:12,846
让我们通过示例

600
00:19:12,956 --> 0:19:14,316
看一下如何设置

601
00:19:14,316 --> 0:19:15,806
自定义的启动控制

602
00:19:17,096 --> 0:19:19,226
现在我们创建了 UI 按钮

603
00:19:19,226 --> 0:19:21,626
以显示所有评论

604
00:19:22,656 --> 0:19:25,736
然后与我们的私有功能

605
00:19:25,736 --> 0:19:26,386
进行绑定

606
00:19:27,496 --> 0:19:28,796
在这个功能里

607
00:19:28,796 --> 0:19:29,546
我们只需调用

608
00:19:29,546 --> 0:19:30,456
PerformNotification

609
00:19:30,456 --> 0:19:31,036
DefaultAction

610
00:19:31,826 --> 0:19:33,576
这样的话

611
00:19:33,576 --> 0:19:35,186
此功能就可以

612
00:19:35,186 --> 0:19:36,446
在内容扩展的代码中

613
00:19:36,446 --> 0:19:37,586
自动调用

614
00:19:37,586 --> 0:19:40,526
这个方法

615
00:19:40,726 --> 0:19:42,676
这部分是关于启动 App 的内容

616
00:19:43,476 --> 0:19:48,336
如何解除内容扩展视图呢

617
00:19:48,546 --> 0:19:49,926
我们再来看看

618
00:19:49,926 --> 0:19:51,046
现在用户可以如何实现这一点

619
00:19:51,636 --> 0:19:52,866
用户可以点击

620
00:19:52,866 --> 0:19:54,566
右上角的退出按钮

621
00:19:55,896 --> 0:19:57,846
或者你可以

622
00:19:57,846 --> 0:19:59,346
自定义通知 action

623
00:19:59,676 --> 0:20:01,126
同样可以退出

624
00:19:59,676 --> 0:20:01,126
同样可以退出

625
00:20:01,126 --> 0:20:02,086
内容扩展视图

626
00:20:02,736 --> 0:20:04,056
我们之前讲过如何创建

627
00:20:04,056 --> 0:20:05,706
那就是向 completion block

628
00:20:05,706 --> 0:20:06,456
传递退出请求

629
00:20:08,456 --> 0:20:10,476
如果我们想

630
00:20:10,476 --> 0:20:12,326
通过自定义按钮

631
00:20:12,326 --> 0:20:14,006
退出视图

632
00:20:14,006 --> 0:20:15,006
我们如何通过代码实现呢

633
00:20:15,436 --> 0:20:16,986
假设用户点击

634
00:20:16,986 --> 0:20:18,146
点赞按钮

635
00:20:18,146 --> 0:20:19,646
视图会退出

636
00:20:19,646 --> 0:20:21,276
因为我们认为用户已经完成

637
00:20:21,276 --> 0:20:22,046
与内容扩展的交互

638
00:20:23,436 --> 0:20:25,266
为了实现这一点

639
00:20:25,266 --> 0:20:26,616
我们设了一个新接口

640
00:20:26,616 --> 0:20:27,826
dismissNotification

641
00:20:27,826 --> 0:20:29,306
ContentExtension

642
00:20:29,306 --> 0:20:30,446
它归属 NSExtensionContext

643
00:20:32,896 --> 0:20:35,046
让我们回到创建点赞按钮处

644
00:20:35,046 --> 0:20:36,556
这一次

645
00:20:36,986 --> 0:20:39,836
我们一同调用

646
00:20:39,966 --> 0:20:41,376
退出内容扩展视图的

647
00:20:41,376 --> 0:20:42,866
新功能

648
00:20:44,676 --> 0:20:46,816
创建好后

649
00:20:46,816 --> 0:20:47,816
当用户触发点赞

650
00:20:47,816 --> 0:20:49,526
内容扩展的视图

651
00:20:49,526 --> 0:20:52,776
会直接退出

652
00:20:52,826 --> 0:20:53,986
需要注意的一点是

653
00:20:53,986 --> 0:20:56,156
调用这个方法

654
00:20:56,156 --> 0:20:57,746
并不会撤回

655
00:20:57,876 --> 0:20:59,146
推送给用户的通知

656
00:20:59,836 --> 0:21:01,816
如果你想要撤回通知

657
00:20:59,836 --> 0:21:01,816
如果你想要撤回通知

658
00:21:01,816 --> 0:21:04,236
就需要使用现有的接口

659
00:21:04,236 --> 0:21:05,356
移除已发送的通知

660
00:21:05,356 --> 0:21:06,696
你需要使用标识符

661
00:21:06,696 --> 0:21:07,916
才能使用这个功能

662
00:21:09,696 --> 0:21:11,296
现在让我们总结一下

663
00:21:11,296 --> 0:21:13,266
今天介绍的

664
00:21:13,266 --> 0:21:14,486
所有通知内容扩展的

665
00:21:14,486 --> 0:21:15,926
新接口

666
00:21:18,536 --> 0:21:20,506
首先是

667
00:21:20,506 --> 0:21:22,166
通知 action

668
00:21:22,376 --> 0:21:23,356
你可以访问

669
00:21:23,356 --> 0:21:25,016
通知 action

670
00:21:25,016 --> 0:21:26,686
也可以在你的

671
00:21:26,686 --> 0:21:27,656
内容扩展代码中

672
00:21:27,656 --> 0:21:28,646
将其动态替换掉

673
00:21:28,846 --> 0:21:34,456
你现在可以选择 在内容扩展视图中

674
00:21:34,456 --> 0:21:35,886
创建可点触的

675
00:21:35,886 --> 0:21:36,666
用户交互体验

676
00:21:36,666 --> 0:21:42,116
你还可以通过内容扩展的代码

677
00:21:42,116 --> 0:21:44,926
自动启动 App

678
00:21:44,926 --> 0:21:46,196
或退出

679
00:21:46,196 --> 0:21:48,086
内容扩展视图

680
00:21:48,266 --> 0:21:49,936
你需要根据内容扩展的

681
00:21:50,056 --> 0:21:52,576
用户体验需求进行选择

682
00:21:52,896 --> 0:21:56,316
这些就是

683
00:21:56,316 --> 0:21:57,876
内容扩展的

684
00:21:57,876 --> 0:21:59,436
几个新的接口

685
00:21:59,436 --> 0:22:01,366
希望使用后

686
00:21:59,436 --> 0:22:01,366
希望使用后

687
00:22:01,366 --> 0:22:02,476
可以帮助大家

688
00:22:02,546 --> 0:22:03,806
增强内容扩展的

689
00:22:03,806 --> 0:22:04,096
用户体验

690
00:22:04,096 --> 0:22:06,726
这些就是通知内容扩展的

691
00:22:06,726 --> 0:22:07,276
相关内容

692
00:22:07,866 --> 0:22:09,836
我们今天的

693
00:22:09,836 --> 0:22:11,316
下一个主题是

694
00:22:11,316 --> 0:22:12,986
通知管理

695
00:22:12,986 --> 0:22:14,376
现在欢迎

696
00:22:14,376 --> 0:22:15,576
我的同事 Teja 上台

697
00:22:15,776 --> 0:22:15,976
谢谢大家

698
00:22:16,516 --> 0:22:22,556
[ 掌声 ]

699
00:22:23,056 --> 0:22:23,946
&gt;&gt; 谢谢你 Kritarth

700
00:22:24,136 --> 0:22:24,946
大家好

701
00:22:25,416 --> 0:22:27,206
我是 Teja Kondapalli

702
00:22:27,206 --> 0:22:29,026
我也是 iOS 通知团队的

703
00:22:29,026 --> 0:22:30,146
一名工程师

704
00:22:30,546 --> 0:22:31,746
下面由我

705
00:22:31,796 --> 0:22:33,216
给大家介绍几个

706
00:22:33,216 --> 0:22:34,396
新的接口

707
00:22:35,126 --> 0:22:36,546
第一个是

708
00:22:36,916 --> 0:22:38,476
通知管理

709
00:22:39,256 --> 0:22:40,896
但是在我深入讲解前

710
00:22:40,896 --> 0:22:42,916
我想先介绍几个

711
00:22:42,916 --> 0:22:46,396
面向用户的功能

712
00:22:46,396 --> 0:22:47,776
给大家一些背景知识

713
00:22:47,776 --> 0:22:48,756
然后再让我们深入了解这些接口

714
00:22:53,136 --> 0:22:54,606
现在 用户手机上的

715
00:22:54,776 --> 0:22:55,546
App 越来越多

716
00:22:56,026 --> 0:22:59,166
通知是用户与 App 产生交互的

717
00:22:59,166 --> 0:23:00,426
主要方式

718
00:22:59,166 --> 0:23:00,426
主要方式

719
00:23:00,536 --> 0:23:02,516
然而通常

720
00:23:02,686 --> 0:23:04,356
用户会陷入这样一种情况

721
00:23:05,176 --> 0:23:07,446
那就是通知过多

722
00:23:07,766 --> 0:23:09,026
筛选

723
00:23:09,076 --> 0:23:10,846
重要通知

724
00:23:10,846 --> 0:23:11,096
变得非常困难

725
00:23:11,646 --> 0:23:14,756
为了减负

726
00:23:14,756 --> 0:23:16,726
有些用户认为

727
00:23:17,046 --> 0:23:18,386
播客的通知

728
00:23:19,076 --> 0:23:20,706
无需在锁屏处显示

729
00:23:21,476 --> 0:23:22,966
如果想要进行调整

730
00:23:23,606 --> 0:23:24,546
用户需要

731
00:23:24,586 --> 0:23:25,896
打开设置

732
00:23:25,896 --> 0:23:28,506
在通知里

733
00:23:29,426 --> 0:23:30,776
找到播客

734
00:23:30,776 --> 0:23:31,316
再修改设置

735
00:23:32,786 --> 0:23:33,976
我们想要缓解这个状况

736
00:23:34,616 --> 0:23:37,146
所以在 iOS 12 中

737
00:23:37,146 --> 0:23:39,936
新增了管理视图

738
00:23:39,936 --> 0:23:41,936
用户可以直接

739
00:23:41,936 --> 0:23:43,836
在接收通知的地方

740
00:23:43,836 --> 0:23:45,886
调整通知设置

741
00:23:46,026 --> 0:23:46,976
无需到设置中调整

742
00:23:51,206 --> 0:23:52,586
有三个简单的方式

743
00:23:52,626 --> 0:23:53,936
可以进入通知管理视图

744
00:23:54,436 --> 0:23:55,826
第一个我们刚才已经看过

745
00:23:56,476 --> 0:23:57,536
你只需将通知向左滑

746
00:23:57,536 --> 0:23:59,676
点击管理

747
00:24:00,416 --> 0:24:02,126
管理视图就会出现

748
00:24:03,776 --> 0:24:07,196
第二个方式

749
00:24:07,196 --> 0:24:08,956
打开通知组

750
00:24:08,956 --> 0:24:10,706
点击右上角

751
00:24:10,706 --> 0:24:12,066
你也可以打开管理视图

752
00:24:12,596 --> 0:24:15,676
第三种方式会出现在

753
00:24:15,676 --> 0:24:16,386
列表中

754
00:24:17,146 --> 0:24:18,616
这取决于用户与

755
00:24:18,616 --> 0:24:19,476
通知之间的交互

756
00:24:19,476 --> 0:24:21,006
用户有时会看到

757
00:24:21,006 --> 0:24:22,566
管理建议

758
00:24:22,616 --> 0:24:24,446
就像这个一样

759
00:24:24,446 --> 0:24:25,676
会询问用户是否保留

760
00:24:25,926 --> 0:24:27,226
播客的通知

761
00:24:27,886 --> 0:24:29,496
在这里

762
00:24:29,496 --> 0:24:31,346
用户可以点击管理

763
00:24:31,346 --> 0:24:32,086
进入管理视图

764
00:24:32,686 --> 0:24:35,456
下面我们来仔细看一下

765
00:24:35,456 --> 0:24:36,196
管理视图

766
00:24:36,866 --> 0:24:38,626
非常明显

767
00:24:38,626 --> 0:24:40,436
用户可以自行

768
00:24:40,436 --> 0:24:41,606
在这个视图中直接修改

769
00:24:41,916 --> 0:24:43,216
通知设置

770
00:24:44,136 --> 0:24:45,906
如果用户想要

771
00:24:45,906 --> 0:24:47,976
在设置里

772
00:24:47,976 --> 0:24:50,146
做更详细的修改

773
00:24:50,146 --> 0:24:52,146
可以通过设置按钮

774
00:24:52,146 --> 0:24:53,356
更快地打开

775
00:24:53,356 --> 0:24:55,446
设置程序

776
00:24:56,106 --> 0:24:58,676
在这处视图

777
00:24:58,676 --> 0:24:59,896
有一些操作用户可以直接操作

778
00:24:59,946 --> 0:25:04,046
一个是 通知静音

779
00:24:59,946 --> 0:25:04,046
一个是 通知静音

780
00:25:04,046 --> 0:25:05,676
这个对于大家来说

781
00:25:05,676 --> 0:25:06,276
可能比较陌生

782
00:25:07,446 --> 0:25:08,746
有时管理视图

783
00:25:08,906 --> 0:25:12,816
会显示优先发送

784
00:25:12,816 --> 0:25:16,746
我们来看看 这是什么

785
00:25:16,746 --> 0:25:18,486
在 iOS 中

786
00:25:18,486 --> 0:25:19,846
有很多设置用户都可以修改

787
00:25:19,846 --> 0:25:21,686
对于比较玩得转的用户来说

788
00:25:21,686 --> 0:25:22,896
这是一大优点

789
00:25:23,296 --> 0:25:24,756
他们可以自行修改设置

790
00:25:24,756 --> 0:25:27,326
精确到细节

791
00:25:27,326 --> 0:25:29,576
但是对于普通用户来说

792
00:25:29,576 --> 0:25:31,046
我们就需要

793
00:25:31,046 --> 0:25:32,706
协助他们

794
00:25:32,706 --> 0:25:34,516
将通知设置分成

795
00:25:34,516 --> 0:25:35,076
两大类

796
00:25:36,016 --> 0:25:37,436
一是

797
00:25:37,566 --> 0:25:39,486
优先发送的通知

798
00:25:39,536 --> 0:25:40,796
二是静音发送的通知

799
00:25:43,056 --> 0:25:46,676
我们比较熟悉优先发送的通知

800
00:25:47,076 --> 0:25:48,016
这类通知

801
00:25:48,016 --> 0:25:48,426
出现在我们的锁屏上

802
00:25:49,926 --> 0:25:50,996
出现在

803
00:25:50,996 --> 0:25:51,416
Notification Center

804
00:25:52,076 --> 0:25:53,486
也会以横幅的形式出现

805
00:25:54,226 --> 0:25:56,376
或在 App 图标上生成角标

806
00:25:56,376 --> 0:25:59,296
也有声音提示

807
00:25:59,466 --> 0:26:00,806
静音发送的通知

808
00:25:59,466 --> 0:26:00,806
静音发送的通知

809
00:26:00,806 --> 0:26:02,966
只会显示在

810
00:26:02,966 --> 0:26:04,556
Notification Center 中

811
00:26:04,556 --> 0:26:08,156
并且没有声音提示

812
00:26:08,346 --> 0:26:09,876
在管理视图中

813
00:26:09,876 --> 0:26:12,066
除了可以设置

814
00:26:12,066 --> 0:26:13,506
优先发送通知

815
00:26:13,886 --> 0:26:15,176
和静音通知

816
00:26:15,176 --> 0:26:17,666
用户还可以

817
00:26:17,696 --> 0:26:20,226
选择关闭通知

818
00:26:21,636 --> 0:26:23,806
我知道现在大家

819
00:26:23,806 --> 0:26:25,146
担心用户会关闭

820
00:26:25,146 --> 0:26:26,406
你的 App 通知

821
00:26:26,406 --> 0:26:29,166
所以我们

822
00:26:29,166 --> 0:26:31,526
增加了一步确认

823
00:26:31,526 --> 0:26:33,126
以防用户误点

824
00:26:33,806 --> 0:26:35,476
用户在这里

825
00:26:35,766 --> 0:26:36,996
也可以关闭通知

826
00:26:37,426 --> 0:26:39,636
我们还新增了一个接口

827
00:26:39,636 --> 0:26:41,536
可以在确认窗口添加

828
00:26:41,906 --> 0:26:44,386
另一个选项

829
00:26:44,386 --> 0:26:46,166
播客就使用了这个接口

830
00:26:46,706 --> 0:26:48,476
所以这里显示去播客中设置

831
00:26:49,556 --> 0:26:52,176
这个地方

832
00:26:52,176 --> 0:26:54,286
链接到播客 App 内部的

833
00:26:54,326 --> 0:26:56,776
自定义设置视图

834
00:26:56,776 --> 0:26:59,256
用户可以更细致地设置

835
00:26:59,256 --> 0:27:01,106
想要接收哪个播客

836
00:26:59,256 --> 0:27:01,106
想要接收哪个播客

837
00:27:01,106 --> 0:27:02,696
的通知

838
00:27:04,056 --> 0:27:06,096
当你的 App 通知

839
00:27:06,096 --> 0:27:07,456
数量越来越多

840
00:27:07,456 --> 0:27:09,536
类型越来越丰富时

841
00:27:09,536 --> 0:27:13,776
让用户可以细致地

842
00:27:13,776 --> 0:27:15,986
管理什么通知是重要的

843
00:27:15,986 --> 0:27:17,886
对他们来说很重要

844
00:27:21,476 --> 0:27:23,816
这个链接也可以

845
00:27:23,966 --> 0:27:26,086
从系统设置访问

846
00:27:26,336 --> 0:27:27,886
只需进入你的 App 的

847
00:27:27,886 --> 0:27:28,256
通知设置就可以找到

848
00:27:28,486 --> 0:27:30,046
对于播客来说

849
00:27:30,376 --> 0:27:31,456
这个链接在页面的下方

850
00:27:31,856 --> 0:27:34,296
名称是播客通知设置

851
00:27:34,796 --> 0:27:37,356
下面我们看看

852
00:27:37,356 --> 0:27:37,606
这些如何在代码中实现

853
00:27:38,196 --> 0:27:41,256
在 UNUserNotificationCenter

854
00:27:41,436 --> 0:27:43,256
Delegate 这个 class 中

855
00:27:43,356 --> 0:27:45,906
我们新增了一个委托方法

856
00:27:46,566 --> 0:27:48,986
也就是 openSettingsFor notification

857
00:27:49,816 --> 0:27:51,316
只要你执行

858
00:27:51,316 --> 0:27:53,296
这个委托方法

859
00:27:53,296 --> 0:27:54,866
刚才我们提到

860
00:27:54,866 --> 0:27:56,206
管理视图和系统设置中

861
00:27:56,206 --> 0:27:57,926
管理视图的链接

862
00:27:57,926 --> 0:28:00,266
系统会自动将其扩充

863
00:27:57,926 --> 0:28:00,266
系统会自动将其扩充

864
00:28:00,846 --> 0:28:03,206
所以当用户点击

865
00:28:03,206 --> 0:28:04,456
这些链接时

866
00:28:04,456 --> 0:28:06,816
就会调用这个委托方法

867
00:28:06,986 --> 0:28:09,426
重要的是

868
00:28:09,426 --> 0:28:10,696
调用这个委托方法时

869
00:28:10,696 --> 0:28:12,096
你必须立即给用户展示

870
00:28:12,096 --> 0:28:13,856
可以在 App 内

871
00:28:13,856 --> 0:28:15,906
调整通知设置的

872
00:28:15,906 --> 0:28:19,106
管理视图

873
00:28:19,366 --> 0:28:22,246
有人可能注意到

874
00:28:22,246 --> 0:28:23,626
我们给这个方法增加了一个参数

875
00:28:23,626 --> 0:28:25,766
叫做 notification

876
00:28:26,236 --> 0:28:27,726
链接在不同地方触发

877
00:28:27,726 --> 0:28:29,126
会有不同影响

878
00:28:29,126 --> 0:28:31,686
如果是在某个管理视图

879
00:28:31,686 --> 0:28:33,306
链接会包含

880
00:28:33,566 --> 0:28:35,006
该 notification 参数的值

881
00:28:35,996 --> 0:28:37,496
如果在

882
00:28:37,496 --> 0:28:39,176
系统设置中触发

883
00:28:39,176 --> 0:28:41,546
则 notification 参数的值为空

884
00:28:41,546 --> 0:28:43,366
你可以在这个委托方法

885
00:28:43,366 --> 0:28:44,466
被调用时

886
00:28:44,466 --> 0:28:46,366
显示合适的

887
00:28:46,366 --> 0:28:47,756
通知设置

888
00:28:48,286 --> 0:28:52,066
这些就是

889
00:28:52,066 --> 0:28:53,316
通知管理部分的内容

890
00:28:53,726 --> 0:28:56,266
对于用户来说

891
00:28:56,616 --> 0:28:57,726
这是一个新的方式

892
00:28:57,726 --> 0:28:58,986
可以设置重点发送或静音发送

893
00:28:59,306 --> 0:29:02,246
关闭通知

894
00:28:59,306 --> 0:29:02,246
关闭通知

895
00:29:02,246 --> 0:29:04,346
甚至可以在 App 中

896
00:29:04,346 --> 0:29:09,293
更细致地进行设置

897
00:29:09,616 --> 0:29:12,106
为了鼓励用户

898
00:29:12,246 --> 0:29:15,616
持续接收你的通知

899
00:29:15,616 --> 0:29:16,976
我们认为很重要的一点是

900
00:29:16,976 --> 0:29:18,576
你的通知

901
00:29:18,956 --> 0:29:19,406
要切题

902
00:29:20,596 --> 0:29:23,276
我们也鼓励大家

903
00:29:23,426 --> 0:29:24,826
使用线程标识

904
00:29:24,826 --> 0:29:26,276
在适当的时候

905
00:29:26,276 --> 0:29:26,986
将通知分组

906
00:29:28,036 --> 0:29:29,046
这可以帮助用户

907
00:29:29,156 --> 0:29:31,706
更好地管理通知列表

908
00:29:32,136 --> 0:29:33,556
也确保他们

909
00:29:33,556 --> 0:29:35,186
看到你的 App 通知时

910
00:29:35,276 --> 0:29:36,526
不会觉得无从下手

911
00:29:37,716 --> 0:29:40,406
我们还认为

912
00:29:40,486 --> 0:29:41,786
如果你的 App

913
00:29:41,786 --> 0:29:43,496
会发送多个类型的通知

914
00:29:43,496 --> 0:29:44,996
你最好能在 App 中

915
00:29:44,996 --> 0:29:47,706
提供自定义设置视图

916
00:29:47,706 --> 0:29:48,986
这样用户可以

917
00:29:48,986 --> 0:29:50,566
更细致地管理

918
00:29:50,566 --> 0:29:52,686
哪种通知对他们最重要

919
00:29:54,046 --> 0:29:55,036
以上就是

920
00:29:55,036 --> 0:29:56,216
通知管理

921
00:29:57,046 --> 0:29:59,226
下面我想介绍的

922
00:29:59,226 --> 0:30:00,496
一个比较大的功能

923
00:29:59,226 --> 0:30:00,496
一个比较大的功能

924
00:30:00,496 --> 0:30:01,986
就是临时授权

925
00:30:02,566 --> 0:30:08,736
现在 如果一个用户安装了你的 App

926
00:30:08,736 --> 0:30:10,606
在他开始接收通知前

927
00:30:10,656 --> 0:30:12,396
必须回应

928
00:30:12,396 --> 0:30:13,586
这样的一个提示

929
00:30:14,856 --> 0:30:15,686
提示会询问用户

930
00:30:15,686 --> 0:30:16,906
是否想接收通知

931
00:30:17,606 --> 0:30:19,366
这最大的问题是

932
00:30:19,366 --> 0:30:21,596
现在用户

933
00:30:22,146 --> 0:30:23,326
无法判断

934
00:30:23,526 --> 0:30:25,126
App 会发送哪种通知

935
00:30:25,186 --> 0:30:26,676
所以他们也不知道

936
00:30:26,676 --> 0:30:27,876
是否想要接收

937
00:30:29,026 --> 0:30:31,906
在 iOS 12 中

938
00:30:32,106 --> 0:30:34,136
我们新增了临时授权

939
00:30:34,136 --> 0:30:36,356
你的 App 会自动

940
00:30:36,356 --> 0:30:38,346
试发送通知

941
00:30:39,376 --> 0:30:41,126
这可以帮助你的用户

942
00:30:41,126 --> 0:30:43,046
更好地判断

943
00:30:43,046 --> 0:30:44,156
他们是否需要

944
00:30:44,156 --> 0:30:45,336
这些通知

945
00:30:46,046 --> 0:30:48,366
你可以选择使用这个功能

946
00:30:48,366 --> 0:30:51,256
使用后

947
00:30:51,256 --> 0:30:52,586
你的用户就不会收到

948
00:30:52,586 --> 0:30:53,196
我们刚才看到的授权提示了

949
00:30:53,816 --> 0:30:56,686
相反 你的通知

950
00:30:56,686 --> 0:30:57,896
会开始自动推送

951
00:30:58,546 --> 0:31:00,946
但是这些通知

952
00:30:58,546 --> 0:31:00,946
但是这些通知

953
00:31:00,946 --> 0:31:04,076
都没有声音提示

954
00:31:04,076 --> 0:31:08,416
并且 静音发送的通知

955
00:31:08,466 --> 0:31:10,496
只会显示在 Notifications Center

956
00:31:10,606 --> 0:31:11,586
这些通知是无声的

957
00:31:15,656 --> 0:31:17,796
通过临时授权

958
00:31:17,976 --> 0:31:19,546
发送的通知

959
00:31:19,916 --> 0:31:23,246
都会带有这样的提示

960
00:31:23,846 --> 0:31:26,976
在接收了几条通知后

961
00:31:27,966 --> 0:31:29,666
可以帮助用户决定

962
00:31:29,666 --> 0:31:31,596
是否要继续接收

963
00:31:31,596 --> 0:31:32,736
这些通知

964
00:31:32,736 --> 0:31:35,236
还是决定

965
00:31:35,236 --> 0:31:39,746
关闭通知

966
00:31:40,926 --> 0:31:42,226
在确认关闭的位置

967
00:31:42,226 --> 0:31:44,056
如果你创建了

968
00:31:44,056 --> 0:31:46,076
自定义设置

969
00:31:46,076 --> 0:31:47,346
在这里它依然会出现

970
00:31:49,176 --> 0:31:50,956
我们来看看

971
00:31:50,956 --> 0:31:51,246
如何通过代码实现

972
00:31:52,426 --> 0:31:53,826
在你通常

973
00:31:53,826 --> 0:31:55,746
请求授权的位置

974
00:31:56,596 --> 0:32:00,226
除了请求的 option

975
00:31:56,596 --> 0:32:00,226
除了请求的 option

976
00:32:00,356 --> 0:32:04,366
你还可以添加一个限定 option

977
00:32:04,366 --> 0:32:05,436
.provisional

978
00:32:06,176 --> 0:32:09,806
添加这个以后

979
00:32:10,036 --> 0:32:11,546
你的 App

980
00:32:11,546 --> 0:32:13,246
自动加入通知试发送

981
00:32:14,786 --> 0:32:16,126
大家需要注意

982
00:32:16,356 --> 0:32:19,656
除 .provisional option 外

983
00:32:19,656 --> 0:32:21,036
你还需要有

984
00:32:21,036 --> 0:32:22,826
其他的 option

985
00:32:23,626 --> 0:32:24,796
这是因为如果用户

986
00:32:24,796 --> 0:32:25,856
决定继续接收

987
00:32:25,856 --> 0:32:27,826
你的通知

988
00:32:27,826 --> 0:32:28,896
系统必须知道

989
00:32:28,896 --> 0:32:31,736
你想如何发送

990
00:32:31,856 --> 0:32:32,536
是否要角标 声音 还是作为提醒

991
00:32:33,186 --> 0:32:36,386
这就是临时授权

992
00:32:36,526 --> 0:32:38,236
它是自动的

993
00:32:38,236 --> 0:32:40,156
通知试发送

994
00:32:40,156 --> 0:32:41,546
可以帮助你的用户

995
00:32:41,546 --> 0:32:43,616
更好地决定

996
00:32:43,616 --> 0:32:45,116
是否要继续接收你的通知

997
00:32:46,466 --> 0:32:49,716
同样 为了鼓励用户

998
00:32:49,716 --> 0:32:51,586
继续接收

999
00:32:51,626 --> 0:32:53,266
你的通知内容

1000
00:32:53,266 --> 0:32:56,066
一定要与你的 App 相关

1001
00:32:57,226 --> 0:33:01,356
并且要记住一点

1002
00:32:57,226 --> 0:33:01,356
并且要记住一点

1003
00:33:01,406 --> 0:33:03,506
使用 .provisional 作为预选项时

1004
00:33:03,766 --> 0:33:05,206
还需要有其他

1005
00:33:05,206 --> 0:33:05,846
你请求的 option

1006
00:33:06,806 --> 0:33:07,836
这就是临时授权

1007
00:33:07,836 --> 0:33:09,426
的全部内容

1008
00:33:10,016 --> 0:33:14,816
我想介绍的

1009
00:33:14,816 --> 0:33:16,396
最后一个大的功能

1010
00:33:16,396 --> 0:33:17,456
就是重要提醒

1011
00:33:18,096 --> 0:33:23,906
通常在我参加会议

1012
00:33:23,906 --> 0:33:25,906
或有重要的事情时

1013
00:33:25,966 --> 0:33:26,086
我的手机是这样的

1014
00:33:26,506 --> 0:33:27,936
大家可以看到

1015
00:33:27,936 --> 0:33:29,026
我开启了免打扰模式

1016
00:33:29,736 --> 0:33:31,156
或者 我至少会

1017
00:33:31,156 --> 0:33:32,606
关闭铃声

1018
00:33:32,606 --> 0:33:34,476
这样我接收通知时

1019
00:33:34,836 --> 0:33:35,616
就不会有声音提示

1020
00:33:36,506 --> 0:33:38,326
通常来说 这样很好

1021
00:33:39,346 --> 0:33:42,836
但是我可能会错过

1022
00:33:42,836 --> 0:33:44,626
非常重要的通知

1023
00:33:44,626 --> 0:33:46,666
就像这个 这是一条

1024
00:33:46,666 --> 0:33:47,526
与健康相关的通知

1025
00:33:48,016 --> 0:33:49,326
我的血糖仪提醒我

1026
00:33:49,606 --> 0:33:51,336
我的血糖过低

1027
00:33:51,336 --> 0:33:53,456
这样的通知

1028
00:33:53,456 --> 0:33:54,746
我会希望能及时看到

1029
00:33:55,996 --> 0:33:58,156
这样的场景

1030
00:33:58,156 --> 0:34:00,396
让我们意识到

1031
00:33:58,156 --> 0:34:00,396
让我们意识到

1032
00:34:00,396 --> 0:34:02,556
我们需要一类新的通知

1033
00:34:02,556 --> 0:34:04,686
我们将它称为重要提醒

1034
00:34:05,596 --> 0:34:08,025
重要提醒是

1035
00:34:08,025 --> 0:34:09,626
医药 健康

1036
00:34:10,706 --> 0:34:12,176
家庭 安全

1037
00:34:12,176 --> 0:34:13,005
或公共安全

1038
00:34:14,286 --> 0:34:16,406
相关的通知

1039
00:34:16,766 --> 0:34:18,446
重要提醒的关键

1040
00:34:19,106 --> 0:34:21,616
在于需要用户

1041
00:34:21,616 --> 0:34:22,976
马上做出回应

1042
00:34:26,235 --> 0:34:27,716
重要提醒

1043
00:34:27,746 --> 0:34:30,065
可以忽略

1044
00:34:30,166 --> 0:34:31,516
免打扰模式

1045
00:34:31,516 --> 0:34:34,186
和铃声静音

1046
00:34:34,186 --> 0:34:35,936
发出声音提示 你甚至可以

1047
00:34:35,936 --> 0:34:36,315
自己设置提示音

1048
00:34:37,406 --> 0:34:38,616
但是这也意味着

1049
00:34:38,616 --> 0:34:40,896
重要提醒会产生干扰

1050
00:34:40,896 --> 0:34:42,795
因为这一点

1051
00:34:43,106 --> 0:34:44,806
我们认为不能允许所有的 App

1052
00:34:44,806 --> 0:34:47,996
发送重要提醒

1053
00:34:49,626 --> 0:34:51,266
想要发送重要提醒

1054
00:34:51,266 --> 0:34:53,096
首先你需要

1055
00:34:53,096 --> 0:34:55,436
申请授权

1056
00:34:55,436 --> 0:34:56,315
你可以登录

1057
00:34:56,315 --> 0:34:58,176
developer.apple 的网站申请

1058
00:34:59,776 --> 0:35:01,236
重要提醒

1059
00:34:59,776 --> 0:35:01,236
重要提醒

1060
00:35:01,236 --> 0:35:03,556
是这个样子

1061
00:35:03,556 --> 0:35:05,446
有一个独特的图标

1062
00:35:05,446 --> 0:35:06,156
表示其重要性

1063
00:35:06,706 --> 0:35:08,976
接收重要提醒时 还会有声音提示

1064
00:35:12,336 --> 0:35:14,126
在通知设置中

1065
00:35:14,196 --> 0:35:16,626
重要提醒 可单独进行设置

1066
00:35:17,996 --> 0:35:22,126
这表示 用户可以允许某个 App

1067
00:35:22,126 --> 0:35:24,456
发送重要提醒

1068
00:35:24,456 --> 0:35:26,276
但是不允许接收该 App

1069
00:35:26,276 --> 0:35:27,386
其他类型的通知

1070
00:35:27,926 --> 0:35:32,306
接收重要提醒之前

1071
00:35:32,306 --> 0:35:33,936
用户需要

1072
00:35:33,936 --> 0:35:35,866
通过这样的

1073
00:35:35,866 --> 0:35:37,416
一个提示

1074
00:35:37,416 --> 0:35:39,216
询问他们

1075
00:35:39,216 --> 0:35:41,046
是否想要接收某个 App 的

1076
00:35:41,046 --> 0:35:42,266
重要提醒

1077
00:35:43,576 --> 0:35:47,196
所以 在发送重要提醒前

1078
00:35:47,196 --> 0:35:48,576
你当然需要获得授权

1079
00:35:49,266 --> 0:35:50,536
当你的

1080
00:35:50,536 --> 0:35:53,166
授权申请通过后

1081
00:35:53,166 --> 0:35:54,356
在你通常请求授权

1082
00:35:54,356 --> 0:35:56,586
请求授权的位置

1083
00:35:56,586 --> 0:35:58,366
除了其他

1084
00:35:58,366 --> 0:36:00,916
需要请求的 option

1085
00:35:58,366 --> 0:36:00,916
需要请求的 option

1086
00:36:00,916 --> 0:36:02,146
你还可以请求

1087
00:36:02,146 --> 0:36:04,096
.criticalAlert option

1088
00:36:05,126 --> 0:36:07,696
用户会先看到提示

1089
00:36:13,046 --> 0:36:14,116
下面我们看看

1090
00:36:14,116 --> 0:36:15,646
如何创建和发送重要提醒

1091
00:36:15,646 --> 0:36:17,596
其实重要提醒

1092
00:36:17,596 --> 0:36:18,926
和普通通知的

1093
00:36:18,926 --> 0:36:19,696
原理相近

1094
00:36:20,376 --> 0:36:21,726
可以看到

1095
00:36:21,726 --> 0:36:23,476
我创建了一个通知

1096
00:36:23,476 --> 0:36:25,576
带有标题 主体 和类型标识

1097
00:36:25,576 --> 0:36:26,986
但是最独特的一点是

1098
00:36:26,986 --> 0:36:28,536
重要提醒

1099
00:36:28,536 --> 0:36:29,136
有声音提示

1100
00:36:29,596 --> 0:36:31,046
所以我需要设置

1101
00:36:31,046 --> 0:36:32,166
重要提醒的提示音

1102
00:36:32,806 --> 0:36:35,346
大家可以看到

1103
00:36:35,346 --> 0:36:37,286
我设置的是

1104
00:36:37,286 --> 0:36:38,926
重要提醒的默认提示音

1105
00:36:38,926 --> 0:36:39,456
由框架提供

1106
00:36:40,186 --> 0:36:43,756
我还可以自定义提示音

1107
00:36:44,716 --> 0:36:46,726
还可以自定义

1108
00:36:46,816 --> 0:36:48,006
提示音量

1109
00:36:48,996 --> 0:36:52,896
当然

1110
00:36:52,896 --> 0:36:54,926
重要提醒也可以是推送通知

1111
00:36:55,326 --> 0:36:57,356
这样所有的这些信息

1112
00:36:57,356 --> 0:36:59,826
可以在 push payload 中进行创建

1113
00:37:01,106 --> 0:37:02,746
这就是重要提醒

1114
00:37:03,356 --> 0:37:07,266
它是新类型的通知

1115
00:37:07,306 --> 0:37:09,796
需要用户及时回应

1116
00:37:10,376 --> 0:37:12,666
重要提醒会产生干扰

1117
00:37:12,666 --> 0:37:14,656
所以你需要得到授权 才可以发送

1118
00:37:18,496 --> 0:37:20,226
这就是今天要给大家介绍的

1119
00:37:20,226 --> 0:37:22,396
所有新的接口

1120
00:37:23,036 --> 0:37:24,486
我来很快给大家总结一下

1121
00:37:24,816 --> 0:37:25,996
今天的主要内容

1122
00:37:26,656 --> 0:37:30,656
我们介绍了如何

1123
00:37:30,756 --> 0:37:32,356
使用线程标识对通知分组

1124
00:37:32,356 --> 0:37:35,136
对通知分组

1125
00:37:35,136 --> 0:37:36,576
以帮助用户

1126
00:37:36,576 --> 0:37:38,706
更好地管理通知列表

1127
00:37:38,896 --> 0:37:40,206
我们介绍了

1128
00:37:40,206 --> 0:37:42,116
通知内容扩展的

1129
00:37:42,116 --> 0:37:44,046
全新接口

1130
00:37:44,046 --> 0:37:45,366
可以让你的通知

1131
00:37:45,366 --> 0:37:47,676
变得更具交互性

1132
00:37:48,256 --> 0:37:51,176
我们还谈到

1133
00:37:51,176 --> 0:37:52,796
如何在你的 App 中

1134
00:37:52,796 --> 0:37:54,746
创建自定义设置视图

1135
00:37:54,746 --> 0:37:57,256
让用户可以更精细地

1136
00:37:57,256 --> 0:37:59,626
筛选想要保留

1137
00:37:59,626 --> 0:38:02,926
哪些通知

1138
00:37:59,626 --> 0:38:02,926
哪些通知

1139
00:38:03,096 --> 0:38:04,496
再然后是

1140
00:38:04,496 --> 0:38:06,086
临时授权

1141
00:38:06,146 --> 0:38:07,306
让你的 App

1142
00:38:07,306 --> 0:38:08,876
可以自动试发送通知

1143
00:38:09,626 --> 0:38:10,806
这样你的用户

1144
00:38:10,806 --> 0:38:13,196
可以更好地决定

1145
00:38:13,196 --> 0:38:14,146
是否要保留

1146
00:38:14,146 --> 0:38:15,386
你的通知

1147
00:38:15,956 --> 0:38:18,416
最后我们介绍了

1148
00:38:18,456 --> 0:38:20,546
重要提醒

1149
00:38:20,546 --> 0:38:22,606
这是新的一类通知

1150
00:38:22,976 --> 0:38:24,566
需要用户采取

1151
00:38:24,566 --> 0:38:25,976
及时回应

1152
00:38:25,976 --> 0:38:26,686
还会产生干扰

1153
00:38:27,446 --> 0:38:29,236
我们希望你们可以利用好

1154
00:38:29,306 --> 0:38:31,506
这些非常棒的接口

1155
00:38:31,506 --> 0:38:33,236
给你们的用户

1156
00:38:33,236 --> 0:38:34,556
带来更好的通知用户体验

1157
00:38:35,556 --> 0:38:36,886
有关本次会议的

1158
00:38:36,886 --> 0:38:37,976
所有信息

1159
00:38:37,976 --> 0:38:39,206
可以在会议页面看到

1160
00:38:39,206 --> 0:38:40,776
developer.apple.com

1161
00:38:41,136 --> 0:38:42,726
我们的会议号码是 710

1162
00:38:43,406 --> 0:38:45,096
接下来还有一次会议

1163
00:38:45,096 --> 0:38:46,636
在三号大厅举行

1164
00:38:46,966 --> 0:38:48,136
内容是如何使用

1165
00:38:48,196 --> 0:38:50,096
分组通知

1166
00:38:50,096 --> 0:38:52,136
我们会帮助大家决定

1167
00:38:52,136 --> 0:38:54,346
如何将你的通知分组最有效

1168
00:38:54,736 --> 0:38:56,336
我们有两个通知实验议程

1169
00:38:56,686 --> 0:38:58,176
一个在今天 一个在明天

1170
00:38:58,426 --> 0:38:59,636
你可以向我们团队的

1171
00:38:59,636 --> 0:39:01,396
工程师询问

1172
00:38:59,636 --> 0:39:01,396
工程师询问

1173
00:39:01,396 --> 0:39:03,456
任何相关问题

1174
00:39:03,456 --> 0:39:05,416
周五上午

1175
00:39:05,416 --> 0:39:06,806
我们还有一场非常有趣的会议

1176
00:39:06,806 --> 0:39:08,166
叫做如何设计通知

1177
00:39:08,656 --> 0:39:11,726
讲者是我们的设计师

1178
00:39:11,726 --> 0:39:13,526
他们帮助我们设计了所有的这些

1179
00:39:13,566 --> 0:39:14,566
到时候他们会介绍

1180
00:39:14,916 --> 0:39:16,716
通知的最佳使用方法

1181
00:39:17,466 --> 0:39:18,976
感谢大家 祝大家顺利

1182
00:39:19,508 --> 0:39:21,508
[ 掌声 ]
