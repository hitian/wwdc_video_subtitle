1
00:00:17,251 --> 0:00:21,722
（获取和使用

2
00:00:22,256 --> 0:00:25,926
欢迎来到演讲508

3
00:00:26,360 --> 0:00:28,362
我是MapKit JS团队的

4
00:00:29,096 --> 0:00:29,930
在这段视频里

5
00:00:30,364 --> 0:00:33,233
我们将学习

6
00:00:33,700 --> 0:00:35,769
创建一个MapKit JS密钥

7
00:00:36,270 --> 0:00:37,905
创建一个授权令牌

8
00:00:37,971 --> 0:00:39,339
最后 我们将制作一张地图

9
00:00:40,841 --> 0:00:44,244
让我们深入了解一下

10
00:00:44,811 --> 0:00:45,846
（网络是纯文本）

11
00:00:45,913 --> 0:00:49,383
你放在网上的任何内容（包括

12
00:00:49,883 --> 0:00:51,585
网络的伟大之处之一在于

13
00:00:51,652 --> 0:00:54,788
仅仅通过查看源代码

14
00:00:56,223 --> 0:00:58,625
只需打开网络检查器

15
00:00:59,193 --> 0:01:00,227
看到你喜欢的地图了吗？

16
00:00:59,193 --> 0:01:00,227
看到你喜欢的地图了吗？

17
00:01:00,661 --> 0:01:02,563
查看它的源代码

18
00:01:02,863 --> 0:01:04,197
我就是这样来学习的

19
00:01:05,866 --> 0:01:07,668
问题是 有时这意味着

20
00:01:07,734 --> 0:01:10,637
你的API授权凭证可以被复制

21
00:01:10,704 --> 0:01:12,739
而且未经你的许可而误用

22
00:01:13,674 --> 0:01:17,311
未经授权的使用

23
00:01:18,212 --> 0:01:19,413
一旦达到限制

24
00:01:19,680 --> 0:01:22,416
你的网站可能无法再显示地图

25
00:01:23,183 --> 0:01:26,854
MapKit JS授权系统

26
00:01:26,920 --> 0:01:28,522
为你提供更多控制

27
00:01:29,089 --> 0:01:32,492
你可以设置访问应该到期的时间

28
00:01:33,660 --> 0:01:35,963
并限制对特定域名的访问

29
00:01:36,697 --> 0:01:39,333
当然 网络的特点是

30
00:01:39,399 --> 0:01:41,034
并用网络检查器读取有关信息

31
00:01:41,502 --> 0:01:44,204
但是如果有人出于任何原因

32
00:01:44,271 --> 0:01:46,139
如何使用它将是有限制的

33
00:01:47,641 --> 0:01:51,712
让我们来概括地谈谈

34
00:01:52,913 --> 0:01:56,917
你拿到了MapKit JS密钥后

35
00:01:57,551 --> 0:01:59,253
绝不能通过网络共享

36
00:01:59,419 --> 0:02:01,588
相反 你将创建有限制的令牌

37
00:01:59,419 --> 0:02:01,588
相反 你将创建有限制的令牌

38
00:02:01,822 --> 0:02:03,891
并用你的密钥来签名

39
00:02:04,591 --> 0:02:06,260
你就用这个令牌

40
00:02:06,326 --> 0:02:09,463
通过MapKit JS API

41
00:02:10,864 --> 0:02:14,067
让我们看看如何创建

42
00:02:15,636 --> 0:02:17,437
MapKit JS密钥

43
00:02:17,504 --> 0:02:19,706
与MapKit JS API

44
00:02:20,541 --> 0:02:22,509
这是一次性设置

45
00:02:23,277 --> 0:02:24,545
创建一个地图标识符

46
00:02:25,512 --> 0:02:29,216
创建一个MapKit JS密钥

47
00:02:30,384 --> 0:02:33,053
然后下载你的密钥

48
00:02:34,655 --> 0:02:35,489
在我们开始之前

49
00:02:35,889 --> 0:02:39,326
请到

50
00:02:40,427 --> 0:02:43,664
左侧菜单中 单击

51
00:02:43,730 --> 0:02:44,765
再Profiles

52
00:02:47,100 --> 0:02:49,870
我们的第一步是创建一个地图标识符

53
00:02:50,437 --> 0:02:53,774
这将在Apple Developer

54
00:02:54,341 --> 0:02:56,710
同时它也用于跟踪使用限制

55
00:02:58,979 --> 0:03:01,248
你可能想要对生产和开发环境

56
00:02:58,979 --> 0:03:01,248
你可能想要对生产和开发环境

57
00:03:01,315 --> 0:03:03,550
创建不同的标识符

58
00:03:04,351 --> 0:03:05,853
要创建地图标识符

59
00:03:06,620 --> 0:03:09,089
从菜单中选择地图标识符

60
00:03:10,390 --> 0:03:12,492
点击右上角的 + 按钮

61
00:03:14,061 --> 0:03:15,729
给这个标识符一个说明

62
00:03:16,296 --> 0:03:18,565
这个说明应该是你显示给用户的

63
00:03:18,632 --> 0:03:19,867
网站的名称

64
00:03:21,368 --> 0:03:23,303
给这个标识符一个独特的ID

65
00:03:23,904 --> 0:03:27,207
我们建议为此ID

66
00:03:27,574 --> 0:03:29,877
它需要以字符串maps开始

67
00:03:32,079 --> 0:03:32,913
例如

68
00:03:33,280 --> 0:03:37,918
maps.com

69
00:03:40,487 --> 0:03:42,289
下面我们将创建一个

70
00:03:42,789 --> 0:03:45,425
此密钥是你与Apple之间的秘密

71
00:03:45,792 --> 0:03:47,828
绝不应该存储在前端代码中

72
00:03:48,161 --> 0:03:50,697
存入源代码管理

73
00:03:52,065 --> 0:03:56,870
首先点击左侧菜单中

74
00:03:58,405 --> 0:04:01,275
然后点击标题中的 + 图标

75
00:03:58,405 --> 0:04:01,275
然后点击标题中的 + 图标

76
00:04:02,809 --> 0:04:04,778
下面给这个新的密钥命名

77
00:04:06,980 --> 0:04:09,917
再选择MapKit JS复选框

78
00:04:11,451 --> 0:04:13,253
然后点击Configure按钮

79
00:04:14,288 --> 0:04:16,023
现在你已经创建了一个新的密钥

80
00:04:16,990 --> 0:04:20,060
我们可以从Maps下拉菜单中

81
00:04:20,459 --> 0:04:23,096
将它与你之前创建的

82
00:04:24,097 --> 0:04:27,568
地图标识符同时只能与一个密钥关联

83
00:04:29,036 --> 0:04:32,272
当你选择了你的地图标识符后

84
00:04:34,007 --> 0:04:38,712
最后在出现提示时复查你的输入

85
00:04:40,881 --> 0:04:42,549
现在可以下载你的密钥了

86
00:04:43,150 --> 0:04:44,384
点击Download按钮

87
00:04:44,451 --> 0:04:46,720
将你的授权密钥文件

88
00:04:47,221 --> 0:04:49,189
你只能下载此文件一次

89
00:04:49,256 --> 0:04:50,791
请务必保存在安全的地方

90
00:04:51,191 --> 0:04:52,226
若这个文件找不到了

91
00:04:52,659 --> 0:04:54,094
你需要创建一个新的密钥

92
00:04:54,161 --> 0:04:55,562
然后撤销旧密钥

93
00:04:57,264 --> 0:04:58,131
下载时

94
00:04:58,465 --> 0:05:00,868
你的授权密钥文件看起来像这样

95
00:04:58,465 --> 0:05:00,868
你的授权密钥文件看起来像这样

96
00:05:01,368 --> 0:05:02,402
如我之前所说

97
00:05:02,970 --> 0:05:06,106
此密钥旨在成为

98
00:05:07,174 --> 0:05:10,410
这是你唯一能够下载

99
00:05:10,911 --> 0:05:13,180
我们建议你尽快将其

100
00:05:14,581 --> 0:05:17,451
如果你丢失了钥匙或者钥匙被盗用

101
00:05:17,751 --> 0:05:20,287
你可以随时回到

102
00:05:20,354 --> 0:05:21,889
来撤销它并创建一个新的密钥

103
00:05:25,292 --> 0:05:27,327
你刚创建了一个

104
00:05:28,061 --> 0:05:30,063
现在我们将创建授权令牌

105
00:05:30,364 --> 0:05:33,333
可用于通过Web授权

106
00:05:36,270 --> 0:05:39,673
令牌创建时包含了开发人员的身份

107
00:05:39,907 --> 0:05:42,075
并使用你的授权密钥文件进行签名

108
00:05:42,976 --> 0:05:44,545
声明被添加到此令牌中

109
00:05:44,811 --> 0:05:48,348
Apple用它来验证客户的授权

110
00:05:49,917 --> 0:05:53,387
让我们深入了解如何制作授权令牌

111
00:05:55,322 --> 0:05:57,391
MapKit JS授权令牌

112
00:05:57,457 --> 0:06:02,796
基于JSON Web令牌

113
00:05:57,457 --> 0:06:02,796
基于JSON Web令牌

114
00:06:02,963 --> 0:06:04,231
简称JWT

115
00:06:04,965 --> 0:06:09,036
这是专为传输通过网络的授权声明

116
00:06:09,102 --> 0:06:11,004
而设计的行业标准

117
00:06:12,172 --> 0:06:16,310
你可以在jwt.io上

118
00:06:17,878 --> 0:06:21,748
你还可以找到用大多数编程语言写的

119
00:06:21,815 --> 0:06:23,450
用于签署JWT令牌的库

120
00:06:25,185 --> 0:06:28,655
所有JWT令牌都由以下三部分组成

121
00:06:29,423 --> 0:06:33,894
头部 有效载荷和签名

122
00:06:34,995 --> 0:06:38,832
以句点进行分隔

123
00:06:39,199 --> 0:06:42,636
这就是一个可以

124
00:06:44,872 --> 0:06:47,641
为你的授权令牌

125
00:06:47,708 --> 0:06:49,142
推荐的JWT配置

126
00:06:49,610 --> 0:06:52,379
短命令牌和长命令牌

127
00:06:54,781 --> 0:06:56,550
让我们从短命令牌开始

128
00:06:57,050 --> 0:07:00,821
这些授权令牌

129
00:06:57,050 --> 0:07:00,821
这些授权令牌

130
00:07:01,355 --> 0:07:05,092
通过确保授权令牌如果从源代码复制

131
00:07:05,158 --> 0:07:06,627
不能长期使用

132
00:07:07,895 --> 0:07:10,831
这种方法要求你提供服务器端点

133
00:07:10,898 --> 0:07:13,233
响应来自MapKit JS的请求

134
00:07:13,300 --> 0:07:14,935
获取新的授权令牌

135
00:07:15,736 --> 0:07:18,238
任何时候我们需要

136
00:07:18,305 --> 0:07:21,542
MapKit将从此端点刷新

137
00:07:23,377 --> 0:07:27,347
首先有效载荷必须包含ISS声明

138
00:07:28,081 --> 0:07:30,751
这是你的Apple Developer

139
00:07:31,485 --> 0:07:32,920
你可以到

140
00:07:33,453 --> 0:07:36,657
从帐户部分找到你的团队ID

141
00:07:37,791 --> 0:07:39,293
IAT声明

142
00:07:39,626 --> 0:07:43,564
这是以秒计算的授权令牌发出的时间

143
00:07:44,498 --> 0:07:45,766
EXP声明

144
00:07:46,366 --> 0:07:50,137
这是以秒计算的授权令牌到期时间

145
00:07:50,971 --> 0:07:53,740
对于短期令牌 我们建议30分钟

146
00:07:54,541 --> 0:07:56,343
最后 一个起源的声明

147
00:07:57,110 --> 0:08:01,882
这可以通过匹配原始标题

148
00:07:57,110 --> 0:08:01,882
这可以通过匹配原始标题

149
00:08:03,083 --> 0:08:05,786
虽然此声明是可选的 但我们建议

150
00:08:05,853 --> 0:08:08,889
所有授权令牌都用它

151
00:08:10,490 --> 0:08:15,062
其次 你先前下载的

152
00:08:15,729 --> 0:08:19,666
这个完整的文件

153
00:08:20,000 --> 0:08:21,702
应该用来签署此令牌

154
00:08:22,336 --> 0:08:26,139
请参阅你的JWT签名库的文档

155
00:08:26,340 --> 0:08:28,942
获取特定于你的编程语言的指令

156
00:08:30,143 --> 0:08:35,982
最后 JWT令牌的标题部分

157
00:08:36,582 --> 0:08:38,852
这是你的MapKit JS

158
00:08:39,586 --> 0:08:42,222
注意这与你的地图标识符不同

159
00:08:43,289 --> 0:08:47,728
TYP声明应该是字符串JWT

160
00:08:47,794 --> 0:08:50,230
来识别这是一个JWT风格的标记

161
00:08:50,898 --> 0:08:54,935
和一个ALG声明

162
00:08:55,602 --> 0:08:58,338
这必须设置为ES256

163
00:09:00,073 --> 0:09:02,643
当它传递给你的JWT签名库时

164
00:09:02,709 --> 0:09:05,212
将输出一个JWT令牌

165
00:09:05,646 --> 0:09:07,748
由MapKit JS使用

166
00:09:08,649 --> 0:09:10,450
由于短命令在用户完成其会话之前

167
00:09:10,517 --> 0:09:12,486
可能会过期

168
00:09:12,819 --> 0:09:15,956
你的服务器需为MapKit JS

169
00:09:16,023 --> 0:09:18,325
将响应新令牌的请求

170
00:09:18,926 --> 0:09:22,329
稍后我将向你展示如何使

171
00:09:22,396 --> 0:09:24,932
但现在 我已经创建了

172
00:09:24,998 --> 0:09:27,201
这里是一个端点的例子

173
00:09:28,602 --> 0:09:31,438
每次调用时 这条路线只是返回

174
00:09:31,505 --> 0:09:34,741
设置为在1800秒或30分钟内

175
00:09:35,175 --> 0:09:36,276
过期

176
00:09:36,944 --> 0:09:38,946
无论你的令牌是否到期

177
00:09:39,279 --> 0:09:41,381
贯穿用户的会话

178
00:09:41,448 --> 0:09:43,250
任何时候需要授权

179
00:09:43,317 --> 0:09:44,985
MapKit JS会调用该端点

180
00:09:46,787 --> 0:09:49,289
由于你的端点需要返回一个新的令牌

181
00:09:49,356 --> 0:09:50,457
每次调用时

182
00:09:50,858 --> 0:09:53,160
你需要让浏览器知道不要缓存

183
00:09:53,861 --> 0:09:56,330
你可以通过设置缓存控制标题来做到

184
00:09:57,831 --> 0:09:58,899
如果设置正确

185
00:09:59,166 --> 0:10:01,802
你应该在你的服务器上

186
00:09:59,166 --> 0:10:01,802
你应该在你的服务器上

187
00:10:01,869 --> 0:10:03,203
看起来像这样

188
00:10:05,539 --> 0:10:07,007
长寿命的标记是不同的

189
00:10:07,508 --> 0:10:09,343
其到期时间设定得远得多

190
00:10:09,910 --> 0:10:12,179
你可以在很长一段时间

191
00:10:12,246 --> 0:10:13,680
使用相同的标记

192
00:10:14,448 --> 0:10:16,850
这种类型的令牌不需要服务器

193
00:10:17,317 --> 0:10:19,586
因为令牌在用户的会话期间

194
00:10:19,653 --> 0:10:20,787
不易过期

195
00:10:22,022 --> 0:10:25,759
出于这个原因

196
00:10:25,826 --> 0:10:27,294
或在开发环境中使用

197
00:10:27,995 --> 0:10:31,031
你可以根据你的发布周期

198
00:10:31,431 --> 0:10:32,766
同步调整令牌的到期和续订

199
00:10:33,300 --> 0:10:36,103
我们强烈建议你在长寿命的令牌中

200
00:10:36,170 --> 0:10:37,271
附上来源声明

201
00:10:37,671 --> 0:10:38,839
让我们看看这如何完成

202
00:10:40,374 --> 0:10:41,408
在这个例子中

203
00:10:41,708 --> 0:10:44,711
我们设置了长达6个月的长期令牌

204
00:10:45,345 --> 0:10:46,413
如我之前所说

205
00:10:46,480 --> 0:10:48,782
你可以根据你的app的需要改动

206
00:10:49,349 --> 0:10:52,452
例如 如果你团队的发布周期是两周

207
00:10:52,953 --> 0:10:55,522
你可以设置你的期望与之同步

208
00:10:56,123 --> 0:10:58,125
甚至加几个星期作为缓冲

209
00:10:59,593 --> 0:11:03,330
无论什么情况下 建议设置原始声明

210
00:10:59,593 --> 0:11:03,330
无论什么情况下 建议设置原始声明

211
00:11:03,497 --> 0:11:05,933
尤其是长期到期的令牌

212
00:11:06,233 --> 0:11:07,768
这是你防止滥用你的身份的

213
00:11:07,835 --> 0:11:09,469
最强的防守

214
00:11:11,238 --> 0:11:13,807
现在令牌在手 我们准备做一张地图

215
00:11:15,576 --> 0:11:18,579
最简单的例子就是

216
00:11:19,213 --> 0:11:24,551
包括链接到Apple CDN上的

217
00:11:26,053 --> 0:11:27,855
记得吗 刚才我说我会展示

218
00:11:27,921 --> 0:11:30,891
如何使MapKit JS

219
00:11:32,059 --> 0:11:34,528
这发生在初始化

220
00:11:34,862 --> 0:11:36,797
当你提供回调函数时

221
00:11:37,531 --> 0:11:38,799
对于短命令牌

222
00:11:39,032 --> 0:11:41,768
MapKit JS

223
00:11:41,935 --> 0:11:43,704
根据需要获取新的令牌

224
00:11:46,340 --> 0:11:50,010
请注意 当MapKit JS

225
00:11:50,477 --> 0:11:51,812
它会传递一个函数

226
00:11:52,346 --> 0:11:54,248
在我们的例子里我们调用Done

227
00:11:55,115 --> 0:11:57,417
用你的新令牌调用这个函数

228
00:11:57,751 --> 0:12:01,288
以允许MapKit JS

229
00:11:57,751 --> 0:12:01,288
以允许MapKit JS

230
00:12:03,323 --> 0:12:05,025
如果你使用的是长寿命的令牌

231
00:12:05,325 --> 0:12:07,394
只需在授权回调函数的主体中

232
00:12:07,461 --> 0:12:10,330
立即调用Done

233
00:12:11,131 --> 0:12:13,934
任何时候需要刷新其授权时

234
00:12:14,234 --> 0:12:17,538
MapKit JS

235
00:12:19,573 --> 0:12:22,976
最后 为地图设置一个地图框和中心

236
00:12:25,879 --> 0:12:28,749
让我们启动我们的服务器

237
00:12:31,151 --> 0:12:32,853
如果一切设置正确

238
00:12:33,153 --> 0:12:34,821
你的浏览器应显示一个地图

239
00:12:36,657 --> 0:12:39,693
如果你在网络检查器中使用短命令牌

240
00:12:40,093 --> 0:12:43,297
你应该保证服务器端点被调用

241
00:12:43,764 --> 0:12:45,566
返回授权令牌

242
00:12:46,900 --> 0:12:49,369
既然MapKit JS有了授权

243
00:12:49,570 --> 0:12:50,504
它会完成其余的工作

244
00:12:51,104 --> 0:12:53,941
任何时候它需要一个新的令牌

245
00:12:54,208 --> 0:12:55,609
MapKit JS

246
00:12:57,878 --> 0:13:01,114
现在你知道了

247
00:12:57,878 --> 0:13:01,114
现在你知道了

248
00:13:02,115 --> 0:13:04,151
你也知道了如何创建一个

249
00:13:05,319 --> 0:13:07,521
创建一个授权令牌

250
00:13:07,855 --> 0:13:12,125
以及如何用你的新令牌做一个地图

251
00:13:14,294 --> 0:13:18,465
请记住 获取你MapKit JS

252
00:13:19,132 --> 0:13:21,635
只能通过网络发送授权令牌

253
00:13:22,836 --> 0:13:24,371
如果某个密钥泄露

254
00:13:24,805 --> 0:13:27,140
你只要创建并更新你的网站

255
00:13:27,541 --> 0:13:30,210
然后在Apple Developer网站上

256
00:13:30,277 --> 0:13:31,245
撤消旧密钥

257
00:13:32,846 --> 0:13:33,981
想要了解更多信息

258
00:13:34,681 --> 0:13:41,688
请访问

259
00:13:43,557 --> 0:13:44,725
看看我们的演讲

260
00:13:44,992 --> 0:13:46,493
“引入MapKit JS”

261
00:13:46,560 --> 0:13:49,730
星期二下午5点在行政宴会厅举行

262
00:13:50,864 --> 0:13:51,698
谢谢
