1
00:00:06,516 --> 0:00:15,516
[ 音乐 ]

2
00:00:16,516 --> 0:00:20,456
[ 掌声 ]

3
00:00:20,956 --> 0:00:21,456
&gt;&gt; 谢谢 Mike

4
00:00:22,686 --> 0:00:23,536
大家好

5
00:00:24,496 --> 0:00:26,156
你们当中有多少人对 AR 感兴趣

6
00:00:27,616 --> 0:00:30,326
好吧 好的 现在你们当中有多少人

7
00:00:30,326 --> 0:00:31,936
已经在 App Store 上有了 AR App

8
00:00:33,136 --> 0:00:34,876
好的 不是很多的

9
00:00:36,186 --> 0:00:38,276
我知道了 AR 是非常吓人的

10
00:00:38,816 --> 0:00:40,716
好的 今天我们要来看一看

11
00:00:40,716 --> 0:00:42,466
我们使用的一些技巧 希望这些

12
00:00:43,026 --> 0:00:45,006
技巧可以从两个方面来帮到你

13
00:00:45,986 --> 0:00:47,246
首先 它们极有可能使

14
00:00:47,246 --> 0:00:48,886
AR 变得更加容易接近

15
00:00:48,886 --> 0:00:52,346
其次 我们将向你们展示

16
00:00:52,346 --> 0:00:53,256
如何通过在编写代码之前

17
00:00:53,316 --> 0:00:55,106
确定自己要做的

18
00:00:55,106 --> 0:00:56,246
是正确的这种方式

19
00:00:56,606 --> 0:00:59,306
来节省时间和金钱

20
00:01:00,286 --> 0:01:01,296
让我们开始吧

21
00:01:03,296 --> 0:01:05,186
如果你已经看过了我们的团队以前

22
00:01:05,186 --> 0:01:07,766
在 WWDC 上发表的演讲 你可能

23
00:01:07,766 --> 0:01:08,896
对我们革命性的 App

24
00:01:08,896 --> 0:01:11,726
Toast Modern 不陌生了

25
00:01:12,686 --> 0:01:14,626
它是一个用来寻找和评价

26
00:01:14,626 --> 0:01:16,096
你身边吐司的最好的 App

27
00:01:16,836 --> 0:01:17,516
我知道这件事是太棒了

28
00:01:18,756 --> 0:01:20,436
我们一直在建立我们的

29
00:01:20,436 --> 0:01:22,976
吐司数据库 现在我们的

30
00:01:22,976 --> 0:01:24,836
任务是为这个 App

31
00:01:25,746 --> 0:01:26,826
添加 AR 功能

32
00:01:27,076 --> 0:01:28,206
我确定你们都注意到了

33
00:01:28,206 --> 0:01:29,586
手工烘焙已经在

34
00:01:29,586 --> 0:01:31,416
湾区占了很大的比例

35
00:01:31,926 --> 0:01:35,666
接下来它会占领

36
00:01:35,786 --> 0:01:36,846
更大的比例

37
00:01:37,876 --> 0:01:42,196
ToastAR 是世界上

38
00:01:42,306 --> 0:01:46,036
第一个使用 AR 来识别并

39
00:01:46,286 --> 0:01:46,896
评价吐司的 App

40
00:01:46,946 --> 0:01:48,926
我知道 谢谢

41
00:01:51,196 --> 0:01:52,776
通过对计算机视觉和

42
00:01:52,776 --> 0:01:55,076
AR 的使用 ToastAR 可以让你知道

43
00:01:55,116 --> 0:01:56,556
一片吐司的评价结果

44
00:01:56,596 --> 0:01:59,026
和它产自于哪个面包房

45
00:02:00,486 --> 0:02:02,106
我知道这是革命性的

46
00:02:02,156 --> 0:02:03,136
你们都是 Apple 平台的

47
00:02:03,136 --> 0:02:04,296
开发者 那么你们希望

48
00:02:04,296 --> 0:02:06,716
会有最好的 API 和

49
00:02:06,716 --> 0:02:07,926
最好的硬件

50
00:02:07,926 --> 0:02:09,726
那为什么不同时希望拥有

51
00:02:09,726 --> 0:02:10,606
最好的吐司呢

52
00:02:11,966 --> 0:02:13,246
那么我们是如何创建这个漂亮的

53
00:02:13,386 --> 0:02:14,996
革命性的 App 的原型的呢

54
00:02:14,996 --> 0:02:17,276
你可能觉得我们使用了

55
00:02:17,276 --> 0:02:20,426
像 Swift 这样的编程语言

56
00:02:20,586 --> 0:02:24,786
或者像 ARKit 这样的框架

57
00:02:25,026 --> 0:02:26,376
或者甚至像 Unity 这样的

58
00:02:26,376 --> 0:02:27,736
复杂 App

59
00:02:28,516 --> 0:02:29,946
这些都是建造原型

60
00:02:29,946 --> 0:02:31,796
有效的方法 但它们不是

61
00:02:31,796 --> 0:02:32,516
唯一的方法

62
00:02:33,876 --> 0:02:37,276
有些时候你可以使用低技术的

63
00:02:37,276 --> 0:02:38,736
物理上的原型设计技术

64
00:02:38,876 --> 0:02:40,226
来解决你的设计问题

65
00:02:40,226 --> 0:02:42,436
然后你再开始编写代码

66
00:02:42,846 --> 0:02:45,046
所以今天我将向你展示

67
00:02:45,046 --> 0:02:46,646
如何只使用照相机

68
00:02:47,556 --> 0:02:53,026
和你身边的世界来

69
00:02:53,266 --> 0:02:54,976
为 AR 设计原型 就像我们

70
00:02:54,976 --> 0:02:55,696
为 ToastAR 做的一样

71
00:02:56,586 --> 0:02:57,586
在我们开始之前

72
00:02:57,586 --> 0:02:58,546
你需要熟悉

73
00:02:58,546 --> 0:02:59,646
两个术语

74
00:03:01,176 --> 0:03:03,076
第一个是世界空间

75
00:03:03,566 --> 0:03:04,976
当我们说世界空间的时候

76
00:03:04,976 --> 0:03:06,566
我们说的是

77
00:03:06,566 --> 0:03:09,576
在你和你周围的世界设备里的设计要素

78
00:03:09,576 --> 0:03:13,066
当我们说到屏幕空间的时候

79
00:03:13,106 --> 0:03:14,846
我们说的是

80
00:03:14,846 --> 0:03:16,796
你设备屏幕上的这些设计元素

81
00:03:18,896 --> 0:03:20,216
现在让我们来看一看

82
00:03:20,266 --> 0:03:21,376
我们为 ToastAR 做的

83
00:03:21,376 --> 0:03:23,206
初始设计和我们设计过程中的一些工作

84
00:03:23,826 --> 0:03:28,456
在这个设计中 我们有一个

85
00:03:28,456 --> 0:03:30,446
世界空间里的标签 它向我们展示了

86
00:03:30,446 --> 0:03:33,006
这个吐司是从哪里来的 和它的当前评分

87
00:03:33,946 --> 0:03:35,916
现在 你可能想马上

88
00:03:35,916 --> 0:03:37,196
开始编程操作

89
00:03:37,196 --> 0:03:38,726
它看起来很简单 但是

90
00:03:38,726 --> 0:03:40,366
我们将通过在编写代码之前

91
00:03:40,366 --> 0:03:42,336
确保我们做的都是

92
00:03:42,336 --> 0:03:43,746
正确的决定 从而来

93
00:03:43,936 --> 0:03:46,606
节省时间和金钱

94
00:03:46,606 --> 0:03:49,326
AR 是关于我们身边的世界

95
00:03:50,286 --> 0:03:52,386
所以通过一个单一的静止画面

96
00:03:52,386 --> 0:03:54,166
甚至视频来测试你的设计

97
00:03:54,166 --> 0:03:55,046
是很困难的

98
00:03:56,236 --> 0:03:57,816
然而物理上的原型设计

99
00:03:58,046 --> 0:03:59,446
可以让我们以一种可操作的

100
00:03:59,446 --> 0:04:01,516
低科技的并且高互动的方式

101
00:03:59,446 --> 0:04:01,516
低科技的并且高互动的方式

102
00:04:01,606 --> 0:04:02,646
来进行测试

103
00:04:03,666 --> 0:04:05,256
所以我们是如何开始的呢

104
00:04:05,996 --> 0:04:08,816
我们打印出了我们的标签

105
00:04:08,976 --> 0:04:10,946
并且把它们贴在一些牙签上

106
00:04:11,906 --> 0:04:13,326
我知道 我知道

107
00:04:13,426 --> 0:04:15,796
它可能看起来奇怪 但是这个

108
00:04:15,796 --> 0:04:17,736
低科技的过程将在

109
00:04:17,736 --> 0:04:19,255
三个方面给予我们帮助

110
00:04:20,396 --> 0:04:22,106
首先 我们将在 AR 的内容中

111
00:04:22,106 --> 0:04:23,616
测试我们的设计

112
00:04:23,996 --> 0:04:26,146
记住 AR 是关于你身边的世界

113
00:04:27,376 --> 0:04:29,256
其次 我们希望在我们

114
00:04:29,256 --> 0:04:30,656
编写代码之前

115
00:04:30,656 --> 0:04:34,686
找到任何我们设计上的缺陷

116
00:04:34,896 --> 0:04:37,246
并且最后 通过这个过程

117
00:04:37,626 --> 0:04:39,206
我们有可能产生一些

118
00:04:39,236 --> 0:04:41,136
新的想法来使 ToastAR 变得

119
00:04:41,136 --> 0:04:42,116
更加优秀

120
00:04:43,196 --> 0:04:44,646
但是 对于那些没有

121
00:04:44,646 --> 0:04:45,196
打印机的人 该怎么呢

122
00:04:46,256 --> 0:04:48,656
你甚至可以画一些东西

123
00:04:48,706 --> 0:04:51,206
然后把它们剪下来

124
00:04:51,466 --> 0:04:54,476
所以现在我们有了

125
00:04:54,476 --> 0:04:55,896
粘在牙签上的标签

126
00:04:56,036 --> 0:04:57,756
然后我们把它插在一片吐司上

127
00:04:58,936 --> 0:05:01,306
接着仅仅使用相机 App

128
00:04:58,936 --> 0:05:01,306
接着仅仅使用相机 App

129
00:05:01,306 --> 0:05:02,756
我们就可以在世界空间里

130
00:05:02,756 --> 0:05:03,346
测试这种设计了

131
00:05:05,736 --> 0:05:07,976
我知道 这是革命性的 对吗

132
00:05:08,516 --> 0:05:11,796
[ 掌声 ]

133
00:05:12,296 --> 0:05:13,636
当我们尝试这些东西的时候

134
00:05:13,636 --> 0:05:14,796
我们马上意识到了一件事

135
00:05:14,856 --> 0:05:16,426
这些标签将在某些角度

136
00:05:16,426 --> 0:05:18,086
变得非常难以阅读

137
00:05:18,956 --> 0:05:20,126
所以这些标签很难在

138
00:05:20,126 --> 0:05:20,646
一些角度下进行阅读

139
00:05:21,186 --> 0:05:23,976
也许我们应该让标签始终面对相机

140
00:05:24,556 --> 0:05:26,226
所以让我们试试看

141
00:05:27,776 --> 0:05:29,626
在一个协助者

142
00:05:29,626 --> 0:05:31,606
和一些极其复杂的硬件

143
00:05:31,646 --> 0:05:34,096
的帮助下 好吧

144
00:05:34,096 --> 0:05:35,836
是一把透明的直尺

145
00:05:36,736 --> 0:05:37,076
但是它很漂亮

146
00:05:38,526 --> 0:05:39,326
我们测试了这种方式

147
00:05:39,326 --> 0:05:41,496
我们发现这种方式可行

148
00:05:41,496 --> 0:05:42,846
当标签一直面对相机时

149
00:05:42,846 --> 0:05:43,766
它确实更容易阅读

150
00:05:45,306 --> 0:05:46,436
这种行为通常

151
00:05:46,436 --> 0:05:47,726
被称为 billboarding

152
00:05:47,926 --> 0:05:49,256
并且这看起来非常容易通过

153
00:05:49,256 --> 0:05:51,056
使用 SceneKit 中的

154
00:05:51,056 --> 0:05:52,916
SCNBillboardConstraint 来实现

155
00:05:53,846 --> 0:05:55,746
但是在我们开始编程这个功能之前

156
00:05:56,056 --> 0:05:57,296
让我们继续对这个设计

157
00:05:57,296 --> 0:05:58,866
进行测试来确保我们

158
00:05:58,866 --> 0:05:59,726
构建正确的决定

159
00:06:00,406 --> 0:06:01,866
所以当标签上有许多文字

160
00:06:01,866 --> 0:06:03,386
或者标签距离比较远的时候

161
00:06:03,386 --> 0:06:04,196
这个功能工作表现怎么样呢

162
00:06:04,436 --> 0:06:05,456
当然我们也可以很容易地

163
00:06:05,456 --> 0:06:06,706
尝试这些场景

164
00:06:07,486 --> 0:06:09,416
同样的 使用相机 App

165
00:06:09,416 --> 0:06:11,636
我们可以测试这些场景并且

166
00:06:11,636 --> 0:06:12,806
我们发现当标签有

167
00:06:12,806 --> 0:06:13,956
一定距离的时候

168
00:06:13,956 --> 0:06:14,986
确实难以阅读

169
00:06:15,456 --> 0:06:16,316
也许我们应该把这些标签

170
00:06:16,316 --> 0:06:17,416
放在屏幕上

171
00:06:18,396 --> 0:06:20,526
所以我们如何进行原型设计呢

172
00:06:20,916 --> 0:06:24,226
好的 我们刚刚讲过屏幕空间

173
00:06:24,226 --> 0:06:25,796
并且我们想要快速地实现这个设计

174
00:06:25,796 --> 0:06:26,996
所以我们将要进行进一步的操作

175
00:06:26,996 --> 0:06:27,656
并且使用 Keynote 讲演

176
00:06:28,716 --> 0:06:30,666
首先 我们需要设置一个

177
00:06:30,666 --> 0:06:34,786
关于我们的吐司的视频

178
00:06:34,956 --> 0:06:36,136
我们拍摄一个缓慢的镜头

179
00:06:36,136 --> 0:06:38,346
并且请注意我们将

180
00:06:38,346 --> 0:06:40,106
在吐司出现时停顿一会以给

181
00:06:40,106 --> 0:06:41,486
我们之后的动画一点时间

182
00:06:42,036 --> 0:06:46,456
接下来 我们要把这段视频

183
00:06:46,456 --> 0:06:47,706
放到 Keynote 讲演里面

184
00:06:49,356 --> 0:06:50,796
你将要创建一个与你

185
00:06:50,796 --> 0:06:52,516
最终想要进行测试的设备相匹配的

186
00:06:52,516 --> 0:06:53,576
自定义文件大小

187
00:06:53,576 --> 0:06:58,046
然后导入

188
00:06:58,046 --> 0:06:59,596
你的视频并把它

189
00:06:59,596 --> 0:07:00,086
带入 Keynote 讲演

190
00:06:59,596 --> 0:07:00,086
带入 Keynote 讲演

191
00:07:03,996 --> 0:07:06,136
紧接着 我们要使我们的标签

192
00:07:06,676 --> 0:07:10,096
根据我们的设计动起来

193
00:07:10,876 --> 0:07:12,846
给标签添加一个动作 给它分配一个

194
00:07:12,846 --> 0:07:15,156
合适的时间 并且把它

195
00:07:15,156 --> 0:07:16,626
放在你想要它最终在的地方

196
00:07:17,056 --> 0:07:21,146
这是最重要的部分

197
00:07:21,146 --> 0:07:22,356
我们要检查生成顺序

198
00:07:22,356 --> 0:07:24,286
并且确保我们的视频

199
00:07:24,286 --> 0:07:25,956
和动画同时开始

200
00:07:25,956 --> 0:07:28,036
但是我们也要给动画

201
00:07:28,036 --> 0:07:30,136
一个延迟 那么

202
00:07:30,226 --> 0:07:31,836
当吐司在视野中时 标签

203
00:07:31,836 --> 0:07:32,356
也在屏幕上

204
00:07:34,936 --> 0:07:36,616
最后我们将把它

205
00:07:36,616 --> 0:07:38,296
放在设备上

206
00:07:38,336 --> 0:07:38,936
并在 AR 的内容中测试它

207
00:07:42,376 --> 0:07:43,836
我们将使用 iOS 上的 Keynote 讲演

208
00:07:43,966 --> 0:07:45,086
把它放入设备

209
00:07:45,086 --> 0:07:47,136
然后我们将在 AR 的内容中测试它

210
00:07:50,076 --> 0:07:52,326
好的 看起来我们可以

211
00:07:52,326 --> 0:07:53,386
把我们所要的文字

212
00:07:53,386 --> 0:07:53,676
填入标签中

213
00:07:53,716 --> 0:07:55,896
并且把它放在屏幕空间里

214
00:07:55,896 --> 0:07:57,446
将使日后对这个标签

215
00:07:57,446 --> 0:07:58,716
进行的扩展操作

216
00:07:58,716 --> 0:08:01,566
变得更加简单

217
00:07:58,716 --> 0:08:01,566
变得更加简单

218
00:08:01,776 --> 0:08:03,196
现在让我们看一下它是如何处理数量增加的情况的

219
00:08:03,196 --> 0:08:03,836
当视野中出现了

220
00:08:03,836 --> 0:08:05,166
多片吐司的时候

221
00:08:05,166 --> 0:08:05,686
会发生什么呢

222
00:08:07,136 --> 0:08:08,636
使用同样的科技

223
00:08:08,636 --> 0:08:09,646
我们也可以试一试这个场景

224
00:08:13,936 --> 0:08:15,426
现在问题是

225
00:08:15,426 --> 0:08:16,606
当视野中存在

226
00:08:16,606 --> 0:08:18,966
多片吐司的时候

227
00:08:18,966 --> 0:08:20,056
我并不知道我现在

228
00:08:20,056 --> 0:08:22,416
产生交互的是哪一片吐司

229
00:08:22,616 --> 0:08:24,036
也许我应该在世界空间里

230
00:08:24,036 --> 0:08:27,266
放一个指示牌 那么我

231
00:08:27,266 --> 0:08:28,516
就会知道我现在和哪一片吐司

232
00:08:28,516 --> 0:08:29,456
进行了交互

233
00:08:29,696 --> 0:08:31,546
好的 我们可以快速地尝试一下

234
00:08:34,316 --> 0:08:35,756
同样的 在我们的协助者和

235
00:08:35,756 --> 0:08:37,176
可靠的直尺的帮助下

236
00:08:37,176 --> 0:08:39,336
我们可以试一下指示牌的方法

237
00:08:39,916 --> 0:08:41,346
把我们的设计打印出来

238
00:08:41,346 --> 0:08:42,936
粘在直尺上 然后测试一下

239
00:08:43,316 --> 0:08:44,796
这是相机 App 里的世界空间

240
00:08:46,096 --> 0:08:47,436
这看起来对我们有所帮助

241
00:08:47,436 --> 0:08:48,726
我们知道现在我们

242
00:08:48,756 --> 0:08:50,426
和哪一片吐司进行了交互

243
00:08:52,416 --> 0:08:54,016
那么让我们把所有的尝试都加在一起

244
00:08:54,206 --> 0:08:56,666
通过使用我们刚刚说过的技术

245
00:08:56,666 --> 0:08:58,326
我们可以对我们的原型

246
00:08:58,326 --> 0:09:00,136
进行粗略的演示

247
00:08:58,326 --> 0:09:00,136
进行粗略的演示

248
00:09:00,136 --> 0:09:01,906
并且当我们知道我们正在构建

249
00:09:01,906 --> 0:09:06,036
正确的东西的时候 我们知道

250
00:09:06,036 --> 0:09:07,296
我们有一些高保真的

251
00:09:07,296 --> 0:09:11,736
原型来作为我们代码的基础

252
00:09:11,946 --> 0:09:13,656
在短短的几个小时里

253
00:09:13,656 --> 0:09:14,896
我们解决了那些可能需要我们

254
00:09:15,026 --> 0:09:18,256
花费数天才能解决的代码问题

255
00:09:18,486 --> 0:09:19,326
所以我们学到了什么呢

256
00:09:19,326 --> 0:09:20,586
我们知道了世界空间里的标签

257
00:09:20,586 --> 0:09:21,916
在一些特定角度下

258
00:09:21,916 --> 0:09:23,586
并且在远距离的情况下

259
00:09:23,586 --> 0:09:25,276
难以阅读 所以我们把它们

260
00:09:25,386 --> 0:09:25,846
放在了屏幕上

261
00:09:26,716 --> 0:09:29,106
同时我们也了解到

262
00:09:29,106 --> 0:09:30,436
世界空间里需要指示器

263
00:09:30,436 --> 0:09:31,716
让用户知道

264
00:09:31,716 --> 0:09:32,976
他们现在与什么进行交互

265
00:09:38,836 --> 0:09:40,636
物理上的原型设计让我们

266
00:09:40,636 --> 0:09:43,186
可以很快地测试这些 AR 体验

267
00:09:44,416 --> 0:09:46,576
我们用了相机 App 来测试

268
00:09:46,576 --> 0:09:48,006
世界空间里的交互

269
00:09:49,336 --> 0:09:50,916
并且我们用了 Keynote 讲演来测试

270
00:09:50,916 --> 0:09:52,236
我们屏幕空间里的交互

271
00:09:52,236 --> 0:09:54,956
那么原型设计是如何帮助我们的呢

272
00:09:55,356 --> 0:09:58,276
好的 我们测试了我们想法

273
00:09:58,276 --> 0:09:59,136
现在我们将通过在编写代码之前

274
00:09:59,136 --> 0:10:01,056
确定我们建造的都是正确的决定

275
00:09:59,136 --> 0:10:01,056
确定我们建造的都是正确的决定

276
00:10:01,056 --> 0:10:08,816
来节省时间和金钱

277
00:10:09,016 --> 0:10:10,496
我们在这个过程中也获得了一些

278
00:10:10,496 --> 0:10:11,116
新的想法

279
00:10:11,616 --> 0:10:13,766
这些想法帮助我们使 ToastAR 变得更好

280
00:10:13,766 --> 0:10:16,746
并且这对我来说 它们实在是太棒了

281
00:10:18,176 --> 0:10:20,506
希望当你开始下一个项目的

282
00:10:20,506 --> 0:10:22,336
工作的时候

283
00:10:22,336 --> 0:10:25,406
你有一些新的方法来

284
00:10:25,406 --> 0:10:28,976
帮助你实现下一个 AR App 非常感谢

285
00:10:29,516 --> 0:10:33,500
[ 掌声 ]
