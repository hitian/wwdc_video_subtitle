1
00:00:07,016 --> 0:00:15,500
[ 音乐 ]

2
00:00:20,516 --> 0:00:29,216
[ 掌声 ]

3
00:00:29,716 --> 0:00:32,516
&gt;&gt; 隐私关乎于人

4
00:00:34,166 --> 0:00:35,686
我叫 Joey Tyson

5
00:00:35,726 --> 0:00:37,286
我是 Apple 的隐私工程师

6
00:00:37,386 --> 0:00:39,336
我知道各位本周已经

7
00:00:39,336 --> 0:00:40,876
了解到了很多

8
00:00:40,876 --> 0:00:43,066
令人兴奋的新功能

9
00:00:43,066 --> 0:00:44,506
并且已经准备好

10
00:00:44,506 --> 0:00:47,066
要着手开发一些新 App

11
00:00:47,066 --> 0:00:49,206
但我知道大家也非常关心

12
00:00:49,206 --> 0:00:50,246
用户的隐私问题

13
00:00:51,416 --> 0:00:53,806
这也是今天我想在讨论

14
00:00:53,806 --> 0:00:56,366
今年的更新之前

15
00:00:56,426 --> 0:00:58,676
和各位探讨的关于隐私的

16
00:00:58,676 --> 0:01:00,216
三大想法中的第一个

17
00:00:58,676 --> 0:01:00,216
三大想法中的第一个

18
00:01:01,446 --> 0:01:02,236
因为我们将讨论到

19
00:01:02,236 --> 0:01:05,536
许多数据隐私的内容 不过我们

20
00:01:05,536 --> 0:01:07,716
永远不能忘记

21
00:01:07,716 --> 0:01:08,996
隐私关乎于人

22
00:01:09,686 --> 0:01:11,196
它属于人

23
00:01:12,456 --> 0:01:14,616
那么当我说隐私关乎于人时

24
00:01:14,616 --> 0:01:16,896
我指的是

25
00:01:16,896 --> 0:01:19,166
要同你的用户

26
00:01:19,556 --> 0:01:20,586
建立信任关系

27
00:01:22,176 --> 0:01:24,096
这为用户更好的参与度

28
00:01:24,096 --> 0:01:27,046
奠定了基础 从而带来更好的 App

29
00:01:28,506 --> 0:01:29,826
想想其他的关系

30
00:01:29,826 --> 0:01:31,596
你更可能和

31
00:01:32,086 --> 0:01:33,676
你信任的人一起工作

32
00:01:33,676 --> 0:01:35,056
共度时光

33
00:01:36,496 --> 0:01:40,076
而且 当用户了解

34
00:01:40,076 --> 0:01:41,636
你为什么要收集数据

35
00:01:41,696 --> 0:01:44,256
将如何使用数据时 由于你

36
00:01:44,256 --> 0:01:45,716
尊重并谨慎地处理数据

37
00:01:45,806 --> 0:01:47,946
所以你也将获得更好的数据

38
00:01:47,946 --> 0:01:50,416
因为他们会更加

39
00:01:50,416 --> 0:01:51,506
愿意使用你的 App

40
00:01:51,506 --> 0:01:54,076
并分享信息

41
00:01:54,076 --> 0:01:56,006
这随着时间的推移

42
00:01:56,006 --> 0:01:57,316
就建立了忠诚度

43
00:01:59,396 --> 0:02:02,446
我之所以从这个问题说起

44
00:01:59,396 --> 0:02:02,446
我之所以从这个问题说起

45
00:02:02,446 --> 0:02:04,676
是因为我希望大家能将它

46
00:02:04,676 --> 0:02:06,596
应用到自己的开发过程当中

47
00:02:08,026 --> 0:02:09,816
我们每个人都不会

48
00:02:09,886 --> 0:02:12,746
与世隔绝地设计程序 所以不论

49
00:02:12,746 --> 0:02:15,056
你是在处理健康记录 还是只是制作一个

50
00:02:15,056 --> 0:02:16,266
简单的益智游戏

51
00:02:16,266 --> 0:02:19,136
你收集的信息

52
00:02:19,336 --> 0:02:21,096
以及使用方式都可能

53
00:02:21,736 --> 0:02:23,896
对人们的生活产生非常

54
00:02:23,896 --> 0:02:24,956
实际的影响

55
00:02:26,256 --> 0:02:29,846
因此 我们每个人都必须仔细考虑

56
00:02:29,846 --> 0:02:31,486
我们正在构建的技术

57
00:02:31,896 --> 0:02:34,956
最近 在杜克大学的

58
00:02:35,156 --> 0:02:37,556
一场毕业演讲中

59
00:02:37,556 --> 0:02:39,136
Tim Cook 谈到了 Apple

60
00:02:39,136 --> 0:02:41,846
对隐私的处理方法 他说

61
00:02:41,846 --> 0:02:44,196
我们在各个方面

62
00:02:44,196 --> 0:02:46,646
所问自己的问题不是

63
00:02:46,646 --> 0:02:50,396
我们能做什么 而是我们应该做什么

64
00:02:50,896 --> 0:02:54,566
这让我想到了第二个

65
00:02:54,896 --> 0:02:59,696
重要的想法 就是问“应该”的问题

66
00:03:00,336 --> 0:03:03,306
无论你扮演的角色是什么

67
00:03:03,606 --> 0:03:06,656
无论你是 App 的独立开发者

68
00:03:06,656 --> 0:03:09,606
还是大型组织的一员

69
00:03:10,136 --> 0:03:12,016
你都可以维护你用户的权益

70
00:03:12,476 --> 0:03:14,016
请记住你对用户的责任

71
00:03:14,016 --> 0:03:16,536
对你的 App 中的数据

72
00:03:16,536 --> 0:03:19,346
提出问题

73
00:03:20,186 --> 0:03:23,646
比如说 为什么我们会

74
00:03:23,646 --> 0:03:24,296
需要这个数据呢

75
00:03:25,776 --> 0:03:27,256
这不仅仅是一个问题

76
00:03:27,256 --> 0:03:28,606
这需要我们思考

77
00:03:28,606 --> 0:03:31,236
这对我们的用例是必须的吗

78
00:03:31,766 --> 0:03:32,836
我们应该收集它吗

79
00:03:34,176 --> 0:03:36,196
这会让我们的用户感到惊讶吗

80
00:03:37,256 --> 0:03:38,876
如果人们明白这一点

81
00:03:38,876 --> 0:03:41,076
但它吓到了他们 那我们为什么

82
00:03:41,076 --> 0:03:41,916
要这样做呢

83
00:03:43,116 --> 0:03:45,226
我们不能用粗糙点的数据

84
00:03:45,226 --> 0:03:46,476
不那么精确吗

85
00:03:47,416 --> 0:03:49,466
有没有我们应该考虑的其他方法

86
00:03:50,616 --> 0:03:52,316
还有我们是否应该

87
00:03:52,316 --> 0:03:54,766
在一段时间后 删除或汇总这些数据

88
00:03:55,166 --> 0:03:58,046
提出这些问题

89
00:03:58,046 --> 0:03:59,646
的部分原因是

90
00:03:59,646 --> 0:04:01,436
我们都可能

91
00:03:59,646 --> 0:04:01,436
我们都可能

92
00:04:01,436 --> 0:04:03,326
深受数据假设其害

93
00:04:03,906 --> 0:04:06,946
那么想想看

94
00:04:06,946 --> 0:04:07,976
我们为每个人都记录下数据

95
00:04:09,036 --> 0:04:12,526
可能我们过去一直在这样做

96
00:04:12,526 --> 0:04:14,306
或者其他人一直在这样做

97
00:04:14,306 --> 0:04:15,726
但是 我们试图完成的这些

98
00:04:15,726 --> 0:04:16,966
是否真的有必要呢

99
00:04:19,516 --> 0:04:21,065
或者你可能认为

100
00:04:21,065 --> 0:04:22,696
数据在你工作的环境中

101
00:04:22,696 --> 0:04:24,046
可能不太敏感

102
00:04:24,046 --> 0:04:26,656
但也许这些数据对于

103
00:04:26,656 --> 0:04:28,506
不同的环境

104
00:04:28,806 --> 0:04:30,976
或弱势群体中的用户非常敏感

105
00:04:33,026 --> 0:04:34,446
如果你是有目的地

106
00:04:34,446 --> 0:04:35,956
采集数据并以全新的方式应用它

107
00:04:35,956 --> 0:04:38,196
用户会理解吗

108
00:04:38,196 --> 0:04:41,126
这是他们想要的吗

109
00:04:42,396 --> 0:04:44,096
你也听过人们谈论

110
00:04:44,096 --> 0:04:45,376
个人身份信息

111
00:04:45,376 --> 0:04:48,436
即 PII 但即使是

112
00:04:48,436 --> 0:04:49,996
不在该定义范围内的

113
00:04:49,996 --> 0:04:51,306
数据仍会对隐私

114
00:04:51,306 --> 0:04:52,416
产生影响

115
00:04:53,896 --> 0:04:55,926
就像如果你采用

116
00:04:55,926 --> 0:04:57,226
加密和安全措施

117
00:04:57,226 --> 0:04:59,876
来保护数据一样 这很棒

118
00:04:59,876 --> 0:05:02,106
但隐私远不止于此

119
00:04:59,876 --> 0:05:02,106
但隐私远不止于此

120
00:05:03,096 --> 0:05:04,276
因为它无法回答

121
00:05:04,276 --> 0:05:06,306
我们是否应该采集

122
00:05:06,306 --> 0:05:08,596
这一数据里的“应该”问题

123
00:05:09,876 --> 0:05:11,926
当你询问你的 App 里的

124
00:05:11,926 --> 0:05:13,146
数据流问题

125
00:05:13,146 --> 0:05:14,576
如果你想更进一步

126
00:05:14,576 --> 0:05:16,726
你可以创建

127
00:05:16,726 --> 0:05:18,376
隐私保障

128
00:05:19,436 --> 0:05:20,936
这些是关于

129
00:05:20,936 --> 0:05:22,646
你希望能够制作的

130
00:05:22,646 --> 0:05:24,766
App 中的隐私预期的高级声明

131
00:05:25,946 --> 0:05:27,986
通过在开发过程中

132
00:05:27,986 --> 0:05:29,886
尽早建立这些功能

133
00:05:30,676 --> 0:05:32,396
就可以给你提供一个框架

134
00:05:32,396 --> 0:05:33,316
在构建功能时指导你

135
00:05:33,316 --> 0:05:35,216
并在完成后

136
00:05:35,216 --> 0:05:36,926
测试相关内容

137
00:05:38,416 --> 0:05:39,966
屏幕上有一些例子

138
00:05:39,966 --> 0:05:41,256
它们和 Apple

139
00:05:41,256 --> 0:05:42,326
关于我们的功能的

140
00:05:42,326 --> 0:05:44,416
陈述很相似

141
00:05:44,416 --> 0:05:46,436
并且有很多选项

142
00:05:46,846 --> 0:05:48,866
可以实现这些功能

143
00:05:48,946 --> 0:05:50,436
这就使我有了

144
00:05:51,586 --> 0:05:54,946
第三个想法

145
00:05:56,166 --> 0:05:58,956
请将你的数据和用例

146
00:05:59,036 --> 0:06:04,166
结合起来要说明这一点 我们要先思考一下

147
00:05:59,036 --> 0:06:04,166
结合起来要说明这一点 我们要先思考一下

148
00:06:04,166 --> 0:06:05,886
数据收集

149
00:06:05,886 --> 0:06:07,536
你收集的数据数量及其类型

150
00:06:07,996 --> 0:06:09,846
我们之前已经提过

151
00:06:09,846 --> 0:06:10,576
这些假设

152
00:06:10,576 --> 0:06:11,856
有时候你可能会想

153
00:06:11,856 --> 0:06:13,366
难道我不应该

154
00:06:13,466 --> 0:06:15,376
尽可能多地收集数据吗

155
00:06:15,376 --> 0:06:17,706
大家都知道

156
00:06:17,706 --> 0:06:18,856
过去人们都称数据为

157
00:06:18,856 --> 0:06:20,526
新经济的燃料

158
00:06:21,066 --> 0:06:24,416
同实际的燃料一样

159
00:06:24,416 --> 0:06:25,726
应谨慎处理数据

160
00:06:27,316 --> 0:06:29,606
因为数据非常强大

161
00:06:29,606 --> 0:06:30,796
可以解锁很多用例

162
00:06:30,796 --> 0:06:32,866
但正因为它非常强大

163
00:06:32,866 --> 0:06:34,576
所以如果处理不当

164
00:06:34,576 --> 0:06:36,596
数据也会变得

165
00:06:36,596 --> 0:06:37,166
非常危险

166
00:06:38,756 --> 0:06:40,926
作为一名工程师

167
00:06:40,926 --> 0:06:41,636
收集数据会给你带来开销

168
00:06:41,636 --> 0:06:43,806
你将需要花费 不断更新

169
00:06:43,966 --> 0:06:46,596
时间和资源来管理

170
00:06:46,596 --> 0:06:48,376
这些数据 并对其进行过滤

171
00:06:48,476 --> 0:06:49,746
现在你可以开始

172
00:06:50,136 --> 0:06:52,126
为你的用户开发新功能了

173
00:06:53,156 --> 0:06:55,316
这同时也会产生责任

174
00:06:56,096 --> 0:06:57,376
我们都听说过有公司

175
00:06:57,376 --> 0:06:58,766
发生数据泄露的情况

176
00:06:58,766 --> 0:06:59,966
这非常糟糕

177
00:07:00,836 --> 0:07:02,166
但是 如果泄露的数据

178
00:07:02,296 --> 0:07:03,876
包含与用例

179
00:07:03,926 --> 0:07:06,626
无关的信息

180
00:07:06,626 --> 0:07:08,456
那情况就更糟了

181
00:07:09,396 --> 0:07:11,286
意外的数据收集

182
00:07:11,626 --> 0:07:13,536
会造成各种风险

183
00:07:13,716 --> 0:07:15,846
而且它会破坏你同

184
00:07:15,846 --> 0:07:17,666
用户之间的信任关系

185
00:07:18,606 --> 0:07:20,086
下一次你想收集

186
00:07:20,286 --> 0:07:21,386
尽可能多的数据时

187
00:07:21,386 --> 0:07:23,926
我希望你能在脑海中

188
00:07:23,926 --> 0:07:26,236
想象一下这些化学品罐

189
00:07:26,236 --> 0:07:27,816
并记住你对用户的责任

190
00:07:27,816 --> 0:07:30,036
以便仔细和周到地

191
00:07:30,586 --> 0:07:32,306
处理他们的数据

192
00:07:32,306 --> 0:07:34,726
反之 你可能想应用

193
00:07:35,346 --> 0:07:38,686
我们所说的比例数据收集

194
00:07:39,236 --> 0:07:41,396
这是只收集

195
00:07:41,396 --> 0:07:43,246
为实现你的目标

196
00:07:43,246 --> 0:07:45,196
所必需的数据的想法

197
00:07:45,196 --> 0:07:47,186
有时你可能会 开始认为有充足的

198
00:07:47,186 --> 0:07:49,006
不同的数据集时

199
00:07:49,006 --> 0:07:50,106
就需要大量的信息

200
00:07:50,106 --> 0:07:52,366
你甚至可以

201
00:07:52,366 --> 0:07:53,946
从没有数据的假设开始

202
00:07:53,946 --> 0:07:55,726
找出你想要解决的

203
00:07:55,726 --> 0:07:56,936
问题的真正必要条件

204
00:07:58,666 --> 0:08:00,006
这就回到了用户期待

205
00:07:58,666 --> 0:08:00,006
这就回到了用户期待

206
00:08:00,006 --> 0:08:01,116
这一问题

207
00:08:02,126 --> 0:08:04,286
人们应该明白

208
00:08:04,286 --> 0:08:06,446
你为什么要收集数据 以及你要如何使用它

209
00:08:06,896 --> 0:08:08,566
数据应该符合用户的期待

210
00:08:09,716 --> 0:08:10,656
你应该始终能够

211
00:08:10,656 --> 0:08:13,206
为你正在构建的

212
00:08:13,266 --> 0:08:14,816
用例提供明确的理据

213
00:08:15,226 --> 0:08:18,356
不过当然 这是关于

214
00:08:18,356 --> 0:08:19,486
数据收集的 但是当我们

215
00:08:19,486 --> 0:08:20,746
讨论如何将数据实践

216
00:08:20,746 --> 0:08:22,866
与用例结合时

217
00:08:22,866 --> 0:08:24,596
它将扩展到整个

218
00:08:24,596 --> 0:08:27,036
数据生命周期

219
00:08:27,036 --> 0:08:29,296
并成为委托给你的信息的良好管理者

220
00:08:30,286 --> 0:08:32,426
因此 除了比例数据收集

221
00:08:32,426 --> 0:08:33,796
你也会希望在整个 App 的

222
00:08:33,796 --> 0:08:35,265
工作流程中开发

223
00:08:35,265 --> 0:08:38,806
并使用隐私技术

224
00:08:39,285 --> 0:08:41,626
你可以开发一个完整的

225
00:08:41,626 --> 0:08:43,686
Toolbox 或技术指令系统

226
00:08:43,686 --> 0:08:45,466
以帮助你在你的

227
00:08:45,466 --> 0:08:47,026
App 内构建隐私

228
00:08:47,796 --> 0:08:49,546
像聚类一样

229
00:08:50,386 --> 0:08:52,426
随着时间自动流转

230
00:08:53,126 --> 0:08:54,806
为用户提供数据透明度

231
00:08:54,806 --> 0:08:56,256
使用范围标识符

232
00:08:56,756 --> 0:08:58,926
而不是真实身份

233
00:08:59,966 --> 0:09:01,366
甚至更高级的技术

234
00:08:59,966 --> 0:09:01,366
甚至更高级的技术

235
00:09:01,366 --> 0:09:02,646
如差异隐私

236
00:09:03,396 --> 0:09:05,166
我今天没有时间来讨论

237
00:09:05,166 --> 0:09:06,396
列表上所有的

238
00:09:06,396 --> 0:09:08,476
可用技术 但我现在

239
00:09:08,476 --> 0:09:10,116
想集中讨论的是

240
00:09:10,116 --> 0:09:12,396
调整这些以适应

241
00:09:12,396 --> 0:09:13,216
你的用例

242
00:09:14,636 --> 0:09:16,676
你可以把它想成音乐中的混音

243
00:09:17,436 --> 0:09:18,556
如果你有一首曲目

244
00:09:18,556 --> 0:09:20,696
特别响亮或柔和

245
00:09:20,696 --> 0:09:22,366
则可能需要调整其他曲目

246
00:09:22,366 --> 0:09:24,686
以平衡一些元素并实现好的混音

247
00:09:25,776 --> 0:09:27,686
同样 有时你需要

248
00:09:27,686 --> 0:09:29,026
为特定功能

249
00:09:29,056 --> 0:09:30,626
收集大量数据

250
00:09:30,626 --> 0:09:32,986
但在那些情况下

251
00:09:33,236 --> 0:09:34,636
你需要确保你调整的

252
00:09:34,636 --> 0:09:36,946
这些隐私技术

253
00:09:36,946 --> 0:09:39,156
可以为用户创造出色的体验

254
00:09:40,416 --> 0:09:42,456
理想情况下 这些适用于

255
00:09:42,456 --> 0:09:44,086
存在数据的所有系统

256
00:09:44,086 --> 0:09:45,626
因而这些隐私保障

257
00:09:45,626 --> 0:09:47,796
会保持一致

258
00:09:47,866 --> 0:09:49,276
并会执行技术

259
00:09:49,276 --> 0:09:50,526
而非仅仅是关于你

260
00:09:50,526 --> 0:09:52,396
计划执行的政策声明

261
00:09:53,676 --> 0:09:55,316
但我知道这一切

262
00:09:55,316 --> 0:09:56,996
可能都有点抽象

263
00:09:56,996 --> 0:09:58,766
所以为了进一步说明

264
00:09:58,766 --> 0:10:00,096
我想分享一些 Apple

265
00:09:58,766 --> 0:10:00,096
我想分享一些 Apple

266
00:10:00,096 --> 0:10:01,976
在我们这种想法的基础上 建立的功能

267
00:10:03,516 --> 0:10:05,146
首先是活动分享

268
00:10:05,146 --> 0:10:07,176
你可以与朋友分享健身数据

269
00:10:08,206 --> 0:10:09,376
我作为一名隐私工程师

270
00:10:09,376 --> 0:10:11,246
我想尽可能地把所有

271
00:10:11,246 --> 0:10:12,856
这些滑块调到百分之百

272
00:10:12,856 --> 0:10:15,106
但对某个特定功能来说

273
00:10:15,106 --> 0:10:16,946
这并不总是可行的

274
00:10:17,406 --> 0:10:18,956
在这一情况下 你是在和

275
00:10:18,956 --> 0:10:21,626
朋友分享数据 所以他们知道你的名字

276
00:10:21,626 --> 0:10:22,646
他们知道这是谁的数据

277
00:10:23,676 --> 0:10:25,846
所以你不能去消除这个数据

278
00:10:25,906 --> 0:10:27,636
作为用例的一部分

279
00:10:27,636 --> 0:10:28,706
它已经非常明确

280
00:10:29,646 --> 0:10:31,556
因此 我们启用了

281
00:10:31,556 --> 0:10:32,976
其他隐私技术

282
00:10:32,976 --> 0:10:34,326
例如仅显示概要数据

283
00:10:34,746 --> 0:10:37,756
而非逐分统计数据

284
00:10:38,396 --> 0:10:38,716
或你跑步的确切位置

285
00:10:38,716 --> 0:10:40,176
我们还提供了很多关于你与谁

286
00:10:40,176 --> 0:10:41,906
共享以及何时分享的控制权

287
00:10:43,166 --> 0:10:45,716
如今 在 Apple News App 中

288
00:10:45,716 --> 0:10:47,496
我们使用未连接到

289
00:10:47,496 --> 0:10:49,126
Apple ID 的范围标识符

290
00:10:49,126 --> 0:10:50,816
收集分析数据

291
00:10:51,766 --> 0:10:53,246
这让我们在收集数据

292
00:10:53,246 --> 0:10:54,486
的精度方面拥有

293
00:10:54,486 --> 0:10:56,666
更大的灵活性

294
00:10:56,666 --> 0:10:58,006
但由于它仍是敏感信息

295
00:10:58,006 --> 0:10:59,416
我们仍会通过诸如

296
00:10:59,416 --> 0:11:00,896
能随时重置该标识符

297
00:10:59,416 --> 0:11:00,896
能随时重置该标识符

298
00:11:00,896 --> 0:11:02,296
等方式提供控制权

299
00:11:03,516 --> 0:11:05,456
最后就是照片记忆

300
00:11:05,456 --> 0:11:07,126
你可能在设备上看到过这些

301
00:11:08,086 --> 0:11:10,346
这是通过面孔识别数据

302
00:11:10,346 --> 0:11:12,616
来识别图片中的人物

303
00:11:13,696 --> 0:11:15,266
它还使用精确的

304
00:11:15,266 --> 0:11:16,816
位置信息将相似的照片

305
00:11:16,816 --> 0:11:17,596
联系在一起

306
00:11:18,686 --> 0:11:20,776
这是非常敏感的数据

307
00:11:21,856 --> 0:11:23,466
因此 我们还有

308
00:11:23,466 --> 0:11:25,056
另一种隐私技术

309
00:11:26,146 --> 0:11:27,366
所有建立这些记忆

310
00:11:27,366 --> 0:11:30,036
的过程都在你的设备上完成

311
00:11:30,806 --> 0:11:31,976
顺便说一下 这是你的

312
00:11:31,976 --> 0:11:33,776
Toolbox 进行本地处理

313
00:11:33,776 --> 0:11:34,866
的绝妙工具

314
00:11:35,396 --> 0:11:39,196
那让我们来回顾一下这三大想法

315
00:11:39,856 --> 0:11:43,706
隐私关乎于人

316
00:11:43,706 --> 0:11:46,386
提出有关“应该”的问题

317
00:11:46,386 --> 0:11:48,596
还有将你的数据实践与使用案例

318
00:11:48,596 --> 0:11:49,496
结合起来

319
00:11:51,256 --> 0:11:52,816
剩下的时间

320
00:11:52,816 --> 0:11:53,996
我想谈谈作为

321
00:11:53,996 --> 0:11:55,136
开发人员可用的一些

322
00:11:55,136 --> 0:11:56,856
功能和 Tool

323
00:11:56,856 --> 0:11:58,746
以帮助大家在 App 中

324
00:11:58,746 --> 0:12:00,046
构建隐私

325
00:11:58,746 --> 0:12:00,046
构建隐私

326
00:12:00,546 --> 0:12:02,216
这些可分为

327
00:12:02,216 --> 0:12:03,866
访问用户数据

328
00:12:03,866 --> 0:12:05,986
和更广义的数据管理

329
00:12:05,986 --> 0:12:06,656
两大类

330
00:12:07,896 --> 0:12:09,776
所以关于数据访问

331
00:12:09,826 --> 0:12:12,336
让我们先从 iOS 谈起

332
00:12:12,336 --> 0:12:13,656
本指南的大部分内容

333
00:12:13,656 --> 0:12:15,666
也同样适用于 tvOS 及 watchOS

334
00:12:16,186 --> 0:12:18,576
假设你正在构建一款

335
00:12:18,576 --> 0:12:20,266
iOS 版游戏

336
00:12:20,266 --> 0:12:21,916
玩家可以相互竞争

337
00:12:21,916 --> 0:12:22,746
你希望他们能上传

338
00:12:22,746 --> 0:12:24,896
照片以识别自己

339
00:12:25,816 --> 0:12:26,716
现在我们都已经看到了

340
00:12:26,756 --> 0:12:28,276
这些允许访问照片的

341
00:12:28,276 --> 0:12:30,386
许可提示 但如果我们只需

342
00:12:30,386 --> 0:12:32,906
用户点按按钮 选择一张照片

343
00:12:32,906 --> 0:12:34,436
然后立刻显示在 App 中

344
00:12:34,436 --> 0:12:36,646
这会不会很棒

345
00:12:37,276 --> 0:12:39,396
那么你今天就可以做到这一点

346
00:12:40,786 --> 0:12:41,796
因为我们为联系人

347
00:12:41,796 --> 0:12:43,366
相机和照片数据提供了

348
00:12:43,366 --> 0:12:45,056
一个叫做 out-of-process

349
00:12:45,056 --> 0:12:47,646
选择器的功能

350
00:12:47,646 --> 0:12:49,356
其中出现的选择器

351
00:12:49,356 --> 0:12:51,476
在你的 App 外运行

352
00:12:51,476 --> 0:12:52,786
因此与 App 共享的唯一信息

353
00:12:52,786 --> 0:12:55,096
就是用户选择的内容

354
00:12:56,196 --> 0:12:58,516
我们谈到了这些隐私技术

355
00:12:58,516 --> 0:13:00,256
这种情况下

356
00:12:58,516 --> 0:13:00,256
这种情况下

357
00:13:00,256 --> 0:13:01,856
由于这不涉及对整个

358
00:13:01,856 --> 0:13:03,846
资料库的持续访问

359
00:13:04,416 --> 0:13:06,376
用户可通过选择

360
00:13:06,376 --> 0:13:08,266
共享的内容来进行控制

361
00:13:08,266 --> 0:13:09,596
所以我们不需要显示

362
00:13:09,916 --> 0:13:11,366
权限提示来要求他们作出关于

363
00:13:11,556 --> 0:13:13,066
是否继续访问的决定

364
00:13:14,476 --> 0:13:16,976
这是访问联系人

365
00:13:16,976 --> 0:13:18,696
相机和照片数据的

366
00:13:18,696 --> 0:13:19,586
默认方法

367
00:13:20,856 --> 0:13:22,176
有时你可能需要

368
00:13:22,176 --> 0:13:23,446
访问更大的资料库

369
00:13:23,446 --> 0:13:24,706
但在大多数情况下

370
00:13:24,706 --> 0:13:26,296
你会发现这对于

371
00:13:26,296 --> 0:13:29,186
很多 App 都非常有用

372
00:13:31,876 --> 0:13:33,356
这种情况下

373
00:13:33,356 --> 0:13:34,776
它只需几行代码

374
00:13:34,776 --> 0:13:35,816
即可正常运作

375
00:13:36,206 --> 0:13:37,326
这里你可以看到一些片段

376
00:13:37,326 --> 0:13:39,796
来了解如何在你的 App 中 调用这些选择器

377
00:13:40,656 --> 0:13:42,076
如我所说 有时你需要

378
00:13:42,076 --> 0:13:43,176
获取更多的数据

379
00:13:43,176 --> 0:13:44,766
但大家也知道

380
00:13:44,856 --> 0:13:46,026
设备上有各种

381
00:13:46,026 --> 0:13:47,726
受保护的资源

382
00:13:47,726 --> 0:13:50,686
但如果你使用

383
00:13:50,686 --> 0:13:52,426
这其中的一种 API

384
00:13:53,176 --> 0:13:54,256
那么在你发出

385
00:13:54,256 --> 0:13:55,336
请求访问之前需要

386
00:13:55,336 --> 0:13:56,646
记住三件事

387
00:13:57,986 --> 0:13:59,646
你只应请求访问

388
00:14:00,226 --> 0:14:01,836
你 App 中的

389
00:14:01,836 --> 0:14:04,326
用例所需的数据

390
00:14:05,056 --> 0:14:06,556
如果实际上你并不需要

391
00:14:06,556 --> 0:14:08,716
整个信息资料库

392
00:14:09,496 --> 0:14:10,586
比起请求访问

393
00:14:10,586 --> 0:14:11,806
你更应该寻找

394
00:14:11,806 --> 0:14:12,886
替代方案 比如说

395
00:14:12,886 --> 0:14:13,946
out-of-process 选择器

396
00:14:15,096 --> 0:14:16,296
你只应在需要时

397
00:14:16,296 --> 0:14:17,526
提出这些请求

398
00:14:17,526 --> 0:14:19,556
你想要它在

399
00:14:19,656 --> 0:14:21,936
用户做决定时出现

400
00:14:22,366 --> 0:14:23,636
而不是当他们一打开 App

401
00:14:23,636 --> 0:14:25,126
就被他们还不太明白的

402
00:14:25,126 --> 0:14:26,886
问题狂轰乱炸

403
00:14:27,886 --> 0:14:29,876
你希望提示符 处于环境之中

404
00:14:30,606 --> 0:14:32,356
但是 你也希望仅用

405
00:14:32,356 --> 0:14:33,946
API 即可获取状态

406
00:14:34,956 --> 0:14:36,406
请记住 用户可以随时

407
00:14:36,406 --> 0:14:38,046
撤销他们的决定

408
00:14:38,106 --> 0:14:39,546
你只想确保不论用户

409
00:14:39,546 --> 0:14:41,356
做出什么样的决定

410
00:14:41,356 --> 0:14:42,586
你的 App 仍然可以运行

411
00:14:44,326 --> 0:14:46,676
现在 当你请求访问时

412
00:14:46,676 --> 0:14:47,996
你需要将目标字符串

413
00:14:47,996 --> 0:14:50,366
或用法说明包含进来

414
00:14:51,446 --> 0:14:52,526
当我说你需要时

415
00:14:52,946 --> 0:14:54,466
是指这些都是必需的

416
00:14:55,596 --> 0:14:57,196
如果没有这些 你会发现

417
00:14:57,196 --> 0:14:58,406
App 审核时会拒绝你的 App

418
00:14:58,406 --> 0:14:59,716
实际上 如果你尝试访问

419
00:14:59,716 --> 0:15:00,946
没有目标字符串的数据

420
00:14:59,716 --> 0:15:00,946
没有目标字符串的数据

421
00:15:00,946 --> 0:15:02,916
便会发现你的 App 开始崩溃

422
00:15:04,356 --> 0:15:06,216
这是向用户提供

423
00:15:06,216 --> 0:15:07,306
透明度的一种方式

424
00:15:07,306 --> 0:15:08,686
当然这不是唯一的方法

425
00:15:09,546 --> 0:15:10,746
这里我并不是说让用户

426
00:15:10,746 --> 0:15:12,256
在点击真实内容之前去

427
00:15:12,256 --> 0:15:13,156
点开一个假提示符

428
00:15:13,816 --> 0:15:14,596
我的意思是 这应该是

429
00:15:14,596 --> 0:15:16,236
通知用户你的 App 中的

430
00:15:16,236 --> 0:15:18,846
数据流这一总体计划的一部分

431
00:15:19,496 --> 0:15:21,876
此处的目标是

432
00:15:21,876 --> 0:15:24,906
解释请求的原因

433
00:15:24,906 --> 0:15:26,526
以便用户可以根据

434
00:15:26,526 --> 0:15:28,716
其优先级做出知情的

435
00:15:28,716 --> 0:15:29,716
有效的决定

436
00:15:30,226 --> 0:15:32,946
我说解释请求的原因

437
00:15:33,676 --> 0:15:35,546
其实并不是这个意思

438
00:15:36,566 --> 0:15:37,996
过去我们已经看到了

439
00:15:37,996 --> 0:15:38,936
类似这样的目标字符串

440
00:15:38,936 --> 0:15:40,526
不过这还是会在

441
00:15:40,526 --> 0:15:41,996
App 审核中被拒绝

442
00:15:43,246 --> 0:15:44,876
我们通过自动验证

443
00:15:45,156 --> 0:15:47,086
和人工审核

444
00:15:47,086 --> 0:15:48,596
强制执行质量目标

445
00:15:48,596 --> 0:15:49,396
字符串的情况越来越多

446
00:15:50,766 --> 0:15:53,026
光有占位符或空白字符串

447
00:15:53,026 --> 0:15:54,286
是不够的

448
00:15:54,676 --> 0:15:56,316
正如说广告不会告诉

449
00:15:56,316 --> 0:15:57,016
用户太多内容

450
00:15:57,056 --> 0:15:58,796
只告诉用户需要位置信息

451
00:15:58,796 --> 0:15:59,696
无法让他们了其中解缘由

452
00:16:00,126 --> 0:16:01,776
即便是最后一个关于更相关

453
00:16:01,776 --> 0:16:03,286
的内容 虽然这这很好

454
00:16:03,316 --> 0:16:05,066
但它非常模糊

455
00:16:06,276 --> 0:16:07,586
当你看我们自己的地图 App 时

456
00:16:07,646 --> 0:16:09,376
当它请求使用位置时

457
00:16:09,376 --> 0:16:11,156
你会看到这些

458
00:16:11,586 --> 0:16:12,806
这些内容将显示在地图上

459
00:16:12,966 --> 0:16:14,676
并用于指示

460
00:16:14,676 --> 0:16:16,406
附近的搜索结果和旅行时间

461
00:16:17,356 --> 0:16:19,046
所以这就解释了这个

462
00:16:19,046 --> 0:16:21,116
请求的用例的原因

463
00:16:21,816 --> 0:16:24,666
它很具体 包括将

464
00:16:24,846 --> 0:16:26,206
如何使用数据的实例

465
00:16:26,686 --> 0:16:29,696
同样 TV App 也是 Apple 用你的

466
00:16:29,696 --> 0:16:31,446
位置来确定你所看到的

467
00:16:31,446 --> 0:16:32,566
内容的一款 App

468
00:16:32,566 --> 0:16:34,136
它还会向你展示

469
00:16:34,136 --> 0:16:35,716
你所在地区的实时游戏

470
00:16:35,716 --> 0:16:37,066
活动和新闻

471
00:16:37,636 --> 0:16:39,396
请记住 如果用户了解他们为什么

472
00:16:39,396 --> 0:16:41,136
会被要求提供这些数据

473
00:16:41,136 --> 0:16:42,206
他们也就更可能允许你

474
00:16:42,206 --> 0:16:44,596
获取这些数据

475
00:16:44,726 --> 0:16:45,946
如果你正在为地铁系统

476
00:16:45,946 --> 0:16:47,296
创建一个交通 App

477
00:16:47,596 --> 0:16:48,876
你可能会写这样的内容

478
00:16:49,146 --> 0:16:50,856
这款 App 使用你的位置

479
00:16:50,856 --> 0:16:52,486
来显示附近的站点和车站

480
00:16:52,526 --> 0:16:54,106
并允许你从当前

481
00:16:54,106 --> 0:16:55,206
的位置计划旅行

482
00:16:56,596 --> 0:16:59,056
再强调一次 解释你的用例

483
00:16:59,056 --> 0:17:01,396
使其具体化 并提供实例

484
00:16:59,056 --> 0:17:01,396
使其具体化 并提供实例

485
00:17:01,916 --> 0:17:04,326
在设备上使用

486
00:17:04,326 --> 0:17:05,276
受保护资源时

487
00:17:05,276 --> 0:17:07,266
要记住一些其他的指导原则

488
00:17:08,076 --> 0:17:09,596
App 的功能应不需

489
00:17:09,596 --> 0:17:10,915
访问权限即可运行

490
00:17:11,596 --> 0:17:12,715
这可能会再次在

491
00:17:12,715 --> 0:17:15,326
App 审核过程中被拒绝

492
00:17:16,435 --> 0:17:17,856
你的 App 应具有

493
00:17:17,856 --> 0:17:19,925
回退机制 这样即使用户

494
00:17:19,925 --> 0:17:22,465
拒绝访问 它仍然可以正常工作

495
00:17:23,056 --> 0:17:24,356
比如说 使用该交通 App 时

496
00:17:24,356 --> 0:17:26,266
如果用户拒绝位置访问

497
00:17:26,266 --> 0:17:27,906
可以设置一个

498
00:17:27,906 --> 0:17:29,026
可允许手动输入位置

499
00:17:29,026 --> 0:17:30,786
并使用该位置的域

500
00:17:31,986 --> 0:17:33,586
你需要验证你的

501
00:17:33,586 --> 0:17:35,176
App 的授权状态

502
00:17:35,316 --> 0:17:37,046
以便确保用户

503
00:17:37,046 --> 0:17:38,776
仍可以访问

504
00:17:38,776 --> 0:17:41,106
而且要随时留意

505
00:17:41,106 --> 0:17:43,006
第三方的 STK

506
00:17:43,566 --> 0:17:45,136
同样 请求访问只应

507
00:17:45,136 --> 0:17:46,546
用于 App 的用例中

508
00:17:46,546 --> 0:17:48,336
如果包含更改

509
00:17:48,336 --> 0:17:49,656
或者要求设置

510
00:17:49,656 --> 0:17:50,726
目标字符串的资料库

511
00:17:50,726 --> 0:17:52,226
那么你可能应该

512
00:17:52,226 --> 0:17:53,686
寻找其他的解决方案

513
00:17:53,686 --> 0:17:55,026
或更新代码

514
00:17:55,566 --> 0:17:56,886
最后一点 你想一直

515
00:17:56,886 --> 0:17:58,106
提供透明度

516
00:17:58,106 --> 0:17:59,326
同样 这不应该是用户

517
00:17:59,326 --> 0:18:00,736
了解他们的数据

518
00:17:59,326 --> 0:18:00,736
了解他们的数据

519
00:18:00,736 --> 0:18:02,846
是如何被使用的

520
00:18:02,846 --> 0:18:03,666
唯一机会

521
00:18:04,386 --> 0:18:05,616
你可以在 App Store 中

522
00:18:05,616 --> 0:18:07,086
App 所需的隐私政策

523
00:18:07,086 --> 0:18:08,746
中执行此操作

524
00:18:08,746 --> 0:18:09,876
也可以在整个 App 中

525
00:18:09,876 --> 0:18:11,506
提供链接和文稿

526
00:18:11,676 --> 0:18:13,606
以帮助用户了解他们的

527
00:18:13,606 --> 0:18:14,676
数据是如何被使用的

528
00:18:16,296 --> 0:18:18,356
现在这都是围绕这些类型的

529
00:18:18,616 --> 0:18:21,026
API 所提供的更广泛的指导

530
00:18:21,026 --> 0:18:22,206
但是我想在今年

531
00:18:22,206 --> 0:18:24,276
更改一些特定的内容

532
00:18:24,766 --> 0:18:27,406
首先是 WiFi 网络信息

533
00:18:27,926 --> 0:18:29,546
如果你的 App 用户查看

534
00:18:29,546 --> 0:18:30,946
并复制当前的网络信息

535
00:18:31,276 --> 0:18:33,046
你将需要在 Xcode 中增加权限

536
00:18:33,046 --> 0:18:35,566
即 AccessWiFiInformation

537
00:18:36,616 --> 0:18:37,996
这是你可以为自己的

538
00:18:37,996 --> 0:18:39,076
App 启用的功能

539
00:18:39,736 --> 0:18:41,666
比如 假如你的 App

540
00:18:41,666 --> 0:18:42,746
正在与硬件配件进行通信

541
00:18:42,746 --> 0:18:44,236
并且需要验证它们

542
00:18:44,236 --> 0:18:46,746
是否在同一网络上 那么你就需要照上述去做

543
00:18:47,296 --> 0:18:48,246
如果你没有使用这个用例

544
00:18:48,246 --> 0:18:50,196
你则不需要担心这个

545
00:18:50,196 --> 0:18:52,856
只有在你的 App 的功能 有需要时才需如此

546
00:18:53,296 --> 0:18:55,386
你可能也已听说过我们

547
00:18:55,386 --> 0:18:56,746
新的 Health Records API

548
00:18:57,726 --> 0:18:59,096
因为我们知道开发人员

549
00:18:59,096 --> 0:19:00,686
在使用健康数据开发 App 方面

550
00:18:59,096 --> 0:19:00,686
在使用健康数据开发 App 方面

551
00:19:00,686 --> 0:19:02,156
有很多很棒的想法

552
00:19:02,626 --> 0:19:03,916
但我们同时也意识到

553
00:19:04,106 --> 0:19:05,626
这是非常敏感的信息

554
00:19:06,616 --> 0:19:08,046
再次强调一下

555
00:19:08,046 --> 0:19:09,846
要调整隐私技术而不是

556
00:19:09,846 --> 0:19:11,156
仅简单地调整权限提示

557
00:19:11,536 --> 0:19:12,386
我们为用户提供了

558
00:19:12,386 --> 0:19:14,316
更高的透明度和更大的控制权

559
00:19:14,936 --> 0:19:16,166
大家可以看到一个目标字符串

560
00:19:16,166 --> 0:19:17,726
它指向隐私政策的链接

561
00:19:17,726 --> 0:19:18,706
该链接应是一个网址

562
00:19:18,706 --> 0:19:20,226
或在你的 App

563
00:19:20,346 --> 0:19:21,486
退出时可用

564
00:19:22,256 --> 0:19:23,676
你还可以控制要分享

565
00:19:23,676 --> 0:19:25,076
哪些类别的数据

566
00:19:25,076 --> 0:19:26,266
无论是当前的还是

567
00:19:26,266 --> 0:19:28,156
现在与将来的数据

568
00:19:28,156 --> 0:19:30,536
而且周二有一个会议 可供各位参考

569
00:19:30,536 --> 0:19:31,926
该会议将为如何在你的 App 中

570
00:19:31,926 --> 0:19:34,026
使用此 API 提供更多信息

571
00:19:35,516 --> 0:19:37,226
最后 对于 iOS 我想分享

572
00:19:37,226 --> 0:19:38,476
关于 Apple 是

573
00:19:38,476 --> 0:19:39,816
如何使用差分隐私技术

574
00:19:39,816 --> 0:19:41,526
来改进我们的 

575
00:19:41,526 --> 0:19:43,136
App 和设备的

576
00:19:44,016 --> 0:19:45,686
今年的第一个新用例

577
00:19:45,686 --> 0:19:47,446
是针对拼写错误的单词

578
00:19:47,776 --> 0:19:49,056
如果你正在打字

579
00:19:49,056 --> 0:19:51,166
并改正自己的拼写

580
00:19:51,166 --> 0:19:52,666
那么被选择加入设备分析

581
00:19:52,666 --> 0:19:54,566
的设备现在将捐赠这些

582
00:19:54,566 --> 0:19:55,706
词语的数据以帮助我们进一步

583
00:19:55,706 --> 0:19:57,386
改进我们的键盘算法

584
00:19:57,386 --> 0:19:58,616
同时保护用户隐私

585
00:19:59,376 --> 0:20:01,936
另外 关于 Safari 去年以来

586
00:19:59,376 --> 0:20:01,936
另外 关于 Safari 去年以来

587
00:20:01,936 --> 0:20:03,126
我们增加了这些设备

588
00:20:03,126 --> 0:20:04,716
向网址捐赠数据的能力

589
00:20:04,956 --> 0:20:06,946
从而提高浏览器的稳定性

590
00:20:06,946 --> 0:20:08,816
因为这些数据通常

591
00:20:08,816 --> 0:20:09,956
会导致崩溃

592
00:20:10,456 --> 0:20:12,226
这就是 iOS

593
00:20:12,226 --> 0:20:14,176
我们也来聊聊

594
00:20:14,176 --> 0:20:15,256
macOS 的情况

595
00:20:15,606 --> 0:20:17,086
因为大家可能听说过

596
00:20:17,436 --> 0:20:18,766
我们对 macOS 上

597
00:20:18,766 --> 0:20:20,356
受保护资源的处理方式

598
00:20:20,356 --> 0:20:21,236
做了一些更改

599
00:20:22,136 --> 0:20:24,546
这是一个扩展的数据类别列表

600
00:20:24,886 --> 0:20:26,576
其中有保护措施

601
00:20:26,576 --> 0:20:27,546
如今可以触发权限提示

602
00:20:27,546 --> 0:20:29,746
或通过系统偏好触发

603
00:20:29,746 --> 0:20:31,776
其中的一些选择性加入

604
00:20:32,816 --> 0:20:34,076
我只想强调一下这一内容

605
00:20:34,076 --> 0:20:35,136
这样如果你正在开发 Mac

606
00:20:35,136 --> 0:20:37,246
我希望你能了解

607
00:20:37,246 --> 0:20:38,716
其中的一些变化

608
00:20:38,716 --> 0:20:39,706
因为如果你要访问这些资源

609
00:20:39,706 --> 0:20:41,176
你需要知道它们会

610
00:20:41,176 --> 0:20:42,816
如何影响你的 App

611
00:20:43,896 --> 0:20:45,416
同样 由于这些可以触发

612
00:20:45,416 --> 0:20:46,486
权限提示 所以你想知道

613
00:20:46,486 --> 0:20:47,906
何时会发生这种情况

614
00:20:47,906 --> 0:20:49,446
以免用户感到惊讶

615
00:20:50,136 --> 0:20:51,786
请注意 这适用于

616
00:20:51,976 --> 0:20:54,006
所有第三方 App 程序

617
00:20:54,346 --> 0:20:56,666
包括 App Store

618
00:20:57,236 --> 0:20:59,746
之外的那些 就像使用 iOS 一样

619
00:20:59,746 --> 0:21:00,886
你还需为这些权限提示

620
00:20:59,746 --> 0:21:00,886
你还需为这些权限提示

621
00:21:00,886 --> 0:21:02,026
设置一个目标字符串

622
00:21:02,026 --> 0:21:03,456
并且周二还有一个会议

623
00:21:03,456 --> 0:21:04,676
它会详细介绍

624
00:21:04,676 --> 0:21:06,556
如何在你的 App 中

625
00:21:06,556 --> 0:21:07,696
使用这些内容

626
00:21:08,076 --> 0:21:11,306
现在谈谈网络数据访问

627
00:21:11,306 --> 0:21:13,066
我将把这一内容交给我的同事

628
00:21:13,066 --> 0:21:14,316
Brandon Van Ryswykon 来为大家讲解

629
00:21:14,316 --> 0:21:15,976
他是一名隐私工程师

630
00:21:16,516 --> 0:21:22,816
[ 掌声 ]

631
00:21:23,316 --> 0:21:23,826
&gt;&gt; 感谢 Joey

632
00:21:25,376 --> 0:21:27,046
网络是当今数据访问

633
00:21:27,046 --> 0:21:28,996
最大的场所之一

634
00:21:29,856 --> 0:21:31,546
如果你的业务需依靠

635
00:21:31,546 --> 0:21:33,286
在第三方网站上提供内容

636
00:21:33,286 --> 0:21:35,406
那么本节很适合你

637
00:21:37,336 --> 0:21:38,886
今年我们推出了

638
00:21:38,886 --> 0:21:40,186
Storage Access API

639
00:21:41,106 --> 0:21:43,086
Storage Access API 允许用户

640
00:21:43,086 --> 0:21:45,146
通过网络从嵌入的

641
00:21:45,146 --> 0:21:47,186
第三方来接入登录内容

642
00:21:47,186 --> 0:21:49,926
其中包括通过

643
00:21:50,126 --> 0:21:51,226
智能跟踪预防

644
00:21:51,226 --> 0:21:53,236
而被归类为

645
00:21:53,236 --> 0:21:54,676
追踪器的域

646
00:21:55,806 --> 0:21:57,556
现在 Storage Access API 只有在

647
00:21:57,616 --> 0:21:59,386
用户明确同意的情况下

648
00:21:59,426 --> 0:22:00,486
才能执行此操作

649
00:21:59,426 --> 0:22:00,486
才能执行此操作

650
00:22:01,016 --> 0:22:02,646
我们来看一个例子

651
00:22:03,156 --> 0:22:05,696
这里用户正在浏览新闻网站

652
00:22:05,696 --> 0:22:08,576
news.example 并且该网站

653
00:22:08,576 --> 0:22:10,036
有来自 video.example 的

654
00:22:10,036 --> 0:22:11,786
嵌入式视频播放器

655
00:22:12,686 --> 0:22:14,676
用户在该视频网站上

656
00:22:14,676 --> 0:22:16,406
拥有付费帐户 并希望授予

657
00:22:16,406 --> 0:22:17,986
对其 Cookie 的

658
00:22:17,986 --> 0:22:20,666
嵌入式视频访问权限

659
00:22:20,666 --> 0:22:22,226
以便他们在阅读新闻时

660
00:22:22,226 --> 0:22:24,566
享受其订阅的好处

661
00:22:25,746 --> 0:22:26,676
为实现这一目标

662
00:22:26,776 --> 0:22:29,146
video.example 需要实现

663
00:22:29,206 --> 0:22:30,576
Storage Access API

664
00:22:32,866 --> 0:22:35,356
当用户点击其 App 中的

665
00:22:35,446 --> 0:22:37,636
播放按钮时 Video.example

666
00:22:37,636 --> 0:22:39,336
应向 Storage Access API

667
00:22:39,366 --> 0:22:40,486
添加一个调用

668
00:22:41,026 --> 0:22:42,976
这是一个异步 API

669
00:22:43,086 --> 0:22:44,976
它将返回一个承诺

670
00:22:44,976 --> 0:22:46,206
所以你应同时准备好

671
00:22:46,206 --> 0:22:47,856
处理成功及失败两种情况

672
00:22:48,396 --> 0:22:50,946
因此 当用户点击播放按钮时

673
00:22:50,946 --> 0:22:52,286
将会启动一个请求

674
00:22:52,286 --> 0:22:54,726
这将提示用户

675
00:22:54,876 --> 0:22:57,296
是否希望在

676
00:22:57,296 --> 0:22:58,146
嵌入 news.example 时

677
00:22:58,496 --> 0:23:00,776
授予对其 Cookie 的

678
00:22:58,496 --> 0:23:00,776
授予对其 Cookie 的

679
00:23:00,776 --> 0:23:02,676
video.example

680
00:23:02,676 --> 0:23:03,486
访问权限

681
00:23:04,036 --> 0:23:06,896
如果用户点击允许

682
00:23:06,896 --> 0:23:07,916
该选择将变得棘手

683
00:23:07,916 --> 0:23:09,566
并且用户不会再被提示

684
00:23:09,566 --> 0:23:11,006
这个域的组合

685
00:23:12,156 --> 0:23:13,516
但是 如果用户点击拒绝

686
00:23:13,516 --> 0:23:14,776
该网站可以随时重新提示

687
00:23:15,186 --> 0:23:17,836
假设用户点击允许

688
00:23:18,766 --> 0:23:20,776
该请求将通过

689
00:23:20,776 --> 0:23:22,996
Cookies 将被返回到嵌入式网站

690
00:23:24,496 --> 0:23:25,376
这可能会产生

691
00:23:25,376 --> 0:23:27,106
跟踪风险 因为现在

692
00:23:27,106 --> 0:23:29,466
video.example 的用户

693
00:23:29,566 --> 0:23:31,956
已经登录了他们在

694
00:23:31,956 --> 0:23:34,026
这个新闻网站上的身份

695
00:23:35,446 --> 0:23:36,926
鉴于今年智能跟踪预防

696
00:23:37,016 --> 0:23:40,046
的变化 现在这一点尤为重要

697
00:23:41,016 --> 0:23:44,076
现在 除了通过 Storage Access API

698
00:23:44,076 --> 0:23:45,516
提供的用户同意书之外

699
00:23:45,516 --> 0:23:48,106
来自被归类为

700
00:23:48,106 --> 0:23:49,616
追踪器的域的 Cookie

701
00:23:49,616 --> 0:23:52,156
将立即进行分区

702
00:23:52,156 --> 0:23:54,526
并且永远不会在第三方环境中使用

703
00:23:55,916 --> 0:23:58,106
此外 如果用户

704
00:23:58,106 --> 0:23:59,566
30 天没有使用 这些

705
00:23:59,566 --> 0:24:01,236
Cookies 将被彻底清除

706
00:23:59,566 --> 0:24:01,236
Cookies 将被彻底清除

707
00:24:01,746 --> 0:24:05,346
这里重要的是

708
00:24:05,346 --> 0:24:07,466
通过 Storage Access API 访问

709
00:24:07,466 --> 0:24:09,296
将计入这 30 天的

710
00:24:09,296 --> 0:24:10,176
交互计时器

711
00:24:11,196 --> 0:24:12,316
这意味着在第三方环境中

712
00:24:12,346 --> 0:24:13,626
经常与你的

713
00:24:13,626 --> 0:24:15,786
网站互动的用户

714
00:24:16,016 --> 0:24:17,026
将保持登录状态

715
00:24:17,476 --> 0:24:20,576
因此 在这个序列中

716
00:24:20,776 --> 0:24:23,166
用户将在第一方

717
00:24:23,166 --> 0:24:24,956
及第三方环境中

718
00:24:24,956 --> 0:24:26,806
同时访问 video.example

719
00:24:26,806 --> 0:24:28,456
来登录到主页上

720
00:24:28,456 --> 0:24:30,206
并将其嵌入到网络中

721
00:24:31,056 --> 0:24:32,946
首先 用户在第一方

722
00:24:32,946 --> 0:24:34,736
环境中访问该网站

723
00:24:35,606 --> 0:24:37,416
请注意 由于用户

724
00:24:37,416 --> 0:24:39,206
当前正在与网站进行互动

725
00:24:39,296 --> 0:24:41,796
因此互动计时器的日期将变为零

726
00:24:43,476 --> 0:24:45,566
但是 当用户在

727
00:24:45,566 --> 0:24:47,166
浏览网页时与嵌入式

728
00:24:47,166 --> 0:24:50,406
内容互动时 计时器

729
00:24:50,406 --> 0:24:51,046
将会更新

730
00:24:52,466 --> 0:24:53,886
这意味着当用户

731
00:24:53,886 --> 0:24:56,146
在第一方环境中返回时

732
00:24:56,146 --> 0:24:58,316
尽管距用户上次访问

733
00:24:58,316 --> 0:25:00,426
video.example 的第一方环境

734
00:24:58,316 --> 0:25:00,426
video.example 的第一方环境

735
00:25:00,426 --> 0:25:04,026
的时间为 45 天

736
00:25:04,726 --> 0:25:06,136
但交互计时器的

737
00:25:06,136 --> 0:25:08,686
天数仍将读取 5 天

738
00:25:10,096 --> 0:25:11,926
采用 Storage Access API

739
00:25:11,926 --> 0:25:13,876
将允许用户保持登录状态

740
00:25:13,876 --> 0:25:16,816
并防止不必要的跟踪

741
00:25:17,306 --> 0:25:21,366
隐私不会因获取

742
00:25:21,366 --> 0:25:23,006
用户数据而结束

743
00:25:23,986 --> 0:25:25,336
你对用户的隐私

744
00:25:25,336 --> 0:25:27,256
始终负有责任

745
00:25:27,256 --> 0:25:29,246
以在数据的整个生命周期内

746
00:25:29,246 --> 0:25:30,146
保持用户的信任

747
00:25:31,046 --> 0:25:33,266
这里会开始进行数据管理

748
00:25:33,866 --> 0:25:36,646
现在我想给你提供

749
00:25:36,646 --> 0:25:38,206
四个数据管理

750
00:25:38,206 --> 0:25:39,466
领域的例子

751
00:25:39,466 --> 0:25:42,476
供你在开发 App 时参考

752
00:25:42,546 --> 0:25:43,406
首先是删除

753
00:25:44,356 --> 0:25:45,706
作为一名优秀的数据管理员

754
00:25:45,706 --> 0:25:47,176
需要尊重用户

755
00:25:47,176 --> 0:25:49,106
想从 App 中删除

756
00:25:49,106 --> 0:25:51,166
一些东西的意图

757
00:25:52,696 --> 0:25:54,476
因此 你应该识别到

758
00:25:54,476 --> 0:25:55,756
你的 App 外有数据流

759
00:25:55,846 --> 0:25:58,066
而且你应该确保

760
00:25:58,066 --> 0:26:00,236
这些系统在

761
00:25:58,066 --> 0:26:00,236
这些系统在

762
00:26:00,236 --> 0:26:02,136
用户删除 App 内的

763
00:26:02,136 --> 0:26:03,686
某些内容时保持一致

764
00:26:04,346 --> 0:26:06,686
现在操作系统并不知道

765
00:26:06,686 --> 0:26:08,066
你的 App 内在进行什么

766
00:26:08,066 --> 0:26:09,776
所以如果你已经向 Siri 捷径

767
00:26:09,776 --> 0:26:11,586
捐赠了信息或者

768
00:26:11,586 --> 0:26:13,666
递交了通知

769
00:26:13,666 --> 0:26:14,966
你应确保当用户从你的

770
00:26:14,996 --> 0:26:16,786
App 内删除那些内容时

771
00:26:16,786 --> 0:26:18,486
你也删除了那些内容

772
00:26:20,516 --> 0:26:22,936
例如 如果用户删除了

773
00:26:22,936 --> 0:26:25,186
你 App 的联系人列表中的

774
00:26:25,186 --> 0:26:27,166
某个人 不应该建议

775
00:26:27,166 --> 0:26:28,686
用户使用你的 App

776
00:26:28,686 --> 0:26:30,646
来发送消息

777
00:26:30,786 --> 0:26:32,826
或者如果用户删除了

778
00:26:32,826 --> 0:26:34,756
消息传递 App

779
00:26:34,756 --> 0:26:36,166
中的某个线程

780
00:26:36,166 --> 0:26:37,836
你也应删除关于该内容的通知

781
00:26:37,836 --> 0:26:39,476
因为如果用户从

782
00:26:39,476 --> 0:26:40,906
他们认为已完全删除的线程上

783
00:26:40,906 --> 0:26:42,556
看到那些通知仍在自己的设备上

784
00:26:42,556 --> 0:26:43,806
会感到十分意外

785
00:26:44,316 --> 0:26:46,696
最后 如果你是

786
00:26:46,696 --> 0:26:48,316
密码管理员

787
00:26:48,316 --> 0:26:50,216
并且你已向新系统密码

788
00:26:50,216 --> 0:26:52,346
API 捐赠密码

789
00:26:52,346 --> 0:26:53,326
则应确保在用户从

790
00:26:53,326 --> 0:26:55,336
密码管理器中

791
00:26:55,336 --> 0:26:58,756
删除该网站时删除此信息

792
00:26:59,116 --> 0:27:00,786
现在数据管理工作

793
00:26:59,116 --> 0:27:00,786
现在数据管理工作

794
00:27:00,786 --> 0:27:02,156
会一直继续到设备跟踪

795
00:27:02,156 --> 0:27:03,576
这说明我将在今天的

796
00:27:03,576 --> 0:27:05,216
讨论中提供非常

797
00:27:05,216 --> 0:27:07,736
具体的内容

798
00:27:07,896 --> 0:27:09,546
你可能对使用你的

799
00:27:09,546 --> 0:27:11,666
App 的设备有些疑问

800
00:27:12,406 --> 0:27:14,476
比如 此设备是否

801
00:27:14,626 --> 0:27:17,806
已使用过免费试用版

802
00:27:17,966 --> 0:27:19,896
或者此设备以前

803
00:27:19,896 --> 0:27:21,926
是否被不文明用户

804
00:27:21,926 --> 0:27:23,106
或欺诈活动使用过

805
00:27:24,596 --> 0:27:26,026
我们提供了一款名为

806
00:27:26,026 --> 0:27:27,826
DeviceCheck 的 API

807
00:27:27,826 --> 0:27:28,986
能够让你回答这些问题

808
00:27:30,716 --> 0:27:32,426
DeviceCheck 允许你

809
00:27:32,426 --> 0:27:34,536
为每个设备设置两位数据

810
00:27:34,536 --> 0:27:36,616
这些数据由 Apple 存储

811
00:27:36,616 --> 0:27:38,666
并可通过签名返回给你

812
00:27:40,036 --> 0:27:42,076
这几位数据在设备重置

813
00:27:42,076 --> 0:27:44,966
或设备清除安装中一直存在

814
00:27:45,466 --> 0:27:47,626
而无需暴露独一无二

815
00:27:47,736 --> 0:27:49,816
的设备标识符

816
00:27:49,816 --> 0:27:51,246
这些数据就会为你提供关于

817
00:27:51,286 --> 0:27:54,116
设备历史记录的

818
00:27:54,116 --> 0:27:55,446
高完整性答案

819
00:27:58,016 --> 0:27:59,356
现在 你应采用 DeviceCheck9

820
00:27:59,356 --> 0:28:01,526
而不是依赖

821
00:27:59,356 --> 0:28:01,526
而不是依赖

822
00:28:01,646 --> 0:28:03,346
像数字指纹这样

823
00:28:03,346 --> 0:28:05,126
不受支持的设备跟踪机制

824
00:28:05,636 --> 0:28:08,406
正如 Craig 在主题演讲中

825
00:28:08,406 --> 0:28:10,546
所说的那样 我们将继续

826
00:28:10,546 --> 0:28:12,836
从我们的平台中删除熵

827
00:28:12,906 --> 0:28:14,166
并删除正在被滥用

828
00:28:14,166 --> 0:28:16,676
以标识用户独一无二身份的功能

829
00:28:17,896 --> 0:28:19,556
所以作为一名优秀的数据管理员

830
00:28:19,606 --> 0:28:20,966
你应该采用 DeviceCheck

831
00:28:20,966 --> 0:28:22,476
来解答你的问题

832
00:28:23,896 --> 0:28:25,166
除了要在自己的 App 中

833
00:28:25,166 --> 0:28:26,686
成为优秀的数据管理员之外

834
00:28:27,786 --> 0:28:28,736
你还应考虑到你的

835
00:28:28,936 --> 0:28:30,876
第三方合作伙伴

836
00:28:33,276 --> 0:28:35,426
你作为开发人员

837
00:28:35,426 --> 0:28:37,566
需要负责你的 App 中

838
00:28:37,696 --> 0:28:38,486
所有芯片的代码

839
00:28:39,516 --> 0:28:40,756
这包括你已编写的代码

840
00:28:40,756 --> 0:28:42,246
还包括你以资料库

841
00:28:42,246 --> 0:28:44,126
的形式导入的代码

842
00:28:45,206 --> 0:28:46,906
因此 你应该了解

843
00:28:46,906 --> 0:28:48,576
你导入的这些资料库

844
00:28:49,176 --> 0:28:51,386
如何访问或将设备上的

845
00:28:51,386 --> 0:28:52,636
用户数据传输出去

846
00:28:53,736 --> 0:28:54,976
这样 你就可以向用户

847
00:28:54,976 --> 0:28:56,186
提供完整的透明度

848
00:28:56,636 --> 0:28:58,306
不要只讨论你写的代码

849
00:28:58,666 --> 0:28:59,936
你应该描述其对用户

850
00:28:59,936 --> 0:29:01,426
隐私的全面影响

851
00:28:59,936 --> 0:29:01,426
隐私的全面影响

852
00:29:01,906 --> 0:29:04,226
正如 Joey 之前提到的

853
00:29:05,116 --> 0:29:06,806
你应该避免请求

854
00:29:06,806 --> 0:29:08,226
不必要的资源

855
00:29:09,266 --> 0:29:12,036
所以 比如说

856
00:29:12,036 --> 0:29:14,076
如果你要使用的资料库

857
00:29:14,076 --> 0:29:15,926
需要授权或访问某些

858
00:29:16,066 --> 0:29:17,876
其他敏感资源

859
00:29:17,876 --> 0:29:19,646
而这些敏感资源并非

860
00:29:19,646 --> 0:29:20,776
你试图从该资料库中

861
00:29:20,776 --> 0:29:22,896
获取的功能所需要的

862
00:29:22,896 --> 0:29:23,956
那么你应找到

863
00:29:23,956 --> 0:29:26,016
不同的资料库

864
00:29:26,016 --> 0:29:27,606
或联系该库的开发人员

865
00:29:27,606 --> 0:29:29,056
并要求他们删除

866
00:29:29,056 --> 0:29:30,246
敏感资源请求

867
00:29:30,926 --> 0:29:34,076
现在请思考一下假如

868
00:29:34,146 --> 0:29:36,246
第三方也能扩展到你的服务器终端

869
00:29:37,556 --> 0:29:39,356
你应该了解数据

870
00:29:39,356 --> 0:29:41,756
如何流向服务器接触的

871
00:29:41,756 --> 0:29:42,476
所有第三方

872
00:29:43,676 --> 0:29:45,796
这包括支持你的

873
00:29:45,796 --> 0:29:47,516
App 的整个系统

874
00:29:47,516 --> 0:29:49,976
不仅包括分析

875
00:29:49,976 --> 0:29:51,976
或广告网络

876
00:29:51,976 --> 0:29:54,016
还包括网络安全系统

877
00:29:54,116 --> 0:29:55,726
电子邮件提供商会向

878
00:29:55,796 --> 0:29:58,096
客户发送密码重置电子邮件

879
00:29:58,686 --> 0:30:01,446
或由第三方客户支持集成

880
00:29:58,686 --> 0:30:01,446
或由第三方客户支持集成

881
00:30:01,916 --> 0:30:04,776
作为一名优秀的

882
00:30:04,836 --> 0:30:06,956
数据管理员意味着在考虑

883
00:30:06,956 --> 0:30:09,226
一起工作的合作伙伴时

884
00:30:09,226 --> 0:30:10,536
要对工作有整体规划

885
00:30:10,616 --> 0:30:11,556
并考虑到隐私问题

886
00:30:12,146 --> 0:30:15,466
现在我们来聊一个各位

887
00:30:15,466 --> 0:30:17,056
可能听说过的话题 即机器学习

888
00:30:18,186 --> 0:30:20,216
那么 在整个行业中

889
00:30:20,216 --> 0:30:21,476
关于机器学习的

890
00:30:21,856 --> 0:30:23,596
大部分讨论都是围绕着

891
00:30:23,596 --> 0:30:24,846
新算法的性能特点

892
00:30:24,846 --> 0:30:26,976
或基于云解决方案的

893
00:30:26,976 --> 0:30:27,936
的强大功能而言的

894
00:30:28,866 --> 0:30:30,246
虽然这些都是重要

895
00:30:30,246 --> 0:30:32,516
的技术发展 但正如

896
00:30:32,516 --> 0:30:33,416
Tim 在开幕致辞中

897
00:30:33,416 --> 0:30:35,776
所说的那样 我们所问的问题

898
00:30:35,776 --> 0:30:37,706
不是我们能做什么

899
00:30:38,366 --> 0:30:38,976
而是我们应该做什么

900
00:30:40,206 --> 0:30:42,346
如今这特别适用于

901
00:30:42,346 --> 0:30:44,256
机器学习 我们已经

902
00:30:44,256 --> 0:30:45,646
开展了多年的研究

903
00:30:47,496 --> 0:30:49,236
面容 ID 是以

904
00:30:49,366 --> 0:30:50,936
隐私友好的机器学习

905
00:30:50,936 --> 0:30:51,976
为核心构建的

906
00:30:53,416 --> 0:30:54,896
我们已通过使用

907
00:30:54,896 --> 0:30:57,336
LocalAuthentication API

908
00:30:57,336 --> 0:30:58,496
让你在 App 里添加 

909
00:30:58,496 --> 0:31:00,156
Face ID 验证变得简单容易

910
00:30:58,496 --> 0:31:00,156
Face ID 验证变得简单容易

911
00:31:01,606 --> 0:31:03,126
你可以通过隐私友好的

912
00:31:03,126 --> 0:31:05,566
机器学习技术对

913
00:31:05,566 --> 0:31:07,806
Apple 现有的技术

914
00:31:08,206 --> 0:31:10,756
加以利用来建立强大的生物认证功能

915
00:31:12,676 --> 0:31:15,936
同样 ARKit

916
00:31:15,936 --> 0:31:16,996
使用机器学习来模拟

917
00:31:16,996 --> 0:31:18,966
用户设备周围的环境

918
00:31:19,846 --> 0:31:22,686
在 ARKit 2 中 你可以

919
00:31:22,686 --> 0:31:25,116
创建 保留 并在自己的

920
00:31:25,116 --> 0:31:26,436
App 中存储此环境地图

921
00:31:26,436 --> 0:31:29,396
但只有在你的功能

922
00:31:29,396 --> 0:31:31,176
需要时才能收集此地图

923
00:31:31,176 --> 0:31:33,686
因为 此数据可能非常敏感

924
00:31:34,166 --> 0:31:38,456
它包含用户周围的所有信息

925
00:31:38,556 --> 0:31:39,786
所以 如果你从设备上

926
00:31:39,786 --> 0:31:41,126
将其发出 应该是可预料的

927
00:31:41,646 --> 0:31:42,816
就好像你正在

928
00:31:42,816 --> 0:31:44,656
与一个共享对象一起玩游戏

929
00:31:45,766 --> 0:31:47,556
如果你使用 Game Center

930
00:31:47,556 --> 0:31:48,596
则可以利用支持

931
00:31:48,596 --> 0:31:51,156
端到端加密的

932
00:31:51,156 --> 0:31:52,896
MultipeerConnectivity API

933
00:31:53,636 --> 0:31:55,756
在设备之间传输这些模型

934
00:31:57,016 --> 0:32:00,256
现在 面容 ID 和 ARKit

935
00:31:57,016 --> 0:32:00,256
现在 面容 ID 和 ARKit

936
00:32:00,256 --> 0:32:02,226
都是 Apple 所开发的

937
00:32:02,226 --> 0:32:04,036
功能的很好个例

938
00:32:04,116 --> 0:32:05,286
它们都依靠隐私友好的机器学习

939
00:32:05,286 --> 0:32:07,706
在你的 App 中也可以使用它

940
00:32:09,026 --> 0:32:10,766
但大家还想要更多的灵活性

941
00:32:12,156 --> 0:32:15,086
Create ML 和 Core ML 允许你

942
00:32:15,436 --> 0:32:17,996
在机器学习之上 创建自己的功能

943
00:32:20,356 --> 0:32:23,016
使用 Create ML 和 Core ML

944
00:32:23,016 --> 0:32:24,676
那么将设备上的机器学习

945
00:32:24,916 --> 0:32:26,816
添加到你的 App 中就会

946
00:32:26,816 --> 0:32:27,406
变得轻而易举

947
00:32:28,816 --> 0:32:30,686
Create ML 允许你

948
00:32:30,686 --> 0:32:32,286
直接在 Mac 上训练

949
00:32:32,286 --> 0:32:35,016
机器学习模型 而 Core ML

950
00:32:35,016 --> 0:32:36,586
让你可以直接在用户设备上

951
00:32:36,586 --> 0:32:38,936
使用此模型并对其进行评估

952
00:32:40,466 --> 0:32:42,206
这就避免了收集敏感用户

953
00:32:42,206 --> 0:32:44,376
数据来评估模型

954
00:32:45,136 --> 0:32:46,926
而且保护服务器上的

955
00:32:46,926 --> 0:32:48,886
敏感数据工作量十分巨大

956
00:32:49,496 --> 0:32:51,516
在用户的设备上评估模型

957
00:32:51,516 --> 0:32:53,546
可以降低服务器

958
00:32:53,546 --> 0:32:55,296
的安全要求

959
00:32:55,296 --> 0:32:56,706
并且可以降低违规风险

960
00:32:56,706 --> 0:32:58,256
因为你不需要在最初

961
00:32:58,256 --> 0:33:00,036
就掌握这些敏感信息

962
00:32:58,256 --> 0:33:00,036
就掌握这些敏感信息

963
00:33:01,096 --> 0:33:03,566
现在 这两个 API

964
00:33:03,566 --> 0:33:05,816
使设备上的机器学习变得十分容易

965
00:33:08,896 --> 0:33:10,486
在开发像 Joey 之前

966
00:33:10,486 --> 0:33:12,086
所说的那些功能时

967
00:33:12,086 --> 0:33:13,256
大家应该已经

968
00:33:13,256 --> 0:33:15,926
提出了隐私问题

969
00:33:15,926 --> 0:33:17,656
这些问题都很好

970
00:33:17,656 --> 0:33:19,106
我和 Joey 每天都用这些

971
00:33:19,106 --> 0:33:21,776
在 Apple 做功能审核

972
00:33:21,976 --> 0:33:23,116
但是 机器学习要求你

973
00:33:23,116 --> 0:33:24,856
提出一组新的问题

974
00:33:24,916 --> 0:33:26,986
来解决相同的

975
00:33:27,096 --> 0:33:29,006
潜在隐私目标

976
00:33:30,256 --> 0:33:32,836
例如 你应该问我的模型

977
00:33:32,836 --> 0:33:35,296
是否显示了任何它所

978
00:33:35,296 --> 0:33:36,656
训练的数据的内容

979
00:33:38,386 --> 0:33:40,456
实际上是可以

980
00:33:40,536 --> 0:33:42,446
倒转机器学习模型

981
00:33:42,446 --> 0:33:44,516
并恢复大部分训练数据

982
00:33:45,766 --> 0:33:47,446
如果你用你的 App 开发一个模型

983
00:33:47,446 --> 0:33:49,276
这可能会导致意外的信息披露

984
00:33:49,276 --> 0:33:51,076
它可能倒转过来

985
00:33:51,076 --> 0:33:53,096
公开其训练过程中

986
00:33:53,096 --> 0:33:54,126
的用户信息

987
00:33:54,606 --> 0:33:58,006
现在 这是一个得到积极

988
00:33:58,076 --> 0:33:59,866
研究的学术领域

989
00:33:59,866 --> 0:34:01,066
你可以在我放在这张幻灯片上

990
00:33:59,866 --> 0:34:01,066
你可以在我放在这张幻灯片上

991
00:34:01,066 --> 0:34:03,936
的论文中了解更多内容

992
00:34:04,446 --> 0:34:07,076
同样 你会问

993
00:34:07,076 --> 0:34:09,576
我是否可以超出用户期待

994
00:34:09,576 --> 0:34:10,196
来推断出更多内容

995
00:34:11,306 --> 0:34:13,456
用户可能会希望通过

996
00:34:13,456 --> 0:34:15,616
传感器数据对活动类型

997
00:34:15,616 --> 0:34:16,146
进行分类

998
00:34:17,326 --> 0:34:19,356
但是你可能会问

999
00:34:19,356 --> 0:34:21,136
我是否意外地编码了

1000
00:34:21,626 --> 0:34:23,746
这个用户使用轮椅的事实

1001
00:34:24,255 --> 0:34:26,206
能为轮椅使用者

1002
00:34:26,206 --> 0:34:27,406
提供功能非常棒

1003
00:34:28,436 --> 0:34:30,366
但这应让用户清楚并作为

1004
00:34:30,366 --> 0:34:31,156
销售的功能亮点

1005
00:34:32,596 --> 0:34:34,126
与一般的数据收集一样

1006
00:34:34,126 --> 0:34:36,606
如果你通过机器学习

1007
00:34:36,606 --> 0:34:38,396
启用新的用例

1008
00:34:38,396 --> 0:34:39,246
那你也应获得新许可

1009
00:34:39,735 --> 0:34:42,746
现在事实证明

1010
00:34:42,746 --> 0:34:44,516
做两个小修改即可帮助

1011
00:34:44,516 --> 0:34:45,556
改善这两个问题

1012
00:34:47,116 --> 0:34:48,866
首先是确保你训练

1013
00:34:48,866 --> 0:34:50,565
正确的数据

1014
00:34:51,985 --> 0:34:53,146
这意味着对征得

1015
00:34:53,146 --> 0:34:55,516
用户同意而收集的

1016
00:34:55,516 --> 0:34:57,646
足够数量的不同输入信息

1017
00:34:57,646 --> 0:34:58,546
进行训练

1018
00:34:59,026 --> 0:35:02,226
其次是保持你的

1019
00:34:59,026 --> 0:35:02,226
其次是保持你的

1020
00:35:02,226 --> 0:35:04,296
模型复杂度与你

1021
00:35:04,296 --> 0:35:05,636
试图解决的目标成正比

1022
00:35:07,146 --> 0:35:08,436
这两种技术都可以

1023
00:35:08,436 --> 0:35:11,146
防止模型过度拟合

1024
00:35:11,146 --> 0:35:12,916
这极可能导致模型倒转

1025
00:35:12,916 --> 0:35:14,706
或得出意外结论

1026
00:35:15,296 --> 0:35:17,936
如今在 Apple 我们相信

1027
00:35:17,936 --> 0:35:19,426
考虑这些问题是开发

1028
00:35:19,856 --> 0:35:21,326
用户可以信赖的产品

1029
00:35:21,326 --> 0:35:23,116
的重要组成部分

1030
00:35:24,436 --> 0:35:27,986
因为基本上隐私都是关乎于人的

1031
00:35:29,386 --> 0:35:31,226
这是关乎与用户建立

1032
00:35:31,266 --> 0:35:33,586
信任关系 并在处理

1033
00:35:33,586 --> 0:35:35,286
用户数据时 尊重他们

1034
00:35:36,636 --> 0:35:38,276
通过采用我们在

1035
00:35:38,276 --> 0:35:39,086
演讲中介绍的技术

1036
00:35:39,086 --> 0:35:41,656
你也可以开发出

1037
00:35:41,656 --> 0:35:44,516
具有强大功能和良好

1038
00:35:44,786 --> 0:35:45,776
隐私性的产品

1039
00:35:46,286 --> 0:35:49,406
总而言之 我希望大家能

1040
00:35:49,406 --> 0:35:51,546
采用我们关于隐私的三大想法

1041
00:35:52,416 --> 0:35:53,886
隐私关乎于人

1042
00:35:54,546 --> 0:35:56,456
问“应该”的问题

1043
00:35:56,456 --> 0:35:58,406
以及将数据实践

1044
00:35:58,406 --> 0:36:00,196
和你要解决的

1045
00:35:58,406 --> 0:36:00,196
和你要解决的

1046
00:36:00,196 --> 0:36:01,796
用例结合起来

1047
00:36:02,386 --> 0:36:05,236
若想了解更多信息

1048
00:36:05,236 --> 0:36:07,116
请参加这些会议

1049
00:36:07,116 --> 0:36:08,276
我期待本次会议之后

1050
00:36:08,276 --> 0:36:10,056
还能在实验室与各位相见

1051
00:36:10,146 --> 0:36:11,616
以便我们通过更好的隐私技术

1052
00:36:11,736 --> 0:36:13,846
来帮你开发更出色的 App

1053
00:36:14,396 --> 0:36:14,756
谢谢大家

1054
00:36:15,516 --> 0:36:19,500
[ 掌声 ]
