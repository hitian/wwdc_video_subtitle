1
00:00:07,516 --> 0:00:16,500
[ 音乐 ]

2
00:00:20,516 --> 0:00:28,996
[ 掌声 ]

3
00:00:29,496 --> 0:00:30,396
大家好

4
00:00:30,876 --> 0:00:32,566
我的名字是 Ari Weinstein

5
00:00:32,566 --> 0:00:34,326
很高兴来到这里

6
00:00:34,326 --> 0:00:35,766
与 Willem Mattelaer 一起

7
00:00:35,766 --> 0:00:37,516
向大家介绍 Siri 的捷径

8
00:00:38,106 --> 0:00:43,096
两年前 我们发布了第一版 SiriKit

9
00:00:43,256 --> 0:00:44,966
让你的 App 能

10
00:00:44,966 --> 0:00:46,566
使用 Siri 的功能

11
00:00:46,566 --> 0:00:48,446
它当时已经具备了

12
00:00:48,446 --> 0:00:50,046
如发送信息

13
00:00:50,166 --> 0:00:51,586
叫车 交易支付等

14
00:00:51,586 --> 0:00:52,356
诸多细化功能

15
00:00:53,026 --> 0:00:55,116
但我们知道

16
00:00:55,116 --> 0:00:57,096
你想用 SiriKit 做更多的事情

17
00:00:57,096 --> 0:00:58,656
这也是为什么今年我们会

18
00:00:58,656 --> 0:01:00,166
如此兴奋地向大家介绍捷径

19
00:00:58,656 --> 0:01:00,166
如此兴奋地向大家介绍捷径

20
00:01:01,506 --> 0:01:03,586
捷径的核心思路

21
00:01:03,586 --> 0:01:05,066
是让你可以把自己的 App 中

22
00:01:05,066 --> 0:01:06,996
最关键的功能

23
00:01:06,996 --> 0:01:09,246
与 Siri 接通

24
00:01:09,426 --> 0:01:11,226
这样真的很好

25
00:01:11,226 --> 0:01:12,606
因为这让人们可以

26
00:01:12,606 --> 0:01:14,636
在新的场景以新的方式

27
00:01:14,636 --> 0:01:15,136
来使用你的 App

28
00:01:15,596 --> 0:01:17,216
这是一种

29
00:01:17,376 --> 0:01:18,406
吸引用户的好方法

30
00:01:19,446 --> 0:01:22,246
接通捷径

31
00:01:22,246 --> 0:01:24,266
为用户使用你的 App 

32
00:01:24,266 --> 0:01:25,616
开启了无数种可能性

33
00:01:25,616 --> 0:01:27,306
让我们一起看看可以使用

34
00:01:27,526 --> 0:01:30,436
捷径的典型场景吧

35
00:01:30,926 --> 0:01:32,216
捷径通过

36
00:01:32,216 --> 0:01:34,416
展示你接下来想要做什么

37
00:01:34,416 --> 0:01:35,986
把 “Siri 建议”带到了一个新的层次

38
00:01:35,986 --> 0:01:37,876
不仅仅是打开你的 App

39
00:01:37,876 --> 0:01:39,816
更能延伸到 App 内部的功能

40
00:01:39,816 --> 0:01:41,766
并且 Siri 会在恰当的时机

41
00:01:41,766 --> 0:01:43,906
在搜索界面中提供建议

42
00:01:45,366 --> 0:01:47,286
Siri 还可以在 Apple Watch 上

43
00:01:47,286 --> 0:01:48,836
建议捷径

44
00:01:48,836 --> 0:01:50,596
你可以在你手腕上的 Siri 表盘

45
00:01:50,596 --> 0:01:51,496
上直接使用它们

46
00:01:53,556 --> 0:01:55,166
当 Siri 认为

47
00:01:55,166 --> 0:01:56,516
应该使用某个捷径时

48
00:01:56,516 --> 0:01:58,286
它就会在锁定屏幕上

49
00:01:58,286 --> 0:01:59,096
显示建议

50
00:01:59,216 --> 0:02:01,026
当你轻点一个捷径时

51
00:01:59,216 --> 0:02:01,026
当你轻点一个捷径时

52
00:02:01,246 --> 0:02:02,776
你直接在

53
00:02:02,976 --> 0:02:05,226
锁定屏幕上的定制 UI 上

54
00:02:05,226 --> 0:02:07,266
来使用它 

55
00:02:07,356 --> 0:02:08,586
你还可以把捷径添加到 Siri

56
00:02:08,626 --> 0:02:10,096
这样你就可以

57
00:02:10,096 --> 0:02:11,876
通过询问 Siri

58
00:02:11,876 --> 0:02:12,406
来使用这些捷径

59
00:02:12,646 --> 0:02:14,316
在 Siri 中 你会看到

60
00:02:14,316 --> 0:02:16,536
与锁定屏幕和搜索界面中

61
00:02:16,536 --> 0:02:17,496
相同的定制 UI

62
00:02:18,966 --> 0:02:21,706
App 可以在 Siri 中提供

63
00:02:21,706 --> 0:02:23,566
很好的语音体验

64
00:02:23,566 --> 0:02:26,086
App 提供自定义的响应对话

65
00:02:26,296 --> 0:02:28,176
而 Siri 会将其大声读出来

66
00:02:28,176 --> 0:02:30,976
来告诉你一些事情

67
00:02:31,146 --> 0:02:33,746
比如咖啡还有多久做好

68
00:02:34,476 --> 0:02:37,216
当用户给 Siri 添加捷径时

69
00:02:37,216 --> 0:02:39,036
他们要先选择一个

70
00:02:39,036 --> 0:02:41,056
自定义的个人短语

71
00:02:41,396 --> 0:02:43,536
这样用户就可以选择

72
00:02:43,536 --> 0:02:45,426
对 Siri 说什么来启动捷径

73
00:02:45,846 --> 0:02:47,326
作为一个开发者

74
00:02:47,326 --> 0:02:49,336
你应该建议使用的短语

75
00:02:49,486 --> 0:02:51,736
在这种情况下 建议是“咖啡时间”

76
00:02:52,226 --> 0:02:53,876
一旦对 Siri 添加了一个捷径

77
00:02:53,946 --> 0:02:55,876
这将在你所有

78
00:02:55,876 --> 0:02:58,686
iOS 设备上

79
00:02:58,686 --> 0:03:01,686
在 Apple Watch 上 甚至在 HomePod 上都适用

80
00:02:58,686 --> 0:03:01,686
在 Apple Watch 上 甚至在 HomePod 上都适用

81
00:03:02,376 --> 0:03:04,956
我们也有新的

82
00:03:04,956 --> 0:03:06,576
捷径 App

83
00:03:06,576 --> 0:03:08,146
通过这个新的捷径 App

84
00:03:08,146 --> 0:03:10,176
每个人都可以打造自己的捷径

85
00:03:10,176 --> 0:03:12,086
需要做的只是拖拽和放下

86
00:03:12,086 --> 0:03:13,396
一系列的步骤

87
00:03:13,896 --> 0:03:15,556
这些步骤还包括

88
00:03:15,706 --> 0:03:19,046
你 App 所接通的捷径

89
00:03:19,266 --> 0:03:21,476
我们今天将讨论

90
00:03:21,476 --> 0:03:23,096
如何在你的 App 中

91
00:03:23,096 --> 0:03:24,606
使用捷径

92
00:03:24,606 --> 0:03:25,676
以及如何优化你的捷径

93
00:03:25,676 --> 0:03:27,346
以提供更好的建议

94
00:03:27,806 --> 0:03:29,316
我们会讲到一些

95
00:03:29,316 --> 0:03:30,926
要特别注意的

96
00:03:30,926 --> 0:03:32,106
隐私考虑

97
00:03:32,106 --> 0:03:33,036
我们还会讲到

98
00:03:33,036 --> 0:03:34,906
如何为媒体播放 制作出色的捷径

99
00:03:36,236 --> 0:03:38,156
首先 我们来讨论一下

100
00:03:38,156 --> 0:03:39,946
如何采用新的捷径 API

101
00:03:41,546 --> 0:03:43,236
创建捷径

102
00:03:43,236 --> 0:03:44,676
有 3 个步骤

103
00:03:44,676 --> 0:03:46,726
第 1 步是 定义捷径

104
00:03:46,996 --> 0:03:48,256
这意味着你需要决定

105
00:03:48,396 --> 0:03:50,186
为哪个功能接通捷径

106
00:03:50,186 --> 0:03:52,336
同时定义每个捷径

107
00:03:52,336 --> 0:03:53,576
这样 Siri 就可以知道你的 App

108
00:03:53,576 --> 0:03:54,136
能做些什么

109
00:03:55,406 --> 0:03:57,676
第 2 步 你需要递交（Donate）自己新的捷径

110
00:03:58,086 --> 0:03:59,436
这意味着每次用户

111
00:03:59,436 --> 0:04:01,816
在你的 App 中使用

112
00:03:59,436 --> 0:04:01,816
在你的 App 中使用

113
00:04:01,816 --> 0:04:03,476
接通了捷径的功能时

114
00:04:03,476 --> 0:04:05,046
你都需要告诉系统

115
00:04:05,086 --> 0:04:06,776
这样 Siri 才会习得

116
00:04:06,776 --> 0:04:07,916
建议你的捷径的

117
00:04:07,916 --> 0:04:08,826
正确时机和场景

118
00:04:09,246 --> 0:04:12,616
第 3 步是处理你的捷径

119
00:04:13,076 --> 0:04:14,936
这意味着 当用户想要

120
00:04:14,936 --> 0:04:16,625
在 Siri 中 在锁定屏幕上

121
00:04:16,676 --> 0:04:18,106
或是在搜索界面使用你的捷径时

122
00:04:18,106 --> 0:04:19,886
你需要准备好

123
00:04:19,886 --> 0:04:22,356
让你的 App 和 App 扩展

124
00:04:22,356 --> 0:04:23,596
可以被唤醒

125
00:04:23,596 --> 0:04:24,456
并将其传递至句柄

126
00:04:25,836 --> 0:04:29,236
在你定义捷径之前

127
00:04:29,306 --> 0:04:30,496
你需要决定

128
00:04:30,496 --> 0:04:32,396
你具体想要接通的功能是什么

129
00:04:33,056 --> 0:04:35,176
你需要考虑

130
00:04:35,176 --> 0:04:36,256
什么是用户

131
00:04:36,256 --> 0:04:37,316
在使用你的 App 时

132
00:04:37,316 --> 0:04:38,436
会做的最重要的事

133
00:04:38,686 --> 0:04:39,716
因为这些事情

134
00:04:39,716 --> 0:04:40,826
可能就是你需要

135
00:04:40,826 --> 0:04:41,936
接通捷径的东西

136
00:04:42,256 --> 0:04:44,796
你接通的每一个捷径

137
00:04:44,796 --> 0:04:46,776
都应该让用户在使用

138
00:04:46,776 --> 0:04:48,686
你的 App 的核心功能时

139
00:04:48,716 --> 0:04:49,246
能有更快的速度

140
00:04:50,056 --> 0:04:51,176
这意味着你应该采用一些

141
00:04:51,176 --> 0:04:52,616
用户想用你的 App

142
00:04:52,616 --> 0:04:54,266
所做的事情

143
00:04:54,266 --> 0:04:55,866
并让他们能更快地做这些事情

144
00:04:56,796 --> 0:04:58,616
速度的提升应该

145
00:04:58,616 --> 0:05:00,376
是实质性的

146
00:04:58,616 --> 0:05:00,376
是实质性的

147
00:05:00,376 --> 0:05:01,836
你不能只是接通一个

148
00:05:01,836 --> 0:05:04,676
正常地打开你的 App 的捷径

149
00:05:05,316 --> 0:05:06,936
如果你接通的捷径

150
00:05:06,936 --> 0:05:08,096
并没有让用户

151
00:05:08,096 --> 0:05:09,636
在使用 App 时有很大的速度提升

152
00:05:10,186 --> 0:05:11,826
那么它就不会被推荐为经常使用

153
00:05:12,416 --> 0:05:15,446
其次 每一个

154
00:05:15,446 --> 0:05:16,426
你接通的捷径

155
00:05:16,426 --> 0:05:18,056
都应该能长期调动用户的兴趣

156
00:05:18,166 --> 0:05:19,286
这意味着

157
00:05:19,346 --> 0:05:20,236
这应该是用户想要

158
00:05:20,236 --> 0:05:21,516
多次使用的功能

159
00:05:21,926 --> 0:05:23,696
如果只是用户

160
00:05:23,696 --> 0:05:24,966
想要使用一次或两次的功能

161
00:05:24,966 --> 0:05:27,126
那么为它们创建捷径

162
00:05:27,256 --> 0:05:28,976
不是什么好主意

163
00:05:29,076 --> 0:05:30,906
你还应该只接通

164
00:05:30,906 --> 0:05:32,706
可以随时使用的捷径

165
00:05:32,706 --> 0:05:35,036
因为在你的捷径准备好前

166
00:05:35,036 --> 0:05:36,566
你不能指望

167
00:05:36,566 --> 0:05:38,076
用户处于某些

168
00:05:38,076 --> 0:05:39,596
特定状态

169
00:05:40,806 --> 0:05:43,246
一旦你决定要

170
00:05:43,246 --> 0:05:44,406
接通什么捷径时

171
00:05:44,406 --> 0:05:45,686
你就应该准备好查看

172
00:05:45,686 --> 0:05:47,386
捷径的 API

173
00:05:48,396 --> 0:05:51,026
我们有两种 API

174
00:05:51,026 --> 0:05:52,766
来支持捷径的使用

175
00:05:53,216 --> 0:05:55,316
第一种是 NSUserActivity

176
00:05:56,076 --> 0:05:58,086
NSUserActivity 是一种代表你

177
00:05:58,086 --> 0:05:59,596
App 状态的轻量级方式

178
00:05:59,596 --> 0:06:01,426
它集成了一些

179
00:05:59,596 --> 0:06:01,426
它集成了一些

180
00:06:01,456 --> 0:06:02,776
其他的 Apple 功能

181
00:06:02,806 --> 0:06:04,156
如“聚焦”和“接力”

182
00:06:05,046 --> 0:06:07,046
第二种是 Intents

183
00:06:07,626 --> 0:06:08,676
Intents 是

184
00:06:08,676 --> 0:06:10,726
一种展示你的 App

185
00:06:10,726 --> 0:06:12,286
能实现的功能的方式

186
00:06:12,286 --> 0:06:14,726
Siri 内置了

187
00:06:14,726 --> 0:06:18,166
一系列很好的 Intents

188
00:06:18,166 --> 0:06:19,106
它们支持一系列

189
00:06:19,106 --> 0:06:20,786
App 可以用来

190
00:06:20,786 --> 0:06:21,716
与 Siri 协作的功能

191
00:06:22,226 --> 0:06:22,916
今年我们将

192
00:06:22,916 --> 0:06:23,896
介绍一个非常酷的特性

193
00:06:23,896 --> 0:06:25,176
你现在可以

194
00:06:25,176 --> 0:06:26,556
自定义 Intents 

195
00:06:26,556 --> 0:06:27,886
来与捷径协作了

196
00:06:29,006 --> 0:06:30,676
因此 对于每一个你接通的捷径

197
00:06:30,676 --> 0:06:32,286
你都需要决定它

198
00:06:32,286 --> 0:06:33,126
是一个 NSUserActivity

199
00:06:33,126 --> 0:06:34,836
还是一个 Intent

200
00:06:35,266 --> 0:06:36,836
那么我们来谈论一下如何

201
00:06:37,466 --> 0:06:39,266
做出这个决定

202
00:06:40,236 --> 0:06:42,426
目前 NSUserActivity 是

203
00:06:42,426 --> 0:06:43,606
构建捷径很好的选择

204
00:06:43,866 --> 0:06:45,366
如果你只是要构建一个

205
00:06:45,366 --> 0:06:46,746
想要打开某些你 App 内的

206
00:06:46,746 --> 0:06:49,186
功能的简单捷径 或者你想要

207
00:06:49,186 --> 0:06:51,496
为某些你已经内置在“聚焦”搜索内

208
00:06:51,496 --> 0:06:53,216
或者已经在 NSUserActivity 中

209
00:06:53,216 --> 0:06:55,386
提供的（比如“接力”）功能

210
00:06:55,426 --> 0:06:57,486
接通捷径

211
00:06:57,486 --> 0:06:58,616
建议你选择 NSUserActivity

212
00:06:59,146 --> 0:07:02,436
但是如果想要最优的

213
00:06:59,146 --> 0:07:02,436
但是如果想要最优的

214
00:07:02,436 --> 0:07:03,936
捷径体验 你应该采用 Intents

215
00:07:03,936 --> 0:07:05,746
以 Intents 为基础的捷径

216
00:07:05,746 --> 0:07:06,646
真的非常酷

217
00:07:06,646 --> 0:07:08,596
因为它们不需要启动你的 App 

218
00:07:08,596 --> 0:07:10,156
就可以内联运行

219
00:07:10,156 --> 0:07:11,656
它们能包含一些自定义的

220
00:07:11,656 --> 0:07:13,626
语音回复和定制化的 UI

221
00:07:13,626 --> 0:07:14,726
像我们刚刚看到的那样

222
00:07:14,726 --> 0:07:16,186
它们还会包含一些

223
00:07:16,336 --> 0:07:17,956
颗粒参数预测

224
00:07:18,266 --> 0:07:19,756
这些 Willem 稍后

225
00:07:19,756 --> 0:07:20,346
会和你们讨论

226
00:07:21,516 --> 0:07:23,616
一旦你决定要采用哪种 API

227
00:07:23,616 --> 0:07:25,356
你就准备好

228
00:07:25,356 --> 0:07:28,116
要开始实现了

229
00:07:29,176 --> 0:07:29,996
那我们现在就开始

230
00:07:29,996 --> 0:07:30,976
首先 我们来看看

231
00:07:30,976 --> 0:07:31,766
怎么用 NSUserActivity

232
00:07:31,766 --> 0:07:33,586
来接通捷径

233
00:07:33,586 --> 0:07:35,416
第 1 步是定义你的捷径

234
00:07:35,416 --> 0:07:37,376
对于 NSUserActivity 来说

235
00:07:37,406 --> 0:07:38,806
这意味着你需要

236
00:07:38,806 --> 0:07:41,116
在你 App 内的 Info.plist 文件中

237
00:07:41,116 --> 0:07:43,466
声明一个 UserActivityType

238
00:07:43,466 --> 0:07:44,596
来将你的 Activity 类型登记到系统中

239
00:07:46,006 --> 0:07:48,326
接下来 你需要递交捷径

240
00:07:48,736 --> 0:07:50,836
对于 NSUserActivity

241
00:07:50,946 --> 0:07:52,186
这意味着每当用户处于

242
00:07:52,186 --> 0:07:53,596
你的 App 中你想提供

243
00:07:53,596 --> 0:07:54,716
捷径的界面时

244
00:07:54,716 --> 0:07:56,076
你都应该让你一个

245
00:07:56,076 --> 0:07:57,836
NSUserActivity 对象可用

246
00:07:58,696 --> 0:08:02,066
这里有一个关键的新内容

247
00:07:58,696 --> 0:08:02,066
这里有一个关键的新内容

248
00:08:02,246 --> 0:08:04,056
就是 isEligibleForPrediction Flag

249
00:08:04,546 --> 0:08:06,206
在任何 userActivity 上

250
00:08:06,206 --> 0:08:07,386
把这个 Flag 设置为 “true”

251
00:08:07,386 --> 0:08:09,236
都会把它变成一个捷径 真正酷的是

252
00:08:09,236 --> 0:08:10,716
如果你的 App

253
00:08:10,716 --> 0:08:12,286
已经有了一个 userActivity

254
00:08:12,286 --> 0:08:14,796
你可以直接将这个 Flag 设置为 “true”

255
00:08:14,796 --> 0:08:16,416
这个 userActivity 就会

256
00:08:16,416 --> 0:08:17,606
自动变成一个捷径

257
00:08:18,616 --> 0:08:21,826
请注意 isEligibleForSearch Flag 需要

258
00:08:21,826 --> 0:08:22,906
设置为 “true”

259
00:08:22,906 --> 0:08:24,956
这样 isEligibleForPrediction

260
00:08:24,956 --> 0:08:25,336
才能生效

261
00:08:25,486 --> 0:08:28,746
另外 你可能要考虑到

262
00:08:28,746 --> 0:08:30,806
isEligibleForHandoff Flag

263
00:08:30,876 --> 0:08:31,786
它的默认情况就是 “true”

264
00:08:31,786 --> 0:08:34,196
所以在默认情况下

265
00:08:34,196 --> 0:08:35,885
你的所有 userActivity

266
00:08:35,885 --> 0:08:38,846
都可以在不同设备间“接力”

267
00:08:38,926 --> 0:08:40,066
当你创建自己的 userActivity 时

268
00:08:40,066 --> 0:08:41,166
你要确保

269
00:08:41,166 --> 0:08:42,426
包含所有

270
00:08:42,426 --> 0:08:44,246
userInfo 词典中的信息

271
00:08:44,246 --> 0:08:45,896
以便之后

272
00:08:45,896 --> 0:08:47,326
可以还原在这个 Activity

273
00:08:48,886 --> 0:08:50,976
接着就是通过

274
00:08:50,976 --> 0:08:52,306
把 userActivity 与当前屏幕上的

275
00:08:52,306 --> 0:08:54,186
UIViewController 或 UIResponder 连接

276
00:08:54,186 --> 0:08:55,566
来标记你

277
00:08:55,566 --> 0:08:56,586
当前的 Activity

278
00:08:57,186 --> 0:09:00,476
最后一步就是 在定义

279
00:08:57,186 --> 0:09:00,476
最后一步就是 在定义

280
00:09:00,476 --> 0:09:01,316
且递交了捷径之后

281
00:09:01,316 --> 0:09:02,526
处理它们

282
00:09:02,926 --> 0:09:05,186
每次当用户从你的 App

283
00:09:05,186 --> 0:09:08,046
使用 NSUserActivity 时

284
00:09:08,406 --> 0:09:09,406
它都会在你的 App 中打开

285
00:09:09,806 --> 0:09:11,186
你需要通过执行

286
00:09:11,186 --> 0:09:12,696
App 中用来处理

287
00:09:12,696 --> 0:09:13,916
NSUserActivity 的委托方法

288
00:09:13,916 --> 0:09:15,256
即 continueUserActivity

289
00:09:15,256 --> 0:09:16,496
来对其进行处理

290
00:09:17,086 --> 0:09:18,036
你要做的就是

291
00:09:18,036 --> 0:09:19,816
执行这个方法

292
00:09:19,816 --> 0:09:21,326
确认这种 Activity 类型是否

293
00:09:21,326 --> 0:09:22,646
与你所登记的类型匹配

294
00:09:22,646 --> 0:09:23,926
如果匹配的话

295
00:09:23,926 --> 0:09:25,396
你可以将 App

296
00:09:25,396 --> 0:09:26,326
还原成 userActivity

297
00:09:26,326 --> 0:09:27,296
保存时的状态

298
00:09:28,706 --> 0:09:30,366
以上就是为了让

299
00:09:30,366 --> 0:09:31,706
Siri 通过 NSUserActivity

300
00:09:31,706 --> 0:09:33,386
为你的 App 建议捷径

301
00:09:33,386 --> 0:09:34,836
你需要做的事情

302
00:09:37,166 --> 0:09:38,396
现在 让我们来谈论一下

303
00:09:38,396 --> 0:09:39,806
如何通过 Intents 接通捷径

304
00:09:41,016 --> 0:09:42,376
第 1 步还是

305
00:09:42,376 --> 0:09:43,346
定义你的捷径

306
00:09:43,526 --> 0:09:44,906
你可能需要

307
00:09:44,906 --> 0:09:47,116
从决定采用

308
00:09:47,116 --> 0:09:49,576
哪种类型的 Intents 开始

309
00:09:50,196 --> 0:09:51,936
大家都知道 Siri 包含了

310
00:09:51,936 --> 0:09:53,396
很多内嵌很棒的 Intents

311
00:09:53,616 --> 0:09:55,406
比如信息 健身

312
00:09:55,536 --> 0:09:56,626
清单等等

313
00:09:57,456 --> 0:09:59,156
现在我们将介绍

314
00:09:59,156 --> 0:10:00,936
如何在 Xcode 中

315
00:09:59,156 --> 0:10:00,936
如何在 Xcode 中

316
00:10:00,936 --> 0:10:01,916
为捷径定义自定 Intents

317
00:10:03,146 --> 0:10:05,346
如果你想要创建的捷径

318
00:10:05,346 --> 0:10:06,486
正好与默认情况下的

319
00:10:06,486 --> 0:10:08,156
内嵌式 SiriKit Intents 一致

320
00:10:08,156 --> 0:10:09,876
那你应该采用它

321
00:10:10,466 --> 0:10:12,136
不过你也可以定义自己的捷径

322
00:10:12,616 --> 0:10:15,096
不管你是想定义自己的 Intents

323
00:10:15,096 --> 0:10:16,416
还是采用现有的

324
00:10:16,416 --> 0:10:18,046
并对其进行定制

325
00:10:18,046 --> 0:10:19,566
你都需要在 Xcode 中创建

326
00:10:19,566 --> 0:10:21,356
一个 Intents 定义文件

327
00:10:21,786 --> 0:10:24,746
在我的空闲时间

328
00:10:24,746 --> 0:10:25,896
我一直在与几个朋友

329
00:10:25,896 --> 0:10:26,956
一起研发一个新的 App

330
00:10:26,956 --> 0:10:29,156
这是一个送汤的 App

331
00:10:29,156 --> 0:10:31,026
名字叫《Soup Chef》

332
00:10:31,026 --> 0:10:32,666
要想订汤 使用这个 App

333
00:10:32,666 --> 0:10:34,646
再方便不过了 它与 Siri

334
00:10:34,676 --> 0:10:36,586
关联的潜力让我十分期待

335
00:10:37,016 --> 0:10:38,586
我们来看看怎样使用

336
00:10:38,586 --> 0:10:40,286
新的 Intent Editor

337
00:10:40,286 --> 0:10:42,066
来为《Soup Chef》创建一个 Intent

338
00:10:42,126 --> 0:10:43,426
首先我将打开 Xcode 中的

339
00:10:43,426 --> 0:10:45,646
“File（文件）”-“New File（新文件）”

340
00:10:45,646 --> 0:10:47,256
选择 “SiriKit Intent Definition File

341
00:10:47,256 --> 0:10:48,196
（SiriKit Intent 定义文件）”

342
00:10:48,196 --> 0:10:51,176
然后我们就能看到全新的 Intent Editor

343
00:10:51,636 --> 0:10:52,986
首先我们需要

344
00:10:52,986 --> 0:10:54,866
点击左下角的加号按钮

345
00:10:54,866 --> 0:10:58,486
接下来 我想给我的 Intent 取个名字

346
00:10:58,756 --> 0:10:59,926
因为我要为订汤

347
00:10:59,926 --> 0:11:01,076
制作一个 Intent

348
00:10:59,926 --> 0:11:01,076
制作一个 Intent

349
00:11:01,076 --> 0:11:02,576
所以我要称之为 “OrderSoup（订汤）”

350
00:11:04,696 --> 0:11:06,266
接着我要填写

351
00:11:06,266 --> 0:11:07,326
Intent 的元数据

352
00:11:07,806 --> 0:11:09,526
让我们一步一步来看

353
00:11:10,456 --> 0:11:12,316
第一个元数据是 “Category（类别）”

354
00:11:12,346 --> 0:11:14,936
定义 Category

355
00:11:15,346 --> 0:11:17,536
可以帮助 Siri 知道

356
00:11:17,536 --> 0:11:19,176
如何讲述你的 Intent 以及

357
00:11:19,176 --> 0:11:20,186
如何在 UI 上展示它

358
00:11:20,666 --> 0:11:22,286
比如说 在这种情况下

359
00:11:22,286 --> 0:11:23,596
我选择了 “Order（预定）”这个种类

360
00:11:23,596 --> 0:11:25,216
如果我选择 “Order”

361
00:11:25,216 --> 0:11:26,926
当我使用到这个 Intent 的时候

362
00:11:26,926 --> 0:11:28,626
Siri 会说如 “好的 我预定了”这样的话

363
00:11:28,766 --> 0:11:29,926
接着它会展示一个

364
00:11:29,926 --> 0:11:31,536
如 “Order（预定）”的确认按钮

365
00:11:32,326 --> 0:11:33,776
我们提供

366
00:11:33,776 --> 0:11:34,816
几种不同的类别

367
00:11:34,816 --> 0:11:36,516
你应该选择最适合

368
00:11:36,516 --> 0:11:37,656
你 Intent 目的

369
00:11:37,656 --> 0:11:38,006
的那一个类别

370
00:11:39,516 --> 0:11:40,956
接着你要填写

371
00:11:40,956 --> 0:11:42,716
Intent 的 “Title（标题）”

372
00:11:43,056 --> 0:11:44,416
和 “Description（描述）” 

373
00:11:44,416 --> 0:11:46,196
这将会在各类场景中帮助用户发现

374
00:11:46,196 --> 0:11:47,726
你的 App 支持什么捷径

375
00:11:48,756 --> 0:11:49,876
然后就是 “User confirmation required

376
00:11:49,876 --> 0:11:51,586
（需要用户确认）”复选框

377
00:11:51,866 --> 0:11:53,666
这将决定我们是否

378
00:11:53,786 --> 0:11:55,046
在用户使用你的捷径前

379
00:11:55,046 --> 0:11:57,346
询问他们是否确认使用

380
00:11:57,496 --> 0:11:58,686
所以 Siri 可能会说

381
00:11:58,686 --> 0:12:00,066
如“你准备好使用《Soup Chef》

382
00:11:58,686 --> 0:12:00,066
如“你准备好使用《Soup Chef》

383
00:12:00,066 --> 0:12:01,226
来订汤了吗？”之类的话

384
00:12:01,226 --> 0:12:02,536
这对于我的 App 来说真的特别棒

385
00:12:02,536 --> 0:12:03,566
因为我想要确保用户

386
00:12:03,566 --> 0:12:05,296
并不是偶然地订汤 [ 笑声 ]

387
00:12:07,756 --> 0:12:09,696
你可以在这里看到

388
00:12:09,816 --> 0:12:10,386
Intent 的 “Parameter（参数）”

389
00:12:11,106 --> 0:12:12,856
这里将会定义

390
00:12:12,856 --> 0:12:14,716
传递给你的捷径的所有参数

391
00:12:14,716 --> 0:12:16,546
比如说 在我的例子里

392
00:12:16,546 --> 0:12:17,416
我有两个参数

393
00:12:17,636 --> 0:12:21,746
分别是被预定的汤品清单以及配送地址

394
00:12:22,246 --> 0:12:23,966
目前 “Parameters” 支持一个

395
00:12:23,966 --> 0:12:25,206
简短的类型列表

396
00:12:25,206 --> 0:12:26,966
这些类型包括如字符串

397
00:12:27,256 --> 0:12:29,606
数字 人物和位置等

398
00:12:30,046 --> 0:12:31,236
不过如果你想构建一个

399
00:12:31,236 --> 0:12:33,746
能够代表你 App 中的对象

400
00:12:33,746 --> 0:12:35,346
但是却不在

401
00:12:35,346 --> 0:12:36,706
类型列表中的参数

402
00:12:36,906 --> 0:12:38,236
那你可以

403
00:12:39,676 --> 0:12:39,786
选择 “Custom（自定义）”类型

404
00:12:40,386 --> 0:12:41,116
当你已经定义好你的参数

405
00:12:41,116 --> 0:12:42,146
你可能会想要看一下

406
00:12:42,146 --> 0:12:43,186
“捷径类型”

407
00:12:43,776 --> 0:12:46,016
这里会定义

408
00:12:46,016 --> 0:12:47,266
你想要建议给用户的

409
00:12:47,266 --> 0:12:48,326
所有捷径的类型

410
00:12:49,616 --> 0:12:51,566
每种类型都包含

411
00:12:51,566 --> 0:12:53,436
一种特定的 会被预测的

412
00:12:53,436 --> 0:12:55,836
参数组合 每一个类型

413
00:12:55,836 --> 0:12:57,336
都标题和副标题的形式展示

414
00:12:57,336 --> 0:12:59,476
其中会填上你的

415
00:12:59,706 --> 0:13:01,336
参数数值

416
00:12:59,706 --> 0:13:01,336
参数数值

417
00:13:01,676 --> 0:13:04,246
如果因为你的捷径需要

418
00:13:04,246 --> 0:13:05,526
启动你的 App 才能运行

419
00:13:05,816 --> 0:13:06,916
而导致的它不能在后台运行

420
00:13:06,916 --> 0:13:08,326
那么你可以不选

421
00:13:08,456 --> 0:13:10,446
“Supports background 

422
00:13:10,446 --> 0:13:11,766
execution（支持后台执行）” 复选框

423
00:13:12,236 --> 0:13:14,566
在某些情况下 一个 Intent

424
00:13:14,566 --> 0:13:15,786
可能拥有很多个捷径类型

425
00:13:15,786 --> 0:13:17,166
它们中有的支持

426
00:13:17,166 --> 0:13:18,786
后台执行

427
00:13:18,786 --> 0:13:19,026
有的则不支持

428
00:13:19,646 --> 0:13:21,666
在《Soup Chef》的例子中

429
00:13:21,826 --> 0:13:22,996
这尤其重要

430
00:13:22,996 --> 0:13:24,276
因为当预知了菜单和

431
00:13:24,276 --> 0:13:26,186
配送位置后

432
00:13:26,186 --> 0:13:28,286
我们可以支持后台执行

433
00:13:28,286 --> 0:13:29,586
因为我们拥有了

434
00:13:29,586 --> 0:13:30,926
下订单所需要的一切

435
00:13:31,346 --> 0:13:33,276
不过如果我们增加了一个

436
00:13:33,496 --> 0:13:37,106
只包含配送位置的捷径类型

437
00:13:37,106 --> 0:13:39,186
Siri 会知道

438
00:13:39,226 --> 0:13:40,236
我们可能不会有

439
00:13:40,236 --> 0:13:41,446
足够的信息来下订单

440
00:13:41,446 --> 0:13:42,926
所以我们需要启动 App

441
00:13:42,926 --> 0:13:44,806
来询问用户他们需要配送到

442
00:13:44,806 --> 0:13:46,176
什么地址 在这种情况下

443
00:13:46,176 --> 0:13:47,466
我们希望这种

444
00:13:47,556 --> 0:13:49,056
捷径类型不要在

445
00:13:49,056 --> 0:13:50,846
后台执行

446
00:13:51,066 --> 0:13:52,736
你应该列出

447
00:13:52,736 --> 0:13:54,676
你认为有助于 Siri

448
00:13:54,676 --> 0:13:55,896
做出最佳预测的

449
00:13:55,896 --> 0:13:57,366
捷径的每种变体的

450
00:13:57,366 --> 0:13:58,496
捷径类型

451
00:13:58,946 --> 0:14:00,546
为了最佳体验

452
00:13:58,946 --> 0:14:00,546
为了最佳体验

453
00:14:00,776 --> 0:14:02,366
你应该尽可能

454
00:14:02,366 --> 0:14:03,506
让所有的捷径类型

455
00:14:03,506 --> 0:14:04,496
都支持后台执行

456
00:14:05,136 --> 0:14:06,686
支持后台执行的

457
00:14:06,686 --> 0:14:08,226
捷径类型让用户

458
00:14:08,226 --> 0:14:09,756
体验速度更快

459
00:14:09,756 --> 0:14:12,056
这样它们会更频繁地被建议

460
00:14:13,726 --> 0:14:15,336
你可以为每个 Intent

461
00:14:15,336 --> 0:14:17,446
提供最多 16 种你定义的捷径类型

462
00:14:18,766 --> 0:14:19,946
一旦你定义了你的 Intent

463
00:14:19,946 --> 0:14:21,696
Xcode 将

464
00:14:21,696 --> 0:14:23,446
自动生成一个 Intent 类

465
00:14:24,016 --> 0:14:25,596
和一个 Intent

466
00:14:25,596 --> 0:14:26,906
处理协议

467
00:14:27,236 --> 0:14:29,176
在我的例子中

468
00:14:29,176 --> 0:14:31,666
我们生成了 OrderSoupIntent 类

469
00:14:31,746 --> 0:14:33,666
还有一个 OrderSoupIntentHandling 协议

470
00:14:33,806 --> 0:14:36,116
这个协议中有着与我刚刚

471
00:14:36,266 --> 0:14:37,616
在我的 Intent 定义文件中

472
00:14:37,616 --> 0:14:39,146
所定义的条目相一致的属性

473
00:14:39,816 --> 0:14:41,386
由于 Xcode 会自动生成代码

474
00:14:41,386 --> 0:14:42,396
很重要的一件事是需要考虑

475
00:14:42,396 --> 0:14:44,316
Xcode 在生成这段代码的时候

476
00:14:44,316 --> 0:14:45,886
Target 是什么

477
00:14:45,886 --> 0:14:47,486
因为你不想要

478
00:14:47,486 --> 0:14:48,796
在最后呈现相同类当中

479
00:14:48,796 --> 0:14:50,586
互相冲突的

480
00:14:50,586 --> 0:14:51,576
完全一样的实例

481
00:14:52,606 --> 0:14:55,026
让我们一起

482
00:14:55,156 --> 0:14:56,706
在 Inspector 面板中

483
00:14:56,736 --> 0:14:58,156
看看我的 Intent 定义文件中的

484
00:14:58,156 --> 0:14:58,876
“Target Membership（目标成员）”部分

485
00:15:01,046 --> 0:15:02,676
你的 Intent 所使用的

486
00:15:02,676 --> 0:15:04,276
每个 Target 都应该

487
00:15:04,276 --> 0:15:05,976
包含你的 Intent 定义文件

488
00:15:05,976 --> 0:15:07,496
你应该选中

489
00:15:07,496 --> 0:15:10,096
“Target Membership” 下面的复选框

490
00:15:10,506 --> 0:15:11,806
不过你需要确定

491
00:15:11,806 --> 0:15:13,066
如果你拥有一个框架

492
00:15:13,316 --> 0:15:15,096
你不会在互相包含的

493
00:15:15,096 --> 0:15:16,986
多个 Target 中生成代码

494
00:15:17,126 --> 0:15:19,546
如果你有一个框架

495
00:15:19,546 --> 0:15:21,886
你应该通过在每个 Target 中

496
00:15:22,066 --> 0:15:23,516
只选择 Intent 类

497
00:15:23,586 --> 0:15:25,036
而不选择生成的类

498
00:15:25,036 --> 0:15:26,866
来将 “Target Membership” 设定为

499
00:15:26,866 --> 0:15:29,036
只为该框架生成 Intent 类

500
00:15:29,636 --> 0:15:31,496
不过如果在你的 App 里

501
00:15:31,576 --> 0:15:32,596
没有任何框架

502
00:15:32,596 --> 0:15:33,896
因为你还没有将你的 App

503
00:15:33,896 --> 0:15:35,786
分离成框架

504
00:15:35,786 --> 0:15:37,326
你应该为每一个 Target

505
00:15:37,426 --> 0:15:38,486
检查 Target

506
00:15:39,326 --> 0:15:41,796
这就是如何在 Xcode 中定义

507
00:15:41,796 --> 0:15:42,926
自定 Intent

508
00:15:44,296 --> 0:15:45,436
当你定义好了自定 Intent

509
00:15:45,436 --> 0:15:47,296
想要递交就非常容易了

510
00:15:47,906 --> 0:15:48,886
你所需要做的只是

511
00:15:48,886 --> 0:15:50,646
将你的 Intent 对象实例化

512
00:15:51,166 --> 0:15:52,856
然后填入参数

513
00:15:52,956 --> 0:15:54,606
再创建并递交一个

514
00:15:54,766 --> 0:15:55,936
INInteraction 对象

515
00:15:56,816 --> 0:15:58,826
需要确保每次用户

516
00:15:58,866 --> 0:16:00,596
在你的 App 中执行与你的捷径

517
00:15:58,866 --> 0:16:00,596
在你的 App 中执行与你的捷径

518
00:16:00,596 --> 0:16:01,756
相同的任务时能做到这一点

519
00:16:02,566 --> 0:16:05,246
在这种情况下 每次当

520
00:16:05,366 --> 0:16:07,926
用户预订汤时

521
00:16:07,926 --> 0:16:09,396
我就会递交这个 Intent

522
00:16:09,396 --> 0:16:10,666
因为这将帮助 Siri

523
00:16:10,836 --> 0:16:12,336
习得预测 Intent 的最佳时期

524
00:16:13,766 --> 0:16:15,586
我们已经定义了自定 Intent

525
00:16:15,586 --> 0:16:16,926
现在要讨论的就是

526
00:16:16,926 --> 0:16:17,956
如何处理它

527
00:16:18,216 --> 0:16:19,036
和 NSUserActivity 一样

528
00:16:19,036 --> 0:16:21,236
你应该在你的 App 委托里

529
00:16:21,236 --> 0:16:23,036
执行 continueUserActivity 方法

530
00:16:23,036 --> 0:16:24,576
以此来处理

531
00:16:24,576 --> 0:16:25,366
你的 Intent

532
00:16:26,126 --> 0:16:28,056
当一个 Intent 在你的 App 中

533
00:16:28,056 --> 0:16:30,066
被打开时 它将以

534
00:16:30,066 --> 0:16:32,076
NSUserActivity 对象的形式

535
00:16:32,076 --> 0:16:34,436
进入它的 Activity

536
00:16:34,436 --> 0:16:36,086
类型就是之前你生成的

537
00:16:36,086 --> 0:16:36,496
Intent 类的名字

538
00:16:36,796 --> 0:16:37,686
在我的例子中

539
00:16:37,796 --> 0:16:38,926
就是 OrderSoupIntent

540
00:16:40,146 --> 0:16:41,666
不过如果你只执行

541
00:16:41,666 --> 0:16:43,306
continueUserActivity

542
00:16:43,306 --> 0:16:45,446
你的捷径每次都会打开你的 App

543
00:16:45,486 --> 0:16:47,036
它不会在后台运行

544
00:16:47,036 --> 0:16:48,766
或者与 Siri 内联运行

545
00:16:48,766 --> 0:16:50,156
也不会支持如自定声音

546
00:16:50,156 --> 0:16:50,676
回复之类的功能

547
00:16:51,056 --> 0:16:52,706
为了拥有最佳的体验

548
00:16:52,706 --> 0:16:54,486
你想要创建一个在后台

549
00:16:54,486 --> 0:16:56,176
处理你的捷径的拓展包

550
00:16:57,116 --> 0:16:59,716
要想实现这个目的

551
00:16:59,966 --> 0:17:01,736
首先要在 Xcode 项目中创建一个新目标

552
00:16:59,966 --> 0:17:01,736
首先要在 Xcode 项目中创建一个新目标

553
00:17:01,736 --> 0:17:03,366
然后选择 “Intents Extension

554
00:17:03,416 --> 0:17:03,806
（Intent 扩展）”模板

555
00:17:04,326 --> 0:17:07,836
确保你的 Intent Handler

556
00:17:07,925 --> 0:17:09,445
遵循 Intent 处理协议

557
00:17:09,836 --> 0:17:10,636
在我的例子中

558
00:17:10,876 --> 0:17:12,766
就是 OrderSoupIntent 这个处理方式

559
00:17:12,766 --> 0:17:14,076
然后再执行这些方法

560
00:17:14,076 --> 0:17:15,876
也就是 confirm() 和 handle()

561
00:17:16,425 --> 0:17:17,566
需要注意的是

562
00:17:17,566 --> 0:17:19,356
和传统的 SiriKit 不同的是

563
00:17:19,356 --> 0:17:20,846
你不需要执行 resolve() 方法

564
00:17:20,846 --> 0:17:22,876
因为你的 Intent

565
00:17:22,996 --> 0:17:24,346
不需要任何

566
00:17:24,486 --> 0:17:25,866
用户定制或

567
00:17:25,866 --> 0:17:26,965
用户的任何后续动作

568
00:17:27,346 --> 0:17:29,676
所以 你应该检查

569
00:17:29,676 --> 0:17:30,906
你 Intent 的属性的

570
00:17:30,906 --> 0:17:32,126
所有数值以保证

571
00:17:32,126 --> 0:17:33,056
它们是有效的

572
00:17:33,396 --> 0:17:34,596
如果不是

573
00:17:34,596 --> 0:17:36,066
在你认为你不能处理

574
00:17:36,066 --> 0:17:36,906
这个 Intent 的情况下

575
00:17:36,906 --> 0:17:38,096
你应该返回一个错误代码

576
00:17:38,716 --> 0:17:40,866
然后处理 准确地说是

577
00:17:40,916 --> 0:17:42,726
执行你的捷径

578
00:17:43,086 --> 0:17:44,106
在我的例子中

579
00:17:44,106 --> 0:17:45,786
这意味着为汤下订单

580
00:17:46,136 --> 0:17:47,996
接着你要返回一个

581
00:17:47,996 --> 0:17:49,756
能够指明结果

582
00:17:49,756 --> 0:17:51,266
如 “Success（成功）”的响应对象

583
00:17:52,926 --> 0:17:54,596
你应该为每一个 Target

584
00:17:54,596 --> 0:17:56,816
在后台运行的捷径

585
00:17:56,816 --> 0:17:58,476
执行一个 Intent 拓展包

586
00:17:58,476 --> 0:18:00,046
因为它们会

587
00:17:58,476 --> 0:18:00,046
因为它们会

588
00:18:00,046 --> 0:18:01,526
与 Siri 内部

589
00:18:01,526 --> 0:18:03,046
在锁定屏幕上

590
00:18:03,046 --> 0:18:04,426
在搜索界面中 在捷径 App 中

591
00:18:04,426 --> 0:18:05,796
或者是在 Siri 表盘中自动运行

592
00:18:05,796 --> 0:18:07,026
而不需要启动你的 App

593
00:18:07,726 --> 0:18:08,986
最有价值的捷径

594
00:18:08,986 --> 0:18:09,736
一定是在后台运行的

595
00:18:09,736 --> 0:18:11,886
不过你也可以创建

596
00:18:11,886 --> 0:18:13,486
很多其他很好的捷径

597
00:18:13,736 --> 0:18:15,546
需要记住的是

598
00:18:15,546 --> 0:18:16,696
即便你执行了一个

599
00:18:16,696 --> 0:18:18,166
Intent 拓展包 你也应该一直

600
00:18:18,166 --> 0:18:19,816
执行 continueUserActivity

601
00:18:20,126 --> 0:18:21,476
因为用户可能会

602
00:18:21,476 --> 0:18:23,076
通过 Siri 在你的 App 中

603
00:18:23,076 --> 0:18:24,816
打开捷径

604
00:18:24,816 --> 0:18:26,906
比如通过点击 Siri 上的卡片

605
00:18:27,206 --> 0:18:29,126
来展示你 App 的

606
00:18:29,126 --> 0:18:31,226
自定 UI

607
00:18:31,766 --> 0:18:33,206
还有一件我想要

608
00:18:33,206 --> 0:18:34,506
告诉你的事情

609
00:18:34,506 --> 0:18:35,946
那就是 INRelevantShortcut

610
00:18:36,346 --> 0:18:37,896
INRelevantShortcut 是一种

611
00:18:37,896 --> 0:18:39,386
向 Siri 表盘展示

612
00:18:39,386 --> 0:18:41,746
捷径的方式

613
00:18:41,746 --> 0:18:42,726
你只需要提供

614
00:18:42,876 --> 0:18:44,756
包含 Intent

615
00:18:44,756 --> 0:18:46,706
或者 userActivity 的

616
00:18:46,706 --> 0:18:47,176
INRelevantShortcut 对象即可

617
00:18:48,026 --> 0:18:49,266
你可以随意地

618
00:18:49,266 --> 0:18:50,956
在你相关的捷径中

619
00:18:50,956 --> 0:18:52,316
包含相关信息

620
00:18:52,316 --> 0:18:54,546
这可以提示 Siri 表盘

621
00:18:54,546 --> 0:18:56,046
何时你的捷径是相关的

622
00:18:56,046 --> 0:18:57,326
以及什么时候是

623
00:18:57,326 --> 0:18:58,286
展示你的捷径的最佳时期

624
00:18:59,376 --> 0:19:01,266
关于 INRelevantShortcut

625
00:18:59,376 --> 0:19:01,266
关于 INRelevantShortcut

626
00:19:01,386 --> 0:19:02,546
最酷的事情就是

627
00:19:02,546 --> 0:19:04,406
即便你没有 Watch App 它也能起作用

628
00:19:04,806 --> 0:19:06,206
你可以从你的 iOS App

629
00:19:06,206 --> 0:19:07,896
接通相关的捷径

630
00:19:07,896 --> 0:19:09,126
如果它们在后台运行

631
00:19:09,126 --> 0:19:10,666
就会直接出现在

632
00:19:10,666 --> 0:19:11,776
Siri 表盘上

633
00:19:12,276 --> 0:19:13,656
好了 我们现在已经讲到了

634
00:19:13,656 --> 0:19:14,946
所有捷径的使用方法

635
00:19:14,946 --> 0:19:17,256
以及采用 API 的方法

636
00:19:17,256 --> 0:19:18,586
接下来的时间交给

637
00:19:18,586 --> 0:19:20,146
我的同事 Willem

638
00:19:20,146 --> 0:19:21,326
他将为你演示

639
00:19:21,326 --> 0:19:24,976
如何在 Xcode 中使用捷径 Willem

640
00:19:25,516 --> 0:19:34,126
[ 掌声 ]

641
00:19:34,626 --> 0:19:35,266
&gt;&gt; 谢谢 Ari

642
00:19:36,486 --> 0:19:38,976
我很兴奋能够成为演示

643
00:19:38,976 --> 0:19:42,056
如何使用捷径的第一个人

644
00:19:42,756 --> 0:19:45,606
在我们深入 Xcode 之前 

645
00:19:45,606 --> 0:19:46,536
先让我向大家展示一下

646
00:19:46,536 --> 0:19:47,066
我们一直在研发的一款 App 

647
00:19:47,486 --> 0:19:48,786
正如 Ari 提到的

648
00:19:48,786 --> 0:19:50,516
我们在研发一款名为《Soup Chef》的

649
00:19:50,516 --> 0:19:51,306
订汤的 App

650
00:19:51,486 --> 0:19:52,916
让我来向你们展示一下

651
00:19:59,356 --> 0:20:01,176
这就是《Soup Chef》

652
00:19:59,356 --> 0:20:01,176
这就是《Soup Chef》

653
00:20:01,676 --> 0:20:02,956
当我启动这个 App 时

654
00:20:02,956 --> 0:20:04,646
这里会展示我的订单记录

655
00:20:05,106 --> 0:20:06,216
因为我还没有订过任何东西

656
00:20:06,216 --> 0:20:07,536
所以这里还是空的

657
00:20:08,106 --> 0:20:09,516
我可以通过点击加号

658
00:20:09,516 --> 0:20:10,506
来发出一个新的订单

659
00:20:11,346 --> 0:20:12,696
这为我展示了汤品的菜单

660
00:20:12,696 --> 0:20:13,726
在这里你可以看到

661
00:20:13,726 --> 0:20:15,016
我能点的所有汤品

662
00:20:15,516 --> 0:20:18,056
我们来点一个番茄汤

663
00:20:18,436 --> 0:20:21,336
接下来 我可以选择

664
00:20:21,336 --> 0:20:22,506
汤的数量和加料的种类

665
00:20:22,866 --> 0:20:24,586
我要点一个有红辣椒的番茄汤

666
00:20:24,886 --> 0:20:26,816
当我准备好下单时

667
00:20:26,816 --> 0:20:28,446
我就轻点一下

668
00:20:28,496 --> 0:20:29,056
“Place Order（下单）”按钮

669
00:20:30,306 --> 0:20:31,666
现在回到 “Order History（历史订单）”

670
00:20:31,666 --> 0:20:32,586
你就能看到我刚刚下的

671
00:20:32,586 --> 0:20:33,706
那个订单了

672
00:20:34,246 --> 0:20:36,316
我可以轻点订单去看

673
00:20:36,316 --> 0:20:37,846
关于一个特定的订单的更多细节

674
00:20:38,726 --> 0:20:40,776
这一视图与 userActivity 相关联

675
00:20:41,036 --> 0:20:43,576
我认为将这个建议给用户

676
00:20:43,876 --> 0:20:45,196
是非常好的

677
00:20:45,496 --> 0:20:46,586
因为我们的用户喜欢

678
00:20:46,586 --> 0:20:47,976
回味他们曾经点过的

679
00:20:47,976 --> 0:20:49,166
美味的汤

680
00:20:49,166 --> 0:20:50,066
[ 笑声 ]

681
00:20:50,066 --> 0:20:52,206
如果能把这些建议给她们

682
00:20:52,206 --> 0:20:53,206
那将非常棒

683
00:20:53,726 --> 0:20:54,866
让我们去 Xcode 看看

684
00:20:54,866 --> 0:20:57,346
如何实现这个设想

685
00:20:58,276 --> 0:20:59,596
现在我在观看

686
00:20:59,596 --> 0:21:01,016
订单细节视图的

687
00:20:59,596 --> 0:21:01,016
订单细节视图的

688
00:21:01,016 --> 0:21:01,626
viewController

689
00:21:02,776 --> 0:21:04,766
我创建了一个 userActivity

690
00:21:04,926 --> 0:21:06,026
同时我也设定了一个

691
00:21:06,026 --> 0:21:07,306
requiredUserInfoKeys

692
00:21:07,896 --> 0:21:08,966
我还要确保

693
00:21:08,966 --> 0:21:09,986
isEligibleForSearch 为真

694
00:21:11,316 --> 0:21:14,996
为了它能够被建议

695
00:21:14,996 --> 0:21:16,146
我还需要让

696
00:21:16,146 --> 0:21:16,726
isEligibleForPrediction 为真

697
00:21:22,216 --> 0:21:24,346
这样就行了 我们来试一下

698
00:21:34,226 --> 0:21:35,236
首先我需要保证我

699
00:21:35,236 --> 0:21:36,766
递交了 userActivity

700
00:21:36,766 --> 0:21:39,656
我现在返回视图

701
00:21:39,656 --> 0:21:40,456
这样就够了

702
00:21:40,976 --> 0:21:42,366
现在我想确保 Donation

703
00:21:42,366 --> 0:21:43,696
已经发生了

704
00:21:43,836 --> 0:21:45,476
为了确认 我们增加

705
00:21:45,476 --> 0:21:47,116
两项开发者设置

706
00:21:47,116 --> 0:21:48,916
能让它在搜索界面和

707
00:21:48,916 --> 0:21:50,726
锁定屏幕上很容易地看到

708
00:21:50,726 --> 0:21:51,296
最近的 Donation

709
00:21:51,826 --> 0:21:53,426
为了启用这个

710
00:21:54,126 --> 0:21:55,216
我们来到“设置”

711
00:21:55,216 --> 0:21:56,096
滑动到“开发者”这一栏

712
00:21:57,166 --> 0:21:59,136
在最底端有两个新的开关

713
00:21:59,136 --> 0:22:00,776
展示最近的捷径

714
00:21:59,136 --> 0:22:00,776
展示最近的捷径

715
00:22:00,776 --> 0:22:03,386
和在锁定屏幕上展示 Donation

716
00:22:03,656 --> 0:22:04,386
我们打开两个开关

717
00:22:06,166 --> 0:22:08,236
现在我们可以回到主页面

718
00:22:08,236 --> 0:22:09,906
下滑到搜索栏进行搜索

719
00:22:09,906 --> 0:22:11,416
我们可以看到

720
00:22:11,416 --> 0:22:13,656
刚刚完成的 Donation 很好

721
00:22:14,516 --> 0:22:18,626
[ 掌声 ]

722
00:22:19,126 --> 0:22:20,496
我可以轻点它 然后 App

723
00:22:20,496 --> 0:22:21,556
就与 userActivity 一起启动了

724
00:22:21,556 --> 0:22:23,046
并且回到了我刚刚递交的

725
00:22:23,046 --> 0:22:24,856
订单页面

726
00:22:25,586 --> 0:22:28,846
很好 这样很赞

727
00:22:29,216 --> 0:22:30,826
但是我认为我们还能做得更好

728
00:22:31,316 --> 0:22:33,326
因为我们 App 的主要功能

729
00:22:33,326 --> 0:22:34,856
就是订汤

730
00:22:34,856 --> 0:22:35,846
如果它能够把订汤建议给用户

731
00:22:35,846 --> 0:22:37,556
那真是再好不过了

732
00:22:38,016 --> 0:22:39,426
我希望用户可以

733
00:22:39,426 --> 0:22:40,776
不用启动我们的 App

734
00:22:40,826 --> 0:22:41,086
就能达到这个效果

735
00:22:41,626 --> 0:22:43,756
我会使用一个 Intent 来实现

736
00:22:44,506 --> 0:22:47,536
现在还没有内置的订单 Intent

737
00:22:47,536 --> 0:22:51,196
但是在 iOS 12 中

738
00:22:51,296 --> 0:22:53,116
我可以创建一个自定 Intent

739
00:22:53,116 --> 0:22:54,026
我们来试试

740
00:22:55,826 --> 0:22:58,076
首先我们要创建一个

741
00:22:58,076 --> 0:22:59,896
Intent 的定义文件

742
00:22:59,896 --> 0:23:01,606
先选择 “File(文件)”

743
00:22:59,896 --> 0:23:01,606
先选择 “File(文件)”

744
00:23:02,396 --> 0:23:05,986
然后进入 “New（新建）”-“File...”

745
00:23:05,986 --> 0:23:06,946
选择 “SiriKit Definition File"

746
00:23:08,226 --> 0:23:08,826
然后 “Next（继续）”

747
00:23:09,856 --> 0:23:10,806
现在我可以为它命名

748
00:23:10,806 --> 0:23:12,106
我会保留 “Intents” 这个名字

749
00:23:12,356 --> 0:23:14,116
然后放在 “Resources（资源）”文件夹里

750
00:23:14,166 --> 0:23:15,186
好了 现在我准备好了

751
00:23:15,186 --> 0:23:19,026
点按 “Create（创建）” 这里展示的就是

752
00:23:19,026 --> 0:23:20,206
我们的 Intents 定义文件

753
00:23:20,206 --> 0:23:21,046
以及我们的全新 Intents 编辑器

754
00:23:21,886 --> 0:23:23,106
在我添加 Intent 之前

755
00:23:23,106 --> 0:23:24,456
我需要确保

756
00:23:24,456 --> 0:23:25,526
在正确的 Targets 内

757
00:23:25,526 --> 0:23:26,186
包含 Intents 定义文件

758
00:23:26,526 --> 0:23:28,456
正如 Ari 所说 我们需要

759
00:23:28,456 --> 0:23:30,486
在使用 Intent 的所有地方添加 Target

760
00:23:31,096 --> 0:23:32,976
所以我要把它添加在

761
00:23:32,976 --> 0:23:34,926
我们的共享框架中

762
00:23:34,926 --> 0:23:35,896
因为我们使用的是共享框架

763
00:23:35,896 --> 0:23:38,196
我不想让它为 App Target 生成

764
00:23:38,756 --> 0:23:40,996
在下拉菜单中

765
00:23:40,996 --> 0:23:42,476
在 App Target 旁边

766
00:23:42,476 --> 0:23:43,436
我会选择 “No Generated Classes

767
00:23:45,016 --> 0:23:46,016
（无生成类）” 好了

768
00:23:46,016 --> 0:23:47,096
我们可以添加 Intent 了

769
00:23:47,506 --> 0:23:49,766
在左下角点击加号

770
00:23:49,766 --> 0:23:52,186
同时选择

771
00:23:52,186 --> 0:23:52,776
“New Intent（新建 Intent）”

772
00:23:53,646 --> 0:23:55,986
将其命名为 “OrderSoup”

773
00:23:58,556 --> 0:24:00,726
接下来我要选择类别

774
00:23:58,556 --> 0:24:00,726
接下来我要选择类别

775
00:24:01,006 --> 0:24:02,376
在这个例子中

776
00:24:02,426 --> 0:24:02,766
这是一个 “Order”Intent

777
00:24:03,266 --> 0:24:05,946
填写标题 “Order Soup”

778
00:24:06,486 --> 0:24:08,606
然后是描述

779
00:24:08,786 --> 0:24:10,966
“在 Soup Chef 点一碗汤”

780
00:24:12,236 --> 0:24:13,966
因为这涉及到真实世界的交易

781
00:24:13,966 --> 0:24:15,746
我想在提交

782
00:24:15,746 --> 0:24:17,086
订单前确认一下

783
00:24:17,086 --> 0:24:18,906
所以我会选择

784
00:24:18,906 --> 0:24:20,056
要求用户确认

785
00:24:21,546 --> 0:24:23,366
接下来让我们定义参数

786
00:24:23,776 --> 0:24:25,256
我将定义三个参数

787
00:24:25,256 --> 0:24:27,576
一个针对汤

788
00:24:28,266 --> 0:24:30,016
一个针对数量

789
00:24:30,016 --> 0:24:31,566
还有一个针对用户选择的加料选项

790
00:24:32,056 --> 0:24:35,106
首先是汤 我点击 “Parameter” 部分的加号

791
00:24:35,106 --> 0:24:37,066
然后填写名字

792
00:24:37,296 --> 0:24:38,396
“soup（汤）”

793
00:24:39,186 --> 0:24:41,246
因为汤是我们 App 中的定制对象

794
00:24:41,246 --> 0:24:43,406
我将会选择

795
00:24:44,046 --> 0:24:45,176
“Custom（自定义）”类型

796
00:24:45,726 --> 0:24:47,666
接下来 我要添加 “quantity（数量）”

797
00:24:47,966 --> 0:24:49,566
我再次点击加号 填写名字

798
00:24:49,566 --> 0:24:51,696
这次将是一个

799
00:24:51,746 --> 0:24:52,256
“Interger（整数）”类型

800
00:24:54,346 --> 0:24:56,486
接下来是 “options（选项）”

801
00:24:57,646 --> 0:24:58,756
选项是我们的 App 的自定对象

802
00:24:58,756 --> 0:25:00,836
所以我会使用 “Custom” 类型

803
00:24:58,756 --> 0:25:00,836
所以我会使用 “Custom” 类型

804
00:25:01,846 --> 0:25:03,306
因为用户可以选择

805
00:25:03,306 --> 0:25:04,866
多个选项 我还会选中

806
00:25:04,906 --> 0:25:06,676
“Array（数组）”复选框

807
00:25:07,876 --> 0:25:11,856
最后 我们需要定义捷径类型

808
00:25:11,856 --> 0:25:13,736
此时 我将定义一个

809
00:25:13,736 --> 0:25:17,646
包含了所有参数的单一的捷径类型

810
00:25:18,516 --> 0:25:19,816
我会在“捷径类型” 中

811
00:25:19,816 --> 0:25:22,226
点击加号

812
00:25:22,456 --> 0:25:23,506
然后选择我想要包含在

813
00:25:23,506 --> 0:25:25,236
捷径类型中的参数

814
00:25:25,236 --> 0:25:27,456
这样我就能选择汤数量选项了

815
00:25:27,816 --> 0:25:29,076
当我准备好时 点按“添加

816
00:25:29,076 --> 0:25:30,136
捷径 类型”按钮

817
00:25:31,176 --> 0:25:33,586
填写标题订单

818
00:25:33,586 --> 0:25:35,486
然后再插入 “quantity”

819
00:25:35,576 --> 0:25:39,506
以及 “soup” 和 “options”

820
00:25:39,846 --> 0:25:44,186
然后我把副标题留白

821
00:25:44,186 --> 0:25:45,116
因为在标题中

822
00:25:45,116 --> 0:25:46,726
我已经包含了需要的所有信息

823
00:25:46,896 --> 0:25:49,116
我还会选中 “Supports background 

824
00:25:49,116 --> 0:25:50,396
execution（支持后台执行）”

825
00:25:51,266 --> 0:25:52,416
因为我想让用户在后台

826
00:25:52,416 --> 0:25:56,606
执行这个 Intent

827
00:25:56,606 --> 0:25:58,736
我们已经定义了我们第一个 Intent

828
00:25:59,286 --> 0:26:00,116
现在让我们来试试

829
00:25:59,286 --> 0:26:00,116
现在让我们来试试

830
00:26:00,676 --> 0:26:03,016
首先我会为我们的 Order 对象

831
00:26:03,016 --> 0:26:05,426
增加两个辅助方法

832
00:26:05,556 --> 0:26:06,596
让它能更简单地

833
00:26:06,596 --> 0:26:08,016
在它和 Intent 之间转换

834
00:26:08,916 --> 0:26:11,566
我现在来到 Order 类

835
00:26:11,606 --> 0:26:15,536
在最底端 我会增加一个 Order 扩展

836
00:26:16,026 --> 0:26:20,146
它包含一个

837
00:26:20,146 --> 0:26:22,196
可以返回 Intent 的系统变量

838
00:26:22,196 --> 0:26:23,546
我在这里创建 Intent

839
00:26:23,886 --> 0:26:26,266
设定汤的数量和

840
00:26:26,266 --> 0:26:27,926
选项 然后返回到 orderSoupIntent

841
00:26:28,966 --> 0:26:30,316
扩展同样也定义了

842
00:26:30,316 --> 0:26:31,466
一个新的源于 Intent 的

843
00:26:31,466 --> 0:26:31,846
初始化程序

844
00:26:32,556 --> 0:26:34,316
在这里 我抽取汤

845
00:26:34,636 --> 0:26:36,996
数量 和选项

846
00:26:37,046 --> 0:26:38,786
然后我用这些数值

847
00:26:38,956 --> 0:26:40,096
初始化订单

848
00:26:41,056 --> 0:26:42,556
很好 这会非常有用

849
00:26:43,926 --> 0:26:45,256
接下来 我需要确保

850
00:26:45,256 --> 0:26:46,996
每次用户下订单的时候

851
00:26:46,996 --> 0:26:48,156
我们都递交了 Intent

852
00:26:48,726 --> 0:26:50,296
所以我来到订汤的

853
00:26:50,296 --> 0:26:53,026
数据管理器

854
00:26:53,026 --> 0:26:54,656
在 placeOrder() 方法中 我会添加

855
00:26:54,656 --> 0:26:55,436
我们的 Donation 逻辑

856
00:26:57,486 --> 0:26:59,716
我声明了一个 INInteraction

857
00:26:59,716 --> 0:27:01,266
它包含了订单的 Intent

858
00:26:59,716 --> 0:27:01,266
它包含了订单的 Intent

859
00:27:01,266 --> 0:27:03,126
然后递交

860
00:27:03,126 --> 0:27:06,066
interaction 就好了

861
00:27:07,336 --> 0:27:09,036
最后 我们需要处理 Intent

862
00:27:09,366 --> 0:27:11,056
首先我需要在 App 中

863
00:27:11,056 --> 0:27:13,196
增加支持

864
00:27:13,196 --> 0:27:15,196
我们打开 AppDelegat.swift

865
00:27:15,196 --> 0:27:17,086
在 continueUserActivity 中

866
00:27:17,086 --> 0:27:17,686
我会为其增加支持

867
00:27:18,236 --> 0:27:22,086
我想要确认 userActivity 的

868
00:27:22,616 --> 0:27:24,396
activityType 是否与我想

869
00:27:24,396 --> 0:27:26,786
处理的 Intent 的类名称一致

870
00:27:27,216 --> 0:27:29,196
如果一致

871
00:27:29,196 --> 0:27:30,196
我会从 userActivity 中提取

872
00:27:30,196 --> 0:27:32,226
Intent 同时生成

873
00:27:32,226 --> 0:27:32,886
一个 Intent

874
00:27:33,346 --> 0:27:35,276
最后 我会展示订单视图

875
00:27:35,686 --> 0:27:37,426
既然我们打开了 App

876
00:27:37,426 --> 0:27:38,966
我假设用户并不想

877
00:27:38,966 --> 0:27:39,776
立刻下订单

878
00:27:39,776 --> 0:27:41,096
而是想在下订单之前

879
00:27:41,096 --> 0:27:42,746
做一些定制

880
00:27:42,746 --> 0:27:46,036
这就是我展示订单视图的原因

881
00:27:46,846 --> 0:27:50,276
最后 让我们增加对

882
00:27:50,456 --> 0:27:52,556
Intent 扩展的支持

883
00:27:52,556 --> 0:27:54,106
这样用户就可以在后台

884
00:27:54,106 --> 0:27:54,646
运行 Intent 了

885
00:27:55,506 --> 0:27:56,776
首先我需要增加一个

886
00:27:56,776 --> 0:27:58,216
Intent 扩展

887
00:27:58,216 --> 0:28:02,966
选择 “File”-“New”“-Target”

888
00:27:58,216 --> 0:28:02,966
选择 “File”-“New”“-Target”

889
00:28:02,966 --> 0:28:04,446
然后选择 “Intents Extention

890
00:28:05,676 --> 0:28:06,496
（Intents 扩展）” 我要为它起个名字

891
00:28:06,656 --> 0:28:10,286
SoupChefIntents 然后点按 “Finish（完成）”

892
00:28:11,256 --> 0:28:14,956
因为我增加了一个我可以使用

893
00:28:14,956 --> 0:28:17,316
Intent 的新 Target

894
00:28:17,316 --> 0:28:18,166
我需要确保

895
00:28:18,166 --> 0:28:19,316
Intent 定义文件

896
00:28:19,316 --> 0:28:20,386
被包含在 Target 中

897
00:28:20,746 --> 0:28:21,906
回到 Intent 定义文件

898
00:28:21,906 --> 0:28:25,156
然后将其增加到 Target 中

899
00:28:25,716 --> 0:28:27,196
我还是不想在 Target 中

900
00:28:27,196 --> 0:28:28,226
生成代码

901
00:28:28,226 --> 0:28:29,656
在下拉菜单中 我选择

902
00:28:29,656 --> 0:28:33,726
“No Generated Classes”

903
00:28:34,616 --> 0:28:36,976
我还希望扩展 Target 能

904
00:28:36,976 --> 0:28:38,406
接入 App 的相同数据

905
00:28:38,406 --> 0:28:40,066
所以我会将其增加到

906
00:28:40,066 --> 0:28:40,766
相同的 App 群组

907
00:28:41,646 --> 0:28:43,316
在项目设定中

908
00:28:43,316 --> 0:28:47,276
我选择 Intents Target

909
00:28:47,546 --> 0:28:49,146
在 “Capability” 页中 我会将其添加到

910
00:28:49,316 --> 0:28:52,286
相同的 App 群组

911
00:28:52,486 --> 0:28:53,886
很好 现在我们就可以

912
00:28:53,886 --> 0:28:55,226
执行与这个 Target

913
00:28:55,346 --> 0:28:56,916
相匹配的 IntentHandler 了

914
00:28:59,886 --> 0:29:01,626
首先 我要引入我们共享的

915
00:28:59,886 --> 0:29:01,626
首先 我要引入我们共享的

916
00:29:01,626 --> 0:29:02,866
框架 SoupKit [ 笑声 ]

917
00:29:03,956 --> 0:29:08,316
因为我们将处理

918
00:29:08,316 --> 0:29:10,086
OrderSoupIntent

919
00:29:10,086 --> 0:29:11,766
这个 IntentHandler 需要

920
00:29:11,766 --> 0:29:13,606
与 OrderSoupIntentHandling 协议相一致

921
00:29:15,136 --> 0:29:19,356
它是作为我们 Intent 的一部分生成的

922
00:29:21,276 --> 0:29:23,466
这个协议有一个必要的方法

923
00:29:23,466 --> 0:29:25,826
也就是 handle() 方法

924
00:29:25,826 --> 0:29:28,226
让我们实现它

925
00:29:28,876 --> 0:29:31,456
在 handle() 方法中

926
00:29:31,456 --> 0:29:31,926
我得到了一个 Intent

927
00:29:32,746 --> 0:29:33,926
我通过那个 Intent 创造了一个订单

928
00:29:33,926 --> 0:29:36,186
如果成功了

929
00:29:36,186 --> 0:29:38,226
我就下了订单

930
00:29:38,226 --> 0:29:39,416
我就会调用 completion()

931
00:29:39,416 --> 0:29:40,916
其中会有 Intent 的响应码 “.success”

932
00:29:41,706 --> 0:29:43,186
如果我不能从 Intent 中

933
00:29:43,416 --> 0:29:45,016
创造一个订单

934
00:29:45,016 --> 0:29:46,096
我也会调用 completion()

935
00:29:46,096 --> 0:29:47,326
但是其中的 Intent 响应码会变成 “.failure”

936
00:29:47,816 --> 0:29:49,566
就是这样

937
00:29:49,566 --> 0:29:50,946
我刚刚在我的 App 里

938
00:29:50,946 --> 0:29:53,016
为一个新 Intent 添加了支持

939
00:29:53,016 --> 0:29:53,686
让我们尝试一下

940
00:30:04,736 --> 0:30:06,786
首先 我需要递交 Intent

941
00:30:06,856 --> 0:30:08,006
我会下另一个订单

942
00:30:08,566 --> 0:30:10,276
点击加号

943
00:30:10,276 --> 0:30:11,726
这次我要订一个有面包丁的

944
00:30:11,726 --> 0:30:16,896
蛤蜊浓汤 我要下单了

945
00:30:17,996 --> 0:30:19,136
现在 如果我重新回到主屏幕并下滑

946
00:30:19,136 --> 0:30:22,786
我可以看到我递交的 Intent 很好

947
00:30:23,516 --> 0:30:28,196
[ 掌声 ]

948
00:30:28,696 --> 0:30:30,826
我可以点击它

949
00:30:30,826 --> 0:30:32,216
现在展示的是一个捷径视图

950
00:30:32,246 --> 0:30:32,886
以及 “Order（点餐）”按钮

951
00:30:33,266 --> 0:30:34,606
如果我点击它

952
00:30:34,606 --> 0:30:35,646
就会直接在后台下单

953
00:30:35,646 --> 0:30:38,096
这样订单就完成了

954
00:30:38,926 --> 0:30:40,346
我可以回到 App

955
00:30:40,346 --> 0:30:42,106
看看它是否预订上了

956
00:30:42,106 --> 0:30:43,796
是的 在我的 App 里有一个新订单

957
00:30:44,086 --> 0:30:44,976
很好 很简单

958
00:30:45,516 --> 0:30:53,686
[ 掌声 ]

959
00:30:54,186 --> 0:30:55,726
除了轻点“点餐”按钮

960
00:30:55,726 --> 0:30:57,156
我还可以点击

961
00:30:57,156 --> 0:30:58,856
捷径视图本身

962
00:30:58,856 --> 0:31:00,646
这将会通过捷径启动 App

963
00:30:58,856 --> 0:31:00,646
这将会通过捷径启动 App

964
00:31:00,646 --> 0:31:02,586
由于我实现的方法

965
00:31:02,586 --> 0:31:03,686
它将会展示订单视图

966
00:31:03,896 --> 0:31:05,176
这里我可以自定义订单

967
00:31:05,266 --> 0:31:07,576
我还可以加上奶酪 谁知道呢

968
00:31:08,236 --> 0:31:09,496
我要下单了

969
00:31:11,126 --> 0:31:14,396
很好 最后 让我们给 Siri

970
00:31:14,396 --> 0:31:15,516
加上捷径

971
00:31:16,996 --> 0:31:19,156
我们来到设置

972
00:31:19,156 --> 0:31:21,316
向上滑到 “Siri 与搜索” 搜索

973
00:31:22,206 --> 0:31:24,796
这里我可以选择我想要添加到 Siri 的捷径

974
00:31:25,366 --> 0:31:26,856
在这个例子中 我要添加

975
00:31:26,856 --> 0:31:28,636
预定一份带面包丁的蛤蜊浓汤

976
00:31:30,206 --> 0:31:31,456
当我选择录音按钮时

977
00:31:31,456 --> 0:31:32,626
我可以说出我想与这个捷径

978
00:31:32,626 --> 0:31:35,026
相关联的短语

979
00:31:35,456 --> 0:31:36,286
“Soup time（喝汤时间）”

980
00:31:37,446 --> 0:31:38,876
这样就好了

981
00:31:39,516 --> 0:31:45,500
[ 掌声 ]

982
00:31:48,636 --> 0:31:50,296
让我们回顾一下

983
00:31:50,296 --> 0:31:51,516
我们刚刚所做的

984
00:31:51,946 --> 0:31:53,126
我们首先让一个

985
00:31:53,126 --> 0:31:54,856
已经在我们 App 中实现的

986
00:31:54,856 --> 0:31:56,536
NSUserActivity 中的

987
00:31:56,536 --> 0:31:57,226
isEligibleForPrediction 为真

988
00:31:57,886 --> 0:31:59,256
这让其可以被建议

989
00:31:59,376 --> 0:32:00,706
同时也是一个接通你 App 内容的

990
00:31:59,376 --> 0:32:00,706
同时也是一个接通你 App 内容的

991
00:32:00,706 --> 0:32:03,076
简单的方法

992
00:32:04,306 --> 0:32:06,396
接下来 我们定义一个自定 Intent

993
00:32:07,026 --> 0:32:08,806
这真的是展示

994
00:32:08,806 --> 0:32:09,786
你的 App 的核心功能的

995
00:32:09,786 --> 0:32:11,236
最好方法

996
00:32:11,866 --> 0:32:13,536
在这个例子中 就是点一碗汤

997
00:32:13,986 --> 0:32:16,046
定义好 Intent 之后

998
00:32:16,046 --> 0:32:17,136
我们要确保每次用户在

999
00:32:17,136 --> 0:32:18,626
App 内下单时

1000
00:32:18,716 --> 0:32:20,196
我们都递交了 Intent

1001
00:32:20,196 --> 0:32:23,176
最后 我们处理 Intent

1002
00:32:23,176 --> 0:32:25,196
不仅是在支持后台运行的

1003
00:32:25,196 --> 0:32:27,266
扩展 Target 中的

1004
00:32:27,266 --> 0:32:29,156
还有在 App 内的

1005
00:32:29,156 --> 0:32:31,426
这样用户就可以

1006
00:32:32,176 --> 0:32:32,426
通过捷径 启动 App

1007
00:32:34,066 --> 0:32:35,766
现在我们看了如何

1008
00:32:35,766 --> 0:32:37,786
采用捷径

1009
00:32:37,786 --> 0:32:39,666
接下来我们看看这些捷径 是如何

1010
00:32:39,666 --> 0:32:41,176
被建议的以及你可以做些什么

1011
00:32:41,176 --> 0:32:42,866
让你的用户看到

1012
00:32:42,866 --> 0:32:44,506
可能的最佳建议

1013
00:32:45,096 --> 0:32:48,366
每次当一个用户在你的 App 内

1014
00:32:48,366 --> 0:32:50,526
完成一个动作并且

1015
00:32:50,526 --> 0:32:53,036
你的 App 递交了这个动作

1016
00:32:53,036 --> 0:32:56,726
在这个例子中 就是和其他信息

1017
00:32:58,106 --> 0:32:59,906
对于时间 我们认为

1018
00:32:59,906 --> 0:33:01,396
应该记录一天中的时间

1019
00:32:59,906 --> 0:33:01,396
应该记录一天中的时间

1020
00:33:01,736 --> 0:33:02,656
或一周中的一天

1021
00:33:03,256 --> 0:33:04,946
至于位置

1022
00:33:04,946 --> 0:33:06,216
我们会看看用户的

1023
00:33:06,216 --> 0:33:07,286
整体位置 然后确定

1024
00:33:07,286 --> 0:33:09,046
这是否对于用户来说是一个重要的位置

1025
00:33:09,646 --> 0:33:12,776
接下来看看系统如何

1026
00:33:12,776 --> 0:33:14,566
利用这些来做出建议

1027
00:33:16,016 --> 0:33:18,526
在这里 我们只考虑时间

1028
00:33:19,216 --> 0:33:20,786
周一 午饭时间 我预定了一份

1029
00:33:20,786 --> 0:33:22,506
加面包丁的番茄汤

1030
00:33:23,766 --> 0:33:25,106
晚上的时候我不喜欢面包丁

1031
00:33:25,106 --> 0:33:26,516
所以我预定了一份

1032
00:33:26,566 --> 0:33:27,516
加红辣椒的番茄汤

1033
00:33:27,516 --> 0:33:30,866
第二天的午饭 我再次

1034
00:33:30,866 --> 0:33:32,466
预定了加面包丁的番茄汤

1035
00:33:33,326 --> 0:33:34,686
我一整周都这样操作

1036
00:33:34,686 --> 0:33:36,966
在周五午饭的时候

1037
00:33:37,246 --> 0:33:38,926
Siri 可能会尝试给我建议

1038
00:33:39,806 --> 0:33:41,926
它会观察我过去的行为

1039
00:33:41,926 --> 0:33:43,286
尝试在里面找到规律

1040
00:33:43,806 --> 0:33:45,286
如果现在是午餐时间

1041
00:33:45,286 --> 0:33:46,546
由于我经常在中午预定

1042
00:33:46,666 --> 0:33:48,486
加面包丁的番茄汤

1043
00:33:48,566 --> 0:33:50,486
Siri 可能会注意到这点并向我建议

1044
00:33:50,486 --> 0:33:51,986
这样很好

1045
00:33:51,986 --> 0:33:53,096
这就是我想的

1046
00:33:54,546 --> 0:33:56,196
这些都是很高层级的东西

1047
00:33:56,196 --> 0:33:57,546
我们来看看

1048
00:33:57,546 --> 0:33:59,526
它是如何工作的

1049
00:33:59,706 --> 0:34:00,886
我们先从 NSUserActivity 开始

1050
00:33:59,706 --> 0:34:00,886
我们先从 NSUserActivity 开始

1051
00:34:01,196 --> 0:34:04,586
我们假设一个在《Soup Chef》中

1052
00:34:04,586 --> 0:34:06,346
下单界面的 userActivity

1053
00:34:06,676 --> 0:34:09,926
用户信息字典可能包含三个 Key

1054
00:34:10,255 --> 0:34:11,985
“soup” “quantity” 和 “scrollPosition

1055
00:34:12,485 --> 0:34:13,835
（滚动位置）” 由于最后一个的存在

1056
00:34:13,835 --> 0:34:15,036
在“接力”中 你可以将用户

1057
00:34:15,036 --> 0:34:17,146
带回到他最后所浏览的那个位置

1058
00:34:18,286 --> 0:34:20,246
我们看看这要怎么

1059
00:34:20,366 --> 0:34:22,156
建议给用户

1060
00:34:22,815 --> 0:34:25,916
首先我们递交一个

1061
00:34:25,916 --> 0:34:27,596
NSUserActivity

1062
00:34:27,596 --> 0:34:29,716
其中汤是 “tomato”

1063
00:34:29,716 --> 0:34:30,926
数量是 “1”

1064
00:34:30,926 --> 0:34:31,366
滚动位置是 “79.0”

1065
00:34:32,005 --> 0:34:34,076
接下来我们递交一个相似的

1066
00:34:34,076 --> 0:34:35,196
NSUserActivity

1067
00:34:35,196 --> 0:34:36,686
但是滚动位置

1068
00:34:36,686 --> 0:34:37,005
却变成了 “110.0”

1069
00:34:38,176 --> 0:34:40,335
我们继续操作 在某一时刻

1070
00:34:40,335 --> 0:34:42,376
Siri 可能会再次试着寻找一个建议

1071
00:34:42,976 --> 0:34:46,206
它会查看过去的行为

1072
00:34:46,206 --> 0:34:47,315
然后寻找相同的

1073
00:34:47,406 --> 0:34:48,556
NSUserActivity 的规律

1074
00:34:49,295 --> 0:34:52,985
由于滚动位置每次都不一致

1075
00:34:52,985 --> 0:34:54,806
它可能不会找到合适的建议

1076
00:34:56,346 --> 0:34:58,326
那我们要如何修复呢

1077
00:34:59,856 --> 0:35:00,966
我们可以使用

1078
00:34:59,856 --> 0:35:00,966
我们可以使用

1079
00:35:00,966 --> 0:35:02,366
requiredUserInfoKeys

1080
00:35:03,486 --> 0:35:05,046
requiredUserInfoKeys 是一种

1081
00:35:05,046 --> 0:35:07,236
NSUserActivity 的现有属性

1082
00:35:07,876 --> 0:35:11,066
它代表了为了复原 App 到

1083
00:35:11,066 --> 0:35:12,866
userActivity 展示的状态

1084
00:35:12,866 --> 0:35:14,336
所需的最少的信息数量

1085
00:35:14,336 --> 0:35:17,366
至于建议

1086
00:35:17,366 --> 0:35:19,216
它会被用来指定

1087
00:35:19,216 --> 0:35:21,026
用户信息字典中哪些关键信号

1088
00:35:21,026 --> 0:35:23,466
会在寻找规律时用来进行对比

1089
00:35:24,476 --> 0:35:25,856
让我们将其应用在

1090
00:35:25,856 --> 0:35:26,326
刚刚的例子中

1091
00:35:27,916 --> 0:35:29,166
现在我们可以注明

1092
00:35:29,166 --> 0:35:32,176
requiredUserInfoKeys 是汤和数量

1093
00:35:32,726 --> 0:35:34,076
我们再次递交

1094
00:35:34,076 --> 0:35:36,026
汤是 “tomato”

1095
00:35:36,026 --> 0:35:38,066
数量是 “1”

1096
00:35:38,066 --> 0:35:39,606
滚动位置是 “79.0” 的 userActivity

1097
00:35:39,856 --> 0:35:41,816
不过这次滚动位置将被忽略

1098
00:35:42,986 --> 0:35:43,946
接下来 我们递交一些

1099
00:35:43,946 --> 0:35:45,556
相似的东西 这些滚动位置

1100
00:35:45,556 --> 0:35:46,326
也被忽略了

1101
00:35:47,166 --> 0:35:49,546
我们一直重复 在某些时刻

1102
00:35:49,546 --> 0:35:51,656
Siri 会再次尝试推荐

1103
00:35:53,046 --> 0:35:54,546
现在 Siri 会回顾

1104
00:35:54,546 --> 0:35:56,196
然后试着为相似的 userActivity 寻找一个规律

1105
00:35:56,196 --> 0:35:57,226
因为不再考虑

1106
00:35:57,226 --> 0:35:59,166
滚动位置

1107
00:35:59,306 --> 0:36:01,616
她可能会想

1108
00:35:59,306 --> 0:36:01,616
她可能会想

1109
00:36:01,616 --> 0:36:03,736
“一个汤是 ‘tomato’ 数量是 ‘1’ 的

1110
00:36:03,986 --> 0:36:05,546
NSUserActivity 可能对这个用户来说

1111
00:36:05,546 --> 0:36:07,056
是一个不错的建议”

1112
00:36:08,096 --> 0:36:10,456
如你所见

1113
00:36:10,456 --> 0:36:11,796
根据需求标明

1114
00:36:11,846 --> 0:36:13,606
正确的关键元素很重要

1115
00:36:13,606 --> 0:36:14,946
否则你的用户可能

1116
00:36:14,946 --> 0:36:16,306
不能获得任何建议

1117
00:36:17,076 --> 0:36:18,696
这就是它如何与

1118
00:36:18,696 --> 0:36:19,476
userActivity 协作的

1119
00:36:20,826 --> 0:36:23,006
Intent 的工作原理与这个相似

1120
00:36:23,006 --> 0:36:24,416
但是却更加灵活

1121
00:36:25,386 --> 0:36:29,086
Intent 的主要信号是

1122
00:36:29,086 --> 0:36:30,456
你定义的捷径类型

1123
00:36:31,866 --> 0:36:33,766
每一种捷径类型

1124
00:36:33,766 --> 0:36:35,166
都定义了

1125
00:36:35,166 --> 0:36:36,306
对于建议来说有效的参数组合

1126
00:36:36,966 --> 0:36:39,036
这与 requiredUserInfoKey

1127
00:36:39,276 --> 0:36:40,556
有点相似

1128
00:36:40,556 --> 0:36:41,896
但是与其只有一个组相比

1129
00:36:42,076 --> 0:36:43,056
我们在这里可以定义多个

1130
00:36:43,666 --> 0:36:46,286
让我们在《Soup Chef》App 中

1131
00:36:46,286 --> 0:36:48,466
应用一下

1132
00:36:48,466 --> 0:36:49,526
早些时候 我通过三个参数

1133
00:36:49,526 --> 0:36:51,046
即 “soup” “quantity” 和 “options”

1134
00:36:51,046 --> 0:36:53,676
定义了一个 OrderSoupIntent

1135
00:36:54,026 --> 0:36:55,566
当时 我只定义了

1136
00:36:55,566 --> 0:36:57,426
一个包含所有这些参数的单一的捷径类型

1137
00:36:57,466 --> 0:36:59,536
但是 理想地说

1138
00:36:59,536 --> 0:37:00,906
你可以定义更多捷径类型

1139
00:36:59,536 --> 0:37:00,906
你可以定义更多捷径类型

1140
00:37:00,906 --> 0:37:01,876
因为这能为系统

1141
00:37:01,876 --> 0:37:04,776
寻找用户行为的规律提供了更多选择

1142
00:37:05,596 --> 0:37:07,066
现在我要定义三个

1143
00:37:08,136 --> 0:37:09,456
一个捷径类型结合了

1144
00:37:09,456 --> 0:37:10,966
“soup” 和 “quantity”

1145
00:37:10,966 --> 0:37:12,666
一个结合了 “soup” 和 “options”

1146
00:37:12,666 --> 0:37:14,596
还有一个结合了三个参数

1147
00:37:15,786 --> 0:37:17,806
让我们在另一个例子中看一看

1148
00:37:19,426 --> 0:37:21,586
我再次从周一开始

1149
00:37:21,586 --> 0:37:23,136
在午餐时间

1150
00:37:23,326 --> 0:37:23,926
点一个加面包丁的番茄汤

1151
00:37:24,846 --> 0:37:26,796
《Soup Chef》将这个递交给系统

1152
00:37:26,846 --> 0:37:28,836
然后系统将会

1153
00:37:28,836 --> 0:37:29,966
根据我刚刚定义的

1154
00:37:29,966 --> 0:37:31,556
捷径类型

1155
00:37:31,556 --> 0:37:33,806
将把它分成

1156
00:37:34,576 --> 0:37:35,396
所有可能的组合

1157
00:37:35,396 --> 0:37:36,926
当天晚上 我点了一份

1158
00:37:36,926 --> 0:37:37,866
加红辣椒的番茄汤

1159
00:37:38,636 --> 0:37:40,696
它再次被递交 

1160
00:37:40,696 --> 0:37:41,866
也被分解成所有

1161
00:37:41,866 --> 0:37:42,746
有可能的组合

1162
00:37:44,166 --> 0:37:45,376
第二天的午饭 我点了一份

1163
00:37:45,376 --> 0:37:46,786
加面包丁的番茄汤

1164
00:37:46,786 --> 0:37:48,456
它被递交并分解

1165
00:37:48,456 --> 0:37:50,876
我整周都重复这个操作

1166
00:37:50,876 --> 0:37:52,406
在周五的午餐时间

1167
00:37:52,626 --> 0:37:53,996
Siri 可能会尝试对我建议

1168
00:37:55,076 --> 0:37:56,616
它可能会看到

1169
00:37:56,616 --> 0:37:57,876
我经常点番茄汤

1170
00:37:59,106 --> 0:38:04,476
不过因为是午餐时间

1171
00:37:59,106 --> 0:38:04,476
不过因为是午餐时间

1172
00:38:04,476 --> 0:38:06,556
它也能看到在午餐时间

1173
00:38:06,556 --> 0:38:08,666
我通常会在番茄汤里加面包丁

1174
00:38:09,726 --> 0:38:11,516
这是一个更具体的捷径

1175
00:38:11,516 --> 0:38:12,856
它最后会

1176
00:38:12,856 --> 0:38:14,746
这样建议

1177
00:38:14,746 --> 0:38:16,236
所以我可能会被建议

1178
00:38:16,236 --> 0:38:18,166
点一份加面包丁的番茄汤

1179
00:38:18,466 --> 0:38:21,516
很好 这就是如何

1180
00:38:21,516 --> 0:38:22,456
完成建议

1181
00:38:23,296 --> 0:38:24,716
现在让我们看看

1182
00:38:24,826 --> 0:38:27,716
如何确保这些推荐是好的

1183
00:38:27,716 --> 0:38:29,266
首先需要做的是

1184
00:38:29,266 --> 0:38:30,836
有一个好的 Donation

1185
00:38:31,546 --> 0:38:34,656
一个好的 Donation

1186
00:38:34,656 --> 0:38:36,606
应该是一些很大概率重复的东西

1187
00:38:37,576 --> 0:38:39,276
对于 userActivity 来说

1188
00:38:39,276 --> 0:38:41,186
应该是一些用户经常查看的内容

1189
00:38:41,856 --> 0:38:43,156
或者对于 Intents 来说

1190
00:38:43,206 --> 0:38:45,316
应该是一些用户会规律做出的动作

1191
00:38:45,316 --> 0:38:48,936
你应该确保

1192
00:38:48,936 --> 0:38:50,436
你递交的载荷

1193
00:38:50,636 --> 0:38:51,966
与你所有的 Donation

1194
00:38:51,966 --> 0:38:53,536
都是相一致的 因为这是

1195
00:38:53,536 --> 0:38:55,506
系统在寻找规律时

1196
00:38:56,246 --> 0:38:58,196
对比的东西

1197
00:38:58,196 --> 0:38:59,906
一个好的 Donation 应该不仅包括

1198
00:38:59,906 --> 0:39:01,946
时间标记

1199
00:38:59,906 --> 0:39:01,946
时间标记

1200
00:39:01,946 --> 0:39:03,726
因为当这个 Donation 被推荐时

1201
00:39:03,726 --> 0:39:04,846
它可能不会再与

1202
00:39:04,846 --> 0:39:05,426
特定时间相关

1203
00:39:06,576 --> 0:39:08,976
比如说 一个展示

1204
00:39:08,976 --> 0:39:09,766
某个特定日期的会议的

1205
00:39:09,766 --> 0:39:11,396
捷径可能没那么有用

1206
00:39:11,396 --> 0:39:12,926
因为 如果你第二天

1207
00:39:12,926 --> 0:39:14,586
或者之后看到这个提醒

1208
00:39:14,586 --> 0:39:15,756
你可能对这个

1209
00:39:15,756 --> 0:39:16,976
特定的一天的会面

1210
00:39:16,976 --> 0:39:18,026
不再感兴趣了

1211
00:39:19,156 --> 0:39:20,716
一个有着相对时间的捷径

1212
00:39:20,716 --> 0:39:22,626
却更加有用

1213
00:39:23,236 --> 0:39:27,646
你应该确保

1214
00:39:27,646 --> 0:39:29,636
你为每一个用户行动

1215
00:39:29,636 --> 0:39:31,416
进行一次递交

1216
00:39:31,416 --> 0:39:33,036
即便那个用户行动包括

1217
00:39:33,036 --> 0:39:34,606
在你 App 内多次的行动

1218
00:39:35,236 --> 0:39:37,116
最后 为你的 Intent

1219
00:39:37,116 --> 0:39:39,216
选择正确的参数也是非常重要的

1220
00:39:39,646 --> 0:39:40,616
所以我们来看一下

1221
00:39:40,616 --> 0:39:42,376
两种可能的类型

1222
00:39:42,376 --> 0:39:42,836
首先是枚举

1223
00:39:43,556 --> 0:39:46,026
你可以在 Intent 旁边的

1224
00:39:46,026 --> 0:39:47,696
Intent 定义文件中

1225
00:39:47,696 --> 0:39:49,566
定义枚举

1226
00:39:49,566 --> 0:39:53,106
并将其作为你参数的类型

1227
00:39:53,596 --> 0:39:55,486
我们建议每当

1228
00:39:55,546 --> 0:39:56,596
参数的数值有界时

1229
00:39:56,596 --> 0:39:57,666
你都使用枚举

1230
00:39:58,296 --> 0:39:59,776
比如说 如果你想为

1231
00:39:59,776 --> 0:40:01,476
OrderSoupIntent 添加一个

1232
00:39:59,776 --> 0:40:01,476
OrderSoupIntent 添加一个

1233
00:40:01,476 --> 0:40:03,206
规格参数 那么将其

1234
00:40:03,206 --> 0:40:04,546
做成枚举可能会比较有意义

1235
00:40:04,546 --> 0:40:06,036
因为可能的规格一般是

1236
00:40:06,036 --> 0:40:07,986
小份 中份 大份

1237
00:40:09,916 --> 0:40:11,016
使用枚举可以为你的用户提供

1238
00:40:11,016 --> 0:40:12,956
更好的建议和

1239
00:40:12,956 --> 0:40:14,806
更清晰的标题和副标题

1240
00:40:15,646 --> 0:40:17,176
想要学习更多关于

1241
00:40:17,176 --> 0:40:18,716
如何用枚举生成标题和

1242
00:40:18,716 --> 0:40:20,296
副标题的内容

1243
00:40:20,296 --> 0:40:21,706
我建议大家观看本地化讲座

1244
00:40:22,206 --> 0:40:25,076
另一个你可以使用的类型是

1245
00:40:25,076 --> 0:40:25,736
“Custom（自定）”类型

1246
00:40:27,116 --> 0:40:28,556
使用自定类型最终会

1247
00:40:28,556 --> 0:40:29,836
得到一个 INObject

1248
00:40:29,836 --> 0:40:31,116
并生成 Intent 代码

1249
00:40:32,156 --> 0:40:33,426
INObject 结合了

1250
00:40:33,426 --> 0:40:35,516
一个标识符和一个显示字符串

1251
00:40:36,336 --> 0:40:38,566
这个标识符可以用来

1252
00:40:38,566 --> 0:40:40,086
指代你的 App 中的

1253
00:40:40,086 --> 0:40:42,066
一个内部对象

1254
00:40:42,066 --> 0:40:43,126
显示字符串则包含

1255
00:40:43,126 --> 0:40:45,066
一个标识符和一个代表形式

1256
00:40:45,946 --> 0:40:47,516
这样你的用户和 App

1257
00:40:47,516 --> 0:40:49,306
都可以知道

1258
00:40:49,496 --> 0:40:50,856
这个参数的数值是多少

1259
00:40:52,196 --> 0:40:54,666
最后 使用一个 INObjec

1260
00:40:54,666 --> 0:40:56,096
也会防止参数之间

1261
00:40:56,096 --> 0:40:56,966
可能出现的依赖性

1262
00:40:57,676 --> 0:40:59,866
让我来示范一下

1263
00:41:00,206 --> 0:41:02,606
总共有两种办法来

1264
00:41:02,606 --> 0:41:04,296
代表拥有一个字符串的

1265
00:41:04,296 --> 0:41:06,306
标识符的融合

1266
00:41:06,346 --> 0:41:07,966
你可以为你的 Intent

1267
00:41:07,966 --> 0:41:09,156
增加两个参数

1268
00:41:09,156 --> 0:41:10,516
一个是给标识符

1269
00:41:10,516 --> 0:41:12,726
一个是给显示字符串

1270
00:41:12,726 --> 0:41:16,536
或者你还可以使用 INObject 来增加单个

1271
00:41:16,536 --> 0:41:17,586
如果用第一种方法

1272
00:41:17,586 --> 0:41:18,366
你会有一个依赖

1273
00:41:18,366 --> 0:41:19,716
因为显示字符串依赖于

1274
00:41:20,196 --> 0:41:21,936
被标识符引用的对象

1275
00:41:21,936 --> 0:41:24,456
我们不鼓励这类

1276
00:41:24,456 --> 0:41:25,696
依赖的产生

1277
00:41:25,696 --> 0:41:27,246
因为在我们之后建议 Intent 时

1278
00:41:27,246 --> 0:41:28,486
这些依赖可能会引发问题

1279
00:41:29,186 --> 0:41:34,106
一个好的捷径还应该

1280
00:41:34,106 --> 0:41:35,676
拥有一个可以理解的标题

1281
00:41:35,926 --> 0:41:37,376
副标题 还有图像

1282
00:41:38,056 --> 0:41:39,116
它应该展现当用户

1283
00:41:39,116 --> 0:41:40,306
点击捷径时会发生什么

1284
00:41:40,306 --> 0:41:42,236
因为这是用户在

1285
00:41:42,236 --> 0:41:43,376
与其互动前

1286
00:41:43,616 --> 0:41:44,666
看到的唯一的东西

1287
00:41:44,916 --> 0:41:46,716
当然了 你应该测试你的捷径

1288
00:41:46,716 --> 0:41:47,926
来保证它们

1289
00:41:47,926 --> 0:41:49,066
看起来是正确的

1290
00:41:49,066 --> 0:41:50,266
而且他们会像预期的

1291
00:41:51,056 --> 0:41:52,106
那样工作

1292
00:41:52,106 --> 0:41:52,316
有一些方法来做到这点

1293
00:41:52,426 --> 0:41:55,096
正如我早些时候展示给你的

1294
00:41:55,096 --> 0:41:56,396
我们增加了两个新的开发者设置

1295
00:41:56,526 --> 0:41:57,716
可以让你在搜索界面

1296
00:41:57,716 --> 0:41:59,406
和锁定屏幕上

1297
00:41:59,406 --> 0:42:00,746
看到你最近的 Donation

1298
00:41:59,406 --> 0:42:00,746
看到你最近的 Donation

1299
00:42:00,746 --> 0:42:02,116
而不是你常规的 Siri 推荐

1300
00:42:03,306 --> 0:42:04,636
打开这个你就可以看到

1301
00:42:04,636 --> 0:42:05,946
当这些 Donation 被建议时

1302
00:42:05,946 --> 0:42:06,796
你的用户会看到的东西

1303
00:42:06,796 --> 0:42:09,676
你可以试着与其互动

1304
00:42:09,676 --> 0:42:10,666
这样就能保证

1305
00:42:10,666 --> 0:42:11,076
它能按预期工作

1306
00:42:11,076 --> 0:42:13,856
另外一个测试你的

1307
00:42:14,306 --> 0:42:15,846
捷径的方法

1308
00:42:15,846 --> 0:42:16,316
就是将其添加到 Siri

1309
00:42:17,116 --> 0:42:18,556
一个测试它们的简单方法就是

1310
00:42:18,596 --> 0:42:20,406
通过编辑 Xcode Scheme

1311
00:42:20,406 --> 0:42:21,726
在不需要重复短语

1312
00:42:21,726 --> 0:42:23,356
的情况下

1313
00:42:23,356 --> 0:42:23,796
来自动唤醒 Siri

1314
00:42:25,796 --> 0:42:27,626
在 Intent 扩展的 Scheme 编辑器中

1315
00:42:27,626 --> 0:42:28,976
有一个 Siri Intent Query 栏

1316
00:42:28,976 --> 0:42:31,956
你可以用它来提供

1317
00:42:31,956 --> 0:42:32,856
唤醒 Siri 的语音

1318
00:42:33,166 --> 0:42:36,416
最后 你可以在捷径 App 中

1319
00:42:36,416 --> 0:42:38,206
创建一个自定捷径

1320
00:42:38,206 --> 0:42:39,546
来使用你的捷径

1321
00:42:41,306 --> 0:42:42,736
这允许你测试

1322
00:42:42,736 --> 0:42:44,116
当你的捷径与从捷径 App

1323
00:42:44,116 --> 0:42:45,186
中的其他捷径

1324
00:42:45,186 --> 0:42:46,906
或者步骤捆绑在一起的

1325
00:42:46,906 --> 0:42:48,306
你的捷径的表现

1326
00:42:49,296 --> 0:42:52,616
我们已经看到了

1327
00:42:52,616 --> 0:42:54,796
什么是好的 Donation

1328
00:42:54,896 --> 0:42:56,636
以及如何向用户建议这个 Donation

1329
00:42:57,356 --> 0:42:59,086
我们再来看看一些

1330
00:42:59,086 --> 0:43:00,086
关于隐私的考虑

1331
00:42:59,086 --> 0:43:00,086
关于隐私的考虑

1332
00:43:00,086 --> 0:43:01,776
以及如何确保

1333
00:43:01,776 --> 0:43:03,236
你的用户

1334
00:43:03,236 --> 0:43:04,966
不对给他们的建议感到失望

1335
00:43:08,046 --> 0:43:09,426
你的用户希望当他们

1336
00:43:09,426 --> 0:43:10,626
从你的 App 中删除一些东西时

1337
00:43:10,626 --> 0:43:12,286
这个删除是永久的

1338
00:43:12,946 --> 0:43:15,706
这一点很重要

1339
00:43:15,706 --> 0:43:17,066
这样你就可以获得你用户的信任

1340
00:43:17,146 --> 0:43:18,626
他们也不会

1341
00:43:18,626 --> 0:43:20,176
再收到与他们想要的

1342
00:43:20,176 --> 0:43:21,946
毫不相关的信息了

1343
00:43:22,986 --> 0:43:25,076
如果你的捷径

1344
00:43:25,076 --> 0:43:26,606
包含一些用户可以删除的

1345
00:43:26,606 --> 0:43:28,106
信息 你应该

1346
00:43:28,106 --> 0:43:29,596
在合适的时间

1347
00:43:29,716 --> 0:43:31,506
删除它们

1348
00:43:32,176 --> 0:43:33,246
我们来看看

1349
00:43:33,246 --> 0:43:35,226
如何删除

1350
00:43:35,226 --> 0:43:36,016
从 NSUserActivity 开始

1351
00:43:39,376 --> 0:43:41,506
有两种方法来删除一个

1352
00:43:41,506 --> 0:43:42,696
已递交的 userActivity

1353
00:43:43,766 --> 0:43:45,276
如果你使用“聚焦”索引

1354
00:43:45,396 --> 0:43:46,286
你可以设定

1355
00:43:46,286 --> 0:43:48,206
relatedUniqueIdentifier

1356
00:43:48,206 --> 0:43:49,256
然后从“聚焦”删除的内容

1357
00:43:49,256 --> 0:43:50,616
就会自动

1358
00:43:50,616 --> 0:43:51,786
删除递交的

1359
00:43:51,786 --> 0:43:52,346
userActivity

1360
00:43:53,966 --> 0:43:54,436
只需要在 contentAttributeSet 里

1361
00:43:54,436 --> 0:43:56,056
将 relatedUniqueIdentifier

1362
00:43:56,056 --> 0:43:59,056
设定为与可搜索的对象

1363
00:43:59,056 --> 0:44:00,476
相匹配的标识符

1364
00:43:59,056 --> 0:44:00,476
相匹配的标识符

1365
00:44:01,316 --> 0:44:04,576
接着 当可搜寻对象被删除时

1366
00:44:04,576 --> 0:44:06,516
它会自动删除 userActivity

1367
00:44:07,146 --> 0:44:10,746
如果你不使用“聚焦”索引

1368
00:44:10,746 --> 0:44:12,266
你可以使用

1369
00:44:12,266 --> 0:44:13,926
NSUserActivity 中的

1370
00:44:14,196 --> 0:44:15,366
持续标识符属性

1371
00:44:15,996 --> 0:44:17,746
这是一个你可以设置的新属性

1372
00:44:17,746 --> 0:44:19,276
这样你就可以追踪你的

1373
00:44:19,276 --> 0:44:21,446
userActivity 并在合适的时间

1374
00:44:21,446 --> 0:44:23,506
删除它们

1375
00:44:24,476 --> 0:44:27,406
要想使用它

1376
00:44:27,406 --> 0:44:28,886
只需要在递交 userActivity 前

1377
00:44:29,026 --> 0:44:30,646
设定 persistentIdentifier 属性

1378
00:44:31,536 --> 0:44:32,536
如果你想要将其删除

1379
00:44:32,536 --> 0:44:33,526
你可以调用

1380
00:44:33,526 --> 0:44:35,316
deleteSavedUserActivities

1381
00:44:35,316 --> 0:44:37,056
并填入你想要删除的标识符

1382
00:44:37,826 --> 0:44:39,166
你还可以删除所有

1383
00:44:39,166 --> 0:44:40,306
递交的 userActivity

1384
00:44:41,386 --> 0:44:42,746
比如说 当你的用户

1385
00:44:42,746 --> 0:44:44,376
退出登录时

1386
00:44:44,376 --> 0:44:46,916
你可以调用 deleteAllSavedUserActivities

1387
00:44:48,576 --> 0:44:50,256
Intents 拥有现成的 API

1388
00:44:50,256 --> 0:44:51,536
与新的 userActivity

1389
00:44:51,536 --> 0:44:53,436
API 相似

1390
00:44:54,336 --> 0:44:56,476
因为你通过 INInteraction 主导

1391
00:44:56,636 --> 0:44:58,166
Intent 的 Donation

1392
00:44:58,166 --> 0:44:59,656
删除 Intent 也会通过

1393
00:44:59,656 --> 0:45:00,586
INInteraction 发生

1394
00:44:59,656 --> 0:45:00,586
INInteraction 发生

1395
00:45:01,496 --> 0:45:03,816
一个 INInteraction 拥有一个

1396
00:45:03,856 --> 0:45:04,916
标识符和一组

1397
00:45:04,916 --> 0:45:06,386
你可以设置的标识符性能

1398
00:45:06,386 --> 0:45:08,086
然后用它来删除

1399
00:45:08,086 --> 0:45:10,086
一个或多个已经递交的 interaction

1400
00:45:10,556 --> 0:45:13,986
在递交 interaction 前

1401
00:45:13,986 --> 0:45:16,546
设定标识符或组识别符

1402
00:45:17,586 --> 0:45:18,676
当你想要删除时

1403
00:45:18,676 --> 0:45:20,616
你可以调用 delete

1404
00:45:20,616 --> 0:45:22,866
并填入你想删除的标识符阵列

1405
00:45:23,706 --> 0:45:25,426
你还可以通过调用delete

1406
00:45:25,426 --> 0:45:27,076
并填入组标识符

1407
00:45:27,076 --> 0:45:28,836
删除所有拥有

1408
00:45:29,066 --> 0:45:30,176
同样组标识符的已递交 Intent

1409
00:45:30,266 --> 0:45:33,386
最后 就如

1410
00:45:33,386 --> 0:45:34,796
NSUserActivity 一样

1411
00:45:34,796 --> 0:45:36,146
有一种可以删除

1412
00:45:36,146 --> 0:45:38,746
所有你递交的 Intent 的方法 

1413
00:45:38,746 --> 0:45:39,426
即在 INInteraction 调用 deleteAll

1414
00:45:40,796 --> 0:45:42,766
请确保在合适的时机

1415
00:45:42,766 --> 0:45:44,456
并填入你想删除的 Donation

1416
00:45:45,046 --> 0:45:46,016
这会给你的用户

1417
00:45:46,016 --> 0:45:47,736
最好的建议

1418
00:45:47,736 --> 0:45:48,976
也不会让他们思考

1419
00:45:48,976 --> 0:45:49,986
为什么会给他们建议

1420
00:45:49,986 --> 0:45:53,976
与他们毫无关联的信息

1421
00:45:55,326 --> 0:45:56,206
我们已经观看了

1422
00:45:56,206 --> 0:45:57,386
在创造和递交捷径时

1423
00:45:57,546 --> 0:45:59,836
应该考虑的事情

1424
00:45:59,836 --> 0:46:02,386
让我们最后简单地

1425
00:45:59,836 --> 0:46:02,386
让我们最后简单地

1426
00:46:02,386 --> 0:46:04,336
看一下怎么创造

1427
00:46:04,336 --> 0:46:06,756
最好的媒体捷径

1428
00:46:07,376 --> 0:46:10,486
我们创建了一个与捷径

1429
00:46:10,486 --> 0:46:11,936
配合很好的新 Intent

1430
00:46:12,426 --> 0:46:13,426
这个 Intent 被称作

1431
00:46:13,506 --> 0:46:15,396
INPlayMediaIntent 

1432
00:46:15,396 --> 0:46:17,326
它可以允许你创建和递交

1433
00:46:17,646 --> 0:46:19,256
可以播放音频或视频内容的捷径

1434
00:46:20,616 --> 0:46:23,056
处理扩展中的 Intent 时

1435
00:46:23,056 --> 0:46:24,406
你可以选择

1436
00:46:24,406 --> 0:46:26,346
在你的 App 后台处理它

1437
00:46:26,496 --> 0:46:28,896
这可以让你直接从你的 App

1438
00:46:28,896 --> 0:46:30,946
开始音频播放

1439
00:46:35,546 --> 0:46:36,646
除了在搜索界面

1440
00:46:36,646 --> 0:46:38,026
或者锁定屏幕上被建议

1441
00:46:38,686 --> 0:46:39,936
拥有这个 Intent 的捷径

1442
00:46:39,936 --> 0:46:41,186
也应该在用户

1443
00:46:41,186 --> 0:46:42,736
连接耳机时

1444
00:46:42,736 --> 0:46:43,966
在锁定屏幕上被播放控制所推荐

1445
00:46:43,966 --> 0:46:46,056
这样用户可以

1446
00:46:46,056 --> 0:46:47,126
更容易地

1447
00:46:47,126 --> 0:46:48,456
听到你的内容

1448
00:46:49,736 --> 0:46:52,556
最后 拥有这个 Intent 的捷径

1449
00:46:52,556 --> 0:46:54,226
在 HomePod 上

1450
00:46:54,226 --> 0:46:54,746
也运行得很好

1451
00:46:55,916 --> 0:46:58,236
只需要在你的 iPhone 上

1452
00:46:58,356 --> 0:47:01,016
对 Siri 增加一个播放媒体的捷径

1453
00:46:58,356 --> 0:47:01,016
对 Siri 增加一个播放媒体的捷径

1454
00:47:01,016 --> 0:47:02,216
然后在你的 HomePod 上唤醒它

1455
00:47:02,216 --> 0:47:03,866
这个音频就会在你的手机上

1456
00:47:04,056 --> 0:47:06,746
通过 HomePod 播放

1457
00:47:08,296 --> 0:47:11,636
我们还创建了一个新 API

1458
00:47:11,636 --> 0:47:14,366
来让你能告诉系统

1459
00:47:14,366 --> 0:47:16,146
它可能会感兴趣的内容

1460
00:47:18,646 --> 0:47:20,086
这对于周期性的内容来说

1461
00:47:20,086 --> 0:47:21,216
非常棒 

1462
00:47:21,216 --> 0:47:22,496
因为你想要建议给用户的

1463
00:47:22,496 --> 0:47:24,976
是他们之前没有听过或看过的内容

1464
00:47:28,206 --> 0:47:29,966
这里有一些我们为了

1465
00:47:30,026 --> 0:47:31,576
制作好的媒体捷径

1466
00:47:31,576 --> 0:47:32,526
而增加的东西

1467
00:47:33,476 --> 0:47:34,886
现在 让我们总结一下

1468
00:47:34,886 --> 0:47:35,616
刚刚说的内容

1469
00:47:39,086 --> 0:47:41,156
捷径可以让你的 App

1470
00:47:41,156 --> 0:47:44,116
有着强有力的 全新的体验

1471
00:47:44,116 --> 0:47:46,546
它通过将你的 App

1472
00:47:46,546 --> 0:47:48,316
在不同的地方连通

1473
00:47:48,446 --> 0:47:49,846
从而为吸引用户提供了

1474
00:47:49,846 --> 0:47:50,896
一个新方法

1475
00:47:51,226 --> 0:47:53,126
比如在搜索界面上 在锁定屏幕上

1476
00:47:53,746 --> 0:47:55,046
在 Apple Watch 上的 Siri 表盘上

1477
00:47:55,046 --> 0:47:57,106
以及通过 Siri 自身搜索

1478
00:47:57,616 --> 0:48:00,616
你可以在新的捷径 App 中使用它

1479
00:47:57,616 --> 0:48:00,616
你可以在新的捷径 App 中使用它

1480
00:48:01,486 --> 0:48:03,316
你可以通过使用 NSUserActivity

1481
00:48:03,316 --> 0:48:04,766
来采用捷径

1482
00:48:04,766 --> 0:48:06,326
这是一种展示 App 内容的

1483
00:48:06,326 --> 0:48:07,346
简单方法

1484
00:48:08,246 --> 0:48:11,526
你还可以采用与系统

1485
00:48:11,526 --> 0:48:12,556
有更深的融合的 Intent

1486
00:48:12,556 --> 0:48:14,296
从而为你的用户

1487
00:48:14,296 --> 0:48:15,416
解锁一个

1488
00:48:15,416 --> 0:48:16,976
全新的体验

1489
00:48:17,516 --> 0:48:22,546
[ 掌声 ]

1490
00:48:23,046 --> 0:48:24,706
如果想要了解更多的信息

1491
00:48:24,706 --> 0:48:26,386
我们的会议号码是 211 你可以在

1492
00:48:26,386 --> 0:48:28,176
developer.Apple.com 上找到我们的页面

1493
00:48:28,686 --> 0:48:29,986
你还可以在这周内

1494
00:48:29,986 --> 0:48:30,526
去我们的实验室找我们

1495
00:48:31,116 --> 0:48:32,776
感谢你的聆听

1496
00:48:32,846 --> 0:48:34,276
我们迫不及待地想要看到

1497
00:48:34,276 --> 0:48:35,266
你创建的捷径

1498
00:48:35,806 --> 0:48:36,976
祝你在接下来的会议愉快

1499
00:48:37,516 --> 0:48:40,500
[ 掌声 ]
