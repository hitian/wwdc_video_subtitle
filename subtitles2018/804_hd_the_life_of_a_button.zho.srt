1
00:00:17,784 --> 0:00:22,656
（按钮的一生 演讲804）

2
00:00:31,198 --> 0:00:32,499
大家好

3
00:00:33,200 --> 0:00:34,168
我是Julian

4
00:00:34,701 --> 0:00:39,506
稍后Hugo会加入我们

5
00:00:40,607 --> 0:00:43,710
开始之前 我想稍微解释下

6
00:00:43,777 --> 0:00:46,480
为什么我们要在此花时间

7
00:00:47,447 --> 0:00:49,716
我为未来的硬件设备设计

8
00:00:50,751 --> 0:00:52,886
并制作用户界面原型

9
00:00:53,887 --> 0:00:57,791
由于我工作的性质

10
00:00:58,926 --> 0:01:03,330
我建造并重建了很多基本的UI元素

11
00:00:58,926 --> 0:01:03,330
我建造并重建了很多基本的UI元素

12
00:01:03,397 --> 0:01:07,267
例如滚动、缩放、分页

13
00:01:08,001 --> 0:01:09,269
我也了解了很多

14
00:01:09,970 --> 0:01:11,205
设计和建造

15
00:01:11,939 --> 0:01:14,575
这些控件过程中涉及的细节

16
00:01:16,910 --> 0:01:20,781
因此我要在此与你们

17
00:01:22,182 --> 0:01:25,552
我要向你们展示像按钮

18
00:01:26,753 --> 0:01:29,823
其实背后有很多复杂的考虑因素

19
00:01:31,325 --> 0:01:34,995
我希望通过了解按钮这个控件

20
00:01:36,029 --> 0:01:39,666
我希望你们能更用心去使用标准控件

21
00:01:41,001 --> 0:01:44,271
去考虑什么时候

22
00:01:45,672 --> 0:01:47,541
而当你们确实制作自定义控件时

23
00:01:47,608 --> 0:01:51,211
我希望你们能够

24
00:01:52,579 --> 0:01:53,580
那让我们开始吧

25
00:01:55,616 --> 0:02:00,888
Hugo和我正扩大我们的

26
00:01:55,616 --> 0:02:00,888
Hugo和我正扩大我们的

27
00:02:02,389 --> 0:02:08,862
我们正在建造一款更简单的

28
00:02:10,464 --> 0:02:13,567
如果你们稍稍想象一下

29
00:02:14,368 --> 0:02:16,870
你们希望在即将出门前

30
00:02:17,037 --> 0:02:19,039
自己的早餐已经准备就绪

31
00:02:20,107 --> 0:02:22,142
你们需要做的就是

32
00:02:22,743 --> 0:02:25,712
按下按钮并等待一块新鲜的吐司面包

33
00:02:25,779 --> 0:02:27,347
做好后在厨房等你享用

34
00:02:29,616 --> 0:02:33,520
现在 我们的联网烤面包机

35
00:02:34,054 --> 0:02:36,957
我们的联网烤面包机

36
00:02:37,524 --> 0:02:39,893
首先它准备好并等待你放入新鲜吐司

37
00:02:40,360 --> 0:02:44,164
然后它制作吐司 最终

38
00:02:45,599 --> 0:02:49,536
不过我们的联网烤面包

39
00:02:50,404 --> 0:02:52,139
使用app的人来完成的

40
00:02:52,973 --> 0:02:54,341
当人们使用我们的app时

41
00:02:55,175 --> 0:02:56,677
他们可以要求加入一片吐司

42
00:02:57,644 --> 0:02:59,046
让烤面包机开始工作

43
00:03:00,681 --> 0:03:03,350
当吐司做好后 当然人们会吃掉它

44
00:03:04,084 --> 0:03:06,086
也许由于某种原因

45
00:03:06,153 --> 0:03:07,554
虽然对这个我实际不太确定

46
00:03:08,222 --> 0:03:11,992
当然 我们希望确保烤面包机

47
00:03:12,759 --> 0:03:14,828
我不会透露这个确切怎么实现

48
00:03:14,895 --> 0:03:16,430
但相信我

49
00:03:18,432 --> 0:03:22,536
对于未来我们也有伟大的计划

50
00:03:22,769 --> 0:03:25,506
吐司队列 每家都有几个烤面包机

51
00:03:25,906 --> 0:03:29,076
最终我们会将这些连接到

52
00:03:30,210 --> 0:03:32,412
我要说的是

53
00:03:35,349 --> 0:03:38,585
而在今天的演讲中 我们将深入

54
00:03:38,886 --> 0:03:42,990
了解一个屏幕的细节

55
00:03:43,357 --> 0:03:45,659
一个屏幕上的一个按钮

56
00:03:45,726 --> 0:03:47,327
（最重要的交互）

57
00:03:47,394 --> 0:03:50,731
如果我们能正确做好

58
00:03:51,331 --> 0:03:52,799
其它的会水到渠成

59
00:03:54,668 --> 0:03:56,036
如果我们再看一下这个系统

60
00:03:57,337 --> 0:04:01,108
我认为这里最重要的交互

61
00:03:57,337 --> 0:04:01,108
我认为这里最重要的交互

62
00:04:01,441 --> 0:04:03,210
实际是我们要求烤面包的过程

63
00:04:03,977 --> 0:04:06,213
显然 其它环节也必须好用

64
00:04:06,780 --> 0:04:08,949
但要求烤面包是第一个印象

65
00:04:09,316 --> 0:04:11,852
如果人们都没法启动烤面包机

66
00:04:12,085 --> 0:04:13,620
其余的环节实际都毫无意义

67
00:04:18,492 --> 0:04:19,959
今天为了做好这一点

68
00:04:20,360 --> 0:04:22,963
我们会首先稍微介绍下什么是按钮

69
00:04:24,565 --> 0:04:29,069
然后我会跟各位分享

70
00:04:30,971 --> 0:04:33,774
最后Hugo会加入我们

71
00:04:38,078 --> 0:04:39,413
那么 按钮究竟是什么呢？

72
00:04:41,381 --> 0:04:43,483
我们今天要讨论的按钮

73
00:04:43,951 --> 0:04:46,587
是UI屏幕上的控件

74
00:04:47,988 --> 0:04:51,258
按钮是行为的间接控件

75
00:04:52,593 --> 0:04:55,696
我这么说的意思是当你按下按钮

76
00:04:56,396 --> 0:04:58,465
行为是发生在别处

77
00:04:59,466 --> 0:05:02,736
这个跟直接交互是相对的

78
00:04:59,466 --> 0:05:02,736
这个跟直接交互是相对的

79
00:05:04,238 --> 0:05:07,574
直接交互是我抓住并直接操纵控制杆

80
00:05:09,076 --> 0:05:13,447
直接交互能与真实世界的

81
00:05:13,514 --> 0:05:14,815
并且感觉更有趣

82
00:05:15,616 --> 0:05:19,286
但按钮这种间接交互的真正威力

83
00:05:19,620 --> 0:05:21,989
在于它由于这种分离

84
00:05:22,055 --> 0:05:23,657
能够做到更清晰、更强大

85
00:05:25,626 --> 0:05:26,827
而这里有趣的事情是

86
00:05:26,894 --> 0:05:30,664
即使这些屏幕按钮模仿的物理按钮

87
00:05:31,164 --> 0:05:32,099
也是间接的

88
00:05:36,537 --> 0:05:41,375
即使作为结果的行为发生在别处

89
00:05:42,242 --> 0:05:43,877
按钮也能控制该行为

90
00:05:44,511 --> 0:05:47,281
正如你能设计作为结果的行为

91
00:05:47,714 --> 0:05:49,082
你也能设计按钮

92
00:05:49,483 --> 0:05:52,653
我们可以分开或相互关联地

93
00:05:55,255 --> 0:05:56,423
而今天为做到这一点

94
00:05:56,490 --> 0:06:02,796
我们将重点来看

95
00:05:56,490 --> 0:06:02,796
我们将重点来看

96
00:06:04,698 --> 0:06:08,969
反馈是一种方式 通过它

97
00:06:10,671 --> 0:06:14,107
我肯定你们很多人

98
00:06:14,474 --> 0:06:18,111
去在app内提供反馈

99
00:06:18,912 --> 0:06:19,746
然而…

100
00:06:20,514 --> 0:06:23,650
我认为有两大类反馈

101
00:06:25,319 --> 0:06:27,788
第一类是你告诉人们

102
00:06:28,822 --> 0:06:32,326
你实际可以在屏幕上放上文字

103
00:06:32,793 --> 0:06:34,928
或设计能进行解释的图表

104
00:06:37,030 --> 0:06:39,366
第二类是你向人们展示

105
00:06:40,100 --> 0:06:44,371
你能让人们以更接近现实世界的方式

106
00:06:44,838 --> 0:06:46,039
体验他们行为的结果

107
00:06:47,307 --> 0:06:51,879
方法可以是图像、声音

108
00:06:55,782 --> 0:07:01,421
现在我们把反馈

109
00:06:55,782 --> 0:07:01,421
现在我们把反馈

110
00:07:03,290 --> 0:07:04,758
而不仅限于完成阶段

111
00:07:05,792 --> 0:07:08,695
我们可以从物理按钮的角度

112
00:07:11,398 --> 0:07:13,166
在我按下按钮前

113
00:07:14,001 --> 0:07:15,235
按钮就固定在那里

114
00:07:17,971 --> 0:07:21,341
在我跟按钮交互期间

115
00:07:24,111 --> 0:07:26,713
最终 在我按完按钮后

116
00:07:26,980 --> 0:07:30,217
我的手指脱离它 按钮回归原位

117
00:07:34,021 --> 0:07:37,157
那么在我还没跟按钮交互前

118
00:07:38,058 --> 0:07:41,061
就提供反馈 这有什么意思？

119
00:07:41,128 --> 0:07:43,797
如果按钮就在那里

120
00:07:45,032 --> 0:07:47,734
如果我们稍稍思考下iPhone

121
00:07:48,836 --> 0:07:52,005
iPhone屏幕就是一块玻璃

122
00:07:53,273 --> 0:07:56,410
这块玻璃下恰巧有发光的像素

123
00:07:56,944 --> 0:08:00,347
而重要的是人们觉得

124
00:07:56,944 --> 0:08:00,347
而重要的是人们觉得

125
00:08:01,815 --> 0:08:05,085
玻璃不会告诉你你可以去点击它

126
00:08:06,053 --> 0:08:07,554
但屏幕上的内容可以

127
00:08:09,156 --> 0:08:11,525
你可以看到你能够翻页

128
00:08:13,060 --> 0:08:14,061
拖拽

129
00:08:15,329 --> 0:08:18,765
当然 跟我的演讲相关的是

130
00:08:21,034 --> 0:08:24,271
我说的这些有个学术上的术语

131
00:08:24,338 --> 0:08:26,206
即“感知的可供性”

132
00:08:27,441 --> 0:08:30,711
可供性是指物体与跟物体互动的人

133
00:08:31,311 --> 0:08:33,347
之间的联系

134
00:08:33,780 --> 0:08:38,284
一个人可能知道自己能够

135
00:08:38,986 --> 0:08:40,520
而这其中的感知部分

136
00:08:40,988 --> 0:08:45,759
就是讨论人们对屏幕上的

137
00:08:46,426 --> 0:08:49,696
人们之所以知道自己能够

138
00:08:49,930 --> 0:08:51,798
是因为他们之前的体验

139
00:08:52,199 --> 0:08:53,433
因为他们之前用过iOS

140
00:08:53,967 --> 0:08:56,103
以及因为他们目前的环境

141
00:08:56,170 --> 0:08:57,971
即他们在使用手机上

142
00:08:58,238 --> 0:09:00,941
一个他们了解或者不了解的app

143
00:08:58,238 --> 0:09:00,941
一个他们了解或者不了解的app

144
00:09:03,076 --> 0:09:07,047
那么 让我们将这个应用到

145
00:09:08,949 --> 0:09:11,652
我怎么知道点击这个按钮后

146
00:09:11,952 --> 0:09:14,688
我可以简单把按钮放上去

147
00:09:16,557 --> 0:09:18,458
我们的做法是提供标签

148
00:09:18,859 --> 0:09:20,794
标签是一种反馈

149
00:09:21,061 --> 0:09:24,531
通过它

150
00:09:26,066 --> 0:09:28,802
在这个特定例子中

151
00:09:29,169 --> 0:09:32,506
但不幸的是

152
00:09:32,806 --> 0:09:35,008
也可以指你早餐会吃的

153
00:09:35,075 --> 0:09:36,944
可口的面包片

154
00:09:37,010 --> 0:09:40,013
我们该怎么叫这个标签呢

155
00:09:42,182 --> 0:09:45,819
我们可以给这个按钮设计图标

156
00:09:46,653 --> 0:09:48,488
但我觉得这也不特别清楚

157
00:09:48,555 --> 0:09:50,757
尤其是对于人们在陌生环境中

158
00:09:50,824 --> 0:09:53,126
首次遇到的一些东西

159
00:09:53,827 --> 0:09:55,462
所以我们稍微思考了下

160
00:09:55,529 --> 0:09:57,764
然后想出了短语

161
00:09:58,532 --> 0:10:01,835
我知道在图表中我们把这个称作

162
00:09:58,532 --> 0:10:01,835
我知道在图表中我们把这个称作

163
00:10:01,902 --> 0:10:03,670
不过我们花了点时间去思考

164
00:10:04,671 --> 0:10:07,474
使用我们app的人可能会怎么理解

165
00:10:08,208 --> 0:10:10,511
以及我们的app怎么做

166
00:10:14,181 --> 0:10:17,384
下一件要思考的事情是：

167
00:10:17,818 --> 0:10:21,655
仅仅是漂浮在黑色背景上的

168
00:10:22,789 --> 0:10:25,659
但如果你能添加一些背景

169
00:10:26,660 --> 0:10:30,330
你可能就能理解了

170
00:10:30,864 --> 0:10:32,533
这可以是按钮的形状

171
00:10:34,034 --> 0:10:35,602
按钮呈现的方式

172
00:10:36,870 --> 0:10:40,674
或者如果你足够持续地使用它

173
00:10:42,876 --> 0:10:44,011
在这个例子中

174
00:10:45,279 --> 0:10:47,581
我不觉得人们会很熟悉我们的app

175
00:10:47,648 --> 0:10:49,316
他们会每天打开一次app

176
00:10:49,383 --> 0:10:50,484
或如果我们幸运

177
00:10:51,451 --> 0:10:54,788
所以我们会关注

178
00:10:54,855 --> 0:10:56,957
因为我们不想加入新东西

179
00:10:57,658 --> 0:10:59,560
所以我们在屏幕上尝试了这些

180
00:11:04,398 --> 0:11:07,267
在开始使用这个按钮前

181
00:11:07,334 --> 0:11:09,269
反馈的另一件事是：

182
00:11:09,636 --> 0:11:12,206
我怎么知道这个按钮跟什么相关？

183
00:11:13,140 --> 0:11:16,710
你可以根据按钮

184
00:11:17,077 --> 0:11:19,112
这些按钮有不同的含义和感觉

185
00:11:20,747 --> 0:11:24,084
或者你可以根据

186
00:11:25,586 --> 0:11:27,855
或者看按钮跟屏幕上的

187
00:11:30,224 --> 0:11:31,992
我觉得最后这个设计不错

188
00:11:32,059 --> 0:11:35,095
所以我们在真实屏幕上试用下

189
00:11:35,963 --> 0:11:39,099
我在Keynote演讲中画好

190
00:11:39,466 --> 0:11:41,201
我在卧室里拿着手机

191
00:11:41,268 --> 0:11:44,571
早上订吐司前

192
00:11:44,638 --> 0:11:48,842
而我是要努力了解…

193
00:11:52,913 --> 0:11:54,681
我们要思考的下一件事是

194
00:11:54,748 --> 0:11:58,318
我跟这个按钮交互期间发生的事情

195
00:11:59,019 --> 0:12:00,120
对于物理按钮

196
00:11:59,019 --> 0:12:00,120
对于物理按钮

197
00:12:01,121 --> 0:12:02,222
这期间我会按下它

198
00:12:07,794 --> 0:12:10,597
现在说下“反馈”这个词

199
00:12:11,031 --> 0:12:15,736
它是指告诉人们

200
00:12:16,737 --> 0:12:19,840
在这个例子中

201
00:12:20,440 --> 0:12:23,277
所以我们在此可以用

202
00:12:25,212 --> 0:12:30,083
因为“前馈”是指帮助人们理解

203
00:12:30,384 --> 0:12:34,188
他们跟这个按钮互动时发生的事情

204
00:12:36,156 --> 0:12:39,960
“前馈”是让交互流畅的

205
00:12:40,460 --> 0:12:44,631
你可以对立体触碰、捏合

206
00:12:44,998 --> 0:12:46,900
或滑动操作产生反应

207
00:12:49,903 --> 0:12:53,140
思考“前馈”是怎样应用到按钮上时

208
00:12:53,507 --> 0:12:56,076
我们应思考正在发生的事情

209
00:12:56,143 --> 0:12:59,847
当我的手指触碰屏幕和按钮时

210
00:12:59,913 --> 0:13:00,747
正在发生什么

211
00:12:59,913 --> 0:13:00,747
正在发生什么

212
00:13:02,349 --> 0:13:04,785
对于我们的整个烤面包系统

213
00:13:05,719 --> 0:13:09,022
我们是处在按下按钮

214
00:13:09,890 --> 0:13:13,493
所以我们要关注的是准备好烤面包机

215
00:13:13,760 --> 0:13:17,297
并最终过渡到烤面包机烤吐司的阶段

216
00:13:18,799 --> 0:13:21,335
我们应该思考正在发生什么

217
00:13:21,401 --> 0:13:23,837
以及我该怎样通过提示

218
00:13:28,275 --> 0:13:30,344
比如我开始触碰这个按钮了

219
00:13:31,678 --> 0:13:34,248
我怎么知道我已经点击这个按钮了？

220
00:13:34,314 --> 0:13:35,616
这个又有什么关系？

221
00:13:36,416 --> 0:13:37,918
好 其一

222
00:13:38,151 --> 0:13:40,354
这个按钮的命中区域

223
00:13:40,420 --> 0:13:44,458
如果你仔细看这个圆圈

224
00:13:45,459 --> 0:13:49,162
但也许命中区域实际比视觉图片稍大

225
00:13:49,363 --> 0:13:52,099
这一点对于很小的控件来说尤其重要

226
00:13:52,165 --> 0:13:53,867
如果我们让那个控制杆实现交互

227
00:13:57,304 --> 0:13:59,173
我怎么知道

228
00:13:59,573 --> 0:14:03,277
你也许会想给按钮做动画效果

229
00:13:59,573 --> 0:14:03,277
你也许会想给按钮做动画效果

230
00:14:03,810 --> 0:14:06,113
让它淡入或逐渐变大

231
00:14:06,880 --> 0:14:09,049
但这样会感觉反应不灵敏

232
00:14:09,883 --> 0:14:13,253
这种动画可能适用于立体触碰

233
00:14:13,320 --> 0:14:16,023
就是如果我按下过程中

234
00:14:16,690 --> 0:14:21,595
但对于快速触碰屏幕的操作

235
00:14:21,662 --> 0:14:23,630
如果要做动画效果 就要非常快

236
00:14:25,599 --> 0:14:28,635
所以我们的做法是提供确定声音

237
00:14:29,002 --> 0:14:31,071
触觉或视觉变化

238
00:14:31,805 --> 0:14:34,575
在这个例子中 我们会立即突出强调

239
00:14:35,576 --> 0:14:37,177
让速度感觉稍快些

240
00:14:37,811 --> 0:14:41,315
这也能让我们知道按钮被激活了

241
00:14:44,218 --> 0:14:48,922
也许我们该试着将按钮的前馈

242
00:14:49,323 --> 0:14:51,458
与烤面包机本身的前馈相关联

243
00:14:51,525 --> 0:14:53,694
正如我所说 我们就能开始

244
00:14:54,061 --> 0:14:56,830
所以在此我尝试的是

245
00:14:57,097 --> 0:14:59,600
也许我们可以显示吐司片开始出现

246
00:15:00,467 --> 0:15:02,970
不过我感觉对于这个按钮

247
00:15:03,036 --> 0:15:05,105
所以我不会继续这么做

248
00:15:07,574 --> 0:15:10,010
对于前馈我们应该思考的另一件事是

249
00:15:10,677 --> 0:15:12,446
如果我改主意了该怎么办？

250
00:15:13,247 --> 0:15:15,115
比如我早上有点头昏脑涨

251
00:15:15,182 --> 0:15:17,784
我拿起手机 不小心触碰到这个按钮

252
00:15:18,118 --> 0:15:20,153
但我实际还不想启动烤面包机

253
00:15:20,921 --> 0:15:25,626
对于大多按钮

254
00:15:25,993 --> 0:15:27,160
以开始取消操作

255
00:15:29,162 --> 0:15:30,864
这种操作实际对于所有类型的

256
00:15:30,931 --> 0:15:33,033
流动交互都很重要

257
00:15:33,267 --> 0:15:37,137
因为正是它使得流动交互

258
00:15:37,804 --> 0:15:40,641
如果你在不同的屏幕间翻页

259
00:15:41,208 --> 0:15:44,344
在抬起手指前

260
00:15:44,845 --> 0:15:47,314
同样的道理也适用于一个简单的按钮

261
00:15:47,481 --> 0:15:50,117
我可以把手指再拖回按钮内

262
00:15:50,484 --> 0:15:54,488
并获得同样的前馈

263
00:15:57,824 --> 0:16:01,595
既然我们已经稍稍决定了

264
00:15:57,824 --> 0:16:01,595
既然我们已经稍稍决定了

265
00:16:01,662 --> 0:16:03,864
我们同样也该在设备上试试这个

266
00:16:04,431 --> 0:16:07,568
同样 我知道这个对于按钮来说

267
00:16:07,901 --> 0:16:12,906
但它对于滚动页面、捏合

268
00:16:13,407 --> 0:16:15,142
以及很多触摸交互来说 非常重要

269
00:16:19,780 --> 0:16:22,182
最终 我们应该思考

270
00:16:22,516 --> 0:16:25,419
我们应该怎样利用反馈

271
00:16:26,153 --> 0:16:28,956
对于物理按钮 这之后它会返回原位

272
00:16:29,723 --> 0:16:31,191
对于屏幕按钮

273
00:16:32,092 --> 0:16:34,962
我们会抬起手指 脱离屏幕

274
00:16:36,897 --> 0:16:40,567
当然 这是各位大多数人

275
00:16:41,034 --> 0:16:42,803
都熟悉的经典反馈领域

276
00:16:43,604 --> 0:16:47,140
但我在此想要指出的是

277
00:16:47,508 --> 0:16:51,078
同时针对按钮本身和行为

278
00:16:51,278 --> 0:16:53,013
也就是发生的结果

279
00:16:53,680 --> 0:16:55,616
我们可以思考如何将这二者连接

280
00:16:55,682 --> 0:16:58,285
从而让人们理解已经发生了什么

281
00:17:00,821 --> 0:17:03,957
还是 在我们的系统中

282
00:17:04,324 --> 0:17:07,261
是让人们能够烤吐司

283
00:17:09,663 --> 0:17:12,432
我的手指脱离按钮后会发生什么？

284
00:17:13,800 --> 0:17:16,002
按钮会立即变暗吗？

285
00:17:16,569 --> 0:17:21,541
会有一点延迟从而

286
00:17:22,643 --> 0:17:25,378
有计时器吗？按钮支持双击吗？

287
00:17:25,746 --> 0:17:29,316
如果是这样 我可能就得等一下

288
00:17:32,019 --> 0:17:34,755
如果我们回顾下两种反馈类型

289
00:17:36,490 --> 0:17:39,826
我们可以直接告诉人们正在发生什么

290
00:17:40,827 --> 0:17:42,262
我可以在屏幕上加一些文字

291
00:17:42,496 --> 0:17:43,997
我觉得这样做很清楚

292
00:17:44,064 --> 0:17:46,700
但这也需要你阅读并需要更多文本

293
00:17:48,569 --> 0:17:50,537
所以也许我们可以向人们显示

294
00:17:51,071 --> 0:17:55,209
也许按钮本身提供一些反馈

295
00:17:57,311 --> 0:18:01,448
也许我们可以用某个动画

296
00:17:57,311 --> 0:18:01,448
也许我们可以用某个动画

297
00:18:02,249 --> 0:18:05,719
例如 吐司图标本身

298
00:18:06,053 --> 0:18:08,222
可以显示已经开始烤吐司了

299
00:18:10,757 --> 0:18:12,826
或者我们可以同时采取二者

300
00:18:13,560 --> 0:18:16,864
我在屏幕上加文字同时显示烤面包机

301
00:18:17,364 --> 0:18:19,733
这样做很棒 因为我可能会错过动画

302
00:18:19,800 --> 0:18:22,336
但我仍能看到烤面包机所处的状态

303
00:18:24,371 --> 0:18:30,544
跟与按钮和前馈的交互相似的是

304
00:18:30,777 --> 0:18:33,714
我该思考如果我改主意了会发生什么

305
00:18:35,115 --> 0:18:38,018
我已经开始烤吐司了

306
00:18:38,085 --> 0:18:39,686
也许我想让烤面包机停止工作

307
00:18:39,887 --> 0:18:43,023
我们可以将这个按钮换成

308
00:18:43,357 --> 0:18:45,459
但我觉得这不是特别清楚

309
00:18:45,526 --> 0:18:47,327
因为这个按钮非常地像

310
00:18:47,594 --> 0:18:51,365
之前的“烤吐司”按钮

311
00:18:53,033 --> 0:18:55,135
也许我们可以加一个

312
00:18:56,470 --> 0:18:59,373
我感觉红色有点过头了

313
00:18:59,840 --> 0:19:02,843
所以我们也许可以试一下相同的按钮

314
00:18:59,840 --> 0:19:02,843
所以我们也许可以试一下相同的按钮

315
00:19:04,478 --> 0:19:06,413
但跟烤吐司按钮是独立开的

316
00:19:07,414 --> 0:19:08,949
现在感觉好点了

317
00:19:10,250 --> 0:19:13,053
所以我该做的是 再在设备上试一下

318
00:19:15,589 --> 0:19:19,059
我们应该看看按钮本身的反馈

319
00:19:19,726 --> 0:19:22,196
是怎么与来自烤面包机的反馈相关联

320
00:19:22,729 --> 0:19:24,898
并告诉人们发生了什么的

321
00:19:28,302 --> 0:19:30,537
稍微总结下我讲过的…

322
00:19:32,739 --> 0:19:37,010
反馈是一种方式 通过它

323
00:19:38,278 --> 0:19:43,150
你可以直接告诉人们

324
00:19:43,884 --> 0:19:45,752
或者你可以向人们展示

325
00:19:45,953 --> 0:19:49,022
你可以让人们体会随着时间的改变

326
00:19:50,991 --> 0:19:55,495
我们可以把反馈应用到

327
00:19:56,930 --> 0:19:58,131
即使用在简单的按钮上

328
00:19:59,967 --> 0:20:02,002
而我在此潜意识做的一件事还有

329
00:19:59,967 --> 0:20:02,002
而我在此潜意识做的一件事还有

330
00:20:02,269 --> 0:20:07,174
尝试各种选项

331
00:20:07,741 --> 0:20:10,611
要实际了解某个动画

332
00:20:10,677 --> 0:20:11,645
是去试用一下

333
00:20:16,049 --> 0:20:19,453
那么 我们在此已经设计了

334
00:20:19,686 --> 0:20:21,522
非常重要的一部分

335
00:20:22,789 --> 0:20:24,825
但我觉得这样做会更简单些…

336
00:20:25,926 --> 0:20:27,594
就是在做好这个控件后

337
00:20:27,661 --> 0:20:29,396
去弄清余下的流程如何

338
00:20:31,832 --> 0:20:35,636
既然我们的按钮已经设计得相当好了

339
00:20:36,203 --> 0:20:38,172
我觉得我们可以开始思考音效了

340
00:20:38,238 --> 0:20:40,440
所以我想请Hugo上台

341
00:20:46,947 --> 0:20:48,115
谢谢Julian

342
00:20:48,849 --> 0:20:49,850
大家好

343
00:20:53,020 --> 0:20:53,921
现在

344
00:20:54,454 --> 0:21:00,060
我们可以迅速给这个按钮

345
00:20:54,454 --> 0:21:00,060
我们可以迅速给这个按钮

346
00:21:02,162 --> 0:21:03,163
听起来不错？

347
00:21:03,897 --> 0:21:05,132
还是可以再好点？

348
00:21:06,567 --> 0:21:08,135
Julian能做得更好

349
00:21:08,202 --> 0:21:11,071
早些让我参与这个过程吗？

350
00:21:14,575 --> 0:21:17,678
我想要跟大家分享几点

351
00:21:17,744 --> 0:21:19,479
是如何去处理这样的项目的

352
00:21:21,114 --> 0:21:24,051
我会介绍到哪里去寻找

353
00:21:24,384 --> 0:21:26,253
设计声音的灵感

354
00:21:27,387 --> 0:21:30,457
以及在这个过程中

355
00:21:32,659 --> 0:21:35,462
但在深入探讨前 我来解释下

356
00:21:37,064 --> 0:21:42,769
你们可能有人会想我们的用户

357
00:21:43,570 --> 0:21:47,140
有必要为我的app加音效吗？

358
00:21:48,942 --> 0:21:50,043
当然 取决于你自己

359
00:21:50,110 --> 0:21:54,748
但George Lucas曾说过

360
00:21:54,815 --> 0:21:56,650
是由我们听到的声音决定的

361
00:21:57,284 --> 0:21:59,419
由音乐和声音设计决定的

362
00:22:00,521 --> 0:22:05,459
我们周围到处是声音

363
00:22:07,861 --> 0:22:12,499
声音能够丰富产品的体验

364
00:22:14,268 --> 0:22:18,472
声音能帮我们记住你app的体验

365
00:22:18,539 --> 0:22:24,044
以及你的品牌

366
00:22:25,846 --> 0:22:29,816
那么当我们想为按钮设计音效时

367
00:22:30,350 --> 0:22:32,753
我们可以先绕个圈子

368
00:22:32,819 --> 0:22:35,822
去看看现实世界的一些按钮

369
00:22:37,291 --> 0:22:42,963
有些按钮是廉价材料做出的

370
00:22:43,730 --> 0:22:47,434
有些是高质量材料做成的

371
00:22:49,203 --> 0:22:53,340
这实际是iPhone X

372
00:22:54,174 --> 0:22:56,009
当然 我们将它放大了不少

373
00:22:57,744 --> 0:22:58,812
（发声还是不发声？）

374
00:22:58,879 --> 0:23:02,349
不过这些声音本质上只是副产品

375
00:22:58,879 --> 0:23:02,349
不过这些声音本质上只是副产品

376
00:23:02,416 --> 0:23:04,852
它们不一定是设计出来的

377
00:23:04,918 --> 0:23:07,955
它们是由按钮的制作材料决定的

378
00:23:09,289 --> 0:23:12,426
但因为我们是设计软件

379
00:23:13,193 --> 0:23:18,932
我们可以选择根本没有任何音效

380
00:23:20,801 --> 0:23:22,703
但如果我们确实认定了

381
00:23:22,870 --> 0:23:27,007
在UI元素中加音效是有用的

382
00:23:27,774 --> 0:23:30,544
那么我们可以从现实世界的

383
00:23:31,311 --> 0:23:36,216
赋予这些UI音效以意义

384
00:23:39,253 --> 0:23:41,188
你想为你的app添加音效吗？

385
00:23:41,255 --> 0:23:45,759
这要看情况

386
00:23:46,527 --> 0:23:49,329
app的使用者是谁

387
00:23:49,830 --> 0:23:53,700
使用环境是什么

388
00:23:54,935 --> 0:23:59,740
我们知道我们app的使用者

389
00:24:00,274 --> 0:24:02,643
他们习惯在厨房烤吐司

390
00:24:03,577 --> 0:24:06,313
但从现在开始 他们可以

391
00:24:07,881 --> 0:24:10,918
然而 他们仍可以使用自己经常

392
00:24:10,984 --> 0:24:13,387
从厨房烤面包机中

393
00:24:14,021 --> 0:24:16,823
由于这个原因 我们认为这个app

394
00:24:17,057 --> 0:24:19,059
是使用音效的完美对象

395
00:24:21,228 --> 0:24:25,065
那么 让我们看看烤吐司的过程

396
00:24:26,133 --> 0:24:28,335
并倾听我们遇到的声音

397
00:24:30,604 --> 0:24:33,040
让我们确定这些声音是否有用

398
00:24:33,707 --> 0:24:36,410
如果有用

399
00:24:36,476 --> 0:24:37,978
好 我们会使用

400
00:24:38,445 --> 0:24:39,980
Julian的烤吐司时间线

401
00:24:41,181 --> 0:24:43,584
并倾听烤面包机发出的声音

402
00:24:45,152 --> 0:24:51,325
首先 我们拉下控制杆 然后

403
00:24:53,594 --> 0:24:56,630
接着我们会听到烤面包机在加热

404
00:24:56,697 --> 0:24:58,732
有线圈微弱的嗡嗡声

405
00:25:03,070 --> 0:25:08,141
吐司烤好后 烤面包机吐出吐司

406
00:25:09,843 --> 0:25:13,113
现在让我们一步步看一下这些步骤

407
00:25:16,984 --> 0:25:18,752
首先 我们拉下操纵杆

408
00:25:18,819 --> 0:25:23,490
在压下时 我们感到弹簧的阻力

409
00:25:24,057 --> 0:25:26,994
这几乎就像… 如果我们将其

410
00:25:27,060 --> 0:25:31,698
这就好比设计声音触觉和动画

411
00:25:31,765 --> 0:25:33,300
并将它们同步到一起

412
00:25:33,867 --> 0:25:37,070
但在我们的app中

413
00:25:37,137 --> 0:25:40,207
所以我们不需要为它设计声音

414
00:25:41,508 --> 0:25:44,912
但当我们要求烤吐司时

415
00:25:45,879 --> 0:25:49,483
下一步是Julian要求

416
00:25:49,550 --> 0:25:51,552
那么 让我们着手去做这件事

417
00:25:52,819 --> 0:25:58,425
我们可以录下声音

418
00:25:58,592 --> 0:26:00,994
以及合成器来生成声音

419
00:25:58,592 --> 0:26:00,994
以及合成器来生成声音

420
00:26:01,061 --> 0:26:06,500
然后我们可以使用软件

421
00:26:06,667 --> 0:26:08,869
我现在不会详细介绍这部分

422
00:26:08,936 --> 0:26:12,339
不过请大家观看

423
00:26:12,806 --> 0:26:14,274
去更多地了解这个过程

424
00:26:15,909 --> 0:26:18,846
最后 我们做出三种不同的选项

425
00:26:20,080 --> 0:26:21,081
这是选项A

426
00:26:24,084 --> 0:26:25,085
这是选项B

427
00:26:27,721 --> 0:26:28,956
这是选项C

428
00:26:32,259 --> 0:26:35,696
好 选项A是极简风格的

429
00:26:36,763 --> 0:26:37,764
它非常简单

430
00:26:37,931 --> 0:26:40,868
它与app的简单UI相当适宜

431
00:26:43,237 --> 0:26:46,139
但感觉好像缺了点什么

432
00:26:46,673 --> 0:26:48,942
在设计的过程中我们发现

433
00:26:49,009 --> 0:26:52,746
如果声音有两次点击声

434
00:26:52,813 --> 0:26:55,983
按下时一次点击声

435
00:26:57,518 --> 0:26:59,786
而选项B有这种特点

436
00:27:02,422 --> 0:27:05,158
不过… 虽然这是现实感更强的声音

437
00:27:06,260 --> 0:27:07,861
它听起来实际不像烤面包机

438
00:27:07,928 --> 0:27:10,163
不过它确实有一种实物的感觉

439
00:27:11,064 --> 0:27:13,834
但由于相同的原因

440
00:27:13,901 --> 0:27:15,369
并有点金属感

441
00:27:18,338 --> 0:27:19,540
接下来是选项C

442
00:27:22,342 --> 0:27:23,677
这个声音有点奇怪

443
00:27:23,977 --> 0:27:27,948
不过它确实有特色

444
00:27:28,015 --> 0:27:30,317
再次听到后会认出的声音

445
00:27:32,419 --> 0:27:33,654
这个声音的另一个好处是

446
00:27:33,720 --> 0:27:37,057
它通过音调传达一种确认的信息

447
00:27:37,124 --> 0:27:40,561
就好像是打上对勾

448
00:27:40,761 --> 0:27:43,096
我再播放一次看看大家能否听出来

449
00:27:46,166 --> 0:27:49,570
由于这些原因 我认为选项C

450
00:27:49,636 --> 0:27:51,805
是我会推荐去使用的

451
00:27:53,473 --> 0:27:57,711
这个声音很简单 有种友好的特点

452
00:27:58,712 --> 0:27:59,947
而且它有独特性

453
00:28:00,013 --> 0:28:03,650
不是那种我在其它app中

454
00:28:05,219 --> 0:28:07,087
好 看起来我们完成任务了

455
00:28:07,988 --> 0:28:10,023
至少我们做出了按钮点击声

456
00:28:11,291 --> 0:28:13,527
但我们还没烤好吐司呢 所以…

457
00:28:14,194 --> 0:28:17,364
让我们继续 也许app中有一些

458
00:28:17,698 --> 0:28:19,199
使用音效的其它机会

459
00:28:19,266 --> 0:28:22,369
因为作为声音设计师

460
00:28:23,504 --> 0:28:27,508
所以 在按下按钮后

461
00:28:27,574 --> 0:28:29,910
我们听到这种微弱的嗡嗡声

462
00:28:32,980 --> 0:28:36,183
现在我们可以…这个声音有用吗？

463
00:28:36,783 --> 0:28:39,987
也许有用 它能告诉我们设备的状态

464
00:28:40,687 --> 0:28:45,192
所以我们也可以选择在app中

465
00:28:45,259 --> 0:28:47,895
也许播放连续的声音 比如这个

466
00:28:52,132 --> 0:28:54,434
但烤吐司可能会花几分钟

467
00:28:54,501 --> 0:28:56,803
而一遍遍反复播放这个声音

468
00:28:57,271 --> 0:28:59,706
可能不是我们想要的体验 对吧？

469
00:29:00,707 --> 0:29:03,177
采用更为微妙的声音如何？

470
00:29:03,243 --> 0:29:05,846
渐强和渐弱的计时器的声音

471
00:29:09,049 --> 0:29:10,050
这个似乎可行

472
00:29:11,418 --> 0:29:13,287
但这个过程实际需要音效吗？

473
00:29:13,353 --> 0:29:16,023
因为我们实际在等待的是

474
00:29:16,089 --> 0:29:19,860
是烤吐司完成的时候

475
00:29:20,594 --> 0:29:22,062
这是重要的时刻

476
00:29:22,696 --> 0:29:27,534
所以我们应该播放简洁的通知声音

477
00:29:27,734 --> 0:29:30,237
让用户不要错过 比如这个

478
00:29:32,840 --> 0:29:35,742
好 现在我们一起听下这些声音

479
00:29:36,743 --> 0:29:38,345
首先 我们按下按钮

480
00:29:41,882 --> 0:29:43,283
然后对于下一步我们决定

481
00:29:43,350 --> 0:29:46,186
当这个过程激活时

482
00:29:46,386 --> 0:29:48,789
一直到我们收到通知

483
00:29:50,457 --> 0:29:53,293
非常重要的是 一起倾听这些声音

484
00:29:54,328 --> 0:29:56,296
确保它们和谐融洽

485
00:29:56,363 --> 0:29:59,900
因为这是我们的app

486
00:29:59,967 --> 0:30:01,969
这是我们app的声音

487
00:29:59,967 --> 0:30:01,969
这是我们app的声音

488
00:30:05,906 --> 0:30:08,509
好 现在app设计好了

489
00:30:09,176 --> 0:30:12,312
我想跟大家分享设计任何种类声音时

490
00:30:13,180 --> 0:30:16,250
我们使用的一些关键构建模块

491
00:30:16,416 --> 0:30:17,251
第一个

492
00:30:17,818 --> 0:30:19,620
是音色

493
00:30:21,488 --> 0:30:24,091
大多人能立即听出这个声音

494
00:30:26,560 --> 0:30:27,594
是钢琴声 对吧？

495
00:30:28,896 --> 0:30:30,998
但我们是怎么知道它是钢琴的？

496
00:30:32,332 --> 0:30:34,868
我们怎么知道它不是颤音琴？

497
00:30:39,039 --> 0:30:43,777
这取决于乐器的制作材料

498
00:30:44,678 --> 0:30:47,247
取决于形状和乐器的演奏方式

499
00:30:47,314 --> 0:30:50,817
是使用木槌、锤子

500
00:30:51,752 --> 0:30:55,789
所以这些乐器能演奏完全一样的曲调

501
00:30:56,757 --> 0:30:59,593
对于我们的app

502
00:30:59,793 --> 0:31:04,298
一种友好的不太刺耳

503
00:30:59,793 --> 0:31:04,298
一种友好的不太刺耳

504
00:31:06,733 --> 0:31:10,237
下一个是声音的频率或音调

505
00:31:11,138 --> 0:31:13,707
有些乐器演奏频率非常高

506
00:31:14,608 --> 0:31:16,910
而有些频率非常低

507
00:31:19,413 --> 0:31:22,015
不过非音乐的声音

508
00:31:22,649 --> 0:31:25,385
也可以有很高或很低的频率

509
00:31:25,919 --> 0:31:31,758
通过采取不同的频率

510
00:31:32,059 --> 0:31:38,065
如果我们拿烤面包机

511
00:31:39,233 --> 0:31:42,903
我们以很高的频率播放声音

512
00:31:46,173 --> 0:31:49,610
但如果我们以低频率播放同一个声音

513
00:31:50,544 --> 0:31:53,113
它听起来会像一个大型烤面包机

514
00:31:57,818 --> 0:31:58,719
所以…

515
00:32:00,020 --> 0:32:04,124
接下来是声音的持续时间或长度

516
00:32:05,425 --> 0:32:07,294
声音可以非常简短…

517
00:32:08,462 --> 0:32:09,830
或者持续更长时间…

518
00:32:13,100 --> 0:32:14,935
如果我们设计UI音效

519
00:32:15,135 --> 0:32:19,406
我们知道按钮会连续多次被按下

520
00:32:20,574 --> 0:32:23,810
我们就有必要把声音做得简短微妙

521
00:32:25,279 --> 0:32:26,847
但如果按钮只是偶尔被按下

522
00:32:26,914 --> 0:32:28,949
实际我们的烤吐司app

523
00:32:29,249 --> 0:32:32,452
那么就可以使用稍长稍复杂的声音

524
00:32:35,856 --> 0:32:36,690
实际上

525
00:32:37,157 --> 0:32:40,093
这个声音只会

526
00:32:42,629 --> 0:32:43,931
接下来是响度

527
00:32:44,565 --> 0:32:46,500
或者说振幅或音量

528
00:32:48,101 --> 0:32:51,205
在设计铃声或闹铃时

529
00:32:52,506 --> 0:32:54,508
我们不希望用户错过声音

530
00:32:54,575 --> 0:32:56,877
我们不希望用户错过电话

531
00:32:56,944 --> 0:32:58,645
或闹钟响了却睡过头

532
00:33:04,251 --> 0:33:06,820
我们的声音工程师Mitch

533
00:33:07,788 --> 0:33:09,823
我能听到清晰响亮的铃声

534
00:33:10,490 --> 0:33:15,028
但如果UI声音这么响亮

535
00:33:16,330 --> 0:33:20,234
UI音效只需加一层微妙的交互感

536
00:33:21,335 --> 0:33:22,970
让我们快速回复Mitch

537
00:33:32,045 --> 0:33:36,149
如果我因为环境嘈杂而听不到键盘音

538
00:33:36,617 --> 0:33:38,085
这实际不是问题

539
00:33:38,852 --> 0:33:41,488
但我绝对是不想错过铃声的

540
00:33:44,124 --> 0:33:47,528
现在 回顾下声音的四大构建模块

541
00:33:47,928 --> 0:33:52,866
即音质、频率、持续时间和响度

542
00:33:53,333 --> 0:33:55,235
当你开始考虑

543
00:33:55,702 --> 0:33:58,071
为你的app设计并添加音效时

544
00:33:58,372 --> 0:34:00,174
谨记这些真的很有好处

545
00:33:58,372 --> 0:34:00,174
谨记这些真的很有好处

546
00:34:02,676 --> 0:34:05,279
我今天想跟大家做的分享到此结束了

547
00:34:06,013 --> 0:34:08,482
但在我们结束演讲前

548
00:34:09,716 --> 0:34:14,521
以下是Julian和我想要

549
00:34:17,190 --> 0:34:18,859
细节是设计而来的

550
00:34:19,726 --> 0:34:21,128
即便细节看起来显而易见

551
00:34:21,962 --> 0:34:24,364
即便是像按钮这么简单的东西

552
00:34:25,199 --> 0:34:27,967
即便是像点击声这么简单的东西

553
00:34:30,304 --> 0:34:34,341
你可以从现实世界的元素中获取灵感

554
00:34:35,509 --> 0:34:37,710
但却没有必要逐个照搬

555
00:34:39,179 --> 0:34:43,449
同时请利用软件设计的

556
00:34:43,516 --> 0:34:47,588
去创造出完全独特和新鲜的东西

557
00:34:51,391 --> 0:34:56,830
然后我们看到的动画 感受到的触觉

558
00:34:57,030 --> 0:34:58,732
听到的声音

559
00:34:59,066 --> 0:35:02,970
所有这些都会融合成同一个体验

560
00:34:59,066 --> 0:35:02,970
所有这些都会融合成同一个体验

561
00:35:04,738 --> 0:35:05,672
最后

562
00:35:07,007 --> 0:35:10,844
也是最重要的 请通过尝试去学习

563
00:35:12,212 --> 0:35:14,348
今天我们做了很多尝试

564
00:35:15,315 --> 0:35:20,020
有一些尝试效果不太好

565
00:35:20,621 --> 0:35:23,790
但发现效果的唯一途径

566
00:35:26,560 --> 0:35:31,498
现在 我希望这些

567
00:35:31,765 --> 0:35:34,468
去钻研你可能通常想当然的细节

568
00:35:36,170 --> 0:35:41,542
如果你把这些细节设计好了

569
00:35:43,310 --> 0:35:45,345
谢谢各位的倾听
