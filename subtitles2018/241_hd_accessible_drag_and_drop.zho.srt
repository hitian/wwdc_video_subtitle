1
00:00:18,085 --> 00:00:20,921
嗨 我是Conor Hughes

2
00:00:20,988 --> 00:00:24,491
今天我们来谈谈如何使iOS中

3
00:00:24,892 --> 00:00:25,726
我们开始吧

4
00:00:27,961 --> 00:00:29,963
我们简要地提一下

5
00:00:30,764 --> 00:00:34,434
首先简单复习一下

6
00:00:35,769 --> 00:00:39,706
然后 我们会讲讲

7
00:00:40,641 --> 00:00:42,176
最后 我们将举两个例子

8
00:00:42,242 --> 00:00:45,779
第一个

9
00:00:46,413 --> 00:00:49,249
第二 从一个辅助功能元素中

10
00:00:50,984 --> 00:00:52,953
简单来说

11
00:00:53,020 --> 00:00:56,256
拖放技术始于iOS 11

12
00:00:56,323 --> 00:00:59,326
它为我们的app的用户

13
00:00:59,660 --> 00:01:02,029
提供了强大的数据传输功能

14
00:00:59,660 --> 00:01:02,029
提供了强大的数据传输功能

15
00:01:02,095 --> 00:01:03,397
适于app内部及app之间

16
00:01:04,631 --> 00:01:07,467
拖放引入了互动的概念

17
00:01:07,734 --> 00:01:09,770
它们由app中的视图主管

18
00:01:10,604 --> 00:01:12,005
如果要从视图开始拖动

19
00:01:12,072 --> 00:01:14,741
你为它添加一个

20
00:01:15,943 --> 00:01:18,745
要接受放置

21
00:01:19,680 --> 00:01:21,415
如果你不熟悉这些类

22
00:01:21,481 --> 00:01:23,884
j建议你先看看2017年

23
00:01:23,951 --> 00:01:26,820
“拖放会话简介”来了解一下

24
00:01:27,154 --> 00:01:28,422
然后再回到这个视频

25
00:01:31,058 --> 00:01:32,693
现在我们开始讨论辅助功能

26
00:01:33,060 --> 00:01:35,028
很自然地

27
00:01:35,095 --> 00:01:38,165
如旁白

28
00:01:38,232 --> 00:01:40,033
拖放互动的强大功能

29
00:01:41,835 --> 00:01:45,372
辅助功能拖放API的设计中

30
00:01:45,439 --> 00:01:46,440
重点解决几个特定的问题

31
00:01:47,407 --> 00:01:51,178
首先 你的辅助功能元素

32
00:01:51,778 --> 00:01:54,114
例如 辅助功能元素可能是一个视图

33
00:01:54,181 --> 00:01:56,717
它的子视图主管互动

34
00:01:57,518 --> 00:02:00,320
或者你的元素可能继承了一个视图

35
00:01:57,518 --> 00:02:00,320
或者你的元素可能继承了一个视图

36
00:02:00,387 --> 00:02:02,723
而这个视图主管与其逻辑相关的互动

37
00:02:03,857 --> 00:02:06,994
解决这些问题的办法

38
00:02:07,060 --> 00:02:10,497
允许指定系统中的逻辑拖放

39
00:02:10,997 --> 00:02:13,734
使其可与辅助技术一起使用

40
00:02:14,501 --> 00:02:15,869
我们具体看看这些API

41
00:02:17,738 --> 00:02:19,706
UIAccessibilityDragging

42
00:02:19,773 --> 00:02:21,108
定义了两个属性

43
00:02:21,175 --> 00:02:23,210
来向辅助功能表达拖放

44
00:02:23,944 --> 00:02:27,447
它引入了“拖动源”

45
00:02:28,549 --> 00:02:31,051
拖动源描述从哪里开始

46
00:02:31,118 --> 00:02:32,519
与元素关联的拖动

47
00:02:33,020 --> 00:02:36,023
放置点则描述与元素相关联的

48
00:02:36,089 --> 00:02:37,324
可以放置的地方

49
00:02:37,891 --> 00:02:39,693
要使用这些属性

50
00:02:39,760 --> 00:02:42,095
或重写getter来临时提供数据

51
00:02:44,164 --> 00:02:47,367
这些拖放呈现给辅助技术用户的方式

52
00:02:47,434 --> 00:02:50,437
与辅助自定义操作非常相似

53
00:02:51,238 --> 00:02:52,339
这即辅助功能拖放API

54
00:02:55,876 --> 00:02:58,579
通常 拖动和放置会由系统

55
00:02:58,645 --> 00:03:00,214
自动呈现给辅助功能

56
00:02:58,645 --> 00:03:00,214
自动呈现给辅助功能

57
00:03:01,715 --> 00:03:05,252
如果它们被自动找到

58
00:03:05,919 --> 00:03:09,189
但请注意

59
00:03:09,256 --> 00:03:10,724
会自动呈现

60
00:03:12,025 --> 00:03:13,861
UIAccessibilityDragging协议

61
00:03:13,927 --> 00:03:17,264
允许你准确揭示你需要的互动

62
00:03:17,698 --> 00:03:20,000
无论它们是否存在于视图的结构中

63
00:03:20,934 --> 00:03:23,403
允许为每个互动指定一个好名字

64
00:03:24,805 --> 00:03:26,940
所以 你应该考虑实现它

65
00:03:27,207 --> 00:03:30,077
通过辅助技术

66
00:03:30,143 --> 00:03:31,478
提供最佳体验

67
00:03:33,814 --> 00:03:36,517
现在我们来看一个例子

68
00:03:36,583 --> 00:03:39,286
看看如何用UIAccessibilityDragging协议

69
00:03:41,054 --> 00:03:42,890
假设我们要建一个条形图

70
00:03:43,223 --> 00:03:47,361
我们决定通过设置

71
00:03:48,562 --> 00:03:52,499
我们将尝试启用对条形的拖动

72
00:03:52,566 --> 00:03:53,700
以拖动它的数据

73
00:03:55,836 --> 00:03:57,538
这个例子说明了一个实现过程

74
00:03:57,604 --> 00:04:00,941
重复一下

75
00:03:57,604 --> 00:04:00,941
重复一下

76
00:04:02,376 --> 00:04:05,312
我们将如何去实现这个拖动？

77
00:04:07,414 --> 00:04:08,782
像这样

78
00:04:10,317 --> 00:04:14,121
注意 因为图层不是视图

79
00:04:14,188 --> 00:04:17,190
所以条形图本身设置了互动

80
00:04:17,658 --> 00:04:20,226
在这个itemsForBeginning

81
00:04:22,095 --> 00:04:23,997
取决于被命中的条形图

82
00:04:24,865 --> 00:04:28,001
我们在拖动项目中返回不同的数据

83
00:04:29,136 --> 00:04:31,738
注意 虽然我只有一个拖动互动

84
00:04:31,805 --> 00:04:34,608
我用它来支持多个逻辑拖动

85
00:04:35,209 --> 00:04:38,412
这是一个完全支持的方法

86
00:04:38,478 --> 00:04:41,215
也体现了基本拖放API的强大功能

87
00:04:43,317 --> 00:04:44,952
那怎么加上辅助功能？

88
00:04:45,953 --> 00:04:48,222
一个办法是

89
00:04:49,256 --> 00:04:52,926
从而使图表有辅助功能

90
00:04:53,894 --> 00:04:54,795
就像这样

91
00:04:55,696 --> 00:04:58,065
请注意 我在这里做的是

92
00:04:58,131 --> 00:05:00,801
把我的app内容的逻辑结构数据

93
00:04:58,131 --> 00:05:00,801
把我的app内容的逻辑结构数据

94
00:05:00,868 --> 00:05:02,369
提供给辅助功能运行时间

95
00:05:02,936 --> 00:05:06,707
促成辅助技术以不同的方式呈现内容

96
00:05:07,774 --> 00:05:10,244
我们需要做同样的事情

97
00:05:10,777 --> 00:05:13,113
为此 我们需要对

98
00:05:13,180 --> 00:05:15,983
了解一些更具体的细节

99
00:05:18,151 --> 00:05:19,520
首先我们来看看

100
00:05:19,586 --> 00:05:21,388
UIAccessibility

101
00:05:23,657 --> 00:05:26,326
这个类描述一个互动

102
00:05:26,393 --> 00:05:29,062
通过指定一个点

103
00:05:30,464 --> 00:05:31,532
在视图中

104
00:05:32,833 --> 00:05:34,067
并有特定的名称

105
00:05:34,835 --> 00:05:37,638
因此对于我们的条形图中的一个例子

106
00:05:38,705 --> 00:05:42,042
拖动条形的位置描述符

107
00:05:42,509 --> 00:05:43,610
可能看起来像这样

108
00:05:43,677 --> 00:05:45,679
可以给它命名为

109
00:05:46,146 --> 00:05:48,482
视图就是条形图视图本身

110
00:05:48,549 --> 00:05:51,018
这个点则是位于条形内的一个点

111
00:05:54,087 --> 00:05:54,922
那么 我们如何处理

112
00:05:54,988 --> 00:05:56,990
UIAccessibility

113
00:05:58,058 --> 00:06:00,661
我们将它们赋给前面提到的两个属性

114
00:05:58,058 --> 00:06:00,661
我们将它们赋给前面提到的两个属性

115
00:06:02,396 --> 00:06:03,830
协议中的两个属性是

116
00:06:03,897 --> 00:06:05,766
accessibilityDrag

117
00:06:05,832 --> 00:06:07,768
和accessibilityDrop

118
00:06:09,570 --> 00:06:12,773
DragSourceDescriptors用于显示

119
00:06:12,840 --> 00:06:14,808
在逻辑上与元素相关联的拖动源

120
00:06:15,175 --> 00:06:18,712
DropPointDescriptors则显示

121
00:06:18,779 --> 00:06:20,380
逻辑上与元素相关联的放置位置

122
00:06:21,315 --> 00:06:23,984
这些属性告诉辅助功能

123
00:06:24,051 --> 00:06:27,254
一个给定的元素

124
00:06:29,089 --> 00:06:31,391
要注意的一点是描述符

125
00:06:31,458 --> 00:06:34,361
必须引用实际有互动的视图

126
00:06:34,795 --> 00:06:37,731
所以 你不应该引用窗口中

127
00:06:37,798 --> 00:06:40,467
在主管互动的视图中的一个点

128
00:06:40,534 --> 00:06:42,102
而是指定该视图本身

129
00:06:45,138 --> 00:06:48,208
总之

130
00:06:48,275 --> 00:06:49,977
根本不需要几行代码

131
00:06:50,043 --> 00:06:52,145
你通过在主管互动的视图中

132
00:06:52,212 --> 00:06:54,848
建一个指定该拖动的描述符

133
00:06:54,915 --> 00:06:55,949
并给它一个名字即可

134
00:06:56,383 --> 00:06:57,217
然后设置元素的

135
00:06:57,284 --> 00:07:00,153
accessibilityDrag

136
00:06:57,284 --> 00:07:00,153
accessibilityDrag

137
00:07:00,220 --> 00:07:02,055
加到包含该描述符的数组中

138
00:07:04,558 --> 00:07:06,026
我们回到我们的条形图例子

139
00:07:06,093 --> 00:07:08,462
设置视图辅助功能元素的代码

140
00:07:08,829 --> 00:07:11,298
如何来呈现每个元素的拖动？

141
00:07:14,368 --> 00:07:17,171
我们在视图的坐标空间中

142
00:07:17,604 --> 00:07:19,273
计算该元素所表示的条内的点

143
00:07:20,073 --> 00:07:22,643
用视图中的点建适当的描述符

144
00:07:23,243 --> 00:07:25,679
并设置该元素的

145
00:07:25,746 --> 00:07:26,647
accessibilityDrag

146
00:07:26,713 --> 00:07:27,648
完成了

147
00:07:30,450 --> 00:07:32,119
现在 我们看一个稍微不同的例子

148
00:07:32,719 --> 00:07:35,455
让我们尝试从单个元素呈现多个放置

149
00:07:36,657 --> 00:07:39,726
这可能对像名片这样的情况有用

150
00:07:40,260 --> 00:07:41,762
它的特点是名片足够小

151
00:07:43,163 --> 00:07:47,334
我们将把它作为一个元素

152
00:07:47,868 --> 00:07:49,770
但名片内有多个井点

153
00:07:49,837 --> 00:07:52,806
我们可以将内容投入其中

154
00:07:54,541 --> 00:07:56,510
例如 它可能有一个地方放肖像

155
00:07:56,877 --> 00:08:00,647
和一个可以投入

156
00:07:56,877 --> 00:08:00,647
和一个可以投入

157
00:08:02,883 --> 00:08:03,817
现在我们了解了

158
00:08:03,884 --> 00:08:06,220
UIAccessibilityDragging非正式协议

159
00:08:06,286 --> 00:08:07,821
呈现这些就很简单了

160
00:08:10,357 --> 00:08:11,225
我们可以重写视图的

161
00:08:11,291 --> 00:08:13,961
accessibilityDrop

162
00:08:16,096 --> 00:08:18,198
计算两个井点的中点

163
00:08:18,999 --> 00:08:22,169
然后返回以每个放置点为名的

164
00:08:24,638 --> 00:08:28,342
总之 因为你希望人人都能够用所有

165
00:08:28,408 --> 00:08:31,245
你建到你的app中的酷炫的功能

166
00:08:32,813 --> 00:08:33,847
你想确保

167
00:08:33,914 --> 00:08:36,149
与你的app中

168
00:08:36,216 --> 00:08:38,085
能呈现给辅助功能技术

169
00:08:38,952 --> 00:08:39,886
为此 用

170
00:08:39,953 --> 00:08:42,389
accessibilityDrag

171
00:08:42,456 --> 00:08:44,491
来指定应该呈现哪些拖动

172
00:08:45,359 --> 00:08:47,728
用accessibilityDrop

173
00:08:48,161 --> 00:08:49,897
来指定应该呈现哪些放置

174
00:08:50,497 --> 00:08:52,366
最后 这些属性只是一些数组

175
00:08:52,432 --> 00:08:53,267
组成数组的成员是

176
00:08:53,333 --> 00:08:55,002
UIAccessibility

177
00:08:55,335 --> 00:08:56,803
这些对象为辅助功能描述了

178
00:08:57,137 --> 00:08:59,773
你的app中有哪些拖动和放置

179
00:09:00,107 --> 00:09:01,241
以及如何激活它们

180
00:09:02,976 --> 00:09:05,245
要了解更多信息

181
00:09:06,180 --> 00:09:07,247
感谢你的收看
